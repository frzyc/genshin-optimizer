import artifactSubstatBaseRoll from './artifact_sub_gen.json';
import { SubstatKey } from "../../Types/artifact";

/**
 * Known rarity-5 rolls
 * Data from Arkifix#2254
 * https://discord.com/channels/785153694478893126/795544823804198922/879868973334790154
 */
const rolls: Dict<SubstatKey, [string, ...number[]][]> = {
  critRate_: [
    ["2.7", 0], ["3.1", 1], ["3.5", 2], ["3.9", 3],

    ["5.4", 0, 0], ["5.8", 1, 0], ["6.2", 2, 0], ["6.6", 3, 0],
    ["6.2", 1, 1], ["6.6", 2, 1], ["7.0", 3, 1],
    ["7.0", 2, 2], ["7.4", 3, 2],
    ["7.8", 3, 3],

    ["8.2", 0, 0, 0], ["8.6", 1, 0, 0], ["8.9", 1, 1, 0], ["8.9", 2, 0, 0], ["9.3", 2, 1, 0], ["9.3", 3, 0, 0], ["9.7", 2, 2, 0], ["9.7", 3, 1, 0], ["10.1", 3, 2, 0], ["10.5", 3, 3, 0],
    ["9.3", 1, 1, 1], ["9.7", 2, 1, 1], ["10.1", 2, 2, 1], ["10.1", 3, 1, 1], ["10.5", 3, 2, 1], ["10.9", 3, 3, 1],
    ["10.5", 2, 2, 2], ["10.9", 3, 2, 2], ["11.3", 3, 3, 2],
    ["11.7", 3, 3, 3],

    ["10.9", 0, 0, 0, 0], ["11.3", 1, 0, 0, 0], ["11.7", 1, 1, 0, 0], ["11.7", 2, 0, 0, 0], ["12.1", 1, 1, 1, 0], ["12.1", 2, 1, 0, 0], ["12.1", 3, 0, 0, 0], ["12.4", 2, 1, 1, 0], ["12.4", 3, 1, 0, 0], ["12.8", 3, 2, 0, 0], ["13.2", 2, 2, 2, 0], ["13.2", 3, 2, 1, 0], ["13.6", 3, 2, 2, 0], ["13.6", 3, 3, 1, 0], ["14.0", 3, 3, 2, 0],
    ["13.2", 2, 2, 1, 1], ["13.6", 3, 2, 1, 1], ["14.0", 3, 2, 2, 1], ["14.0", 3, 3, 1, 1], ["14.4", 3, 3, 2, 1],
    ["14.4", 3, 2, 2, 2], ["14.8", 3, 3, 2, 2],

    ["15.2", 1, 1, 1, 1, 0], ["15.6", 3, 1, 1, 0, 0], ["15.9", 3, 2, 1, 0, 0], ["16.3", 3, 3, 1, 0, 0], ["16.7", 3, 3, 2, 0, 0], ["17.1", 3, 3, 2, 1, 0],
    ["17.1", 3, 2, 2, 1, 1], ["17.5", 3, 3, 2, 1, 1], ["17.9", 3, 3, 2, 2, 1],
  ],
  critDMG_: [
    ["5.4", 0], ["6.2", 1], ["7.0", 2], ["7.8", 3],

    ["10.9", 0, 0], ["11.7", 1, 0], ["12.4", 2, 0], ["13.2", 3, 0],
    ["12.4", 1, 1], ["13.2", 2, 1], ["14.0", 3, 1],
    ["14.0", 2, 2], ["14.8", 3, 2],
    ["15.5", 3, 3],

    ["16.3", 0, 0, 0], ["17.1", 1, 0, 0], ["17.9", 1, 1, 0], ["17.9", 2, 0, 0], ["18.7", 2, 1, 0], ["18.7", 3, 0, 0], ["19.4", 2, 2, 0], ["19.4", 3, 1, 0], ["20.2", 3, 2, 0], ["21.0", 3, 3, 0],
    ["18.7", 1, 1, 1], ["19.4", 2, 1, 1], ["20.2", 2, 2, 1], ["20.2", 3, 1, 1], ["21.0", 3, 2, 1], ["21.8", 3, 3, 1],
    ["21.0", 2, 2, 2], ["21.8", 3, 2, 2], ["22.5", 3, 3, 2],
    ["23.3", 3, 3, 3],

    ["22.5", 1, 0, 0, 0], ["23.3", 1, 1, 0, 0], ["23.3", 2, 0, 0, 0], ["24.1", 2, 1, 0, 0], ["24.1", 3, 0, 0, 0], ["24.9", 2, 1, 1, 0], ["24.9", 2, 2, 0, 0], ["24.9", 3, 1, 0, 0], ["25.6", 2, 2, 1, 0], ["25.7", 3, 1, 1, 0], ["25.6", 3, 2, 0, 0], ["26.4", 2, 2, 2, 0], ["26.4", 3, 2, 1, 0], ["26.4", 3, 3, 0, 0], ["27.2", 3, 2, 2, 0], ["27.2", 3, 3, 1, 0], ["28.0", 3, 3, 2, 0], ["28.8", 3, 3, 3, 0],
    ["25.7", 2, 1, 1, 1], ["26.4", 2, 2, 1, 1], ["26.4", 3, 1, 1, 1], ["27.2", 2, 2, 2, 1], ["27.2", 3, 2, 1, 1], ["28.0", 3, 2, 2, 1], ["28.0", 3, 3, 1, 1], ["28.8", 3, 3, 2, 1], ["29.5", 3, 3, 3, 1],
    ["28.0", 2, 2, 2, 2], ["28.7", 3, 2, 2, 2], ["29.5", 3, 3, 2, 2], ["30.3", 3, 3, 3, 2],
    ["31.1", 3, 3, 3, 3],

    ["30.3", 2, 1, 1, 0, 0], ["30.3", 3, 1, 0, 0, 0], ["31.1", 2, 2, 1, 0, 0], ["31.1", 3, 1, 1, 0, 0], ["31.1", 3, 2, 0, 0, 0], ["31.9", 2, 2, 1, 1, 0], ["31.9", 3, 2, 1, 0, 0], ["32.6", 2, 2, 2, 1, 0], ["32.6", 3, 2, 1, 1, 0], ["33.4", 3, 2, 2, 1, 0], ["33.4", 3, 3, 1, 1, 0], ["33.4", 3, 3, 2, 0, 0], ["34.2", 3, 3, 2, 1, 0], ["34.2", 3, 3, 3, 0, 0], ["35.0", 3, 3, 2, 2, 0], ["35.0", 3, 3, 3, 1, 0],
    ["32.7", 3, 1, 1, 1, 1], ["35.0", 3, 2, 2, 2, 1], ["35.0", 3, 3, 2, 1, 1], ["35.7", 3, 3, 2, 2, 1], ["35.8", 3, 3, 3, 1, 1],
    ["36.5", 3, 3, 2, 2, 2], ["37.3", 3, 3, 3, 2, 2], ["38.1", 3, 3, 3, 3, 2],

    ["38.1", 3, 2, 1, 1, 0, 0], ["39.6", 2, 2, 2, 2, 1, 0],
    ["45.8", 3, 3, 3, 3, 3, 2],
  ],
  enerRech_: [
    ["4.5", 0], ["5.2", 1], ["5.8", 2], ["6.5", 3],

    ["9.1", 0, 0], ["9.7", 1, 0], ["10.4", 2, 0], ["11.0", 3, 0],
    ["10.4", 1, 1], ["11.0", 2, 1], ["11.7", 3, 1],
    ["11.7", 2, 2], ["12.3", 3, 2],
    ["13.0", 3, 3],

    ["13.6", 0, 0, 0], ["14.2", 1, 0, 0], ["14.9", 2, 0, 0], ["15.5", 2, 1, 0], ["15.5", 3, 0, 0], ["16.2", 3, 1, 0], ["16.8", 3, 2, 0], ["17.5", 3, 3, 0],
    ["16.8", 2, 2, 1], ["17.5", 3, 2, 1],
    ["17.5", 2, 2, 2], ["18.1", 3, 2, 2], ["18.8", 3, 3, 2],

    ["18.1", 0, 0, 0, 0], ["20.1", 3, 0, 0, 0], ["22.0", 2, 2, 2, 0],
    ["24.6", 3, 3, 2, 2],

    ["27.2", 2, 2, 2, 1, 0],
    ["30.5", 3, 3, 2, 2, 2],
  ],
  def_: [
    ["5.1", 0], ["5.8", 1], ["6.6", 2], ["7.3", 3],

    ["10.2", 0, 0], ["10.9", 1, 0], ["11.7", 2, 0], ["12.4", 3, 0],
    ["11.7", 1, 1], ["12.4", 2, 1], ["13.1", 3, 1],
    ["13.1", 2, 2], ["13.9", 3, 2],
    ["14.6", 3, 3],

    ["15.3", 0, 0, 0], ["16.0", 1, 0, 0], ["16.8", 1, 1, 0], ["16.8", 2, 0, 0], ["17.5", 2, 1, 0], ["17.5", 3, 0, 0], ["18.2", 2, 2, 0], ["18.2", 3, 1, 0], ["19.0", 3, 2, 0], ["19.7", 3, 3, 0],
    ["17.5", 1, 1, 1], ["18.2", 2, 1, 1], ["19.0", 2, 2, 1], ["19.0", 3, 1, 1], ["19.7", 3, 2, 1], ["20.4", 3, 3, 1],
    ["20.4", 3, 2, 2], ["21.1", 3, 3, 2], ["21.9", 3, 3, 3],

    ["21.1", 1, 0, 0, 0], ["22.6", 2, 1, 0, 0], ["24.1", 2, 2, 1, 0], ["24.1", 3, 1, 1, 0], ["24.1", 3, 2, 0, 0], ["24.8", 3, 3, 0, 0], ["25.5", 3, 2, 2, 0], ["25.5", 3, 3, 1, 0], ["26.2", 3, 3, 2, 0], ["27.0", 3, 3, 3, 0],
    ["26.2", 3, 3, 1, 1], ["27.0", 3, 3, 2, 1],
    ["27.7", 3, 3, 2, 2],
    ["29.2", 3, 3, 3, 3],

    ["28.4", 2, 1, 1, 0, 0], ["29.2", 2, 2, 1, 0, 0],
  ],
  def: [
    ["16", 0], ["19", 1], ["21", 2], ["23", 3],

    ["32", 0, 0], ["35", 1, 0], ["37", 2, 0], ["39", 3, 0],
    ["37", 1, 1], ["39", 2, 1], ["42", 3, 1],
    ["42", 2, 2], ["44", 3, 2],
    ["46", 3, 3],

    ["49", 0, 0, 0], ["51", 1, 0, 0], ["53", 1, 1, 0], ["53", 2, 0, 0], ["56", 2, 1, 0], ["56", 3, 0, 0], ["58", 2, 2, 0], ["58", 3, 1, 0], ["60", 3, 2, 0], ["63", 3, 3, 0],
    ["56", 1, 1, 1], ["58", 2, 1, 1], ["60", 2, 2, 1], ["60", 3, 1, 1], ["63", 3, 2, 1], ["65", 3, 3, 1],
    ["62", 2, 2, 2], ["65", 3, 2, 2], ["67", 3, 3, 2],
    ["69", 3, 3, 3],

    ["69", 1, 1, 0, 0], ["72", 3, 0, 0, 0], ["74", 3, 1, 0, 0], ["76", 2, 2, 1, 0], ["79", 3, 2, 1, 0], ["81", 3, 2, 2, 0], ["81", 3, 3, 1, 0], ["83", 3, 3, 2, 0], ["86", 3, 3, 3, 0],
    ["79", 2, 2, 1, 1], ["81", 3, 2, 1, 1], ["86", 3, 3, 2, 1],
    ["86", 3, 2, 2, 2], ["90", 3, 3, 3, 2],

    ["97", 3, 2, 1, 1, 0], ["97", 2, 2, 1, 1, 1],
  ],
  atk_: [], // TODO
  hp_: [], // TODO
  atk: [], // TODO
  hp: [], // TODO
  eleMas: [], // TODO
}
// https://oeis.org/A123400
const ehrlich = [1, 2, 1, 2, 1, 3, 2, 1, 2, 1, 2, 3, 1, 2, 1, 2, 1, 3, 2, 1, 2, 1, 2, 4, 3, 1, 3, 1, 3, 2, 1, 3, 1, 3, 1, 2, 3, 1, 3, 1, 3, 2, 1, 3, 1, 3, 1, 4, 2, 3, 2, 3, 2, 1, 3, 2, 3, 2, 3, 1, 2, 3, 2, 3, 2, 1, 3, 2, 3, 2, 3, 4, 1, 2, 1, 2, 1, 3, 2, 1, 2, 1, 2, 3, 1, 2, 1, 2, 1, 3, 2, 1, 2, 1, 2, 4, 3, 1, 3, 1, 3, 2, 1, 3, 1, 3, 1, 2, 3, 1, 3, 1, 3, 2, 1, 3, 1, 3, 1, 5, 4, 2, 4, 2, 4, 3, 2, 4, 2, 4, 2, 3, 4, 2, 4, 2, 4, 3, 2, 4, 2, 4, 2, 1, 3, 4, 3, 4, 3, 2, 4, 3, 4, 3, 4, 2, 3, 4, 3, 4, 3, 2, 4, 3, 4, 3, 4, 1, 2, 3, 2, 3, 2, 4, 3, 2, 3, 2, 3, 4, 2, 3, 2, 3, 2, 4, 3, 2, 3, 2, 3, 1, 4, 2, 4, 2, 4, 3, 2, 4, 2, 4, 2, 3, 4, 2, 4, 2, 4, 3, 2, 4, 2, 4, 2, 1, 3, 4, 3, 4, 3, 2, 4, 3, 4, 3, 4, 2, 3, 4, 3, 4, 3, 2, 4, 3, 4, 3, 4, 5, 1, 2, 1, 2, 1, 3, 2, 1, 2, 1, 2, 3, 1, 2, 1, 2, 1, 3, 2, 1, 2, 1, 2, 4, 3, 1, 3, 1, 3, 2, 1, 3, 1, 3, 1, 2, 3, 1, 3, 1, 3, 2, 1, 3, 1, 3, 1, 4, 2, 3, 2, 3, 2, 1, 3, 2, 3, 2, 3, 1, 2, 3, 2, 3, 2, 1, 3, 2, 3, 2, 3, 4, 1, 2, 1, 2, 1, 3, 2, 1, 2, 1, 2, 3, 1, 2, 1, 2, 1, 3, 2, 1, 2, 1, 2, 4, 3, 1, 3, 1, 3, 2, 1, 3, 1, 3, 1, 2, 3, 1, 3, 1, 3, 2, 1, 3, 1, 3, 1, 5, 4, 2, 4, 2, 4, 3, 2, 4, 2, 4, 2, 3, 4, 2, 4, 2, 4, 3, 2, 4, 2, 4, 2, 1, 3, 4, 3, 4, 3, 2, 4, 3, 4, 3, 4, 2, 3, 4, 3, 4, 3, 2, 4, 3, 4, 3, 4, 1, 2, 3, 2, 3, 2, 4, 3, 2, 3, 2, 3, 4, 2, 3, 2, 3, 2, 4, 3, 2, 3, 2, 3, 1, 4, 2, 4, 2, 4, 3, 2, 4, 2, 4, 2, 3, 4, 2, 4, 2, 4, 3, 2, 4, 2, 4, 2, 1, 3, 4, 3, 4, 3, 2, 4, 3, 4, 3, 4, 2, 3, 4, 3, 4, 3, 2, 4, 3, 4, 3, 4, 5, 1, 2, 1, 2, 1, 3, 2, 1, 2, 1, 2, 3, 1, 2, 1, 2, 1, 3, 2, 1, 2, 1, 2, 4, 3, 1, 3, 1, 3, 2, 1, 3, 1, 3, 1, 2, 3, 1, 3, 1, 3, 2, 1, 3, 1, 3, 1, 4, 2, 3, 2, 3, 2, 1, 3, 2, 3, 2, 3, 1, 2, 3, 2, 3, 2, 1, 3, 2, 3, 2, 3, 4, 1, 2, 1, 2, 1, 3, 2, 1, 2, 1, 2, 3, 1, 2, 1, 2, 1, 3, 2, 1, 2, 1, 2, 4, 3, 1, 3, 1, 3, 2, 1, 3, 1, 3, 1, 2, 3, 1, 3, 1, 3, 2, 1, 3, 1, 3, 1, 5, 4, 2, 4, 2, 4, 3, 2, 4, 2, 4, 2, 3, 4, 2, 4, 2, 4, 3, 2, 4, 2, 4, 2, 1, 3, 4, 3, 4, 3, 2, 4, 3, 4, 3, 4, 2, 3, 4, 3, 4, 3, 2, 4, 3, 4, 3, 4, 1, 2, 3, 2, 3, 2, 4, 3, 2, 3, 2, 3, 4, 2, 3, 2, 3, 2, 4, 3, 2, 3, 2, 3, 1, 4, 2, 4, 2, 4, 3, 2, 4, 2, 4, 2, 3, 4, 2, 4, 2, 4, 3, 2, 4, 2, 4, 2, 1, 3, 4, 3, 4, 3, 2, 4, 3, 4, 3, 4, 2, 3, 4, 3, 4, 3, 2, 4, 3, 4, 3, 4, 6, 5]

/** Whether `callback` returns `true` for some permutations of `indices` */
function somePerm(indices: number[], callback: (current: number[]) => boolean): boolean {
  const base = [...indices]
  const count = indices.reduce((a, _, i) => a * (i + 1), 1)
  if (count > ehrlich.length)
    throw new Error(`Permutation too large`)

  for (let i = 0; i < count; i++) {
    if (callback(base)) return true

    const x = ehrlich[i], tmp = base[x]
    base[x] = base[0]
    base[0] = tmp
  }
  return false
}

describe.skip("Artifact Roll Model", () => {
  for (const [key, entries] of Object.entries(rolls)) {
    const rolls = artifactSubstatBaseRoll["5"][key]

    type Model = (indices: number[]) => string

    // TODO: Test different models
    const model1: Model = indices => {
      const theoretical = indices.reduce((a, b) => a + rolls[b], 0)
      return key.endsWith('_')
        ? (Math.round(theoretical * 1000) / 10).toFixed(1)
        : Math.round(theoretical).toFixed(0)
    }

    for (const [string, ...values] of entries) {
      it(`should support ${string} ${key} with rolls [${values.map(i => rolls[i])}]`, () => {
        expect(somePerm(values, i => model1(i) === string)).toBeTruthy()
      })
    }
  }
})
