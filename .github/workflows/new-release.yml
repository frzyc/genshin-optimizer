name: New Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get version
        id: get-version
        run: |
          echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
      - name: Set git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Change version
        if: steps.get-version.outputs.version != ''
        run: |
          TEMP_FILE=$(mktemp)
          jq --arg v "${{ steps.get-version.outputs.version }}" '.version = $v' package.json > $TEMP_FILE
          cp $TEMP_FILE package.json
          git add .
          git commit -m "${{ steps.get-version.outputs.version }}"
      - name: Get commit msg
        id: get-commit-msg
        run: |
          if [[ -z "${{ steps.get-version.outputs.version }}" ]]; then
            echo "title-release=Release ref $(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          else
            echo "title-release=Release version ${{ steps.get-version.outputs.version }} $(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          fi
      - name: Create PR
        run: |
          git status
          git push origin HEAD:actions/new-release --force
          gh pr create --base $(git rev-parse --abbrev-ref HEAD) --head actions/new-release --title '${{ steps.get-commit-msg.outputs.title-release }}' --body '' --label release
        env:
          GH_TOKEN: ${{ github.token }}
