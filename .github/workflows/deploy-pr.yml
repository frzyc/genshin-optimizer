name: Deploy PR
run-name: Deploy ${{ github.event.number }}${{ github.event.inputs.deployment_name }} - ${{ github.event.pull_request.title }}${{ github.event.inputs.ref }}

on:
  pull_request:
    branches:
      - master
    types: [opened, reopened, synchronize, ready_for_review]
  workflow_dispatch:
    inputs:
      repo_full_name:
        description: 'Full repository name to build from.'
        type: string
        default: 'frzyc/genshin-optimizer'
      ref:
        description: 'Ref to build from. Can be a commit hash.'
        type: string
        default: 'master'
      deployment_name:
        description: 'Name for the deployment. This will determine the URL. If you choose a name that is already deployed, it will overwrite that deployment.'
        type: string
        default: 'master'

jobs:
  deploy:
    # Skip for drafts or for forked PRs, as they lack secret access and cannot deploy
    if: |
      (github.event_name == 'workflow_dispatch')
      || (
        (github.event.pull_request.draft != true)
        && (github.event.pull_request.head.repo.full_name == github.repository)
      )
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Determine build information
        id: build-info
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]
          then
            echo "repo_name=${{ github.event.inputs.repo_full_name }}" >> $GITHUB_OUTPUT
          else
            echo "repo_name=${{ github.repository }}" >> $GITHUB_OUTPUT
          fi
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]
          then
            echo "ref=${{ github.event.inputs.ref }}" >> $GITHUB_OUTPUT
          else
            echo "ref=${{ github.ref }}" >> $GITHUB_OUTPUT
          fi
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]
          then
            echo "deploy_path=${{ github.event.inputs.deployment_name }}" >> $GITHUB_OUTPUT
          else
            echo "deploy_path=${{ github.event.number }}" >> $GITHUB_OUTPUT
          fi
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ steps.build-info.outputs.repo_name }}
          ref: ${{ steps.build-info.outputs.ref }}
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - name: Yarn install
        run: |
          yarn install --immutable --immutable-cache
      - name: Setup .env
        run: |
          printf '%s' "$ENVFILE" > apps/frontend/.env.local
        env:
          ENVFILE: ${{ secrets.ENVFILE }}
      - name: Output date
        id: output-date
        if: github.event_name != 'workflow_dispatch'
        run: echo "date=$(date -u)" >> $GITHUB_OUTPUT
      - name: Maintain comment
        uses: actions-cool/maintain-one-comment@v3
        if: github.event_name != 'workflow_dispatch'
        with:
          body: |
            [${{ steps.output-date.outputs.date }}] - Building version ${{ github.sha }}
          body-include: '<!-- Created by actions-cool/maintain-one-comment -->'
      - name: Build genshin-optimizer
        run: |
          NX_URL_GITHUB_GO_CURRENT_VERSION="https://github.com/${{ steps.build-info.outputs.repo_name }}/commit/$(git rev-parse HEAD)" \
          NX_DAEMON="false" \
          yarn run nx run frontend:build-webpack:production --base-href=""
      - name: Checkout external gh-pages
        uses: actions/checkout@v3
        with:
          repository: ${{ vars.PR_REPO }}
          ssh-key: ${{ secrets.PR_REPO_SSH_KEY }}
          ref: gh-pages
          path: gh-pages
      - name: Move to external gh-pages
        run: |
          mkdir --parents "gh-pages/${{ steps.build-info.outputs.deploy_path }}"
          rm -rfv "gh-pages/${{ steps.build-info.outputs.deploy_path }}" || true
          mv "dist/apps/frontend" "gh-pages/${{ steps.build-info.outputs.deploy_path }}"
      - name: Make commit to deploy
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add ./${{ steps.build-info.outputs.deploy_path }}
          git commit -m "build ${{ steps.build-info.outputs.deploy_path }} ${{ steps.build-info.outputs.repo_name }}@$(cd .. && git rev-parse HEAD)"
          git push origin gh-pages
        working-directory: gh-pages
      - name: Export url
        id: export-url
        run: |
          IFS=/ read -r account repo <<< ${{ vars.PR_REPO }}
          echo "url=Deployed $(git rev-parse HEAD) to https://$account.github.io/$repo/${{ steps.build-info.outputs.deploy_path }} (Takes 3-5 minutes after this completes to be available)" >> $GITHUB_OUTPUT
          echo "Deployed $(git rev-parse HEAD) to https://$account.github.io/$repo/${{ steps.build-info.outputs.deploy_path }} (Takes 3-5 minutes after this completes to be available)"
      - name: Output date
        id: output-date2
        if: github.event_name != 'workflow_dispatch'
        run: echo "date=$(date -u)" >> $GITHUB_OUTPUT
      - name: Maintain comment
        uses: actions-cool/maintain-one-comment@v3
        if: github.event_name != 'workflow_dispatch'
        with:
          body: |
            [${{ steps.output-date2.outputs.date }}] - ${{ steps.export-url.outputs.url }}
          body-include: '<!-- Created by actions-cool/maintain-one-comment -->'
