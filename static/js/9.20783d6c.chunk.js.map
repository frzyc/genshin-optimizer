{"version":3,"sources":["Components/StarDisplay.js","Weapon/Weapon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Data/WeaponData.js","Components/StatIcon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","Data/CharacterData.js","../node_modules/react-bootstrap/esm/Badge.js","Character/CharacterCard.js","Character/CharacterDisplay.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Character/Character.js","Stat.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Util/ConditionalsUtil.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"names":["StarIcon","icon","faStar","Stars","props","className","colored","stars","Array","keys","map","_","i","Weapon","this","Error","getWeaponDataImport","WeaponDataImport","getLevelName","levelKey","defVal","LevelNameData","getLevelIndex","WeaponLevelKeys","indexOf","getWeaponName","weaponKey","WeaponData","name","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","refineIndex","charFinalStats","character","passiveDescription","getWeaponDescription","description","getWeaponConditional","conditional","getWeaponImg","img","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","getWeaponSubStatKey","subStatKey","getWeaponBonusStat","stats","getWeaponsOfType","weaponType","Object","fromEntries","entries","filter","getWeaponTypeName","WeaponTypeData","getWeaponMainStatValWithOverride","weaponObj","overrideMainVal","key","getWeaponSubStatValWithOverride","overrideSubVal","getWeaponConditionalStat","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","_arrayLikeToArray","arr","len","length","arr2","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","then","imp","default","StatIcon","hp_base","faTint","hp_final","hp_","hp","atk_base","faFistRaised","atk_final","atk_","atk","def_base","faShieldAlt","def_final","def_","def","ele_mas","faMagic","crit_rate","faDice","crit_dmg","faDiceD20","ener_rech","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","stam","CharacterSpecializedStatKey","Badge","React","forwardRef","_ref","ref","bsPrefix","variant","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","CharacterCard","useReducer","x","forceUpdate","useEffect","Promise","all","Character","getCharacterDataImport","Artifact","getDataImport","characterId","onEdit","onDelete","CharacterDatabase","getCharacter","build","calculateBuild","setToSlots","characterKey","weapon","constellation","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","weaponName","weaponMainVal","weaponSubKey","weaponSubVal","weaponLevelName","weaponPassiveName","cardClassName","bg","text","Header","header","xs","size","onClick","faEdit","faTrashAlt","Body","style","cursor","src","getThumb","getStar","thumbnail","getName","getStatValueWithOverride","Stat","getStatName","getStatUnit","getSetEffects","artifactSetName","getSetName","highestNum","Math","max","unit","statVal","finalStats","toFixed","fixedUnit","footer","Footer","Link","to","pathname","selectedCharacterId","CharacterDisplayCardPromise","CharacterDisplayCard","lazy","CharacterDisplay","deleteCharacter","id","removeCharacter","editCharacter","setState","charIdToEdit","showEditor","scrollRef","current","scrollIntoView","behavior","cancelEditCharacter","DatabaseInitAndVerify","state","ReactGA","pageview","createRef","charIdList","getCharacterIdList","Suspense","fallback","editable","onClose","lg","md","faPlus","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","equippedArtifacts","values","forEach","artid","ArtifactDatabase","moveToNewLocation","removeCharacterById","getBaseStatValue","getSpecializedStatKey","getSpeicalizedStatVal","getLevel","includes","characterObj","getCDataObj","baseStat","getIndexFromlevelkey","charKey","getElementalName","elementalKey","ElementalData","getAllCharacterKeys","star","getElementalKeys","getConstellationName","constellationName","getTitles","titles","getlevelKeys","getlevelNames","getAscension","getSpecializedStat","specializeStat","thumbImg","getCard","cardImg","getTalentImg","talentKey","talent","getConstellationImg","constIndex","getTalentName","getTalentLevelBoost","talents","talentBoost","boostEntry","find","getTalentLevelKey","withBoost","talentLvlKey","talentLevelKeys","levelBoost","clamp","getTalentDocument","document","getTalentFields","fields","getTalentStats","ascension","getTalentStatsAll","statsArr","getTalentConditional","conditionalKey","doc","cond","section","tempCond","getTalentConditionalStats","val","getTalentConditionalFields","getTalentStatKey","skillKey","elemental","dmgMode","autoInfused","reactionMode","charEleKey","isAutoElemental","auto","infusable","eleKey","getTalentStatKeyVariant","isAutoInfusable","getDisplayStatKeys","atkKeys","startsWith","replace","ElementToReactionKeys","hasOverride","baseStatOverrides","equipArtifacts","artifactIds","artIdsOnCharacter","artIdsNotOnCharacter","getSlotKeys","slotKey","artNotOnChar","getArtifact","location","artOnChar","notCharLoc","equipArtifact","updateCharacter","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactConditionals","artifactSetEffectsStats","getArtifactSetEffectsStats","deepClone","art","mainStatKey","getMainStatValue","numStars","artifactsAssumeFull","substats","substat","stat","setKey","srcKey","setNumKey","srcKey2","getConditionalStats","AttachLazyFormulas","statKeys","char_ele_key","overrides","hasOwnProperty","specialStatKey","specializedStatVal","addStatsObj","formulaOverrides","talentConditionals","weaponStats","subKey","subVal","bonusStats","conditionalStats","htmlStatsData","StatData","getStatNamePretty","pretty","getStatNameRaw","getStatNameWithPercent","getStatVariant","printStat","f","expand","printFormula","formulaOverride","OverrideFormulas","printOverrideFormula","options","FormulaText","overrideKey","OverrideFormulasText","formulaText","statName","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_dmg","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_dmg","electrocharged_multi","electrocharged","superconduct_dmg","superconduct_multi","superconduct","swirl_dmg","swirl_multi","swirl","shatter_dmg","shatter_multi","shattered","crystalize_dmg","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","trans_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","abs","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","noelle_burst_atk","_classCallCheck","instance","Constructor","_toConsumableArray","arrayLikeToArray","iter","from","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","arguments","source","getOwnPropertyDescriptors","defineProperties","_createForOfIteratorHelper","allowArrayLike","it","F","s","n","e","normalCompletion","didErr","step","_e2","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","phy_dmg_bonus","ele_dmg_bonus","2","ArtifactSubStatsData","ArtifactSlotsData","ArtifactBase","rollData","float","roll","maxNumRoll","round","rollOption","sum","reduce","accu","v","closeEnoughFloat","closeEnoughInt","slice","reverse","valid","parseFloat","isNaN","msg","isFloat","getSubstatRollData","rolls","getRolls","totalAllowableRolls","min","efficiency","clampPercent","join","currentEfficiency","maximumEfficiency","subStatValidations","validateSubStat","some","currentNumOfRolls","cur","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","totalPossbleUpgrade","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","getArtifactIDFromSlot","artifactToSwapWith","swapLocations","unequipArtifactOnSlot","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","getPieceName","getPieceIcon","icons","getSetEffectsObj","setEffects","getArtifactSetNumStats","artifactSetEffect","artArr","parseInt","setNumKeys","getSetEffectText","setEffectText","getSetEffectConditional","getSlotName","getSlotIcon","getSlotMainStatKeys","getSlotNameWithIcon","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","getBaseSubRollNumLow","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","ceil","numberOfSubstatUnlocked","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","hasSetEffect","setEffectObj","getConditionalNum","condStats","conditionals","srcKeyObj","index","findIndex","splice","newCond","fieldName","selectedConditionalNum","selectedConditional","curConditional","maxStack","_unsupportedIterableToArray","minLen","prototype","toString","call","constructor","test"],"mappings":"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","file":"static/js/9.20783d6c.chunk.js","sourcesContent":["import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = (props) => <span className={props.colored ? \"text-5star\" : \"\"}>\r\n  {props.stars ? [...Array(props.stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport Stat from '../Stat';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nexport default function CharacterCard(props) {\r\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => forceUpdate())\r\n  }, [])\r\n  let { characterId, onEdit, onDelete } = props\r\n  let character = CharacterDatabase.getCharacter(characterId)\r\n  if (!character) return null;\r\n  let build = Character.calculateBuild(character)\r\n  let { setToSlots } = build\r\n\r\n  let { characterKey, name, weapon, constellation } = character\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponName = Weapon.getWeaponName(weapon.key)\r\n  let weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\r\n  let weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\r\n  let weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const statkeys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\",]\r\n  return (<Card className={props.cardClassName} bg={props.bg ? props.bg : \"darkcontent\"} text=\"lightfont\">\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {props.header ? props.header : <h6><b>{name}</b></h6>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {props.onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {props.onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={onEdit} style={{ cursor: onEdit ? \"pointer\" : \"default\" }}>\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={Character.getThumb(characterKey)} className={`w-100 h-auto grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h4>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h4>\r\n          <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n          <span>{`Lvl. ${Character.getStatValueWithOverride(character, \"char_level\")} C${constellation}`}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {Object.entries(Artifact.getSetEffects(setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = Artifact.getSetName(key)\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = build.finalStats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {props.footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        selectedCharacterId: characterId\r\n      }}>\r\n        Generate Builds\r\n        </Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy } from 'react';\r\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport Character from './Character';\r\nimport CharacterCard from './CharacterCard';\r\nimport CharacterDatabase from './CharacterDatabase';\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCardPromise = import('../Character/CharacterDisplayCard');\r\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\r\n\r\nexport default class CharacterDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = {\r\n      charIdToEdit: \"\",\r\n      showEditor: false,\r\n    }\r\n    ReactGA.pageview('/character')\r\n  }\r\n\r\n  deleteCharacter = (id) => {\r\n    Character.removeCharacter(id)\r\n    this.forceUpdate()\r\n  }\r\n\r\n  editCharacter = (id) =>\r\n    this.setState({ charIdToEdit: id, showEditor: true },\r\n      () => this.scrollRef.current.scrollIntoView({ behavior: \"smooth\" }))\r\n\r\n  cancelEditCharacter = () =>\r\n    this.setState({ charIdToEdit: null, showEditor: false })\r\n\r\n  componentDidMount() {\r\n    this.scrollRef = React.createRef()\r\n  }\r\n  render() {\r\n    let charIdList = CharacterDatabase.getCharacterIdList()\r\n    return (<Container ref={this.scrollRef}>\r\n      {/* editor/character detail display */}\r\n      {this.state.showEditor ? <Row className=\"mt-2\"><Col>\r\n        <React.Suspense fallback={<span>Loading...</span>}>\r\n          <CharacterDisplayCard editable\r\n            characterId={this.state.charIdToEdit}\r\n            onClose={this.cancelEditCharacter}\r\n            footer={<Button variant=\"danger\" onClick={this.cancelEditCharacter}>Close</Button>}\r\n          />\r\n        </React.Suspense>\r\n      </Col></Row> : null}\r\n\r\n      <Row className=\"mt-2\">\r\n        {this.state.showEditor ? null : <Col lg={4} md={6} className=\"mb-2\">\r\n          <Card className=\"h-100\" bg=\"darkcontent\" text=\"lightfont\">\r\n            <Card.Header className=\"pr-2\">\r\n              <span>Add New Character</span>\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex flex-column justify-content-center\">\r\n              <Row className=\"d-flex flex-row justify-content-center\">\r\n                <Col xs=\"auto\">\r\n                  <Button onClick={() => this.editCharacter(\"\")}>\r\n                    <h1><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></h1>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>}\r\n        {charIdList.map(id =>\r\n          <Col key={id} lg={4} md={6} className=\"mb-2\">\r\n            <CharacterCard\r\n              cardClassName=\"h-100\"\r\n              characterId={id}\r\n              onDelete={() => this.deleteCharacter(id)}\r\n              onEdit={() => this.editCharacter(id)}\r\n            />\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Container>)\r\n\r\n  }\r\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { AttachLazyFormulas, ElementToReactionKeys } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getCDataObj(charKey)?.talent?.[talentKey]?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getCDataObj(charKey)?.talent?.[talentKey]?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getCDataObj(charKey)?.talent?.[talentKey]?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"formulaOverrides\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    if (skillKey === \"phy\") return `phy_${dmgMode}`\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    if (skillKey === \"phy\") return \"physical\"\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_base\") || false\r\n    return character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals, initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals && artifactConditionals.forEach(conditional => {\r\n      let { srcKey: setKey, srcKey2: setNumKey } = conditional\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditional.conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n    AttachLazyFormulas(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"formulaOverrides\") {\r\n        initialStats.formulaOverrides = [...(initialStats.formulaOverrides || []), ...val]\r\n        return\r\n      }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, OverrideFormulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static printFormula = (statKey, stats, formulaOverrides = [], expand = true) => {\r\n    for (const formulaOverride of formulaOverrides)\r\n      if (OverrideFormulas[formulaOverride?.key]?.key === statKey)\r\n        return Stat.printOverrideFormula(stats, formulaOverride.key, formulaOverride.options, false)\r\n    return FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n      (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n  }\r\n\r\n  static printOverrideFormula = (stats, overrideKey, options, expand = true) =>\r\n    OverrideFormulasText?.[overrideKey] && typeof OverrideFormulasText?.[overrideKey].formulaText === \"function\" &&\r\n    (<span>{OverrideFormulasText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  trans_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(0, \"ele_mas\")} * exp^(-0.000505 * {f(0, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulasText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.value}%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {})\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getRolls(value, rollData, float = false) {\r\n    let roll = null;\r\n    let maxNumRoll = Math.round(value / rollData[0])\r\n    if (!maxNumRoll) return null;\r\n    let rollOption = (val, arr) => {\r\n      if (roll) return;\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (float) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val)) {\r\n            roll = arr;\r\n            return;\r\n          }\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val)) {\r\n            roll = arr;\r\n            return\r\n          }\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        rollOption(value, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(value, [])\r\n    return roll;\r\n  }\r\n  static validateSubStat(state, substat) {\r\n    if (!substat || !substat.value) return { valid: true }\r\n    let value = parseFloat(substat.value);\r\n    if (isNaN(value)) return { valid: false, msg: `Invalid Input` }\r\n    let numStars = state.numStars\r\n    if (!numStars) return { valid: false, msg: `Artifact Stars not set.` }\r\n    let isFloat = Stat.getStatUnit(substat.key) === \"%\"\r\n    let rollData = this.getSubstatRollData(substat.key, numStars);\r\n    let rolls = this.getRolls(value, rollData, isFloat)\r\n\r\n    if (!rolls || rolls.length === 0) return { valid: false, msg: `Substat cannot be rolled 0 times.` };\r\n    let totalAllowableRolls = ArtifactStarsData[numStars]?.numUpgradesOrUnlocks - (4 - ArtifactStarsData[numStars]?.subBaseHigh) + 1;//+1 for its base roll\r\n    if (rolls.length > totalAllowableRolls) return { valid: false, msg: `Substat cannot be rolled more than ${totalAllowableRolls} times.` };\r\n\r\n    let min = rollData[0] * rolls.length;\r\n    let max = rollData[rollData.length - 1] * rolls.length;\r\n    return { valid: true, efficiency: clampPercent(((value - min) / (max - min)) * 100), msg: `This substat was rolled ${rolls.length} time(s). Values: [${rolls.join(\", \")}]`, rolls }\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static artifactValidation(state) {\r\n    let currentEfficiency = 0, maximumEfficiency = 0;\r\n    let subStatValidations = state.substats.map(substat => Artifact.validateSubStat(state, substat));\r\n    for (const substat of subStatValidations)\r\n      if (!substat.valid)\r\n        return { subStatValidations, valid: false, msg: \"One of the substat is invalid.\", currentEfficiency, maximumEfficiency }\r\n\r\n    //if a substat has >=2 rolls, when not all of them have been unlocked//if a substat has >=2 rolls, when not all of them have been unlocked\r\n    if (subStatValidations.some(substat => substat?.rolls?.length > 1) && subStatValidations.some((substat) => !substat.rolls))\r\n      return { subStatValidations, valid: false, msg: \"One of the substat have >1 rolls, but not all substats are unlocked.\", currentEfficiency, maximumEfficiency }\r\n    let currentNumOfRolls = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls ? cur.rolls.length : 0), 0);\r\n    let rollsRemaining = Artifact.rollsRemaining(state.level, state.numStars);\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(state.numStars);\r\n\r\n    if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n      return { subStatValidations, valid: false, msg: `Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `, currentEfficiency, maximumEfficiency }\r\n\r\n    let totalCurrentEfficiency = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls && cur.efficiency ? (cur.efficiency * cur.rolls.length) : 0), 0);\r\n    currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { valid: true, subStatValidations, currentNumOfRolls, rollsRemaining, totalPossbleUpgrade: totalPossbleRolls, currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      let hasSetEffect = false\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (setEffectObj.stats && Object.keys(setEffectObj.stats).length > 0) {\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n            hasSetEffect = true\r\n          }\r\n          if (setEffectObj.conditional) {\r\n            let conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n            if (conditionalNum) {\r\n              let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n              if (Object.keys(condStats) > 0) {\r\n                setEffect[setNumKey] = deepClone(condStats)\r\n                hasSetEffect = true\r\n              }\r\n            }\r\n          }\r\n        })\r\n      if (hasSetEffect)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"sourceRoot":""}