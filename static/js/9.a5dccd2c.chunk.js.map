{"version":3,"sources":["Weapon/Weapon.js","StatDependency.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","../node_modules/react-bootstrap/esm/Badge.js","Data/WeaponData.js","DatabaseUtil.js","Components/StatIcon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","Data/CharacterData.js","Character/CharacterCard.js","Character/CharacterDisplay.js","Character/Character.js","Stat.js","Util/Util.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Character/CharacterDatabase.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Util/ConditionalsUtil.js","Artifact/ArtifactDatabase.js","Data/ElementalData.js","StatData.js","Components/StarDisplay.js"],"names":["Weapon","this","Error","getWeaponDataImport","WeaponDataImport","getLevelName","levelKey","defVal","LevelNameData","getLevelIndex","WeaponLevelKeys","indexOf","getWeaponName","weaponKey","WeaponData","name","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","refineIndex","charFinalStats","character","passiveDescription","getWeaponDescription","description","getWeaponConditional","conditional","getWeaponImg","img","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","getWeaponSubStatKey","subStatKey","getWeaponBonusStat","stats","getWeaponsOfType","weaponType","Object","fromEntries","entries","filter","getWeaponTypeName","WeaponTypeData","getWeaponMainStatValWithOverride","weaponObj","overrideMainVal","key","getWeaponSubStatValWithOverride","overrideSubVal","getWeaponConditionalStat","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","map","formulaKeyDependency","registerDependency","operation","testObj","dependency","Set","keys","StatData","forEach","k","defineProperty","get","add","GetDependencies","initialStats","Formulas","dependencies","modifiers","InsertDependencies","has","Modifiers","s","formula","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","Badge","React","forwardRef","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","then","imp","default","DatabaseInitAndVerify","localStorage","removeItem","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","values","art","valid","location","getCharacter","keyMapping","setKey","mainStatKey","endsWith","replace","maximumEfficiency","Artifact","substatsValidation","updateArtifact","chars","getCharacterDatabase","equippedArtifacts","slotKey","artid","getArtifact","undefined","artifactConditionals","cond","srcKey","srcKey2","dmgMode","updateCharacter","StatIcon","hp_base","faTint","hp_final","hp_","hp","atk_base","faFistRaised","atk_final","atk_","atk","def_base","faShieldAlt","def_final","def_","def","ele_mas","faMagic","crit_rate","faDice","crit_dmg","faDiceD20","ener_rech","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","icon","_defineProperty","obj","value","enumerable","configurable","writable","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","stam","CharacterSpecializedStatKey","CharacterCard","useReducer","x","forceUpdate","useEffect","Promise","all","Character","getCharacterDataImport","getDataImport","characterId","onEdit","onDelete","build","calculateBuild","setToSlots","characterKey","weapon","constellation","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","weaponName","weaponMainVal","weaponSubKey","weaponSubVal","weaponLevelName","weaponPassiveName","cardClassName","bg","text","Header","header","xs","size","onClick","faEdit","faTrashAlt","Body","style","cursor","src","getThumb","getStar","thumbnail","getName","stars","colored","getStatValueWithOverride","Stat","getStatName","getStatUnit","getSetEffects","arr","artifactSetName","getSetName","highestNum","Math","max","unit","statVal","finalStats","toFixed","fixedUnit","footer","Footer","Link","to","pathname","selectedCharacterId","CharacterDisplayCardPromise","CharacterDisplayCard","lazy","CharacterDisplay","deleteCharacter","id","removeCharacter","editCharacter","setState","charIdToEdit","showEditor","scrollRef","current","scrollIntoView","behavior","cancelEditCharacter","state","ReactGA","pageview","createRef","charIdList","getCharacterIdList","Suspense","fallback","editable","onClose","lg","md","faPlus","moveToNewLocation","removeCharacterById","getBaseStatValue","getSpecializedStatKey","getSpeicalizedStatVal","getLevel","includes","characterObj","getCDataObj","baseStat","getIndexFromlevelkey","charKey","getElementalName","elementalKey","ElementalData","getAllCharacterKeys","star","getElementalKeys","getConstellationName","constellationName","getTitles","titles","getlevelKeys","getlevelNames","getAscension","getSpecializedStat","specializeStat","thumbImg","getCard","cardImg","getTalentImg","talentKey","getTalent","getConstellationImg","constIndex","talent","getTalentName","getTalentLevelBoost","talents","i","talentBoost","boostEntry","find","getTalentLevelKey","withBoost","talentLvlKey","talentLevelKeys","levelBoost","clamp","getTalentDocument","document","getTalentFields","fields","getTalentStats","ascension","getTalentStatsAll","statsArr","push","getTalentConditional","conditionalKey","doc","section","tempCond","getTalentConditionalStats","val","getTalentConditionalFields","getTalentStatKey","skillKey","elemental","autoInfused","reactionMode","charEleKey","isAutoElemental","auto","infusable","eleKey","getTalentStatKeyVariant","isAutoInfusable","getDisplayStatKeys","atkKeys","startsWith","ElementToReactionKeys","hasOverride","baseStatOverrides","equipArtifacts","artifactIds","artIdsOnCharacter","artIdsNotOnCharacter","getSlotKeys","artNotOnChar","artOnChar","notCharLoc","equipArtifact","artifacts","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","deepClone","getMainStatValue","numStars","artifactsAssumeFull","substats","substat","stat","setNumKey","length","parseInt","getConditionalStats","PreprocessFormulas","statKeys","char_ele_key","overrides","hasOwnProperty","specialStatKey","specializedStatVal","addStatsObj","talentConditionals","weaponStats","subKey","subVal","bonusStats","conditionalStats","htmlStatsData","getStatNamePretty","pretty","getStatNameRaw","getStatNameWithPercent","getStatVariant","printStat","f","expand","getPrintableFormulaStatKeyList","statList","ModifiersText","skey","formulaKeys","FormulaText","modifiersTextKeys","printFormula","printModifier","overrideKey","options","formulaText","statName","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_dmg","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_dmg","electrocharged_multi","electrocharged","superconduct_dmg","superconduct_multi","superconduct","swirl_dmg","swirl_multi","swirl","shatter_dmg","shatter_multi","shattered","crystalize_dmg","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","trans_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","abs","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","noelle_burst_atk","sweep_multiplier","mona_passive2_hydro_ele_dmg_bonus","getRandomElementFromArray","array","floor","random","getRandomIntInclusive","min","ceil","loadFromLocalStorage","data","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","closeEnoughFloat","a","b","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","Array","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","arguments","source","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","phy_dmg_bonus","ele_dmg_bonus","2","ArtifactSubStatsData","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","rolls","efficiency","getSubstatEfficiency","getArtifactEfficiency","currentEfficiency","errMsgs","some","currentNumOfRolls","reduce","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","getArtifactIDFromSlot","artifactToSwapWith","swapLocations","unequipArtifactOnSlot","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","getPieceName","getPieceIcon","icons","getSetEffectsObj","setEffects","getArtifactSetNumStats","artifactSetEffect","artArr","setNumKeys","getSetEffectText","setEffectText","getSetEffectConditional","getSlotName","getSlotIcon","getSlotMainStatKeys","getSlotNameWithIcon","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","accu","v","reverse","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","initiated","characterDatabase","charIdIndex","isInvalid","char","getIdNameList","addCharacter","dchar","charid","equipArtifactBuild","_createForOfIteratorHelper","allowArrayLike","it","F","n","done","e","_e","err","normalCompletion","didErr","step","next","_e2","conditionals","srcKeyObj","index","findIndex","splice","newCond","fieldName","selectedConditionalNum","selectedConditional","curConditional","maxStack","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","reactionName","dmgKey","dmgName","str","atkTypeName","dmgModeName","ele_key","hydro_ele_dmg_bonus","formulas","StarIcon","faStar","Stars","_"],"mappings":"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","file":"static/js/9.a5dccd2c.chunk.js","sourcesContent":["import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","import { Formulas, Modifiers, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nconst formulaKeyDependency = {}\r\nconst registerDependency = (name, operation) => {\r\n  let testObj = {}\r\n  let dependency = new Set()\r\n  Object.keys(StatData).forEach(k => {\r\n    Object.defineProperty(testObj, k, {\r\n      get: () => {\r\n        dependency.add(k)\r\n        return 0\r\n      }\r\n    })\r\n  })\r\n  operation(testObj)\r\n  formulaKeyDependency[name] = [...dependency]\r\n}\r\nObject.keys(Formulas).forEach(key => registerDependency(key, s => Formulas[key](s)))\r\nObject.keys(Modifiers).forEach(name => registerDependency(name, s => Modifiers[name].formula({})(s)))\r\n\r\nif (process.env.NODE_ENV === \"development\") console.log(formulaKeyDependency)\r\n\r\nfunction GetDependencies(initialStats, keys = Object.keys(Formulas)) {\r\n  let dependencies = new Set(), { modifiers = {} } = initialStats\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n\r\n  for (const name in modifiers) {\r\n    if (Modifiers[name].key === key) {\r\n      formulaKeyDependency[name].forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n      dependencies.add(name)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  GetDependencies,\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //remove the old error/prone id lists, if it still exists\r\n  localStorage.removeItem(\"artifact_id_list\")\r\n  localStorage.removeItem(\"character_id_list\")\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  if (CharacterDatabase.populateDatebaseFromLocalStorage() |\r\n    ArtifactDatabase.populateDatebaseFromLocalStorage()) {\r\n    //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n    let arts = ArtifactDatabase.getArtifactDatabase();\r\n    Object.values(arts).forEach(art => {\r\n      let valid = true\r\n      if (art.location && !CharacterDatabase.getCharacter(art.location)) {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n      if (!art.maximumEfficiency) {\r\n        Artifact.substatsValidation(art)\r\n        valid = false\r\n      }\r\n      if (!valid)\r\n        ArtifactDatabase.updateArtifact(art)\r\n    })\r\n\r\n    let chars = CharacterDatabase.getCharacterDatabase();\r\n    Object.values(chars).forEach(character => {\r\n      let valid = true;\r\n      //verify character database equipment validity\r\n      let equippedArtifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([slotKey, artid]) => {\r\n        if (!ArtifactDatabase.getArtifact(artid)) {\r\n          valid = false\r\n          return [slotKey, undefined]\r\n        }\r\n        return [slotKey, artid]\r\n      }))\r\n      if (!valid)\r\n        character.equippedArtifacts = equippedArtifacts\r\n\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      if (character.artifactConditionals) character.artifactConditionals = character.artifactConditionals.filter(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n      if (!valid) {\r\n        CharacterDatabase.updateCharacter(character)\r\n      }\r\n    })\r\n  }\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport Stat from '../Stat';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nexport default function CharacterCard(props) {\r\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => forceUpdate())\r\n  }, [])\r\n  let { characterId, onEdit, onDelete } = props\r\n  let character = CharacterDatabase.getCharacter(characterId)\r\n  if (!character) return null;\r\n  let build = Character.calculateBuild(character)\r\n  let { setToSlots } = build\r\n\r\n  let { characterKey, name, weapon, constellation } = character\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponName = Weapon.getWeaponName(weapon.key)\r\n  let weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\r\n  let weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\r\n  let weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const statkeys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\",]\r\n  return (<Card className={props.cardClassName} bg={props.bg ? props.bg : \"darkcontent\"} text=\"lightfont\">\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {props.header ? props.header : <h6><b>{name}</b></h6>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {props.onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {props.onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={onEdit} style={{ cursor: onEdit ? \"pointer\" : \"default\" }}>\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={Character.getThumb(characterKey)} className={`w-100 h-auto grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h4>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h4>\r\n          <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n          <span>{`Lvl. ${Character.getStatValueWithOverride(character, \"char_level\")} C${constellation}`}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {Object.entries(Artifact.getSetEffects(setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = Artifact.getSetName(key)\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = build.finalStats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {props.footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        selectedCharacterId: characterId\r\n      }}>\r\n        Generate Builds\r\n        </Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy } from 'react';\r\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport Character from './Character';\r\nimport CharacterCard from './CharacterCard';\r\nimport CharacterDatabase from './CharacterDatabase';\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCardPromise = import('../Character/CharacterDisplayCard');\r\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\r\n\r\nexport default class CharacterDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = {\r\n      charIdToEdit: \"\",\r\n      showEditor: false,\r\n    }\r\n    ReactGA.pageview('/character')\r\n  }\r\n\r\n  deleteCharacter = (id) => {\r\n    Character.removeCharacter(id)\r\n    this.forceUpdate()\r\n  }\r\n\r\n  editCharacter = (id) =>\r\n    this.setState({ charIdToEdit: id, showEditor: true },\r\n      () => this.scrollRef.current.scrollIntoView({ behavior: \"smooth\" }))\r\n\r\n  cancelEditCharacter = () =>\r\n    this.setState({ charIdToEdit: null, showEditor: false })\r\n\r\n  componentDidMount() {\r\n    this.scrollRef = React.createRef()\r\n  }\r\n  render() {\r\n    let charIdList = CharacterDatabase.getCharacterIdList()\r\n    return (<Container ref={this.scrollRef}>\r\n      {/* editor/character detail display */}\r\n      {this.state.showEditor ? <Row className=\"mt-2\"><Col>\r\n        <React.Suspense fallback={<span>Loading...</span>}>\r\n          <CharacterDisplayCard editable\r\n            characterId={this.state.charIdToEdit}\r\n            onClose={this.cancelEditCharacter}\r\n            footer={<Button variant=\"danger\" onClick={this.cancelEditCharacter}>Close</Button>}\r\n          />\r\n        </React.Suspense>\r\n      </Col></Row> : null}\r\n\r\n      <Row className=\"mt-2\">\r\n        {this.state.showEditor ? null : <Col lg={4} md={6} className=\"mb-2\">\r\n          <Card className=\"h-100\" bg=\"darkcontent\" text=\"lightfont\">\r\n            <Card.Header className=\"pr-2\">\r\n              <span>Add New Character</span>\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex flex-column justify-content-center\">\r\n              <Row className=\"d-flex flex-row justify-content-center\">\r\n                <Col xs=\"auto\">\r\n                  <Button onClick={() => this.editCharacter(\"\")}>\r\n                    <h1><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></h1>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>}\r\n        {charIdList.map(id =>\r\n          <Col key={id} lg={4} md={6} className=\"mb-2\">\r\n            <CharacterCard\r\n              cardClassName=\"h-100\"\r\n              characterId={id}\r\n              onDelete={() => this.deleteCharacter(id)}\r\n              onEdit={() => this.editCharacter(id)}\r\n            />\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Container>)\r\n\r\n  }\r\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\nimport { GetDependencies } from \"../StatDependency\"\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    if (skillKey === \"phy\") return `phy_${dmgMode}`\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    if (skillKey === \"phy\") return \"physical\"\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_base\") || false\r\n    return character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats)\r\n    PreprocessFormulas(dependencies, stats.modifiers)(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"modifiers\")\r\n        return initialStats.modifiers = { ...(initialStats.modifiers || {}), ...val }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey, constellation)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, Modifiers, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = []) => {\r\n    //remove keys that will be overriden by the modifier\r\n    for (const statKey of statList)\r\n      if (Object.keys(ModifiersText).includes(statKey))\r\n        statList = statList.filter(skey => skey !== Modifiers[statKey].key)\r\n    let formulaKeys = Object.keys(FormulaText)\r\n    let modifiersTextKeys = Object.keys(ModifiersText)\r\n    return statList.filter(statKey => formulaKeys.includes(statKey) || modifiersTextKeys.includes(statKey))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    if (statKey in ModifiersText)\r\n      return Stat.printModifier(stats, statKey, modifiers[statKey], false)\r\n    return FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n      (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n  }\r\n\r\n  static printModifier = (stats, overrideKey, options, expand = true) =>\r\n    typeof ModifiersText?.[overrideKey]?.formulaText === \"function\" &&\r\n    (<span>{ModifiersText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (Modifiers[statKey]) statKey = Modifiers[statKey].key\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  trans_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(0, \"ele_mas\")} * exp^(-0.000505 * {f(0, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst ModifiersText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.sweep_multiplier * 100}%</span>,\r\n  },\r\n  mona_passive2_hydro_ele_dmg_bonus: {\r\n    formulaText: () => (o) => <span>{f(o, \"hydro_ele_dmg_bonus\")} + {f(o, \"ener_rech\")} * 20%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n  ModifiersText,\r\n};\r\n","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance\r\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {})\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, numStars, rolls) => {\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars);\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let min = rollData[0] * len;\r\n    let max = rollData[rollData.length - 1] * len;\r\n    return clampPercent(((sum - min) / (max - min)) * 100)\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      if (rollArr.length > 1) substat.rollArr = rollArr\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, numStars, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, numStars, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect) > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n      if (Object.keys(condStats).length > 0) {\r\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n        Object.entries(condStats).forEach(([statKey, value]) =>\r\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\r\n      }\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else if (!conditionalNum && index < 0) { //nothing to change\r\n      return conditionals\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => artifactDatabase[id] || null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  all_dmg_bonus: { name: \"All DMG Bonus\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elementry Mastery Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elementry Mastery Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elementry Mastery Multiplier Z\", unit: \"multi\" },\r\n  trans_reaction_base_multi: { name: \"Transformation Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_final: (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.phy_dmg,\r\n  plunge_crit_dmg: (s) => s.phy_crit_dmg,\r\n  plunge_avg_dmg: (s) => s.phy_avg_dmg,\r\n  plunge_bonus_multi: (s) => s.phy_bonus_multi,\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * s.ele_mas_multi_x * 1.5 * s.trans_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * s.ele_mas_multi_x * 2 * s.trans_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * s.ele_mas_multi_x * 2 * s.trans_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * s.ele_mas_multi_x * 1.5 * s.trans_reaction_base_multi,\r\n  trans_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s[`${ele}_ele_dmg`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_ele_crit_dmg`],\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_ele_avg_dmg`],\r\n  plunge_bonus_multi: (s, ele) => s[`${ele}_ele_bonus_multi`],\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.all_dmg_bonus) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst Modifiers = {\r\n  noelle_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => s.atk_final + s.def_final * options.sweep_multiplier\r\n  },\r\n  mona_passive2_hydro_ele_dmg_bonus: {\r\n    key: \"hydro_ele_dmg_bonus\",\r\n    formula: () => (s) => s.hydro_ele_dmg_bonus + s.ener_rech * 0.2\r\n  }\r\n}\r\n\r\nfunction PreprocessFormulas(formulaKeys, modifiers) {\r\n  let formulas = formulaKeys.map(key => {\r\n    if (key in Modifiers) return [Modifiers[key].key, Modifiers[key].formula(modifiers[key])]\r\n    if (key in Formulas) return [key, Formulas[key]]\r\n    let value = StatData[key][\"default\"] ?? 0\r\n    return [key, (s) => (s[key] ?? value)]\r\n  })\r\n\r\n  return stat => formulas.forEach(([key, formula]) => {\r\n    stat[key] = formula(stat)\r\n  })\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  Modifiers,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  PreprocessFormulas,\r\n}\r\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n"],"sourceRoot":""}