{"version":3,"sources":["Components/StarDisplay.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","Components/CustomFormControl.js","Data/WeaponData.js","Data/ArtifactData.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","Components/ConditionalSelector.js","DatabaseUtil.js","Data/CharacterData.js","Components/StatIcon.js","Assets/Weapons/Swords/Swords.js","Assets/Weapons/Swords/Weapon_Dull_Blade.png","Assets/Weapons/Swords/Weapon_Silver_Sword.png","Assets/Weapons/Swords/Weapon_Cool_Steel.png","Assets/Weapons/Swords/Weapon_Dark_Iron_Sword.png","Assets/Weapons/Swords/Weapon_Fillet_Blade.png","Assets/Weapons/Swords/Weapon_Harbinger_of_Dawn.png","Assets/Weapons/Swords/Weapon_Skyrider_Sword.png","Assets/Weapons/Swords/Weapon_Traveler's_Handy_Sword.png","Assets/Weapons/Swords/Weapon_Blackcliff_Longsword.png","Assets/Weapons/Swords/Weapon_Favonius_Sword.png","Assets/Weapons/Swords/Weapon_Iron_Sting.png","Assets/Weapons/Swords/Weapon_Lion's_Roar.png","Assets/Weapons/Swords/Weapon_Prototype_Rancour.png","Assets/Weapons/Swords/Weapon_Royal_Longsword.png","Assets/Weapons/Swords/Weapon_Sacrificial_Sword.png","Assets/Weapons/Swords/Weapon_The_Alley_Flash.png","Assets/Weapons/Swords/Weapon_The_Black_Sword.png","Assets/Weapons/Swords/Weapon_The_Flute.png","Assets/Weapons/Swords/Weapon_Sword_of_Descension.png","Assets/Weapons/Swords/festering_fang.png","Assets/Weapons/Swords/Weapon_Aquila_Favonia.png","Assets/Weapons/Swords/Weapon_Skyward_Blade.png","Assets/Weapons/Swords/summit_shaper.png","Assets/Weapons/Claymores/Claymores.js","Assets/Weapons/Claymores/Weapon_Waster_Greatsword.png","Assets/Weapons/Claymores/Weapon_Old_Merc's_Pal.png","Assets/Weapons/Claymores/Weapon_Bloodtainted_Greatsword.png","Assets/Weapons/Claymores/Weapon_Debate_Club.png","Assets/Weapons/Claymores/Weapon_Ferrous_Shadow.png","Assets/Weapons/Claymores/Weapon_Quartz.png","Assets/Weapons/Claymores/Weapon_Skyrider_Greatsword.png","Assets/Weapons/Claymores/Weapon_White_Iron_Greatsword.png","Assets/Weapons/Claymores/Weapon_Blackcliff_Slasher.png","Assets/Weapons/Claymores/Weapon_Favonius_Greatsword.png","Assets/Weapons/Claymores/Weapon_Lithic_Blade.png","Assets/Weapons/Claymores/Weapon_Prototype_Aminus.png","Assets/Weapons/Claymores/Weapon_Rainslasher.png","Assets/Weapons/Claymores/Weapon_Royal_Greatsword.png","Assets/Weapons/Claymores/Weapon_Serpent_Spine.png","Assets/Weapons/Claymores/Weapon_The_Bell.png","Assets/Weapons/Claymores/Weapon_Whiteblind.png","Assets/Weapons/Claymores/Weapon_Sacrificial_Greatsword.png","Assets/Weapons/Claymores/snow_tombed_starsilver.png","Assets/Weapons/Claymores/Weapon_Skyward_Pride.png","Assets/Weapons/Claymores/Weapon_Wolf's_Gravestone.png","Assets/Weapons/Claymores/Weapon_The_Unforged.png","Assets/Weapons/Polearms/Polearms.js","Assets/Weapons/Polearms/Weapon_Beginner's_Protector.png","Assets/Weapons/Polearms/Weapon_Iron_Point.png","Assets/Weapons/Polearms/Weapon_Black_Tassel.png","Assets/Weapons/Polearms/Weapon_Halberd.png","Assets/Weapons/Polearms/Weapon_White_Tassel.png","Assets/Weapons/Polearms/Weapon_Blackcliff_Pole.png","Assets/Weapons/Polearms/Weapon_Crescent_Pike.png","Assets/Weapons/Polearms/Weapon_Deathmatch.png","Assets/Weapons/Polearms/Weapon_Dragon's_Bane.png","Assets/Weapons/Polearms/Weapon_Lithic_Spear.png","Assets/Weapons/Polearms/Weapon_Prototype_Grudge.png","Assets/Weapons/Polearms/Weapon_Favonius_Lance.png","Assets/Weapons/Polearms/Weapon_Royal_Spear.png","Assets/Weapons/Polearms/dragonspine_spear.png","Assets/Weapons/Polearms/Weapon_Vortex_Vanquisher.png","Assets/Weapons/Polearms/Weapon_Primordial_Jade_Winged-Spear.png","Assets/Weapons/Polearms/Weapon_Skyward_Spine.png","Assets/Weapons/Bows/Bows.js","Assets/Weapons/Bows/Weapon_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Seasoned_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Ebony_Bow.png","Assets/Weapons/Bows/Weapon_Messenger.png","Assets/Weapons/Bows/Weapon_Raven_Bow.png","Assets/Weapons/Bows/Weapon_Recurve_Bow.png","Assets/Weapons/Bows/Weapon_Sharpshooter's_Oath.png","Assets/Weapons/Bows/Weapon_Slingshot.png","Assets/Weapons/Bows/Weapon_The_Stringless.png","Assets/Weapons/Bows/Weapon_Alley_Hunter.png","Assets/Weapons/Bows/Weapon_Blackcliff_Warbow.png","Assets/Weapons/Bows/Weapon_Compound_Bow.png","Assets/Weapons/Bows/Weapon_Favonius_Warbow.png","Assets/Weapons/Bows/Weapon_Prototype_Crescent.png","Assets/Weapons/Bows/Weapon_Royal_Bow.png","Assets/Weapons/Bows/Weapon_Rust.png","Assets/Weapons/Bows/Weapon_Sacrificial_Bow.png","Assets/Weapons/Bows/Weapon_The_Viridescent_Hunt.png","Assets/Weapons/Bows/Weapon_Skyward_Harp.png","Assets/Weapons/Bows/Weapon_Amos'_Bow.png","Assets/Weapons/Bows/dreams_of_dragonfell.png","Assets/Weapons/Catalysts/Catalysts.js","Assets/Weapons/Catalysts/Weapon_Apprentice's_Notes.png","Assets/Weapons/Catalysts/Weapon_Pocket_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Amber_Catalyst.png","Assets/Weapons/Catalysts/Weapon_Emerald_Orb.png","Assets/Weapons/Catalysts/Weapon_Magic_Guide.png","Assets/Weapons/Catalysts/Weapon_Otherworldly_Story.png","Assets/Weapons/Catalysts/Weapon_Thrilling_Tales_of_Dragon_Slayers.png","Assets/Weapons/Catalysts/Weapon_Twin_Nephrite.png","Assets/Weapons/Catalysts/Weapon_Blackcliff_Amulet.png","Assets/Weapons/Catalysts/Weapon_Favonius_Codex.png","Assets/Weapons/Catalysts/Weapon_Mappa_Mare.png","Assets/Weapons/Catalysts/Weapon_Prototype_Malice.png","Assets/Weapons/Catalysts/Weapon_Royal_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Sacrificial_Fragments.png","Assets/Weapons/Catalysts/Weapon_Solar_Pearl.png","Assets/Weapons/Catalysts/Weapon_The_Widsith.png","Assets/Weapons/Catalysts/Weapon_Wine_and_Song.png","Assets/Weapons/Catalysts/Weapon_Eye_of_Perception.png","Assets/Weapons/Catalysts/Weapon_Frostbearer.png","Assets/Weapons/Catalysts/Weapon_Lost_Prayer_to_the_Sacred_Winds.png","Assets/Weapons/Catalysts/Weapon_Skyward_Atlas.png","Assets/Weapons/Catalysts/Weapon_Memory_of_Dust.png","Assets/Assets.js","Assets/Weapons/Weapons.js","Assets/Element_Anemo.png","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Artifact/PercentBadge.js","../node_modules/react-bootstrap/esm/Badge.js","Artifact/ArtifactCard.js","StatDependency.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/StatDisplay.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","TestPage/TestDisplay.js","Character/Character.js","Util/Util.js","Stat.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Artifact/ArtifactDatabase.js","Util/ConditionalsUtil.js","Data/ElementalData.js","StatData.js","Weapon/Weapon.js"],"names":["StarIcon","icon","faStar","Stars","props","className","colored","stars","Array","keys","map","_","i","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","FloatFormControl","placeholder","onValueChange","disabled","useState","focus","setFocus","type","toString","onChange","e","target","parseFloat","onFocus","onBlur","IntFormControl","parseInt","WeaponData","WeaponDataImport","then","imp","default","WeaponLevelKeys","LevelNameData","WeaponTypeData","sword","claymore","catalyst","bow","polearm","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","Object","ElementalData","forEach","key","push","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","hp","atk","hp_","atk_","def_","phy_dmg_bonus","ele_dmg_bonus","ele_mas","ener_rech","crit_rate","crit_dmg","heal_bonu","2","ArtifactSubStatsData","def","ArtifactSlotsData","flower","name","stats","plume","sands","goblet","circlet","resolveContainerRef","ref","_ref","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","ConditionalSelector","conditional","conditionalNum","setConditional","defEle","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","DatabaseInitAndVerify","localStorage","removeItem","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","values","art","valid","location","getCharacter","keyMapping","setKey","mainStatKey","endsWith","replace","updateArtifact","chars","getCharacterDatabase","character","equippedArtifacts","fromEntries","entries","slotKey","artid","getArtifact","undefined","artifactConditionals","filter","cond","srcKey","srcKey2","characterKey","levelKey","constellation","talentConditionals","ascension","Character","getAscension","talentKey","conditionalKey","talentLvlKey","getTalentLevelKey","getTalentConditional","dmgMode","updateCharacter","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","stam","CharacterSpecializedStatKey","StatIcon","hp_base","faTint","hp_final","atk_base","faFistRaised","atk_final","def_base","faShieldAlt","def_final","faMagic","faDice","faDiceD20","faSync","faFirstAid","StatIconEle","statKey","DullBlade","SilverSword","CoolSteel","DarkIronSword","FilletBlade","HarbingerOfDawn","SkyriderSword","TravelersHandySword","BlackcliffLongsword","FavoniusSword","IronSting","LionsRoar","PrototypeRancour","RoyalLongsword","SacrificialSword","TheAlleyFlash","TheBlackSword","TheFlute","SwordOfDescension","FesteringDesire","AquilaFavonia","SkywardBlade","SummitShaper","WasterGreatsword","OldMercsPal","BloodtaintedGreatsword","DebateClub","FerrousShadow","Quartz","SkyriderGreatsword","WhiteIronGreatsword","BlackcliffSlasher","FavoniusGreatsword","LithicBlade","PrototypeAminus","Rainslasher","RoyalGreatsword","SerpentSpine","TheBell","Whiteblind","SacrificialGreatsword","SnowTombedStarsilver","SkywardPride","WolfsGravestone","TheUnforged","polearms","BeginnersProtector","IronPoint","BlackTassel","Halberd","WhiteTassel","BlackcliffPole","CrescentPike","Deathmatch","DragonsBane","LithicSpear","PrototypeGrudge","FavoniusLance","RoyalSpear","DragonspineSpear","VortexVanquisher","PrimordialJadeWingedSpear","SkywardSpine","bows","HuntersBow","SeasonedHuntersBow","EbonyBow","Messenger","RavenBow","RecurveBow","SharpshootersOath","Slingshot","TheStringless","AlleyHunter","BlackcliffWarbow","CompoundBow","FavoniusWarbow","PrototypeCrescent","RoyalBow","Rust","SacrificialBow","TheViridescentHunt","SkywardHarp","AmosBow","DreamsOfDragonfell","catalysts","ApprenticesNotes","PocketGrimoire","AmberCatalyst","EmeraldOrb","MagicGuide","OtherworldlyStory","ThrillingTalesOfDragonSlayers","TwinNephrite","BlackcliffAgate","FavoniusCodex","MappaMare","PrototypeMalice","RoyalGrimoire","SacrificialFragments","SolarPearl","TheWidsith","WineAndSong","EyeOfPerception","Frostbearer","LostPrayerToTheSacredWinds","SkywardAtlas","MemoryOfDust","Assets","weapons","swords","claymores","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","resin","fragile","condensed","exp_books","advice","wit","experience","PercentBadge","percent","children","badgeColor","isNaN","Math","floor","Badge","React","forwardRef","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","ArtifactCard","charId","Artifact","equipArtifactOnChar","this","artifactId","forceUpdate","artifactValidation","locationChar","border","numStars","bg","Header","xs","md","src","getArtifactPieceIcon","thumbnail","getArtifactPieceName","getArtifactSlotNameWithIcon","Body","Title","getArtifactSetName","Stat","getStatName","getMainStatValue","getStatUnit","substats","stat","subStatValidation","subStatValidations","numRolls","rolls","length","efficiency","effOpacity","statName","toFixed","style","opacity","tooltip","msg","currentEfficiency","maximumEfficiency","Footer","equipOnChar","id","char","placement","overlay","pointerEvents","lock","faLock","faLockOpen","onEdit","faEdit","onDelete","faTrashAlt","formulaKeyDependency","DependencyStatKeys","formulaOverrides","dependencies","GetDependencyStats","formulaOverride","OverrideFormulas","dependency","includes","Set","formulaKeys","Formulas","k","statkeys","StatData","keyDependencies","subdependencies","testObj","defineProperty","get","configurable","AttachLazyFormulas","getDependency","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","TabContext","Provider","SelectableContext","TabContent","decoratedBsPrefix","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","Tab","_React$Component","apply","arguments","_inheritsLoose","prototype","render","Error","Container","Content","Pane","createContext","useAccordionToggle","contextEventKey","AccordionContext","AccordionToggle","accordionOnClick","AccordionCollapse","Collapse","Children","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","_objectWithoutProperties","source","excluded","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","DisplayStats","build","editable","otherProps","statVal","getStatValueWithOverride","unit","buildDiff","finalStats","Col","hasOverride","fixedUnit","DisplayNewBuildDiff","equippedBuild","newBuild","CharacterArtifactPane","showOther","setShowOther","compareAgainstEquipped","setState","eleKey","getElementalKey","statKeys","otherStatKeys","getElementalKeys","ele","displayStatProps","displayNewBuildProps","Row","Card","Button","xl","equipArtifacts","artifactIds","sm","lg","getArtifactSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getArtifactSetEffectConditional","ConditionalsUtil","getConditionalNum","conditionalStats","getArtifactConditionalStats","val","conditionalElement","cnum","state","setStateArtifactConditional","getArtifactSetEffectText","StatInput","prependEle","defaultValue","restProps","InputGroup","Prepend","Text","Append","OverlayTrigger","Tooltip","faUndo","CharacterOverviewPane","setOverride","setConstellation","editLevel","setEditLevel","elementKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","getName","Image","getStar","clamp","getLevel","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","refineIndex","getWeaponConditionalStat","getWeaponConditional","conditionalEle","faQuoteLeft","getWeaponRarity","DropdownButton","title","getWeaponName","reverse","star","arr","Dropdown","ItemText","getWeaponsOfType","rarity","weaponObj","Divider","getLevelName","faGavel","getWeaponPassiveDescription","getWeaponDescription","editingOther","SetEditingOther","additionalKeys","displayStatKeys","editStatKeys","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","getStatNameRaw","CharacterTalentPane","skillDisplayProps","ContextAwareToggle","callback","currentEventKey","decoratedOnClick","expanded","faWindowMinimize","faWindowMaximize","ToggleButtonGroup","ToggleButton","href","rel","immunityStatKey","elementImmunity","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","autoInfused","flat","FormulaText","statsDisplayKeys","formula","printOverrideFormula","options","printFormula","printStat","tKey","tText","SkillDisplayCard","subtitle","asc","enabled","onClickTitle","talentLimits","header","levelBoost","infuseBtn","getElementalName","tLvl","talentLevelKeys","statsEle","talentStats","getTalentStats","ListGroup","index","getTalentImg","getTalentName","Subtitle","getTalentDocument","section","talentText","fields","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","FieldDisplay","field","fieldText","fieldBasic","basicVal","faQuestionCircle","fieldVal","finalVal","round","fieldEquippedVal","diff","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","child","CharacterDisplayCard","forceUpdateComponent","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","characterId","getInitialState","Promise","all","getCharacterDataImport","getWeaponDataImport","getArtifactDataImport","deepClone","addCharacter","footer","onClose","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","faTimes","defaultActiveKey","Nav","Link","getCDataObj","talent","skill","initialState","auto","burst","ListGroupItem","action","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","horizontal","horizontalVariant","initialBsPrefix","AbstractNav","TestDisplay","moveToNewLocation","removeCharacterById","defVal","getSpecializedStatKey","getSpeicalizedStatVal","getWeaponMainStatValWithOverride","characterObj","baseStat","getIndexFromlevelkey","elementalKey","constellationName","titles","getSpecializedStat","specializeStat","thumbImg","cardImg","img","constIndex","getTalentLevelBoost","talents","talentBoost","boostEntry","find","withBoost","getTalentFields","getTalentStatsAll","statsArr","doc","tempCond","getConditionalProp","stacks","infusable","skillKey","elemental","artIdsOnCharacter","artIdsNotOnCharacter","getArtifactSlotKeys","artNotOnChar","artOnChar","notCharLoc","equipArtifact","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","charAndWeapon","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","condStats","char_ele_key","overrides","hasOwnProperty","specialStatKey","addStatsObj","weaponStats","subKey","subVal","getWeaponSubStatValWithOverride","bonusStats","array","random","getRandomIntInclusive","min","max","ceil","loadFromLocalStorage","data","getItem","JSON","parse","saveToLocalStorage","obj","setItem","stringify","closeEnoughFloat","a","b","abs","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","f","expand","statUnit","html","pretty","getStatVariant","overrideKey","OverrideFormulasText","formulaText","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","eleFormulaText","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","enumerable","writable","noelle_burst_atk","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","_createForOfIteratorHelper","allowArrayLike","it","F","s","n","done","_e","err","normalCompletion","didErr","step","next","_e2","initiated","characterDatabase","charIdIndex","isInvalid","getCharacterIdList","dchar","getArtifactIDFromSlot","charid","unequipArtifactOnSlot","equipArtifactBuild","SlotIcon","faBahai","faFeatherAlt","faHourglass","faWineGlass","faCrown","ArtifactBase","rollData","float","roll","maxNumRoll","rollOption","sum","reduce","accu","isFloat","getSubstatRollData","getRolls","totalAllowableRolls","validateSubStat","some","currentNumOfRolls","cur","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","totalPossbleUpgrade","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getArtifactSetsByMaxStarEntries","setobj","pieces","icons","getArtifactSetEffectsObj","sets","getArtifactSlotName","getArtifactSlotIcon","slotIcon","getRarityArr","getMainStatKeys","main","getSubStatKeys","numberOfSubstatUnlocked","getArtifactSets","artifactSetEffect","artArr","setNumKeys","charFinalStats","setEffectText","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","hasSetEffect","setEffectObj","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","dmg","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","overloaded_dmg","electro_charged_dmg","superconduct_dmg","burning_dmg","vaporize_dmg","melt_dmg","swirl_dmg","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","eleFormulas","str","ele_key","overrideFormulaKey","getLevelIndex","weaponKey","passiveName","passiveDescription","description","baseStats","sub","weaponType","getWeaponTypeName"],"mappings":"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qL,iBCvBa,IAA0B,qDDwBvCC,YExBa,IAA0B,kDFyBvCC,uBGzBa,IAA0B,2DH0BvCC,WI1Ba,IAA0B,+CJ2BvCC,cK3Ba,IAA0B,kDL4BvCC,OM5Ba,IAA0B,0CN6BvCC,mBO7Ba,IAA0B,uDP8BvCC,oBQ9Ba,IAA0B,yDR+BvCC,kBS/Ba,IAA0B,sDTgCvCC,mBUhCa,IAA0B,uDViCvCC,YWjCa,IAA0B,gDXkCvCC,gBYlCa,IAA0B,oDZmCvCC,YanCa,IAA0B,+CboCvCC,gBcpCa,IAA0B,oDdqCvCC,aerCa,IAA0B,iDfsCvCC,QgBtCa,IAA0B,4ChBuCvCC,WiBvCa,IAA0B,8CjBwCvCC,sBkBxCa,IAA0B,0DlByCvCC,qBmBzCa,IAA0B,mDnB0CvCC,aoB1Ca,IAA0B,iDpB2CvCC,gBqB3Ca,IAA0B,qDrB4CvCC,YsB5Ca,IAA0B,iDCoC1BC,EAnBE,CACfC,mBClBa,IAA0B,wDDmBvCC,UEnBa,IAA0B,8CFoBvCC,YGpBa,IAA0B,gDHqBvCC,QIrBa,IAA0B,2CJsBvCC,YKtBa,IAA0B,gDLuBvCC,eMvBa,IAA0B,mDNwBvCC,aOxBa,IAA0B,iDPyBvCC,WQzBa,IAA0B,8CR0BvCC,YS1Ba,IAA0B,iDT2BvCC,YU3Ba,IAA0B,gDV4BvCC,gBW5Ba,IAA0B,oDX6BvCC,cY7Ba,IAA0B,kDZ8BvCC,Wa9Ba,IAA0B,+Cb+BvCC,iBc/Ba,IAA0B,8CdgCvCC,iBehCa,IAA0B,qDfiCvCC,0BgBjCa,IAA0B,gEhBkCvCC,aiBlCa,IAA0B,kDC4C1BC,EAvBF,CACXC,WCtBa,IAA0B,gDDuBvCC,mBEvBa,IAA0B,yDFwBvCC,SGxBa,IAA0B,6CHyBvCC,UIzBa,IAA0B,6CJ0BvCC,SK1Ba,IAA0B,6CL2BvCC,WM3Ba,IAA0B,+CN4BvCC,kBO5Ba,IAA0B,uDP6BvCC,UQ7Ba,IAA0B,6CR8BvCC,cS9Ba,IAA0B,kDT+BvCC,YU/Ba,IAA0B,gDVgCvCC,iBWhCa,IAA0B,qDXiCvCC,YYjCa,IAA0B,gDZkCvCC,ealCa,IAA0B,mDbmCvCC,kBcnCa,IAA0B,sDdoCvCC,SepCa,IAA0B,6CfqCvCC,KgBrCa,IAA0B,wChBsCvCC,eiBtCa,IAA0B,mDjBuCvCC,mBkBvCa,IAA0B,wDlBwCvCC,YmBxCa,IAA0B,gDnByCvCC,QoBzCa,IAA0B,6CpB0CvCC,mBqB1Ca,IAA0B,kDC8C1BC,EAxBG,CAChBC,iBCvBa,IAA0B,sDDwBvCC,eExBa,IAA0B,mDFyBvCC,cGzBa,IAA0B,kDH0BvCC,WI1Ba,IAA0B,+CJ2BvCC,WK3Ba,IAA0B,+CL4BvCC,kBM5Ba,IAA0B,sDN6BvCC,8BO7Ba,IAA0B,qEP8BvCC,aQ9Ba,IAA0B,iDR+BvCC,gBS/Ba,IAA0B,qDTgCvCC,cUhCa,IAA0B,kDViCvCC,UWjCa,IAA0B,8CXkCvCC,gBYlCa,IAA0B,oDZmCvCC,canCa,IAA0B,kDboCvCC,qBcpCa,IAA0B,yDdqCvCC,WerCa,IAA0B,+CfsCvCC,WgBtCa,IAA0B,+ChBuCvCC,YiBvCa,IAA0B,iDjBwCvCC,gBkBxCa,IAA0B,qDlByCvCC,YmBzCa,IAA0B,+CnB0CvCC,2BoB1Ca,IAA0B,mEpB2CvCC,aqB3Ca,IAA0B,iDrB4CvCC,asB5Ca,IAA0B,mDCwBrCC,EAAS,CACXC,QCpBW,+DACRC,GACAC,GACAlE,GACAkB,GACAsB,GDgBH2B,SAAU,CAAEC,ME1BC,IAA0B,0CF0BpBC,KG1BN,IAA0B,yCH0BdC,OI1BZ,IAA0B,2CJ0BNC,QK1BpB,IAA0B,4CL0BGC,IM1B7B,IAA0B,wCN0BQC,MO1BlC,IAA0B,0CP0BeC,KQ1BzC,IAA0B,0CR2BvCC,YAAa,CAAEpR,IS3BF,IAA0B,kDT2BnBD,SU3BP,IAA0B,uDV2BTD,SW3BjB,IAA0B,uDX2BCG,QY3B3B,IAA0B,sDZ2BUJ,Ma3BpC,IAA0B,qDb4BvCwR,MAAO,CACLC,Qc7BW,IAA0B,+Cd8BrCC,Ue9BW,IAA0B,kDfgCvCC,UAAW,CACTC,OgBjCW,IAA0B,mDhBkCrCC,IiBlCW,IAA0B,4CjBmCrCC,WkBnCW,IAA0B,2DlBsC1BnB,O,uFmBpCA,SAASoB,EAAa1U,GAAQ,IACrC2U,EAA6B3U,EAA7B2U,QAAShM,EAAoB3I,EAApB2I,MAAOiM,EAAa5U,EAAb4U,SAClBC,EAAclM,EAAoBmM,MAAMH,GAAW,YAAjB,UAAkCI,KAAKC,MAAgB,IAAVL,GAAkB,EAA/D,QAAZ,SAC1B,OAAO,cAAC,IAAD,CAAOxN,QAAS0N,EAAY5U,UAA0B,cAAf4U,EAA6B,GAAK,mBAAzE,SAA8FD,M,iCCLvG,yDAQIK,EAAqBC,IAAMC,YAAW,SAAUzP,EAAMD,GACxD,IAAI2P,EAAW1P,EAAK0P,SAChBjO,EAAUzB,EAAKyB,QACfkO,EAAO3P,EAAK2P,KACZpV,EAAYyF,EAAKzF,UACjBqV,EAAU5P,EAAK6P,GACfC,OAAwB,IAAZF,EAAqB,OAASA,EAC1CtV,EAAQyV,YAA8B/P,EAAM,CAAC,WAAY,UAAW,OAAQ,YAAa,OAEzFgQ,EAASC,YAAmBP,EAAU,SAC1C,OAAoBF,IAAMU,cAAcJ,EAAWK,YAAS,CAC1DpQ,IAAKA,GACJzF,EAAO,CACRC,UAAW6V,IAAW7V,EAAWyV,EAAQL,GAAQK,EAAS,QAASvO,GAAWuO,EAAS,IAAMvO,SAGjG8N,EAAMc,YAAc,QACpBd,EAAMe,aApBa,CACjBX,MAAM,GAoBOJ,O,gSCZMgB,E,0KAEPC,GAAS,IAAD,EAClBC,IAASC,oBAAoBC,KAAKrW,MAAMsW,WAAYJ,GACpD,UAAAG,KAAKrW,aAAL,SAAYuW,gB,+BAEJ,IAAD,OACP,IAAKF,KAAKrW,MAAMsW,WAAY,OAAO,KACnC,IAAI5N,EAAMJ,IAAiBsB,YAAYyM,KAAKrW,MAAMsW,YAC9CE,EAAqBL,IAASK,mBAAmB9N,GACjD+N,EAAerO,IAAkBS,aAAaH,EAAIE,UAClDA,EAAW6N,EAAeA,EAAavR,KAAO,YAClD,OAAQ,eAAC,IAAD,CAAMjF,UAAU,QAAQyW,OAAM,UAAKhO,EAAIiO,SAAT,QAAyBC,GAAG,eAAe5P,KAAK,YAA9E,UACN,cAAC,IAAK6P,OAAN,CAAa5W,UAAU,MAAvB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAK6W,GAAI,EAAGC,GAAI,EAAhB,SACE,cAAC,IAAD,CAAOC,IAAKb,IAASc,qBAAqBvO,EAAIK,OAAQL,EAAIgB,SAAUzJ,UAAS,4BAAuByI,EAAIiO,SAA3B,YAA+CO,WAAS,MAEvI,eAAC,IAAD,CAAKjX,UAAU,OAAf,UACE,6BAAI,sCAAOkW,IAASgB,qBAAqBzO,EAAIK,OAAQL,EAAIgB,QAAS,2BAClE,gCAAMyM,IAASiB,4BAA4B1O,EAAIgB,SAA/C,YAA8DhB,EAAI0C,kBAIxE,eAAC,IAAKiM,KAAN,CAAWpX,UAAU,0BAArB,UACE,eAAC,IAAKqX,MAAN,WACE,8BAAMnB,IAASoB,mBAAmB7O,EAAIK,OAAQ,kBAC9C,uBAAO9I,UAAU,gBAAjB,SAAiC,cAAC,IAAD,CAAOE,MAAOuI,EAAIiO,gBAErD,oBAAI1W,UAAU,OAAd,SACE,8BAAIuX,IAAKC,YAAY/O,EAAIM,aAAzB,IAAwCmN,IAASuB,iBAAiBhP,EAAIM,YAAaN,EAAIiO,SAAUjO,EAAI0C,MAAO,IAAKoM,IAAKG,YAAYjP,EAAIM,kBAExI,cAAC,IAAD,CAAK/I,UAAU,OAAf,SACGyI,EAAIkP,SAAWlP,EAAIkP,SAAStX,KAAI,SAACuX,EAAMrX,GAAO,IAAD,EAC5C,IAAKqX,IAASA,EAAKjX,MAAO,OAAO,KACjC,IAAIkX,EAAoBtB,EAAmBuB,mBAAmBvX,GAC1DwX,GAA4B,OAAjBF,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBG,aAAnB,eAA0BC,SAAU,EAC/CC,GAA8B,OAAjBL,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBK,aAAc,EAC9CC,EAAa,GAAmB,GAAbD,EACnBE,EAAWb,IAAKC,YAAYI,EAAKvU,KACrC,OAAQ,eAAC,IAAD,CAAawT,GAAI,GAAjB,UACN,cAAC,IAAD,CAAO3P,QAASqP,EAAmB7N,MAAnB,UAA8BqP,EAA9B,QAA+C,SAAU/X,UAAU,mBAAnF,SAAsG,4BAAIuW,EAAmB7N,MAAQqP,EAAW,QAAiB,IACjK,uBAAM/X,UAAS,eAAU+X,EAAV,QAAf,UAA0CK,EAA1C,WAAwDb,IAAKG,YAAYE,EAAKvU,KAAOuU,EAAKjX,MAAM0X,QAAQ,GAAKT,EAAKjX,OAAlH,OAA0H4W,IAAKG,YAAYE,EAAKvU,SAChJ,uBAAMrD,UAAU,cAAcsY,MAAO,CAAEC,QAASJ,GAAhD,UAA+DD,EAAWG,QAAQ,GAAlF,SAHgB9X,MAMhB,OAEN,sBAAKP,UAAU,UAAf,UACE,sBAAMA,UAAU,YAAhB,2BACA,cAAC,IAAD,CAAcwY,QAASjC,EAAmBkC,IAAK/P,MAAO6N,EAAmB7N,MAAOgM,QAAS6B,EAAmBmC,kBAA5G,UACInC,EAAmBmC,kBAAoBnC,EAAmBmC,kBAAoB,GAAGL,QAAQ,GAAK,MAElG,4BAAI,QACJ,cAAC,IAAD,CAAcG,QAASjC,EAAmBkC,IAAK/P,MAAO6N,EAAmB7N,MAAOgM,QAAS6B,EAAmBoC,kBAA5G,UACIpC,EAAmBoC,kBAAoBpC,EAAmBoC,kBAAoB,GAAGN,QAAQ,GAAK,YAKtG,cAAC,IAAKO,OAAN,CAAa5Y,UAAU,OAAvB,SACE,eAAC,IAAD,CAAKA,UAAU,4CAAf,UACGoW,KAAKrW,MAAMuW,YAAc,cAAC,IAAD,CAAKO,GAAG,OAAR,SACxB,eAAC,IAAD,WACE,cAAC,IAASzP,OAAV,CAAiBC,KAAK,KAAtB,SAA4BsB,IAC5B,eAAC,IAASrB,KAAV,WACE,cAAC,IAASC,KAAV,CAAeC,QAAS,kBAAM,EAAKqR,eAAnC,uBACC3V,OAAOsG,QAAQrB,IAAkBiB,wBAAwB/I,KAAI,mCAAEyY,EAAF,KAAMC,EAAN,YAC5D,cAAC,IAASxR,KAAV,CAAwBC,QAAS,kBAAM,EAAKqR,YAAYC,IAAxD,SACGC,EAAK9T,MADY6T,cAKnB,cAAC,IAAD,CAAKjC,GAAG,OAAR,SAAe,8CAAiBlO,OACzC,cAAC,IAAD,CAAKkO,GAAG,OAAR,SACE,eAAC,IAAD,WACGT,KAAKrW,MAAMuW,YAAc,cAAC,IAAD,CAAgB0C,UAAU,MAClDC,QAAS,cAAC,IAAD,6IADe,SAExB,sBAAMjZ,UAAU,iBAAhB,SACE,cAAC,IAAD,CAAQqH,KAAK,KACXjG,SAAUqH,EAAIE,SACd2P,MAAO7P,EAAIE,SAAW,CAAEuQ,cAAe,QAAW,GAClD1R,QAAS,WACPiB,EAAI0Q,MAAQ1Q,EAAI0Q,KAChB9Q,IAAiBa,eAAeT,GAChC,EAAK6N,eANT,SAQE,cAAC,IAAD,CAAiB1W,KAAO6I,EAAI0Q,MAAQ1Q,EAAIE,SAAYyQ,IAASC,IAAYrZ,UAAU,gBAGrE,KACnBoW,KAAKrW,MAAMuZ,QAAU,cAAC,IAAD,CAAQpS,QAAQ,OAAOG,KAAK,KAChDG,QAAS,kBAAM,EAAKzH,MAAMuZ,UADN,SAEpB,cAAC,IAAD,CAAiB1Z,KAAM2Z,IAAQvZ,UAAU,YAE1CoW,KAAKrW,MAAMyZ,UAAY,cAAC,IAAD,CAAQtS,QAAQ,SAASG,KAAK,KACpDG,QAAS,kBAAM,EAAKzH,MAAMyZ,YADJ,SAEtB,cAAC,IAAD,CAAiB5Z,KAAM6Z,IAAYzZ,UAAU,6B,GAjGnBiV,IAAMM,Y,iICX1CmE,EAAuB,GAqB7B,SAASC,EAAmBtW,GAA6B,IAAxBuW,EAAuB,uDAAJ,GAC9CC,EAAeC,EAAmBzW,EAAKuW,IAAqB,GAEhEA,EAAiBxW,SAAQ,SAAA2W,GAAoB,IAAD,IACXC,IAAiBD,EAAgB1W,MAAQ,GAAlEA,EADoC,EACpCA,IADoC,IAC/B4W,kBAD+B,MAClB,GADkB,EAErCJ,EAAaK,SAAS7W,KAC3B,EAAAwW,GAAavW,KAAb,oBAAqB2W,OAEvBJ,EAAY,YAAO,IAAIM,IAAIN,IAC3B,IAAIO,EAAclX,OAAO9C,KAAKia,KAAUvQ,QAAO,SAAAwQ,GAAC,OAAIA,IAAMjX,GAAOwW,EAAaK,SAASI,MACnFC,EAAWrX,OAAO9C,KAAKoa,KAAU1Q,QAAO,SAAAwQ,GAAC,OAAIA,IAAMjX,GAAOwW,EAAaK,SAASI,MACpF,MAAO,CAAEF,cAAaG,YAExB,SAAST,EAAmBzW,GAA6B,IAAD,IAAvBuW,EAAuB,uDAAJ,GAC9CC,EAAe,CAACxW,GAChBoX,EAAkB,KAFgC,cAGxBb,GAHwB,IAGtD,oCAAWG,EAAX,SACM,UAAAC,IAAgB,OAACD,QAAD,IAACA,OAAD,EAACA,EAAiB1W,YAAlC,eAAwCA,OAAQA,IAClDoX,EAAe,UAAGT,IAAgB,OAACD,QAAD,IAACA,OAAD,EAACA,EAAiB1W,YAArC,aAAG,EAAwC4W,aALR,8BAWtD,OAJe,QAAf,EADAQ,EAAkBA,GAAmBf,EAAqBrW,UAC1D,SAAiBD,SAAQ,SAAAkX,GACvB,IAAII,EAAkBZ,EAAmBQ,EAAGV,GAC5CC,EAAavW,KAAb,MAAAuW,EAAY,YAASa,OAEhBb,EA1BT3W,OAAO9C,KAAKia,KAAUjX,SAAQ,SAAAC,GAAG,OAlBX,SAACA,GACrB,IAAIsX,EAAU,GACVV,EAAa,GACjB/W,OAAO9C,KAAKoa,KAAU1Q,QAAO,SAAAwQ,GAAC,OAAIA,IAAMjX,KAAKD,SAAQ,SAAAkX,GACnDpX,OAAO0X,eAAeD,EAASL,EAAG,CAChCO,IAAK,WAGH,OAFAZ,EAAW3W,KAAKgX,GAChBpX,OAAO0X,eAAeD,EAASL,EAAG,CAAEO,IAAK,kBAAM,KACxC,GAETC,cAAc,OAGlBC,YAAmBJ,GAES,kBAAjBA,EAAQtX,KACjBqW,EAAqBrW,GAAO4W,GAEKe,CAAc3X,O,2PCuBpC4X,EAxCI,SAAsBlb,GACvC,IAAImb,EAAmBC,YAAgBpb,EAAO,CAC5Cqb,UAAW,aAETtC,EAAKoC,EAAiBpC,GACtBuC,EAAwBH,EAAiBI,gBACzCC,EAAWL,EAAiBK,SAC5BH,EAAYF,EAAiBE,UAC7BI,EAAaN,EAAiBM,WAC9BC,EAAeP,EAAiBO,aAChCC,EAAgBR,EAAiBQ,cACjC/G,EAAWuG,EAAiBvG,SAE5B2G,EAAkBK,mBAAQ,WAC5B,OAAON,GAAyB,SAAUhY,EAAK7B,GAC7C,OAAOsX,EAAKA,EAAK,IAAMtX,EAAO,IAAM6B,EAAM,QAE3C,CAACyV,EAAIuC,IACJO,EAAaD,mBAAQ,WACvB,MAAO,CACLJ,SAAUA,EACVH,UAAWA,EACXI,WAAYA,EACZC,aAAcA,IAAgB,EAC9BC,cAAeA,IAAiB,EAChCG,gBAAiB,SAAyBxY,GACxC,OAAOiY,EAAgBjY,EAAK,YAE9ByY,gBAAiB,SAAyBzY,GACxC,OAAOiY,EAAgBjY,EAAK,WAG/B,CAACkY,EAAUH,EAAWI,EAAYC,EAAcC,EAAeJ,IAClE,OAAoBrG,IAAMU,cAAcoG,IAAWC,SAAU,CAC3Drb,MAAOib,GACO3G,IAAMU,cAAcsG,IAAkBD,SAAU,CAC9Drb,MAAO4a,GAAY,MAClB5G,K,qCCvBUuH,EAdejH,IAAMC,YAAW,SAAUzP,EAAMD,GAC7D,IAAI2P,EAAW1P,EAAK0P,SAChBE,EAAU5P,EAAK6P,GACfC,OAAwB,IAAZF,EAAqB,MAAQA,EACzCrV,EAAYyF,EAAKzF,UACjBD,EAAQyV,YAA8B/P,EAAM,CAAC,WAAY,KAAM,cAE/D0W,EAAoBzG,YAAmBP,EAAU,eACrD,OAAoBF,IAAMU,cAAcJ,EAAWK,YAAS,CAC1DpQ,IAAKA,GACJzF,EAAO,CACRC,UAAW6V,IAAW7V,EAAWmc,S,SCcrC,IAAIC,EAAuBnH,IAAMC,YAAW,SAAUnV,EAAOyF,GAC3D,IAAI6W,EAtBN,SAAuBtc,GACrB,IAAIuc,EAAUC,qBAAWR,KACzB,IAAKO,EAAS,OAAOvc,EAErB,IAAIqb,EAAYkB,EAAQlB,UACpBS,EAAkBS,EAAQT,gBAC1BC,EAAkBQ,EAAQR,gBAC1BU,EAAOhH,YAA8B8G,EAAS,CAAC,YAAa,kBAAmB,oBAE/EG,GAAwC,IAArB1c,EAAMyb,aAA4C,IAApBgB,EAAKhB,WACtDnY,EAAMqZ,YAAa3c,EAAM4c,UAC7B,OAAO/G,YAAS,GAAI7V,EAAO,CACzB6c,OAAwB,MAAhB7c,EAAM6c,QAAyB,MAAPvZ,EAAcqZ,YAAatB,KAAe/X,EAAMtD,EAAM6c,OACtF9D,GAAI+C,EAAgB9b,EAAM4c,UAC1B,kBAAmBb,EAAgB/b,EAAM4c,UACzCnB,WAAYiB,IAAqB1c,EAAMyb,YAAcgB,EAAKhB,YAAcqB,KACxEpB,aAAoC,MAAtB1b,EAAM0b,aAAuB1b,EAAM0b,aAAee,EAAKf,aACrEC,cAAsC,MAAvB3b,EAAM2b,cAAwB3b,EAAM2b,cAAgBc,EAAKd,gBAKrDoB,CAAc/c,GAC/BoV,EAAWkH,EAAelH,SAC1BnV,EAAYqc,EAAerc,UAC3B4c,EAASP,EAAeO,OACxBG,EAAUV,EAAeU,QACzBC,EAAaX,EAAeW,WAC5BC,EAAYZ,EAAeY,UAC3BC,EAASb,EAAea,OACxBC,EAAYd,EAAec,UAC3BC,EAAWf,EAAee,SAC1B3B,EAAeY,EAAeZ,aAC9BC,EAAgBW,EAAeX,cAC/B2B,EAAahB,EAAeb,WAC5B8B,EAAoBjB,EAAe/G,GACnCC,OAAkC,IAAtB+H,EAA+B,MAAQA,EAEnDd,GADIH,EAAeM,SACZnH,YAA8B6G,EAAgB,CAAC,WAAY,YAAa,SAAU,UAAW,aAAc,YAAa,SAAU,YAAa,WAAY,eAAgB,gBAAiB,aAAc,KAAM,cAEvN5G,EAASC,YAAmBP,EAAU,YAC1C,IAAKyH,IAAWS,GAAc3B,EAAe,OAAO,KACpD,IAAI6B,EAAoBtI,IAAMU,cAAcJ,EAAWK,YAAS,GAAI4G,EAAM,CACxEhX,IAAKA,EACLgY,KAAM,WACN,eAAgBZ,EAChB5c,UAAW6V,IAAW7V,EAAWyV,EAAQ,CACvCmH,OAAQA,OAgBZ,OAbIS,IAAYE,EAAoBtI,IAAMU,cAAc0H,EAAY,CAClEI,GAAIb,EACJG,QAASA,EACTC,WAAYA,EACZC,UAAWA,EACXC,OAAQA,EACRC,UAAWA,EACXC,SAAUA,EACV3B,aAAcA,EACdC,cAAeA,GACd6B,IAGiBtI,IAAMU,cAAcoG,IAAWC,SAAU,CAC3Drb,MAAO,MACOsU,IAAMU,cAAcsG,IAAkBD,SAAU,CAC9Drb,MAAO,MACN4c,OAELnB,EAAQtG,YAAc,UACPsG,QCxEXsB,EAAmB,SAAUC,GAG/B,SAASD,IACP,OAAOC,EAAiBC,MAAMxH,KAAMyH,YAAczH,KAUpD,OAbA0H,YAAeJ,EAAKC,GAMPD,EAAIK,UAEVC,OAAS,WACd,MAAM,IAAIC,MAAM,gOAIXP,EAdc,CAerBzI,IAAMM,WAERmI,EAAIQ,UAAYjD,EAChByC,EAAIS,QAAUjC,EACdwB,EAAIU,KAAOhC,EACIsB,Q,4HC1BXpB,EAAuBrH,IAAMoJ,cAAc,MAC/C/B,EAAQxG,YAAc,mBACPwG,QCER,SAASgC,EAAmB3B,EAAUnV,GAC3C,IAAI+W,EAAkBhC,qBAAWiC,GAC7BjD,EAAWgB,qBAAWN,KAC1B,OAAO,SAAUta,GAMX4Z,GAAUA,EADOoB,IAAa4B,EAAkB,KAAO5B,EACpBhb,GACnC6F,GAASA,EAAQ7F,IAGzB,IAmBe8c,EAnBoBxJ,IAAMC,YAAW,SAAUzP,EAAMD,GAClE,IAAI6P,EAAU5P,EAAK6P,GACfC,OAAwB,IAAZF,EAAqB,SAAWA,EAC5CV,EAAWlP,EAAKkP,SAChBgI,EAAWlX,EAAKkX,SAChBnV,EAAU/B,EAAK+B,QACfzH,EAAQyV,YAA8B/P,EAAM,CAAC,KAAM,WAAY,WAAY,YAE3EiZ,EAAmBJ,EAAmB3B,EAAUnV,GAMpD,MAJkB,WAAd+N,IACFxV,EAAMyB,KAAO,UAGKyT,IAAMU,cAAcJ,EAAWK,YAAS,CAC1DpQ,IAAKA,EACLgC,QAASkX,GACR3e,GAAQ4U,M,SC7BTgK,GAAiC1J,IAAMC,YAAW,SAAUzP,EAAMD,GACpE,IAAImP,EAAWlP,EAAKkP,SAChBgI,EAAWlX,EAAKkX,SAChB5c,EAAQyV,YAA8B/P,EAAM,CAAC,WAAY,aAEzD8Y,EAAkBhC,qBAAWiC,GAGjC,OAAoBvJ,IAAMU,cAAcsG,IAAkBD,SAAU,CAClErb,MAAO,MACOsU,IAAMU,cAAciJ,KAAUhJ,YAAS,CACrDpQ,IAAKA,EACLiY,GAAIc,IAAoB5B,GACvB5c,GAAqBkV,IAAMU,cAAc,MAAO,KAAMV,IAAM4J,SAASC,KAAKnK,SAE/EgK,GAAkB7I,YAAc,oBACjB6I,UCZXI,GAAyB9J,IAAMC,YAAW,SAAUnV,EAAOyF,GAC7D,IAAI0V,EAAmBC,YAAgBpb,EAAO,CAC5Cqb,UAAW,aAET4D,EAAsB9D,EAAiB5F,GACvCC,OAAoC,IAAxByJ,EAAiC,MAAQA,EACrD5D,EAAYF,EAAiBE,UAC7BjG,EAAW+F,EAAiB/F,SAC5BR,EAAWuG,EAAiBvG,SAC5B3U,EAAYkb,EAAiBlb,UAC7Bub,EAAWL,EAAiBK,SAC5B0D,EAAkBzJ,YAA8B0F,EAAkB,CAAC,KAAM,YAAa,WAAY,WAAY,YAAa,aAE3HgE,EAAiBrJ,IAAW7V,EAAW0V,YAAmBP,EAAU,cACxE,OAAoBF,IAAMU,cAAc6I,EAAiBxC,SAAU,CACjErb,MAAOya,GAAa,MACNnG,IAAMU,cAAcsG,IAAkBD,SAAU,CAC9Drb,MAAO4a,GAAY,MACLtG,IAAMU,cAAcJ,EAAWK,YAAS,CACtDpQ,IAAKA,GACJyZ,EAAiB,CAClBjf,UAAWkf,IACTvK,QAENoK,GAAUjJ,YAAc,YACxBiJ,GAAU3X,OAASqX,EACnBM,GAAUH,SAAWD,GACNI,U,oBCpCA,SAASI,GAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACI/b,EAAK9C,EADLqB,ECHS,SAAuCwd,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEI/b,EAAK9C,EAFLqB,EAAS,GACT0d,EAAapc,OAAO9C,KAAKgf,GAG7B,IAAK7e,EAAI,EAAGA,EAAI+e,EAAWrH,OAAQ1X,IACjC8C,EAAMic,EAAW/e,GACb8e,EAASE,QAAQlc,IAAQ,IAC7BzB,EAAOyB,GAAO+b,EAAO/b,IAGvB,OAAOzB,EDTM,CAA6Bwd,EAAQC,GAGlD,GAAInc,OAAOsc,sBAAuB,CAChC,IAAIC,EAAmBvc,OAAOsc,sBAAsBJ,GAEpD,IAAK7e,EAAI,EAAGA,EAAIkf,EAAiBxH,OAAQ1X,IACvC8C,EAAMoc,EAAiBlf,GACnB8e,EAASE,QAAQlc,IAAQ,GACxBH,OAAO6a,UAAU2B,qBAAqBC,KAAKP,EAAQ/b,KACxDzB,EAAOyB,GAAO+b,EAAO/b,IAIzB,OAAOzB,E,uBEZHge,GAAe,SAAC,GAA4D,IAAD,IAAzDpT,EAAyD,EAAzDA,QAASnD,EAAgD,EAAhDA,UAAWwW,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAaC,EAAiB,iDAC3EC,EAAUzV,IAAU0V,yBAAyB5W,EAAWmD,GAC5C,aAAZA,EACFwT,EAAUzV,IAAU0V,yBAAyB5W,EAAW,WACrC,cAAZmD,EACPwT,EAAUzV,IAAU0V,yBAAyB5W,EAAW,YACrC,cAAZmD,IACPwT,EAAUzV,IAAU0V,yBAAyB5W,EAAW,YAAckB,IAAU0V,yBAAyB5W,EAAW,eACtH,IAAI6W,EAAO3I,KAAKG,YAAYlL,GACxB2T,IAAkB,OAALN,QAAK,IAALA,GAAA,UAAAA,EAAOO,kBAAP,eAAoB5T,KAAY,GAAKwT,EACtD,OAAO,eAACK,EAAA,EAAD,2BAASN,GAAT,cACL,qBAAI/f,UAAU,WAAd,UAA0BuM,aAAYC,GAAtC,IAAiD+K,KAAKC,YAAYhL,MAClE,uBAAMxM,UAAS,iCAA6B8f,GAAYvV,IAAU+V,YAAYjX,EAAWmD,GAAY,eAAiB,IAAtH,UACGwT,IAAYG,GAAmB,QAAP,EAAAH,SAAA,eAAS3H,QAAQd,KAAKgJ,UAAU/T,KAAY0T,EAAO,KAC3EC,EAAY,uBAAMngB,UAAWmgB,EAAY,EAAI,eAAiB,cAAlD,cAAmEA,EAAY,GAAK,KAAc,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAW9H,QAAQd,KAAKgJ,UAAU/T,KAAY0T,KAAe,aAInKM,GAAsB,SAAC,GAA8E,IAAD,MAA3EhU,EAA2E,EAA3EA,QAASnD,EAAkE,EAAlEA,UAAWoX,EAAuD,EAAvDA,cAAeC,EAAwC,EAAxCA,SAAUZ,EAA8B,EAA9BA,SAAaC,EAAiB,oEACpGC,GAAwB,OAAbS,QAAa,IAAbA,GAAA,UAAAA,EAAeL,kBAAf,eAA4B5T,KAAYjC,IAAU0V,yBAAyB5W,EAAWmD,GACjG0T,EAAO3I,KAAKG,YAAYlL,GACxB2T,IAAqB,OAARO,QAAQ,IAARA,GAAA,UAAAA,EAAUN,kBAAV,eAAuB5T,KAAY,KAAmB,OAAbiU,QAAa,IAAbA,GAAA,UAAAA,EAAeL,kBAAf,eAA4B5T,KAAY,GAElG,OAAO,eAAC6T,EAAA,EAAD,2BAASN,GAAT,cACL,qBAAI/f,UAAU,WAAd,UAA0BuM,aAAYC,GAAtC,IAAiD+K,KAAKC,YAAYhL,MAClE,uBAAMxM,UAAS,sBAAkB8f,GAAYvV,IAAU+V,YAAYjX,EAAWmD,GAAY,eAAiB,IAA3G,UACGwT,IAAYG,GAAmB,OAAPH,QAAO,IAAPA,OAAA,EAAAA,EAAS3H,QAAQd,KAAKgJ,UAAU/T,KAAY0T,EAAO,KAC3EC,EAAY,uBAAMngB,UAAWmgB,EAAY,EAAI,eAAiB,cAAlD,eAAoEA,EAAY,GAAK,KAAc,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAW9H,QAAQd,KAAKgJ,UAAU/T,KAAY0T,EAAxI,OAAwJ,a,SCoG5JS,OA1Hf,SAA+B5gB,GAAQ,IAAD,EACJsB,oBAAS,GADL,mBAC/Buf,EAD+B,KACpBC,EADoB,OAE0G9gB,EAAxIsJ,UAAaa,EAFiB,EAEjBA,aAAc4W,EAFG,EAEHA,uBAAwBjX,EAFrB,EAEqBA,qBAAwB4W,EAA6D1gB,EAA7D0gB,cAAeC,EAA8C3gB,EAA9C2gB,SAAUZ,EAAoC/f,EAApC+f,SAAUxJ,EAA0BvW,EAA1BuW,YAAayK,EAAahhB,EAAbghB,SAC3H1X,EAActJ,EAAdsJ,UAEFwW,EAAQa,GAAsBD,EAC9BC,IAAU7W,EAAuB6W,EAAS7W,sBAC9C,IAAImX,EAASzW,IAAU0W,gBAAgB/W,GAEjCgX,EAAW,CAAC,WAAY,YAAa,YAAa,UAAW,YAAa,WAAY,YAAa,YAAa,iBACtHA,EAAS5d,KAAT,UAAiB0d,EAAjB,mBAEA,IAAIG,EAAgB,CAAC,WAAY,aAAc,SAAU,gBAAiB,UAAW,qBAAsB,qBAAsB,kBAAmB,mBACpJ5W,IAAU6W,mBAAmBhe,SAAQ,SAAAie,GACnCF,EAAc7d,KAAd,UAAsB+d,EAAtB,mBACAF,EAAc7d,KAAd,UAAsB+d,EAAtB,gBAEFF,EAAgBA,EAAcrX,QAAO,SAAAzG,GAAG,OAAK6d,EAAShH,SAAS7W,MAC/D,IAAIie,EAAmB,CAAEjY,YAAWwW,QAAOC,YACvCyB,EAAuB,CAAElY,YAAWoX,gBAAeC,WAAUZ,YAIjE,OAAO,qCACL,cAAC0B,EAAA,EAAD,UACE,cAACnB,EAAA,EAAD,CAAKrgB,UAAU,OAAf,SACE,cAAC,GAAD,UACE,eAACyhB,EAAA,EAAD,CAAMzhB,UAAU,QAAQ2W,GAAG,eAAe5P,KAAK,YAA/C,UACE,cAAC0a,EAAA,EAAK7K,OAAN,UACE,eAAC4K,EAAA,EAAD,WACE,cAACnB,EAAA,EAAD,UACE,qDAEF,cAACA,EAAA,EAAD,CAAKxJ,GAAG,OAAR,SACE,cAAC,GAAUzP,OAAX,CAAkBkO,GAAIoM,IAAQxa,QAAQ,OAAOyV,SAAS,iBAAiBnV,QAAS,kBAAMqZ,GAAcD,IAAYvZ,KAAK,KAArH,mBACMuZ,EAAY,OAAS,OAD3B,yBAMN,eAACa,EAAA,EAAKrK,KAAN,WACE,cAACoK,EAAA,EAAD,UACId,GAAYI,EACZI,EAAS7gB,KAAI,SAAAmM,GAAO,OAAI,cAAC,GAAD,aAAqBqK,GAAI,GAAIC,GAAI,EAAG6K,GAAI,GAAxC,2BAAkEJ,GAAlE,IAAwF/U,aAAxCA,MACxE0U,EAAS7gB,KAAI,SAAAmM,GAAO,OAAI,cAAC,GAAD,aAAcqK,GAAI,GAAIC,GAAI,EAAG6K,GAAI,GAAjC,2BAA2DL,GAA3D,IAA6E9U,aAApCA,QAErE,cAAC,GAAUoS,SAAX,CAAoBjC,SAAS,iBAA7B,SACE,cAAC6E,EAAA,EAAD,UACId,GAAYI,EACZK,EAAc9gB,KAAI,SAAAmM,GAAO,OAAI,cAAC,GAAD,aAAqBqK,GAAI,GAAIC,GAAI,EAAG6K,GAAI,GAAxC,2BAAkEJ,GAAlE,IAAwF/U,aAAxCA,MAC7E2U,EAAc9gB,KAAI,SAAAmM,GAAO,OAAI,cAAC,GAAD,aAAcqK,GAAI,GAAIC,GAAI,EAAG6K,GAAI,GAAjC,2BAA2DL,GAA3D,IAA6E9U,aAApCA,aAK7EkU,EAAW,cAACe,EAAA,EAAK7I,OAAN,UACV,cAAC8I,EAAA,EAAD,CAAQra,KAAK,KAAKG,QAAS,WACzB+C,IAAUqX,eAAevY,EAAUyP,GAAI4H,EAASmB,aACrC,OAAXvL,QAAW,IAAXA,QAFF,wDAIe,cAKzB,cAACkL,EAAA,EAAD,UACE,cAACnB,EAAA,EAAD,UACE,eAACmB,EAAA,EAAD,WACE,cAACnB,EAAA,EAAD,CAAKyB,GAAI,EAAGC,GAAI,EAAG/hB,UAAU,OAA7B,SACE,eAACyhB,EAAA,EAAD,CAAMzhB,UAAU,2BAA2B2W,GAAG,eAAe5P,KAAK,YAAlE,UACE,cAAC0a,EAAA,EAAK7K,OAAN,mCACA,cAAC6K,EAAA,EAAKrK,KAAN,CAAWpX,UAAU,cAArB,SACE,cAACwhB,EAAA,EAAD,UACGte,OAAOsG,QAAQ0M,IAAS8L,sBAAsBnC,EAAMoC,aAAa5hB,KAAI,mCAAEyI,EAAF,KAAUoZ,EAAV,YACpE,eAAC7B,EAAA,EAAD,CAAkBxJ,GAAI,GAAI7W,UAAU,OAApC,UACE,6BAAKkW,IAASoB,mBAAmBxO,KACjC,cAAC0Y,EAAA,EAAD,UACGU,EAAa7hB,KAAI,SAAA8hB,GAChB,IAAIC,EAAWlM,IAASmM,uBAAuBvZ,EAAQqZ,GACnD5b,EAAiB,EACjBD,EAAc4P,IAASoM,gCAAgCxZ,EAAQqZ,GACnE,GAAI7b,EAAa,CACfC,EAAiBgc,KAAiBC,kBAAkB3Y,EAAsB,CAAEG,OAAQlB,EAAQmB,QAASkY,IACrG,IAAIM,EAAmBvM,IAASwM,4BAA4B5Z,EAAQqZ,EAAW5b,GAC3Ekc,IACGL,IAAUA,EAAW,IAC1Blf,OAAOsG,QAAQiZ,GAAkBrf,SAAQ,mCAAEoJ,EAAF,KAAWmW,EAAX,YACvCP,EAAS5V,IAAY4V,EAAS5V,IAAY,GAAKmW,MAGrD,IAAIC,EAAqB,cAACvc,GAAA,EAAD,CACvBjF,WAAUsf,EACVpa,YAAaA,EACbC,eAAgBA,EAChBC,eAAgB,SAACqc,GAAD,OAzEN,SAAC/Z,EAAQqZ,EAAW5b,GAApB,cAAuCwa,QAAvC,IAAuCA,OAAvC,EAAuCA,GAAW,SAAA+B,GAAK,MACxF,CAAEjZ,qBAAsB0Y,KAAiB/b,eAAesc,EAAMjZ,qBAAsB,CAAEG,OAAQlB,EAAQmB,QAASkY,GAAa5b,OAwE3Ewc,CAA4Bja,EAAQqZ,EAAWU,IACzEpc,OAAQ,eAACuO,EAAA,EAAD,CAAO9N,QAAQ,UAAf,UAA0Bib,EAA1B,YAEV,OAAO,eAAC9B,EAAA,EAAD,CAAqBxJ,GAAI,GAAI7W,UAAU,OAAvC,UACL,+BAAK4iB,EAAL,IAA0B1M,IAAS8M,yBAAyBla,EAAQqZ,EAAWtC,EAAMO,eACpFgC,EAAW,cAACZ,EAAA,EAAD,UACTte,OAAOsG,QAAQ4Y,GAAU/hB,KAAI,mCAAEmM,EAAF,KAAWmW,EAAX,YAC5B,eAACtC,EAAA,EAAD,CAAKxJ,GAAI,GAAT,UAA4BU,KAAKC,YAAYhL,GAA7C,KAAyDmW,EAAKpL,KAAKG,YAAYlL,KAA7DA,QACb,OALM2V,UAvBbrZ,eAsCnB5F,OAAOsF,OAAOqX,EAAMgC,aAAaxhB,KAAI,SAAAqJ,GAAK,OACzCA,EAAQ,cAAC2W,EAAA,EAAD,CAAKyB,GAAI,EAAGC,GAAI,EAAe/hB,UAAU,OAAzC,SACN,cAACgW,GAAA,EAAD,CAAcK,WAAY3M,EAAO4M,YAAaA,KADhB5M,GAEvB,mB,qECrFNuZ,GAhCG,SAAC,GAAD,IAAGhe,EAAH,EAAGA,KAAMie,EAAT,EAASA,WAAYviB,EAArB,EAAqBA,MAAOO,EAA5B,EAA4BA,YAAaiiB,EAAzC,EAAyCA,aAAchiB,EAAvD,EAAuDA,cAAeuT,EAAtE,EAAsEA,QAAStT,EAA/E,EAA+EA,SAAagiB,EAA5F,6GAChB,eAACC,EAAA,EAAD,2BAAgBD,GAAhB,cACGF,EAAa,cAACG,EAAA,EAAWC,QAAZ,UAAqBJ,IAAmC,KACtE,cAACG,EAAA,EAAWC,QAAZ,UACE,cAACD,EAAA,EAAWE,KAAZ,UAAkBte,MAEnByP,EACC,cAAC,KAAD,CACExT,YAAaA,EACbP,MAAOA,EACPQ,cAAeA,EACfC,SAAUA,IACP,cAAC,KAAD,CACHF,YAAaA,EACbP,MAAOA,EACPQ,cAAeA,EACfC,SAAUA,IAEbsT,EAAW,cAAC2O,EAAA,EAAWG,OAAZ,UACV,cAACH,EAAA,EAAWE,KAAZ,kBACsB,UACN3Z,IAAjBuZ,EAA6B,cAACE,EAAA,EAAWG,OAAZ,UAC5B,cAACC,GAAA,EAAD,CAAgBzK,UAAU,MACxBC,QAAS,cAACyK,GAAA,EAAD,wDADX,SAEE,sBAAM1jB,UAAU,iBAAhB,SACE,cAAC0hB,EAAA,EAAD,CAAQla,QAAS,kBAAMrG,EAAcgiB,IAAe/hB,SAAUA,GAAYT,IAAUwiB,EAAc7K,MAAO3X,IAAUwiB,EAAe,CAAEjK,cAAe,QAAW,GAA9J,SACE,cAAC,IAAD,CAAiBtZ,KAAM+jB,cAIR,UCrBZ,SAASC,GAAsB7jB,GAAQ,IAAD,EAC7CsJ,EAAmGtJ,EAAnGsJ,UAD6C,EACsDtJ,EAAxFsJ,UAAaa,EADqB,EACrBA,aAAcE,EADO,EACPA,cAAiB0V,EAA4C/f,EAA5C+f,SAAU+D,EAAkC9jB,EAAlC8jB,YAAaC,EAAqB/jB,EAArB+jB,iBADjC,EAEnBziB,oBAAS,GAFU,mBAE9C0iB,EAF8C,KAEnCC,EAFmC,KAG/CC,EAAa1Z,IAAU0W,gBAAgB/W,GACvCga,EAAgB3Z,IAAU4Z,iBAAiBja,GAC3CiB,EAAQZ,IAAU0V,yBAAyB5W,EAAW,cAC1D,OAAO,eAACmY,EAAA,EAAD,WACL,cAACnB,EAAA,EAAD,CAAKxJ,GAAI,GAAIC,GAAI,EAAjB,SAEE,eAAC2K,EAAA,EAAD,CAAM9K,GAAG,eAAe5P,KAAK,YAAY/G,UAAU,OAAnD,UACE,cAACyhB,EAAA,EAAK2C,IAAN,CAAUrN,IAAKxM,IAAU8Z,QAAQna,GAAelK,UAAU,iBAC1D,cAACyhB,EAAA,EAAKrK,KAAN,UACE,eAACoK,EAAA,EAAD,WACE,eAACnB,EAAA,EAAD,CAAKxJ,GAAI,GAAT,UACE,+BAAKtM,IAAU+Z,QAAQpa,GAAvB,IAAsC,cAACqa,EAAA,EAAD,CAAOxN,IAAK1D,KAAOI,SAASwQ,GAAajkB,UAAU,gBAAzF,IAA0G,cAACukB,EAAA,EAAD,CAAOxN,IAAG,UAAE1D,KAAOY,mBAAT,aAAE,EAAqBiQ,GAAgBlkB,UAAU,mBACrK,6BAAI,cAAC,KAAD,CAAOE,MAAOqK,IAAUia,QAAQta,GAAejK,SAAO,SAE5D,cAACogB,EAAA,EAAD,UACG0D,EAAY,cAACvC,EAAA,EAAD,UAAK,cAACnB,EAAA,EAAD,UAChB,eAACgD,EAAA,EAAD,WACE,cAACA,EAAA,EAAWC,QAAZ,UACE,cAACD,EAAA,EAAWE,KAAZ,qBAEF,cAAC,KAAD,CAAgBpiB,cAAe,SAACwhB,GAAD,OAASkB,EAAY,aAAcY,YAAM9B,EAAK,EAAG,MAAMhiB,MAAOwK,IAC7F,cAACkY,EAAA,EAAWG,OAAZ,UACE,cAAC9B,EAAA,EAAD,UACE,cAAC,IAAD,CAAiB9hB,KAAM+jB,IAAQtc,KAAK,KAAKG,QAAS,kBAAMqc,EAAY,aAActZ,IAAUma,SAASrb,EAAUc,kBAGnH,cAACkZ,EAAA,EAAWG,OAAZ,UACE,cAACC,GAAA,EAAD,CACEzK,UAAU,SACVC,QAAS,cAACyK,GAAA,EAAD,gFAFX,SAIE,cAAChC,EAAA,EAAD,CAAQxa,QAAQ,SAASM,QAAS,kBAAMwc,GAAcD,IAAY1c,KAAK,KAAvE,SACE,+BAAM,cAAC,IAAD,CAAiBzH,KAAM+kB,qBAMrC,eAACnD,EAAA,EAAD,WACE,cAACnB,EAAA,EAAD,UACE,yCAAYlV,OAEb2U,EAAW,cAACO,EAAA,EAAD,CAAKxJ,GAAG,OAAO7W,UAAU,YAAzB,SACV,cAAC0hB,EAAA,EAAD,CAAQxa,QAAQ,OAAOM,QAAS,kBAAMwc,GAAcD,IAAY1c,KAAK,KAArE,SACE,+BAAM,cAAC,IAAD,CAAiBzH,KAAM2Z,YAExB,UAGf,cAAC8G,EAAA,EAAD,CAAKxJ,GAAI,GAAT,SACE,eAAC2K,EAAA,EAAD,WACE,cAACnB,EAAA,EAAD,CAAKxJ,GAAI,GAAT,SAAa,6BAAKtM,IAAUqa,qBAAqB1a,OACjD,cAACmW,EAAA,EAAD,UACE,cAACmB,EAAA,EAAD,CAAKxhB,UAAU,OAAf,SACG,aAAIG,MAAM,GAAGC,QAAQC,KAAI,SAAAE,GAAC,OACzB,cAAC8f,EAAA,EAAD,CAAKxJ,GAAI,EAAG7W,UAAU,MAAtB,SACE,cAACukB,EAAA,EAAD,CAAOxN,IAAKxM,IAAUsa,oBAAoB3a,EAAc3J,GAAIP,UAAS,uBAAkBoK,EAAgB7J,EAAI,GAAK,gBAC9G+X,MAAO,CAAEwM,OAAQ,WAAaC,eAAa,EAACvd,QAASsY,EAAY,kBAC/DgE,EAAkBvjB,EAAI,IAAO6J,EAAgB7J,EAAIA,EAAI,IAAM,QAHhCA,yBAanD,eAAC8f,EAAA,EAAD,CAAKxJ,GAAI,GAAIC,GAAI,EAAjB,UACE,cAACkO,GAAD,eAA2BjlB,IAC3B,cAACklB,GAAD,eAAoBllB,UAI1B,SAASilB,GAAsBjlB,GAAQ,IAAD,EACRsB,oBAAS,GADD,mBAC/B6jB,EAD+B,KACtBC,EADsB,OAEQ9jB,oBAAS,GAFjB,mBAE/B+jB,EAF+B,KAEdC,EAFc,KAG9Bhc,EAAgGtJ,EAAhGsJ,UAH8B,EAGkEtJ,EAArFsJ,UAAaa,EAHM,EAGNA,aAAcob,EAHR,EAGQA,OAAUxF,EAAgD/f,EAAhD+f,SAAUiB,EAAsChhB,EAAtCghB,SAAUN,EAA4B1gB,EAA5B0gB,cAAeC,EAAa3gB,EAAb2gB,SAGrFb,EAAQa,GAAsBD,EAE5B8E,EAAiB,SAACliB,EAAK1C,GAAN,OAAgBogB,GAAS,SAAA+B,GAI9C,MAFY,QAARzf,IAAeyf,EAAMwC,OAAO/e,eAAiB,GACjDuc,EAAMwC,OAAOjiB,GAAO1C,EACb,CAAE2kB,OAAQxC,EAAMwC,YAErBE,EAAaC,IAAOC,oBAAoBJ,EAAOjiB,KAC/C6gB,EAAgB3Z,IAAU4Z,iBAAiBja,GAC3Cyb,EAAuBL,EAAOM,iBAAmBH,IAAOI,qBAAqBP,EAAOjiB,IAAKiiB,EAAOnb,UAChG2b,EAAsBR,EAAOS,gBAAkBN,IAAOO,oBAAoBV,EAAOjiB,IAAKiiB,EAAOnb,UAC7F8b,EAAoBR,IAAOS,qBAAqBZ,EAAOjiB,KACvD8iB,EAAmBV,IAAOW,mBAAmBd,EAAOjiB,IAAKiiB,EAAOe,aAChE5D,EAAmBgD,IAAOa,yBAAyBhB,EAAOjiB,IAAKiiB,EAAOe,YAAaf,EAAO/e,gBAC1FD,EAAcmf,IAAOc,qBAAqBjB,EAAOjiB,KACjDkD,EAAiB+e,EAAO/e,eACxBigB,EAAiB,cAACngB,GAAA,EAAD,CACnBC,YAAaA,EACbC,eAAgBA,EAChBC,eAAgB,SAACqc,GAAD,OAAU0C,EAAe,iBAAkB1C,IAC3Dpc,OAAQ,+BAAOwf,MAGjB,OAAO,eAACxE,EAAA,EAAD,CAAM9K,GAAG,eAAe5P,KAAK,YAAY/G,UAAU,OAAnD,UACL,cAACyhB,EAAA,EAAK7K,OAAN,UACE,eAAC4K,EAAA,EAAD,WACE,cAACnB,EAAA,EAAD,UACE,4CAEF,cAACA,EAAA,EAAD,CAAKxJ,GAAG,OAAR,SACE,cAAC6K,EAAA,EAAD,CAAQxa,QAAQ,OAAOG,KAAK,KAAKG,QAAS,kBAAM6d,GAAoBD,IAApE,SACE,iCAAM,cAAC,IAAD,CAAiBxlB,KAAM6mB,MAA7B,IAA8CrB,EAAkB,aAAe,oBAGlFtF,EAAW,cAACO,EAAA,EAAD,CAAKxJ,GAAG,OAAR,SACV,cAAC6K,EAAA,EAAD,CAAQxa,QAASge,EAAU,SAAW,OAAQ1d,QAAS,kBAAM2d,GAAYD,IAAU7d,KAAK,KAAxF,SACE,iCAAM,cAAC,IAAD,CAAiBzH,KAAMslB,EAAUP,IAASpL,MAAhD,IAA4D2L,EAAU,OAAS,cAE1E,UAGb,eAACzD,EAAA,EAAKrK,KAAN,WACE,eAACoK,EAAA,EAAD,CAAKxhB,UAAU,OAAf,UACE,cAACqgB,EAAA,EAAD,CAAKxJ,GAAI,GAAIC,GAAI,EAAjB,SACE,cAACyN,EAAA,EAAD,CAAOxN,IAAK1D,KAAOC,QAAQgS,EAAOjiB,KAAMrD,UAAS,4BAAuBylB,IAAOiB,gBAAgBpB,EAAOjiB,KAArD,QAAiE4T,WAAS,MAE5HiO,EAAU,cAAC7E,EAAA,EAAD,UACT,eAACmB,EAAA,EAAD,WACE,cAACnB,EAAA,EAAD,CAAK0B,GAAG,OAAOlL,GAAI,EAAG7W,UAAU,YAAhC,SACE,cAAC2mB,EAAA,EAAD,CAAgBC,MAAOnB,IAAOoB,cAAcvB,EAAOjiB,KAAnD,SACG,aAAIlD,MAAM,GAAGC,QAAQ0mB,UAAUzmB,KAAI,SAAAgD,GAAG,OAAIA,EAAM,KAAGhD,KAAI,SAAC0mB,EAAMxmB,EAAGymB,GAAV,OAAkB,eAAC,IAAMtf,SAAP,WACxE,cAACuf,EAAA,EAASC,SAAV,UAAuC,cAAC,KAAD,CAAOhnB,MAAO6mB,KAA7B,OAASA,GAChC7jB,OAAOsG,QAAQic,IAAO0B,iBAAiBjD,IAAgBpa,QAAO,oDAAgCsd,SAAWL,KAAM1mB,KAAI,mCAAEgD,EAAF,KAAOgkB,EAAP,YAClH,cAACJ,EAAA,EAAS1f,KAAV,CAAyBC,QAAS,kBAAM+d,EAAe,MAAOliB,IAA9D,SACGgkB,EAAUpiB,MADO5B,MAIpB9C,IAAMymB,EAAI/O,OAAS,GAAM,cAAEgP,EAAA,EAASK,QAAX,MAPkEP,UAWnG,cAAC1G,EAAA,EAAD,CAAK0B,GAAG,OAAOlL,GAAI,EAAG7W,UAAU,YAAhC,SACE,eAAC2mB,EAAA,EAAD,CAAgBC,MAAOnB,IAAO8B,aAAajC,EAAOnb,UAAlD,UACE,cAAC8c,EAAA,EAASC,SAAV,UACE,yDAEDhkB,OAAOsG,QAAQhH,KAAenC,KAAI,mCAAEgD,EAAF,KAAO4B,EAAP,YACjC,cAACgiB,EAAA,EAAS1f,KAAV,CAAyBC,QAAS,kBAAM+d,EAAe,WAAYliB,IAAnE,SACG4B,GADiB5B,WAKzB4iB,GAAqB,cAAC5F,EAAA,EAAD,CAAK0B,GAAG,OAAOlL,GAAI,EAAG7W,UAAU,OAAhC,SACpB,eAAC2mB,EAAA,EAAD,CAAgBC,MAAK,qBAAgBtB,EAAOe,YAAc,GAAKrmB,UAAU,QAAzE,UACE,cAACinB,EAAA,EAASC,SAAV,UACE,6DAED,aAAI/mB,MAAM,GAAGC,QAAQC,KAAI,SAAAgD,GAAG,OAC3B,cAAC4jB,EAAA,EAAS1f,KAAV,CAAyBC,QAAS,kBAAM+d,EAAe,cAAeliB,IAAtE,8BACiBA,EAAM,IADHA,WAK1B,cAACgd,EAAA,EAAD,CAAKxJ,GAAI,GAAI7W,UAAU,OAAvB,SACE,cAAC,GAAD,CACEiF,KAAM,iCAAM,cAAC,IAAD,CAAiBrF,KAAM4nB,IAASxnB,UAAU,SAAhD,SACNkB,YAAY,gBACZP,MAAOglB,EACPjR,SAAS,EACTvT,cAAe,SAACR,GAAD,OAAW4kB,EAAe,kBAAmB5kB,IAC5DwiB,aAAcsC,IAAOI,qBAAqBP,EAAOjiB,IAAKiiB,EAAOnb,cAGhEqb,GAAc,cAACnF,EAAA,EAAD,CAAKxJ,GAAI,GAAI7W,UAAU,OAAvB,SACb,cAAC,GAAD,CACEiF,KAAM,iCAAM,sBAAMjF,UAAU,OAAhB,SAAwBuM,aAAYiZ,KAAoBjO,KAAKC,YAAYgO,MACrFtkB,YAAY,iBACZP,MAAOmlB,EACPpR,QAA0C,MAAjC6C,KAAKG,YAAY8N,GAC1BrkB,cAAe,SAACR,GAAD,OAAW4kB,EAAe,iBAAkB5kB,IAC3DwiB,aAAcsC,IAAOO,oBAAoBV,EAAOjiB,IAAKiiB,EAAOnb,mBAKlE,eAACkW,EAAA,EAAD,WACE,cAACmB,EAAA,EAAD,CAAKxhB,UAAU,OAAf,SAAsB,eAACqgB,EAAA,EAAD,WACpB,qBAAIrgB,UAAU,OAAd,UAAsBylB,IAAOoB,cAAcvB,EAAOjiB,KAAlD,IAAyDoiB,IAAO8B,aAAajC,EAAOnb,UAApF,IAAgG8b,GAAiB,sBAAmBX,EAAOe,YAAc,EAAxC,QACjH,gCAAQ,cAAC,KAAD,CAAOnmB,MAAOulB,IAAOiB,gBAAgBpB,EAAOjiB,cAEtD,cAACme,EAAA,EAAD,UACE,cAACnB,EAAA,EAAD,UAAMmG,MAGR,4BAAIP,GAAqBR,IAAOgC,4BAA4BnC,EAAOjiB,IAAKiiB,EAAOe,YAAaxG,EAAMO,WAAY/W,KAC9G,eAACmY,EAAA,EAAD,WACE,cAACnB,EAAA,EAAD,CAAKxJ,GAAI,GAAIC,GAAI,EAAjB,SACE,uCAAU6O,OAEXH,GAAc,cAACnF,EAAA,EAAD,CAAKxJ,GAAI,GAAIC,GAAI,EAAjB,SACb,+BAAKS,KAAKC,YAAYgO,GAAtB,KAAqCM,EAAqBvO,KAAKG,YAAY8N,WAG9E,eAAChE,EAAA,EAAD,YACGiB,GAAoB0D,IAAqB,cAAC9F,EAAA,EAAD,CAAKxJ,GAAI,GAAT,SAAa,oBAAI7W,UAAU,OAAd,4BACvDmmB,GAAoBjjB,OAAOsG,QAAQ2c,GAAkB9lB,KAAI,mCAAEgD,EAAF,KAAOsf,EAAP,YACxD,eAACtC,EAAA,EAAD,CAAKxJ,GAAI,GAAIC,GAAI,EAAjB,UAAwCS,KAAKC,YAAYnU,GAAzD,KAAiEsf,EAAKpL,KAAKG,YAAYrU,KAA9D,OAASA,MAEnCof,GAAoBvf,OAAOsG,QAAQiZ,GAAkBpiB,KAAI,mCAAEgD,EAAF,KAAOsf,EAAP,YACxD,eAACtC,EAAA,EAAD,CAAKxJ,GAAI,GAAIC,GAAI,EAAjB,UAAwCS,KAAKC,YAAYnU,GAAzD,KAAiEsf,EAAKpL,KAAKG,YAAYrU,KAA9D,OAASA,eAK3C+hB,GAAmB,cAAC5D,EAAA,EAAD,UAAK,cAACnB,EAAA,EAAD,UAAK,gCAAQoF,IAAOiC,qBAAqBpC,EAAOjiB,iBAK/E,SAAS4hB,GAAellB,GAAQ,IACxB+f,EAAqG/f,EAArG+f,SAAUzW,EAA2FtJ,EAA3FsJ,UAAwByX,EAAmE/gB,EAAhFsJ,UAAayX,uBAA0B+C,EAAyC9jB,EAAzC8jB,YAAapD,EAA4B1gB,EAA5B0gB,cAAeC,EAAa3gB,EAAb2gB,SAE1Fb,EAAQa,GAAsBD,EAHL,EAKDpf,oBAAS,GALR,mBAKxB6jB,EALwB,KAKfC,EALe,OAMS9jB,oBAAS,GANlB,mBAMxBsmB,EANwB,KAMVC,EANU,KAQzBC,EAAiB,CAAC,UAAW,YAAa,WAAY,YAAa,aACjEC,EAAkB,CAAC,WAAY,YAAa,aAClDA,EAAgBxkB,KAAhB,MAAAwkB,EAAwBD,GACxB,IAAME,EAAe,CAAC,UAAW,KAAM,MAAO,WAAY,MAAO,OAAQ,WAAY,MAAO,QAC5FA,EAAazkB,KAAb,MAAAykB,EAAqBF,GACrB,IAAM1G,EAAgB,CAAC,OAAQ,WAAY,aAAc,SAAU,gBAAiB,WAEpF5W,IAAU6W,mBAAmBhe,SAAQ,SAAAie,GACnCF,EAAc7d,KAAd,UAAsB+d,EAAtB,mBACAF,EAAc7d,KAAd,UAAsB+d,EAAtB,gBAEF,IAAM2G,EAAe,CAAC,qBAAsB,qBAAsB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,MAAO,WAAY,UAAW,gBAExKC,EAAqB1d,IAAU0V,yBAAyB5W,EAAW,sBACnE6e,EAAqB3d,IAAU0V,yBAAyB5W,EAAW,sBACnE8e,EAAsB5Q,KAAKG,YAAYuQ,GAEvCG,EAAmE,MAAzC7Q,KAAKG,YAAYuQ,GAC3CI,EAAmB,CACrBnnB,YAAa,yBACbP,MAAO4J,IAAU0V,yBAAyB5W,EAAW,sBACrDlI,cAAe,SAACR,GAAD,OAAWkjB,EAAY,qBAAsBljB,KAE1D2nB,EAAmBF,EACrB,cAAC,KAAD,eAAsBC,IACpB,cAAC,KAAD,eAAoBA,IAEpB/G,EAAmB,CAAEjY,YAAWwW,QAAOC,YACvCyB,EAAuB,CAAElY,YAAWoX,gBAAeC,WAAUZ,YACjE,OAAO,qCACL,eAAC2B,EAAA,EAAD,CAAM9K,GAAG,eAAe5P,KAAK,YAAY/G,UAAU,OAAnD,UACE,cAACyhB,EAAA,EAAK7K,OAAN,UACE,eAAC4K,EAAA,EAAD,WACE,cAACnB,EAAA,EAAD,UACE,qDAEDP,EAAW,cAACO,EAAA,EAAD,CAAKxJ,GAAG,OAAR,SACV,cAAC6K,EAAA,EAAD,CAAQxa,QAASge,EAAU,SAAW,OAAQ1d,QAAS,kBAAM2d,GAAYD,IAAU7d,KAAK,KAAxF,SACE,iCAAM,cAAC,IAAD,CAAiBzH,KAAMslB,EAAUP,IAASpL,MAAhD,IAA4D2L,EAAU,OAAS,cAE1E,UAGZA,EACC,cAACzD,EAAA,EAAKrK,KAAN,UACE,eAACoK,EAAA,EAAD,CAAKxhB,UAAU,OAAf,UACG+nB,EAAa1nB,KAAI,SAAAmM,GAAO,OACvB,cAAC6T,EAAA,EAAD,CAAK0B,GAAI,EAAGlL,GAAI,GAAhB,SACE,cAAC,GAAD,CACE7W,UAAU,OACViF,KAAM,iCAAOsH,aAAYC,GAAnB,IAA8B+K,KAAKgR,kBAAkB/b,MAC3DtL,YAAW,eAAUqW,KAAKC,YAAYhL,IACtC7L,MAAO4J,IAAU0V,yBAAyB5W,EAAWmD,GACrDkI,QAAuC,MAA9B6C,KAAKG,YAAYlL,GAC1BrL,cAAe,SAACR,GAAD,OAAWkjB,EAAYrX,EAAS7L,IAC/CwiB,aAAc5Y,IAAUie,iBAAiBnf,EAAWmD,MAR/BA,MAY3B,cAAC6T,EAAA,EAAD,CAAK0B,GAAI,EAAGlL,GAAI,GAAhB,SACE,eAACwM,EAAA,EAAD,WACE,eAACsD,EAAA,EAAD,CACEC,MAAOrP,KAAKkR,uBAAuBR,EAAoB,oBACvD3S,GAAI+N,IAAWC,QAFjB,UAIE,cAAC2D,EAAA,EAASC,SAAV,uCACC3b,KAA4BlL,KAAI,SAAAgD,GAAG,OAClC,cAAC4jB,EAAA,EAAS1f,KAAV,CAAyBC,QAAS,kBAAMqc,EAAY,qBAAsBxgB,IAA1E,SACGkU,KAAKkR,uBAAuBplB,IADXA,SAIvBilB,EACAF,GAA4B,cAAC/E,EAAA,EAAWG,OAAZ,UAC3B,cAACH,EAAA,EAAWE,KAAZ,4BAMV,cAAC9B,EAAA,EAAKrK,KAAN,UACE,eAACoK,EAAA,EAAD,CAAKxhB,UAAU,OAAf,UACI0gB,GAAYI,EACZgH,EAAgBznB,KAAI,SAAAmM,GAAO,OAAI,cAAC,GAAD,aAAqBqK,GAAI,GAAIkL,GAAI,GAAjC,2BAA2DR,GAA3D,IAAiF/U,aAAxCA,MACxEsb,EAAgBznB,KAAI,SAAAmM,GAAO,OAAI,cAAC,GAAD,aAAcqK,GAAI,GAAIkL,GAAI,GAA1B,2BAAoDT,GAApD,IAAsE9U,aAApCA,MAClE0b,EAAqB,eAAC7H,EAAA,EAAD,CAAK0B,GAAI,EAAGlL,GAAI,GAAhB,UACpB,iCAAM,6CAAN,IAA0B,sBAAM7W,UAAWuK,IAAU+V,YAAYjX,EAAW,sBAAwB,eAAiB,GAA3F,SAAgGkO,KAAKC,YAAYyQ,QAC3I,sBAAMjoB,UAAS,sBAAiBuK,IAAU+V,YAAYjX,EAAW,sBAAwB,eAAiB,IAA1G,mBAAoH6e,GAApH,OAAyIC,QAClI,aAKjB,eAAC1G,EAAA,EAAD,CAAM9K,GAAG,eAAe5P,KAAK,YAAY/G,UAAU,OAAnD,UACE,cAACyhB,EAAA,EAAK7K,OAAN,UACE,eAAC4K,EAAA,EAAD,WACE,cAACnB,EAAA,EAAD,UACE,iDAEDP,EAAW,cAACO,EAAA,EAAD,CAAKxJ,GAAG,OAAR,SACV,cAAC6K,EAAA,EAAD,CAAQxa,QAASygB,EAAe,SAAW,OAAQngB,QAAS,kBAAMogB,GAAiBD,IAAetgB,KAAK,KAAvG,SACE,iCAAM,cAAC,IAAD,CAAiBzH,KAAM+nB,EAAehD,IAASpL,MAArD,IAAiEoO,EAAe,OAAS,cAEpF,UAGZA,EACC,cAAClG,EAAA,EAAKrK,KAAN,UACE,cAACoK,EAAA,EAAD,CAAKxhB,UAAU,OAAf,SACGmhB,EAAc9gB,KAAI,SAAAmM,GAAO,OACxB,cAAC6T,EAAA,EAAD,CAAK0B,GAAI,EAAGlL,GAAI,GAAhB,SACE,cAAC,GAAD,CACE7W,UAAU,OACViF,KAAM,iCAAOsH,aAAYC,GAAnB,IAA8B+K,KAAKC,YAAYhL,MACrDtL,YAAW,eAAUqW,KAAKmR,eAAelc,IACzC7L,MAAO4J,IAAU0V,yBAAyB5W,EAAWmD,GACrDkI,QAAuC,MAA9B6C,KAAKG,YAAYlL,GAC1BrL,cAAe,SAACR,GAAD,OAAWkjB,EAAYrX,EAAS7L,IAC/CwiB,aAAc5Y,IAAUie,iBAAiBnf,EAAWmD,MAR/BA,UAa/B,cAACiV,EAAA,EAAKrK,KAAN,UACE,cAACoK,EAAA,EAAD,CAAKxhB,UAAU,OAAf,SACI0gB,GAAYI,EACZK,EAAc9gB,KAAI,SAAAmM,GAAO,OAAI,cAAC,GAAD,aAAqBqK,GAAI,GAAIkL,GAAI,GAAjC,2BAA2DR,GAA3D,IAAiF/U,aAAxCA,MACtE2U,EAAc9gB,KAAI,SAAAmM,GAAO,OAAI,cAAC,GAAD,aAAcqK,GAAI,GAAIkL,GAAI,GAA1B,2BAAoDT,GAApD,IAAsE9U,aAApCA,aAKzE,eAACiV,EAAA,EAAD,CAAM9K,GAAG,eAAe5P,KAAK,YAAY/G,UAAU,OAAnD,UACE,cAACyhB,EAAA,EAAK7K,OAAN,UACE,cAAC4K,EAAA,EAAD,UACE,cAACnB,EAAA,EAAD,UACE,oDAIN,cAACoB,EAAA,EAAKrK,KAAN,UACE,cAACoK,EAAA,EAAD,CAAKxhB,UAAU,OAAf,SACI0gB,GAAYI,EACZkH,EAAa3nB,KAAI,SAAAmM,GAAO,OAAI,cAAC,GAAD,aAAqBqK,GAAI,GAAIkL,GAAI,GAAjC,2BAA2DR,GAA3D,IAAiF/U,aAAxCA,MACrEwb,EAAa3nB,KAAI,SAAAmM,GAAO,OAAI,cAAC,GAAD,aAAcqK,GAAI,GAAIkL,GAAI,GAA1B,2BAAoDT,GAApD,IAAsE9U,aAApCA,gB,8DC1X3D,SAASmc,GAAoB5oB,GAAQ,IAC5CsJ,EAAuItJ,EAAvIsJ,UAD2C,EAC4FtJ,EAA5HsJ,UAAaa,EADmB,EACnBA,aAAcC,EADK,EACLA,SAAUC,EADL,EACKA,cAAeU,EADpB,EACoBA,QAAWgV,EAA6D/f,EAA7D+f,SAAUiB,EAAmDhhB,EAAnDghB,SAAU8C,EAAyC9jB,EAAzC8jB,YAAanD,EAA4B3gB,EAA5B2gB,SAAUD,EAAkB1gB,EAAlB0gB,cACvHZ,EAAQa,GAAsBD,EAE9BnW,EAAYC,IAAUC,aAAaL,GAMnCye,EAAiB,2BAAQ7oB,GAAR,IAAeuK,cAC9Bue,EAAqB,SAAC,GAA4B,IAA1BlM,EAAyB,EAAzBA,SAAUmM,EAAe,EAAfA,SAChCC,EAAkBxM,qBAAWiC,GAC7BwK,EAAmB1K,EACvB3B,GACA,kBAAMmM,GAAYA,EAASnM,MAEvBsM,EAAWF,IAAoBpM,EACrC,OACE,eAAC+E,EAAA,EAAD,CAEEla,QAASwhB,EAFX,UAIE,cAAC,IAAD,CAAiBppB,KAAMqpB,EAAWC,IAAmBC,IAAkBnpB,UAAS,gBAAWipB,EAAW,gBAAkB,MACxH,qCAAeA,EAAW,UAAY,aAwB5C,OAAO,qCACL,cAACzH,EAAA,EAAD,UAAK,cAACnB,EAAA,EAAD,CAAKxJ,GAAI,GAAI7W,UAAU,OAAvB,SACH,eAAC,GAAD,WACE,eAACyhB,EAAA,EAAD,CAAM9K,GAAG,eAAe5P,KAAK,YAAY/G,UAAU,OAAnD,UACE,cAACyhB,EAAA,EAAK7K,OAAN,UACE,eAAC4K,EAAA,EAAD,WACE,eAACnB,EAAA,EAAD,WACE,sBAAMrgB,UAAU,UAAhB,wCACA,2EAEF,cAACqgB,EAAA,EAAD,CAAKxJ,GAAG,OAAR,SACE,eAACuS,GAAA,EAAD,CAAmB5nB,KAAK,QAAQb,MAAOmK,EAAS7F,KAAK,aAAavD,SAAU,SAACoJ,GAAD,OAAaiW,EAAS,CAAEjW,aAApG,UACE,cAACue,GAAA,EAAD,CAAc1oB,MAAM,UAApB,sBACA,cAAC0oB,GAAA,EAAD,CAAc1oB,MAAM,MAApB,iCACA,cAAC0oB,GAAA,EAAD,CAAc1oB,MAAM,WAApB,+BAGJ,cAAC0f,EAAA,EAAD,CAAKxJ,GAAG,OAAR,SACE,cAACgS,EAAD,CAAoBvT,GAAIoM,IAAQ/E,SAAS,aAI/C,cAAC,GAAUiC,SAAX,CAAoBjC,SAAS,IAA7B,SACE,eAAC8E,EAAA,EAAKrK,KAAN,WACE,cAACoK,EAAA,EAAD,CAAKxhB,UAAU,OAAf,SAAsB,cAACqgB,EAAA,EAAD,UACpB,cAACqB,EAAA,EAAD,CAAQxa,QAAQ,UAAhB,SACE,mBAAGoiB,KAAK,uEAAuE1nB,OAAO,SAAS2nB,IAAI,aAAnG,4FAKJ,eAAC/H,EAAA,EAAD,WACE,cAACnB,EAAA,EAAD,CAAKxJ,GAAI,GAAI8K,GAAI,EAAG3hB,UAAU,OAA9B,SACE,cAAC,GAAD,CACEiF,KAAM,4CACNtE,MAAO4J,IAAU0V,yBAAyB5W,EAAW,eACrDnI,YAAaqW,KAAKmR,eAAe,eACjCvF,aAAc5Y,IAAUie,iBAAiBnf,EAAW,eACpDlI,cAAe,SAACwhB,GAAD,OAASkB,EAAY,cAAelB,QAGtD,CAAC,YAAD,oBAAgBpY,IAAU6W,qBAAoB/gB,KAAI,SAAA2gB,GACjD,IAAIxU,EAAqB,aAAXwU,EAAwB,gBAAxB,UAA6CA,EAA7C,kBACVwI,EAA6B,aAAXxI,EAAwB,qBAAxB,UAAkDA,EAAlD,uBAClByI,EAAkBlf,IAAU0V,yBAAyB5W,EAAWmgB,GACpE,OAAO,cAACnJ,EAAA,EAAD,CAAKxJ,GAAI,GAAI8K,GAAI,EAAgB3hB,UAAU,OAA3C,SACL,cAAC,GAAD,CACEkjB,WAAY,eAACxB,EAAA,EAAD,CAAQxa,QAAS8Z,EAAQxZ,QAAS,kBAAMqc,EAAY2F,GAAkBC,IAAkBzpB,UAAU,mBAAlG,UACV,cAAC,IAAD,CAAiBJ,KAAM6pB,EAAkB3hB,IAAgBC,IAAU/H,UAAU,UADnE,eAGZiF,KAAM,4BAAIsS,KAAKmR,eAAelc,KAC9B7L,MAAO4J,IAAU0V,yBAAyB5W,EAAWmD,GACrDtL,YAAaqW,KAAKmR,eAAelc,GACjC2W,aAAc5Y,IAAUie,iBAAiBnf,EAAWmD,GACpDrL,cAAe,SAACwhB,GAAD,OAASkB,EAAYrX,EAASmW,IAC7CvhB,SAAUqoB,KAVkBzI,iBAmB1C,eAACS,EAAA,EAAD,CAAM9K,GAAG,eAAe5P,KAAK,YAA7B,UACE,cAAC0a,EAAA,EAAK7K,OAAN,UACE,eAAC4K,EAAA,EAAD,WACE,eAACnB,EAAA,EAAD,WACE,sBAAMrgB,UAAU,UAAhB,yCACA,gFAEF,cAACqgB,EAAA,EAAD,CAAKxJ,GAAG,OAAR,SACE,cAACgS,EAAD,CAAoBvT,GAAIoM,IAAQ/E,SAAS,aAI/C,cAAC,GAAUiC,SAAX,CAAoBjC,SAAS,IAA7B,SACE,cAAC8E,EAAA,EAAKrK,KAAN,UACE,cAACoK,EAAA,EAAD,UAlGa,WACvB,IAAIphB,EAAO,CAAC,WAAY,YAAa,aAEjCspB,EAAkBnf,IAAUmf,gBAAgBxf,GAC5Cyf,EAAkBpf,IAAUof,gBAAgBzf,GAC5C0f,EAAW,CAAC,WAAY,WAAY,UAaxC,OAXKF,GACHE,EAASxmB,SAAQ,SAAAC,GAAG,OAAIjD,EAAKkD,KAAKiH,IAAUsf,iBAAiBxmB,EAAKgG,OAChEqgB,GAAoBC,GAAmBtgB,EAAUygB,YACnDF,EAASxmB,SAAQ,SAAAC,GAAG,OAAIjD,EAAKkD,KAAKiH,IAAUsf,iBAAiBxmB,EAAKgG,GAAW,OACzB,QAA7CkB,IAAU4Z,iBAAiBja,IAClC9J,EAAKkD,KAAKiH,IAAUsf,iBAAiB,WAAYxgB,GAAW,IANhD,CAAC,MAAO,QAAS,SAQvBjG,SAAQ,SAAAC,GAAG,OAAIjD,EAAKkD,KAAKiH,IAAUsf,iBAAiBxmB,EAAKgG,OAEjEjJ,EAAI,aAAO,IAAI+Z,IAAI/Z,EAAKC,KAAI,SAAAgD,GAAG,aAAIyW,aAAmBzW,EAAD,UAAMwc,EAAMO,kBAAZ,aAAM,EAAkBxG,qBAAmBmQ,SAEzF7mB,OAAO9C,KAAK4pB,MAAalgB,QAAO,SAAAzG,GAAG,OAAIjD,EAAK8Z,SAAS7W,MAiF/C4mB,GAAmB5pB,KAAI,SAAAgD,GACtB,IAD6B,EACzBuW,EAAoBiG,EAAMO,WAAWxG,kBAAoB,GACzDsQ,EAAU,KAFe,eAGCtQ,GAHD,IAG7B,kCAAWG,EAAX,QACE,IAAI,UAAAC,KAAgB,OAACD,QAAD,IAACA,OAAD,EAACA,EAAiB1W,YAAlC,eAAwCA,OAAQA,EAAK,CACvD6mB,EAAU3S,KAAK4S,qBAAqBtK,EAAMO,WAAYrG,EAAgB1W,IAAK0W,EAAgBqQ,SAAS,GACpG,QANyB,8BAS7B,OADAF,EAAUA,GAAW3S,KAAK8S,aAAahnB,EAAKwc,EAAMO,YAAY,GACvD,cAACC,EAAA,EAAD,CAAexJ,GAAI,GAAI7W,UAAU,OAAjC,SACL,eAACyhB,EAAA,EAAD,CAAM9K,GAAG,cAAc5P,KAAK,YAA5B,UACE,cAAC0a,EAAA,EAAK7K,OAAN,CAAa5W,UAAU,MAAvB,SACGuX,KAAK+S,UAAUjnB,EAAKwc,EAAMO,cAE7B,cAACqB,EAAA,EAAKrK,KAAN,CAAWpX,UAAU,MAArB,SACE,gCAAQkqB,UANG7mB,sBAiB/B,cAACme,EAAA,EAAD,UAnJmB,CAAC,CAAC,OAAQ,yBAA0B,CAAC,QAAS,mBAAoB,CAAC,QAAS,oBAqJ7EnhB,KAAI,mCAAEkqB,EAAF,KAAQC,EAAR,YAClB,cAACnK,EAAA,EAAD,CAAgBxJ,GAAI,GAAIC,GAAI,EAAGiL,GAAI,EAAG/hB,UAAU,OAAhD,SACE,cAACyqB,GAAD,2BACM7B,GADN,IAEEne,UAAW8f,EACXG,SAAUF,MAJJD,QAQd,cAAC/I,EAAA,EAAD,UA5JiB,CAAC,CAAC,WAAY,0BAA2B,GAAI,CAAC,WAAY,0BAA2B,GAAI,CAAC,WAAY,sBAAuB,IA8J9HnhB,KAAI,YAAyB,IAAD,mBAAtBkqB,EAAsB,KAAhBC,EAAgB,KAATG,EAAS,KACpCC,EAAUtgB,GAAaqgB,EAC3B,OAAO,cAACtK,EAAA,EAAD,CAAgB/H,MAAO,CAAEC,QAASqS,EAAU,EAAI,IAAO/T,GAAI,GAAIC,GAAI,EAAG9W,UAAU,OAAhF,SACL,cAACyqB,GAAD,2BACM7B,GADN,IAEEne,UAAW8f,EACXG,SAAUF,MAJGD,QASrB,cAAC/I,EAAA,EAAD,UACE,cAACnB,EAAA,EAAD,UACE,qBAAIrgB,UAAU,cAAd,+BAA+CoK,SAGnD,cAACoX,EAAA,EAAD,UAEG,aAAIrhB,MAAM,GAAGC,QAAQC,KAAI,SAAAE,GACxB,IAAIgqB,EAAI,uBAAmBhqB,EAAI,GAC/B,OAAO,cAAC8f,EAAA,EAAD,CAAaxJ,GAAI,GAAIC,GAAI,EAAG9W,UAAU,OAC3CsY,MAAO,CAAEC,QAASnO,EAAgB7J,EAAI,EAAI,IADrC,SAEL,cAACkqB,GAAD,2BACM7B,GADN,IAEEne,UAAW8f,EACXG,SAAQ,2BAAsBnqB,EAAI,GAClCsqB,aAAc/K,EAAY,kBAAMiB,EAAS,CAAE3W,cAAgB7J,EAAI,IAAO6J,EAAgB7J,EAAIA,EAAI,UAAQqJ,MANzFrJ,WAczB,IAAMuqB,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACxC,SAASL,GAAiB1qB,GAAQ,IAC1BsJ,EAA4JtJ,EAA5JsJ,UADyB,EACmItJ,EAAjJsJ,UAAaa,EADC,EACDA,aAAcE,EADb,EACaA,cADb,IAC4B0f,mBAD5B,SACmDrf,EAAgF1K,EAAhF0K,UAAWigB,EAAqE3qB,EAArE2qB,SAAUpgB,EAA2DvK,EAA3DuK,UAAWmW,EAAgD1gB,EAAhD0gB,cAAeC,EAAiC3gB,EAAjC2gB,SAAUZ,EAAuB/f,EAAvB+f,SAAUiB,EAAahhB,EAAbghB,SADtH,EAEchhB,EAAvC8qB,oBAFyB,MAEV,KAFU,EAED9K,EAFC,GAEchgB,EAFd,kBAG3B8f,EAAQa,GAAsBD,EAC9BsK,EAAS,KAJkB,EAKoBxgB,IAAUK,kBAAkBvB,EAAWoB,EAAWL,GAAe,GALrF,IAKzBO,oBALyB,WAKVf,EALU,MAKCohB,kBALD,MAKc,EALd,EAM3BC,EAAY,KAChB,GAAkB,SAAdxgB,GAAwBF,IAAUof,gBAAgBzf,GAAe,CACnE,IAAI8W,EAASzW,IAAU0W,gBAAgB/W,GACvC+gB,EAAY,cAAC5K,EAAA,EAAD,CAAKxJ,GAAG,OAAR,SACV,cAAC6K,EAAA,EAAD,CAAQxa,QAAS4iB,EAAc9I,EAAS,YAAahhB,UAAU,aAAaoB,UAAW0e,EAAUtY,QAASsY,EAAY,kBAAMiB,GAAS,SAAA+B,GAAK,MAAK,CAAEgH,aAAchH,EAAMgH,sBAAmBlgB,EAAWvC,KAAMyY,EAAW,KAAO,KAA3N,SACGgK,EACC,iDAAmB,4BAAIvf,IAAU2gB,iBAAiBlK,QAChD,kBAIV,GAA4B,kBAAjBrW,EACT,GAAImV,EAAU,CAMZiL,EAAS,cAACtJ,EAAA,EAAK7K,OAAN,UACP,eAAC4K,EAAA,EAAD,WACE,cAACnB,EAAA,EAAD,CAAKxJ,GAAG,OAAR,SACE,cAAC8P,EAAA,EAAD,CAAgBC,MAAK,qBAAgBjc,EAAe,GAApD,SACG,aAAIxK,MAAM2qB,GAAaxgB,IAAYlK,QAAQC,KAAI,SAAAE,GAAC,OAC/C,eAAC0mB,EAAA,EAAS1f,KAAV,CAAuBC,QAAS,kBAVpB+iB,EAUyC9f,EAVnC0gB,EAU8C5qB,EAVrCwgB,GAAS,SAAA+B,GAC5C,IAAIsI,EAAkBtI,EAAMsI,iBAAmB,GAE/C,OADAA,EAAgBb,GAAQY,EACjB,CAAEC,sBAHU,IAACb,EAAMY,GAUlB,wBAAgF5qB,EAAIyqB,EAAa,IAA7EzqB,UAGzB0qB,YAILF,EAAS,cAACtJ,EAAA,EAAK7K,OAAN,UACP,eAAC4K,EAAA,EAAD,WACE,cAACnB,EAAA,EAAD,CAAKxJ,GAAG,OAAR,iCACoBlM,EAAe,KAEnC,cAAC0V,EAAA,EAAD,CAAKxJ,GAAG,OAAR,SACGoU,SAMX,IAAII,EAAW,KACXC,EAAc/gB,IAAUghB,eAAerhB,EAAcO,EAAWL,EAAeE,GAkBnF,OAjBIghB,IACFD,EAAW,cAAC7J,EAAA,EAAD,UAAK,cAACnB,EAAA,EAAD,UACd,cAACoB,EAAA,EAAD,CAAM9K,GAAG,cAAc5P,KAAK,YAAY/G,UAAU,mBAAlD,SACE,cAACwrB,GAAA,EAAD,CAAWxrB,UAAU,aAAakH,QAAQ,QAA1C,SACGhE,OAAOsG,QAAQ8hB,GAAajrB,KAAI,WAAqBorB,GAArB,uBAAEjf,EAAF,KAAWwT,EAAX,YAC/B,cAACwL,GAAA,EAAUjkB,KAAX,CAA8BL,QAASukB,EAAQ,EAAI,aAAe,eAAgBzrB,UAAU,MAA5F,SACE,gCACE,+BAAM,4BAAIuX,KAAKC,YAAYhL,OAC3B,uBAAMxM,UAAU,yBAAhB,UAA0CggB,EAASzI,KAAKG,YAAYlL,UAHnDA,eAYxB,eAACiV,EAAA,EAAD,CAAM9K,GAAG,eAAe5P,KAAK,YAAY/G,UAAU,QAAnD,UACJ+qB,EACD,eAACtJ,EAAA,EAAKrK,KAAN,WACE,eAACoK,EAAA,EAAD,CAAKxhB,UAAU,yBAAyBwH,QAASqjB,EAAcvS,MAAO,CAAEwM,OAAShF,GAAY+K,EAAgB,UAAY,WAAzH,UACE,cAACxK,EAAA,EAAD,CAAKxJ,GAAG,OAAO7W,UAAU,mCAAzB,SACE,cAACukB,EAAA,EAAD,CAAOxN,IAAKxM,IAAUmhB,aAAaxhB,EAAcO,GAAYzK,UAAU,gBAEzE,eAACqgB,EAAA,EAAD,CAAKrgB,UAAU,cAAf,UACE,cAACyhB,EAAA,EAAKpK,MAAN,UAAa9M,IAAUohB,cAAczhB,EAAcO,KACnD,cAACgX,EAAA,EAAKmK,SAAN,UAAgBlB,UAGnBngB,IAAUshB,kBAAkB3hB,EAAcO,GAAWpK,KAAI,SAACyrB,EAASvrB,GAGlE,GAFuB,oBAAZurB,IACTA,EAAUA,EAAQ1hB,EAAeE,KAC9BwhB,EAAS,OAAO,KAErB,IAAIC,EAAaD,EAAQ/kB,KACC,oBAAfglB,IACTA,EAAaA,EAAWphB,EAAckV,EAAMO,WAAY/W,IAC1D,IAAI2iB,EAASF,EAAQE,QAAU,GAE3B1lB,EAAcwlB,EAAQxlB,YACC,oBAAhBA,IACTA,EAAcA,EAAYqE,EAAcP,EAAeE,IACzD,IAAIkc,EAAiB,KACrB,GAAIlgB,EAAa,CACf,IAAIC,EAAiBgc,KAAiBC,kBAAkBnZ,EAAUgB,mBAAoB,CAAEL,OAAQS,EAAWR,QAAS3D,EAAYoE,iBAC5H+X,EAAmB,GACnBwJ,EAAoB,GACpB1lB,IACFkc,EAAmBlY,IAAU2hB,0BAA0B5lB,EAAaC,EAAgB,IAEpFkc,EAAmBvf,OAAOqG,YAAYrG,OAAOsG,QAAQiZ,GAAkB3Y,QAAO,mCAAEzG,EAAF,gBAAsB,qBAARA,MAC5F4oB,EAAoB1hB,IAAU4hB,2BAA2B7lB,EAAaC,EAAgB,KAIxFigB,EAAiB,cAAChF,EAAA,EAAD,UAAK,cAACnB,EAAA,EAAD,UACpB,eAACoB,EAAA,EAAD,CAAM9K,GAAG,cAAc5P,KAAK,YAAY/G,UAAU,mBAAlD,UACE,cAACyhB,EAAA,EAAK7K,OAAN,UACE,cAACvQ,GAAA,EAAD,CAAqBjF,UAAW0e,EAC9BxZ,YAAaA,EACbC,eAAgBA,EAChBC,eARa,SAACD,GAAD,OAAoBwa,GAAS,SAAA+B,GAAK,MACpD,CAAEzY,mBAAoBkY,KAAiB/b,eAAesc,EAAMzY,mBAAoB,CAAEL,OAAQS,EAAWR,QAAS3D,EAAYoE,gBAAkBnE,QAQvIE,OAAQ,+BAAOH,EAAYU,gBAE/B,eAACwkB,GAAA,EAAD,CAAWxrB,UAAU,aAAakH,QAAQ,QAA1C,UACGhE,OAAOsG,QAAQiZ,GAAkBpiB,KAAI,WAAqBorB,GAArB,uBAAEjf,EAAF,KAAWwT,EAAX,YACpC,cAACwL,GAAA,EAAUjkB,KAAX,CAA8BL,QAASukB,EAAQ,EAAI,aAAe,eAAgBzrB,UAAU,MAA5F,SACE,gCACE,+BAAM,4BAAIuX,KAAKC,YAAYhL,OAC3B,uBAAMxM,UAAU,yBAAhB,UAA0CggB,EAASzI,KAAKG,YAAYlL,UAHnDA,MAOtByf,EAAkB5rB,KAAI,SAAC+rB,EAAW7rB,GAAZ,eAAkB,cAAC8rB,GAAD,aAAwDZ,MAAOlrB,IAAqB,QAAhB,EAAAkiB,SAAA,eAAkBxK,SAAU,IAAhG,aAA0GqU,MAAOF,EAAWzhB,eAAcL,aAAcyV,IAArIxf,IAAqB,QAAhB,EAAAkiB,SAAA,eAAkBxK,SAAU,iBAKrG,OAAO,cAACuJ,EAAA,EAAD,CAAKxhB,UAAU,OAAf,SAA0C,eAACqgB,EAAA,EAAD,CAAKxJ,GAAI,GAAT,UAC/C,+BAAOkV,IACNC,EAAO/T,OAAS,GAAK,cAACuT,GAAA,EAAD,CAAWxrB,UAAU,yBAArB,SACnBgsB,EAAO3rB,KAAI,SAACisB,EAAO/rB,GAAR,OAAc,cAAC8rB,GAAD,aAAsBZ,MAAOlrB,GAA7B,aAAsC+rB,QAAO3hB,eAAcL,aAAcyV,IAAtDxf,QAE9CimB,MAL+B,UAAYjmB,MAQ/C8qB,QAIP,SAASgB,GAAatsB,GAAQ,IAAD,IACrBsJ,EAAwItJ,EAAxIsJ,UADqB,EACmHtJ,EAA7HsJ,UAAayX,EADH,EACGA,uBAAwB1W,EAD3B,EAC2BA,cAAiBkiB,EAAuEvsB,EAAvEusB,MAAOb,EAAgE1rB,EAAhE0rB,MADnD,EACmH1rB,EAAzD4K,oBAD1D,MACyE,EADzE,EAC4EL,EAAuCvK,EAAvCuK,UAAWmW,EAA4B1gB,EAA5B0gB,cAAeC,EAAa3gB,EAAb2gB,SAC7Hb,EAAQa,GAAsBD,EAGlC,GAFqB,oBAAV6L,IACTA,EAAQA,EAAMliB,EAAeE,KAC1BgiB,EAAO,OAAO,KAEnB,IAAIC,EAAYD,EAAMvlB,KACG,oBAAdwlB,IACTA,EAAS,UAAGA,SAAH,aAAG,EAAY5hB,EAAckV,EAAMO,WAAY/W,IAE1D,IAAImjB,EAAaF,EAAMG,SACG,oBAAfD,IACTA,EAAU,UAAGA,SAAH,aAAG,EAAa7hB,EAAckV,EAAMO,WAAY/W,IACxDmjB,IACFA,EAAa,cAAC/I,GAAA,EAAD,CACXzK,UAAU,MACVC,QAAS,cAACyK,GAAA,EAAD,UAAU8I,IAFR,SAIX,cAAC,IAAD,CAAiB5sB,KAAM8sB,IAAkB1sB,UAAU,OAAOsY,MAAO,CAAEwM,OAAQ,aAG/E,IACoC,EADhC6H,EAAWL,EAAM3rB,MAAQ2rB,EAAM3rB,MAAQ2rB,EAAMM,SACzB,oBAAbD,IACTA,EAAQ,UAAGA,SAAH,aAAG,EAAWhiB,EAAckV,EAAMO,WAAY/W,IAMxD,GAJwB,kBAAbsjB,IACTA,EAAW7X,KAAK+X,MAAMF,IAGpB7L,GAA0BL,GAAqC,kBAAbkM,EAAuB,CAAC,IAAD,MACvEG,EAAmBR,EAAM3rB,MAAQ2rB,EAAM3rB,MAAQ2rB,EAAMM,SACzB,oBAArBE,IACTA,EAAmB7qB,SAAQ,UAAC6qB,SAAD,iBAAC,EAAmBniB,EAAc8V,EAAcL,WAAY/W,UAA5D,iBAAC,EAAuEgP,eAAxE,aAAC,SAAiF,KAC/G,IAAI0U,EAAOJ,EAAWG,EACtBH,EAAW,iCAAOG,EAAkBC,EAAO,uBAAM/sB,UAAW+sB,EAAO,EAAI,eAAiB,cAA7C,eAA+DA,EAAO,EAAI,IAAM,GAAIA,EAApF,OAAoG,MAGjJ,OAAO,cAACvB,GAAA,EAAUjkB,KAAX,CAAgBL,QAASukB,EAAQ,EAAI,aAAe,eAAgBzrB,UAAU,MAA9E,SACL,gCACE,iCAAM,4BAAIusB,IAAeC,KACzB,sBAAMxsB,UAAU,yBAAhB,SAA0C2sB,SCvXhD,IAAMK,GAAa/X,IAAMC,YACvB,WAA+D1P,GAAS,IAArEmP,EAAoE,EAApEA,SAAU2D,EAA0D,EAA1DA,MAAOtY,EAAmD,EAAnDA,UAA8BitB,EAAqB,EAAxC,mBAC7B,OACE,qBACEznB,IAAKA,EACL8S,MAAO,CAAEA,QAAO4U,SAAU,SAC1BltB,UAAWA,EACXmtB,kBAAiBF,EAJnB,SAME,cAACzL,EAAA,EAAD,UACGvM,IAAM4J,SAASuO,QAAQzY,GAAUtU,KAAI,SAACgtB,EAAO9sB,GAAR,OAAc,cAAC8f,EAAA,EAAD,CAAaxJ,GAAI,EAAjB,SAAqBwW,GAAX9sB,aAOnD+sB,G,kDACnB,WAAYvtB,GAAQ,IAAD,8BACjB,cAAMA,IAiDRwtB,qBAAuB,WACjB,EAAKzK,MAAMhK,IACb,EAAKiI,SAAS5Y,IAAkBS,aAAa,EAAKka,MAAMhK,KAE1D,EAAK/Y,MAAMuW,YAAc,EAAKvW,MAAMuW,cAAgB,EAAKA,eAtDxC,EAwDnBkX,YAAc,SAAC7K,GAAD,OAAS,EAAK5B,SAAS4B,IAxDlB,EAyDnB8K,gBAAkB,SAACvjB,GAAD,OAChB,EAAK6W,SAAS,CAAE7W,eAAcjF,KAAMyoB,YAA0BnjB,IAAUojB,UAAUzjB,IAAgBob,OAAQgI,EAAqBM,gBAAgB1jB,MA1D9H,EA2DnB2jB,YAAc,SAAC1jB,GAAD,OACZ,EAAK4W,SAAS,CAAE5W,cA5DC,EA8DnB0Z,YAAc,SAACrX,EAAS7L,GAAV,OAAoB,EAAKogB,UAAS,SAAA+B,GAC9C,IAAIgL,EAAoBhL,EAAMgL,kBAE9B,OADkBvjB,IAAUie,iBAAiB,EAAK1F,MAAOtW,KACrC7L,UACXmtB,EAAkBthB,GAClB,CAAEshB,uBAETA,EAAkBthB,GAAW7L,EACtB,CAAEmtB,0BAtEM,EA0EnBhK,iBAAmB,SAAC1Z,GAAD,OAAmB,EAAK2W,SAAS,CAAE3W,mBAxEpDpC,cACIjI,EAAMguB,YACR,EAAKjL,MAAQ3a,IAAkBS,aAAa7I,EAAMguB,aAElD,EAAKjL,MAAQwK,EAAqBU,kBANnB,E,gEA2EE,IAAD,OAClBC,QAAQC,IAAI,CACV3jB,IAAU4jB,yBACV1I,IAAO2I,sBACPlY,IAASmY,0BACRjsB,MAAK,kBAAM,EAAKkU,mB,2CAKnB,GAFIF,KAAKrW,MAAMguB,aAAe3X,KAAK0M,MAAMhK,KAAO1C,KAAKrW,MAAMguB,aACzD3X,KAAK2K,SAAS5Y,IAAkBS,aAAawN,KAAKrW,MAAMguB,cACtD3X,KAAKrW,MAAM+f,SAAU,CAEvB,IAAIgD,EAAQwL,YAAUlY,KAAK0M,OAE3B,UADOA,EAAMhC,uBACT1K,KAAK0M,MAAMhK,GACb3Q,IAAkB4C,gBAAgB+X,OAC7B,CACL,IAAIhK,EAAK3Q,IAAkBomB,aAAazL,GACxC1M,KAAK2K,SAAS,CAAEjI,W,+BAIZ,IAAD,qBACuC1C,KAAKrW,MAA7CyuB,EADC,EACDA,OAAQ9N,EADP,EACOA,SAAUZ,EADjB,EACiBA,SAAU2O,EAD3B,EAC2BA,QAC9BplB,EAAY+M,KAAK0M,MAFd,EAGkD1M,KAAK0M,MAAxD5Y,EAHC,EAGDA,aAAcC,EAHb,EAGaA,SAAU2W,EAHvB,EAGuBA,uBAC1BL,EAAgBlW,IAAUmkB,eAAetY,KAAK0M,OAC9C6L,EAAoB,iCACtB,cAACpK,EAAA,EAAD,CAAOxN,IAAKxM,IAAUqkB,SAAS1kB,GAAelK,UAAU,0BAA0B+kB,eAAa,IAC/F,qBAAI/kB,UAAU,WAAd,cAA2BuK,IAAU+Z,QAAQpa,GAA7C,UAGF,OAAQ,eAACuX,EAAA,EAAD,CAAM9K,GAAG,cAAc5P,KAAK,YAA5B,UACN,cAAC0a,EAAA,EAAK7K,OAAN,UACE,eAAC4K,EAAA,EAAD,WACE,cAACnB,EAAA,EAAD,CAAKxJ,GAAI,OAAT,SAEGiJ,EAAW,eAAC+O,EAAA,EAAD,WACV,eAAC5H,EAAA,EAAD,WACE,cAAC6H,EAAA,EAAD,CAAgBxZ,GAAIoM,IAApB,SACGiN,IAEH,cAAC1H,EAAA,EAAS3f,KAAV,CAAegO,GAAI0X,GAAnB,SACGziB,IAAUwkB,sBAAsB1uB,KAAI,SAAA2uB,GAAO,OAC1C,cAAC/H,EAAA,EAAS1f,KAAV,CAA6BC,QAAS,kBAAM,EAAKimB,gBAAgBuB,IAAjE,SACE,iCACE,cAACzK,EAAA,EAAD,CAAOxN,IAAKxM,IAAUqkB,SAASI,GAAUhvB,UAAS,oCAA+BuK,IAAUia,QAAQwK,GAAjD,QAAiE/X,WAAS,IAC5H,qBAAIjX,UAAU,gBAAd,UAA+BuK,IAAU+Z,QAAQ0K,GAAjD,WAHgBA,WAQ1B,eAACrI,EAAA,EAAD,CAAgBrR,GAAIuZ,IAAajI,MAC/B,qBAAI5mB,UAAU,WAAd,UAA0BuK,IAAU0kB,cAAc9kB,GAAlD,OADF,UAGE,cAAC8c,EAAA,EAASC,SAAV,UACE,+DAED3c,IAAU2kB,eAAe7uB,KAAI,SAAA8uB,GAAM,OAClC,cAAClI,EAAA,EAAS1f,KAAV,CAA4BC,QAAS,kBAAM,EAAKqmB,YAAYsB,IAA5D,SACE,+BAAM5kB,IAAU0kB,cAAcE,GAA9B,QADkBA,YAIT,iCAAOR,EAAP,SAAgCpkB,IAAU0V,yBAAyB7J,KAAK0M,MAAO,mBAGlG,cAACzC,EAAA,EAAD,CAAKrgB,UAAU,YAAf,SACG8f,EAAW,eAACuD,EAAA,EAAD,WACV,cAACA,EAAA,EAAWC,QAAZ,UACE,eAACD,EAAA,EAAWE,KAAZ,WAAiB,cAAC,IAAD,CAAiB3jB,KAAMwvB,MAAxC,aAEF,cAACC,EAAA,EAAD,CAAanuB,YAAY,OACvBP,MAAOyV,KAAK0M,MAAM7d,KAClBvD,SAAU,SAACC,GAAD,OAAO,EAAKof,SAAS,CAAE9b,KAAMtD,EAAEC,OAAOjB,cAGlD,cAAC8gB,EAAA,EAAKpK,MAAN,CAAYrX,UAAU,yBAAtB,SAA+C,+BAAOoW,KAAK0M,MAAM7d,WAGpEyb,EAAW,cAACL,EAAA,EAAD,CAAKxJ,GAAG,OAAR,SACV,eAACgY,EAAA,EAAD,WACE,cAACnN,EAAA,EAAD,CAAQxa,QAAS4Z,EAAyB,UAAY,UAAW1f,UAAW0f,EAAwBtZ,QAAS,kBAAM,EAAKuZ,SAAS,CAAED,wBAAwB,KAA3J,SACE,8DAEF,cAACY,EAAA,EAAD,CAAQxa,QAAU4Z,EAAqC,UAAZ,UAAuB1f,SAAU0f,EAAwBtZ,QAAS,kBAAM,EAAKuZ,SAAS,CAAED,wBAAwB,KAA3J,SACE,6EAGG,KACT,cAACT,EAAA,EAAD,CAAKxJ,GAAG,OAAR,SACE,cAAC6K,EAAA,EAAD,CAAQxa,QAAQ,SAASM,QAASinB,EAAlC,SACE,cAAC,IAAD,CAAiB7uB,KAAM0vB,eAI/B,cAAC7N,EAAA,EAAKrK,KAAN,UACE,eAAC,EAAI8G,UAAL,CAAeqR,iBAAkB7O,EAAW,eAAiB,YAA7D,UACE,eAAC8O,EAAA,EAAD,CAAKtoB,QAAQ,QAAQlH,UAAU,YAA/B,UACE,cAACwvB,EAAA,EAAIjoB,KAAL,UACE,cAACioB,EAAA,EAAIC,KAAL,CAAU9S,SAAS,YAAnB,yBAED+D,EAAW,cAAC8O,EAAA,EAAIjoB,KAAL,UACV,cAACioB,EAAA,EAAIC,KAAL,CAAU9S,SAAS,eAAnB,6BACY,KACd,cAAC6S,EAAA,EAAIjoB,KAAL,UACE,cAACioB,EAAA,EAAIC,KAAL,CAAU9S,SAAS,YAAnB,SAAgC+D,EAAW,oBAAsB,gBAEnE,cAAC8O,EAAA,EAAIjoB,KAAL,UACE,eAACioB,EAAA,EAAIC,KAAL,CAAU9S,SAAS,SAASvb,SAAiI,eAA5E,UAAAmJ,IAAUmlB,YAAYxlB,UAAtB,mBAAqCylB,cAArC,mBAA6CC,aAA7C,eAAoD3qB,OAAQ,YAA7I,qBAA+P,eAA5E,UAAAsF,IAAUmlB,YAAYxlB,UAAtB,mBAAqCylB,cAArC,mBAA6CC,aAA7C,eAAoD3qB,OAAQ,aAA8B,cAAC+P,EAAA,EAAD,CAAO9N,QAAQ,UAAf,sBAE/Q,cAACsoB,EAAA,EAAIjoB,KAAL,UACE,eAACioB,EAAA,EAAIC,KAAL,CAAU9S,SAAS,OAAOvb,UAAQ,EAAlC,kBAAwC,cAAC4T,EAAA,EAAD,CAAO9N,QAAQ,UAAf,yBAG5C,eAAC,EAAIiX,QAAL,WACE,cAAC,EAAIC,KAAL,CAAUzB,SAAS,YAAnB,SACE,cAACiH,GAAD,aACE7C,SAAU3K,KAAKoX,YACf3J,YAAazN,KAAKyN,YAClBC,iBAAkB1N,KAAK0N,kBACnB,CAAEza,YAAWyW,WAAUW,gBAAeC,gBAG9C,cAAC,EAAItC,KAAL,CAAUzB,SAAS,YAAnB,SACE,cAAC,GAAD,2BAA2B,CAAEtT,YAAWoX,gBAAeX,WAAUxJ,YAAaF,KAAKmX,uBAAnF,IAA2GxM,SAAU3K,KAAKoX,iBAE3H9M,EAAW,cAAC,EAAItC,KAAL,CAAUzB,SAAS,eAAnB,SACV,cAAC,GAAD,eAA2B,CAAEtT,YAAWqX,WAAUD,gBAAeX,WAAUxJ,YAAaF,KAAKmX,0BACjF,KACd,cAAC,EAAInP,KAAL,CAAUzB,SAAS,SAAnB,SACE,cAACgM,GAAD,2BAAyB,CAAEtf,YAAWqX,WAAUD,gBAAeX,aAA/D,IAA2EiB,SAAU3K,KAAKoX,YAAa3J,YAAazN,KAAKyN,yBAKhI2K,GAAU,cAAC/M,EAAA,EAAK7I,OAAN,UACR4V,W,GApNyCvZ,IAAMM,WAAnC+X,GAUZuC,aAAe,CACpB5qB,KAAM,GACNiF,aAAc,GACdC,SAAU,KACVW,QAAS,MACTxB,kBAAmB,GACnBO,qBAAsB,GACtBikB,kBAAmB,GACnBxI,OAAQ,CACNjiB,IAAK,GACL8G,SAAU5H,IAAgB,GAC1B8jB,YAAa,EACbT,gBAAiB,EACjBG,eAAgB,EAChBxf,eAAgB,GAElB6kB,gBAAiB,CACf0E,KAAM,EACNF,MAAO,EACPG,MAAO,GAETjG,aAAa,EACbzf,mBAAoB,GACpBD,cAAe,EACf0W,wBAAwB,GAlCPwM,GAoCZM,gBAAkB,SAAC1jB,GACxB,IAAIob,EAASgJ,YArCIhB,GAqCWuC,aAAavK,QAEzC,OADAA,EAAOjiB,IAAMH,OAAO9C,KAAKqlB,IAAO0B,iBAAiB5c,IAAU4Z,iBAAiBja,KAAgB,GACrFob,GAvCUgI,GA0CZU,gBAAkB,WACvB,IAAIlL,EAAQwL,YAAUhB,GAAqBuC,cAM3C,OAJA/M,EAAM5Y,aAAewjB,YAA0BnjB,IAAUwkB,uBACzDjM,EAAM7d,KAAOyoB,YAA0BnjB,IAAUojB,UAAU7K,EAAM5Y,eAEjE4Y,EAAMwC,OAhDWgI,GAgDGM,gBAAgB9K,EAAM5Y,cACnC4Y,I,kIC/EP/M,EAAe,CACjB7O,aAAS0C,EACTgT,QAAQ,EACRxb,UAAU,GAER4uB,EAA6B/a,IAAMC,YAAW,SAAUzP,EAAMD,GAChE,IAAI2P,EAAW1P,EAAK0P,SAChByH,EAASnX,EAAKmX,OACdxb,EAAWqE,EAAKrE,SAChBpB,EAAYyF,EAAKzF,UACjBkH,EAAUzB,EAAKyB,QACf+oB,EAASxqB,EAAKwqB,OACd3a,EAAK7P,EAAK6P,GACVqH,EAAWlX,EAAKkX,SAChBnV,EAAU/B,EAAK+B,QACfzH,EAAQyV,YAA8B/P,EAAM,CAAC,WAAY,SAAU,WAAY,YAAa,UAAW,SAAU,KAAM,WAAY,YAEvI0P,EAAWO,YAAmBP,EAAU,mBACxC,IAAI+a,EAAcC,uBAAY,SAAUC,GACtC,GAAIhvB,EAGF,OAFAgvB,EAAMC,sBACND,EAAME,kBAIJ9oB,GAASA,EAAQ4oB,KACpB,CAAChvB,EAAUoG,IAOd,OALIpG,QAA+BwI,IAAnB7J,EAAMwwB,WACpBxwB,EAAMwwB,UAAY,EAClBxwB,EAAM,kBAAmB,GAGPkV,IAAMU,cAAc6a,IAAiB5a,YAAS,CAChEpQ,IAAKA,GACJzF,EAAO,CAER4c,SAAUD,YAAaC,EAAU5c,EAAMupB,MAEvChU,GAAIA,IAAO2a,EAASlwB,EAAMupB,KAAO,IAAM,SAAW,OAClD9hB,QAAS0oB,EACTlwB,UAAW6V,IAAW7V,EAAWmV,EAAUyH,GAAU,SAAUxb,GAAY,WAAY8F,GAAWiO,EAAW,IAAMjO,EAAS+oB,GAAU9a,EAAW,iBAGrJ6a,EAAcja,aAAeA,EAC7Bia,EAAcla,YAAc,gBACbka,QC5CXja,EAAe,CACjB7O,aAAS0C,EACT6mB,gBAAY7mB,GAEV4hB,EAAyBvW,IAAMC,YAAW,SAAUnV,EAAOyF,GAC7D,IAYIkrB,EAZAxV,EAAmBC,YAAgBpb,EAAO,CAC5Cqb,UAAW,aAETpb,EAAYkb,EAAiBlb,UAC7B2wB,EAAkBzV,EAAiB/F,SACnCjO,EAAUgU,EAAiBhU,QAC3BupB,EAAavV,EAAiBuV,WAC9BzR,EAAsB9D,EAAiB5F,GACvCA,OAA6B,IAAxB0J,EAAiC,MAAQA,EAC9CC,EAAkBzJ,YAA8B0F,EAAkB,CAAC,YAAa,WAAY,UAAW,aAAc,OAErH/F,EAAWO,YAAmBib,EAAiB,cAUnD,OANED,EADED,GACiC,IAAfA,EAAsB,aAAe,cAAgBA,EAErD,KAIFxb,IAAMU,cAAcib,IAAahb,YAAS,CAC5DpQ,IAAKA,GACJyZ,EAAiB,CAClB3J,GAAIA,EACJtV,UAAW6V,IAAW7V,EAAWmV,EAAUjO,GAAWiO,EAAW,IAAMjO,EAASwpB,GAAqBvb,EAAW,IAAMub,SAG1HlF,EAAUzV,aAAeA,EACzByV,EAAU1V,YAAc,YACxB0V,EAAUjkB,KAAOyoB,EACFxE,O,4HCzCA,SAASqF,EAAY9wB,GAElC,OADAiI,cACO,cAAC,IAAD,UACL,cAAC,UAAD,CAAsB8X,UAAQ,EAACiO,YAAa,oB,uLCG3BxjB,E,WAEnB,aAAgB,GAAD,oBAAK6L,gBAAgB7L,EAAW,MAAM0T,MAAM,0C,iEA4JpC8P,GACrB,IAAI1kB,EAAYlB,IAAkBS,aAAamlB,GAC3C1kB,EAAUC,mBACZpG,OAAOsF,OAAOa,EAAUC,mBAAmBlG,SAAQ,SAAAsG,GAAK,OACtDrB,IAAiByoB,kBAAkBpnB,EAAO,OAC9CvB,IAAkB4oB,oBAAoBhD,O,KAnKrBxjB,EAGZ4jB,uBAAyB,kBAAMljB,KAHnBV,EAIZie,iBAAmB,SAACnf,EAAWmD,GAAyB,IAAhBwkB,EAAe,uDAAN,EAChD9mB,EAA2Bb,EAA3Ba,aAAcC,EAAad,EAAbc,SACpB,GAAgB,uBAAZqC,EAAkC,OANrBjC,EAMiC0mB,sBAAsB/mB,GACxE,GAAgB,uBAAZsC,EAAkC,OAPrBjC,EAOiC2mB,sBAAsBhnB,EAAcC,GACtF,GAAgB,eAAZqC,EAA0B,OAAOiZ,IAAO0L,iCAAP,OAAwC9nB,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAWic,QACxF,GAAgB,eAAZ9Y,GAAwC,gBAAZA,EAA2B,OAT1CjC,EASsDma,SAASva,GAChF,GAAgB,kBAAZqC,GAA+BA,EAAQ0N,SAAS,iBAAkB,OAAO,GAC7E,GAAI1N,KAAWnB,IAAmB,OAAOA,IAAkBmB,GAC3D,IAAI4kB,EAZa7mB,EAYOmlB,YAAYxlB,GACpC,OAAIknB,GAAgB5kB,KAAW4kB,EAAaC,SAAiBD,EAAaC,SAAS7kB,GAblEjC,EAagF+mB,qBAAqBnnB,IAC/G6mB,GAdUzmB,EAiBZmlB,YAAc,SAACV,GAAD,OAAahkB,IAAcgkB,IAjB7BzkB,EAkBZ2gB,iBAAmB,SAACqG,GAAD,MAAeP,EAAf,uDAAwB,GAAxB,MAAgD,aAAjBO,EAA8B,YAA2B,OAAbpuB,UAAa,IAAbA,KAAA,UAAAA,IAAgBouB,UAAhB,eAA+BtsB,OAAQ+rB,GAlBzHzmB,EAmBZwkB,oBAAsB,kBAAM7rB,OAAO9C,KAAK4K,MAnB5BT,EAqBZ+Z,QAAU,SAAC0K,GAAD,MAAUgC,EAAV,uDAAmB,GAAnB,OAA2B,UArBzBzmB,EAqB8BmlB,YAAYV,UAAjB,eAA2B/pB,OAAQ+rB,GArB5DzmB,EAsBZia,QAAU,SAACwK,GAAD,MAAUgC,EAAV,uDAAmB,EAAnB,OAA0B,UAtBxBzmB,EAsB6BmlB,YAAYV,UAAjB,eAA2BjI,OAAQiK,GAtB3DzmB,EAuBZ0W,gBAAkB,SAAC+N,GAAD,MAAUgC,EAAV,uDAAmB,GAAnB,OAA2B,UAvBjCzmB,EAuBsCmlB,YAAYV,UAAjB,eAA2B/K,aAAc+M,GAvB1EzmB,EAwBZ6W,iBAAmB,kBAAMle,OAAO9C,KAAK+C,MAxBzBoH,EAyBZ4Z,iBAAmB,SAAC6K,GAAD,MAAUgC,EAAV,uDAAmB,GAAnB,OAA2B,UAzBlCzmB,EAyBuCmlB,YAAYV,UAAjB,eAA2B9K,gBAAiB8M,GAzB9EzmB,EA0BZqa,qBAAuB,SAACoK,GAAD,MAAUgC,EAAV,uDAAmB,GAAnB,OAA2B,UA1BtCzmB,EA0B2CmlB,YAAYV,UAAjB,eAA2BwC,oBAAqBR,GA1BtFzmB,EA2BZojB,UAAY,SAACqB,GAAD,MAAUgC,EAAV,uDAAmB,GAAnB,OAA2B,UA3B3BzmB,EA2BgCmlB,YAAYV,UAAjB,eAA2ByC,SAAUT,GA3BhEzmB,EA8BZ2kB,aAAe,kBAAMhsB,OAAO9C,KAAK8K,MA9BrBX,EA+BZ0kB,cAAgB,SAAC9kB,GAAD,MAAW6mB,EAAX,uDAAoB,GAApB,OAAsC,OAAV9lB,UAAU,IAAVA,KAAA,UAAAA,IAAaf,UAAb,eAAwBlF,OAAQ+rB,GA/BhEzmB,EAgCZ+mB,qBAAuB,SAACnnB,GAAD,OAhCXI,EAgC8B2kB,eAAe3P,QAAQpV,IAhCrDI,EAiCZma,SAAW,SAACva,GAAD,MAAW6mB,EAAX,uDAAoB,EAApB,OAAqC,OAAV9lB,UAAU,IAAVA,KAAA,UAAAA,IAAaf,UAAb,eAAwBgB,QAAS6lB,GAjC3DzmB,EAkCZC,aAAe,SAACL,GAAD,MAAW6mB,EAAX,uDAAoB,EAApB,OAAqC,OAAV9lB,UAAU,IAAVA,KAAA,UAAAA,IAAaf,UAAb,eAAwBiB,QAAS4lB,GAlC/DzmB,EAqCZmnB,mBAAqB,SAAC1C,GAAD,uBArCTzkB,EAqC2BmlB,YAAYV,UAA9B,aAAa,EAA2B2C,gBArCjDpnB,EAsCZ0mB,sBAAwB,SAACjC,GAAD,uBAtCZzkB,EAsC8BmnB,mBAAmB1C,UAArC,aAAa,EAAkC3rB,KAtC3DkH,EAuCZ2mB,sBAAwB,SAAClC,EAAS7kB,GAAV,yBAvCZI,EAuCwCmnB,mBAAmB1C,UAA/C,iBAAuB,EAAkCruB,aAAzD,aAAuB,EAvCnC4J,EAuCkF+mB,qBAAqBnnB,KAvCvGI,EAyCZqkB,SAAW,SAACI,GAAD,MAAUgC,EAAV,uDAAmB,KAAnB,OAA4B,UAzC3BzmB,EAyCgCmlB,YAAYV,UAAjB,eAA2B4C,WAAYZ,GAzClEzmB,EA0CZ8Z,QAAU,SAAC2K,GAAD,MAAUgC,EAAV,uDAAmB,KAAnB,OAA4B,UA1C1BzmB,EA0C+BmlB,YAAYV,UAAjB,eAA2B6C,UAAWb,GA1ChEzmB,EA2CZmhB,aAAe,SAACsD,EAASvkB,GAAV,UAAqBumB,EAArB,uDAA8B,KAA9B,OAAuC,UA3C1CzmB,EA2C+CmlB,YAAYV,UAAjB,mBAA2BW,cAA3B,mBAAoCllB,UAApC,eAAgDqnB,MAAOd,GA3CjGzmB,EA4CZsa,oBAAsB,SAACmK,EAAS+C,GAAV,UAAsBf,EAAtB,uDAA+B,KAA/B,OAAwC,UA5ClDzmB,EA4CuDmlB,YAAYV,UAAjB,mBAA2BW,cAA3B,0CAAoDoC,EAAa,WAAjE,eAAuED,MAAOd,GA5ChIzmB,EA+CZohB,cAAgB,SAACqD,EAASvkB,GAAV,UAAqBumB,EAArB,uDAA8B,GAA9B,OAAqC,UA/CzCzmB,EA+C8CmlB,YAAYV,UAAjB,mBAA2BW,cAA3B,mBAAoCllB,UAApC,eAAgDxF,OAAQ+rB,GA/CjGzmB,EAiDZynB,oBAAsB,SAAC9nB,EAAcO,EAAWL,GAA+B,IAAD,EAAf4mB,EAAe,uDAAN,EAE7E,GAAkB,UAAdvmB,GAAuC,UAAdA,EAAuB,OAAOumB,EAE3D,IADA,IAAIiB,GAAU,UApDG1nB,EAoDEmlB,YAAYxlB,UAAjB,eAAgCylB,SAAU,GAC/CpvB,EAAI,EAAGA,GAAK6J,EAAe7J,IAAK,CAAC,IAAD,EACnC2xB,GAAc,UAAAD,EAAQ,gBAAD,OAAiB1xB,WAAxB,eAA8B2xB,cAAe,GAC3DC,EAAajvB,OAAOsG,QAAQ0oB,GAAaE,MAAK,mCAAE/uB,EAAF,iBAAgBA,IAAQoH,KAC1E,GAAI0nB,EAAY,OAAOA,EAAW,GAEpC,OAAOnB,GA1DUzmB,EA4DZK,kBAAoB,SAACvB,EAAWoB,EAAWL,GAAsC,IAAvBioB,EAAsB,wDACrF,GAAkB,SAAd5nB,GAAsC,UAAdA,GAAuC,UAAdA,EAAuB,CAAC,IAAD,EACtEE,GAAwB,OAATtB,QAAS,IAATA,GAAA,UAAAA,EAAW+hB,uBAAX,eAA6B3gB,KAAc,EAC1DugB,EA/DWzgB,EA+DOynB,oBAAL,OAAyB3oB,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAWa,aAAcO,EAAWL,GAE9E,OADAO,EAAe8Z,YAAM9Z,EAAeqgB,EAAY,EAAG,IAC5CqH,EAAY,CAAE1nB,eAAcqgB,cAAergB,EAC7C,OAAO0nB,EAAY,GAAK,MAlEd9nB,EAoEZshB,kBAAoB,SAACmD,EAASvkB,GAAV,UAAqBumB,EAArB,uDAA8B,GAA9B,OAAqC,UApE7CzmB,EAoEkDmlB,YAAYV,UAAjB,mBAA2BW,cAA3B,mBAAoCllB,UAApC,eAAgD/E,WAAYsrB,GApEzGzmB,EAqEZ+nB,gBAAkB,SAACtD,EAASvkB,GAAV,UAAqBumB,EAArB,uDAA8B,GAA9B,OAAqC,UArE3CzmB,EAqEgDmlB,YAAYV,UAAjB,mBAA2BW,cAA3B,mBAAoCllB,UAApC,eAAgDuhB,SAAUgF,GArErGzmB,EAsEZghB,eAAiB,SAACyD,EAASvkB,EAAWL,EAAeE,GAA8B,IAAD,MAAlB0mB,EAAkB,uDAAT,KAC1E9rB,EAAK,UAvEQqF,EAuEAmlB,YAAYV,UAApB,iBAAG,EAA2BW,cAA9B,iBAAG,EAAoCllB,UAAvC,aAAG,EAAgDvF,MAC5D,MAAqB,oBAAVA,EACFA,EAAMkF,EAAeE,GACvBpF,GAAS8rB,GA1ECzmB,EA4EZgoB,kBAAoB,SAACvD,EAAS5kB,EAAeE,GAAe,IAAD,EAC5D2nB,GAAU,UA7EG1nB,EA6EEmlB,YAAYV,UAAjB,eAA2BW,SAAU,GAC/C6C,EAAW,GAKf,OAJAtvB,OAAO9C,KAAK6xB,GAAS7uB,SAAQ,SAAAqH,GAC3B,IAAIvF,EAhFWqF,EAgFEghB,eAAeyD,EAASvkB,EAAWL,EAAeE,GAC/DpF,GAAOstB,EAASlvB,KAAK4B,MAEpBstB,GAnFUjoB,EAqFZM,qBAAuB,SAACmkB,EAASvkB,EAAWC,EAAgBC,EAAcP,EAAeE,GAA8B,IAAD,EAAlB0mB,EAAkB,uDAAT,KAC9GyB,EAtFaloB,EAsFFshB,kBAAkBmD,EAASvkB,GACtCV,EAAO,KAFgH,cAGrG0oB,GAHqG,IAG3H,2BAA2B,CAAC,IAAD,EAAhB3G,EAAgB,QACrB4G,EAAW5G,EAAQxlB,YAGvB,GAFwB,oBAAbosB,IACTA,EAAWA,EAAS/nB,EAAcP,EAAeE,KACvC,QAAR,EAAAooB,SAAA,eAAUhoB,kBAAmBA,EAAgB,CAC/CX,EAAO2oB,EACP,QATuH,8BAY3H,OAAO3oB,GAAQinB,GAjGEzmB,EAmGZ2hB,0BAA4B,SAAC5lB,EAAaC,GAAmC,IAAnByqB,EAAkB,uDAAT,KACxE,IAAKzqB,IAAmBD,EAAa,OAAO0qB,EADqC,MAEtDzO,IAAiBoQ,mBAAmBrsB,EAAa,QAASC,GAFJ,0BAE5ErB,OAF4E,MAEpE,GAFoE,EAEhE0tB,EAFgE,KAGjF,OAAKA,EACE1vB,OAAOqG,YAAYrG,OAAOsG,QAAQtE,GAAO7E,KAAI,mCAAEgD,EAAF,KAAOsf,EAAP,WAAwB,qBAARtf,EAA6B,CAACA,EAAKsf,GAAO,CAACtf,EAAKsf,EAAMiQ,OADtG5B,GAtGHzmB,EAyGZ4hB,2BAA6B,SAAC7lB,EAAaC,GAAiC,IAAjByqB,EAAgB,uDAAP,GACzE,IAAKzqB,IAAmBD,EAAa,OAAO0qB,EAC5C,IAAIhF,EAASzJ,IAAiBoQ,mBAAmBrsB,EAAa,SAAUC,GAAgB,GACxF,OAAOylB,GAAUgF,GA5GAzmB,EA8GZmf,gBAAkB,SAACsF,GAAD,IAAUgC,EAAV,8DAAgE,aA9GtEzmB,EA8GwC4Z,iBAAiB6K,IAA2BgC,GA9GpFzmB,EA+GZof,gBAAkB,SAACqF,GAAD,UAAUgC,EAAV,+DAA6B,UA/GnCzmB,EA+GwCmlB,YAAYV,UAAjB,mBAA2BW,cAA3B,mBAAmCG,YAAnC,eAAyC+C,YAAa7B,GA/GzFzmB,EAgHZsf,iBAAmB,SAACiJ,EAAUzpB,GAAkC,IAAD,MAAtB0pB,EAAsB,0DACV1pB,EAApDyB,eAD8D,MACpD,GADoD,IACVzB,EAAtCygB,mBADgD,SAC3B5f,EAAiBb,EAAjBa,aACpC6oB,IAAWA,EAlHCxoB,EAkHgBmf,gBAAgBxf,IAC5C6oB,IAAWA,EAAYjJ,KAAgB,UAAAvf,EAAUmlB,YAAYxlB,UAAtB,mBAAqCylB,cAArC,mBAA6CG,YAA7C,eAAmD+C,aAAa,IAC5G,IAAI7R,EAAS,GAKb,OAJiB,QAAb8R,GAAmC,UAAbA,GAAqC,UAAbA,GAAwBC,KACxE/R,EAtHezW,EAsHD0W,gBAAgB/W,IAC5B8W,IAAQA,GAAkB,KAExB,GAAN,OAAUA,GAAV,OAAmB8R,EAAnB,YAA+BhoB,IAzHdP,EA6HZ+V,YAAc,SAACjX,EAAWmD,GAAZ,SAAwBnD,IAAaA,EAAUykB,oBAAqBthB,KAAWnD,EAAUykB,mBA7H3FvjB,EA+HZ0V,yBAA2B,SAAC5W,EAAWmD,GAAyB,IAAD,EAAfwkB,EAAe,uDAAN,EAC9D,OAhIiBzmB,EAgIR+V,YAAYjX,EAAWmD,GAAU,OAAOnD,QAAP,IAAOA,GAAP,UAAOA,EAAWykB,yBAAlB,aAAO,EAA+BthB,GAhI/DjC,EAiIAie,iBAAiBnf,EAAWmD,EAASwkB,IAjIrCzmB,EAqIZqX,eAAiB,SAACmM,EAAalM,GACpC,IAAIxY,EAAYlB,IAAkBS,aAAamlB,GAC/C,GAAK1kB,EAAL,CACA,IAAI2pB,EAAoB3pB,EAAUC,kBAC9B2pB,EAAuBpR,EAG3B3L,IAASgd,sBAAsB9vB,SAAQ,SAAAqG,GACrC,IAAI0pB,EAAe9qB,IAAiBsB,YAAjB,OAA6BspB,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAuBxpB,IACvE,GAAI0pB,EAAaxqB,WAAaolB,EAA9B,CACA,IAAIqF,EAAY/qB,IAAiBsB,YAAjB,OAA6BqpB,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAoBvpB,IAC7D4pB,GAA0B,OAAZF,QAAY,IAAZA,OAAA,EAAAA,EAAcxqB,WAAY,GAExCyqB,GAAW/qB,IAAiByoB,kBAAkBsC,EAAUta,GAAIua,GAE5DA,GAAYlrB,IAAkBmrB,cAAcD,EAAYD,GAExDD,GAAc9qB,IAAiByoB,kBAAkBqC,EAAara,GAAIiV,OAGxE1kB,EAAUC,kBAAoB,GAC9BpG,OAAOsG,QAAQqY,GAAaze,SAAQ,mCAAEC,EAAF,KAAOqG,EAAP,YAClCL,EAAUC,kBAAkBjG,GAAOqG,KACrCvB,IAAkB4C,gBAAgB1B,KA5JjBkB,EAsKZmkB,eAAiB,SAACrlB,GACvB,IAAIkqB,EAAYrwB,OAAOqG,YAAYrG,OAAOsG,QAAQH,EAAUC,mBAAmBjJ,KAAI,mCAAEgD,EAAF,KAAOqG,EAAP,WAAkB,CAACrG,EAAKgF,IAAiBsB,YAAYD,QACpI8pB,EAAejpB,EAAUkpB,kCAAkCpqB,GAC/D,OAzKiBkB,EAyKLmpB,uBAAuBrqB,EAAUQ,qBAAsB2pB,EAAcD,IAzKhEhpB,EA4KZmpB,uBAAyB,SAAC7pB,EAAsB8pB,EAAeJ,GACpE,IAAItR,EAAa/L,IAAS+L,WAAWsR,GACjCK,EAA0B1d,IAAS2d,2BAA2B5R,GAE9D/c,EAAQopB,YAAUqF,GAmBtB,OAjBAzwB,OAAOsF,OAAO+qB,GAAWnwB,SAAQ,SAAAqF,GAC1BA,IAELvD,EAAMuD,EAAIM,cAAgB7D,EAAMuD,EAAIM,cAAgB,GAAKmN,IAASuB,iBAAiBhP,EAAIM,YAAaN,EAAIiO,SAAUjO,EAAI0C,OAEtH1C,EAAIkP,SAASvU,SAAQ,SAAC0wB,GAAD,OACnBA,GAAWA,EAAQzwB,MAAQ6B,EAAM4uB,EAAQzwB,MAAQ6B,EAAM4uB,EAAQzwB,MAAQ,GAAKywB,EAAQnzB,cAGxFizB,EAAwBxwB,SAAQ,SAAAwU,GAAI,OAAI1S,EAAM0S,EAAKvU,MAAQ6B,EAAM0S,EAAKvU,MAAQ,GAAKuU,EAAKoI,WAExFnW,GAAwBA,EAAqBzG,SAAQ,SAAAkD,GAAgB,IACrDwC,EAA+BxC,EAAvC0D,OAAyBmY,EAAc7b,EAAvB2D,QAClB8pB,EAAY7d,IAASwM,4BAA4B5Z,EAAQqZ,EAAW7b,EAAYC,gBAChFwtB,GAAW7wB,OAAOsG,QAAQuqB,GAAW3wB,SAAQ,mCAAEoJ,EAAF,KAAWmW,EAAX,YAAoBzd,EAAMsH,IAAYtH,EAAMsH,IAAY,GAAKmW,QAEhH5H,YAAmB7V,GACZ,CACL2c,YAAa3e,OAAOqG,YAAYrG,OAAOsG,QAAQ+pB,GAAWlzB,KAAI,mCAAEgD,EAAF,KAAOsf,EAAP,WAAgB,CAACtf,EAAD,OAAMsf,QAAN,IAAMA,OAAN,EAAMA,EAAK7J,QACzFmJ,aACA7B,WAAYlb,EACZ2E,yBAvMeU,EA0MZkpB,kCAAoC,SAACpqB,GAAe,IAAD,YACpD6X,EAAQ,CAAI,UAAW,WAAY,WAAY,aAAc,aAAc,cAAe,gBAAiB,sBAAnG,mBAA4Hhe,OAAO9C,KAAKiL,OAChJmoB,EAAetwB,OAAOqG,YAAY2X,EAAS7gB,KAAI,SAAAgD,GAAG,MAAI,CAACA,EA5M1CkH,EA4MoD0V,yBAAyB5W,EAAWhG,QAEzGmwB,EAAaQ,aA9MIzpB,EA8MgB0W,gBAAgB5X,EAAUa,cAG3DK,EAAU6W,mBAAmBhe,SAAQ,SAAA4d,GACnC,IAAIxU,EAAO,UAAMwU,EAAN,kBACXwS,EAAahnB,GAnNEjC,EAmNc0V,yBAAyB5W,EAAWmD,GACjEA,EAAO,UAAMwU,EAAN,uBACPwS,EAAahnB,GArNEjC,EAqNc0V,yBAAyB5W,EAAWmD,MAInE,IAAIynB,GAAqB,OAAT5qB,QAAS,IAATA,OAAA,EAAAA,EAAWykB,oBAAqB,GAChD5qB,OAAOsG,QAAQyqB,GAAW7wB,SAAQ,mCAAEoJ,EAAF,KAAWmW,EAAX,YAAqB6Q,EAAaU,eAAe1nB,KAAagnB,EAAahnB,GAAWmW,MAGxH,IAAIwR,EAAiB5pB,EAAU0V,yBAAyB5W,EAAW,sBACnE,GAAI8qB,EAAgB,CAClB,IAAIjM,EAAqB3d,EAAU0V,yBAAyB5W,EAAW,sBACvEmqB,EAAaW,IAAmBX,EAAaW,IAAmB,GAAKjM,EAGvE,IAAIkM,EAAc,SAAAlvB,GAAK,OAAIA,GAAShC,OAAOsG,QAAQtE,GAAO9B,SAAQ,YAAiB,IAAD,mBAAdC,EAAc,KAATsf,EAAS,KACpE,qBAARtf,EAIJmwB,EAAanwB,IAAQmwB,EAAanwB,IAAQ,GAAKsf,EAH7C6Q,EAAa5Z,iBAAb,sBAAqC4Z,EAAa5Z,kBAAoB,IAAtE,YAA8E+I,QAM5EzY,EAAmEb,EAAnEa,aAAcC,EAAqDd,EAArDc,SAAUC,EAA2Cf,EAA3Ce,cAjC0B,EAiCiBf,EAA5BgB,0BAjCW,MAiCU,GAjCV,EAkCpDC,EAAYC,EAAUC,aAAaL,GAEvCE,EAAmBjH,SAAQ,SAAA2G,GAAS,IACpBU,EAAuDV,EAA/DC,OAA4BU,EAAmCX,EAA5CE,QAAyB1D,EAAmBwD,EAAnBxD,eAC9CoE,EAAeJ,EAAUK,kBAAkBvB,EAAWoB,GACtDnE,EAAciE,EAAUM,qBAAqBX,EAAcO,EAAWC,EAAgBC,EAAcP,EAAeE,GACvH8pB,EAAY7pB,EAAU2hB,0BAA0B5lB,EAAaC,EAAgB,QAI1DgE,EAAUgoB,kBAAkBroB,EAAcE,EAAeE,GAC/DlH,QAAQgxB,GAGvB,IAAIC,EAAc,CAChBC,OAAQ7O,IAAOC,oBAAP,OAA2Brc,QAA3B,IAA2BA,GAA3B,UAA2BA,EAAWic,cAAtC,aAA2B,EAAmBjiB,KACtDkxB,OAAQ9O,IAAO+O,gCAAP,OAAuCnrB,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAWic,QAC1DmP,WAAYhP,IAAOW,mBAAP,OAA0B/c,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAWic,cAArC,aAA0B,EAAmBjiB,IAA7C,OAAkDgG,QAAlD,IAAkDA,GAAlD,UAAkDA,EAAWic,cAA7D,aAAkD,EAAmBe,aACjF5D,iBAAkBgD,IAAOa,yBAAP,OAAgCjd,QAAhC,IAAgCA,GAAhC,UAAgCA,EAAWic,cAA3C,aAAgC,EAAmBjiB,IAAnD,OAAwDgG,QAAxD,IAAwDA,GAAxD,UAAwDA,EAAWic,cAAnE,aAAwD,EAAmBe,YAA3E,OAAwFhd,QAAxF,IAAwFA,GAAxF,UAAwFA,EAAWic,cAAnG,aAAwF,EAAmB/e,iBAO/H,OALI8tB,EAAYC,SACdd,EAAaa,EAAYC,SAAWd,EAAaa,EAAYC,SAAW,GAAKD,EAAYE,QACvFF,EAAYI,YAAYL,EAAYC,EAAYI,YAChDJ,EAAY5R,kBAAkB2R,EAAYC,EAAY5R,kBAEnD+Q,I,gCC/QX,0XAAM9F,EAA4B,SAACgH,GAAD,OAAWA,EAAM5f,KAAKC,MAAMD,KAAK6f,SAAWD,EAAMzc,UAMpF,SAAS2c,EAAsBC,EAAKC,GAGlC,OAFAD,EAAM/f,KAAKigB,KAAKF,GAChBC,EAAMhgB,KAAKC,MAAM+f,GACVhgB,KAAKC,MAAMD,KAAK6f,UAAYG,EAAMD,EAAM,GAAKA,GAKtD,IAAMG,EAAuB,SAAC3xB,GAC5B,IAAI4xB,EAAOhtB,aAAaitB,QAAQ7xB,GAChC,OAAK4xB,EACEE,KAAKC,MAAMH,GADA,MAGdI,EAAqB,SAAChyB,EAAKiyB,GAAN,OACzBrtB,aAAastB,QAAQlyB,EAAK8xB,KAAKK,UAAUF,KACrChH,EAAY,SAACgH,GAAD,OAChBH,KAAKC,MAAMD,KAAKK,UAAUF,KAEtBG,EAAmB,SAACC,EAAGC,GAAJ,OACvB7gB,KAAK8gB,IAAIF,EAAIC,IAAM,MAEfE,EAAiB,SAACH,EAAGC,GAAJ,OACrB7gB,KAAK8gB,IAAIF,EAAIC,IAAM,GACflR,EAAQ,SAAC9B,EAAKmT,EAAKC,GACvB,OAAIpT,EAAMmT,EAAYA,EAClBnT,EAAMoT,EAAaA,EAChBpT,GAEHqT,EAAoB,SAAChP,GAAD,OACxBA,EAAI/O,OAAS+O,EAAIA,EAAI/O,OAAS,GAAK,MAG/Bge,EAAe,SAACtT,GAAD,OAAS8B,EAAM9B,EAAK,EAAG,MAG5C,SAASuT,EAAWC,EAAQC,EAAKne,GAC/B,OAAQ,IAAI9X,MAAM8X,EAAS,GAAGoe,KAAKD,GAAOD,GAAQG,OAAOre,K,+ICvCtCV,EAEnB,aACE,GADa,oBACTnB,gBAAgBmB,EAClB,MAAM0G,MAAM,2CAoClB,SAASsY,EAAEnM,EAAS5d,GAAU,IAAD,IACrBtH,EAAyBklB,EAAzBllB,MADqB,EACIklB,EAAlBoM,OACb,SAF2B,YAEjB,OAAIxM,QAAJ,IAAIA,OAAJ,EAAIA,EAAcxd,IAC1B,OAAO,sCAASwd,EAAYxd,GAAS4d,GAA9B,QACT,IAAIhS,EAAWb,EAAKgR,kBAAkB/b,GAClCiqB,EAAWlf,EAAKG,YAAYlL,GAC5B+T,EAAYhJ,EAAKgJ,UAAU/T,GAC3B7L,GAAQ,UAAAuE,EAAMsH,UAAN,mBAAgB6L,eAAhB,sBAA0BkI,KAAcrb,EAAMsH,GAC1D,OAAO,uBAAMxM,UAAU,cAAhB,UAA8B,4BAAIoY,IAAlC,IAAgD,uBAAMpY,UAAU,YAAhB,UAA6BW,EAAO81B,QAhDxElf,EAMZC,YAAc,SAACnU,GAAD,QAAM2tB,EAAN,uDAAe,GAAf,OAClB,UAAAxW,IAASnX,UAAT,eAAeqzB,QAAf,UAAuBlc,IAASnX,UAAhC,aAAuB,EAAe4B,OAAS+rB,GAP/BzZ,EAQZgR,kBAAoB,SAACllB,GAAD,UAAM2tB,EAAN,uDAAe,GAAf,OACxB,UAAAxW,IAASnX,UAAT,eAAeqzB,QAAf,UAAuBlc,IAASnX,UAAhC,aAAuB,EAAeszB,UAAtC,UAAgDnc,IAASnX,UAAzD,aAAgD,EAAe4B,OAAS+rB,GATxDzZ,EAUZmR,eAAiB,SAACrlB,GAAD,MAAM2tB,EAAN,uDAAe,GAAf,OACtB,UAAAxW,IAASnX,UAAT,eAAe4B,OAAQ+rB,GAXNzZ,EAYZkR,uBAAyB,SAACplB,GAAsB,IAAjB2tB,EAAgB,uDAAP,GACzC/rB,EAbasS,EAaDC,YAAYnU,EAAK2tB,GAGjC,OAFI/rB,IAAS+rB,GAAmB,QAAR3tB,GAAyB,SAARA,GAA0B,SAARA,IACzD4B,GAAQ,KACHA,GAhBUsS,EAkBZqf,eAAiB,SAACvzB,GAAD,MAAM2tB,EAAN,uDAAe,GAAf,OACtB,UAAAxW,IAASnX,UAAT,eAAe6D,UAAW8pB,GAnBTzZ,EAoBZG,YAAc,SAACrU,GAAD,QAAM2tB,EAAN,uDAAe,GAAf,MACK,WAAxB,UAAAxW,IAASnX,UAAT,eAAe6c,MAAmB8Q,GAAU,UAAAxW,IAASnX,UAAT,eAAe6c,OAAQ8Q,GArBlDzZ,EAuBZgJ,UAAY,SAACld,GAAS,IAAD,EAC1B,MAA4B,WAAxB,UAAAmX,IAASnX,UAAT,eAAe6c,MAAyB,EAE5B,MADL3I,EAAKG,YAAYrU,GACN,EAAI,GA1BTkU,EA4BZ+S,UAAY,SAAC9d,EAAStH,GAAV,OACjBqxB,EAAE,CAAErxB,QAAOsxB,QAAQ,GAAShqB,IA7BX+K,EA+BZ8S,aAAe,SAAC7d,EAAStH,GAAV,IAAiBsxB,IAAjB,gEACT,OAAXxM,QAAW,IAAXA,OAAA,EAAAA,EAAcxd,KAA8C,oBAAlC,OAAOwd,QAAP,IAAOA,OAAP,EAAOA,EAAcxd,KAC9C,+BAAOwd,EAAYxd,GAAS,CAAEtH,QAAOsxB,cAjCrBjf,EAmCZ4S,qBAAuB,SAACjlB,EAAO2xB,EAAazM,GAArB,IAA8BoM,IAA9B,gEACR,OAApBM,QAAoB,IAApBA,OAAA,EAAAA,EAAuBD,KAA2E,oBAA3D,OAAOC,QAAP,IAAOA,OAAP,EAAOA,EAAuBD,GAAaE,cACjF,+BAAOD,EAAqBD,GAAaE,YAAY3M,EAA9C0M,CAAuD,CAAE5xB,QAAOsxB,cAc5E,IAAMxM,EAAc,CAElBre,SAAU,SAACqrB,GAAD,OAAO,iCAAOT,EAAES,EAAG,WAAZ,YAAiCT,EAAES,EAAG,OAAtC,QAAmDT,EAAES,EAAG,UAEzElrB,UAAW,SAACkrB,GAAD,OAAO,sCAAST,EAAES,EAAG,YAAd,MAA8BT,EAAES,EAAG,cAAnC,cAA6DT,EAAES,EAAG,QAAlE,QAAgFT,EAAES,EAAG,WAEvG/qB,UAAW,SAAC+qB,GAAD,OAAO,iCAAOT,EAAES,EAAG,YAAZ,YAAkCT,EAAES,EAAG,QAAvC,QAAqDT,EAAES,EAAG,WAG5EC,aAAc,SAACD,GAAD,OAAO,iCAAOT,EAAES,EAAG,aAAZ,MAA6BT,EAAES,EAAG,wBAAlC,MAA8DT,EAAES,EAAG,qBAAnE,MAA4FT,EAAES,EAAG,2BACtHE,kBAAmB,SAACF,GAAD,OAAO,iCAAOT,EAAES,EAAG,gBAAZ,MAAgCT,EAAES,EAAG,sBAC/DG,iBAAkB,SAACH,GAAD,OAAO,iCAAOT,EAAES,EAAG,gBAAZ,MAAgCT,EAAES,EAAG,2BAC9DI,oBAAqB,SAACJ,GAAD,OAAO,gDAAmBT,EAAES,EAAG,aAAxB,MAAyCT,EAAES,EAAG,sBAA9C,eAAiFT,EAAES,EAAG,YAAtF,SAC5BK,qBAAsB,SAACL,GAAD,OAAO,0CAAaT,EAAES,EAAG,iBAAlB,MAAuCT,EAAES,EAAG,sBAA5C,MAAsET,EAAES,EAAG,OAA3E,SAG7BM,aAAc,SAACN,GAAD,OAAO,iCAAOT,EAAES,EAAG,aAAZ,MAA6BT,EAAES,EAAG,wBAAlC,MAA8DT,EAAES,EAAG,qBAAnE,MAA4FT,EAAES,EAAG,2BACtHO,kBAAmB,SAACP,GAAD,OAAO,iCAAOT,EAAES,EAAG,gBAAZ,MAAgCT,EAAES,EAAG,sBAC/DQ,iBAAkB,SAACR,GAAD,OAAO,iCAAOT,EAAES,EAAG,gBAAZ,MAAgCT,EAAES,EAAG,2BAC9DS,oBAAqB,SAACT,GAAD,OAAO,gDAAmBT,EAAES,EAAG,aAAxB,MAAyCT,EAAES,EAAG,sBAA9C,eAAiFT,EAAES,EAAG,YAAtF,SAC5BU,qBAAsB,SAACV,GAAD,OAAO,0CAAaT,EAAES,EAAG,iBAAlB,MAAuCT,EAAES,EAAG,sBAA5C,MAAsET,EAAES,EAAG,OAA3E,SAG7BW,WAAY,SAACX,GAAD,OAAO,+BAAOT,EAAES,EAAG,cAC/BY,gBAAiB,SAACZ,GAAD,OAAO,+BAAOT,EAAES,EAAG,mBACpCa,eAAgB,SAACb,GAAD,OAAO,+BAAOT,EAAES,EAAG,kBACnCc,mBAAoB,SAACd,GAAD,OAAO,+BAAOT,EAAES,EAAG,sBAEvCe,QAAS,SAACf,GAAD,OAAO,iCAAOT,EAAES,EAAG,aAAZ,MAA6BT,EAAES,EAAG,mBAAlC,MAAyDT,EAAES,EAAG,qBAA9D,MAAuFT,EAAES,EAAG,2BAC5GgB,aAAc,SAAChB,GAAD,OAAO,iCAAOT,EAAES,EAAG,WAAZ,MAA2BT,EAAES,EAAG,sBACrDiB,YAAa,SAACjB,GAAD,OAAO,iCAAOT,EAAES,EAAG,WAAZ,MAA2BT,EAAES,EAAG,kBACpDkB,gBAAiB,SAAClB,GAAD,OAAO,0CAAaT,EAAES,EAAG,iBAAlB,MAAuCT,EAAES,EAAG,OAA5C,SAExBmB,eAAgB,SAACnB,GAAD,OAAO,0CAAaT,EAAES,EAAG,YAAlB,SACvBoB,WAAY,SAACpB,GAAD,OAAO,+CAAkBT,EAAES,EAAG,aAAvB,cAAgDT,EAAES,EAAG,YAArD,SAEnBqB,iBAAkB,SAACrB,GAAD,OAAO,gDAAmBT,EAAES,EAAG,aAAxB,MAAyCT,EAAES,EAAG,mBAA9C,eAA8ET,EAAES,EAAG,YAAnF,SACzBsB,iBAAkB,SAACtB,GAAD,OAAO,gDAAmBT,EAAES,EAAG,aAAxB,MAAyCT,EAAES,EAAG,mBAA9C,eAA8ET,EAAES,EAAG,YAAnF,SAEzBuB,kBAAmB,SAACvB,GAAD,OAAO,4CAAeT,EAAES,EAAG,cAApB,eAA+CT,EAAES,EAAG,eAApD,YAA6ET,EAAES,EAAG,cAAlF,QAE1BwB,oBAAqB,SAACxB,GAEpB,GADSA,EAAE9xB,MAAMuzB,mBAEf,OAAO,qDACT,IAAIC,GAAO1B,EAAE9xB,MAAMyzB,eAAiB,GAAK,IACzC,OAAID,EAAM,EAAU,yCAAYnC,EAAES,EAAG,iBAAjB,UACX0B,GAAO,IAAa,2CAAcnC,EAAES,EAAG,iBAAnB,eACtB,yCAAYT,EAAES,EAAG,iBAAjB,SAGL4B,EAAiB,CACrB3B,aAAc,SAACD,EAAG3V,GAAJ,OAAY,iCAAOkV,EAAES,EAAD,aAAR,MAA6BT,EAAES,EAAD,UAAO3V,EAAP,0BAA9B,MAAqEkV,EAAES,EAAD,qBAAtE,MAAmGT,EAAES,EAAD,UAAO3V,EAAP,6BAC9H6V,kBAAmB,SAACF,EAAG3V,GAAJ,OAAY,iCAAOkV,EAAES,EAAD,UAAO3V,EAAP,kBAAR,MAAuCkV,EAAES,EAAD,sBACvEG,iBAAkB,SAACH,EAAG3V,GAAJ,OAAY,iCAAOkV,EAAES,EAAD,UAAO3V,EAAP,kBAAR,MAAuCkV,EAAES,EAAD,2BACtEK,qBAAsB,SAACL,EAAG3V,GAAJ,OAAY,0CAAakV,EAAES,EAAD,UAAO3V,EAAP,mBAAd,MAA8CkV,EAAES,EAAD,sBAA/C,MAA6ET,EAAES,EAAD,OAA9E,SAElCM,aAAc,SAACN,EAAG3V,GAAJ,OAAY,iCAAOkV,EAAES,EAAD,aAAR,MAA6BT,EAAES,EAAD,UAAO3V,EAAP,0BAA9B,MAAqEkV,EAAES,EAAD,qBAAtE,MAAmGT,EAAES,EAAD,UAAO3V,EAAP,6BAC9HkW,kBAAmB,SAACP,EAAG3V,GAAJ,OAAY,iCAAOkV,EAAES,EAAD,UAAO3V,EAAP,kBAAR,MAAuCkV,EAAES,EAAD,sBACvEQ,iBAAkB,SAACR,EAAG3V,GAAJ,OAAY,iCAAOkV,EAAES,EAAD,UAAO3V,EAAP,kBAAR,MAAuCkV,EAAES,EAAD,2BACtEU,qBAAsB,SAACV,EAAG3V,GAAJ,OAAY,0CAAakV,EAAES,EAAD,UAAO3V,EAAP,mBAAd,MAA8CkV,EAAES,EAAD,sBAA/C,MAA6ET,EAAES,EAAD,OAA9E,SAElCW,WAAY,SAACX,EAAG3V,GAAJ,OAAY,+BAAOkV,EAAES,EAAD,UAAO3V,EAAP,gBAChCuW,gBAAiB,SAACZ,EAAG3V,GAAJ,OAAY,+BAAOkV,EAAES,EAAD,UAAO3V,EAAP,qBACrCwW,eAAgB,SAACb,EAAG3V,GAAJ,OAAY,+BAAOkV,EAAES,EAAD,UAAO3V,EAAP,oBACpCyW,mBAAoB,SAACd,EAAG3V,GAAJ,OAAY,+BAAOkV,EAAES,EAAD,UAAO3V,EAAP,wBAExCwX,QAAS,SAAC7B,EAAG3V,GAAJ,OAAY,iCAAOkV,EAAES,EAAD,aAAR,MAA6BT,EAAES,EAAD,UAAO3V,EAAP,qBAA9B,MAAgEkV,EAAES,EAAD,qBAAjE,MAA8FT,EAAES,EAAD,UAAO3V,EAAP,6BACpHyX,aAAc,SAAC9B,EAAG3V,GAAJ,OAAY,iCAAOkV,EAAES,EAAD,UAAO3V,EAAP,aAAR,MAAkCkV,EAAES,EAAD,sBAC7D+B,YAAa,SAAC/B,EAAG3V,GAAJ,OAAY,iCAAOkV,EAAES,EAAD,UAAO3V,EAAP,aAAR,MAAkCkV,EAAES,EAAD,kBAC5DgC,gBAAiB,SAAChC,EAAG3V,GAAJ,OAAY,0CAAakV,EAAES,EAAD,UAAO3V,EAAP,mBAAd,MAA8CkV,EAAES,EAAD,OAA/C,SAE7BiC,UAAW,SAACjC,EAAG3V,GAAJ,OAAY,iCAAOkV,EAAES,EAAD,aAAR,MAA6BT,EAAES,EAAD,UAAO3V,EAAP,uBAA9B,MAAkEkV,EAAES,EAAD,qBAAnE,MAAgGT,EAAES,EAAD,UAAO3V,EAAP,6BACxH6X,eAAgB,SAAClC,EAAG3V,GAAJ,OAAY,iCAAOkV,EAAES,EAAD,UAAO3V,EAAP,eAAR,MAAoCkV,EAAES,EAAD,sBACjEmC,cAAe,SAACnC,EAAG3V,GAAJ,OAAY,iCAAOkV,EAAES,EAAD,UAAO3V,EAAP,eAAR,MAAoCkV,EAAES,EAAD,wBAChEoC,kBAAmB,SAACpC,EAAG3V,GAAJ,OAAY,0CAAakV,EAAES,EAAD,UAAO3V,EAAP,mBAAd,MAA8CkV,EAAES,EAAD,mBAA/C,MAA0ET,EAAES,EAAD,OAA3E,SAE/BqC,UAAW,SAACrC,EAAG3V,GAAJ,OAAY,iCAAOkV,EAAES,EAAD,aAAR,MAA6BT,EAAES,EAAD,UAAO3V,EAAP,uBAA9B,MAAkEkV,EAAES,EAAD,qBAAnE,MAAgGT,EAAES,EAAD,UAAO3V,EAAP,6BACxHiY,eAAgB,SAACtC,EAAG3V,GAAJ,OAAY,iCAAOkV,EAAES,EAAD,UAAO3V,EAAP,eAAR,MAAoCkV,EAAES,EAAD,sBACjEuC,cAAe,SAACvC,EAAG3V,GAAJ,OAAY,iCAAOkV,EAAES,EAAD,UAAO3V,EAAP,eAAR,MAAoCkV,EAAES,EAAD,wBAChEwC,kBAAmB,SAACxC,EAAG3V,GAAJ,OAAY,0CAAakV,EAAES,EAAD,UAAO3V,EAAP,mBAAd,MAA8CkV,EAAES,EAAD,mBAA/C,MAA0ET,EAAES,EAAD,OAA3E,SAE/ByC,oBAAqB,SAACzC,EAAG3V,GAEvB,GADS2V,EAAE9xB,MAAF,UAAWmc,EAAX,wBAEP,OAAO,qDACT,IAAIqX,GAAO1B,EAAE9xB,MAAF,UAAWmc,EAAX,oBAAmC,GAAK,IACnD,OAAIqX,EAAM,EAAU,yCAAYnC,EAAES,EAAD,UAAO3V,EAAP,mBAAb,UACXqX,GAAO,IAAa,2CAAcnC,EAAES,EAAD,UAAO3V,EAAP,mBAAf,eACtB,yCAAYkV,EAAES,EAAD,UAAO3V,EAAP,mBAAb,SAIXne,OAAO9C,KAAK+C,KAAeC,SAAQ,SAAA4d,GAAM,OACvC9d,OAAOsG,QAAQovB,GAAgBx1B,SAAQ,mCAAEC,EAAF,KAAOq2B,EAAP,YACrCx2B,OAAO0X,eAAeoP,EAAtB,UAAsChJ,EAAtC,YAAgD3d,GAAO,CACrDyX,cAAc,EACd6e,YAAY,EACZC,UAAU,EACVj5B,MAAO,SAAC20B,GAAD,OAAUoE,EAAMpE,EAAKtU,YAGlC,IAAM8V,EAAuB,CAC3B+C,iBAAkB,CAChB9C,YAAa,SAAC3M,GAAD,OAAa,SAAC4M,GAAD,OAAO,sCAAST,EAAES,EAAG,YAAd,MAA8BT,EAAES,EAAG,cAAnC,cAA6DT,EAAES,EAAG,QAAlE,QAAgFT,EAAES,EAAG,OAArF,MAAgGT,EAAES,EAAG,aAArG,MAAsH5M,EAAQzpB,MAA9H,Y,4FC1JtB,SAASm5B,EAAmB9S,GACzC,OCJa,SAA4BA,GACzC,GAAI7mB,MAAMuG,QAAQsgB,GAAM,OAAO,OAAA+S,EAAA,GAAiB/S,GDGzC,CAAkBA,IELZ,SAA0BgT,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYh3B,OAAO82B,GAAO,OAAO75B,MAAMg6B,KAAKH,GFIvD,CAAgBhT,IAAQ,OAAAoT,EAAA,GAA2BpT,IGLvE,WACb,MAAM,IAAIqT,UAAU,wIHIwE,K,gCIL9F,+CACe,SAASC,EAA2BtD,EAAGuD,GACpD,IAAIC,EAEJ,GAAsB,qBAAXP,QAAgD,MAAtBjD,EAAEiD,OAAOC,UAAmB,CAC/D,GAAI/5B,MAAMuG,QAAQswB,KAAOwD,EAAK,YAA2BxD,KAAOuD,GAAkBvD,GAAyB,kBAAbA,EAAE/e,OAAqB,CAC/GuiB,IAAIxD,EAAIwD,GACZ,IAAIj6B,EAAI,EAEJk6B,EAAI,aAER,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIp6B,GAAKy2B,EAAE/e,OAAe,CACxB2iB,MAAM,GAED,CACLA,MAAM,EACNj6B,MAAOq2B,EAAEz2B,OAGboB,EAAG,SAAWk5B,GACZ,MAAMA,GAERtE,EAAGkE,GAIP,MAAM,IAAIJ,UAAU,yIAGtB,IAEIS,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLN,EAAG,WACDF,EAAKxD,EAAEiD,OAAOC,aAEhBS,EAAG,WACD,IAAIM,EAAOT,EAAGU,OAEd,OADAH,EAAmBE,EAAKL,KACjBK,GAETt5B,EAAG,SAAWw5B,GACZH,GAAS,EACTF,EAAMK,GAER5E,EAAG,WACD,IACOwE,GAAoC,MAAhBP,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIQ,EAAQ,MAAMF,O,8FCnDtBM,GAAY,EACZC,EAAoB,GACpBC,EAAc,EAEGnzB,EAEnB,aACE,GADa,oBACTiO,gBAAgBjO,EAClB,MAAM8V,MAAM,2CAJG9V,EAOZozB,UAAY,SAACxiB,GAAD,OAAWA,IAASA,EAAK9T,OAAS8T,EAAK7O,eAAiB6O,EAAK5O,UAP7DhC,EAQZiB,qBAAuB,kBAAMklB,YAAU+M,IAR3BlzB,EASZqzB,mBAAqB,kBAAMt4B,OAAO9C,KAAKi7B,IAT3BlzB,EAUZC,iCAAmC,WACxC,IAAIgzB,EAiBJ,OAhBAl4B,OAAO9C,KAAK6H,cAAc6B,QAAO,SAAAzG,GAAG,OAAIA,EAAI6W,SAAS,iBAAe9W,SAAQ,SAAA0V,GAC1E,IAAKuiB,EAAkBviB,GAAK,CAC1B,IAAIzP,EAAY2rB,YAAqBlc,GACrC,IAAKzP,EAAW,OAChB,GAhBalB,EAgBJozB,UAAUlyB,GAEjB,YAlBWlB,EAiBN4oB,oBAAoBjY,GAGtBzP,EAAUC,oBACbD,EAAUC,kBAAoB,GAC9B+rB,YAAmBvc,EAAIzP,IAEzBgyB,EAAkBviB,GAAMzP,MAG5B+xB,GAAY,GACL,GA5BUjzB,EA8BZomB,aAAe,SAACxV,GACrB,IA/BiB5Q,EA+BRozB,UAAUxiB,GAAnB,CAGA,IADA,IAAID,EAAE,oBAAgBwiB,KACc,OAA7BrzB,aAAaitB,QAAQpc,IAC1BA,EAAE,oBAAgBwiB,KACpB,IAAIG,EAAQnN,YAAUvV,GAItB,OAHA0iB,EAAM3iB,GAAKA,EACXuc,YAAmBvc,EAAI2iB,GACvBJ,EAAkBviB,GAAM2iB,EACjB3iB,IAxCU3Q,EA0CZ4C,gBAAkB,SAACgO,GACxB,IA3CiB5Q,EA2CRozB,UAAUxiB,GAAnB,CACA,IAAID,EAAKC,EAAKD,GACV2iB,EAAQnN,YAAUvV,GACtBsc,YAAmBvc,EAAI2iB,GACvBJ,EAAkBviB,GAAM2iB,IA/CPtzB,EAiDZS,aAAe,SAACkQ,GAAD,OAAQA,EAAKuiB,EAAkBviB,GAAM,MAjDxC3Q,EAmDZ4oB,oBAAsB,SAACjY,UACrBuiB,EAAkBviB,GACzB7Q,aAAaC,WAAW4Q,IArDP3Q,EAuDZuzB,sBAAwB,SAACC,EAAQlyB,GACtC,IAAKkyB,IAAWlyB,EAAS,OAAO,KAChC,IAAIsP,EAzDa5Q,EAyDDS,aAAa+yB,GAC7B,OAAI5iB,EAAKzP,kBACAyP,EAAKzP,kBAAkBG,QADhC,GA1DiBtB,EA6DZmrB,cAAgB,SAACqI,EAAQlzB,GAC9B,IAAIsQ,EA9Da5Q,EA8DDS,aAAa+yB,GACxB5iB,GAAStQ,GAAQA,EAAIgB,UACrBsP,EAAKzP,oBACRyP,EAAKzP,kBAAoB,IAC3ByP,EAAKzP,kBAAkBb,EAAIgB,SAAWhB,EAAIqQ,GAlEzB3Q,EAmEZ4C,gBAAgBgO,KAnEJ5Q,EAqEZyzB,sBAAwB,SAACD,EAAQlyB,GACtC,IAAIsP,EAtEa5Q,EAsEDS,aAAa+yB,GACxB5iB,GAAStP,GACTsP,EAAKzP,mBAAsByP,EAAKzP,kBAAkBG,KACvDsP,EAAKzP,kBAAkBG,GAAW,GAzEjBtB,EA0EZ4C,gBAAgBgO,KA1EJ5Q,EA4EZ0zB,mBAAqB,SAAC9N,EAAalM,GACxC,IAAIxY,EA7EalB,EA6EIS,aAAamlB,GAC7B1kB,IACLA,EAAUC,kBAAoB,GAC9BpG,OAAOsG,QAAQqY,GAAaze,SAAQ,mCAAEC,EAAF,KAAOqG,EAAP,YAClCL,EAAUC,kBAAkBjG,GAAOqG,KACrCvB,EAAkB4C,gBAAgB1B,M,6IC9EvByyB,EAPE,CACf92B,OAAQ+2B,IACR52B,MAAO62B,IACP52B,MAAO62B,IACP52B,OAAQ62B,IACR52B,QAAS62B,K,iCCPUC,EAEnB,aAAgB,GAAD,oBAAKhmB,gBAAgBgmB,EAAc,MAAMne,MAAM,2CAF3Cme,EAKZna,WAAa,SAACsR,GACnB,IAAItR,EAAa,GAMjB,OALA/e,OAAOsG,QAAQ+pB,GAAWnwB,SAAQ,YAAiB,IAAD,mBAAdC,EAAc,KAAToF,EAAS,KAC3CA,IACDwZ,EAAWxZ,EAAIK,QAASmZ,EAAWxZ,EAAIK,QAAQxF,KAAKD,GACnD4e,EAAWxZ,EAAIK,QAAU,CAACzF,OAE1B4e,G,YCFU/L,E,WAEnB,aAAgB,GAAD,oBAAKE,gBAAgBF,EAAU,MAAM+H,MAAM,0C,0DAkD1Ctd,EAAO07B,GAA0B,IAAhBC,EAAe,wDAC1CC,EAAO,KACPC,EAAa1nB,KAAK+X,MAAMlsB,EAAQ07B,EAAS,IAC7C,IAAKG,EAAY,OAAO,KACxB,IAAIC,EAAa,SAAbA,EAAc9Z,EAAKqE,GACrB,IAAIuV,EAAJ,CACA,GAAIvV,EAAI/O,OAAQ,CACd,GAAI+O,EAAI/O,OAASukB,EAAY,OAC7B,IAAIE,EAAM1V,EAAI2V,QAAO,SAACC,EAAMj1B,GAAP,OAAai1B,EAAOj1B,IAAG,GAC5C,GAAI20B,EAAO,CACT,GAAII,EAAM/Z,GAAO,KAAO,OACxB,GAAI8S,YAAiBiH,EAAK/Z,GAExB,YADA4Z,EAAOvV,OAGJ,CACL,GAAI0V,EAAM/Z,EAAM,EAAG,OACnB,GAAIkT,YAAe6G,EAAK/Z,GAEtB,YADA4Z,EAAOvV,IAKbqV,EAAS/F,QAAQxP,UAAU1jB,SAAQ,SAAAm5B,GACjCE,EAAW97B,EAAD,sBAAYqmB,GAAZ,CAAiBuV,UAI/B,OADAE,EAAW97B,EAAO,IACX47B,I,sCAEczZ,EAAOgR,GAAU,IAAD,IACrC,IAAKA,IAAYA,EAAQnzB,MAAO,MAAO,CAAE+H,OAAO,GAChD,IAAI/H,EAAQkB,WAAWiyB,EAAQnzB,OAC/B,GAAIkU,MAAMlU,GAAQ,MAAO,CAAE+H,OAAO,EAAO+P,IAAI,iBAC7C,IAAI/B,EAAWoM,EAAMpM,SACrB,IAAKA,EAAU,MAAO,CAAEhO,OAAO,EAAO+P,IAAI,2BAC1C,IAAIokB,EAA4C,MAAlCtlB,IAAKG,YAAYoc,EAAQzwB,KACnCg5B,EAAWjmB,KAAK0mB,mBAAmBhJ,EAAQzwB,IAAKqT,GAChDsB,EAAQ5B,KAAK2mB,SAASp8B,EAAO07B,EAAUQ,GAE3C,IAAK7kB,GAA0B,IAAjBA,EAAMC,OAAc,MAAO,CAAEvP,OAAO,EAAO+P,IAAI,qCAC7D,IAAIukB,GAAsB,UAAAz5B,IAAkBmT,UAAlB,eAA6B/S,uBAAwB,aAAIJ,IAAkBmT,UAAtB,aAAI,EAA6BhT,cAAe,EAC/H,GAAIsU,EAAMC,OAAS+kB,EAAqB,MAAO,CAAEt0B,OAAO,EAAO+P,IAAI,sCAAD,OAAwCukB,EAAxC,YAElE,IAAInI,EAAMwH,EAAS,GAAKrkB,EAAMC,OAC1B6c,EAAMuH,EAASA,EAASpkB,OAAS,GAAKD,EAAMC,OAChD,MAAO,CAAEvP,OAAO,EAAMwP,WAAY+d,aAAet1B,EAAQk0B,IAAQC,EAAMD,GAAQ,KAAMpc,IAAI,2BAAD,OAA6BT,EAAMC,OAAnC,8BAA+DD,EAAMqe,KAAK,MAA1E,KAAoFre,W,yCAIpJ8K,GACxB,IAD+B,EAC3BpK,EAAoB,EAAGC,EAAoB,EAC3Cb,EAAqBgL,EAAMnL,SAAStX,KAAI,SAAAyzB,GAAO,OAAI5d,EAAS+mB,gBAAgBna,EAAOgR,MAFxD,cAGThc,GAHS,IAG/B,4BACE,IADF,QACepP,MACX,MAAO,CAAEoP,qBAAoBpP,OAAO,EAAO+P,IAAK,iCAAkCC,oBAAmBC,sBAL1E,8BAQ/B,GAAIb,EAAmBolB,MAAK,SAAApJ,GAAO,aAAW,OAAPA,QAAO,IAAPA,GAAA,UAAAA,EAAS9b,aAAT,eAAgBC,QAAS,MAAMH,EAAmBolB,MAAK,SAACpJ,GAAD,OAAcA,EAAQ9b,SAClH,MAAO,CAAEF,qBAAoBpP,OAAO,EAAO+P,IAAK,uEAAwEC,oBAAmBC,qBAC7I,IAAIwkB,EAAoBrlB,EAAmB6kB,QAAO,SAACD,EAAKU,GAAN,OAAcV,GAAOU,EAAI10B,OAAS00B,EAAIplB,MAAQolB,EAAIplB,MAAMC,OAAS,KAAI,GACnHolB,EAAiBnnB,EAASmnB,eAAeva,EAAM3X,MAAO2X,EAAMpM,UAC5D4mB,EAAoBpnB,EAASqnB,mBAAmBza,EAAMpM,UAE1D,GAAKymB,EAAoBE,EAAkBC,EACzC,MAAO,CAAExlB,qBAAoBpP,OAAO,EAAO+P,IAAI,oCAAD,OAAsC0kB,EAAtC,8CAA6FE,EAA7F,uEAA0KC,EAA1K,MAAiM5kB,oBAAmBC,qBAEpQ,IAAI6kB,EAAyB1lB,EAAmB6kB,QAAO,SAACD,EAAKU,GAAN,OAAcV,GAAOU,EAAI10B,OAAS00B,EAAIplB,OAASolB,EAAIllB,WAAcklB,EAAIllB,WAAaklB,EAAIplB,MAAMC,OAAU,KAAI,GAGjK,MAAO,CAAEvP,OAAO,EAAMoP,qBAAoBqlB,oBAAmBE,iBAAgBI,oBAAqBH,EAAmB5kB,kBAFrHA,EAAoBud,YAAauH,EAAyBF,GAE8E3kB,kBADxIA,EAAoBsd,aAAcuH,EAA0C,IAAjBH,GAAwBC,M,0CAiF1DjnB,EAAY0X,GACrC,IAAItlB,EAAMJ,IAAiBsB,YAAY0M,GACvC,GAAK5N,EAAL,CACA,IAAIi1B,EAAkBj1B,EAAIE,SACtBg1B,EAAoB5P,GAAe,GACvC,GAAI2P,IAAoBC,EAAxB,CACA,IAAIl0B,EAAUhB,EAAIgB,QACdm0B,EAAuBz1B,IAAkBuzB,sBAAsBiC,EAAkBl0B,GACjFo0B,EAAqBx1B,IAAiBsB,YAAYi0B,GAGlDC,EAAoBx1B,IAAiBy1B,cAAcr1B,EAAKo1B,GACvDx1B,IAAiByoB,kBAAkBroB,EAAIqQ,GAAI6kB,GAG5CA,GACFx1B,IAAkBmrB,cAAcqK,EAAkBl1B,GAEhDi1B,IACEG,EACF11B,IAAkBmrB,cAAcoK,EAAiBG,GAEjD11B,IAAkByzB,sBAAsB8B,EAAiBj0B,U,KAhO5CyM,EAKZmY,sBAAwB,kBAAMrrB,KALlBkT,EAMZoB,mBAAqB,SAACjU,GAAD,MAAM2tB,EAAN,uDAAe,GAAf,OAAkC,OAAZjuB,UAAY,IAAZA,KAAA,UAAAA,IAAeM,UAAf,eAAqB4B,OAAQ+rB,GAN5D9a,EAOZ6nB,gCAAkC,SAAChX,GAAD,OACvC7jB,OAAOsG,QAAQzG,KAAc+G,QAAO,mCAAOk0B,GAAP,kBAAmBA,EAAO5W,OAAQ4W,EAAO5W,OAAOnP,OAAU,KAAO8O,MARpF7Q,EASZgB,qBAAuB,SAACpO,EAAQW,GAAT,QAAkBunB,EAAlB,uDAA2B,GAA3B,OAA8C,OAAZjuB,UAAY,IAAZA,KAAA,UAAAA,IAAe+F,UAAf,mBAAwBm1B,cAAxB,eAAiCx0B,KAAYunB,GAT1F9a,EAUZc,qBAAuB,SAAClO,EAAQW,GAAT,QAAkBunB,EAAlB,uDAA2B,KAA3B,OAAgD,OAAZjuB,UAAY,IAAZA,KAAA,UAAAA,IAAe+F,UAAf,mBAAwBo1B,aAAxB,eAAgCz0B,KAAYunB,GAV3F9a,EAWZioB,yBAA2B,SAACr1B,GAAD,MAASkoB,EAAT,uDAAkB,KAAlB,OAAuC,OAAZjuB,UAAY,IAAZA,KAAA,UAAAA,IAAe+F,UAAf,eAAwBs1B,OAAQpN,GAX1E9a,EAaZgd,oBAAsB,kBAAMhwB,OAAO9C,KAAK2E,MAb5BmR,EAcZmoB,oBAAsB,SAAC50B,GAAD,IAAUunB,EAAV,uDAAmB,GAAnB,OAC3BjsB,IAAkB0E,GAAW1E,IAAkB0E,GAASxE,KAAO+rB,GAf9C9a,EAgBZooB,oBAAsB,SAAC70B,GAAD,IAAUunB,EAAV,uDAAmB,GAAnB,OAC1BvnB,GAAWqyB,EAASryB,GAAY,cAAC,IAAD,CAAiB7J,KAAMk8B,EAASryB,GAAwBzJ,UAAU,SAAnByJ,GAAgCunB,GAjB/F9a,EAmBZiB,4BAA8B,SAAC1N,GAA0B,IAAjBunB,EAAgB,uDAAP,GACtD,IAAKvnB,EAAS,OAAOunB,EACrB,IAAI/rB,EArBaiR,EAqBDmoB,oBAAoB50B,GACpC,IAAKxE,EAAM,OAAO+rB,EAClB,IAAIuN,EAvBaroB,EAuBGooB,oBAAoB70B,GACxC,OAAK80B,EACG,iCAAOA,EAAP,IAAkBt5B,KADJ+rB,GAxBL9a,EA6BZsoB,aAAe,SAAC11B,GAAD,OAAY/F,IAAa+F,GAAU/F,IAAa+F,GAAQse,OAAS,IA7BpElR,EAgCZuoB,gBAAkB,kBAAMx7B,KAhCZiT,EAiCZuB,iBAAmB,SAACpU,EAAKqT,EAAUvL,GAAuB,IAAD,IAAf6lB,EAAe,uDAAN,EACpD0N,EAAI,UAAG56B,IAAsB4S,UAAzB,iBAAG,EAAkCrT,UAArC,aAAG,EAAyC8H,GACpD,OAAIuzB,KACC,OAAIr7B,QAAJ,IAAIA,OAAJ,EAAIA,EAAK6W,SAAS,mBApCNhE,EAqCHuB,iBAAiB,gBAAiBf,EAAUvL,EAAO6lB,GAC1DA,IAtCU9a,EA0CZyoB,eAAiB,kBAAMz7B,OAAO9C,KAAKyE,MA1CvBqR,EA2CZqnB,mBAAqB,SAAC7mB,GAAD,OAAcnT,IAAkBmT,GACzDnT,IAAkBmT,GAAUhT,YAAcH,IAAkBmT,GAAU/S,qBAAwB,GA5C9EuS,EA6CZmnB,eAAiB,SAAClyB,EAAOuL,GAAR,OACtB5B,KAAKigB,MAAiB,EAAXre,EAAevL,GAAS,IA9ClB+K,EA+CZ0oB,wBAA0B,SAAC9b,GAAD,OAC/BA,EAAMnL,SAASglB,QAAO,SAACD,EAAKU,GAAN,OACpBV,GAAOU,GAAOA,EAAIz8B,MAAQ,EAAI,KAAI,IAjDnBuV,EAkDZ4mB,mBAAqB,SAACtX,EAAY9O,GAAb,OAA2B8O,GAAc9O,EACnE7R,IAAqB2gB,GAAY9O,GAAY,IAnD5BR,EA6HZ+L,WAAama,EAAana,WA7Hd/L,EA+HZ2oB,gBAAkB,SAAC/1B,GAAD,MAASkoB,EAAT,uDAAkB,KAAlB,OACX,OAAZjuB,UAAY,IAAZA,KAAA,UAAAA,IAAe+F,UAAf,eAAwBs1B,OAAQpN,GAhIf9a,EAiIZmM,uBAAyB,SAACvZ,EAAQqZ,GAAT,QAAoB6O,EAApB,uDAA6B,KAA7B,OAC9B1C,aAAU,UAlIOpY,EAkIF2oB,gBAAgB/1B,UAArB,mBAA+BqZ,UAA/B,eAA2Cjd,QAAS8rB,IAlI7C9a,EAoIZwM,4BAA8B,SAAC5Z,EAAQqZ,EAAW5b,GAAmC,IAAnByqB,EAAkB,uDAAT,KAChF,IAAKzqB,EAAgB,OAAOyqB,EAC5B,IAAI1qB,EAtIa4P,EAsIMoM,gCAAgCxZ,EAAQqZ,GAC/D,IAAK7b,EAAa,OAAO0qB,EAHgE,MAInEzO,IAAiBoQ,mBAAmBrsB,EAAa,QAASC,GAJS,mBAIpFrB,EAJoF,KAI7E0tB,EAJ6E,KAKzF,OAAKA,EACE1vB,OAAOqG,YAAYrG,OAAOsG,QAAQtE,GAAO7E,KAAI,yCAAgB,CAAhB,UAA4BuyB,OAD5D5B,GAzIH9a,EA4IZ2d,2BAA6B,SAAC5R,GACnC,IAAI6c,EAAoB,GAMxB,OALA57B,OAAOsG,QAAQyY,GAAY7e,SAAQ,qCAAE0F,EAAF,KAAUi2B,EAAV,YACrB,OAAZh8B,UAAY,IAAZA,KAAA,UAAAA,IAAe+F,UAAf,eAAwBs1B,OAAQl7B,OAAOsG,QAAQzG,IAAa+F,GAAQs1B,MAAMh7B,SAAQ,mCAAE+e,EAAF,KAAaxhB,EAAb,YAChFsB,SAASkgB,IAAc4c,EAAO9mB,QAAUtX,EAAMuE,OAAShC,OAAO9C,KAAKO,EAAMuE,OAAO+S,QAChF/U,OAAOsG,QAAQ7I,EAAMuE,OAAO9B,SAAQ,mCAAEC,EAAF,KAAO2c,EAAP,YAClC8e,EAAkBx7B,KAAK,CAAED,MAAK2c,qBAC7B8e,GAnJU5oB,EAqJZ8L,sBAAwB,SAACC,GAC9B,IAAI6c,EAAoB,GAQxB,OAPA57B,OAAOsG,QAAQyY,GAAY7e,SAAQ,YAAuB,IAAD,qBAApB0F,EAAoB,KAAZi2B,EAAY,KACvD,UAAIh8B,UAAJ,IAAIA,KAAJ,UAAIA,IAAe+F,UAAnB,aAAI,EAAwBs1B,KAAM,CAChC,IAAIY,EAAa97B,OAAO9C,KAAK2C,IAAa+F,GAAQs1B,MAAMt0B,QAAO,SAAAqY,GAAS,OAAIlgB,SAASkgB,IAAc4c,EAAO9mB,UACtG+mB,EAAW/mB,SACb6mB,EAAkBh2B,GAAUk2B,OAG3BF,GA9JU5oB,EAiKZ8M,yBAA2B,SAACla,EAAQqZ,EAAW8c,GAAiC,IAAD,MAAhBjO,EAAgB,uDAAP,GACzEkO,EAAa,OAAGn8B,UAAH,IAAGA,KAAH,UAAGA,IAAe+F,UAAlB,iBAAG,EAAwBs1B,YAA3B,iBAAG,EAA+Bjc,UAAlC,aAAG,EAA2Cpb,KAC/D,OAAKm4B,EACwB,oBAAlBA,EACFA,EAAcD,GACdC,GAEFlO,EALoBA,GAnKV9a,EA0KZoM,gCAAkC,SAACxZ,EAAQqZ,GAAT,UAAoB6O,EAApB,uDAA6B,KAA7B,OAC3B,OAAZjuB,UAAY,IAAZA,KAAA,UAAAA,IAAe+F,UAAf,mBAAwBs1B,YAAxB,mBAA+Bjc,UAA/B,eAA2C7b,cAAe0qB,GA3KzC9a,EA6KZipB,4BAA8B,SAACt1B,GACpC,IAAIu1B,EAAwB,GAwB5B,OAvBAl8B,OAAOsG,QAAQzG,KAAcK,SAAQ,YAAuB,IAAD,mBAApB0F,EAAoB,KAAZu2B,EAAY,KACrDC,EAAY,GACZC,GAAe,EACfF,EAAOjB,MACTl7B,OAAOsG,QAAQ61B,EAAOjB,MAAMh7B,SAAQ,YAAgC,IAAD,mBAA7B+e,EAA6B,KAAlBqd,EAAkB,KAKjE,GAJIA,EAAat6B,OAAShC,OAAO9C,KAAKo/B,EAAat6B,OAAO+S,OAAS,IACjEqnB,EAAUnd,GAAamM,YAAUkR,EAAat6B,OAC9Cq6B,GAAe,GAEbC,EAAal5B,YAAa,CAC5B,IAAIC,EAAiBgc,IAAiBC,kBAAkB3Y,EAAsB,CAAEG,OAAQlB,EAAQmB,QAASkY,IACzG,GAAI5b,EAAgB,CAClB,IAAIwtB,EA3LG7d,EA2LcwM,4BAA4B5Z,EAAQqZ,EAAW5b,GAChEwtB,IACFuL,EAAUnd,GAAamM,YAAUyF,GACjCwL,GAAe,QAKrBA,IACFH,EAAsBt2B,GAAUw2B,MAE7BF,I,sFC/MPhE,GAAY,EACZqE,EAAmB,GACnBC,EAAa,EACIr3B,EAEnB,aACE,GADa,oBACT+N,gBAAgB/N,EAClB,MAAM4V,MAAM,2CAJG5V,EAOZkzB,UAAY,SAAC9yB,GAAD,OAChBA,IAAQA,EAAIK,SAAWL,EAAIiO,WAAajO,EAAIgB,UAAYhB,EAAIM,aAR5CV,EASZE,oBAAsB,kBAAM+lB,YAAUmR,IAT1Bp3B,EAUZs3B,kBAAoB,kBAAMz8B,OAAO9C,KAAKq/B,IAV1Bp3B,EAWZD,iCAAmC,WACxC,IAAIgzB,EAaJ,OAZAl4B,OAAO9C,KAAK6H,cAAc6B,QAAO,SAAAzG,GAAG,OAAIA,EAAI6W,SAAS,gBAAc9W,SAAQ,SAAA0V,GACzE,IAAK2mB,EAAiB3mB,GAAK,CACzB,IAAIrQ,EAAMusB,YAAqBlc,GAC/B,IAAKrQ,EAAK,OACV,GAjBaJ,EAiBJkzB,UAAU9yB,GAEjB,YAnBWJ,EAkBNu3B,mBAAmB9mB,GAG1B2mB,EAAiB3mB,GAAMrQ,MAG3B2yB,GAAY,GACL,GAzBU/yB,EA2BZsB,YAAc,SAACmP,GAAD,OAAQA,EAAK2mB,EAAiB3mB,GAAM,MA3BtCzQ,EA4BZw3B,eAAiB,SAACp3B,GA5BNJ,EA6BZu3B,mBAAmBn3B,EAAIqQ,KA7BXzQ,EA+BZy3B,YAAc,SAACr3B,GACpB,GAhCiBJ,EAgCRkzB,UAAU9yB,GAAM,OAAO,KAGhC,IADA,IAAIqQ,EAAE,mBAAe4mB,KACe,OAA7Bz3B,aAAaitB,QAAQpc,IAC1BA,EAAE,mBAAe4mB,KACnB,IAAIK,EAAOzR,YAAU7lB,GAIrB,OAHAs3B,EAAKjnB,GAAKA,EACVuc,YAAmBvc,EAAIinB,GACvBN,EAAiB3mB,GAAMinB,EAChBjnB,GAzCUzQ,EA2CZa,eAAiB,SAACT,GACvB,IA5CiBJ,EA4CRkzB,UAAU9yB,GAAnB,CACA,IAAIqQ,EAAKrQ,EAAIqQ,GACTinB,EAAOzR,YAAU7lB,GACrB4sB,YAAmBvc,EAAIinB,GACvBN,EAAiB3mB,GAAMinB,IAhDN13B,EAkDZu3B,mBAAqB,SAACI,UACpBP,EAAiBO,GACxB/3B,aAAaC,WAAW83B,IApDP33B,EAuDZyoB,kBAAoB,SAACpnB,EAAOf,GACjC,GAAKe,EAAL,CACA,IAAIjB,EAzDaJ,EAyDFsB,YAAYD,GACtBjB,GAAOA,EAAIE,WAAaA,IAC7BF,EAAIE,SAAWA,EA3DEN,EA4DZa,eAAeT,MA5DHJ,EA8DZy1B,cAAgB,SAACmC,EAAMC,GAC5B,IAAIC,EAAOF,EAAKt3B,SACZy3B,EAAOF,EAAKv3B,SAhECN,EAiEZyoB,kBAAkBmP,EAAKnnB,GAAIsnB,GAjEf/3B,EAkEZyoB,kBAAkBoP,EAAKpnB,GAAIqnB,IAlEf93B,EAoEZg4B,kBAAoB,SAACC,EAAQC,GAAT,OApERl4B,EAqEZy1B,cArEYz1B,EAqEOsB,YAAY22B,GArEnBj4B,EAqEiCsB,YAAY42B,M,sGCvE7Che,E,WACnB,aAAgB,GAAD,oBAAKnM,gBAAgBmM,EAAkB,MAAMtE,MAAM,0C,mEACzCuiB,EAAcC,GAAY,IAAD,EAC1Cz2B,EAAoBy2B,EAApBz2B,OAAQC,EAAYw2B,EAAZx2B,QACd,GAAIu2B,EACF,OAAO,UAAAA,EAAapO,MAAK,SAAAroB,GAAI,OAAIA,EAAKC,SAAWA,KAAYC,GAAYA,GAAWF,EAAKE,UAAYA,aAA9F,eAA0G1D,iBAAkB,I,qCAEjHi6B,EAAcC,EAAWl6B,GAAiB,IACxDyD,EAAoBy2B,EAApBz2B,OAAQC,EAAYw2B,EAAZx2B,QACTu2B,IAAcA,EAAe,IAClC,IAAI/U,EAAQ+U,EAAaE,WAAU,SAAA32B,GAAI,OAAIA,EAAKC,SAAWA,KAAYC,GAAYA,GAAWF,EAAKE,UAAYA,MAC/G,IAAK1D,GAAkBklB,GAAS,EAE9B+U,EAAaG,OAAOlV,EAAO,OACtB,CACL,IAAImV,EAAU,CAAE52B,SAAQzD,kBACpB0D,IAAS22B,EAAQ32B,QAAUA,GAC3BwhB,GAAS,EACX+U,EAAa/U,GAASmV,EAEtBJ,EAAal9B,KAAKs9B,GAEtB,OAAOJ,I,yCAEiBl6B,EAAau6B,EAAWt6B,GAAmC,IAAnByqB,EAAkB,uDAAT,CAAC,GAAI,GAC9E,GAAI7wB,MAAMuG,QAAQJ,GAAc,CAE9B,IAF8B,EAE1BK,EAAyBJ,EACzBK,EAAsB,KAHI,cAIDN,GAJC,IAI9B,2BAA0C,CAAC,IAAhCO,EAA+B,QACxC,KAAIF,EAAyBE,EAAeC,UACvC,CACHF,EAAsBC,EACtB,MAHoDF,GAA0BE,EAAeC,UALnE,8BAW9B,IAAKF,EAAqB,OAAOoqB,EACjC,IAAI4B,EAASnO,YAAM9d,EAAwB,EAAGC,EAAoBE,UAClE,MAAO,CAACF,EAAoBi6B,GAAYjO,GAGxC,IAAIA,EAASnO,YAAMle,EAAgB,EAAGD,EAAYQ,UAClD,MAAO,CAACR,EAAYu6B,GAAYjO,O,sCCnCvBzvB,IATO,CACpBuQ,MAAO,CAAEzO,KAAM,SACf6O,IAAK,CAAE7O,KAAM,OACb4O,QAAS,CAAE5O,KAAM,WACjB8O,MAAO,CAAE9O,KAAM,SACf+O,KAAM,CAAE/O,KAAM,QACd0O,KAAM,CAAE1O,KAAM,U,mNCHVuV,EAAW,CAEf/O,QAAS,CAAExG,KAAM,KAAM0xB,OAAQ,WAC/B3yB,GAAI,CAAEiB,KAAM,KAAM0xB,OAAQ,WAC1BzyB,IAAK,CAAEe,KAAM,KAAMib,KAAM,IAAKyW,OAAQ,cACtChrB,SAAU,CAAE1G,KAAM,KAAM0xB,OAAQ,YAEhC/qB,SAAU,CAAE3G,KAAM,MAAO0xB,OAAQ,YACjC1yB,IAAK,CAAEgB,KAAM,MAAO0xB,OAAQ,YAC5BxyB,KAAM,CAAEc,KAAM,MAAOib,KAAM,IAAKyW,OAAQ,eACxC7qB,UAAW,CAAE7G,KAAM,MAAO0xB,OAAQ,aAClCmK,WAAY,CAAE77B,KAAM,aAAc0xB,OAAQ,cAE1C5qB,SAAU,CAAE9G,KAAM,MAAO0xB,OAAQ,YACjC7xB,IAAK,CAAEG,KAAM,MAAO0xB,OAAQ,YAC5BvyB,KAAM,CAAEa,KAAM,MAAOib,KAAM,IAAKyW,OAAQ,eACxC1qB,UAAW,CAAEhH,KAAM,MAAO0xB,OAAQ,aAElCtyB,cAAe,CAAEY,KAAM,qBAAsBib,KAAM,KACnD6gB,QAAS,CAAE97B,KAAM,eAAgBib,KAAM,KACvC5b,cAAe,CAAEW,KAAM,YAAaib,KAAM,KAC1C8gB,QAAS,CAAE/7B,KAAM,UAAWib,KAAM,KAClC3b,QAAS,CAAEU,KAAM,qBACjBT,UAAW,CAAES,KAAM,kBAAmBib,KAAM,KAC5Czb,UAAW,CAAEQ,KAAM,YAAaib,KAAM,KACtCxb,SAAU,CAAEO,KAAM,WAAYib,KAAM,KACpCvb,UAAW,CAAEM,KAAM,gBAAiBib,KAAM,KAC1C5U,KAAM,CAAErG,KAAM,WACdg8B,SAAU,CAAEh8B,KAAM,yBAA0Bib,KAAM,KAClDghB,WAAY,CAAEj8B,KAAM,kBAAmBib,KAAM,KAC7CihB,OAAQ,CAAEl8B,KAAM,YAAaib,KAAM,KAGnC+W,aAAc,CAAEhyB,KAAM,qBACtBqyB,aAAc,CAAEryB,KAAM,sBACtB0yB,WAAY,CAAE1yB,KAAM,uBACpBiyB,kBAAmB,CAAEjyB,KAAM,8BAC3BsyB,kBAAmB,CAAEtyB,KAAM,+BAC3B2yB,gBAAiB,CAAE3yB,KAAM,gCACzBkyB,iBAAkB,CAAElyB,KAAM,0BAC1BuyB,iBAAkB,CAAEvyB,KAAM,2BAC1B4yB,eAAgB,CAAE5yB,KAAM,4BACxBm8B,mBAAoB,CAAEn8B,KAAM,0BAA2Bib,KAAM,KAC7DmhB,mBAAoB,CAAEp8B,KAAM,2BAA4Bib,KAAM,KAC9DohB,mBAAoB,CAAEr8B,KAAM,0BAA2Bib,KAAM,KAC7DqhB,mBAAoB,CAAEt8B,KAAM,2BAA4Bib,KAAM,KAC9DkX,oBAAqB,CAAEnyB,KAAM,gCAAiCib,KAAM,SACpEuX,oBAAqB,CAAExyB,KAAM,iCAAkCib,KAAM,SACrEmX,qBAAsB,CAAEpyB,KAAM,qCAAsCib,KAAM,SAC1EwX,qBAAsB,CAAEzyB,KAAM,sCAAuCib,KAAM,SAC3E4X,mBAAoB,CAAE7yB,KAAM,uCAAwCib,KAAM,SAG1E+Y,UAAW,CAAEh0B,KAAM,kBACnBo0B,UAAW,CAAEp0B,KAAM,kBACnBi0B,eAAgB,CAAEj0B,KAAM,2BACxBq0B,eAAgB,CAAEr0B,KAAM,2BACxBk0B,cAAe,CAAEl0B,KAAM,uBACvBs0B,cAAe,CAAEt0B,KAAM,uBACvBu8B,gBAAiB,CAAEv8B,KAAM,uBAAwBib,KAAM,KACvDuhB,gBAAiB,CAAEx8B,KAAM,uBAAwBib,KAAM,KACvDwhB,gBAAiB,CAAEz8B,KAAM,uBAAwBib,KAAM,KACvDyhB,gBAAiB,CAAE18B,KAAM,uBAAwBib,KAAM,KACvDmY,iBAAkB,CAAEpzB,KAAM,6BAA8Bib,KAAM,SAC9DoY,iBAAkB,CAAErzB,KAAM,6BAA8Bib,KAAM,SAC9DkZ,kBAAmB,CAAEn0B,KAAM,kCAAmCib,KAAM,SACpEsZ,kBAAmB,CAAEv0B,KAAM,kCAAmCib,KAAM,SACpE0hB,aAAc,CAAE38B,KAAM,qBAAsBib,KAAM,KAClD2hB,aAAc,CAAE58B,KAAM,qBAAsBib,KAAM,KAElD6X,QAAS,CAAE9yB,KAAM,uBACjB+yB,aAAc,CAAE/yB,KAAM,gCACtBgzB,YAAa,CAAEhzB,KAAM,4BACrBizB,gBAAiB,CAAEjzB,KAAM,uCAAwCib,KAAM,SAEvE2Y,QAAS,CAAE5zB,KAAM,wBACjB6zB,aAAc,CAAE7zB,KAAM,iCACtB8zB,YAAa,CAAE9zB,KAAM,6BACrB+zB,gBAAiB,CAAE/zB,KAAM,wCAAyCib,KAAM,SAExEiY,eAAgB,CAAElzB,KAAM,sBAAuBib,KAAM,SACrDkY,WAAY,CAAEnzB,KAAM,kBAAmBib,KAAM,SAC7C4hB,IAAK,CAAE78B,KAAM,UAAWib,KAAM,KAC9B6hB,SAAU,CAAE98B,KAAM,eAAgBib,KAAM,KACxC8hB,QAAS,CAAE/8B,KAAM,UAAWib,KAAM,KAClC+hB,aAAc,CAAEh9B,KAAM,eAAgBib,KAAM,KAC5CgiB,YAAa,CAAEj9B,KAAM,2BAA4Bib,KAAM,KACvDiiB,oBAAqB,CAAEl9B,KAAM,mCAAoCib,KAAM,KACvEkiB,oBAAqB,CAAEn9B,KAAM,0CAA2Cib,KAAM,KAE9EmiB,eAAgB,CAAEp9B,KAAM,iBAAkBib,KAAM,KAChDoiB,oBAAqB,CAAEr9B,KAAM,sBAAuBib,KAAM,KAC1DqiB,iBAAkB,CAAEt9B,KAAM,mBAAoBib,KAAM,KACpDsiB,YAAa,CAAEv9B,KAAM,iBAAkBib,KAAM,KAC7CuiB,aAAc,CAAEx9B,KAAM,eAAgBib,KAAM,KAC5CwiB,SAAU,CAAEz9B,KAAM,WAAYib,KAAM,KACpCyiB,UAAW,CAAE19B,KAAM,YAAaib,KAAM,KAGtC8T,aAAc,CAAE/uB,KAAM,wBAAyB3C,QAAS,SACxDsgC,WAAY,CAAE39B,KAAM,kBAAmB3C,QAAS,GAEhDugC,YAAa,CAAE59B,KAAM,eACrBszB,kBAAmB,CAAEtzB,KAAM,yBAA0Bib,KAAM,SAE3DyY,cAAe,CAAE1zB,KAAM,qBAAsBib,KAAM,IAAK5d,QAAS,IACjEk2B,oBAAqB,CAAEvzB,KAAM,gCAAiCib,KAAM,SACpEuY,mBAAoB,CAAExzB,KAAM,0BAA2B3C,SAAS,GAChEwgC,cAAe,CAAE79B,KAAM,sBAAuBib,KAAM,IAAK5d,QAAS,IAClEm3B,oBAAqB,CAAEx0B,KAAM,iCAAkCib,KAAM,SACrE6iB,mBAAoB,CAAE99B,KAAM,2BAA4B3C,SAAS,IAEnE,SAAS0gC,EAActK,GAErB,OADAA,GAAY,KACF,EAAU,EAAIA,EAAM,EACrBA,GAAO,IAAa,GAAW,EAANA,EAAU,GACrC,EAAIA,EAGb,IAAMre,EAAW,CAEf1O,SAAU,SAAC+uB,GAAD,OAAOA,EAAEjvB,SAAW,EAAIivB,EAAEx2B,IAAM,KAAOw2B,EAAE12B,IAEnD8H,UAAW,SAAC4uB,GAAD,OAAQA,EAAE9uB,SAAW8uB,EAAEoG,aAAe,EAAIpG,EAAEv2B,KAAO,KAAOu2B,EAAEz2B,KAEvEgI,UAAW,SAACyuB,GAAD,OAAOA,EAAE3uB,UAAY,EAAI2uB,EAAEt2B,KAAO,KAAOs2B,EAAE51B,KAGtDmyB,aAAc,SAACyD,GAAD,OAAOA,EAAE5uB,UAAY4uB,EAAErD,qBAAuBqD,EAAEnC,kBAAoBmC,EAAElC,qBACpFtB,kBAAmB,SAACwD,GAAD,OAAOA,EAAEzD,aAAeyD,EAAEvC,gBAC7ChB,iBAAkB,SAACuD,GAAD,OAAOA,EAAEzD,aAAeyD,EAAEtD,qBAC5CA,oBAAqB,SAACsD,GAAD,OAAQ,EAAKjW,YAAMiW,EAAEj2B,UAAYi2B,EAAE4G,mBAAoB,EAAG,KAAO,IAAO5G,EAAEh2B,SAAW,KAC1G2yB,qBAAsB,SAACqD,GAAD,OAAQ,GAAKA,EAAEr2B,cAAgBq2B,EAAE0G,mBAAqB1G,EAAEoH,KAAO,KAGrFxK,aAAc,SAACoD,GAAD,OAAOA,EAAE5uB,UAAY4uB,EAAEhD,qBAAuBgD,EAAEnC,kBAAoBmC,EAAElC,qBACpFjB,kBAAmB,SAACmD,GAAD,OAAOA,EAAEpD,aAAeoD,EAAEvC,gBAC7CX,iBAAkB,SAACkD,GAAD,OAAOA,EAAEpD,aAAeoD,EAAEjD,qBAC5CA,oBAAqB,SAACiD,GAAD,OAAQ,EAAKjW,YAAMiW,EAAEj2B,UAAYi2B,EAAE6G,mBAAoB,EAAG,KAAO,IAAO7G,EAAEh2B,SAAW,KAC1GgzB,qBAAsB,SAACgD,GAAD,OAAQ,GAAKA,EAAEr2B,cAAgBq2B,EAAE2G,mBAAqB3G,EAAEoH,KAAO,KAGrFnK,WAAY,SAAC+C,GAAD,OAAOA,EAAE3C,SACrBH,gBAAiB,SAAC8C,GAAD,OAAOA,EAAE1C,cAC1BH,eAAgB,SAAC6C,GAAD,OAAOA,EAAEzC,aACzBH,mBAAoB,SAAC4C,GAAD,OAAOA,EAAExC,iBAE7BH,QAAS,SAAC2C,GAAD,OAAOA,EAAE5uB,UAAY4uB,EAAExC,gBAAkBwC,EAAEnC,kBAAoBmC,EAAElC,qBAC1ER,aAAc,SAAC0C,GAAD,OAAOA,EAAE3C,QAAU2C,EAAEvC,gBACnCF,YAAa,SAACyC,GAAD,OAAOA,EAAE3C,QAAU2C,EAAEtC,YAClCF,gBAAiB,SAACwC,GAAD,OAAQ,GAAKA,EAAEr2B,cAAgBq2B,EAAEoH,KAAO,KAEzD3J,eAAgB,SAACuC,GAAD,OAAQ,EAAIA,EAAEh2B,SAAW,KACzC0zB,WAAY,SAACsC,GAAD,OAAQ,EAAKjW,YAAMiW,EAAEj2B,UAAW,EAAG,KAAO,KAAQi2B,EAAEh2B,SAAW,MAE3E2zB,iBAAkB,SAACqC,GAAD,OAAQ,EAAKjW,YAAMiW,EAAEj2B,UAAYi2B,EAAEgH,gBAAiB,EAAG,KAAO,IAAOhH,EAAEh2B,SAAW,KACpG4zB,iBAAkB,SAACoC,GAAD,OAAQ,EAAKjW,YAAMiW,EAAEj2B,UAAYi2B,EAAEiH,gBAAiB,EAAG,KAAO,IAAOjH,EAAEh2B,SAAW,KAEpG6zB,kBAAmB,SAACmC,GAAD,OAAQ,IAAMA,EAAEkI,aAAe,IAAMlI,EAAEmI,YAAc,IAAMnI,EAAEkI,aAChFpK,oBAAqB,SAACkC,GAAD,OAAOA,EAAEjC,mBAAqB,EAAIuK,EAActI,EAAE/B,iBAInEsK,EAAc,CAClBhM,aAAc,SAACyD,EAAGrZ,GAAJ,OAAYqZ,EAAE5uB,UAAY4uB,EAAE,GAAD,OAAIrZ,EAAJ,0BAAkCqZ,EAAEnC,kBAAoBmC,EAAE,GAAD,OAAIrZ,EAAJ,0BAClG6V,kBAAmB,SAACwD,EAAGrZ,GAAJ,OAAYqZ,EAAE,GAAD,OAAIrZ,EAAJ,kBAA0BqZ,EAAEvC,gBAC5DhB,iBAAkB,SAACuD,EAAGrZ,GAAJ,OAAYqZ,EAAE,GAAD,OAAIrZ,EAAJ,kBAA0BqZ,EAAEtD,qBAC3DC,qBAAsB,SAACqD,EAAGrZ,GAAJ,OAAa,GAAKqZ,EAAE,GAAD,OAAIrZ,EAAJ,mBAA2BqZ,EAAE0G,mBAAqB1G,EAAEoH,KAAO,KAEpGxK,aAAc,SAACoD,EAAGrZ,GAAJ,OAAYqZ,EAAE5uB,UAAY4uB,EAAE,GAAD,OAAIrZ,EAAJ,0BAAkCqZ,EAAEnC,kBAAoBmC,EAAE,GAAD,OAAIrZ,EAAJ,0BAClGkW,kBAAmB,SAACmD,EAAGrZ,GAAJ,OAAYqZ,EAAE,GAAD,OAAIrZ,EAAJ,kBAA0BqZ,EAAEvC,gBAC5DX,iBAAkB,SAACkD,EAAGrZ,GAAJ,OAAYqZ,EAAE,GAAD,OAAIrZ,EAAJ,kBAA0BqZ,EAAEjD,qBAC3DC,qBAAsB,SAACgD,EAAGrZ,GAAJ,OAAa,GAAKqZ,EAAE,GAAD,OAAIrZ,EAAJ,mBAA2BqZ,EAAE2G,mBAAqB3G,EAAEoH,KAAO,KAEpGnK,WAAY,SAAC+C,EAAGrZ,GAAJ,OAAYqZ,EAAE,GAAD,OAAIrZ,EAAJ,cACzBuW,gBAAiB,SAAC8C,EAAGrZ,GAAJ,OAAYqZ,EAAE,GAAD,OAAIrZ,EAAJ,mBAC9BwW,eAAgB,SAAC6C,EAAGrZ,GAAJ,OAAYqZ,EAAE,GAAD,OAAIrZ,EAAJ,kBAC7ByW,mBAAoB,SAAC4C,EAAGrZ,GAAJ,OAAYqZ,EAAE,GAAD,OAAIrZ,EAAJ,sBAEjCwX,QAAS,SAAC6B,EAAGrZ,GAAJ,OAAYqZ,EAAE5uB,UAAY4uB,EAAE,GAAD,OAAIrZ,EAAJ,qBAA6BqZ,EAAEnC,kBAAoBmC,EAAE,GAAD,OAAIrZ,EAAJ,0BACxFyX,aAAc,SAAC4B,EAAGrZ,GAAJ,OAAYqZ,EAAE,GAAD,OAAIrZ,EAAJ,aAAqBqZ,EAAEvC,gBAClDY,YAAa,SAAC2B,EAAGrZ,GAAJ,OAAYqZ,EAAE,GAAD,OAAIrZ,EAAJ,aAAqBqZ,EAAEtC,YACjDY,gBAAiB,SAAC0B,EAAGrZ,GAAJ,OAAa,GAAKqZ,EAAE,GAAD,OAAIrZ,EAAJ,mBAA2BqZ,EAAEoH,KAAO,KAExE7I,UAAW,SAACyB,EAAGrZ,GAAJ,OAAYqZ,EAAE5uB,UAAY4uB,EAAE,GAAD,OAAIrZ,EAAJ,uBAA+BqZ,EAAEnC,kBAAoBmC,EAAE,GAAD,OAAIrZ,EAAJ,0BAC5F6X,eAAgB,SAACwB,EAAGrZ,GAAJ,OAAYqZ,EAAE,GAAD,OAAIrZ,EAAJ,eAAuBqZ,EAAEvC,gBACtDgB,cAAe,SAACuB,EAAGrZ,GAAJ,OAAYqZ,EAAE,GAAD,OAAIrZ,EAAJ,eAAuBqZ,EAAErC,kBACrDe,kBAAmB,SAACsB,EAAGrZ,GAAJ,OAAa,GAAKqZ,EAAE,GAAD,OAAIrZ,EAAJ,mBAA2BqZ,EAAE8G,gBAAkB9G,EAAEoH,KAAO,KAE9FzI,UAAW,SAACqB,EAAGrZ,GAAJ,OAAYqZ,EAAE5uB,UAAY4uB,EAAE,GAAD,OAAIrZ,EAAJ,uBAA+BqZ,EAAEnC,kBAAoBmC,EAAE,GAAD,OAAIrZ,EAAJ,0BAC5FiY,eAAgB,SAACoB,EAAGrZ,GAAJ,OAAYqZ,EAAE,GAAD,OAAIrZ,EAAJ,eAAuBqZ,EAAEvC,gBACtDoB,cAAe,SAACmB,EAAGrZ,GAAJ,OAAYqZ,EAAE,GAAD,OAAIrZ,EAAJ,eAAuBqZ,EAAEpC,kBACrDkB,kBAAmB,SAACkB,EAAGrZ,GAAJ,OAAa,GAAKqZ,EAAE,GAAD,OAAIrZ,EAAJ,mBAA2BqZ,EAAE+G,gBAAkB/G,EAAEoH,KAAO,KAE9FrI,oBAAqB,SAACiB,EAAGrZ,GAAJ,OAAYqZ,EAAE,GAAD,OAAIrZ,EAAJ,wBAAgC,EAAI2hB,EAActI,EAAE,GAAD,OAAIrZ,EAAJ,sBAGvF,CACE,gBAAiB,UAAW,gBAAiB,qBAAsB,UAAW,eAAgB,cAAe,mBAD/G,mBAEKne,OAAO9C,KAAKoa,GAAU1Q,QAAO,SAAAzG,GAAG,MAAI,CAAC,WAAY,WAAY,UAAU65B,MAAK,SAAAgG,GAAG,OAAI7/B,EAAI6W,SAASgpB,WACnG9/B,SAAQ,SAAAC,GACRmX,EAASnX,GAAKqzB,KAAO,sBAAM12B,UAAU,4BAAhB,SAA6Cwa,EAASnX,GAAK4B,OAChFuV,EAASnX,GAAK6D,QAAU,cAG1B,CAAC,gBAAiB,UAAW,gBAAiB,sBAA9C,mBAAuEhE,OAAO9C,KAAK6iC,KAAc7/B,SAAQ,SAAAC,GACvG,IAAIiyB,EAAM9a,EAASnX,GACnBH,OAAO9C,KAAK+C,KAAeC,SAAQ,SAAA4d,GACjC,IAAImiB,EAAO,UAAMniB,EAAN,YAAgB3d,GAC3BmX,EAAS2oB,GAAW7U,YAAUgH,GAE5B9a,EAAS2oB,GAASl+B,KADR,kBAAR5B,EACF,gBAAkCF,IAAc6d,GAAQ/b,KAAxD,QACe,wBAAR5B,EACP,gBAAkCF,IAAc6d,GAAQ/b,KAAxD,mBACe,uBAAR5B,EACP,gBAAkCF,IAAc6d,GAAQ/b,KAAxD,aAEA,UAA4B9B,IAAc6d,GAAQ/b,KAAlD,YAA0DqwB,EAAIrwB,MAChEuV,EAAS2oB,GAASzM,KAAO,sBAAM12B,UAAS,eAAUghB,EAAV,gBAAf,SAAgDxG,EAAS2oB,GAASl+B,OAC3FuV,EAAS2oB,GAASj8B,QAAU8Z,QAMhC9d,OAAOsG,QAAQy5B,GAAa7/B,SAAQ,mCAAEC,EAAF,KAAOq2B,EAAP,YAClCx2B,OAAO9C,KAAK+C,KAAeC,SAAQ,SAAA4d,GAAM,OACvC9d,OAAO0X,eAAeP,EAAtB,UAAmC2G,EAAnC,YAA6C3d,GAAO,CAClDyX,cAAc,EACd6e,YAAY,EACZC,UAAU,EACVj5B,MAAO,SAAC20B,GAAD,OAAUoE,EAAMpE,EAAKtU,YAGlC,IAAMhH,EAAmB,CACvB6f,iBAAkB,CAChBx2B,IAAK,YACL6mB,QAAS,SAACE,GAAD,OAAa,SAACsQ,GAAD,OAAQA,EAAE9uB,SAAW8uB,EAAEoG,aAAe,EAAIpG,EAAEv2B,KAAO,KAAOu2B,EAAEz2B,IAAMy2B,EAAEzuB,WAAame,EAAQzpB,MAAQ,OACvHsZ,WAAY,CAAC,WAAY,aAAc,OAAQ,MAAO,YAAa,WAAY,OAAQ,SAK3F,SAASc,EAAmBua,GAAoB,IAAflL,EAAc,uDAAJ,GAAI,EACmCA,EAA1EhQ,mBADuC,MACzBlX,OAAO9C,KAAKia,GADa,IACmC+P,EAArClJ,gBADE,MACShe,OAAO9C,KAAKoa,GADrB,IAEb8a,EAA1B1b,wBAFuC,MAEpB,GAFoB,EAG7CA,EAAiBxW,SAAQ,SAAA2W,GAAoB,IAChCqpB,EAAgCrpB,EAArC1W,IAAyB+mB,EAAYrQ,EAAZqQ,QADW,EAEnBpQ,EAAiBopB,IAAuB,GAAzD//B,EAFoC,EAEpCA,IAAK6mB,EAF+B,EAE/BA,QACN9P,EAAYF,SAAS7W,KAC1B6mB,EAAUA,EAAQE,GAClBlnB,OAAO0X,eAAe0a,EAAKjyB,EAAK,CAC9BwX,IAAKuP,EAAQhQ,YAAc,kBAAM8P,EAAQoL,IAAO,WAC9C,IAAI3S,EAAMuH,EAAQoL,GAElB,OADApyB,OAAO0X,eAAexE,KAAM/S,EAAK,CAAE1C,MAAOgiB,IACnCA,GAET7H,cAAc,QAIlBV,EAAYhX,SAAQ,SAAAC,IACjBiyB,EAAIpB,eAAe7wB,IAAQH,OAAO0X,eAAe0a,EAAKjyB,EAAK,CAC1DwX,IAAKuP,EAAQhQ,YAAc,kBAAMC,EAAShX,GAAKiyB,IAAO,WACpD,IAAI3S,EAAMtI,EAAShX,GAAKiyB,GAExB,OADApyB,OAAO0X,eAAexE,KAAM/S,EAAK,CAAE1C,MAAOgiB,IACnCA,GAET7H,cAAc,OAIlBoG,EAAS9d,SAAQ,SAAAC,GAAG,OAAKiyB,EAAIpB,eAAe7wB,KAASiyB,EAAIjyB,GAAOmX,EAASnX,GAAKf,SAAW,Q,uGCjRtEmjB,EAEnB,aAAgB,GAAD,oBAAKrP,gBAAgBqP,EAAQ,MAAMxH,MAAM,2CAFrCwH,EAIZ2I,oBAAsB,kBAAMjsB,KAJhBsjB,EAKZ8B,aAAe,SAACpd,GAAD,IAAW6mB,EAAX,uDAAoB,GAApB,OAA4BxuB,IAAc2H,IAAa6mB,GAL1DvL,EAMZ4d,cAAgB,SAACl5B,GAAD,OAAc5H,IAAgBgd,QAAQpV,IAN1Csb,EAQZoB,cAAgB,SAACyc,GAAD,MAAYtS,EAAZ,uDAAqB,GAArB,OAA6B,UAAA9uB,IAAWohC,UAAX,eAAuBr+B,OAAQ+rB,GARhEvL,EASZiB,gBAAkB,SAAC4c,GAAD,MAAYtS,EAAZ,uDAAqB,EAArB,OAA4B,UAAA9uB,IAAWohC,UAAX,eAAuBlc,SAAU4J,GATnEvL,EAUZS,qBAAuB,SAACod,GAAD,MAAYtS,EAAZ,uDAAqB,GAArB,OAA6B,UAAA9uB,IAAWohC,UAAX,eAAuBC,cAAevS,GAV9EvL,EAWZgC,4BAA8B,SAAC6b,EAAWjd,EAAa4Y,EAAgB51B,GAAzC,QAAoD2nB,EAApD,uDAA6D,GAA7D,OAAqE,UAAA9uB,IAAWohC,UAAX,mBAAuBE,0BAAvB,sBAA4Cnd,EAAa4Y,EAAgB51B,KAAc2nB,GAX9KvL,EAYZiC,qBAAuB,SAAC4b,GAAD,MAAYtS,EAAZ,uDAAqB,GAArB,OAA6B,UAAA9uB,IAAWohC,UAAX,eAAuBG,cAAezS,GAZ9EvL,EAaZc,qBAAuB,SAAC+c,GAAD,MAAYtS,EAAZ,uDAAqB,KAArB,OAA+B,UAAA9uB,IAAWohC,UAAX,eAAuBh9B,cAAe0qB,GAbhFvL,EAgBZI,qBAAuB,SAACyd,EAAWn5B,GAAZ,UAAsB6mB,EAAtB,uDAA+B,EAA/B,OAAsC,UAAA9uB,IAAWohC,UAAX,mBAAuBI,iBAAvB,mBAAkChF,YAAlC,eAhBjDjZ,EAgB+F4d,cAAcl5B,MAAc6mB,GAhB3HvL,EAiBZO,oBAAsB,SAACsd,EAAWn5B,GAAZ,UAAsB6mB,EAAtB,uDAA+B,EAA/B,OAAsC,UAAA9uB,IAAWohC,UAAX,mBAAuBI,iBAAvB,mBAAkCC,WAAlC,eAjBhDle,EAiB6F4d,cAAcl5B,MAAc6mB,GAjBzHvL,EAkBZC,oBAAsB,SAAC4d,GAAD,QAAYtS,EAAZ,uDAAqB,GAArB,OAA6B,UAAA9uB,IAAWohC,UAAX,mBAAuBI,iBAAvB,eAAkCle,aAAcwL,GAlBvFvL,EAmBZW,mBAAqB,SAACkd,EAAWjd,GAAZ,yBAA4BnkB,IAAWohC,UAAvC,iBAA4B,EAAuBp+B,aAAnD,aAA4B,SAA+BmhB,IAnBpEZ,EAqBZ0B,iBAAmB,SAACyc,GAAD,OAAgB1gC,OAAOqG,YAAYrG,OAAOsG,QAAQtH,KAAY4H,QAAO,oDAAgC85B,aAAeA,OArB3Hne,EAsBZoe,kBAAoB,SAACD,GAAD,IAAa5S,EAAb,uDAAsB,GAAtB,OAA8BvuB,IAAemhC,IAAe5S,GAtBpEvL,EAwBZ0L,iCAAmC,SAAC9J,GAAD,IAAY2J,EAAZ,uDAAqB,EAArB,OAC/B,OAAT3J,QAAS,IAATA,OAAA,EAAAA,EAAWzB,kBAzBMH,EAyBkBI,qBAAL,OAA0BwB,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAWhkB,IAArC,OAA0CgkB,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAWld,SAAU6mB,IAzB5EvL,EA0BZ+O,gCAAkC,SAACnN,GAAD,IAAY2J,EAAZ,uDAAqB,EAArB,OAC9B,OAAT3J,QAAS,IAATA,OAAA,EAAAA,EAAWtB,iBA3BMN,EA2BiBO,oBAAL,OAAyBqB,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAWhkB,IAApC,OAAyCgkB,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAWld,SAAU6mB,IA3B1EvL,EA6BZa,yBAA2B,SAACgd,EAAWjd,EAAa9f,GAAmC,IAAnByqB,EAAkB,uDAAT,KAC9E1qB,EA9Bamf,EA8BMc,qBAAqB+c,GAC5C,IAAKh9B,IAAgBC,EAAgB,OAAOyqB,EAF+C,MAGrEzO,IAAiBoQ,mBAAmBrsB,EAAa,QAASC,GAHW,mBAGtFrB,EAHsF,KAG/E0tB,EAH+E,KAI3F,OAAKA,EACE1vB,OAAOqG,YAAYrG,OAAOsG,QAAQtE,EAAMmhB,IAAchmB,KAAI,yCAAgB,CAAhB,UAA4BuyB,OADzE5B","file":"static/js/8.45420692.chunk.js","sourcesContent":["import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = (props) => <span className={props.colored ? \"text-5star\" : \"\"}>\r\n  {props.stars ? [...Array(props.stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst FloatFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseFloat(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\n\r\nconst IntFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseInt(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\nexport {\r\n  FloatFormControl,\r\n  IntFormControl\r\n}","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport Character from \"./Character/Character\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //remove the old error/prone id lists, if it still exists\r\n  localStorage.removeItem(\"artifact_id_list\")\r\n  localStorage.removeItem(\"character_id_list\")\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  if (CharacterDatabase.populateDatebaseFromLocalStorage() |\r\n    ArtifactDatabase.populateDatebaseFromLocalStorage()) {\r\n    //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n    let arts = ArtifactDatabase.getArtifactDatabase();\r\n    Object.values(arts).forEach(art => {\r\n      let valid = true\r\n      if (art.location && !CharacterDatabase.getCharacter(art.location)) {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n      if (!valid)\r\n        ArtifactDatabase.updateArtifact(art)\r\n    })\r\n\r\n    let chars = CharacterDatabase.getCharacterDatabase();\r\n    Object.values(chars).forEach(character => {\r\n      let valid = true;\r\n      //verify character database equipment validity\r\n      let equippedArtifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([slotKey, artid]) => {\r\n        if (!ArtifactDatabase.getArtifact(artid)) {\r\n          valid = false\r\n          return [slotKey, undefined]\r\n        }\r\n        return [slotKey, artid]\r\n      }))\r\n      if (!valid)\r\n        character.equippedArtifacts = equippedArtifacts\r\n\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      if (character.artifactConditionals) character.artifactConditionals = character.artifactConditionals.filter(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for invalid conditionals from previous iterations where srcKey2 was not used.\r\n      let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n      let ascension = Character.getAscension(levelKey)\r\n      character.talentConditionals = talentConditionals.filter(cond => {\r\n        let { srcKey: talentKey, srcKey2: conditionalKey } = cond\r\n        let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n        let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n        if (!conditional) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n      if (!valid) {\r\n        CharacterDatabase.updateCharacter(character)\r\n      }\r\n    })\r\n  }\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import DullBlade from './Weapon_Dull_Blade.png'\r\nimport SilverSword from './Weapon_Silver_Sword.png'\r\nimport CoolSteel from './Weapon_Cool_Steel.png'\r\nimport DarkIronSword from './Weapon_Dark_Iron_Sword.png'\r\nimport FilletBlade from './Weapon_Fillet_Blade.png'\r\nimport HarbingerOfDawn from './Weapon_Harbinger_of_Dawn.png'\r\nimport SkyriderSword from './Weapon_Skyrider_Sword.png'\r\nimport TravelersHandySword from './Weapon_Traveler\\'s_Handy_Sword.png'\r\nimport BlackcliffLongsword from './Weapon_Blackcliff_Longsword.png'\r\nimport FavoniusSword from './Weapon_Favonius_Sword.png'\r\nimport IronSting from './Weapon_Iron_Sting.png'\r\nimport LionsRoar from './Weapon_Lion\\'s_Roar.png'\r\nimport PrototypeRancour from './Weapon_Prototype_Rancour.png'\r\nimport RoyalLongsword from './Weapon_Royal_Longsword.png'\r\nimport SacrificialSword from './Weapon_Sacrificial_Sword.png'\r\nimport TheAlleyFlash from './Weapon_The_Alley_Flash.png'\r\nimport TheBlackSword from './Weapon_The_Black_Sword.png'\r\nimport TheFlute from './Weapon_The_Flute.png'\r\nimport SwordOfDescension from './Weapon_Sword_of_Descension.png'\r\nimport FesteringDesire from './festering_fang.png'\r\nimport AquilaFavonia from './Weapon_Aquila_Favonia.png'\r\nimport SkywardBlade from './Weapon_Skyward_Blade.png'\r\nimport SummitShaper from './summit_shaper.png'\r\nconst sword = {\r\n  DullBlade,\r\n  SilverSword,\r\n  CoolSteel,\r\n  DarkIronSword,\r\n  FilletBlade,\r\n  HarbingerOfDawn,\r\n  SkyriderSword,\r\n  TravelersHandySword,\r\n  BlackcliffLongsword,\r\n  FavoniusSword,\r\n  IronSting,\r\n  LionsRoar,\r\n  PrototypeRancour,\r\n  RoyalLongsword,\r\n  SacrificialSword,\r\n  TheAlleyFlash,\r\n  TheBlackSword,\r\n  TheFlute,\r\n  SwordOfDescension,\r\n  FesteringDesire,\r\n  AquilaFavonia,\r\n  SkywardBlade,\r\n  SummitShaper,\r\n}\r\nexport default sword","export default __webpack_public_path__ + \"static/media/Weapon_Dull_Blade.f5de06e8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Silver_Sword.e2462179.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Cool_Steel.0c6a9897.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dark_Iron_Sword.8dce5b63.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Fillet_Blade.c8e8ab5f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Harbinger_of_Dawn.26da0d78.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Sword.80e60c22.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Traveler's_Handy_Sword.168a7842.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Longsword.522f4d19.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Sword.cb5df26b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Sting.9f4b4b01.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lion's_Roar.b0e78fa9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Rancour.64965f56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Longsword.5a57f015.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Sword.048703ab.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Alley_Flash.7528f5ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Black_Sword.3987a991.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Flute.82af0cbf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sword_of_Descension.eb67a1df.png\";","export default __webpack_public_path__ + \"static/media/festering_fang.38aa5200.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Aquila_Favonia.7c014114.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Blade.af22a740.png\";","export default __webpack_public_path__ + \"static/media/summit_shaper.5245335d.png\";","import WasterGreatsword from './Weapon_Waster_Greatsword.png'\r\nimport OldMercsPal from './Weapon_Old_Merc\\'s_Pal.png'\r\nimport BloodtaintedGreatsword from './Weapon_Bloodtainted_Greatsword.png'\r\nimport DebateClub from './Weapon_Debate_Club.png'\r\nimport FerrousShadow from './Weapon_Ferrous_Shadow.png'\r\nimport Quartz from './Weapon_Quartz.png'\r\nimport SkyriderGreatsword from './Weapon_Skyrider_Greatsword.png'\r\nimport WhiteIronGreatsword from './Weapon_White_Iron_Greatsword.png'\r\nimport BlackcliffSlasher from './Weapon_Blackcliff_Slasher.png'\r\nimport FavoniusGreatsword from './Weapon_Favonius_Greatsword.png'\r\nimport LithicBlade from './Weapon_Lithic_Blade.png'\r\nimport PrototypeAminus from './Weapon_Prototype_Aminus.png'\r\nimport Rainslasher from './Weapon_Rainslasher.png'\r\nimport RoyalGreatsword from './Weapon_Royal_Greatsword.png'\r\nimport SerpentSpine from './Weapon_Serpent_Spine.png'\r\nimport TheBell from './Weapon_The_Bell.png'\r\nimport Whiteblind from './Weapon_Whiteblind.png'\r\nimport SacrificialGreatsword from './Weapon_Sacrificial_Greatsword.png'\r\nimport SnowTombedStarsilver from './snow_tombed_starsilver.png'\r\nimport SkywardPride from './Weapon_Skyward_Pride.png'\r\nimport WolfsGravestone from './Weapon_Wolf\\'s_Gravestone.png'\r\nimport TheUnforged from './Weapon_The_Unforged.png'\r\nconst claymore = {\r\n  WasterGreatsword,\r\n  OldMercsPal,\r\n  BloodtaintedGreatsword,\r\n  DebateClub,\r\n  FerrousShadow,\r\n  Quartz,\r\n  SkyriderGreatsword,\r\n  WhiteIronGreatsword,\r\n  BlackcliffSlasher,\r\n  FavoniusGreatsword,\r\n  LithicBlade,\r\n  PrototypeAminus,\r\n  Rainslasher,\r\n  RoyalGreatsword,\r\n  SerpentSpine,\r\n  TheBell,\r\n  Whiteblind,\r\n  SacrificialGreatsword,\r\n  SnowTombedStarsilver,\r\n  SkywardPride,\r\n  WolfsGravestone,\r\n  TheUnforged,\r\n}\r\nexport default claymore","export default __webpack_public_path__ + \"static/media/Weapon_Waster_Greatsword.a411f34b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Old_Merc's_Pal.67aa1930.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Bloodtainted_Greatsword.eb68a62c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Debate_Club.be908652.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ferrous_Shadow.ef586057.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Quartz.d41c58b9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Greatsword.46e935cb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Iron_Greatsword.eda6295d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Slasher.4693af54.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Greatsword.bfd288be.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Blade.ab4d4f4f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Aminus.d2bf526a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rainslasher.664c61ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Greatsword.fbc5184a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Serpent_Spine.bb2831b5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Bell.3670f330.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Whiteblind.9c37b7dd.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Greatsword.1b0f0225.png\";","export default __webpack_public_path__ + \"static/media/snow_tombed_starsilver.23f56359.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Pride.66a1b3f7.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wolf's_Gravestone.032b607c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Unforged.f7762a2f.png\";","import BeginnersProtector from './Weapon_Beginner\\'s_Protector.png'\r\nimport IronPoint from './Weapon_Iron_Point.png'\r\nimport BlackTassel from './Weapon_Black_Tassel.png'\r\nimport Halberd from './Weapon_Halberd.png'\r\nimport WhiteTassel from './Weapon_White_Tassel.png'\r\nimport BlackcliffPole from './Weapon_Blackcliff_Pole.png'\r\nimport CrescentPike from './Weapon_Crescent_Pike.png'\r\nimport Deathmatch from './Weapon_Deathmatch.png'\r\nimport DragonsBane from './Weapon_Dragon\\'s_Bane.png'\r\nimport LithicSpear from './Weapon_Lithic_Spear.png'\r\nimport PrototypeGrudge from './Weapon_Prototype_Grudge.png'\r\nimport FavoniusLance from './Weapon_Favonius_Lance.png'\r\nimport RoyalSpear from './Weapon_Royal_Spear.png'\r\nimport DragonspineSpear from './dragonspine_spear.png'\r\nimport VortexVanquisher from './Weapon_Vortex_Vanquisher.png'\r\nimport PrimordialJadeWingedSpear from './Weapon_Primordial_Jade_Winged-Spear.png'\r\nimport SkywardSpine from './Weapon_Skyward_Spine.png'\r\nconst polearms = {\r\n  BeginnersProtector,\r\n  IronPoint,\r\n  BlackTassel,\r\n  Halberd,\r\n  WhiteTassel,\r\n  BlackcliffPole,\r\n  CrescentPike,\r\n  Deathmatch,\r\n  DragonsBane,\r\n  LithicSpear,\r\n  PrototypeGrudge,\r\n  FavoniusLance,\r\n  RoyalSpear,\r\n  DragonspineSpear,\r\n  VortexVanquisher,\r\n  PrimordialJadeWingedSpear,\r\n  SkywardSpine,\r\n}\r\nexport default polearms","export default __webpack_public_path__ + \"static/media/Weapon_Beginner's_Protector.19165915.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Point.8263916c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Black_Tassel.c3103e46.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Halberd.0044e214.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Tassel.a3cc9099.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Pole.1e15a879.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Crescent_Pike.9e473ddb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Deathmatch.9b0e6d8e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dragon's_Bane.7437cf28.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Spear.cfb11b6c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Grudge.64b3a263.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Lance.693335d4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Spear.99058465.png\";","export default __webpack_public_path__ + \"static/media/dragonspine_spear.bb785669.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Vortex_Vanquisher.efad8956.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Primordial_Jade_Winged-Spear.ea10bc42.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Spine.e81931a5.png\";","import HuntersBow from './Weapon_Hunter\\'s_Bow.png'\r\nimport SeasonedHuntersBow from './Weapon_Seasoned_Hunter\\'s_Bow.png'\r\nimport EbonyBow from './Weapon_Ebony_Bow.png'\r\nimport Messenger from './Weapon_Messenger.png'\r\nimport RavenBow from './Weapon_Raven_Bow.png'\r\nimport RecurveBow from './Weapon_Recurve_Bow.png'\r\nimport SharpshootersOath from './Weapon_Sharpshooter\\'s_Oath.png'\r\nimport Slingshot from './Weapon_Slingshot.png'\r\nimport TheStringless from './Weapon_The_Stringless.png'\r\nimport AlleyHunter from './Weapon_Alley_Hunter.png'\r\nimport BlackcliffWarbow from './Weapon_Blackcliff_Warbow.png'\r\nimport CompoundBow from './Weapon_Compound_Bow.png'\r\nimport FavoniusWarbow from './Weapon_Favonius_Warbow.png'\r\nimport PrototypeCrescent from './Weapon_Prototype_Crescent.png'\r\nimport RoyalBow from './Weapon_Royal_Bow.png'\r\nimport Rust from './Weapon_Rust.png'\r\nimport SacrificialBow from './Weapon_Sacrificial_Bow.png'\r\nimport TheViridescentHunt from './Weapon_The_Viridescent_Hunt.png'\r\nimport SkywardHarp from './Weapon_Skyward_Harp.png'\r\nimport AmosBow from './Weapon_Amos\\'_Bow.png'\r\nimport DreamsOfDragonfell from './dreams_of_dragonfell.png'\r\nconst bows = {\r\n  HuntersBow,\r\n  SeasonedHuntersBow,\r\n  EbonyBow,\r\n  Messenger,\r\n  RavenBow,\r\n  RecurveBow,\r\n  SharpshootersOath,\r\n  Slingshot,\r\n  TheStringless,\r\n  AlleyHunter,\r\n  BlackcliffWarbow,\r\n  CompoundBow,\r\n  FavoniusWarbow,\r\n  PrototypeCrescent,\r\n  RoyalBow,\r\n  Rust,\r\n  SacrificialBow,\r\n  TheViridescentHunt,\r\n  SkywardHarp,\r\n  AmosBow,\r\n  DreamsOfDragonfell,\r\n}\r\nexport default bows","export default __webpack_public_path__ + \"static/media/Weapon_Hunter's_Bow.2e941c96.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Seasoned_Hunter's_Bow.bc6a42aa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ebony_Bow.f89cc3cc.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Messenger.939170eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Raven_Bow.b88fe5c0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Recurve_Bow.bafcde86.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sharpshooter's_Oath.1d149cf5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Slingshot.d2eeb3eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Stringless.b718aa93.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Alley_Hunter.8cc323c2.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Warbow.098f24da.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Compound_Bow.a8457f4e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Warbow.19e98358.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Crescent.50a174b0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Bow.06fbac8b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rust.65b7af56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Bow.804b7a38.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Viridescent_Hunt.904062bf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Harp.6961093e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amos'_Bow.e97cd305.png\";","export default __webpack_public_path__ + \"static/media/dreams_of_dragonfell.8aaebb39.png\";","import ApprenticesNotes from './Weapon_Apprentice\\'s_Notes.png'\r\nimport PocketGrimoire from './Weapon_Pocket_Grimoire.png'\r\nimport AmberCatalyst from './Weapon_Amber_Catalyst.png'\r\nimport EmeraldOrb from './Weapon_Emerald_Orb.png'\r\nimport MagicGuide from './Weapon_Magic_Guide.png'\r\nimport OtherworldlyStory from './Weapon_Otherworldly_Story.png'\r\nimport ThrillingTalesOfDragonSlayers from './Weapon_Thrilling_Tales_of_Dragon_Slayers.png'\r\nimport TwinNephrite from './Weapon_Twin_Nephrite.png'\r\nimport BlackcliffAgate from './Weapon_Blackcliff_Amulet.png'\r\nimport FavoniusCodex from './Weapon_Favonius_Codex.png'\r\nimport MappaMare from './Weapon_Mappa_Mare.png'\r\nimport PrototypeMalice from './Weapon_Prototype_Malice.png'\r\nimport RoyalGrimoire from './Weapon_Royal_Grimoire.png'\r\nimport SacrificialFragments from './Weapon_Sacrificial_Fragments.png'\r\nimport SolarPearl from './Weapon_Solar_Pearl.png'\r\nimport TheWidsith from './Weapon_The_Widsith.png'\r\nimport WineAndSong from './Weapon_Wine_and_Song.png'\r\nimport EyeOfPerception from './Weapon_Eye_of_Perception.png'\r\nimport Frostbearer from './Weapon_Frostbearer.png'\r\nimport LostPrayerToTheSacredWinds from './Weapon_Lost_Prayer_to_the_Sacred_Winds.png'\r\nimport SkywardAtlas from './Weapon_Skyward_Atlas.png'\r\nimport MemoryOfDust from './Weapon_Memory_of_Dust.png'\r\nconst catalysts = {\r\n  ApprenticesNotes,\r\n  PocketGrimoire,\r\n  AmberCatalyst,\r\n  EmeraldOrb,\r\n  MagicGuide,\r\n  OtherworldlyStory,\r\n  ThrillingTalesOfDragonSlayers,\r\n  TwinNephrite,\r\n  BlackcliffAgate,\r\n  FavoniusCodex,\r\n  MappaMare,\r\n  PrototypeMalice,\r\n  RoyalGrimoire,\r\n  SacrificialFragments,\r\n  SolarPearl,\r\n  TheWidsith,\r\n  WineAndSong,\r\n  EyeOfPerception,\r\n  Frostbearer,\r\n  LostPrayerToTheSacredWinds,\r\n  SkywardAtlas,\r\n  MemoryOfDust\r\n}\r\nexport default catalysts","export default __webpack_public_path__ + \"static/media/Weapon_Apprentice's_Notes.0b7fb81e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Pocket_Grimoire.536179c5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amber_Catalyst.01ede681.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Emerald_Orb.4008f986.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Magic_Guide.64c777ec.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Otherworldly_Story.48b54293.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Thrilling_Tales_of_Dragon_Slayers.692d45b8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Twin_Nephrite.b0c2488b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Amulet.b97d01eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Codex.6e201cfa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Mappa_Mare.bc35dc35.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Malice.4ab08cb6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Grimoire.2f67eac4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Fragments.4dd54e2d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Solar_Pearl.d629ae58.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Widsith.a6fe1227.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wine_and_Song.0aa416e6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Eye_of_Perception.907a0288.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Frostbearer.bde00061.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lost_Prayer_to_the_Sacred_Winds.45f8ca2a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Atlas.8b4f86fa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Memory_of_Dust.4e45ccbb.png\";","import weapons from './Weapons/Weapons'\r\n\r\nimport anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  weapons,\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","import swords from './Swords/Swords'\r\nimport claymores from './Claymores/Claymores'\r\nimport polearms from './Polearms//Polearms'\r\nimport bows from './Bows/Bows'\r\nimport catalysts from './Catalysts/Catalysts'\r\nconst weapons = {\r\n  ...swords,\r\n  ...claymores,\r\n  ...polearms,\r\n  ...bows,\r\n  ...catalysts,\r\n}\r\nexport default weapons","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, Image, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default class ArtifactCard extends React.Component {\r\n  //the props is to update the artifacts in the list in the parent, which will update here.\r\n  equipOnChar(charId) {\r\n    Artifact.equipArtifactOnChar(this.props.artifactId, charId)\r\n    this.props?.forceUpdate()\r\n  }\r\n  render() {\r\n    if (!this.props.artifactId) return null;\r\n    let art = ArtifactDatabase.getArtifact(this.props.artifactId);\r\n    let artifactValidation = Artifact.artifactValidation(art)\r\n    let locationChar = CharacterDatabase.getCharacter(art.location)\r\n    let location = locationChar ? locationChar.name : \"Inventory\"\r\n    return (<Card className=\"h-100\" border={`${art.numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n      <Card.Header className=\"p-0\">\r\n        <Row>\r\n          <Col xs={2} md={3}>\r\n            <Image src={Artifact.getArtifactPieceIcon(art.setKey, art.slotKey)} className={`w-100 h-auto grad-${art.numStars}star m-1`} thumbnail />\r\n          </Col>\r\n          <Col className=\"pt-3\">\r\n            <h6><b>{`${Artifact.getArtifactPieceName(art.setKey, art.slotKey, \"Unknown Piece Name\")}`}</b></h6>\r\n            <div>{Artifact.getArtifactSlotNameWithIcon(art.slotKey)}{` +${art.level}`}</div>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body className=\"d-flex flex-column py-2\">\r\n        <Card.Title>\r\n          <div>{Artifact.getArtifactSetName(art.setKey, \"Artifact Set\")}</div>\r\n          <small className=\"text-halfsize\"><Stars stars={art.numStars} /></small>\r\n        </Card.Title>\r\n        <h5 className=\"mb-1\">\r\n          <b>{Stat.getStatName(art.mainStatKey)} {Artifact.getMainStatValue(art.mainStatKey, art.numStars, art.level, \"\")}{Stat.getStatUnit(art.mainStatKey)}</b>\r\n        </h5>\r\n        <Row className=\"mb-0\">\r\n          {art.substats ? art.substats.map((stat, i) => {\r\n            if (!stat || !stat.value) return null\r\n            let subStatValidation = artifactValidation.subStatValidations[i]\r\n            let numRolls = subStatValidation?.rolls?.length || 0\r\n            let efficiency = subStatValidation?.efficiency || 0\r\n            let effOpacity = 0.3 + efficiency * 0.7\r\n            let statName = Stat.getStatName(stat.key)\r\n            return (<Col key={i} xs={12}>\r\n              <Badge variant={artifactValidation.valid ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{artifactValidation.valid ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n              <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n              <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n            </Col>)\r\n          }\r\n          ) : null}\r\n        </Row>\r\n        <div className=\"mt-auto\">\r\n          <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n          <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.currentEfficiency}>\r\n            {(artifactValidation.currentEfficiency ? artifactValidation.currentEfficiency : 0).toFixed(2) + \"%\"}\r\n          </PercentBadge>\r\n          <b>{\" < \"}</b>\r\n          <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.maximumEfficiency}>\r\n            {(artifactValidation.maximumEfficiency ? artifactValidation.maximumEfficiency : 0).toFixed(2) + \"%\"}\r\n          </PercentBadge>\r\n        </div>\r\n      </Card.Body>\r\n\r\n      <Card.Footer className=\"pr-3\">\r\n        <Row className=\"d-flex justify-content-between no-gutters\">\r\n          {this.props.forceUpdate ? <Col xs=\"auto\">\r\n            <Dropdown>\r\n              <Dropdown.Toggle size=\"sm\">{location}</Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item onClick={() => this.equipOnChar()}>Inventory</Dropdown.Item>\r\n                {Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n                  <Dropdown.Item key={id} onClick={() => this.equipOnChar(id)}>\r\n                    {char.name}\r\n                  </Dropdown.Item>)}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Col> : <Col xs=\"auto\"><span>Location: {location}</span></Col>}\r\n          <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              {this.props.forceUpdate ? <OverlayTrigger placement=\"top\"\r\n                overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n                <span className=\"d-inline-block\">\r\n                  <Button size=\"sm\"\r\n                    disabled={art.location}\r\n                    style={art.location ? { pointerEvents: 'none' } : {}}\r\n                    onClick={() => {\r\n                      art.lock = !art.lock\r\n                      ArtifactDatabase.updateArtifact(art);\r\n                      this.forceUpdate();\r\n                    }}>\r\n                    <FontAwesomeIcon icon={(art.lock || art.location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                  </Button>\r\n                </span>\r\n              </OverlayTrigger> : null}\r\n              {this.props.onEdit && <Button variant=\"info\" size=\"sm\"\r\n                onClick={() => this.props.onEdit()}>\r\n                <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n              </Button>}\r\n              {this.props.onDelete && <Button variant=\"danger\" size=\"sm\"\r\n                onClick={() => this.props.onDelete()}>\r\n                <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n              </Button>}\r\n            </ButtonGroup>\r\n          </Col>\r\n        </Row>\r\n      </Card.Footer>\r\n    </Card>)\r\n  }\r\n}","import { AttachLazyFormulas, Formulas, OverrideFormulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nconst formulaKeyDependency = {}\r\nconst getDependency = (key) => {\r\n  let testObj = {}\r\n  let dependency = []\r\n  Object.keys(StatData).filter(k => k !== key).forEach(k => {\r\n    Object.defineProperty(testObj, k, {\r\n      get: () => {\r\n        dependency.push(k)\r\n        Object.defineProperty(testObj, k, { get: () => 0 })\r\n        return 0\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  AttachLazyFormulas(testObj)\r\n  //use the getter to generate the dependency\r\n  if (typeof testObj[key] === \"number\")\r\n    formulaKeyDependency[key] = dependency\r\n}\r\nObject.keys(Formulas).forEach(key => getDependency(key))\r\n\r\nfunction DependencyStatKeys(key, formulaOverrides = []) {\r\n  let dependencies = GetDependencyStats(key, formulaOverrides) || []\r\n  //add any formula override dependencies\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key, dependency = [] } = OverrideFormulas[formulaOverride.key] || {}\r\n    if (!dependencies.includes(key)) return\r\n    dependencies.push(...dependency)\r\n  })\r\n  dependencies = [...new Set(dependencies)]\r\n  let formulaKeys = Object.keys(Formulas).filter(k => k === key || dependencies.includes(k))\r\n  let statkeys = Object.keys(StatData).filter(k => k === key || dependencies.includes(k))\r\n  return { formulaKeys, statkeys }\r\n}\r\nfunction GetDependencyStats(key, formulaOverrides = []) {\r\n  let dependencies = [key]\r\n  let keyDependencies = null\r\n  for (const formulaOverride of formulaOverrides)\r\n    if (OverrideFormulas[formulaOverride?.key]?.key === key)\r\n      keyDependencies = OverrideFormulas[formulaOverride?.key]?.dependency\r\n  keyDependencies = keyDependencies || formulaKeyDependency[key]\r\n  keyDependencies?.forEach(k => {\r\n    let subdependencies = GetDependencyStats(k, formulaOverrides)\r\n    dependencies.push(...subdependencies)\r\n  })\r\n  return dependencies\r\n}\r\nexport {\r\n  DependencyStatKeys,\r\n  GetDependencyStats,\r\n}\r\n","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Col } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nconst DisplayStats = ({ statKey, character, build, editable, ...otherProps }) => {\r\n  let statVal = Character.getStatValueWithOverride(character, statKey)\r\n  if (statKey === \"hp_final\")\r\n    statVal = Character.getStatValueWithOverride(character, \"hp_base\")\r\n  else if (statKey === \"def_final\")\r\n    statVal = Character.getStatValueWithOverride(character, \"def_base\")\r\n  else if (statKey === \"atk_final\")\r\n    statVal = Character.getStatValueWithOverride(character, \"atk_base\") + Character.getStatValueWithOverride(character, \"atk_weapon\")\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (build?.finalStats?.[statKey] || 0) - statVal\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right text-right ${(editable && Character.hasOverride(character, statKey)) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> {buildDiff > 0 && \"+\"}{buildDiff?.toFixed(Stat.fixedUnit(statKey)) + unit}</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nconst DisplayNewBuildDiff = ({ statKey, character, equippedBuild, newBuild, editable, ...otherProps }) => {\r\n  let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right ${(editable && Character.hasOverride(character, statKey)) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nexport {\r\n  DisplayStats,\r\n  DisplayNewBuildDiff,\r\n}","import React, { useState } from 'react';\r\nimport { Accordion, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { DisplayNewBuildDiff, DisplayStats } from '../../Components/StatDisplay';\r\nimport Stat from \"../../Stat\";\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane(props) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  let { character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState } = props\r\n  let { character } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  let eleKey = Character.getElementalKey(characterKey)\r\n  //TODO pick stats dynamically like in Build Display\r\n  const statKeys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\", \"phy_dmg_bonus\"]\r\n  statKeys.push(`${eleKey}_ele_dmg_bonus`)\r\n\r\n  let otherStatKeys = [\"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\", \"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\"]\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  otherStatKeys = otherStatKeys.filter(key => !statKeys.includes(key))\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Other Stats`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ?\r\n                  statKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                  statKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {(newBuild && compareAgainstEquipped) ?\r\n                    otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                    otherStatKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button size=\"sm\" onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getArtifactSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getArtifactSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getArtifactSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            let conditionalStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n                            if (conditionalStats) {\r\n                              if (!setStats) setStats = {}\r\n                              Object.entries(conditionalStats).forEach(([statKey, val]) =>\r\n                                setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                            }\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getArtifactSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Object.values(build.artifactIds).map(artid =>\r\n            artid ? <Col sm={6} lg={4} key={artid} className=\"mb-2\">\r\n              <ArtifactCard artifactId={artid} forceUpdate={forceUpdate} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport { DisplayNewBuildDiff, DisplayStats } from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"char_level\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={(val) => setOverride(\"char_level\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"char_level\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Assets.weapons[weapon.key]} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats, character)}</p>\r\n            <Row>\r\n              <Col xs={12} md={6}>\r\n                <h5>ATK: {weaponDisplayMainVal}</h5>\r\n              </Col>\r\n              {subStatKey && <Col xs={12} md={6}>\r\n                <h5>{Stat.getStatName(subStatKey)}: {weaponDisplaySubVal}{Stat.getStatUnit(subStatKey)}</h5>\r\n              </Col>}\r\n            </Row>\r\n            {<Row>\r\n              {(conditionalStats || weaponBonusStats) && <Col xs={12}><h6 className=\"mb-0\">Bonus Stats:</h6></Col>}\r\n              {weaponBonusStats && Object.entries(weaponBonusStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"bonu\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n              {conditionalStats && Object.entries(conditionalStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"cond\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n            </Row>}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  let { editable, character, character: { compareAgainstEquipped }, setOverride, equippedBuild, newBuild } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  let additionalKeys = [\"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const displayStatKeys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp_base\", \"hp\", \"hp_\", \"atk_base\", \"atk\", \"atk_\", \"def_base\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\", \"skill_crit_rate\", \"burst_crit_rate\", \"dmg\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              displayStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              displayStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              otherStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ?\r\n            miscStatkeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n            miscStatkeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n","import { faCheckSquare, faQuestionCircle, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, ToggleButton, ToggleButtonGroup, Tooltip } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat, { FormulaText } from \"../../Stat\";\r\nimport { OverrideFormulas } from \"../../StatData\";\r\nimport { GetDependencyStats } from \"../../StatDependency\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation, dmgMode }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  //choose which one to display stats for\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button\r\n        // style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"norm_atk\", \"char_atk\", \"plunge\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(Character.getTalentStatKey(\"char_atk\", character, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    //search for dependency, and flatten, isolate unique keys\r\n    keys = [...new Set(keys.map(key => GetDependencyStats(key, build.finalStats?.formulaOverrides)).flat())]\r\n    //return keys that are part of the formula text, in the order in which they appear.\r\n    return Object.keys(FormulaText).filter(key => keys.includes(key))\r\n  }\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <Accordion>\r\n        <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Options</span>\r\n                <small>Expand below to edit enemy details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ToggleButtonGroup type=\"radio\" value={dmgMode} name=\"dmgOptions\" onChange={(dmgMode) => setState({ dmgMode })}>\r\n                  <ToggleButton value=\"avg_dmg\">Avg. DMG</ToggleButton>\r\n                  <ToggleButton value=\"dmg\">Normal Hit, No Crit</ToggleButton>\r\n                  <ToggleButton value=\"crit_dmg\">Crit Hit DMG</ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Row className=\"mb-2\"><Col>\r\n                <Button variant=\"warning\" >\r\n                  <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                    To get the specific resistance values of enemies, please visit the wiki.\r\n                  </a>\r\n                </Button >\r\n              </Col></Row>\r\n              <Row>\r\n                <Col xs={12} xl={6} className=\"mb-2\">\r\n                  <StatInput\r\n                    name={<b>Enemy Level</b>}\r\n                    value={Character.getStatValueWithOverride(character, \"enemy_level\")}\r\n                    placeholder={Stat.getStatNameRaw(\"enemy_level\")}\r\n                    defaultValue={Character.getBaseStatValue(character, \"enemy_level\")}\r\n                    onValueChange={(val) => setOverride(\"enemy_level\", val)}\r\n                  />\r\n                </Col>\r\n                {[\"physical\", ...Character.getElementalKeys()].map(eleKey => {\r\n                  let statKey = eleKey === \"physical\" ? \"enemy_phy_res\" : `${eleKey}_enemy_ele_res`\r\n                  let immunityStatKey = eleKey === \"physical\" ? \"enemy_phy_immunity\" : `${eleKey}_enemy_ele_immunity`\r\n                  let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                  return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                        <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                      name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                      value={Character.getStatValueWithOverride(character, statKey)}\r\n                      placeholder={Stat.getStatNameRaw(statKey)}\r\n                      defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                      onValueChange={(val) => setOverride(statKey, val)}\r\n                      disabled={elementImmunity}\r\n                    />\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Formulas</span>\r\n                <small>Expand below to see calculation details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n              <Row>\r\n                {statsDisplayKeys().map(key => {\r\n                  let formulaOverrides = (build.finalStats.formulaOverrides || [])\r\n                  let formula = null\r\n                  for (const formulaOverride of formulaOverrides)\r\n                    if (OverrideFormulas[formulaOverride?.key]?.key === key) {\r\n                      formula = Stat.printOverrideFormula(build.finalStats, formulaOverride.key, formulaOverride.options, false)\r\n                      break;\r\n                    }\r\n                  formula = formula || Stat.printFormula(key, build.finalStats, false)\r\n                  return <Col key={key} xs={12} className=\"mb-2\">\r\n                    <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                      <Card.Header className=\"p-2\">\r\n                        {Stat.printStat(key, build.finalStats)}\r\n                      </Card.Header>\r\n                      <Card.Body className=\"p-2\">\r\n                        <small>{formula}</small>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let { talentLvlKey = undefined, levelBoost = 0 } = Character.getTalentLevelKey(character, talentKey, constellation, true)\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n  if (typeof talentLvlKey === \"number\") {\r\n    if (editable) {\r\n      let setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        let talentLevelKeys = state.talentLevelKeys || {}\r\n        talentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let statsEle = null\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  if (talentStats) {\r\n    statsEle = <Row><Col>\r\n      <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n        <ListGroup className=\"text-white\" variant=\"flush\">\r\n          {Object.entries(talentStats).map(([statKey, statVal], index) =>\r\n            <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n              <div>\r\n                <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n              </div>\r\n            </ListGroup.Item>\r\n          )}\r\n        </ListGroup>\r\n      </Card>\r\n    </Col></Row>\r\n  }\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalStats = {}\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            //filter out formulaOverrides from rendering\r\n            conditionalStats = Object.fromEntries(Object.entries(conditionalStats).filter(([key, _]) => key !== \"formulaOverrides\"))\r\n            conditionalFields = Character.getTalentConditionalFields(conditional, conditionalNum, [])\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Row><Col>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {Object.entries(conditionalStats).map(([statKey, statVal], index) =>\r\n                  <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n                    <div>\r\n                      <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                      <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n                    </div>\r\n                  </ListGroup.Item>\r\n                )}\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i + (conditionalStats?.length || 0)} index={i + (conditionalStats?.length || 0)} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col></Row>\r\n        }\r\n        return <Row className=\"mt-2\" key={\"section\" + i}><Col xs={12}>\r\n          <span>{talentText}</span>\r\n          {fields.length > 0 && <ListGroup className=\"text-white ml-n2 mr-n2\">\r\n            {fields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n          {conditionalEle}\r\n        </Col></Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay(props) {\r\n  let { character, character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldBasic = field.basicVal\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats, character)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = field.value ? field.value : field.finalVal\r\n  if (typeof fieldVal === \"function\") {\r\n    fieldVal = fieldVal?.(talentLvlKey, build.finalStats, character)\r\n  }\r\n  if (typeof fieldVal === \"number\")\r\n    fieldVal = Math.round(fieldVal)\r\n\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.finalVal\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats, character)?.toFixed?.(0))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className=\"float-right text-right\">{fieldVal}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterId)\r\n      this.state = CharacterDatabase.getCharacter(props.characterId)\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    dmgMode: \"dmg\",\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey) })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getArtifactDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.characterId && this.state.id !== this.props.characterId)\r\n      this.setState(CharacterDatabase.getCharacter(this.props.characterId))\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"char_level\")}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && (Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\"}>Talents {(Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\" && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} setState={this.setSetState} setOverride={this.setOverride} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import { Container } from \"react-bootstrap\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport '../StatDependency'\r\nexport default function TestDisplay(props) {\r\n  DatabaseInitAndVerify()\r\n  return <Container>\r\n    <CharacterDisplayCard editable characterId={\"character_2\"} />\r\n  </Container>\r\n}\r\n","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { AttachLazyFormulas } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getCDataObj(charKey)?.talent?.[talentKey]?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getCDataObj(charKey)?.talent?.[talentKey]?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getCDataObj(charKey)?.talent?.[talentKey]?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"formulaOverrides\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey } = character\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey)\r\n    if (!elemental) elemental = autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false)\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = this.getElementalKey(characterKey)\r\n    if (eleKey) eleKey = eleKey + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n\r\n  //CHARCTER OBJ\r\n  static hasOverride = (character, statKey) => character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getArtifactSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals, charAndWeapon, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(charAndWeapon)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals && artifactConditionals.forEach(conditional => {\r\n      let { srcKey: setKey, srcKey2: setNumKey } = conditional\r\n      let condStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditional.conditionalNum)\r\n      if (condStats) Object.entries(condStats).forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n    AttachLazyFormulas(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"formulaOverrides\") {\r\n        initialStats.formulaOverrides = [...(initialStats.formulaOverrides || []), ...val]\r\n        return\r\n      }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { Formulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (StatData[key]?.html || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (StatData[key]?.html || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static printFormula = (statKey, stats, expand = true) =>\r\n    FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n    (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n\r\n  static printOverrideFormula = (stats, overrideKey, options, expand = true) =>\r\n    OverrideFormulasText?.[overrideKey] && typeof OverrideFormulasText?.[overrideKey].formulaText === \"function\" &&\r\n    (<span>{OverrideFormulasText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats[statKey]?.toFixed?.(fixedUnit) || stats[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n}\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulasText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.value}%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getArtifactDataImport = () => ArtifactDataImport\r\n  static getArtifactSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getArtifactSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData).filter(([key, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getArtifactPieceName = (setKey, slotKey, defVal = \"\") => ArtifactData?.[setKey]?.pieces?.[slotKey] || defVal;\r\n  static getArtifactPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n  static getArtifactSetEffectsObj = (setKey, defVal = null) => ArtifactData?.[setKey]?.sets || defVal\r\n  //SLOT\r\n  static getArtifactSlotKeys = () => Object.keys(ArtifactSlotsData)\r\n  static getArtifactSlotName = (slotKey, defVal = \"\") =>\r\n    ArtifactSlotsData[slotKey] ? ArtifactSlotsData[slotKey].name : defVal\r\n  static getArtifactSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n\r\n  static getArtifactSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getArtifactSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getArtifactSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n\r\n  //STARS\r\n  static getRarityArr = (setKey) => ArtifactData[setKey] ? ArtifactData[setKey].rarity : []\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => ArtifactMainSlotKeys\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = ArtifactMainStatsData[numStars]?.[key]?.[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData)\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getRolls(value, rollData, float = false) {\r\n    let roll = null;\r\n    let maxNumRoll = Math.round(value / rollData[0])\r\n    if (!maxNumRoll) return null;\r\n    let rollOption = (val, arr) => {\r\n      if (roll) return;\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (float) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val)) {\r\n            roll = arr;\r\n            return;\r\n          }\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val)) {\r\n            roll = arr;\r\n            return\r\n          }\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        rollOption(value, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(value, [])\r\n    return roll;\r\n  }\r\n  static validateSubStat(state, substat) {\r\n    if (!substat || !substat.value) return { valid: true }\r\n    let value = parseFloat(substat.value);\r\n    if (isNaN(value)) return { valid: false, msg: `Invalid Input` }\r\n    let numStars = state.numStars\r\n    if (!numStars) return { valid: false, msg: `Artifact Stars not set.` }\r\n    let isFloat = Stat.getStatUnit(substat.key) === \"%\"\r\n    let rollData = this.getSubstatRollData(substat.key, numStars);\r\n    let rolls = this.getRolls(value, rollData, isFloat)\r\n\r\n    if (!rolls || rolls.length === 0) return { valid: false, msg: `Substat cannot be rolled 0 times.` };\r\n    let totalAllowableRolls = ArtifactStarsData[numStars]?.numUpgradesOrUnlocks - (4 - ArtifactStarsData[numStars]?.subBaseHigh) + 1;//+1 for its base roll\r\n    if (rolls.length > totalAllowableRolls) return { valid: false, msg: `Substat cannot be rolled more than ${totalAllowableRolls} times.` };\r\n\r\n    let min = rollData[0] * rolls.length;\r\n    let max = rollData[rollData.length - 1] * rolls.length;\r\n    return { valid: true, efficiency: clampPercent(((value - min) / (max - min)) * 100), msg: `This substat was rolled ${rolls.length} time(s). Values: [${rolls.join(\", \")}]`, rolls }\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static artifactValidation(state) {\r\n    let currentEfficiency = 0, maximumEfficiency = 0;\r\n    let subStatValidations = state.substats.map(substat => Artifact.validateSubStat(state, substat));\r\n    for (const substat of subStatValidations)\r\n      if (!substat.valid)\r\n        return { subStatValidations, valid: false, msg: \"One of the substat is invalid.\", currentEfficiency, maximumEfficiency }\r\n\r\n    //if a substat has >=2 rolls, when not all of them have been unlocked//if a substat has >=2 rolls, when not all of them have been unlocked\r\n    if (subStatValidations.some(substat => substat?.rolls?.length > 1) && subStatValidations.some((substat) => !substat.rolls))\r\n      return { subStatValidations, valid: false, msg: \"One of the substat have >1 rolls, but not all substats are unlocked.\", currentEfficiency, maximumEfficiency }\r\n    let currentNumOfRolls = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls ? cur.rolls.length : 0), 0);\r\n    let rollsRemaining = Artifact.rollsRemaining(state.level, state.numStars);\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(state.numStars);\r\n\r\n    if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n      return { subStatValidations, valid: false, msg: `Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `, currentEfficiency, maximumEfficiency }\r\n\r\n    let totalCurrentEfficiency = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls && cur.efficiency ? (cur.efficiency * cur.rolls.length) : 0), 0);\r\n    currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { valid: true, subStatValidations, currentNumOfRolls, rollsRemaining, totalPossbleUpgrade: totalPossbleRolls, currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getArtifactSets = (setKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = null) =>\r\n    deepClone(this.getArtifactSets(setKey)?.[setNumKey]?.stats || defVal)\r\n\r\n  static getArtifactConditionalStats = (setKey, setNumKey, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getArtifactSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      ArtifactData?.[setKey]?.sets && Object.entries(ArtifactData[setKey].sets).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getArtifactSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      if (ArtifactData?.[setKey]?.sets) {\r\n        let setNumKeys = Object.keys(ArtifactData[setKey].sets).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n        if (setNumKeys.length)\r\n          artifactSetEffect[setKey] = setNumKeys\r\n      }\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getArtifactSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = ArtifactData?.[setKey]?.sets?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getArtifactSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets?.[setNumKey]?.conditional || defVal\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      let hasSetEffect = false\r\n      if (setObj.sets)\r\n        Object.entries(setObj.sets).forEach(([setNumKey, setEffectObj]) => {\r\n          if (setEffectObj.stats && Object.keys(setEffectObj.stats).length > 0) {\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n            hasSetEffect = true\r\n          }\r\n          if (setEffectObj.conditional) {\r\n            let conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n            if (conditionalNum) {\r\n              let condStats = this.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n              if (condStats) {\r\n                setEffect[setNumKey] = deepClone(condStats)\r\n                hasSetEffect = true\r\n              }\r\n            }\r\n          }\r\n        })\r\n      if (hasSetEffect)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => id ? artifactDatabase[id] : null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null) \r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  dmg: { name: \"All DMG\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n  //elemental\r\n  overloaded_dmg: { name: \"Overloaded DMG\", unit: \"%\" },\r\n  electro_charged_dmg: { name: \"Electro-Charged DMG\", unit: \"%\" },\r\n  superconduct_dmg: { name: \"Superconduct DMG\", unit: \"%\" },\r\n  burning_dmg: { name: \"Overloaded DMG\", unit: \"%\" },\r\n  vaporize_dmg: { name: \"Vaporize DMG\", unit: \"%\" },\r\n  melt_dmg: { name: \"Melt DMG\", unit: \"%\" },\r\n  swirl_dmg: { name: \"Swirl DMG\", unit: \"%\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_final: (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.phy_dmg,\r\n  plunge_crit_dmg: (s) => s.phy_crit_dmg,\r\n  plunge_avg_dmg: (s) => s.phy_avg_dmg,\r\n  plunge_bonus_multi: (s) => s.phy_bonus_multi,\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.dmg) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s[`${ele}_ele_dmg`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_ele_crit_dmg`],\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_ele_avg_dmg`],\r\n  plunge_bonus_multi: (s, ele) => s[`${ele}_ele_bonus_multi`],\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.dmg) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.dmg) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.dmg) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//add html text to physical related stuff with html elements.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].html = <span className=\"text-physical text-nowrap\">{StatData[key].name}</span>\r\n  StatData[key].variant = \"physical\"\r\n});\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].html = <span className={`text-${eleKey} text-nowrap`}>{StatData[ele_key].name}</span>\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulas = {\r\n  noelle_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk + s.def_final * (options.value / 100),\r\n    dependency: [\"atk_base\", \"atk_weapon\", \"atk_\", \"atk\", \"def_final\", \"def_base\", \"def_\", \"def\"],\r\n  }\r\n}\r\n\r\n//the keyfilters are used by build generator to reduce the amount of calculations required\r\nfunction AttachLazyFormulas(obj, options = {}) {\r\n  let { formulaKeys = Object.keys(Formulas), statKeys = Object.keys(StatData) } = options;\r\n  let { formulaOverrides = [] } = obj;\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key: overrideFormulaKey, options } = formulaOverride\r\n    let { key, formula } = OverrideFormulas[overrideFormulaKey] || {}\r\n    if (!formulaKeys.includes(key)) return\r\n    formula = formula(options)\r\n    Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => formula(obj) : function () {\r\n        let val = formula(obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n\r\n  formulaKeys.forEach(key => {\r\n    !obj.hasOwnProperty(key) && Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => Formulas[key](obj) : function () {\r\n        let val = Formulas[key](obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  //assign zeros or default values to the other stats that are not part of the calculations\r\n  statKeys.forEach(key => !obj.hasOwnProperty(key) && (obj[key] = StatData[key].default || 0))\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  OverrideFormulas,\r\n  StatData,\r\n  AttachLazyFormulas,\r\n}","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}"],"sourceRoot":""}