{"version":3,"sources":["../webpack/bootstrap","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","WorkerHack.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","Util/Util.js","Data/ElementalData.js","StatConstants.js","StatData.js","Build/Build.js","Util/FormulaUtil.js","Data/Characters/Amber/data.js","Data/Characters/Barbara/data.js","Data/Characters/Beidou/data.js","Data/Characters/Bennett/data.js","Data/Characters/Diluc/data.js","Data/Characters/Fischl/data.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","Util/ConditionalsUtil.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","Data/Characters/Ganyu/data.js","Data/Characters/Hu Tao/data.js","Data/Characters/Keqing/data.js","Data/Characters/Mona/data.js","Data/Characters/Ningguang/data.js","Data/Characters/Noelle/data.js","Data/Characters/Venti/data.js","Data/Characters/Xiao/data.js","Data/Characters/Xingqiu/data.js","Data/Characters/formula.js","StatDependency.js","Build/BuildWorker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","runtime","undefined","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","obj","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","$RefreshReg$","$RefreshSig$","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","minLen","from","test","_createForOfIteratorHelper","allowArrayLike","it","isArray","F","e","_e","f","normalCompletion","didErr","step","_e2","_defineProperty","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","arguments","source","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","_slicedToArray","_arr","_n","_d","_s","_i","asyncGeneratorStep","gen","_next","_throw","clamp","val","low","high","ElementalData","physical","anemo","geo","electro","hydro","pyro","cryo","hitTypes","hit","avgHit","critHit","hitMoves","normal","charged","plunging","skill","burst","hitElements","ReactionMatrix","overloaded","superconduct","electrocharged","shattered","swirl","crystalize","StatData","flat","default","characterHP","pretty","const","characterDEF","characterATK","characterEle","characterLevel","weaponATK","baseATK","hp","hp_","unit","atk","atk_","def","def_","dmg_","finalHP","finalATK","finalDEF","eleMas","enerRech_","critRate_","critDMG_","weakspotDMG_","heal_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","stamina","staminaDec_","staminaGlidingDec_","staminaChargedDec_","heal_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","variant","crystalize_multi","crystalize_dmg_","crystalize_hit","burning_dmg_","enemyLevel","enemyLevel_multi","enemyDEFRed_","Formulas","reduce","accu","Math","pow","PreprocessFormulas","dependencyKeys","stats","debug","modifiers","initialStats","constData","formulaList","map","tmp","modifier","constModifier","entries","k","dynamicModifier","constFunc","dynamicFunc","funcIndicator","func","console","log","formula","assign","artifactSetPermutations","artifactsBySlot","setFilters","setKeys","Set","filteredArtifactsBySlot","slotKeys","slotKey","artifactsBySet","artifact","has","setKey","freeze","setCount","slotPerm","index","num","artifactPermutations","artifactSetEffects","callback","newStats","accumulate","art","mainStatKey","mainStatVal","substats","substat","setEffect","statKey","getTalentStatKey","skillKey","elemental","hitMode","autoInfused","reactionMode","weaponType","includes","eleKey","basicDMGFormula","percent","move","moveName","ele","eleName","opt","typeName","res","reaction","reactionName","vaporize","melt","variants","baseMulti","data","baseStat","specializeStat","hitArr","aimedShot","fullAimedShot","dmg","dmgPerWave","totDMG","fromEntries","percentArr","tlvl","aimShot","detonationDMG","hpFlat","contHP","contHPFlat","regenPerHit","contRegen","regen","spinning","onHit","lightningDMG","dmgRed","shield","atk1","atk2","press","lvl1hit1","lvl1hit2","lvl2hit1","lvl2hit2","explosion","healHP","healHPFlat","atkRatio","atkBonus","constellation","final","hit1","hit2","hit3","slashing","dot","hit2b","hit3b","oz","fullAimedShotOz","activeChar","addDmg","passive2","thunderRetri","constellation1","jointAttDmg","_defineProperties","props","descriptor","ConditionalsUtil","instance","Constructor","protoProps","staticProps","conditionals","srcKeyObj","srcKey","srcKey2","find","cond","conditionalNum","findIndex","splice","newCond","conditional","fieldName","defVal","selectedConditionalNum","selectedConditional","curConditional","maxStack","stacks","aimShot1","frostflake","frostflakeBloom","talentConditionals","getConditionalNum","min","charged_critRate_","atk_inc","low_dmg","low_regen","stilleto","thunderclasp_slash","consec_slash","last","thunderclap_slashing","bubble_explosion","omen_duration","passive1","talentLevelKeys","jade","inheri_hp","dmg_per_gem","skill_dmg","shield_def","shield_flat","heal_def","heal_flat","heal_trigger","burst_dmg","bonus","heal","full","hold","hit_bonus","full_bonus","flatMap","atk_bonus","drain","amber","barbara","beidou","bennett","diluc","fischl","ganyu","hutao","keqing","mona","ningguang","noelle","venti","xiao","xingqiu","hydro_dmg_","GetFormulaDependency","dependency","Proxy","prop","receiver","add","formulaKeyDependency","GetDependencies","dependencies","InsertDependencies","onmessage","a","t1","performance","now","splitArtifacts","minFilters","maxFilters","maxBuildsToShow","optimizationTarget","ascending","targetKeys","talentKey","formulaKey","targetFormula","charFormulas","characterKey","postMessage","progress","timing","builds","threshold","prune","sort","b","buildFilterVal","buildCount","some","minimum","maximum","artifacts","t2","args"],"mappings":"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","file":"static/js/BuildWorker.41780d53.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/genshin-optimizer/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","//why does this work? no idea. \r\n$RefreshReg$ = () => { };\r\n$RefreshSig$ = () => () => { };\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\n\r\n//multiplies every numberical value in the obj by a multiplier.\r\nfunction objMultiplication(obj, multi) {\r\n  Object.keys(obj).forEach(prop => {\r\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\r\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\r\n  })\r\n}\r\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\r\nconst getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance,\r\n  objMultiplication,\r\n  getObjectKeysRecursive\r\n}","const ElementalData = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: [ \"Overloaded\", \"pyro\", 4 ],\r\n  shattered: [ \"Shattered\", \"physical\", 3 ],\r\n  electrocharged: [ \"Electro-Charged\", \"electro\", 2.4 ],\r\n  superconduct: [ \"Superconduct\", \"cryo\", 1 ],\r\n  swirl: [ \"Swirl\", \"anemo\", 1.2 ],\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: [\"Vaporize\", { pyro: 1.5, hydro: 2 }],\r\n  melt: [\"Melt\", { pyro: 2, cryo: 1.5 }],\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\nexport const ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\n","import { clamp } from \"./Util/Util\";\r\nimport { ReactionMatrix, hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nconst StatData = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\r\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\r\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\", pretty: \"HP\" },\r\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\r\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\" },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\" },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\" },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true }\r\n}\r\nconst Formulas = {\r\n  // Basic Stats\r\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\r\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s, c) => ReactionMatrix[\"crystalize\"].reduce((accu, val, i) => accu + val * Math.pow(c.characterLevel, i), 0),\r\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\r\n}\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"swirl_hit\"],\r\n  geo: [\"crystalize_hit\", \"shattered_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\", \r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, const: true, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n    StatData[`${ele}_elemental_${type}`] = { name: `${eleName} Attack ${typeName}`, ...opt }\r\n    StatData[`${ele}_elemental_${type}_multi`] = { name: `${eleName} Attack ${typeName} Multiplier`, unit: \"multi\" }\r\n\r\n    Formulas[`${ele}_elemental_${type}`] = (s) => s.finalATK * s[`${ele}_elemental_${type}_multi`]\r\n  })\r\n\r\n  Formulas[`${ele}_elemental_hit_multi`] = (s, c) => (1 + (s.dmg_ + s[`${ele}_dmg_`]) / 100) * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\r\n  Formulas[`${ele}_elemental_critHit_multi`] = (s) => s[`${ele}_elemental_hit_multi`] * (1 + s.critDMG_ / 100)\r\n  Formulas[`${ele}_elemental_avgHit_multi`] = (s) => s[`${ele}_elemental_hit_multi`] * (1 + s.critDMG_ * s[`critRate_`] / 10000)\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(c[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => (1 + (s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100) * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * (1 + s.critDMG_ / 100)\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, [reactionName, ele, baseMulti]]) => {\r\n  let opt = {}\r\n  if (ele) opt.variant = reaction\r\n  StatData[`${reaction}_hit`] = { name: `${reactionName} DMG`, ...opt }\r\n  StatData[`${reaction}_dmg_`] = { name: `${reactionName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${reactionName} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n\r\n  Formulas[`${reaction}_multi`] = (s, c) => ReactionMatrix[reaction].reduce((accu, val, i) => accu + val * Math.pow(c.characterLevel, i), 0)\r\n  Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, [name, variants]]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${reaction}_elemental_${type}`] = { name: `${name} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${reaction}_elemental_${type}`] = (s) => s[`${ele}_elemental_${type}`] * s[`${ele}_${reaction}_multi`]\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s[`${ele}_${move}_${type}`] * s[`${ele}_${reaction}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\r\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\r\n  const formulaList = dependencyKeys.map(key => {\r\n    const modifier = modifiers[key] ?? {}\r\n    const constModifier = Object.entries(modifier).filter(([k]) => StatData[k]?.const)\r\n    const dynamicModifier = Object.entries(modifier).filter(([k]) => !(StatData[k]?.const))\r\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]) => accu + c[k] * m, 0)\r\n    const dynamicFunc = (s) => dynamicModifier.reduce((accu, [k, m]) => accu + s[k] * m, 0)\r\n\r\n    let funcIndicator = 0\r\n    if (constModifier.length) funcIndicator += 1\r\n    if (dynamicModifier.length) funcIndicator += 2\r\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\r\n\r\n    let tmp\r\n    switch (funcIndicator) {\r\n      case 0: tmp = Formulas[key]; break\r\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\r\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\r\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 4: tmp = (s, c) => c[key]; break\r\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\r\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\r\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 8: tmp = (s, c) => s[key]; break\r\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\r\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\r\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n    }\r\n    const func = tmp\r\n\r\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\r\n\r\n    if (!(key in Formulas))\r\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n\r\n    if (StatData[key]?.const) {\r\n      constData[key] = stats[key]\r\n      constData[key] = func(stats, constData)\r\n      stats[key] = constData[key]\r\n      if (dynamicModifier.length)\r\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\r\n      return null\r\n    }\r\n\r\n    if (!(key in Formulas))\r\n      initialStats[key] = stats[key]\r\n\r\n    return [key, func]\r\n  }).filter((func) => func)\r\n\r\n  if (debug) console.log(initialStats, constData)\r\n\r\n  return {\r\n    initialStats,\r\n    formula: s => {\r\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\r\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\r\n      Object.assign(s, constData)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","import ElementalData from \"../Data/ElementalData\"\r\n\r\n/**\r\n * Generate all set of artifacts-by-slots based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n *\r\n */\r\nexport function artifactSetPermutations(artifactsBySlot, setFilters) {\r\n  const setKeys = new Set(setFilters.map(i => i.key)), filteredArtifactsBySlot = {}\r\n  const slotKeys = Object.keys(artifactsBySlot)\r\n\r\n  for (const slotKey of slotKeys) {\r\n    let artifactsBySet = {}\r\n    for (const artifact of artifactsBySlot[slotKey]) {\r\n      if (setKeys.has(artifact.setKey)) {\r\n        if (artifactsBySet[artifact.setKey]) artifactsBySet[artifact.setKey].push(artifact)\r\n        else artifactsBySet[artifact.setKey] = [artifact]\r\n      } else {\r\n        if (artifactsBySet[null]) artifactsBySet[null].push(artifact)\r\n        else artifactsBySet[null] = [artifact]\r\n      }\r\n    }\r\n    filteredArtifactsBySlot[slotKey] = Object.freeze(artifactsBySet)\r\n  }\r\n\r\n  const setCount = {}, accu = {}, result = []\r\n\r\n  function slotPerm(index) {\r\n    if (index >= slotKeys.length) {\r\n      for (const { key, num } of setFilters)\r\n        if ((setCount[key] ?? 0) < num)\r\n          return\r\n      result.push({ ...accu })\r\n      return\r\n    }\r\n\r\n    const slotKey = slotKeys[index]\r\n    let artifactsBySet = filteredArtifactsBySlot[slotKey]\r\n    for (const setKey in artifactsBySet) {\r\n      setCount[setKey] = (setCount[setKey] ?? 0) + 1\r\n      accu[slotKey] = artifactsBySet[setKey]\r\n      slotPerm(index + 1)\r\n      setCount[setKey] -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0)\r\n  return result\r\n}\r\n\r\n/**\r\n * Compute number of all artifact permutations based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n */\r\nexport function calculateTotalBuildNumber(artifactsBySlot, setFilters) {\r\n  return artifactSetPermutations(artifactsBySlot, setFilters).reduce((accu, artifactsBySlot) =>\r\n    accu + Object.entries(artifactsBySlot).reduce((accu, artifacts) => accu * artifacts[1].length, 1)\r\n    , 0)\r\n}\r\n\r\n/**\r\n * @callback artifactCallback\r\n * @param {Object.<artifactKey, artifact>} artifacts - the list of artifacts\r\n * @param {stats} stats - the total stats for the artifacts\r\n */\r\n\r\n/**\r\n * Generate all artifact permutations and accumulate the stats\r\n * @param {stats} initialStats - initial stats before any artifact is added\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - the list of the set effects\r\n * @param {artifactCallback} callback - the functions called with each permutation\r\n */\r\nexport function artifactPermutations(initialStats, artifactsBySlot, artifactSetEffects, callback) {\r\n  const slotKeys = Object.keys(artifactsBySlot), setCount = {}, accu = {}\r\n  function slotPerm(index, stats) {\r\n    if (index >= slotKeys.length) {\r\n      callback(accu, stats)\r\n      return\r\n    }\r\n\r\n    let slotKey = slotKeys[index]\r\n    for (const artifact of artifactsBySlot[slotKey]) {\r\n      let newStats = { ...stats }\r\n      accumulate(slotKey, artifact, setCount, accu, newStats, artifactSetEffects)\r\n      slotPerm(index + 1, newStats)\r\n      setCount[artifact.setKey] -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0, initialStats)\r\n}\r\n\r\nfunction accumulate(slotKey, art, setCount, accu, stats, artifactSetEffects) {\r\n  let setKey = art.setKey\r\n  accu[slotKey] = art\r\n  setCount[setKey] = (setCount[setKey] ?? 0) + 1\r\n\r\n  // Add artifact stats\r\n  if (art.mainStatKey in stats) stats[art.mainStatKey] += art.mainStatVal\r\n  art.substats.forEach((substat) => {\r\n    if (substat?.key in stats) stats[substat.key] += substat.value\r\n  })\r\n\r\n  // Add set effects\r\n  let setEffect = artifactSetEffects[setKey]?.[setCount[setKey]]\r\n  setEffect && Object.entries(setEffect).forEach(([statKey, val]) => {\r\n    if (statKey in stats) stats[statKey] += val\r\n  })\r\n}\r\n\r\n/**\r\n  * Create statKey in the form of ${ele}_elemental_${type} for elemental DMG, ${ele}_${src}_${type} for talent DMG.\r\n  * @param {string} skillKey - The DMG src. Can be \"norm\",\"skill\". Use an elemental to specify a elemental hit \"physical\" -> physical_elemental_{type}. Use \"elemental\" here to specify a elemental hit of character's element/reactionMode\r\n  * @param {*} stats - The character. Will extract hitMode, autoInfused...\r\n  * @param {*} elemental - Override the hit to be the character's elemental, that is not part of infusion.\r\n  */\r\nexport function getTalentStatKey(skillKey, stats, elemental = false) {\r\n  const { hitMode = \"\", autoInfused = false, reactionMode = null, characterEle = \"anemo\", weaponType = \"sword\" } = stats\r\n  if (Object.keys(ElementalData).includes(skillKey)) return `${skillKey}_elemental_${hitMode}`//elemental DMG\r\n  if (!elemental) elemental = weaponType === \"catalyst\" || autoInfused\r\n  let eleKey = \"physical\"\r\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n    eleKey = (reactionMode ? reactionMode : characterEle)\r\n  return `${eleKey}_${skillKey}_${hitMode}`\r\n}\r\n\r\nexport function getTalentStatKeyVariant(skillKey, stats, elemental = false) {\r\n  if (Object.keys(ElementalData).includes(skillKey)) return skillKey\r\n  const { autoInfused = false, characterEle = \"anemo\", weaponType = \"sword\" } = stats\r\n  let { reactionMode } = stats\r\n  //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n  if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n    reactionMode = \"vaporize\"\r\n  else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n    reactionMode = \"melt\"\r\n  if (!elemental) elemental = weaponType === \"catalyst\" || autoInfused\r\n  let eleKey = \"physical\"\r\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n    eleKey = (reactionMode ? reactionMode : characterEle)\r\n  return eleKey\r\n}","import { getTalentStatKey } from \"../Build/Build\"\r\n//for basic formula in the format of \"percent/100 * s[statKey]\"\r\nfunction basicDMGFormula(percent, stats, skillKey, elemental = false) {\r\n  const val = percent / 100\r\n  const statKey = getTalentStatKey(skillKey, stats, elemental)\r\n  return [s => val * s[statKey], [statKey]]\r\n}\r\nexport {\r\n  basicDMGFormula,\r\n}","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\r\n\r\nconst data = {\r\n  baseStat: {\r\n    characterHP: [793, 2038, 2630, 3940, 4361, 5016, 5578, 6233, 6654, 7309, 7730, 8385, 8806, 9461],\r\n    characterATK: [19, 48, 62, 93, 103, 118, 131, 147, 157, 172, 182, 198, 208, 223],\r\n    characterDEF: [50, 129, 167, 250, 277, 318, 354, 396, 423, 464, 491, 532, 559, 601]\r\n  },\r\n  specializeStat: {\r\n    key: \"atk_\",\r\n    value: [0, 0, 0, 0, 7.5, 7.5, 15, 15, 15, 15, 22.5, 22.5, 30, 30]\r\n  },\r\n  normal: {\r\n    hitArr: [\r\n      [36.12, 39.06, 42, 46.2, 49.14, 52.5, 57.12, 61.74, 66.36, 71.4, 76.44, 81.48, 86.52, 91.56, 96.6],\r\n      [36.12, 39.06, 42, 46.2, 49.14, 52.5, 57.12, 61.74, 66.36, 71.4, 76.44, 81.48, 86.52, 91.56, 96.6],\r\n      [46.44, 50.22, 54, 59.4, 63.18, 67.5, 73.44, 79.38, 85.32, 91.8, 98.28, 104.76, 111.24, 117.72, 124.2],\r\n      [47.3, 51.15, 55, 60.5, 64.35, 68.75, 74.8, 80.85, 86.9, 93.5, 100.1, 106.7, 113.3, 119.9, 126.5],\r\n      [59.34, 64.17, 69, 75.9, 80.73, 86.25, 93.84, 101.43, 109.02, 117.3, 125.58, 133.86, 142.14, 150.42, 158.7],\r\n    ],\r\n  },\r\n  charged: {\r\n    aimedShot: [43.86, 47.43, 51, 56.1, 59.67, 63.75, 69.36, 74.97, 80.58, 86.7, 92.82, 98.94, 105.06, 111.18, 117.3],\r\n    fullAimedShot: [124, 133.3, 142.6, 155, 164.3, 173.6, 186, 198.4, 210.8, 223.2, 235.6, 248, 263.5, 279, 294.5]\r\n  },\r\n  plunging: {\r\n    dmg: [56.83, 61.45, 66.08, 72.69, 77.31, 82.6, 89.87, 97.14, 104.41, 112.34, 120.27, 128.2, 136.12, 144.05, 151.98],\r\n    low: [113.63, 122.88, 132.13, 145.35, 154.59, 165.17, 179.7, 194.23, 208.77, 224.62, 240.48, 256.34, 272.19, 288.05, 303.9],\r\n    high: [141.93, 153.49, 165.04, 181.54, 193.1, 206.3, 224.45, 242.61, 260.76, 280.57, 300.37, 320.18, 339.98, 359.79, 379.59]\r\n  },\r\n  skill: {\r\n    hp: [41.36, 44.46, 47.56, 51.7, 54.8, 57.9, 62.04, 66.18, 70.31, 74.45, 78.58, 82.72, 87.89, 93.06, 98.23],\r\n    dmg: [123.2, 132.44, 141.68, 154, 163.24, 172.48, 184.8, 197.12, 209.44, 221.76, 234.08, 246.4, 261.8, 277.2, 292.6],\r\n  },\r\n  burst: {\r\n    dmgPerWave: [28.08, 30.19, 32.29, 35.1, 37.21, 39.31, 42.12, 44.93, 47.74, 50.54, 53.35, 56.16, 59.67, 63.18, 66.69],\r\n    totDMG: [505.44, 543.35, 581.26, 631.8, 669.71, 707.62, 758.16, 808.7, 859.25, 909.79, 960.34, 1010.88, 1074.06, 1137.24, 1200.42],\r\n  }\r\n}\r\n\r\nconst formula = {\r\n  normal: Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [i, (tlvl, stats) =>\r\n    basicDMGFormula(percentArr[tlvl], stats, \"normal\")])),\r\n  charged: {\r\n    aimShot: (tlvl, stats) => basicDMGFormula(data.charged.aimedShot[tlvl], stats, \"charged\"),\r\n    fullAimedShot: (tlvl, stats) => basicDMGFormula(data.charged.fullAimedShot[tlvl], stats, \"charged\", true),\r\n  },\r\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([key, arr]) => [key, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\r\n  skill: {\r\n    hp: (tlvl) => {\r\n      const hp = data.skill.hp[tlvl] / 100\r\n      return [(s) => hp * s.finalHP, [\"finalHP\"]]\r\n    },\r\n    dmg: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl], stats, \"skill\"),\r\n    detonationDMG: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl] + 200, stats, \"skill\"),\r\n  },\r\n  burst: {\r\n    dmgPerWave: (tlvl, stats) => basicDMGFormula(data.burst.dmgPerWave[tlvl], stats, \"burst\"),\r\n    totDMG: (tlvl, stats) => basicDMGFormula(data.burst.totDMG[tlvl], stats, \"burst\"),\r\n  }\r\n}\r\n\r\nexport default formula\r\nexport {\r\n  data\r\n}","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\r\n\r\nconst data = {\r\n  baseStat: {\r\n    characterHP: [821, 2108, 2721, 4076, 4512, 5189, 5770, 6448, 6884, 7561, 7996, 8674, 9110, 9787],\r\n    characterATK: [13, 34, 44, 66, 73, 84, 94, 105, 112, 123, 130, 141, 148, 159],\r\n    characterDEF: [56, 144, 186, 279, 308, 355, 394, 441, 470, 517, 546, 593, 623, 669]\r\n  },\r\n  specializeStat: {\r\n    key: \"hp_\",\r\n    value: [0, 0, 0, 0, 6, 6, 12, 12, 12, 12, 18, 18, 24, 24]\r\n  },\r\n  normal: {\r\n    hitArr: [\r\n      [37.84, 40.68, 43.52, 47.3, 50.14, 52.98, 56.76, 60.54, 64.33, 68.11, 72.05, 77.19, 82.34, 87.49, 92.63],\r\n      [35.52, 38.18, 40.85, 44.4, 47.06, 49.73, 53.28, 56.83, 60.38, 63.94, 67.63, 72.46, 77.29, 82.12, 86.95],\r\n      [41.04, 44.12, 47.2, 51.3, 54.38, 57.46, 61.56, 65.66, 69.77, 73.87, 78.14, 83.72, 89.3, 94.88, 100.47],\r\n      [55.2, 59.34, 63.48, 69, 73.14, 77.28, 82.8, 88.32, 93.84, 99.36, 105.1, 112.61, 120.12, 127.62, 135.13],\r\n    ],\r\n  },\r\n  charged: {\r\n    dmg: [166.24, 178.71, 191.18, 207.8, 220.27, 232.74, 249.36, 265.98, 282.61, 299.23, 316.52, 339.13, 361.74, 384.35, 406.96],\r\n  },\r\n  plunging: {\r\n    dmg: [56.83, 61.45, 66.08, 72.69, 77.31, 82.6, 89.87, 97.14, 104.41, 112.34, 120.27, 128.2, 136.12, 144.05, 151.98],\r\n    low: [113.63, 122.88, 132.13, 145.35, 154.59, 165.17, 179.7, 194.23, 208.77, 224.62, 240.48, 256.34, 272.19, 288.05, 303.9],\r\n    high: [141.93, 153.49, 165.04, 181.54, 193.1, 206.3, 224.45, 242.61, 260.76, 280.57, 300.37, 320.18, 339.98, 359.79, 379.59]\r\n  },\r\n  skill: {\r\n    hp: [0.75, 0.81, 0.86, 0.94, 0.99, 1.05, 1.13, 1.2, 1.27, 1.35, 1.43, 1.5, 1.59, 1.69, 1.78],\r\n    hpFlat: [72, 79, 87, 96, 105, 114, 125, 135, 147, 159, 172, 185, 199, 213, 228],\r\n    contHP: [4, 4.3, 4.6, 5, 5.3, 5.6, 6, 6.4, 6.8, 7.2, 7.6, 8, 8.5, 9, 9.5],\r\n    contHPFlat: [385, 424, 465, 510, 559, 610, 664, 722, 783, 847, 915, 986, 1059, 1136, 1217],\r\n    dmg: [58.4, 62.78, 67.16, 73, 77.38, 81.76, 87.6, 93.44, 99.28, 105.12, 110.96, 116.8, 124.1, 131.4, 138.7],\r\n  },\r\n  burst: {\r\n    hp: [17.6, 18.92, 20.24, 22, 23.32, 24.64, 26.4, 28.16, 29.92, 31.68, 33.44, 35.2, 37.4, 39.6, 41.8],\r\n    flat: [1694, 1864, 2047, 2245, 2457, 2683, 2923, 3177, 3445, 3728, 4024, 4335, 4660, 4999, 5352],\r\n  }\r\n}\r\n\r\nconst formula = {\r\n  normal: Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [i, (tlvl, stats) =>\r\n    basicDMGFormula(percentArr[tlvl], stats, \"normal\")])),\r\n  charged: {\r\n    dmg: (tlvl, stats) => basicDMGFormula(data.charged.dmg[tlvl], stats, \"charged\"),\r\n  },\r\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([key, arr]) => [key, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\r\n  skill: {\r\n    regenPerHit: (tlvl) => {\r\n      const hp = data.skill.hp[tlvl] / 100\r\n      const flat = data.skill.hpFlat[tlvl]\r\n      return [s => (hp * s.finalHP + flat) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n    },\r\n    contRegen: (tlvl) => {\r\n      const hp = data.skill.contHP[tlvl] / 100\r\n      const flat = data.skill.contHPFlat[tlvl]\r\n      return [s => (hp * s.finalHP + flat) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n    },\r\n    dmg: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl], stats, \"skill\"),\r\n  },\r\n  burst: {\r\n    regen: (tlvl) => {\r\n      const hp = data.burst.hp[tlvl] / 100\r\n      const flat = data.burst.flat[tlvl]\r\n      return [s => (hp * s.finalHP + flat) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n    },\r\n  }\r\n}\r\n\r\nexport default formula\r\nexport {\r\n  data\r\n}","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\r\n\r\nconst data = {\r\n  baseStat: {\r\n    characterHP: [1094, 2811, 3628, 5435, 6015, 6919, 7694, 8597, 9178, 10081, 10662, 11565, 12146, 13050],\r\n    characterATK: [19, 49, 63, 94, 104, 119, 133, 148, 158, 174, 184, 200, 210, 225],\r\n    characterDEF: [54, 140, 180, 270, 299, 344, 382, 427, 456, 501, 530, 575, 603, 648]\r\n  },\r\n  specializeStat: {\r\n    key: \"electro_dmg_\",\r\n    value: [0, 0, 0, 0, 6, 6, 12, 12, 12, 12, 18, 18, 24, 24]\r\n  },\r\n  normal: {\r\n    hitArr: [\r\n      [71.12, 76.91, 82.7, 90.97, 96.76, 103.38, 112.47, 121.57, 130.67, 140.59, 151.96, 165.33, 178.71, 192.08, 206.67],\r\n      [70.86, 76.63, 82.4, 90.64, 96.41, 103, 112.06, 121.13, 130.19, 140.08, 151.41, 164.73, 178.06, 191.38, 205.92],\r\n      [88.32, 95.51, 102.7, 112.97, 120.16, 128.38, 139.67, 150.97, 162.27, 174.59, 188.71, 205.32, 221.92, 238.53, 256.65],\r\n      [86.52, 93.56, 100.6, 110.66, 117.7, 125.75, 136.82, 147.88, 158.95, 171.02, 184.85, 201.12, 217.39, 233.65, 251.4],\r\n      [112.14, 121.27, 130.4, 143.44, 152.57, 163, 177.34, 191.69, 206.03, 221.68, 239.61, 260.7, 281.78, 302.87, 325.87],\r\n    ],\r\n  },\r\n  charged: {\r\n    spinning: [56.24, 60.82, 65.4, 71.94, 76.52, 81.75, 88.94, 96.14, 103.33, 111.18, 120.17, 130.75, 141.32, 151.9, 163.43],\r\n    finalATK: [101.82, 110.11, 118.4, 130.24, 138.53, 148, 161.02, 174.05, 187.07, 201.28, 217.56, 236.71, 255.85, 275, 295.88]\r\n  },\r\n  plunging: {\r\n    dmg: [74.59, 80.66, 86.73, 95.4, 101.47, 108.41, 117.95, 127.49, 137.03, 147.44, 157.85, 168.26, 178.66, 189.07, 199.48],\r\n    low: [149.14, 161.28, 173.42, 190.77, 202.91, 216.78, 235.86, 254.93, 274.01, 294.82, 315.63, 336.44, 357.25, 378.06, 398.87],\r\n    high: [186.29, 201.45, 216.62, 238.28, 253.44, 270.77, 294.6, 318.42, 342.25, 368.25, 394.24, 420.23, 446.23, 472.22, 498.21]\r\n  },\r\n  skill: {\r\n    hp: [14.4, 15.48, 16.56, 18, 19.08, 20.16, 21.6, 23.04, 24.48, 25.92, 27.36, 28.8, 30.6, 32.4, 34.2],\r\n    flat: [1386, 1525, 1675, 1837, 2010, 2195, 2392, 2600, 2819, 3050, 3293, 3547, 3813, 4090, 4379],\r\n    dmg: [121.6, 130.72, 139.84, 152, 161.12, 170.24, 182.4, 194.56, 206.72, 218.88, 231.04, 243.2, 258.4, 273.6, 288.8],\r\n    onHit: [160, 172, 184, 200, 212, 224, 240, 256, 272, 288, 304, 320, 340, 360, 380],\r\n  },\r\n  burst: {\r\n    dmg: [121.6, 130.72, 139.84, 152, 161.12, 170.24, 182.4, 194.56, 206.72, 218.88, 231.04, 243.2, 258.4, 273.6, 288.8],\r\n    lightningDMG: [96, 103.2, 110.4, 120, 127.2, 134.4, 144, 153.6, 163.2, 172.8, 182.4, 192, 204, 216, 228],\r\n    dmgRed: [20, 21, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 37, 38, 39],\r\n  }\r\n}\r\n\r\nconst formula = {\r\n  normal: {\r\n    ...Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [i, (tlvl, stats) =>\r\n      basicDMGFormula(percentArr[tlvl], stats, \"normal\")])),\r\n    ...Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [`a${i}`, (tlvl, stats) =>\r\n      basicDMGFormula(percentArr[tlvl] * 0.2, stats, \"normal\", true)])),\r\n  },\r\n  charged: {\r\n    spinning: (tlvl, stats) => basicDMGFormula(data.charged.spinning[tlvl], stats, \"charged\"),\r\n    finalATK: (tlvl, stats) => basicDMGFormula(data.charged.finalATK[tlvl], stats, \"charged\"),\r\n  },\r\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([key, arr]) => [key, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\r\n  skill: {\r\n    shield: (tlvl) => {\r\n      const hp = data.skill.hp[tlvl] / 100\r\n      const flat = data.skill.flat[tlvl]\r\n      return [(s) => hp * s.finalHP + flat, [\"finalHP\"]]\r\n    },\r\n    dmg: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl], stats, \"skill\"),\r\n    onHit: (tlvl, stats) => basicDMGFormula(data.skill.onHit[tlvl], stats, \"skill\"),\r\n  },\r\n  burst: {\r\n    dmg: (tlvl, stats) => basicDMGFormula(data.burst.dmg[tlvl], stats, \"burst\"),\r\n    lightningDMG: (tlvl, stats) => basicDMGFormula(data.burst.lightningDMG[tlvl], stats, \"burst\"),\r\n  }\r\n}\r\n\r\nexport default formula\r\nexport {\r\n  data\r\n}","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\r\n\r\nconst data = {\r\n  baseStat: {\r\n    characterHP: [1039, 2670, 3447, 5163, 5715, 6573, 7309, 8168, 8719, 9577, 10129, 10987, 11539, 12397],\r\n    characterATK: [16, 41, 53, 80, 88, 101, 113, 126, 134, 148, 156, 169, 178, 191],\r\n    characterDEF: [65, 166, 214, 321, 356, 409, 455, 508, 542, 596, 630, 684, 718, 771]\r\n  },\r\n  specializeStat: {\r\n    key: \"enerRech_\",\r\n    value: [0, 0, 0, 0, 6.7, 6.7, 13.3, 13.3, 13.3, 13.3, 20, 20, 26.7, 26.7]\r\n  },\r\n  normal: {\r\n    hitArr: [\r\n      [44.55, 48.17, 51.8, 56.98, 60.61, 64.75, 70.45, 76.15, 81.84, 88.06, 94.28, 100.49, 106.71, 112.92, 119.14],\r\n      [42.74, 46.22, 49.7, 54.67, 58.15, 62.13, 67.59, 73.06, 78.53, 84.49, 90.45, 96.42, 102.38, 108.35, 114.31],\r\n      [54.61, 59.06, 63.5, 69.85, 74.3, 79.38, 86.36, 93.35, 100.33, 107.95, 115.57, 123.19, 130.81, 138.43, 146.05],\r\n      [59.68, 64.54, 69.4, 76.34, 81.2, 86.75, 94.38, 102.02, 109.65, 117.98, 126.31, 134.64, 142.96, 151.29, 159.62],\r\n      [71.9, 77.75, 83.6, 91.96, 97.81, 104.5, 113.7, 122.89, 132.09, 142.12, 152.15, 162.18, 172.22, 182.25, 192.28]\r\n    ],\r\n  },\r\n  charged: {\r\n    atk1: [55.9, 60.45, 65, 71.5, 76.05, 81.25, 88.4, 95.55, 102.7, 110.5, 118.3, 126.1, 133.9, 141.7, 149.5],\r\n    atk2: [60.72, 65.66, 70.6, 77.66, 82.6, 88.25, 96.02, 103.78, 111.55, 120.02, 128.49, 136.96, 145.44, 153.91, 162.38],\r\n  },\r\n  plunging: {\r\n    dmg: [63.93, 69.14, 74.34, 81.77, 86.98, 92.93, 101.1, 109.28, 117.46, 126.38, 135.3, 144.22, 153.14, 162.06, 170.98],\r\n    low: [127.84, 138.24, 148.65, 163.51, 173.92, 185.81, 202.16, 218.51, 234.86, 252.7, 270.54, 288.38, 306.22, 324.05, 341.89],\r\n    high: [159.68, 172.67, 185.67, 204.24, 217.23, 232.09, 252.51, 272.93, 293.36, 315.64, 337.92, 360.2, 382.48, 404.76, 427.04]\r\n  },\r\n  skill: {\r\n    press: [137.6, 147.92, 158.24, 172, 182.32, 192.64, 206.4, 220.16, 233.92, 247.68, 261.44, 275.2, 292.4, 309.6, 326.8],\r\n    lvl1hit1: [84, 90.3, 96.6, 105, 111.3, 117.6, 126, 134.4, 142.8, 151.2, 159.6, 168, 178.5, 189, 199.5],\r\n    lvl1hit2: [92, 98.9, 105.8, 115, 121.9, 128.8, 138, 147.2, 156.4, 165.6, 174.8, 184, 195.5, 207, 218.5],\r\n    lvl2hit1: [88, 94.6, 101.2, 110, 116.6, 123.2, 132, 140.8, 149.6, 158.4, 167.2, 176, 187, 198, 209],\r\n    lvl2hit2: [96, 103.2, 110.4, 120, 127.2, 134.4, 144, 153.6, 163.2, 172.8, 182.4, 192, 204, 216, 228],\r\n    explosion: [132, 141.9, 151.8, 165, 174.9, 184.8, 198, 211.2, 224.4, 237.6, 250.8, 264, 280.5, 297, 313.5]\r\n  },\r\n  burst: {\r\n    dmg: [232.8, 250.26, 267.72, 291, 308.46, 325.92, 349.2, 372.48, 395.76, 419.04, 442.32, 465.6, 494.7, 523.8, 552.9],\r\n    healHP: [6, 6.45, 6.9, 7.5, 7.95, 8.4, 9, 9.6, 10.2, 10.8, 11.4, 12, 12.75, 13.5, 14.25],\r\n    healHPFlat: [577, 635, 698, 765, 837, 914, 996, 1083, 1174, 1270, 1371, 1477, 1588, 1703, 1824],\r\n    atkRatio: [56, 60.2, 64.4, 70, 74.2, 78.4, 84, 89.6, 95.2, 100.8, 106.4, 112, 119, 126, 133]\r\n  }\r\n}\r\n\r\nconst formula = {\r\n  normal: Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [i, (tlvl, stats) =>\r\n    basicDMGFormula(percentArr[tlvl], stats, \"normal\")])),\r\n  charged: {\r\n    atk1: (tlvl, stats) => basicDMGFormula(data.charged.atk1[tlvl], stats, \"charged\"),\r\n    atk2: (tlvl, stats) => basicDMGFormula(data.charged.atk2[tlvl], stats, \"charged\"),\r\n  },\r\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([key, arr]) => [key, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\r\n  skill: Object.fromEntries(Object.entries(data.skill).map(([key, arr]) => [key, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"skill\")])),\r\n  burst: {\r\n    dmg: (tlvl, stats) => basicDMGFormula(data.burst.dmg[tlvl], stats, \"burst\"),\r\n    regen: (tlvl, stats) => {\r\n      const hp = data.burst.healHP[tlvl] / 100\r\n      const flat = data.burst.healHPFlat[tlvl]\r\n      return [s => (hp * s.finalHP + flat) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n    },\r\n    atkBonus: (tlvl, stats) => {\r\n      const { constellation } = stats\r\n      const percent = (data.burst.atkRatio[tlvl] + (constellation < 1 ? 0 : 20)) / 100\r\n      return [s => percent * s.baseATK, [\"baseATK\"]]\r\n    }\r\n  }\r\n}\r\n\r\nexport default formula\r\nexport {\r\n  data\r\n}","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\r\n\r\nconst data = {\r\n  baseStat: {\r\n    characterHP: [1011, 2621, 3488, 5219, 5834, 6712, 7533, 8421, 9036, 9932, 10547, 11453, 12068, 12981],\r\n    characterATK: [26, 68, 90, 135, 151, 173, 194, 217, 233, 256, 272, 295, 311, 335],\r\n    characterDEF: [61, 158, 211, 315, 352, 405, 455, 509, 546, 600, 637, 692, 729, 784]\r\n  },\r\n  specializeStat: {\r\n    key: \"critRate_\",\r\n    value: [0, 0, 0, 0, 4.8, 4.8, 9.6, 9.6, 9.6, 9.6, 14.4, 14.4, 19.2, 19.2]\r\n  },\r\n  normal: {\r\n    hitArr: [\r\n      [89.7, 97, 104.3, 114.73, 122.03, 130.38, 141.85, 153.32, 164.79, 177.31, 191.65, 208.52, 225.38, 242.25, 260.65],\r\n      [87.63, 94.77, 101.9, 112.09, 119.22, 127.38, 138.58, 149.79, 161, 173.23, 187.24, 203.72, 220.2, 236.67, 254.65],\r\n      [98.81, 106.86, 114.9, 126.39, 134.43, 143.63, 156.26, 168.9, 181.54, 195.33, 211.13, 229.71, 248.29, 266.87, 287.14],\r\n      [133.99, 144.89, 155.8, 171.38, 182.29, 194.75, 211.89, 229.03, 246.16, 264.86, 286.28, 311.48, 336.67, 361.86, 389.34],\r\n    ]\r\n  },\r\n  charged: {\r\n    spinning: [68.8, 74.4, 80, 88, 93.6, 100, 108.8, 117.6, 126.4, 136, 147, 159.94, 172.87, 185.81, 199.92],\r\n    final: [124.7, 134.85, 145, 159.5, 169.65, 181.25, 197.2, 213.15, 229.1, 246.5, 266.44, 289.88, 313.33, 336.78, 362.36]\r\n  },\r\n  plunging: {\r\n    dmg: [89.51, 96.79, 104.08, 114.48, 121.77, 130.1, 141.54, 152.99, 164.44, 176.93, 189.42, 201.91, 214.4, 226.89, 239.37],\r\n    low: [178.97, 193.54, 208.11, 228.92, 243.49, 260.13, 283.03, 305.92, 328.81, 353.78, 378.76, 403.73, 428.7, 453.68, 478.65],\r\n    high: [223.55, 241.74, 259.94, 285.93, 304.13, 324.92, 353.52, 382.11, 410.7, 441.89, 473.09, 504.28, 535.47, 566.66, 597.86]\r\n  },\r\n  skill: {\r\n    hit1: [94.4, 101.48, 108.56, 118, 125.08, 132.16, 141.6, 151.04, 160.48, 169.92, 179.36, 188.8, 200.6, 212.4, 224.2],\r\n    hit2: [97.6, 104.92, 112.24, 122, 129.32, 136.64, 146.4, 156.16, 165.92, 175.68, 185.44, 195.2, 207.4, 219.6, 231.8],\r\n    hit3: [128.8, 138.46, 148.12, 161, 170.66, 180.32, 193.2, 206.08, 218.96, 231.84, 244.72, 257.6, 273.7, 289.8, 305.9],\r\n  },\r\n  burst: {\r\n    slashing: [204, 219.3, 234.6, 255, 270.3, 285.6, 306, 326.4, 346.8, 367.2, 387.6, 408, 433.5, 459, 484.5],\r\n    dot: [60, 64.5, 69, 75, 79.5, 84, 90, 96, 102, 108, 114, 120, 127.5, 135, 142.5],\r\n    explosion: [204, 219.3, 234.6, 255, 270.3, 285.6, 306, 326.4, 346.8, 367.2, 387.6, 408, 433.5, 459, 484.5],\r\n  }\r\n}\r\n\r\nconst formula = {\r\n  normal: Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [i, (tlvl, stats) =>\r\n    basicDMGFormula(percentArr[tlvl], stats, \"normal\")])),\r\n  charged: Object.fromEntries(Object.entries(data.charged).map(([name, arr]) =>\r\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"charged\")])),\r\n  plunging: {\r\n    dmg: (tlvl, stats) => basicDMGFormula(data.plunging.dmg[tlvl], stats, \"plunging\"),\r\n    low: (tlvl, stats) => basicDMGFormula(data.plunging.low[tlvl], stats, \"plunging\"),\r\n    high: (tlvl, stats) => basicDMGFormula(data.plunging.high[tlvl], stats, \"plunging\"),\r\n  },\r\n  skill: {\r\n    ...Object.fromEntries(Object.entries(data.skill).map(([name, arr]) =>\r\n      [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"skill\")])),\r\n    hit2b: (tlvl, stats) => basicDMGFormula(data.skill.hit2[tlvl] + 40, stats, \"skill\"),\r\n    hit3b: (tlvl, stats) => basicDMGFormula(data.skill.hit3[tlvl] + 40, stats, \"skill\"),\r\n  },\r\n  burst: Object.fromEntries(Object.entries(data.burst).map(([name, arr]) =>\r\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"burst\")])),\r\n}\r\n\r\nexport default formula\r\nexport {\r\n  data\r\n}","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\r\n\r\nconst data = {\r\n  baseStat: {\r\n    characterHP: [770, 1979, 2555, 3827, 4236, 4872, 5418, 6054, 6463, 7099, 7508, 8144, 8553, 9189],\r\n    characterATK: [20, 53, 68, 102, 113, 130, 144, 161, 172, 189, 200, 216, 227, 244],\r\n    characterDEF: [50, 128, 165, 247, 274, 315, 350, 391, 418, 459, 485, 526, 553, 594]\r\n  },\r\n  specializeStat: {\r\n    key: \"atk_\",\r\n    value: [0, 0, 0, 0, 6, 6, 12, 12, 12, 12, 18, 18, 24, 24]\r\n  },\r\n  normal: {\r\n    hitArr: [\r\n      [44.12, 47.71, 51.3, 56.43, 60.02, 64.13, 69.77, 75.41, 81.05, 87.21, 93.37, 99.52, 105.68, 111.83, 117.99],\r\n      [46.78, 50.59, 54.4, 59.84, 63.65, 68, 73.98, 79.97, 85.95, 92.48, 99.01, 105.54, 112.06, 118.59, 125.12],\r\n      [58.14, 62.87, 67.6, 74.36, 79.09, 84.5, 91.94, 99.37, 106.81, 114.92, 123.03, 131.14, 139.26, 147.37, 155.48],\r\n      [57.71, 62.4, 67.1, 73.81, 78.51, 83.88, 91.26, 98.64, 106.02, 114.07, 122.12, 130.17, 138.23, 146.28, 154.33],\r\n      [72.07, 77.93, 83.8, 92.18, 98.05, 104.75, 113.97, 123.19, 132.4, 142.46, 152.52, 162.57, 172.63, 182.68, 192.74],\r\n    ]\r\n  },\r\n  charged: {\r\n    aimedShot: [43.86, 47.43, 51, 56.1, 59.67, 63.75, 69.36, 74.97, 80.58, 86.7, 92.82, 98.94, 105.06, 111.18, 117.3],\r\n    fullAimedShot: [124, 133.3, 142.6, 155, 164.3, 173.6, 186, 198.4, 210.8, 223.2, 235.6, 248, 263.5, 279, 294.5]\r\n  },\r\n  plunging: {\r\n    dmg: [56.83, 61.45, 66.08, 72.69, 77.31, 82.6, 89.87, 97.14, 104.41, 112.34, 120.27, 128.2, 136.12, 144.05, 151.98],\r\n    low: [113.63, 122.88, 132.13, 145.35, 154.59, 165.17, 179.7, 194.23, 208.77, 224.62, 240.48, 256.34, 272.19, 288.05, 303.9],\r\n    high: [141.93, 153.49, 165.04, 181.54, 193.1, 206.3, 224.45, 242.61, 260.76, 280.57, 300.37, 320.18, 339.98, 359.79, 379.59]\r\n  },\r\n  skill: {\r\n    oz: [88.8, 95.46, 102.12, 111, 117.66, 124.32, 133.2, 142.08, 150.96, 159.84, 168.72, 177.6, 188.7, 199.8, 210.9],\r\n    dmg: [115.44, 124.1, 132.76, 144.3, 152.96, 161.62, 173.16, 184.7, 196.25, 207.79, 219.34, 230.88, 245.31, 259.74, 274.17],\r\n  },\r\n  burst: {\r\n    dmg: [208, 223.6, 239.2, 260, 275.6, 291.2, 312, 332.8, 353.6, 374.4, 395.2, 416, 442, 468, 494],\r\n  }\r\n}\r\n\r\nconst formula = {\r\n  normal: Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [i, (tlvl, stats) =>\r\n    basicDMGFormula(percentArr[tlvl], stats, \"normal\")])),\r\n  charged: {\r\n    aimShot: (tlvl, stats) => basicDMGFormula(data.charged.aimedShot[tlvl], stats, \"charged\"),\r\n    fullAimedShot: (tlvl, stats) => basicDMGFormula(data.charged.fullAimedShot[tlvl], stats, \"charged\", true),\r\n    fullAimedShotOz: (tlvl, stats) => basicDMGFormula(data.charged.fullAimedShot[tlvl] * (152.7 / 100), stats, \"charged\", true),\r\n  },\r\n  plunging: {\r\n    dmg: (tlvl, stats) => basicDMGFormula(data.plunging.dmg[tlvl], stats, \"plunging\"),\r\n    low: (tlvl, stats) => basicDMGFormula(data.plunging.low[tlvl], stats, \"plunging\"),\r\n    high: (tlvl, stats) => basicDMGFormula(data.plunging.high[tlvl], stats, \"plunging\"),\r\n  },\r\n  skill: {\r\n    oz: (tlvl, stats) => basicDMGFormula(data.skill.oz[tlvl], stats, \"skill\"),\r\n    dmg: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl] + (stats.constellation >= 2 ? 200 : 0), stats, \"skill\"),\r\n    activeChar: (tlvl, stats) => basicDMGFormula(30, stats, \"skill\"),\r\n  },\r\n  burst: {\r\n    dmg: (tlvl, stats) => basicDMGFormula(data.burst.dmg[tlvl], stats, \"burst\"),\r\n    addDmg: (tlvl, stats) => basicDMGFormula(222, stats, \"burst\"),\r\n    regen: (tlvl, stats) => [s => 0.2 * s.finalHP * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n  },\r\n  passive2: {\r\n    thunderRetri: (tlvl, stats) => basicDMGFormula(80, stats, \"elemental\"),\r\n  },\r\n  constellation1: {\r\n    jointAttDmg: (tlvl, stats) => basicDMGFormula(22, stats, \"physical\"),\r\n  }\r\n}\r\n\r\nexport default formula\r\nexport {\r\n  data\r\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else if (!conditionalNum && index < 0) { //nothing to change\r\n      return conditionals\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import ConditionalsUtil from \"../../../Util/ConditionalsUtil\"\r\nimport { basicDMGFormula } from \"../../../Util/FormulaUtil\"\r\n\r\nconst data = {\r\n  baseStat: {\r\n    characterHP: [763, 1978, 2632, 3939, 4403, 5066, 5686, 6355, 6820, 7495, 7960, 8643, 9108, 9797],\r\n    characterATK: [26, 68, 90, 135, 151, 173, 194, 217, 233, 256, 272, 295, 311, 335],\r\n    characterDEF: [49, 127, 169, 253, 283, 326, 366, 409, 439, 482, 512, 556, 586, 630]\r\n  },\r\n  specializeStat: {\r\n    key: \"critDMG_\",\r\n    value: [0, 0, 0, 0, 9.6, 9.6, 19.2, 19.2, 19.2, 19.2, 28.8, 28.8, 38.4, 38.4]\r\n  },\r\n  normal: {\r\n    hitArr: [\r\n      [31.73, 34.32, 36.9, 40.59, 43.17, 46.13, 50.18, 54.24, 58.3, 62.73, 67.8, 73.77, 79.74, 85.7, 92.21],\r\n      [35.6, 38.5, 41.4, 45.54, 48.44, 51.75, 56.3, 60.86, 65.41, 70.38, 76.07, 82.77, 89.46, 96.16, 103.46],\r\n      [45.49, 49.2, 52.9, 58.19, 61.89, 66.13, 71.94, 77.76, 83.58, 89.93, 97.2, 105.76, 114.31, 122.87, 132.2],\r\n      [45.49, 49.2, 52.9, 58.19, 61.89, 66.13, 71.94, 77.76, 83.58, 89.93, 97.2, 105.76, 114.31, 122.87, 132.2],\r\n      [48.25, 52.17, 56.1, 61.71, 65.64, 70.13, 76.3, 82.47, 88.64, 95.37, 103.08, 112.16, 121.23, 130.3, 140.19],\r\n      [57.62, 62.31, 67, 73.7, 78.39, 83.75, 91.12, 98.49, 105.86, 113.9, 123.11, 133.95, 144.78, 155.61, 167.43],\r\n    ]\r\n  },\r\n  charged: {\r\n    aimedShot: [43.86, 47.43, 51, 56.1, 59.67, 63.75, 69.36, 74.97, 80.58, 86.7, 92.82, 98.94, 105.06, 111.18, 117.3],\r\n    aimShot1: [124, 133.3, 142.6, 155, 164.3, 173.6, 186, 198.4, 210.8, 223.2, 235.6, 248, 263.5, 279, 294.5],\r\n    frostflake: [128, 137.6, 147.2, 160, 169.6, 179.2, 192, 204.8, 217.6, 230.4, 243.2, 256, 272, 288, 304],\r\n    frostflakeBloom: [217.6, 233.92, 250.24, 272, 288.32, 304.64, 326.4, 348.16, 369.92, 391.68, 413.44, 435.2, 462.4, 489.6, 516.8]\r\n  },\r\n  plunging: {\r\n    dmg: [56.83, 61.45, 66.08, 72.69, 77.31, 82.6, 89.87, 97.14, 104.41, 112.34, 120.27, 128.2, 136.12, 144.05, 151.98],\r\n    low: [113.63, 122.88, 132.13, 145.35, 154.59, 165.17, 179.7, 194.23, 208.77, 224.62, 240.48, 256.34, 272.19, 288.05, 303.9],\r\n    high: [141.93, 153.49, 165.04, 181.54, 193.1, 206.3, 224.45, 242.61, 260.76, 280.57, 300.37, 320.18, 339.98, 359.79, 379.59]\r\n  },\r\n  skill: {\r\n    hp: [120, 129, 138, 150, 159, 168, 180, 192, 204, 216, 228, 240, 255, 270, 285],\r\n    dmg: [132, 141.9, 151.8, 165, 174.9, 184.8, 198, 211.2, 224.4, 237.6, 250.8, 264, 280.5, 297, 313.5],\r\n  },\r\n  burst: {\r\n    dmg: [70.27, 75.54, 80.81, 87.84, 93.11, 98.38, 105.41, 112.44, 119.46, 126.49, 133.52, 140.54, 149.33, 158.11, 166.9],\r\n  }\r\n}\r\n\r\nconst formula = {\r\n  normal: Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [i, (tlvl, stats) =>\r\n    basicDMGFormula(percentArr[tlvl], stats, \"normal\")])),\r\n  charged: {\r\n    aimShot: (tlvl, stats) => basicDMGFormula(data.charged.aimedShot[tlvl], stats, \"charged\"),\r\n    aimShot1: (tlvl, stats) => basicDMGFormula(data.charged.aimShot1[tlvl], stats, \"charged\", true),\r\n    frostflake: (tlvl, stats) => {\r\n      if (stats.hitMode === \"avgHit\") {\r\n        let { talentConditionals = [] } = stats\r\n        let conditionalNum = ConditionalsUtil.getConditionalNum(talentConditionals, { srcKey: \"auto\", srcKey2: \"UndividedHeart\" })\r\n        if (conditionalNum) {\r\n          const val = data.charged.frostflake[tlvl] / 100\r\n          //cryo_charged_hit or cryo_melt_charged_hit\r\n          const statKey = `cryo${stats.reactionMode === \"cryo_melt\" ? \"_melt\" : \"\"}_charged_hit`\r\n          //cryo charged atk hit * (1 + min(20% + critRate, 100) critDmg_)\r\n          return [s => val * s[statKey] * (1 + Math.min(20 + s.critRate_ + s.charged_critRate_, 100) * s.critDMG_ / 10000), [statKey, \"critRate_\", \"critDMG_\", \"charged_critRate_\"]]\r\n        }\r\n      }\r\n      return basicDMGFormula(data.charged.frostflake[tlvl], stats, \"charged\", true)\r\n    },\r\n    frostflakeBloom: (tlvl, stats) => {\r\n      if (stats.hitMode === \"avgHit\") {\r\n        let { talentConditionals = [] } = stats\r\n        let conditionalNum = ConditionalsUtil.getConditionalNum(talentConditionals, { srcKey: \"auto\", srcKey2: \"UndividedHeart\" })\r\n        if (conditionalNum) {\r\n          const val = data.charged.frostflakeBloom[tlvl] / 100\r\n          //cryo_charged_hit or cryo_melt_charged_hit\r\n          const statKey = `cryo${stats.reactionMode === \"cryo_melt\" ? \"_melt\" : \"\"}_charged_hit`\r\n          //cryo charged atk hit * (1 + min(20% + critRate, 100) critDmg_)\r\n          return [s => val * s[statKey] * (1 + Math.min(20 + s.critRate_ + s.charged_critRate_, 100) * s.critDMG_ / 10000), [statKey, \"critRate_\", \"critDMG_\", \"charged_critRate_\"]]\r\n        }\r\n      }\r\n      return basicDMGFormula(data.charged.frostflakeBloom[tlvl], stats, \"charged\", true)\r\n    },\r\n  },\r\n  plunging: {\r\n    dmg: (tlvl, stats) => basicDMGFormula(data.plunging.dmg[tlvl], stats, \"plunging\"),\r\n    low: (tlvl, stats) => basicDMGFormula(data.plunging.low[tlvl], stats, \"plunging\"),\r\n    high: (tlvl, stats) => basicDMGFormula(data.plunging.high[tlvl], stats, \"plunging\"),\r\n  },\r\n  skill: {\r\n    hp: (tlvl) => {\r\n      const hp = data.skill.hp[tlvl] / 100\r\n      return [(s) => hp * s.finalHP, [\"finalHP\"]]\r\n    },\r\n    dmg: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl], stats, \"skill\"),\r\n    detonationDMG: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl], stats, \"skill\"),\r\n  },\r\n  burst: {\r\n    dmg: (tlvl, stats) => basicDMGFormula(data.burst.dmg[tlvl], stats, \"burst\"),\r\n  }\r\n}\r\n\r\nexport default formula\r\nexport {\r\n  data\r\n}","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\r\n\r\nexport const data = {\r\n  baseStat: {\r\n    characterHP: [1211, 3141, 4179, 6253, 6990, 8042, 9026, 10089, 10826, 11899, 12637, 13721, 14459, 15552],\r\n    characterATK: [8, 21, 29, 43, 48, 55, 62, 69, 74, 81, 86, 94, 99, 106],\r\n    characterDEF: [68, 177, 235, 352, 394, 453, 508, 568, 610, 670, 712, 773, 815, 876]\r\n  },\r\n  specializeStat: {\r\n    key: \"critDMG_\",\r\n    value: [0, 0, 0, 0, 9.6, 9.6, 19.2, 19.2, 19.2, 19.2, 28.8, 28.8, 38.4, 38.4]\r\n  },\r\n  normal: {\r\n    hitArr: [\r\n      [46.89, 50.08, 53.28, 57.54, 60.74, 64.47, 69.26, 74.06, 78.85, 83.65, 88.44, 93.24, 98.04, 102.83, 107.63],\r\n      [48.25, 51.54, 54.83, 59.22, 62.51, 66.35, 71.28, 76.22, 81.15, 86.09, 91.02, 95.96, 100.89, 105.83, 110.76],\r\n      [61.05, 65.21, 69.38, 74.93, 79.09, 83.94, 90.19, 96.43, 102.68, 108.92, 115.16, 121.41, 127.65, 133.89, 140.14],\r\n      [65.64, 70.12, 74.59, 80.56, 85.03, 90.26, 96.97, 103.68, 110.4, 117.11, 123.82, 130.54, 137.25, 143.96, 150.68],\r\n      [33.27, 35.54, 37.81, 40.84, 43.1, 45.75, 49.15, 52.56, 55.96, 59.36, 62.77, 66.17, 69.57, 72.98, 76.38],//5.1\r\n      [35.2, 37.6, 40, 43.2, 45.6, 48.4, 52, 55.6, 59.2, 62.8, 66.4, 70, 73.6, 77.2, 80.8],//5.2\r\n      [85.96, 91.82, 97.68, 105.49, 111.36, 118.19, 126.98, 135.78, 144.57, 153.36, 162.15, 170.94, 179.73, 188.52, 197.31],//6\r\n    ],\r\n  },\r\n  charged: {\r\n    dmg: [135.96, 145.23, 154.5, 166.86, 176.13, 186.95, 200.85, 214.76, 228.66, 242.57, 256.47, 270.38, 284.28, 298.19, 312.09],\r\n  },\r\n  plunging: {\r\n    dmg: [65.42, 69.88, 74.34, 80.29, 84.75, 89.95, 96.64, 103.33, 110.02, 116.71, 123.4, 130.1, 136.79, 143.48, 150.17],\r\n    low: [130.81, 139.73, 148.65, 160.54, 169.46, 179.86, 193.24, 206.62, 220, 233.38, 246.76, 260.13, 273.51, 286.89, 300.27],\r\n    high: [163.39, 174.53, 185.67, 200.52, 211.66, 224.66, 241.37, 258.08, 274.79, 291.5, 308.21, 324.92, 341.63, 358.34, 375.05],\r\n  },\r\n  skill: {\r\n    atk_inc: [3.84, 4.07, 4.3, 4.6, 4.83, 5.06, 5.36, 5.66, 5.96, 6.26, 6.56, 6.85, 7.15, 7.45, 7.75],\r\n    dmg: [64, 68.8, 73.6, 80, 84.8, 89.6, 96, 102.4, 108.8, 115.2, 121.6, 128, 136, 144, 152],  \r\n  },\r\n  burst: {\r\n    dmg: [303.27, 321.43, 339.59, 363.2, 381.36, 399.52, 423.13, 446.74, 470.34, 493.95, 517.56, 541.17, 564.78, 588.38, 611.99],\r\n    low_dmg: [379.09, 401.79, 424.49, 454, 476.7, 499.4, 528.91, 558.42, 587.93, 617.44, 646.95, 676.46, 705.97, 735.48, 764.99],\r\n    regen: [6.26, 6.64, 7.01, 7.5, 7.88, 8.25, 8.74, 9.23, 9.71, 10.2, 10.69, 11.18, 11.66, 12.15, 12.64],\r\n    low_regen: [8.35, 8.85, 9.35, 10, 10.5, 11, 11.65, 12.3, 12.95, 13.6, 14.25, 14.9, 15.55, 16.2, 16.85]  \r\n  }\r\n}\r\nconst formula = {\r\n  normal: Object.fromEntries(data.normal.hitArr.map((arr, i) =>\r\n    [i, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"normal\")])),\r\n  charged: {\r\n    dmg: (tlvl, stats) => basicDMGFormula(data.charged.dmg[tlvl], stats, \"charged\"),\r\n  },\r\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([name, arr]) =>\r\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\r\n  skill: {\r\n    atk_inc: (tlvl, stats) => {\r\n      const val = data.skill.atk_inc[tlvl] / 100\r\n      // TODO Check if we need to cap the bonus here or elsewhere.\r\n      return [s => Math.min(val * s.finalHP, 4 * s.baseATK), [\"finalHP\", \"baseATK\"]]\r\n    },\r\n    dmg: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl], stats, \"skill\"),\r\n  },\r\n  burst: {\r\n    dmg: (tlvl, stats) => basicDMGFormula(data.burst.dmg[tlvl], stats, \"burst\"),\r\n    low_dmg: (tlvl, stats) => basicDMGFormula(data.burst.low_dmg[tlvl], stats, \"burst\"),\r\n    regen: (tlvl, stats) => {\r\n      const val = data.burst.regen[tlvl] / 100\r\n      return [s => val * s.finalHP * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n    },\r\n    low_regen: (tlvl, stats) => {\r\n      const val = data.burst.low_regen[tlvl] / 100\r\n      return [s => val * s.finalHP * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\r\n    },\r\n  },\r\n}\r\nexport default formula","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\r\n\r\nexport const data = {\r\n  baseStat: {\r\n    characterHP: [1020, 2646, 3521, 5268, 5889, 6776, 7604, 8500, 9121, 10025, 10647, 11561, 12182, 13103],\r\n    characterATK: [25, 65, 87, 130, 145, 167, 187, 209, 225, 247, 262, 285, 300, 323],\r\n    characterDEF: [62, 161, 215, 321, 359, 413, 464, 519, 556, 612, 649, 705, 743, 799]\r\n  },\r\n  specializeStat: {\r\n    key: \"critDMG_\",\r\n    value: [0, 0, 0, 0, 9.6, 9.6, 19.2, 19.2, 19.2, 19.2, 28.8, 28.8, 38.4, 38.4]\r\n  },\r\n  normal: {\r\n    hitArr: [\r\n      [41.02, 44.36, 47.7, 52.47, 55.81, 59.62, 64.87, 70.12, 75.37, 81.09, 86.81, 92.54, 98.26, 103.99, 109.71],\r\n      [41.02, 44.36, 47.7, 52.47, 55.81, 59.62, 64.87, 70.12, 75.37, 81.09, 86.81, 92.54, 98.26, 103.99, 109.71],\r\n      [54.44, 58.87, 63.3, 69.63, 74.06, 79.13, 86.09, 93.05, 100.01, 107.61, 115.21, 122.8, 130.4, 137.99, 145.59],\r\n      [31.48, 34.04, 36.6, 40.26, 42.82, 45.75, 49.78, 53.8, 57.83, 62.22, 66.61, 71, 75.4, 79.79, 84.18],\r\n      [34.4, 37.2, 40, 44, 46.8, 50, 54.4, 58.8, 63.2, 68, 72.8, 77.6, 82.4, 87.2, 92],\r\n      [66.99, 72.45, 77.9, 85.69, 91.14, 97.38, 105.94, 114.51, 123.08, 132.43, 141.78, 151.13, 160.47, 169.82, 179.17],\r\n    ],\r\n  },\r\n  charged: {\r\n    hit1: [76.8, 83.05, 89.3, 98.23, 104.48, 111.63, 121.45, 131.27, 141.09, 151.81, 162.53, 173.24, 183.96, 194.67, 205.39],\r\n    hit2: [86, 93, 100, 110, 117, 125, 136, 147, 158, 170, 182, 194, 206, 218, 230],\r\n  },\r\n  plunging: {\r\n    dmg: [63.93, 69.14, 74.34, 81.77, 86.98, 92.93, 101.1, 109.28, 117.46, 126.38, 135.3, 144.22, 153.14, 162.06, 170.98],\r\n    low: [127.84, 138.24, 148.65, 163.51, 173.92, 185.81, 202.16, 218.51, 234.86, 252.7, 270.54, 288.38, 306.22, 324.05, 341.89],\r\n    high: [159.68, 172.67, 185.67, 204.24, 217.23, 232.09, 252.51, 272.93, 293.36, 315.64, 337.92, 360.2, 382.48, 404.76, 427.04],\r\n  },\r\n  skill: {\r\n    stilleto: [50.4, 54.18, 57.96, 63, 66.78, 70.56, 75.6, 80.64, 85.68, 90.72, 95.76, 100.8, 107.1, 113.4, 119.7],\r\n    slashing: [168, 180.6, 193.2, 210, 222.6, 235.2, 252, 268.8, 285.6, 302.4, 319.2, 336, 357, 378, 399],\r\n    thunderclasp_slash: [84, 90.3, 96.6, 105, 111.3, 117.6, 126, 134.4, 142.8, 151.2, 159.6, 168, 178.5, 189, 199.5],\r\n  },\r\n  burst: {\r\n    skill: [88, 94.6, 101.2, 110, 116.6, 123.2, 132, 140.8, 149.6, 158.4, 167.2, 176, 187, 198, 209],\r\n    consec_slash: [24, 25.8, 27.6, 30, 31.8, 33.6, 36, 38.4, 40.8, 43.2, 45.6, 48, 51, 54, 57],\r\n    last: [188.8, 202.96, 217.12, 236, 250.16, 264.32, 283.2, 302.08, 320.96, 339.84, 358.72, 377.6, 401.2, 424.8, 448.4],\r\n  }\r\n}\r\nconst formula = {\r\n  normal: Object.fromEntries(data.normal.hitArr.map((arr, i) =>\r\n    [i, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"normal\")])),\r\n  charged: Object.fromEntries(Object.entries(data.charged).map(([name, arr]) =>\r\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"charged\")])),\r\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([name, arr]) =>\r\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\r\n  skill: {\r\n    stilleto: (tlvl, stats) => basicDMGFormula(data.skill.stilleto[tlvl], stats, \"skill\"),\r\n    slashing: (tlvl, stats) => basicDMGFormula(data.skill.slashing[tlvl], stats, \"skill\"),\r\n    thunderclap_slashing: (tlvl, stats) => basicDMGFormula(data.skill.thunderclasp_slash[tlvl] * 2, stats, \"skill\"),\r\n  },\r\n  burst: {\r\n    skill: (tlvl, stats) => basicDMGFormula(data.burst.skill[tlvl], stats, \"burst\"),\r\n    consec_slash: (tlvl, stats) => basicDMGFormula(data.burst.consec_slash[tlvl] * 8, stats, \"burst\"),\r\n    last: (tlvl, stats) => basicDMGFormula(data.burst.last[tlvl], stats, \"burst\"),\r\n  }\r\n}\r\nexport default formula","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\r\n\r\nexport const data = {\r\n  baseStat: {\r\n    characterHP: [810, 2102, 2797, 4185, 4678, 5383, 6041, 6752, 7246, 7964, 8458, 9184, 9677, 10409],\r\n    characterATK: [22, 58, 77, 115, 129, 148, 167, 186, 200, 220, 233, 253, 267, 287],\r\n    characterDEF: [51, 132, 176, 263, 294, 338, 379, 424, 455, 500, 531, 576, 607, 653]\r\n  },\r\n  specializeStat: {\r\n    key: \"enerRech_\",\r\n    value: [0, 0, 0, 0, 8, 8, 16, 16, 16, 16, 24, 24, 32, 32]\r\n  },\r\n  normal: {\r\n    hitArr: [\r\n      [37.6, 40.42, 43.24, 47, 49.82, 52.64, 56.4, 60.16, 63.92, 67.68, 71.44, 75.2, 79.9, 84.6, 89.3],\r\n      [36, 38.7, 41.4, 45, 47.7, 50.4, 54, 57.6, 61.2, 64.8, 68.4, 72, 76.5, 81, 85.5],\r\n      [44.8, 48.16, 51.52, 56, 59.36, 62.72, 67.2, 71.68, 76.16, 80.64, 85.12, 89.6, 95.2, 100.8, 106.4],\r\n      [56.16, 60.37, 64.58, 70.2, 74.41, 78.62, 84.24, 89.86, 95.47, 101.09, 106.7, 112.32, 119.34, 126.36, 133.38],\r\n    ],\r\n  },\r\n  charged: {\r\n    hit: [149.72, 160.95, 172.18, 187.15, 198.38, 209.61, 224.58, 239.55, 254.52, 269.5, 285.07, 305.43, 325.79, 346.15, 366.51],\r\n  },\r\n  plunging: {\r\n    dmg: [56.83, 61.45, 66.08, 72.69, 77.31, 82.6, 89.87, 97.14, 104.41, 112.34, 120.27, 128.2, 136.12, 144.05, 151.98],\r\n    low: [113.63, 122.88, 132.13, 145.35, 154.59, 165.17, 179.7, 194.23, 208.77, 224.62, 240.48, 256.34, 272.19, 288.05, 303.9],\r\n    high: [141.93, 153.49, 165.04, 181.54, 193.1, 206.3, 224.45, 242.61, 260.76, 280.57, 300.37, 320.18, 339.98, 359.79, 379.59],\r\n  },\r\n  skill: {\r\n    dmg: [132.8, 142.76, 152.72, 166, 175.96, 185.92, 199.2, 212.48, 225.76, 239.04, 252.32, 265.6, 282.2, 298.8, 315.4],\r\n    dot: [32, 34.4, 36.8, 40, 42.4, 44.8, 48, 51.2, 54.4, 57.6, 60.8, 64, 68, 72, 76],  \r\n  },\r\n  burst: {\r\n    bubble_explosion: [442.4, 475.58, 508.76, 553, 586.18, 619.36, 663.6, 707.84, 752.08, 796.32, 840.56, 884.8, 940.1, 995.4, 1050.7],\r\n    dmg_: [42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 60, 60, 60, 60, 60],\r\n    omen_duration: [4, 4, 4, 4.5, 4.5, 4.5, 5, 5, 5, 5, 5, 5, 5, 5, 5]  \r\n  }\r\n}\r\nconst formula = {\r\n  normal: Object.fromEntries(data.normal.hitArr.map((arr, i) =>\r\n    [i, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"normal\")])),\r\n  charged: Object.fromEntries(Object.entries(data.charged).map(([name, arr]) =>\r\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"charged\")])),\r\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([name, arr]) =>\r\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\r\n  skill: Object.fromEntries(Object.entries(data.skill).map(([name, arr]) =>\r\n      [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"skill\")])),\r\n  burst: {\r\n    bubble_explosion: (tlvl, stats) => basicDMGFormula(data.burst.bubble_explosion[tlvl], stats, \"burst\")\r\n  },\r\n  passive1: {\r\n    hit: (tlvl, stats) => basicDMGFormula(data.skill.dmg[stats.talentLevelKeys.skill] / 2, stats, \"skill\"),\r\n  }\r\n}\r\nexport default formula","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\r\n\r\nexport const data = {\r\n  baseStat: {\r\n    characterHP: [821, 2108, 2721, 4076, 4512, 5189, 5770, 6448, 6884, 7561, 7996, 8674, 9110, 9787],\r\n    characterATK: [18, 46, 59, 89, 98, 113, 125, 140, 150, 164, 174, 188, 198, 212],\r\n    characterDEF: [48, 123, 159, 239, 264, 304, 338, 378, 403, 443, 468, 508, 533, 573]\r\n  },\r\n  specializeStat: {\r\n    key: \"geo_dmg_\",\r\n    value: [0, 0, 0, 0, 6, 6, 12, 12, 12, 12, 18, 18, 24, 24]\r\n  },\r\n  normal: {\r\n    hit: [28, 30.1, 32.2, 35, 37.1, 39.2, 42, 44.8, 47.6, 50.4, 53.31, 57.12, 60.93, 64.74, 68.54]\r\n  },\r\n  charged: {\r\n    dmg: [174.08, 187.14, 200.19, 217.6, 230.66, 243.71, 261.12, 278.53, 295.94, 313.34, 331.45, 355.12, 378.8, 402.47, 426.15],\r\n    jade: [49.6, 53.32, 57.04, 62, 65.72, 69.44, 74.4, 79.36, 84.32, 89.28, 94.44, 101.18, 107.93, 114.68, 121.42],\r\n  },\r\n  plunging: {\r\n    dmg: [56.83, 61.45, 66.08, 72.69, 77.31, 82.6, 89.87, 97.14, 104.41, 112.34, 120.27, 128.2, 136.12, 144.05, 151.98],\r\n    low: [113.63, 122.88, 132.13, 145.35, 154.59, 165.17, 179.7, 194.23, 208.77, 224.62, 240.48, 256.34, 272.19, 288.05, 303.9],\r\n    high: [141.93, 153.49, 165.04, 181.54, 193.1, 206.3, 224.45, 242.61, 260.76, 280.57, 300.37, 320.18, 339.98, 359.79, 379.59]\r\n  },\r\n  skill: {\r\n    inheri_hp: [50.1, 53.1, 56.1, 60, 63, 66, 69.9, 73.8, 77.7, 81.6, 85.5, 89.4, 93.3, 97.2, 101.1],\r\n    dmg: [230.4, 247.68, 264.96, 288, 305.28, 322.56, 345.6, 368.64, 391.68, 414.72, 437.76, 460.8, 489.6, 518.4, 547.2],  \r\n  },\r\n  burst: {\r\n    dmg_per_gem: [86.96, 93.48, 100, 108.7, 115.22, 121.74, 130.44, 139.14, 147.83, 156.53, 165.22, 173.92, 184.79, 195.66, 206.53],\r\n  }\r\n}\r\nconst formula = {\r\n  normal: {\r\n    hit: (tlvl, stats) => basicDMGFormula(data.normal.hit[tlvl], stats, \"normal\")\r\n  },\r\n  charged: Object.fromEntries(Object.entries(data.charged).map(([name, arr]) =>\r\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"charged\")])),\r\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([name, arr]) =>\r\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\r\n  skill: {\r\n    inheri_hp: (tlvl, stats) => {\r\n      const val = data.skill.inheri_hp[tlvl] / 100\r\n      return [s => val * s.finalHP, [\"finalHP\"]]\r\n    },\r\n    dmg: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl], stats, \"skill\")\r\n  },\r\n  burst: {\r\n    dmg_per_gem: (tlvl, stats) => basicDMGFormula(data.burst.dmg_per_gem[tlvl], stats, \"burst\"),\r\n  },\r\n}\r\nexport default formula","import { getTalentStatKey } from \"../../../Build/Build\"\r\nimport { basicDMGFormula } from \"../../../Util/FormulaUtil\"\r\n\r\nexport const data = {\r\n  baseStat: {\r\n    characterHP: [1012, 2600, 3356, 5027, 5564, 6400, 7117, 7953, 8490, 9325, 9862, 10698, 11235, 12071],\r\n    characterATK: [16, 41, 53, 80, 88, 101, 113, 126, 134, 148, 156, 169, 178, 191],\r\n    characterDEF: [67, 172, 222, 333, 368, 423, 471, 526, 562, 617, 652, 708, 743, 799]\r\n  },\r\n  specializeStat: {\r\n    key: \"def_\",\r\n    value: [0, 0, 0, 0, 7.5, 7.5, 15, 15, 15, 15, 22.5, 22.5, 30, 30]\r\n  },\r\n  normal: {\r\n    hitArr: [\r\n      [79.12, 85.56, 92, 101.2, 107.64, 115, 125.12, 135.24, 145.36, 156.4, 167.44, 178.48, 189.52, 200.56, 211.6],\r\n      [73.36, 79.33, 85.3, 93.83, 99.8, 106.63, 116.01, 125.39, 134.77, 145.01, 155.25, 165.48, 175.72, 185.95, 196.19],\r\n      [86.26, 93.28, 100.3, 110.33, 117.35, 125.38, 136.41, 147.44, 158.47, 170.51, 182.55, 194.58, 206.62, 218.65, 230.69],\r\n      [113.43, 122.67, 131.9, 145.09, 154.32, 164.88, 179.38, 193.89, 208.4, 224.23, 240.06, 255.89, 271.71, 287.54, 303.37],    \r\n    ]\r\n  },\r\n  charged: {\r\n    spinning: [50.74, 54.87, 59, 64.9, 69.03, 73.75, 80.24, 86.73, 93.22, 100.3, 107.38, 114.46, 121.54, 128.62, 135.7],\r\n    final: [90.47, 97.84, 105.2, 115.72, 123.08, 131.5, 143.07, 154.64, 166.22, 178.84, 191.46, 204.09, 216.71, 229.34, 241.96],\r\n  },\r\n  plunging: {\r\n    dmg: [74.59, 80.66, 86.73, 95.4, 101.47, 108.41, 117.95, 127.49, 137.03, 147.44, 157.85, 168.26, 178.66, 189.07, 199.48],\r\n    low: [149.14, 161.28, 173.42, 190.77, 202.91, 216.78, 235.86, 254.93, 274.01, 294.82, 315.63, 336.44, 357.25, 378.06, 398.87],\r\n    high: [186.29, 201.45, 216.62, 238.28, 253.44, 270.77, 294.6, 318.42, 342.25, 368.25, 394.24, 420.23, 446.23, 472.22, 498.21],\r\n  },\r\n  skill: {\r\n    skill_dmg: [120, 129, 138, 150, 159, 168, 180, 192, 204, 216, 228, 240, 255, 270, 285],\r\n    shield_def: [160, 172, 184, 200, 212, 224, 240, 256, 272, 288, 304, 320, 340, 360, 380],\r\n    shield_flat: [770, 847, 930, 1020, 1116, 1219, 1328, 1443, 1565, 1694, 1828, 1970, 2117, 2271, 2431],\r\n    heal_def: [21.28, 22.88, 24.47, 26.6, 28.2, 29.79, 31.92, 34.05, 36.18, 38.3, 40.43, 42.56, 45.22, 47.88, 50.54],\r\n    heal_flat: [103, 113, 124, 136, 149, 163, 177, 193, 209, 226, 244, 263, 282, 303, 324],\r\n    heal_trigger: [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 59, 60, 60, 60, 60],  \r\n  },\r\n  burst: {\r\n    burst_dmg: [67.2, 72.24, 77.28, 84, 89.04, 94.08, 100.8, 107.52, 114.24, 120.96, 127.68, 134.4, 142.8, 151.2, 159.6],\r\n    skill_dmg: [92.8, 99.76, 106.72, 116, 122.96, 129.92, 139.2, 148.48, 157.76, 167.04, 176.32, 185.6, 197.2, 208.8, 220.4],\r\n    bonus: [40, 43, 46, 50, 53, 56, 60, 64, 68, 72, 76, 80, 85, 90, 95],  \r\n  }\r\n}\r\nconst formula = {\r\n  normal: Object.fromEntries(data.normal.hitArr.map((arr, i) =>\r\n    [i, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"normal\")])),\r\n  charged: Object.fromEntries(Object.entries(data.charged).map(([name, arr]) =>\r\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"charged\")])),\r\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([name, arr]) =>\r\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\r\n  skill: {\r\n    skill_dmg: (tlvl, stats) => {\r\n      const percent = data.skill.skill_dmg[tlvl] / 100, key = getTalentStatKey(\"skill\", stats) + \"_multi\"\r\n      return [s => percent * s[key] * s.finalDEF, [key, \"finalDEF\"]]\r\n    },\r\n    shield: (tlvl, stats) => {\r\n      const percent = data.skill.shield_def[tlvl] / 100, flat = data.skill.shield_flat[tlvl]\r\n      return [s => percent * s.finalDEF + flat, [\"finalDEF\"]]\r\n    },\r\n    heal: (tlvl, stats) => {\r\n      const percent = data.skill.heal_def[tlvl] / 100, flat = data.skill.heal_flat[tlvl]\r\n      return [s => (percent * s.finalDEF + flat) * s.heal_multi, [\"finalDEF\", \"heal_multi\"]]\r\n    },\r\n  },\r\n  burst: {\r\n    burst_dmg: (tlvl, stats) => basicDMGFormula(data.burst.burst_dmg[tlvl], stats, \"burst\"),\r\n    skill_dmg: (tlvl, stats) => basicDMGFormula(data.burst.skill_dmg[tlvl], stats, \"skill\"),\r\n    bonus: (tlvl, stats) => {\r\n      const val = (data.burst.bonus[tlvl] + (stats.constellation >= 6 ? 50 : 0)) / 100\r\n      return [s => val * s.finalDEF, [\"finalDEF\"]]\r\n    }\r\n  }\r\n}\r\nexport default formula","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\r\n\r\nexport const data = {\r\n  baseStat: {\r\n    characterHP: [820, 2127, 2830, 4234, 4734, 5446, 6112, 6832, 7331, 8058, 8557, 9292, 9791, 10531],\r\n    characterATK: [20, 53, 71, 106, 118, 136, 153, 171, 183, 201, 214, 232, 245, 263],\r\n    characterDEF: [52, 135, 180, 269, 301, 346, 388, 434, 465, 512, 543, 590, 622, 669],\r\n  },\r\n  specializeStat: {\r\n    key: \"enerRech_\",\r\n    value: [0, 0, 0, 0, 8, 8, 16, 16, 16, 16, 24, 24, 32, 32],\r\n  },\r\n  normal: {\r\n    hitArr: [\r\n      [20.38, 22.04, 23.7, 26.07, 27.73, 29.63, 32.23, 34.84, 37.45, 40.29, 43.55, 47.38, 51.21, 55.05, 59.23],//1\r\n      [44.38, 47.99, 51.6, 56.76, 60.37, 64.5, 70.18, 75.85, 81.53, 87.72, 94.82, 103.16, 111.5, 119.85, 128.95],//2\r\n      [52.37, 56.64, 60.9, 66.99, 71.25, 76.13, 82.82, 89.52, 96.22, 103.53, 111.9, 121.75, 131.6, 141.45, 152.19],//3\r\n      [26.06, 28.18, 30.3, 33.33, 35.45, 37.87, 41.21, 44.54, 47.87, 51.51, 55.68, 60.58, 65.48, 70.37, 75.72],//4\r\n      [50.65, 54.78, 58.9, 64.79, 68.91, 73.63, 80.1, 86.58, 93.06, 100.13, 108.23, 117.75, 127.28, 136.8, 147.19],//5\r\n      [70.95, 76.73, 82.5, 90.75, 96.53, 103.13, 112.2, 121.28, 130.35, 140.25, 151.59, 164.93, 178.27, 191.61, 206.17],//6\r\n    ]\r\n  },\r\n  charged: {\r\n    hit: [43.86, 47.43, 51, 56.1, 59.67, 63.75, 69.36, 74.97, 80.58, 86.7, 93.71, 101.96, 110.21, 118.45, 127.45],\r\n    full: [124, 133.3, 142.6, 155, 164.3, 173.6, 186, 198.4, 210.8, 223.2, 236.1, 252.96, 269.82, 286.69, 303.55],\r\n  },\r\n  plunging: {\r\n    dmg: [56.83, 61.45, 66.08, 72.69, 77.31, 82.6, 89.87, 97.14, 104.41, 112.34, 120.27, 128.2, 136.12, 144.05, 151.98],\r\n    low: [113.63, 122.88, 132.13, 145.35, 154.59, 165.17, 179.7, 194.23, 208.77, 224.62, 240.48, 256.34, 272.19, 288.05, 303.9],\r\n    high: [141.93, 153.49, 165.04, 181.54, 193.1, 206.3, 224.45, 242.61, 260.76, 280.57, 300.37, 320.18, 339.98, 359.79, 379.59],\r\n  },\r\n  skill: {\r\n    press: [276, 296.7, 317.4, 345, 365.7, 386.4, 414, 441.6, 469.2, 496.8, 524.4, 552, 586.5, 621, 655.5],\r\n    hold: [380, 408.5, 437, 475, 503.5, 532, 570, 608, 646, 684, 722, 760, 807.5, 855, 902.5],\r\n  },\r\n  burst: {\r\n    hit: [37.6, 40.42, 43.24, 47, 49.82, 52.64, 56.4, 60.16, 63.92, 67.68, 71.44, 75.2, 79.9, 84.6, 89.3],\r\n  }\r\n}\r\nconst formula = {\r\n  normal: Object.fromEntries(data.normal.hitArr.map((arr, i) =>\r\n    [i, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"normal\")])),\r\n  charged: {\r\n    hit: (tlvl, stats) => basicDMGFormula(data.charged.hit[tlvl], stats, \"charged\"),\r\n    full: (tlvl, stats) => basicDMGFormula(data.charged.full[tlvl], stats, \"charged\", true),\r\n    hit_bonus: (tlvl, stats) => basicDMGFormula(data.charged.hit[tlvl] * 0.33, stats, \"charged\"),\r\n    full_bonus: (tlvl, stats) => basicDMGFormula(data.charged.full[tlvl] * 0.33, stats, \"charged\", true),\r\n  },\r\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([name, arr]) =>\r\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\r\n  skill: Object.fromEntries(Object.entries(data.skill).map(([name, arr]) => \r\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"skill\")])),\r\n  burst: Object.fromEntries([\r\n    ...Object.entries(data.burst).map(([name, arr]) =>\r\n      [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"burst\")]),\r\n    ...Object.entries(data.burst).flatMap(([name, arr]) =>\r\n      ([\"hydro\", \"pyro\", \"cryo\", \"electro\"]).map((ele) =>\r\n        [`${ele}_${name}`, (tlvl, stats) => [s=>(arr[tlvl] / 2 / 100) * stats[`${ele}_burst_${stats.hitMode}`], [`${ele}_burst_${stats.hitMode}`]]])),//not optimizationTarget, dont need to precompute\r\n  ]),\r\n}\r\nexport default formula","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\r\n\r\nexport const data = {\r\n  baseStat:  {\r\n    characterHP: [991, 2572, 3422, 5120, 5724, 6586, 7391, 8262, 8866, 9744, 10348, 11236, 11840, 12736],\r\n    characterATK: [27, 71, 94, 140, 157, 181, 203, 227, 243, 267, 284, 308, 325, 349],\r\n    characterDEF: [62, 161, 215, 321, 359, 413, 464, 519, 556, 612, 649, 705, 743, 799]\r\n  },\r\n  specializeStat: {\r\n    key: \"critRate_\",\r\n    value: [0, 0, 0, 0, 4.8, 4.8, 9.6, 9.6, 9.6, 9.6, 14.4, 14.4, 19.2, 19.2]\r\n  },\r\n  normal: {\r\n    hitArr: [\r\n      [27.54, 29.42, 31.3, 33.8, 35.68, 37.87, 40.69, 43.51, 46.32, 49.14, 51.96, 54.78, 57.59, 60.41, 63.23],//1 hits twice\r\n      [56.94, 60.82, 64.7, 69.88, 73.76, 78.29, 84.11, 89.93, 95.76, 101.58, 107.4, 113.23, 119.05, 124.87, 130.69],//2\r\n      [68.55, 73.23, 77.9, 84.13, 88.81, 94.26, 101.27, 108.28, 115.29, 122.3, 129.31, 136.33, 143.34, 150.35, 157.36],//3\r\n      [37.66, 40.23, 42.8, 46.22, 48.79, 51.79, 55.64, 59.49, 63.34, 67.2, 71.05, 74.9, 78.75, 82.6, 86.46],//4 hits twice\r\n      [71.54, 76.42, 81.3, 87.8, 92.68, 98.37, 105.69, 113.01, 120.32, 127.64, 134.96, 142.28, 149.59, 156.91, 164.23],\r\n      [95.83, 102.37, 108.9, 117.61, 124.15, 131.77, 141.57, 151.37, 161.17, 170.97, 180.77, 190.58, 200.38, 210.18, 219.98],\r\n    ]\r\n  },\r\n  charged: { \r\n    hit: [121.09, 129.34, 137.6, 148.61, 156.86, 166.5, 178.88, 191.26, 203.65, 216.03, 228.42, 240.8, 253.18, 265.57, 277.95],\r\n  },\r\n  plunging: {\r\n    dmg: [81.83, 88.49, 95.16, 104.67, 111.33, 118.94, 129.41, 139.88, 150.35, 161.76, 173.18, 184.6, 196.02, 207.44, 218.86],\r\n    low: [163.63, 176.95, 190.27, 209.3, 222.62, 237.84, 258.77, 279.7, 300.63, 323.46, 346.29, 369.12, 391.96, 414.79, 437.62],\r\n    high: [204.39, 221.02, 237.66, 261.42, 278.06, 297.07, 323.21, 349.36, 375.5, 404.02, 432.54, 461.06, 489.57, 518.09, 546.61],\r\n  },\r\n  skill: {\r\n    hit: [252.8, 271.76, 290.72, 316, 334.96, 353.92, 379.2, 404.48, 429.76, 455.04, 480.32, 505.6, 537.2, 568.8, 600.4],\r\n  },\r\n  burst: {\r\n    atk_bonus: [58.45, 61.95, 65.45, 70, 73.5, 77, 81.55, 86.1, 90.65, 95.2, 99.75, 104.3, 108.85, 113.4, 117.95],\r\n    drain: [3, 3, 3, 2.5, 2.5, 2.5, 2, 2, 2, 2, 2, 2, 2, 2, 2]  ,\r\n  }\r\n}\r\nconst formula = {\r\n  normal: Object.fromEntries(data.normal.hitArr.map((arr, i) =>\r\n    [i, (tlvl, stats) => basicDMGFormula(arr[tlvl] * ((i === 0 || i === 3) ? 2 : 1), stats, \"normal\")])),\r\n  charged: Object.fromEntries(Object.entries(data.charged).map(([name, arr]) =>\r\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"charged\")])),\r\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([name, arr]) =>\r\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\r\n  skill: Object.fromEntries(Object.entries(data.skill).map(([name, arr]) =>\r\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"skill\")])),\r\n}\r\n\r\nexport default formula\r\n","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\r\n\r\nconst data = {\r\n  baseStat: {\r\n    characterHP: [857, 2202, 2842, 4257, 4712, 5420, 6027, 6735, 7190, 7897, 8352, 9060, 9515, 10222],\r\n    characterATK: [17, 43, 56, 84, 93, 107, 119, 133, 142, 156, 165, 179, 188, 202],\r\n    characterDEF: [64, 163, 211, 316, 349, 402, 447, 499, 533, 585, 619, 671, 705, 758]\r\n  },\r\n  specializeStat: {\r\n    key: \"atk_\",\r\n    value: [0, 0, 0, 0, 6, 6, 12, 12, 12, 12, 18, 18, 24, 24]\r\n  },\r\n  normal: {\r\n    hitArr: [\r\n      [46.61, 50.41, 54.2, 59.62, 63.41, 67.75, 73.71, 79.67, 85.64, 92.14, 99.59, 108.36, 117.12, 125.88, 135.45],//1\r\n      [47.64, 51.52, 55.4, 60.94, 64.82, 69.25, 75.34, 81.44, 87.53, 94.18, 101.8, 110.76, 119.71, 128.67, 138.44],//2\r\n      [28.55, 30.88, 33.2, 36.52, 38.84, 41.5, 45.15, 48.8, 52.46, 56.44, 61.01, 66.37, 71.74, 77.11, 82.97],//3 x2\r\n      [55.99, 60.54, 65.1, 71.61, 76.17, 81.38, 88.54, 95.7, 102.86, 110.67, 119.62, 130.15, 140.67, 151.2, 162.68],//4\r\n      [35.86, 38.78, 41.7, 45.87, 48.79, 52.13, 56.71, 61.3, 65.89, 70.89, 76.62, 83.37, 90.11, 96.85, 104.21],//5\r\n    ]\r\n  },\r\n  charged: {\r\n    hit1: [47.3, 51.15, 55, 60.5, 64.35, 68.75, 74.8, 80.85, 86.9, 93.5, 101.06, 109.96, 118.85, 127.74, 137.45],\r\n    hit2: [56.16, 60.73, 65.3, 71.83, 76.4, 81.63, 88.81, 95.99, 103.17, 111.01, 119.99, 130.55, 141.11, 151.67, 163.18]\r\n  },\r\n  plunging: {\r\n    dmg: [63.93, 69.14, 74.34, 81.77, 86.98, 92.93, 101.1, 109.28, 117.46, 126.38, 135.3, 144.22, 153.14, 162.06, 170.98],\r\n    low: [127.84, 138.24, 148.65, 163.51, 173.92, 185.81, 202.16, 218.51, 234.86, 252.7, 270.54, 288.38, 306.22, 324.05, 341.89],\r\n    high: [159.68, 172.67, 185.67, 204.24, 217.23, 232.09, 252.51, 272.93, 293.36, 315.64, 337.92, 360.2, 382.48, 404.76, 427.04],\r\n  },\r\n  skill: {\r\n    hit1: [168, 180.6, 193.2, 210, 222.6, 235.2, 252, 268.8, 285.6, 302.4, 319.2, 336, 357, 378, 399],\r\n    hit2: [191.2, 205.54, 219.88, 239, 253.34, 267.68, 286.8, 305.92, 325.04, 344.16, 363.28, 382.4, 406.3, 430.2, 454.1],\r\n    dmgRed: [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 29, 29, 29, 29, 29],\r\n  },\r\n  burst: {\r\n    dmg: [54.27, 58.34, 62.41, 67.84, 71.91, 75.98, 81.41, 86.84, 92.26, 97.69, 103.12, 108.54, 115.33, 122.11, 128.9],\r\n  },\r\n}\r\n\r\nconst formula = {\r\n  normal: Object.fromEntries(data.normal.hitArr.map((percentArr, i) =>\r\n    [i, (tlvl, stats) => basicDMGFormula((i === 2 ? 2 : 1) * (percentArr[tlvl]), stats,\"normal\")])),\r\n  charged: Object.fromEntries(Object.entries(data.charged).map(([name, arr]) =>\r\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"charged\")])),\r\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([name, arr]) =>\r\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\r\n  skill: Object.fromEntries([\r\n    ...Object.entries(data.skill).filter(([name]) => name !== \"dmgRed\").map(([name, arr]) =>\r\n      [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"skill\")]),\r\n    ...Object.entries(data.skill).filter(([name]) => name !== \"dmgRed\").map(([name, arr]) =>\r\n      [`${name}RainCutter`, (tlvl, stats) => basicDMGFormula(1.5 * arr[tlvl], stats, \"skill\")]),\r\n    [\"dmgRed\", (tlvl, stats) => {\r\n      const flat = data.skill.dmgRed[tlvl]\r\n      return [s => (flat + Math.min(24, 0.2 * s.hydro_dmg_)), [\"hydro_dmg_\"]]\r\n    }],\r\n  ]),\r\n  burst: Object.fromEntries(Object.entries(data.burst).map(([name, arr]) =>\r\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"burst\")])),\r\n}\r\n\r\nexport default formula\r\nexport {\r\n  data\r\n}","// import albedo from './Albedo/data'\r\nimport amber from './Amber/data'\r\nimport barbara from './Barbara/data'\r\nimport beidou from './Beidou/data'\r\nimport bennett from './Bennett/data'\r\n// import chongyun from './Chongyun/data'\r\nimport diluc from './Diluc/data'\r\n// import diona from './Diona/data'\r\nimport fischl from './Fischl/data'\r\nimport ganyu from './Ganyu/data'\r\nimport hutao from './Hu Tao/data'\r\n// import jean from './Jean/data'\r\n// import kaeya from './Kaeya/data'\r\nimport keqing from './Keqing/data'\r\n// import klee from './Klee/data'\r\n// import lisa from './Lisa/data'\r\nimport mona from './Mona/data'\r\nimport ningguang from './Ningguang/data'\r\nimport noelle from './Noelle/data'\r\n// import qiqi from './Qiqi/data'\r\n// import razor from './Razor/data'\r\n// import sucrose from './Sucrose/data'\r\n// import tartaglia from './Tartaglia/data'\r\n// import traveler_anemo from './Traveler Anemo/data'\r\n// import traveler_geo from './Traveler Geo/data'\r\nimport venti from './Venti/data'\r\nimport xiao from './Xiao/data'\r\n// import xiangling from './Xiangling/data'\r\nimport xingqiu from './Xingqiu/data'\r\n// import xinyan from './Xinyan/data'\r\n// import zhongli from './Zhongli/data'\r\nconst formula = {\r\n  // albedo,\r\n  amber,\r\n  barbara,\r\n  beidou,\r\n  bennett,\r\n  // chongyun,\r\n  diluc,\r\n  // diona,\r\n  fischl,\r\n  ganyu,\r\n  hutao,\r\n  // jean,\r\n  // kaeya,\r\n  keqing,\r\n  // klee,\r\n  // lisa,\r\n  mona,\r\n  ningguang,\r\n  noelle,\r\n  // qiqi,\r\n  // razor,\r\n  // sucrose,\r\n  // tartaglia,\r\n  // traveler_anemo,\r\n  // traveler_geo,\r\n  venti,\r\n  xiao,\r\n  // xiangling,\r\n  xingqiu,\r\n  // xinyan,\r\n  // zhongli\r\n};\r\nexport default formula","import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key) &&\r\n        console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key => \r\n      !StatData[key]?.const &&\r\n        console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\r\nconst reduceOptimizationTarget = (optimizationTarget) =>\r\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0]] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\r\n\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n  reduceOptimizationTarget,\r\n}\r\n","import '../WorkerHack'\r\nimport { PreprocessFormulas } from \"../StatData\";\r\nimport { artifactSetPermutations, artifactPermutations } from \"./Build\"\r\nimport charFormulas from \"../Data/Characters/formula\"\r\nimport { GetDependencies } from '../StatDependency';\r\n\r\nonmessage = async (e) => {\r\n  const t1 = performance.now()\r\n  const { splitArtifacts, setFilters, minFilters = {}, maxFilters = {}, initialStats: stats, artifactSetEffects, maxBuildsToShow, optimizationTarget, ascending } = e.data;\r\n\r\n  let target, targetKeys;\r\n  if (typeof optimizationTarget === \"string\") {\r\n    target = (stats) => stats[optimizationTarget]\r\n    targetKeys = [optimizationTarget]\r\n  } else {\r\n    const { talentKey, formulaKey } = optimizationTarget\r\n    const tlvl = stats.talentLevelKeys[new Set([\"normal\", \"charged\", \"plunging\"]).has(talentKey) ? \"auto\" : talentKey]\r\n    const targetFormula = charFormulas?.[stats.characterKey]?.[talentKey]?.[formulaKey]\r\n    if (typeof targetFormula === \"function\")\r\n      [target, targetKeys] = targetFormula(tlvl, stats)\r\n    else {\r\n      postMessage({ progress: 0, timing: 0 })\r\n      postMessage({ builds: [], timing: 0 })\r\n      return\r\n    }\r\n    if (targetKeys.length === 1) {\r\n      // CAUTION: This optimization works only with monotonic dependencies\r\n      const key = targetKeys[0]\r\n      target = (stats) => stats[key]\r\n    }\r\n  }\r\n\r\n  const dependencies = GetDependencies(stats.modifiers, [...targetKeys, ...Object.keys(minFilters), ...Object.keys(maxFilters)])\r\n  let { initialStats, formula } = PreprocessFormulas(dependencies, stats)\r\n  let builds = [], threshold = -Infinity\r\n\r\n  const prune = () => {\r\n    builds.sort((a, b) => (b.buildFilterVal - a.buildFilterVal))\r\n    builds.splice(maxBuildsToShow)\r\n  }\r\n\r\n  let buildCount = 0;\r\n  const callback = (accu, stats) => {\r\n    if (!(buildCount++ % 10000)) postMessage({ progress: buildCount, timing: performance.now() - t1 })\r\n    formula(stats)\r\n    if (Object.entries(minFilters).some(([key, minimum]) => stats[key] < minimum)) return\r\n    if (Object.entries(maxFilters).some(([key, maximum]) => stats[key] > maximum)) return\r\n    let buildFilterVal = ascending ? -target(stats) : target(stats)\r\n    if (buildFilterVal >= threshold) {\r\n      builds.push({ buildFilterVal, artifacts: { ...accu } })\r\n      if (builds.length >= 1000) {\r\n        prune()\r\n        threshold = builds[builds.length - 1].buildFilterVal\r\n      }\r\n    }\r\n  }\r\n  for (const artifactsBySlot of artifactSetPermutations(splitArtifacts, setFilters))\r\n    artifactPermutations(initialStats, artifactsBySlot, artifactSetEffects, callback)\r\n\r\n  prune()\r\n\r\n  let t2 = performance.now()\r\n  postMessage({ progress: buildCount, timing: t2 - t1 })\r\n  postMessage({ builds, timing: t2 - t1 })\r\n}\r\n"],"sourceRoot":""}