{"version":3,"sources":["../node_modules/react-overlays/esm/useWaitForDOMRef.js","Components/CharacterSelection.js","../node_modules/react-bootstrap/esm/ElementChildren.js","Components/ConditionalSelector.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js"],"names":["resolveContainerRef","ref","_ref","document","ownerDocument","body","current","nodeType","useWaitForDOMRef","onResolved","_useState","useState","resolvedRef","setRef","earlyRef","useEffect","nextRef","CharacterSelectionDropdownList","onSelect","Object","entries","CharacterDatabase","getCharacterDatabase","map","id","char","Item","onClick","className","Character","getName","characterKey","name","CharacterNameDisplay","flat","locationChar","getCharacter","children","func","index","React","Children","child","isValidElement","ConditionalSelector","props","conditional","conditionalNum","setConditional","defEle","disabled","Array","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","condial","i","Fragment","keys","v","stack","tempcount","icon","faCheckSquare","faSquare","defaultProps","undefined","active","ListGroupItem","forwardRef","bsPrefix","action","as","eventKey","_objectWithoutPropertiesLoose","useBootstrapPrefix","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","createElement","AbstractNavItem","_extends","makeEventKey","href","classNames","displayName","horizontal","ListGroup","horizontalVariant","_useUncontrolled","useUncontrolled","activeKey","initialBsPrefix","_useUncontrolled$as","controlledProps","AbstractNav","useWillUnmount","fn","onUnmount","value","valueRef","useRef","useUpdatedRef"],"mappings":"+HAAA,qDAEWA,EAAsB,SAA6BC,GAC5D,IAAIC,EAEJ,MAAwB,qBAAbC,SAAiC,KACjC,MAAPF,EAAoBG,cAAgBC,MACrB,oBAARJ,IAAoBA,EAAMA,KACjCA,GAAO,YAAaA,IAAKA,EAAMA,EAAIK,UACnB,OAAfJ,EAAOD,QAAe,EAASC,EAAKK,WAAiBN,GACnD,OAEM,SAASO,EAAiBP,EAAKQ,GAC5C,IAAIC,EAAYC,oBAAS,WACvB,OAAOX,EAAoBC,MAEzBW,EAAcF,EAAU,GACxBG,EAASH,EAAU,GAEvB,IAAKE,EAAa,CAChB,IAAIE,EAAWd,EAAoBC,GAC/Ba,GAAUD,EAAOC,GAevB,OAZAC,qBAAU,WACJN,GAAcG,GAChBH,EAAWG,KAEZ,CAACH,EAAYG,IAChBG,qBAAU,WACR,IAAIC,EAAUhB,EAAoBC,GAE9Be,IAAYJ,GACdC,EAAOG,KAER,CAACf,EAAKW,IACFA,I,iJChCT,SAASK,EAAT,GAAuD,IAAbC,EAAY,EAAZA,SACxC,OAAOC,OAAOC,QAAQC,IAAkBC,wBAAwBC,KAAI,mCAAEC,EAAF,KAAMC,EAAN,YAClE,cAAC,IAASC,KAAV,CAAwBC,QAAS,kBAAMT,EAASM,IAAhD,SACE,iCACE,qBAAKI,UAAU,QAAf,SAAuB,4BAAIC,IAAUC,QAAQL,EAAKM,kBAClD,gCAAQN,EAAKO,WAHGR,MAOxB,SAASS,EAAT,GAAqD,IAArBT,EAAoB,EAApBA,GAAoB,IAAhBU,YAAgB,SAC9CC,EAAed,IAAkBe,aAAaZ,GAClD,OAAIW,EACED,EACK,iCAAM,4BAAIL,IAAUC,QAAQK,EAAaJ,gBAAzC,IAA4D,uCAAQI,QAAR,IAAQA,OAAR,EAAQA,EAAcH,UAElF,iCACL,qBAAKJ,UAAU,QAAf,SAAuB,4BAAIC,IAAUC,QAAQK,EAAaJ,kBAC1D,gCAAQI,EAAaH,UAKlB,4C,iCC1BX,sDAUA,SAAST,EAAIc,EAAUC,GACrB,IAAIC,EAAQ,EACZ,OAAOC,IAAMC,SAASlB,IAAIc,GAAU,SAAUK,GAC5C,OAAoBF,IAAMG,eAAeD,GAASJ,EAAKI,EAAOH,KAAWG,O,wJCN9D,SAASE,EAAoBC,GAAQ,IAC5CC,EAAkED,EAAlEC,YAAaC,EAAqDF,EAArDE,eAAgBC,EAAqCH,EAArCG,eAAgBC,EAAqBJ,EAArBI,OAAQC,EAAaL,EAAbK,SAC3D,IAAKJ,EAAa,OAAOG,EACzB,GAAIE,MAAMC,QAAQN,GAAc,CAC9B,IAD8B,EAC1BO,EAAyBN,EACzBO,EAAsB,KAFI,cAGDR,GAHC,IAG9B,2BAA0C,CAAC,IAAhCS,EAA+B,QACxC,KAAIF,EAAyBE,EAAeC,UACvC,CACHF,EAAsBC,EACtB,MAHoDF,GAA0BE,EAAeC,UAJnE,8BAUzBF,IACHD,EAAyB,EACzBC,EAAsBR,EAAY,IAIpC,IAAIW,EAAkC,IAA3BJ,EAA+B,aACvC,iCAAOC,EAAoBI,UAA3B,IAAwCJ,EAAoBE,SAAW,EAA/B,YAAyCH,EAAzC,iBAAwEA,EAAyB,EAAI,IAAM,IAAQ,MAC1JM,EAAQ,cAAC,IAAD,CAAOC,QAAoC,IAA3BP,EAA+B,YAAc,UAA7D,SAAyEI,IACjFI,EAAQ,EACZ,OAAO,eAAC,IAAD,WACL,cAAC,IAASC,OAAV,CAAiBC,KAAK,KAAKb,SAAUA,EAArC,SACE,qBAAItB,UAAU,gBAAd,UAA+BqB,EAA/B,IAAwCU,OAE1C,eAAC,IAASK,KAAV,WACE,cAAC,IAAStC,KAAV,CAAeC,QAAS,kBAAMqB,EAAe,IAA7C,SACE,gDAEDF,EAAYvB,KAAI,SAAC0C,EAASC,GAAV,OACf,cAAC,IAAMC,SAAP,UAAyB,YAAIhB,MAAMc,EAAQT,UAAUY,QAAQ7C,KAAI,SAAA8C,GAAC,OAAIA,EAAI,KAAG9C,KAAI,SAAA+C,GAC/E,IAAIC,IAAcV,EAClB,OAAO,eAAC,IAASnC,KAAV,CAA+BC,QAAS,kBAAMqB,EAAeuB,IAA7D,UACJN,EAAQP,UAAWJ,EAAoBE,SAAW,EAA/B,YAAwCc,EAAxC,iBAAsDA,EAAQ,EAAI,IAAM,IAAO,KAD1EC,OAFRL,YAStB,GAAIpB,EAAYU,SAAW,EAAG,CAEnC,IAAIG,EAAQ,cAAC,IAAD,CAAOC,QAA4B,IAAnBb,EAAuB,YAAc,UAArD,SAAiEA,EAAiB,EAAjB,UAAwBA,EAAxB,iBAA+CA,EAAiB,EAAI,IAAM,IAAO,eAC9J,OAAO,eAAC,IAAD,WACL,cAAC,IAASe,OAAV,CAAiBC,KAAK,KAAKb,SAAUA,EAArC,SACE,qBAAItB,UAAU,gBAAd,UAA+BqB,EAA/B,IAAwCU,OAE1C,eAAC,IAASK,KAAV,WACE,cAAC,IAAStC,KAAV,CAAeC,QAAS,kBAAMqB,EAAe,IAA7C,SACE,gDAED,YAAIG,MAAML,EAAYU,UAAUY,QAAQ7C,KAAI,SAAA8C,GAAC,OAAIA,EAAI,KAAG9C,KAAI,SAAA+C,GAAK,OAChE,cAAC,IAAS5C,KAAV,CAA2BC,QAAS,kBAAMqB,EAAesB,IAAzD,mBACMA,EADN,iBACoBA,EAAQ,EAAI,IAAM,KADlBA,YAKrB,OAA6B,IAAzBxB,EAAYU,SAEd,cAAC,IAAD,CAAQO,KAAK,KAAKpC,QAAS,kBAAMqB,EAAeD,EAAiB,EAAI,IAAIG,SAAUA,EAAnF,SACL,qBAAItB,UAAU,OAAd,UAAqB,cAAC,IAAD,CAAiB4C,KAAMzB,EAAiB0B,IAAgBC,MAA7E,IAA2FzB,YAHxF,I,kIC1DL0B,EAAe,CACjBf,aAASgB,EACTC,QAAQ,EACR3B,UAAU,GAER4B,EAA6BtC,IAAMuC,YAAW,SAAU7E,EAAMD,GAChE,IAAI+E,EAAW9E,EAAK8E,SAChBH,EAAS3E,EAAK2E,OACd3B,EAAWhD,EAAKgD,SAChBtB,EAAY1B,EAAK0B,UACjBgC,EAAU1D,EAAK0D,QACfqB,EAAS/E,EAAK+E,OACdC,EAAKhF,EAAKgF,GACVC,EAAWjF,EAAKiF,SAChBxD,EAAUzB,EAAKyB,QACfkB,EAAQuC,YAA8BlF,EAAM,CAAC,WAAY,SAAU,WAAY,YAAa,UAAW,SAAU,KAAM,WAAY,YAEvI8E,EAAWK,YAAmBL,EAAU,mBACxC,IAAIM,EAAcC,uBAAY,SAAUC,GACtC,GAAItC,EAGF,OAFAsC,EAAMC,sBACND,EAAME,kBAIJ/D,GAASA,EAAQ6D,KACpB,CAACtC,EAAUvB,IAOd,OALIuB,QAA+B0B,IAAnB/B,EAAM8C,WACpB9C,EAAM8C,UAAY,EAClB9C,EAAM,kBAAmB,GAGPL,IAAMoD,cAAcC,IAAiBC,YAAS,CAChE7F,IAAKA,GACJ4C,EAAO,CAERsC,SAAUY,YAAaZ,EAAUtC,EAAMmD,MAEvCd,GAAIA,IAAOD,EAASpC,EAAMmD,KAAO,IAAM,SAAW,OAClDrE,QAAS2D,EACT1D,UAAWqE,IAAWrE,EAAWoD,EAAUH,GAAU,SAAU3B,GAAY,WAAYU,GAAWoB,EAAW,IAAMpB,EAASqB,GAAUD,EAAW,iBAGrJF,EAAcH,aAAeA,EAC7BG,EAAcoB,YAAc,gBACbpB,QC5CXH,EAAe,CACjBf,aAASgB,EACTuB,gBAAYvB,GAEVwB,EAAyB5D,IAAMuC,YAAW,SAAUlC,EAAO5C,GAC7D,IAYIoG,EAZAC,EAAmBC,YAAgB1D,EAAO,CAC5C2D,UAAW,aAET5E,EAAY0E,EAAiB1E,UAC7B6E,EAAkBH,EAAiBtB,SACnCpB,EAAU0C,EAAiB1C,QAC3BuC,EAAaG,EAAiBH,WAC9BO,EAAsBJ,EAAiBpB,GACvCA,OAA6B,IAAxBwB,EAAiC,MAAQA,EAC9CC,EAAkBvB,YAA8BkB,EAAkB,CAAC,YAAa,WAAY,UAAW,aAAc,OAErHtB,EAAWK,YAAmBoB,EAAiB,cAUnD,OANEJ,EADEF,GACiC,IAAfA,EAAsB,aAAe,cAAgBA,EAErD,KAIF3D,IAAMoD,cAAcgB,IAAad,YAAS,CAC5D7F,IAAKA,GACJ0G,EAAiB,CAClBzB,GAAIA,EACJtD,UAAWqE,IAAWrE,EAAWoD,EAAUpB,GAAWoB,EAAW,IAAMpB,EAASyC,GAAqBrB,EAAW,IAAMqB,SAG1HD,EAAUzB,aAAeA,EACzByB,EAAUF,YAAc,YACxBE,EAAU1E,KAAOoD,EACFsB,O,6ECpCA,SAASS,EAAeC,GACrC,IAAIC,ECFS,SAAuBC,GACpC,IAAIC,EAAWC,iBAAOF,GAEtB,OADAC,EAAS3G,QAAU0G,EACZC,EDDSE,CAAcL,GAC9B/F,qBAAU,WACR,OAAO,WACL,OAAOgG,EAAUzG,aAElB","file":"static/js/15.b928030e.chunk.js","sourcesContent":["import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Character from \"../Character/Character\";\r\nimport CharacterDatabase from \"../Character/CharacterDatabase\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n    <Dropdown.Item key={id} onClick={() => onSelect(id)}>\r\n      <span>\r\n        <div className=\"mb-n2\"><b>{Character.getName(char.characterKey)}</b></div>\r\n        <small>{char.name}</small>\r\n      </span>\r\n    </Dropdown.Item>)\r\n}\r\nfunction CharacterNameDisplay({ id, flat = false }) {\r\n  let locationChar = CharacterDatabase.getCharacter(id)\r\n  if (locationChar) {\r\n    if (flat) {\r\n      return <span><b>{Character.getName(locationChar.characterKey)}</b> <small>{locationChar?.name}</small></span>\r\n    } else {\r\n      return <span>\r\n        <div className=\"mb-n2\"><b>{Character.getName(locationChar.characterKey)}</b></div>\r\n        <small>{locationChar.name}</small>\r\n      </span>\r\n    }\r\n\r\n  } else {\r\n    return <b>Inventory</b>\r\n  }\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n  CharacterNameDisplay\r\n};\r\n\r\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}"],"sourceRoot":""}