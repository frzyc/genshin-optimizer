{"version":3,"sources":["Components/StarDisplay.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","Components/CustomFormControl.js","Data/WeaponData.js","Data/ArtifactData.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","Components/ConditionalSelector.js","Assets/Weapons/Swords/Swords.js","Assets/Weapons/Swords/Weapon_Dull_Blade.png","Assets/Weapons/Swords/Weapon_Silver_Sword.png","Assets/Weapons/Swords/Weapon_Cool_Steel.png","Assets/Weapons/Swords/Weapon_Dark_Iron_Sword.png","Assets/Weapons/Swords/Weapon_Fillet_Blade.png","Assets/Weapons/Swords/Weapon_Harbinger_of_Dawn.png","Assets/Weapons/Swords/Weapon_Skyrider_Sword.png","Assets/Weapons/Swords/Weapon_Traveler's_Handy_Sword.png","Assets/Weapons/Swords/Weapon_Blackcliff_Longsword.png","Assets/Weapons/Swords/Weapon_Favonius_Sword.png","Assets/Weapons/Swords/Weapon_Iron_Sting.png","Assets/Weapons/Swords/Weapon_Lion's_Roar.png","Assets/Weapons/Swords/Weapon_Prototype_Rancour.png","Assets/Weapons/Swords/Weapon_Royal_Longsword.png","Assets/Weapons/Swords/Weapon_Sacrificial_Sword.png","Assets/Weapons/Swords/Weapon_The_Alley_Flash.png","Assets/Weapons/Swords/Weapon_The_Black_Sword.png","Assets/Weapons/Swords/Weapon_The_Flute.png","Assets/Weapons/Swords/Weapon_Sword_of_Descension.png","Assets/Weapons/Swords/festering_fang.png","Assets/Weapons/Swords/Weapon_Aquila_Favonia.png","Assets/Weapons/Swords/Weapon_Skyward_Blade.png","Assets/Weapons/Swords/summit_shaper.png","Assets/Weapons/Claymores/Claymores.js","Assets/Weapons/Claymores/Weapon_Waster_Greatsword.png","Assets/Weapons/Claymores/Weapon_Old_Merc's_Pal.png","Assets/Weapons/Claymores/Weapon_Bloodtainted_Greatsword.png","Assets/Weapons/Claymores/Weapon_Debate_Club.png","Assets/Weapons/Claymores/Weapon_Ferrous_Shadow.png","Assets/Weapons/Claymores/Weapon_Quartz.png","Assets/Weapons/Claymores/Weapon_Skyrider_Greatsword.png","Assets/Weapons/Claymores/Weapon_White_Iron_Greatsword.png","Assets/Weapons/Claymores/Weapon_Blackcliff_Slasher.png","Assets/Weapons/Claymores/Weapon_Favonius_Greatsword.png","Assets/Weapons/Claymores/Weapon_Lithic_Blade.png","Assets/Weapons/Claymores/Weapon_Prototype_Aminus.png","Assets/Weapons/Claymores/Weapon_Rainslasher.png","Assets/Weapons/Claymores/Weapon_Royal_Greatsword.png","Assets/Weapons/Claymores/Weapon_Serpent_Spine.png","Assets/Weapons/Claymores/Weapon_The_Bell.png","Assets/Weapons/Claymores/Weapon_Whiteblind.png","Assets/Weapons/Claymores/Weapon_Sacrificial_Greatsword.png","Assets/Weapons/Claymores/snow_tombed_starsilver.png","Assets/Weapons/Claymores/Weapon_Skyward_Pride.png","Assets/Weapons/Claymores/Weapon_Wolf's_Gravestone.png","Assets/Weapons/Claymores/Weapon_The_Unforged.png","Assets/Weapons/Polearms/Polearms.js","Assets/Weapons/Polearms/Weapon_Beginner's_Protector.png","Assets/Weapons/Polearms/Weapon_Iron_Point.png","Assets/Weapons/Polearms/Weapon_Black_Tassel.png","Assets/Weapons/Polearms/Weapon_Halberd.png","Assets/Weapons/Polearms/Weapon_White_Tassel.png","Assets/Weapons/Polearms/Weapon_Blackcliff_Pole.png","Assets/Weapons/Polearms/Weapon_Crescent_Pike.png","Assets/Weapons/Polearms/Weapon_Deathmatch.png","Assets/Weapons/Polearms/Weapon_Dragon's_Bane.png","Assets/Weapons/Polearms/Weapon_Lithic_Spear.png","Assets/Weapons/Polearms/Weapon_Prototype_Grudge.png","Assets/Weapons/Polearms/Weapon_Favonius_Lance.png","Assets/Weapons/Polearms/Weapon_Royal_Spear.png","Assets/Weapons/Polearms/dragonspine_spear.png","Assets/Weapons/Polearms/Weapon_Vortex_Vanquisher.png","Assets/Weapons/Polearms/Weapon_Primordial_Jade_Winged-Spear.png","Assets/Weapons/Polearms/Weapon_Skyward_Spine.png","Assets/Weapons/Bows/Bows.js","Assets/Weapons/Bows/Weapon_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Seasoned_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Ebony_Bow.png","Assets/Weapons/Bows/Weapon_Messenger.png","Assets/Weapons/Bows/Weapon_Raven_Bow.png","Assets/Weapons/Bows/Weapon_Recurve_Bow.png","Assets/Weapons/Bows/Weapon_Sharpshooter's_Oath.png","Assets/Weapons/Bows/Weapon_Slingshot.png","Assets/Weapons/Bows/Weapon_The_Stringless.png","Assets/Weapons/Bows/Weapon_Alley_Hunter.png","Assets/Weapons/Bows/Weapon_Blackcliff_Warbow.png","Assets/Weapons/Bows/Weapon_Compound_Bow.png","Assets/Weapons/Bows/Weapon_Favonius_Warbow.png","Assets/Weapons/Bows/Weapon_Prototype_Crescent.png","Assets/Weapons/Bows/Weapon_Royal_Bow.png","Assets/Weapons/Bows/Weapon_Rust.png","Assets/Weapons/Bows/Weapon_Sacrificial_Bow.png","Assets/Weapons/Bows/Weapon_The_Viridescent_Hunt.png","Assets/Weapons/Bows/Weapon_Skyward_Harp.png","Assets/Weapons/Bows/Weapon_Amos'_Bow.png","Assets/Weapons/Bows/dreams_of_dragonfell.png","Assets/Weapons/Catalysts/Catalysts.js","Assets/Weapons/Catalysts/Weapon_Apprentice's_Notes.png","Assets/Weapons/Catalysts/Weapon_Pocket_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Amber_Catalyst.png","Assets/Weapons/Catalysts/Weapon_Emerald_Orb.png","Assets/Weapons/Catalysts/Weapon_Magic_Guide.png","Assets/Weapons/Catalysts/Weapon_Otherworldly_Story.png","Assets/Weapons/Catalysts/Weapon_Thrilling_Tales_of_Dragon_Slayers.png","Assets/Weapons/Catalysts/Weapon_Twin_Nephrite.png","Assets/Weapons/Catalysts/Weapon_Blackcliff_Amulet.png","Assets/Weapons/Catalysts/Weapon_Favonius_Codex.png","Assets/Weapons/Catalysts/Weapon_Mappa_Mare.png","Assets/Weapons/Catalysts/Weapon_Prototype_Malice.png","Assets/Weapons/Catalysts/Weapon_Royal_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Sacrificial_Fragments.png","Assets/Weapons/Catalysts/Weapon_Solar_Pearl.png","Assets/Weapons/Catalysts/Weapon_The_Widsith.png","Assets/Weapons/Catalysts/Weapon_Wine_and_Song.png","Assets/Weapons/Catalysts/Weapon_Eye_of_Perception.png","Assets/Weapons/Catalysts/Weapon_Frostbearer.png","Assets/Weapons/Catalysts/Weapon_Lost_Prayer_to_the_Sacred_Winds.png","Assets/Weapons/Catalysts/Weapon_Skyward_Atlas.png","Assets/Weapons/Catalysts/Weapon_Memory_of_Dust.png","Assets/Assets.js","Assets/Weapons/Weapons.js","Assets/Element_Anemo.png","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","DatabaseUtil.js","Data/CharacterData.js","Components/StatIcon.js","StatDependency.js","Artifact/PercentBadge.js","../node_modules/react-bootstrap/esm/Badge.js","Artifact/ArtifactCard.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/StatDisplay.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","TestPage/TestDisplay.js","Character/Character.js","Util/Util.js","Stat.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Artifact/ArtifactDatabase.js","Util/ConditionalsUtil.js","Data/ElementalData.js","StatData.js","Weapon/Weapon.js"],"names":["StarIcon","icon","faStar","Stars","props","className","colored","stars","Array","keys","map","_","i","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","FloatFormControl","placeholder","onValueChange","disabled","useState","focus","setFocus","type","toString","onChange","e","target","parseFloat","onFocus","onBlur","IntFormControl","parseInt","WeaponData","WeaponDataImport","then","imp","default","WeaponLevelKeys","LevelNameData","WeaponTypeData","sword","claymore","catalyst","bow","polearm","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","Object","ElementalData","forEach","key","push","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","hp","atk","hp_","atk_","def_","phy_dmg_bonus","ele_dmg_bonus","ele_mas","ener_rech","crit_rate","crit_dmg","heal_bonu","2","ArtifactSubStatsData","def","ArtifactSlotsData","flower","name","stats","plume","sands","goblet","circlet","resolveContainerRef","ref","_ref","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","ConditionalSelector","conditional","conditionalNum","setConditional","defEle","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","DullBlade","SilverSword","CoolSteel","DarkIronSword","FilletBlade","HarbingerOfDawn","SkyriderSword","TravelersHandySword","BlackcliffLongsword","FavoniusSword","IronSting","LionsRoar","PrototypeRancour","RoyalLongsword","SacrificialSword","TheAlleyFlash","TheBlackSword","TheFlute","SwordOfDescension","FesteringDesire","AquilaFavonia","SkywardBlade","SummitShaper","WasterGreatsword","OldMercsPal","BloodtaintedGreatsword","DebateClub","FerrousShadow","Quartz","SkyriderGreatsword","WhiteIronGreatsword","BlackcliffSlasher","FavoniusGreatsword","LithicBlade","PrototypeAminus","Rainslasher","RoyalGreatsword","SerpentSpine","TheBell","Whiteblind","SacrificialGreatsword","SnowTombedStarsilver","SkywardPride","WolfsGravestone","TheUnforged","polearms","BeginnersProtector","IronPoint","BlackTassel","Halberd","WhiteTassel","BlackcliffPole","CrescentPike","Deathmatch","DragonsBane","LithicSpear","PrototypeGrudge","FavoniusLance","RoyalSpear","DragonspineSpear","VortexVanquisher","PrimordialJadeWingedSpear","SkywardSpine","bows","HuntersBow","SeasonedHuntersBow","EbonyBow","Messenger","RavenBow","RecurveBow","SharpshootersOath","Slingshot","TheStringless","AlleyHunter","BlackcliffWarbow","CompoundBow","FavoniusWarbow","PrototypeCrescent","RoyalBow","Rust","SacrificialBow","TheViridescentHunt","SkywardHarp","AmosBow","DreamsOfDragonfell","catalysts","ApprenticesNotes","PocketGrimoire","AmberCatalyst","EmeraldOrb","MagicGuide","OtherworldlyStory","ThrillingTalesOfDragonSlayers","TwinNephrite","BlackcliffAgate","FavoniusCodex","MappaMare","PrototypeMalice","RoyalGrimoire","SacrificialFragments","SolarPearl","TheWidsith","WineAndSong","EyeOfPerception","Frostbearer","LostPrayerToTheSacredWinds","SkywardAtlas","MemoryOfDust","Assets","weapons","swords","claymores","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","resin","fragile","condensed","exp_books","advice","wit","experience","DatabaseInitAndVerify","localStorage","removeItem","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","values","art","valid","location","getCharacter","keyMapping","setKey","mainStatKey","endsWith","replace","updateArtifact","chars","getCharacterDatabase","character","equippedArtifacts","fromEntries","entries","slotKey","artid","getArtifact","undefined","artifactConditionals","filter","cond","srcKey","srcKey2","characterKey","levelKey","constellation","talentConditionals","ascension","Character","getAscension","talentKey","conditionalKey","talentLvlKey","getTalentLevelKey","getTalentConditional","dmgMode","updateCharacter","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","stam","CharacterSpecializedStatKey","StatIcon","hp_base","faTint","hp_final","atk_base","faFistRaised","atk_final","def_base","faShieldAlt","def_final","faMagic","faDice","faDiceD20","faSync","faFirstAid","StatIconEle","statKey","formulaKeyDependency","DependencyStatKeys","formulaOverrides","dependencies","GetDependencyStats","formulaOverride","OverrideFormulas","dependency","includes","Set","formulaKeys","Formulas","k","statkeys","StatData","keyDependencies","subdependencies","testObj","defineProperty","get","configurable","AttachLazyFormulas","getDependency","PercentBadge","percent","children","badgeColor","isNaN","Math","floor","Badge","React","forwardRef","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","ArtifactCard","artifactId","forceUpdate","onEdit","onDelete","assumeFull","equipOnChar","charId","Artifact","equipArtifactOnChar","artifactValidation","locationChar","mainStatLevel","numStars","assFullColor","mainStatVal","getMainStatValue","Stat","getStatUnit","border","bg","Header","xs","md","src","getArtifactPieceIcon","thumbnail","getArtifactPieceName","getArtifactSlotNameWithIcon","Body","Title","getArtifactSetName","getStatName","substats","stat","subStatValidation","subStatValidations","numRolls","rolls","length","efficiency","effOpacity","statName","toFixed","style","opacity","tooltip","msg","currentEfficiency","maximumEfficiency","Footer","id","char","placement","overlay","pointerEvents","lock","faLock","faLockOpen","Boolean","faEdit","faTrashAlt","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","TabContext","Provider","SelectableContext","TabContent","decoratedBsPrefix","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","Tab","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","Error","Container","Content","Pane","createContext","useAccordionToggle","contextEventKey","AccordionContext","AccordionToggle","accordionOnClick","AccordionCollapse","Collapse","Children","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","_objectWithoutProperties","source","excluded","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","DisplayStats","statVal","build","editable","otherProps","buildVal","finalStats","buildDiff","originalVal","getStatValueWithOverride","diff","diffText","fixedUnit","hasOverride","Col","DisplayNewBuildDiff","equippedBuild","newBuild","unit","CharacterArtifactPane","compareAgainstEquipped","setState","showOther","setShowOther","artifactsAssumeFull","statKeys","getDisplayStatKeys","displayStatProps","displayNewBuildProps","formulaDependencyKeys","flat","FormulaText","Row","Card","Button","xl","printStat","printFormula","equipArtifacts","artifactIds","Alert","sm","lg","getArtifactSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getArtifactSetEffectConditional","ConditionalsUtil","getConditionalNum","conditionalStats","getArtifactConditionalStats","val","conditionalElement","cnum","state","setStateArtifactConditional","getArtifactSetEffectText","StatInput","prependEle","defaultValue","restProps","InputGroup","Prepend","Text","Append","OverlayTrigger","Tooltip","faUndo","CharacterOverviewPane","setOverride","setConstellation","editLevel","setEditLevel","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","getName","Image","getStar","clamp","getLevel","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","refineIndex","getWeaponConditionalStat","getWeaponConditional","conditionalEle","faQuoteLeft","getWeaponRarity","DropdownButton","title","getWeaponName","reverse","star","arr","Dropdown","ItemText","getWeaponsOfType","rarity","weaponObj","Divider","getLevelName","faGavel","getWeaponPassiveDescription","getWeaponDescription","editingOther","SetEditingOther","additionalKeys","displayStatKeys","editStatKeys","otherStatKeys","getElementalKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","getStatNameRaw","CharacterTalentPane","skillDisplayProps","ContextAwareToggle","callback","currentEventKey","decoratedOnClick","expanded","faWindowMinimize","faWindowMaximize","ToggleButtonGroup","ToggleButton","href","rel","eleKey","immunityStatKey","elementImmunity","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","autoInfused","statsDisplayKeys","ReactionDisplay","tKey","tText","SkillDisplayCard","subtitle","asc","enabled","onClickTitle","ReactionComponents","superconduct_dmg","electrocharged_dmg","overloaded_dmg","swirl_dmg","shatter_dmg","information","faQuestionCircle","crystalize_dmg","reactionMode","charEleKey","eleInterArr","ElementToReactionKeys","Ele","talentLimits","header","levelBoost","infuseBtn","getElementalName","tLvl","talentLevelKeys","statsEle","talentStats","getTalentStats","ListGroup","index","getTalentImg","getTalentName","Subtitle","getTalentDocument","section","talentText","fields","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","FieldDisplay","field","fieldText","fieldVariant","fieldBasic","basicVal","fieldVal","finalVal","round","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","child","CharacterDisplayCard","forceUpdateComponent","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","characterId","getInitialState","Promise","all","getCharacterDataImport","getWeaponDataImport","getArtifactDataImport","deepClone","addCharacter","footer","onClose","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","faTimes","defaultActiveKey","Nav","Link","getCDataObj","talent","skill","initialState","auto","burst","ListGroupItem","action","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","horizontal","horizontalVariant","initialBsPrefix","AbstractNav","TestDisplay","moveToNewLocation","removeCharacterById","defVal","getSpecializedStatKey","getSpeicalizedStatVal","getWeaponMainStatValWithOverride","characterObj","baseStat","getIndexFromlevelkey","elementalKey","constellationName","titles","getSpecializedStat","specializeStat","thumbImg","cardImg","img","constIndex","getTalentLevelBoost","talents","talentBoost","boostEntry","find","withBoost","getTalentFields","getTalentStatsAll","statsArr","doc","tempCond","getConditionalProp","stacks","skillKey","elemental","infusable","getTalentStatKeyVariant","atkKeys","startsWith","artIdsOnCharacter","artIdsNotOnCharacter","getArtifactSlotKeys","artNotOnChar","artOnChar","notCharLoc","equipArtifact","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","condStats","char_ele_key","overrides","hasOwnProperty","specialStatKey","addStatsObj","weaponStats","subKey","subVal","getWeaponSubStatValWithOverride","bonusStats","array","random","getRandomIntInclusive","min","max","ceil","loadFromLocalStorage","data","getItem","JSON","parse","saveToLocalStorage","obj","setItem","stringify","closeEnoughFloat","a","b","abs","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","htmlStatsData","pretty","getStatVariant","f","expand","printOverrideFormula","options","overrideKey","OverrideFormulasText","formulaText","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_multi","electrocharged","superconduct_multi","superconduct","swirl_multi","swirl","shatter_multi","shattered","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","trans_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","enumerable","writable","noelle_burst_atk","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","_createForOfIteratorHelper","allowArrayLike","it","F","s","n","done","_e","err","normalCompletion","didErr","step","next","_e2","initiated","characterDatabase","charIdIndex","isInvalid","getCharacterIdList","dchar","getArtifactIDFromSlot","charid","unequipArtifactOnSlot","equipArtifactBuild","SlotIcon","faBahai","faFeatherAlt","faHourglass","faWineGlass","faCrown","ArtifactBase","rollData","float","roll","maxNumRoll","rollOption","sum","reduce","accu","isFloat","getSubstatRollData","getRolls","totalAllowableRolls","validateSubStat","some","currentNumOfRolls","cur","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","totalPossbleUpgrade","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getArtifactSetsByMaxStarEntries","setobj","pieces","icons","getArtifactSetEffectsObj","sets","getArtifactSlotName","getArtifactSlotIcon","slotIcon","getRarityArr","getMainStatKeys","main","getSubStatKeys","numberOfSubstatUnlocked","getArtifactSets","artifactSetEffect","artArr","setNumKeys","charFinalStats","setEffectText","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","hasSetEffect","setEffectObj","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","dmg","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","reactionName","dmgKey","dmgName","str","atkTypeName","dmgModeName","ele_key","formula","overrideFormulaKey","getLevelIndex","weaponKey","passiveName","passiveDescription","description","baseStats","sub","weaponType","getWeaponTypeName"],"mappings":"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Ed,cAAC,IAAD,CAAQO,KAAK,KAAKG,QAAS,kBAAMhB,EAAeD,EAAiB,EAAI,IAAInF,SAAUA,EAAnF,SACL,qBAAIpB,UAAU,OAAd,UAAqB,cAAC,IAAD,CAAiBJ,KAAM2G,EAAiBuB,IAAgBC,MAA7E,IAA2FtB,YAHxF,I,6CCjBM/D,EAzBD,CACZsF,UCxBa,IAA0B,8CDyBvCC,YEzBa,IAA0B,gDF0BvCC,UG1Ba,IAA0B,8CH2BvCC,cI3Ba,IAA0B,mDJ4BvCC,YK5Ba,IAA0B,gDL6BvCC,gBM7Ba,IAA0B,qDN8BvCC,cO9Ba,IAA0B,kDP+BvCC,oBQ/Ba,IAA0B,0DRgCvCC,oBShCa,IAA0B,wDTiCvCC,cUjCa,IAA0B,kDVkCvCC,UWlCa,IAA0B,8CXmCvCC,UYnCa,IAA0B,+CZoCvCC,iBapCa,IAA0B,qDbqCvCC,ecrCa,IAA0B,mDdsCvCC,iBetCa,IAA0B,qDfuCvCC,cgBvCa,IAA0B,mDhBwCvCC,ciBxCa,IAA0B,mDjByCvCC,SkBzCa,IAA0B,6ClB0CvCC,kBmB1Ca,IAA0B,uDnB2CvCC,gBoB3Ca,IAA0B,2CpB4CvCC,cqB5Ca,IAA0B,kDrB6CvCC,asB7Ca,IAA0B,iDtB8CvCC,auB9Ca,IAA0B,2CC8C1B3G,EAxBE,CACf4G,iBCvBa,IAA0B,qDDwBvCC,YExBa,IAA0B,kDFyBvCC,uBGzBa,IAA0B,2DH0BvCC,WI1Ba,IAA0B,+CJ2BvCC,cK3Ba,IAA0B,kDL4BvCC,OM5Ba,IAA0B,0CN6BvCC,mBO7Ba,IAA0B,uDP8BvCC,oBQ9Ba,IAA0B,yDR+BvCC,kBS/Ba,IAA0B,sDTgCvCC,mBUhCa,IAA0B,uDViCvCC,YWjCa,IAA0B,gDXkCvCC,gBYlCa,IAA0B,oDZmCvCC,YanCa,IAA0B,+CboCvCC,gBcpCa,IAA0B,oDdqCvCC,aerCa,IAA0B,iDfsCvCC,QgBtCa,IAA0B,4ChBuCvCC,WiBvCa,IAA0B,8CjBwCvCC,sBkBxCa,IAA0B,0DlByCvCC,qBmBzCa,IAA0B,mDnB0CvCC,aoB1Ca,IAA0B,iDpB2CvCC,gBqB3Ca,IAA0B,qDrB4CvCC,YsB5Ca,IAA0B,iDCoC1BC,EAnBE,CACfC,mBClBa,IAA0B,wDDmBvCC,UEnBa,IAA0B,8CFoBvCC,YGpBa,IAA0B,gDHqBvCC,QIrBa,IAA0B,2CJsBvCC,YKtBa,IAA0B,gDLuBvCC,eMvBa,IAA0B,mDNwBvCC,aOxBa,IAA0B,iDPyBvCC,WQzBa,IAA0B,8CR0BvCC,YS1Ba,IAA0B,iDT2BvCC,YU3Ba,IAA0B,gDV4BvCC,gBW5Ba,IAA0B,oDX6BvCC,cY7Ba,IAA0B,kDZ8BvCC,Wa9Ba,IAA0B,+Cb+BvCC,iBc/Ba,IAA0B,8CdgCvCC,iBehCa,IAA0B,qDfiCvCC,0BgBjCa,IAA0B,gEhBkCvCC,aiBlCa,IAA0B,kDC4C1BC,EAvBF,CACXC,WCtBa,IAA0B,gDDuBvCC,mBEvBa,IAA0B,yDFwBvCC,SGxBa,IAA0B,6CHyBvCC,UIzBa,IAA0B,6CJ0BvCC,SK1Ba,IAA0B,6CL2BvCC,WM3Ba,IAA0B,+CN4BvCC,kBO5Ba,IAA0B,uDP6BvCC,UQ7Ba,IAA0B,6CR8BvCC,cS9Ba,IAA0B,kDT+BvCC,YU/Ba,IAA0B,gDVgCvCC,iBWhCa,IAA0B,qDXiCvCC,YYjCa,IAA0B,gDZkCvCC,ealCa,IAA0B,mDbmCvCC,kBcnCa,IAA0B,sDdoCvCC,SepCa,IAA0B,6CfqCvCC,KgBrCa,IAA0B,wChBsCvCC,eiBtCa,IAA0B,mDjBuCvCC,mBkBvCa,IAA0B,wDlBwCvCC,YmBxCa,IAA0B,gDnByCvCC,QoBzCa,IAA0B,6CpB0CvCC,mBqB1Ca,IAA0B,kDC8C1BC,EAxBG,CAChBC,iBCvBa,IAA0B,sDDwBvCC,eExBa,IAA0B,mDFyBvCC,cGzBa,IAA0B,kDH0BvCC,WI1Ba,IAA0B,+CJ2BvCC,WK3Ba,IAA0B,+CL4BvCC,kBM5Ba,IAA0B,sDN6BvCC,8BO7Ba,IAA0B,qEP8BvCC,aQ9Ba,IAA0B,iDR+BvCC,gBS/Ba,IAA0B,qDTgCvCC,cUhCa,IAA0B,kDViCvCC,UWjCa,IAA0B,8CXkCvCC,gBYlCa,IAA0B,oDZmCvCC,canCa,IAA0B,kDboCvCC,qBcpCa,IAA0B,yDdqCvCC,WerCa,IAA0B,+CfsCvCC,WgBtCa,IAA0B,+ChBuCvCC,YiBvCa,IAA0B,iDjBwCvCC,gBkBxCa,IAA0B,qDlByCvCC,YmBzCa,IAA0B,+CnB0CvCC,2BoB1Ca,IAA0B,mEpB2CvCC,aqB3Ca,IAA0B,iDrB4CvCC,asB5Ca,IAA0B,mDCwBrCC,EAAS,CACXC,QCpBW,+DACRC,GACAC,GACAlE,GACAkB,GACAsB,GDgBH2B,SAAU,CAAEC,ME1BC,IAA0B,0CF0BpBC,KG1BN,IAA0B,yCH0BdC,OI1BZ,IAA0B,2CJ0BNC,QK1BpB,IAA0B,4CL0BGC,IM1B7B,IAA0B,wCN0BQC,MO1BlC,IAA0B,0CP0BeC,KQ1BzC,IAA0B,0CR2BvCC,YAAa,CAAE3M,IS3BF,IAA0B,kDT2BnBD,SU3BP,IAA0B,uDV2BTD,SW3BjB,IAA0B,uDX2BCG,QY3B3B,IAA0B,sDZ2BUJ,Ma3BpC,IAA0B,qDb4BvC+M,MAAO,CACLC,Qc7BW,IAA0B,+Cd8BrCC,Ue9BW,IAA0B,kDfgCvCC,UAAW,CACTC,OgBjCW,IAA0B,mDhBkCrCC,IiBlCW,IAA0B,4CjBmCrCC,WkBnCW,IAA0B,2DlBsC1BnB,O,uGmBlCf,SAASoB,IAMP,GAJAC,aAAaC,WAAW,oBACxBD,aAAaC,WAAW,qBAGpBC,IAAkBC,mCACpBC,IAAiBD,mCAAoC,CAErD,IAAIE,EAAOD,IAAiBE,sBAC5BrN,OAAOsN,OAAOF,GAAMlN,SAAQ,SAAAqN,GAAQ,IAAD,IAC7BC,GAAQ,EACRD,EAAIE,WAAaR,IAAkBS,aAAaH,EAAIE,YACtDF,EAAIE,SAAW,GACfD,GAAQ,GAGV,IAAIG,EAAa,CACf,oBAAqB,kBACrB,sBAAuB,qBACvB,kBAAmB,iBACnB,mBAAoB,kBACpB,kBAAmB,iBACnB,iBAAkB,gBAClB,qBAAsB,mBACtB,0BAA2B,uBAC3B,wBAAyB,uBACzB,gBAAiB,eACjB,cAAe,aACf,eAAgB,cAChB,kBAAmB,gBACnB,iBAAkB,gBAClB,0BAA2B,wBAC3B,YAAa,WACb,mBAAoB,kBACpB,YAAa,WACb,oBAAqB,mBACrB,wBAAyB,sBACzB,0BAA2B,yBAC3B,qBAAsB,qBAEpBA,EAAWJ,EAAIK,UACjBL,EAAIK,OAASD,EAAWJ,EAAIK,QAC5BJ,GAAQ,IAGV,OAAID,QAAJ,IAAIA,GAAJ,UAAIA,EAAKM,mBAAT,iBAAI,EAAkBC,gBAAtB,aAAI,SAA6B,cAC/BP,EAAIM,YAAcN,EAAIM,YAAYE,QAAQ,UAAW,iBACrDP,GAAQ,GAGe,aAAlB,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKM,eACPN,EAAIM,YAAc,gBAClBL,GAAQ,GAELA,GACHL,IAAiBa,eAAeT,MAGpC,IAAIU,EAAQhB,IAAkBiB,uBAC9BlO,OAAOsN,OAAOW,GAAO/N,SAAQ,SAAAiO,GAC3B,IAAIX,GAAQ,EAERY,EAAoBpO,OAAOqO,YAAYrO,OAAOsO,QAAQH,EAAUC,mBAAmBjR,KAAI,YAAuB,IAAD,mBAApBoR,EAAoB,KAAXC,EAAW,KAC/G,OAAKrB,IAAiBsB,YAAYD,GAI3B,CAACD,EAASC,IAHfhB,GAAQ,EACD,CAACe,OAASG,QAIhBlB,IACHW,EAAUC,kBAAoBA,GAG5BD,EAAUQ,uBAAsBR,EAAUQ,qBAAuBR,EAAUQ,qBAAqBC,QAAO,SAAAC,GACzG,SAAKA,EAAKC,SAAWD,EAAKE,WACxBvB,GAAQ,GACD,OAjB6B,IAuBlCwB,EAAmEb,EAAnEa,aAAcC,EAAqDd,EAArDc,SAAUC,EAA2Cf,EAA3Ce,cAvBU,EAuBiCf,EAA5BgB,0BAvBL,MAuB0B,GAvB1B,EAwBpCC,EAAYC,IAAUC,aAAaL,GACvCd,EAAUgB,mBAAqBA,EAAmBP,QAAO,SAAAC,GAAS,IAClDU,EAAuCV,EAA/CC,OAA4BU,EAAmBX,EAA5BE,QACrBU,EAAeJ,IAAUK,kBAAkBvB,EAAWoB,GAE1D,QADkBF,IAAUM,qBAAqBX,EAAcO,EAAWC,EAAgBC,EAAcP,EAAeE,KAErH5B,GAAQ,GACD,MAMNW,EAAUyB,UACbzB,EAAUyB,QAAU,MACpBpC,GAAQ,GAELA,GACHP,IAAkB4C,gBAAgB1B,S,iCC1G1C,8KAAI2B,EAAgB,GAChBC,EAAsB,qDAC1BA,EAAoB7Q,MAAK,SAAAC,GACvB2Q,EAAgB3Q,EAAIC,QACpB2Q,EAAsB,QAGxB,IAAMC,EAAa,CACjB,GAAM,CACJjO,KAAM,QACNkO,MAAO,EACPC,MAAO,GAET,IAAO,CACLnO,KAAM,SACNkO,MAAO,GACPC,MAAO,GAET,KAAQ,CACNnO,KAAM,cACNkO,MAAO,GACPC,MAAO,GAGT,IAAO,CACLnO,KAAM,SACNkO,MAAO,GACPC,MAAO,GAET,KAAQ,CACNnO,KAAM,cACNkO,MAAO,GACPC,MAAO,GAGT,IAAO,CACLnO,KAAM,SACNkO,MAAO,GACPC,MAAO,GAET,KAAQ,CACNnO,KAAM,cACNkO,MAAO,GACPC,MAAO,GAET,IAAO,CACLnO,KAAM,SACNkO,MAAO,GACPC,MAAO,GAET,KAAQ,CACNnO,KAAM,cACNkO,MAAO,GACPC,MAAO,GAET,IAAO,CACLnO,KAAM,SACNkO,MAAO,GACPC,MAAO,GAET,KAAQ,CACNnO,KAAM,cACNkO,MAAO,GACPC,MAAO,GAGT,IAAO,CACLnO,KAAM,SACNkO,MAAO,GACPC,MAAO,GAET,KAAQ,CACNnO,KAAM,cACNkO,MAAO,GACPC,MAAO,GAET,IAAO,CACLnO,KAAM,SACNkO,MAAO,GACPC,MAAO,IAILC,EAAoB,CACxB5O,UAAW,EACXC,SAAU,GACVF,UAAW,IACX8O,KAAM,KAEFC,EAA8B,CAAC,MAAO,OAAQ,OAAQ,UAAW,YAAa,YAAa,YAAa,WAAY,gBAAiB,sBAAuB,oBAAqB,wBAAyB,sBAAuB,qBAAsB,uB,8FCtFvPC,EAAW,CACfC,QAASC,IACTC,SAAUD,IACVxP,IAAKwP,IACL1P,GAAI0P,IAEJE,SAAUC,IACVC,UAAWD,IACX1P,KAAM0P,IACN5P,IAAK4P,IAELE,SAAUC,IACVC,UAAWD,IACX5P,KAAM4P,IACNlP,IAAKkP,IAELzP,QAAS2P,IACTzP,UAAW0P,IACXzP,SAAU0P,IACV5P,UAAW6P,IACX1P,UAAW2P,KAGPC,EAAc,SAACC,GAAD,OAClBhB,EAASgB,GAAW,cAAC,IAAD,CAAiB5U,KAAM4T,EAASgB,GAAUxU,UAAU,UAAa,O,iICxBjFyU,EAAuB,GAqB7B,SAASC,EAAmBrR,GAA6B,IAAxBsR,EAAuB,uDAAJ,GAC9CC,EAAeC,EAAmBxR,EAAKsR,IAAqB,GAEhEA,EAAiBvR,SAAQ,SAAA0R,GAAoB,IAAD,IACXC,IAAiBD,EAAgBzR,MAAQ,GAAlEA,EADoC,EACpCA,IADoC,IAC/B2R,kBAD+B,MAClB,GADkB,EAErCJ,EAAaK,SAAS5R,KAC3B,EAAAuR,GAAatR,KAAb,oBAAqB0R,OAEvBJ,EAAY,YAAO,IAAIM,IAAIN,IAC3B,IAAIO,EAAcjS,OAAO9C,KAAKgV,KAAUtD,QAAO,SAAAuD,GAAC,OAAIA,IAAMhS,GAAOuR,EAAaK,SAASI,MACnFC,EAAWpS,OAAO9C,KAAKmV,KAAUzD,QAAO,SAAAuD,GAAC,OAAIA,IAAMhS,GAAOuR,EAAaK,SAASI,MACpF,MAAO,CAAEF,cAAaG,YAExB,SAAST,EAAmBxR,GAA6B,IAAD,IAAvBsR,EAAuB,uDAAJ,GAC9CC,EAAe,CAACvR,GAChBmS,EAAkB,KAFgC,cAGxBb,GAHwB,IAGtD,oCAAWG,EAAX,SACM,UAAAC,IAAgB,OAACD,QAAD,IAACA,OAAD,EAACA,EAAiBzR,YAAlC,eAAwCA,OAAQA,IAClDmS,EAAe,UAAGT,IAAgB,OAACD,QAAD,IAACA,OAAD,EAACA,EAAiBzR,YAArC,aAAG,EAAwC2R,aALR,8BAWtD,OAJe,QAAf,EADAQ,EAAkBA,GAAmBf,EAAqBpR,UAC1D,SAAiBD,SAAQ,SAAAiS,GACvB,IAAII,EAAkBZ,EAAmBQ,EAAGV,GAC5CC,EAAatR,KAAb,MAAAsR,EAAY,YAASa,OAEhBb,EA1BT1R,OAAO9C,KAAKgV,KAAUhS,SAAQ,SAAAC,GAAG,OAlBX,SAACA,GACrB,IAAIqS,EAAU,GACVV,EAAa,GACjB9R,OAAO9C,KAAKmV,KAAUzD,QAAO,SAAAuD,GAAC,OAAIA,IAAMhS,KAAKD,SAAQ,SAAAiS,GACnDnS,OAAOyS,eAAeD,EAASL,EAAG,CAChCO,IAAK,WAGH,OAFAZ,EAAW1R,KAAK+R,GAChBnS,OAAOyS,eAAeD,EAASL,EAAG,CAAEO,IAAK,kBAAM,KACxC,GAETC,cAAc,OAGlBC,YAAmBJ,GAES,kBAAjBA,EAAQrS,KACjBoR,EAAqBpR,GAAO2R,GAEKe,CAAc1S,O,uFCpBpC,SAAS2S,EAAajW,GAAQ,IACrCkW,EAA6BlW,EAA7BkW,QAASvF,EAAoB3Q,EAApB2Q,MAAOwF,EAAanW,EAAbmW,SAClBC,EAAczF,EAAoB0F,MAAMH,GAAW,YAAjB,UAAkCI,KAAKC,MAAgB,IAAVL,GAAkB,EAA/D,QAAZ,SAC1B,OAAO,cAAC,IAAD,CAAO/O,QAASiP,EAAYnW,UAA0B,cAAfmW,EAA6B,GAAK,mBAAzE,SAA8FD,M,iCCLvG,yDAQIK,EAAqBC,IAAMC,YAAW,SAAUhR,EAAMD,GACxD,IAAIkR,EAAWjR,EAAKiR,SAChBxP,EAAUzB,EAAKyB,QACfyP,EAAOlR,EAAKkR,KACZ3W,EAAYyF,EAAKzF,UACjB4W,EAAUnR,EAAKoR,GACfC,OAAwB,IAAZF,EAAqB,OAASA,EAC1C7W,EAAQgX,YAA8BtR,EAAM,CAAC,WAAY,UAAW,OAAQ,YAAa,OAEzFuR,EAASC,YAAmBP,EAAU,SAC1C,OAAoBF,IAAMU,cAAcJ,EAAWK,YAAS,CAC1D3R,IAAKA,GACJzF,EAAO,CACRC,UAAWoX,IAAWpX,EAAWgX,EAAQL,GAAQK,EAAS,QAAS9P,GAAW8P,EAAS,IAAM9P,SAGjGqP,EAAMc,YAAc,QACpBd,EAAMe,aApBa,CACjBX,MAAM,GAoBOJ,O,qPCZA,SAASgB,EAAT,GAA0F,IAAlEC,EAAiE,EAAjEA,WAAYC,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,SAAgC,IAAtBC,kBAAsB,SACtG,IAAKJ,EAAY,OAAO,KACxB,IAAMK,EAAc,SAACC,GACnBC,IAASC,oBAAoBR,EAAYM,GAC9B,OAAXL,QAAW,IAAXA,QAGEhH,EAAMJ,IAAiBsB,YAAY6F,GACnCS,EAAqBF,IAASE,mBAAmBxH,GACjDyH,EAAe/H,IAAkBS,aAAaH,EAAIE,UAClDA,EAAWuH,EAAeA,EAAajT,KAAO,YAC9CkT,EAAgBP,EAA4B,EAAfnH,EAAI2H,SAAe3H,EAAI0C,MACpDkF,EAAeT,GAAcnH,EAAI0C,QAAyB,EAAf1C,EAAI2H,SAC/CE,EAAc,uBAAMtY,UAAWqY,EAAe,cAAgB,GAAhD,UAAqDN,IAASQ,iBAAiB9H,EAAIM,YAAaN,EAAI2H,SAAUD,EAAe,IAAKK,IAAKC,YAAYhI,EAAIM,gBACzK,OAAQ,eAAC,IAAD,CAAM/Q,UAAU,QAAQ0Y,OAAM,UAAKjI,EAAI2H,SAAT,QAAyBO,GAAG,eAAe5R,KAAK,YAA9E,UACN,cAAC,IAAK6R,OAAN,CAAa5Y,UAAU,MAAvB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAK6Y,GAAI,EAAGC,GAAI,EAAhB,SACE,cAAC,IAAD,CAAOC,IAAKhB,IAASiB,qBAAqBvI,EAAIK,OAAQL,EAAIgB,SAAUzR,UAAS,4BAAuByQ,EAAI2H,SAA3B,YAA+Ca,WAAS,MAEvI,eAAC,IAAD,CAAKjZ,UAAU,OAAf,UACE,6BAAI,sCAAO+X,IAASmB,qBAAqBzI,EAAIK,OAAQL,EAAIgB,QAAS,2BAClE,gCAAMsG,IAASoB,4BAA4B1I,EAAIgB,SAA/C,YAA8DhB,EAAI0C,kBAIxE,eAAC,IAAKiG,KAAN,CAAWpZ,UAAU,0BAArB,UACE,eAAC,IAAKqZ,MAAN,WACE,8BAAMtB,IAASuB,mBAAmB7I,EAAIK,OAAQ,kBAC9C,uBAAO9Q,UAAU,gBAAjB,SAAiC,cAAC,IAAD,CAAOE,MAAOuQ,EAAI2H,gBAErD,oBAAIpY,UAAU,OAAd,SACE,8BAAIwY,IAAKe,YAAY9I,EAAIM,aAAzB,IAAwCuH,OAE1C,cAAC,IAAD,CAAKtY,UAAU,OAAf,SACGyQ,EAAI+I,SAAW/I,EAAI+I,SAASnZ,KAAI,SAACoZ,EAAMlZ,GAAO,IAAD,EAC5C,IAAKkZ,IAASA,EAAK9Y,MAAO,OAAO,KACjC,IAAI+Y,EAAoBzB,EAAmB0B,mBAAmBpZ,GAC1DqZ,GAA4B,OAAjBF,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBG,aAAnB,eAA0BC,SAAU,EAC/CC,GAA8B,OAAjBL,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBK,aAAc,EAC9CC,EAAa,GAAmB,GAAbD,EACnBE,EAAWzB,IAAKe,YAAYE,EAAKpW,KACrC,OAAQ,eAAC,IAAD,CAAawV,GAAI,GAAjB,UACN,cAAC,IAAD,CAAO3R,QAAS+Q,EAAmBvH,MAAnB,UAA8BkJ,EAA9B,QAA+C,SAAU5Z,UAAU,mBAAnF,SAAsG,4BAAIiY,EAAmBvH,MAAQkJ,EAAW,QAAiB,IACjK,uBAAM5Z,UAAS,eAAU4Z,EAAV,QAAf,UAA0CK,EAA1C,WAAwDzB,IAAKC,YAAYgB,EAAKpW,KAAOoW,EAAK9Y,MAAMuZ,QAAQ,GAAKT,EAAK9Y,OAAlH,OAA0H6X,IAAKC,YAAYgB,EAAKpW,SAChJ,uBAAMrD,UAAU,cAAcma,MAAO,CAAEC,QAASJ,GAAhD,UAA+DD,EAAWG,QAAQ,GAAlF,SAHgB3Z,MAMhB,OAEN,sBAAKP,UAAU,UAAf,UACE,sBAAMA,UAAU,YAAhB,2BACA,cAAC,IAAD,CAAcqa,QAASpC,EAAmBqC,IAAK5J,MAAOuH,EAAmBvH,MAAOuF,QAASgC,EAAmBsC,kBAA5G,UACItC,EAAmBsC,kBAAoBtC,EAAmBsC,kBAAoB,GAAGL,QAAQ,GAAK,MAElG,4BAAI,QACJ,cAAC,IAAD,CAAcG,QAASpC,EAAmBqC,IAAK5J,MAAOuH,EAAmBvH,MAAOuF,QAASgC,EAAmBuC,kBAA5G,UACIvC,EAAmBuC,kBAAoBvC,EAAmBuC,kBAAoB,GAAGN,QAAQ,GAAK,YAKtG,cAAC,IAAKO,OAAN,CAAaza,UAAU,OAAvB,SACE,eAAC,IAAD,CAAKA,UAAU,4CAAf,UACGyX,EAAc,cAAC,IAAD,CAAKoB,GAAG,OAAR,SACb,eAAC,IAAD,WACE,cAAC,IAASzR,OAAV,CAAiBC,KAAK,KAAtB,SAA4BsJ,IAC5B,eAAC,IAASrJ,KAAV,WACE,cAAC,IAASC,KAAV,CAAeC,QAAS,kBAAMqQ,KAA9B,uBACC3U,OAAOsO,QAAQrB,IAAkBiB,wBAAwB/Q,KAAI,mCAAEqa,EAAF,KAAMC,EAAN,YAC5D,cAAC,IAASpT,KAAV,CAAwBC,QAAS,kBAAMqQ,EAAY6C,IAAnD,SACGC,EAAK1V,MADYyV,cAKnB,cAAC,IAAD,CAAK7B,GAAG,OAAR,SAAe,8CAAiBlI,OACzC,cAAC,IAAD,CAAKkI,GAAG,OAAR,SACE,eAAC,IAAD,WACGpB,EAAc,cAAC,IAAD,CAAgBmD,UAAU,MACvCC,QAAS,cAAC,IAAD,6IADI,SAEb,sBAAM7a,UAAU,iBAAhB,SACE,cAAC,IAAD,CAAQqH,KAAK,KACXjG,SAAUqP,EAAIE,SACdwJ,MAAO1J,EAAIE,SAAW,CAAEmK,cAAe,QAAW,GAClDtT,QAAS,WACPiJ,EAAIsK,MAAQtK,EAAIsK,KAChB1K,IAAiBa,eAAeT,GACrB,OAAXgH,QAAW,IAAXA,QANJ,SAQE,cAAC,IAAD,CAAiB7X,KAAO6Q,EAAIsK,MAAQtK,EAAIE,SAAYqK,IAASC,IAAYjb,UAAU,gBAGrE,KACnBkb,QAAQxD,IAAW,cAAC,IAAD,CAAQxQ,QAAQ,OAAOG,KAAK,KAC9CG,QAAS,kBAAMkQ,KADG,SAElB,cAAC,IAAD,CAAiB9X,KAAMub,IAAQnb,UAAU,YAE1Ckb,QAAQvD,IAAa,cAAC,IAAD,CAAQzQ,QAAQ,SAASG,KAAK,KAClDG,QAAS,kBAAMmQ,KADK,SAEpB,cAAC,IAAD,CAAiB/X,KAAMwb,IAAYpb,UAAU,2B,2PCpE5Cqb,EAxCI,SAAsBtb,GACvC,IAAIub,EAAmBC,YAAgBxb,EAAO,CAC5Cyb,UAAW,aAETd,EAAKY,EAAiBZ,GACtBe,EAAwBH,EAAiBI,gBACzCC,EAAWL,EAAiBK,SAC5BH,EAAYF,EAAiBE,UAC7BI,EAAaN,EAAiBM,WAC9BC,EAAeP,EAAiBO,aAChCC,EAAgBR,EAAiBQ,cACjC5F,EAAWoF,EAAiBpF,SAE5BwF,EAAkBK,mBAAQ,WAC5B,OAAON,GAAyB,SAAUpY,EAAK7B,GAC7C,OAAOkZ,EAAKA,EAAK,IAAMlZ,EAAO,IAAM6B,EAAM,QAE3C,CAACqX,EAAIe,IACJO,EAAaD,mBAAQ,WACvB,MAAO,CACLJ,SAAUA,EACVH,UAAWA,EACXI,WAAYA,EACZC,aAAcA,IAAgB,EAC9BC,cAAeA,IAAiB,EAChCG,gBAAiB,SAAyB5Y,GACxC,OAAOqY,EAAgBrY,EAAK,YAE9B6Y,gBAAiB,SAAyB7Y,GACxC,OAAOqY,EAAgBrY,EAAK,WAG/B,CAACsY,EAAUH,EAAWI,EAAYC,EAAcC,EAAeJ,IAClE,OAAoBlF,IAAMU,cAAciF,IAAWC,SAAU,CAC3Dzb,MAAOqb,GACOxF,IAAMU,cAAcmF,IAAkBD,SAAU,CAC9Dzb,MAAOgb,GAAY,MAClBzF,K,qCCvBUoG,EAde9F,IAAMC,YAAW,SAAUhR,EAAMD,GAC7D,IAAIkR,EAAWjR,EAAKiR,SAChBE,EAAUnR,EAAKoR,GACfC,OAAwB,IAAZF,EAAqB,MAAQA,EACzC5W,EAAYyF,EAAKzF,UACjBD,EAAQgX,YAA8BtR,EAAM,CAAC,WAAY,KAAM,cAE/D8W,EAAoBtF,YAAmBP,EAAU,eACrD,OAAoBF,IAAMU,cAAcJ,EAAWK,YAAS,CAC1D3R,IAAKA,GACJzF,EAAO,CACRC,UAAWoX,IAAWpX,EAAWuc,S,SCcrC,IAAIC,EAAuBhG,IAAMC,YAAW,SAAU1W,EAAOyF,GAC3D,IAAIiX,EAtBN,SAAuB1c,GACrB,IAAI2c,EAAUC,qBAAWR,KACzB,IAAKO,EAAS,OAAO3c,EAErB,IAAIyb,EAAYkB,EAAQlB,UACpBS,EAAkBS,EAAQT,gBAC1BC,EAAkBQ,EAAQR,gBAC1BU,EAAO7F,YAA8B2F,EAAS,CAAC,YAAa,kBAAmB,oBAE/EG,GAAwC,IAArB9c,EAAM6b,aAA4C,IAApBgB,EAAKhB,WACtDvY,EAAMyZ,YAAa/c,EAAMgd,UAC7B,OAAO5F,YAAS,GAAIpX,EAAO,CACzBid,OAAwB,MAAhBjd,EAAMid,QAAyB,MAAP3Z,EAAcyZ,YAAatB,KAAenY,EAAMtD,EAAMid,OACtFtC,GAAIuB,EAAgBlc,EAAMgd,UAC1B,kBAAmBb,EAAgBnc,EAAMgd,UACzCnB,WAAYiB,IAAqB9c,EAAM6b,YAAcgB,EAAKhB,YAAcqB,KACxEpB,aAAoC,MAAtB9b,EAAM8b,aAAuB9b,EAAM8b,aAAee,EAAKf,aACrEC,cAAsC,MAAvB/b,EAAM+b,cAAwB/b,EAAM+b,cAAgBc,EAAKd,gBAKrDoB,CAAcnd,GAC/B2W,EAAW+F,EAAe/F,SAC1B1W,EAAYyc,EAAezc,UAC3Bgd,EAASP,EAAeO,OACxBG,EAAUV,EAAeU,QACzBC,EAAaX,EAAeW,WAC5BC,EAAYZ,EAAeY,UAC3BC,EAASb,EAAea,OACxBC,EAAYd,EAAec,UAC3BC,EAAWf,EAAee,SAC1B3B,EAAeY,EAAeZ,aAC9BC,EAAgBW,EAAeX,cAC/B2B,EAAahB,EAAeb,WAC5B8B,EAAoBjB,EAAe5F,GACnCC,OAAkC,IAAtB4G,EAA+B,MAAQA,EAEnDd,GADIH,EAAeM,SACZhG,YAA8B0F,EAAgB,CAAC,WAAY,YAAa,SAAU,UAAW,aAAc,YAAa,SAAU,YAAa,WAAY,eAAgB,gBAAiB,aAAc,KAAM,cAEvNzF,EAASC,YAAmBP,EAAU,YAC1C,IAAKsG,IAAWS,GAAc3B,EAAe,OAAO,KACpD,IAAI6B,EAAoBnH,IAAMU,cAAcJ,EAAWK,YAAS,GAAIyF,EAAM,CACxEpX,IAAKA,EACLoY,KAAM,WACN,eAAgBZ,EAChBhd,UAAWoX,IAAWpX,EAAWgX,EAAQ,CACvCgG,OAAQA,OAgBZ,OAbIS,IAAYE,EAAoBnH,IAAMU,cAAcuG,EAAY,CAClEI,GAAIb,EACJG,QAASA,EACTC,WAAYA,EACZC,UAAWA,EACXC,OAAQA,EACRC,UAAWA,EACXC,SAAUA,EACV3B,aAAcA,EACdC,cAAeA,GACd6B,IAGiBnH,IAAMU,cAAciF,IAAWC,SAAU,CAC3Dzb,MAAO,MACO6V,IAAMU,cAAcmF,IAAkBD,SAAU,CAC9Dzb,MAAO,MACNgd,OAELnB,EAAQnF,YAAc,UACPmF,QCxEXsB,EAAmB,SAAUC,GAG/B,SAASD,IACP,OAAOC,EAAiBC,MAAMC,KAAMC,YAAcD,KAUpD,OAbAE,YAAeL,EAAKC,GAMPD,EAAIM,UAEVC,OAAS,WACd,MAAM,IAAIC,MAAM,gOAIXR,EAdc,CAerBtH,IAAMM,WAERgH,EAAIS,UAAYlD,EAChByC,EAAIU,QAAUlC,EACdwB,EAAIW,KAAOjC,EACIsB,Q,oIC1BXpB,EAAuBlG,IAAMkI,cAAc,MAC/ChC,EAAQrF,YAAc,mBACPqF,QCER,SAASiC,EAAmB5B,EAAUvV,GAC3C,IAAIoX,EAAkBjC,qBAAWkC,GAC7BlD,EAAWgB,qBAAWN,KAC1B,OAAO,SAAU1a,GAMXga,GAAUA,EADOoB,IAAa6B,EAAkB,KAAO7B,EACpBpb,GACnC6F,GAASA,EAAQ7F,IAGzB,IAmBemd,GAnBoBtI,IAAMC,YAAW,SAAUhR,EAAMD,GAClE,IAAIoR,EAAUnR,EAAKoR,GACfC,OAAwB,IAAZF,EAAqB,SAAWA,EAC5CV,EAAWzQ,EAAKyQ,SAChB6G,EAAWtX,EAAKsX,SAChBvV,EAAU/B,EAAK+B,QACfzH,EAAQgX,YAA8BtR,EAAM,CAAC,KAAM,WAAY,WAAY,YAE3EsZ,EAAmBJ,EAAmB5B,EAAUvV,GAMpD,MAJkB,WAAdsP,IACF/W,EAAMyB,KAAO,UAGKgV,IAAMU,cAAcJ,EAAWK,YAAS,CAC1D3R,IAAKA,EACLgC,QAASuX,GACRhf,GAAQmW,M,SC7BT8I,GAAiCxI,IAAMC,YAAW,SAAUhR,EAAMD,GACpE,IAAI0Q,EAAWzQ,EAAKyQ,SAChB6G,EAAWtX,EAAKsX,SAChBhd,EAAQgX,YAA8BtR,EAAM,CAAC,WAAY,aAEzDmZ,EAAkBjC,qBAAWkC,GAGjC,OAAoBrI,IAAMU,cAAcmF,IAAkBD,SAAU,CAClEzb,MAAO,MACO6V,IAAMU,cAAc+H,KAAU9H,YAAS,CACrD3R,IAAKA,EACLqY,GAAIe,IAAoB7B,GACvBhd,GAAqByW,IAAMU,cAAc,MAAO,KAAMV,IAAM0I,SAASC,KAAKjJ,SAE/E8I,GAAkB3H,YAAc,oBACjB2H,UCZXI,GAAyB5I,IAAMC,YAAW,SAAU1W,EAAOyF,GAC7D,IAAI8V,EAAmBC,YAAgBxb,EAAO,CAC5Cyb,UAAW,aAET6D,EAAsB/D,EAAiBzE,GACvCC,OAAoC,IAAxBuI,EAAiC,MAAQA,EACrD7D,EAAYF,EAAiBE,UAC7B9E,EAAW4E,EAAiB5E,SAC5BR,EAAWoF,EAAiBpF,SAC5BlW,EAAYsb,EAAiBtb,UAC7B2b,EAAWL,EAAiBK,SAC5B2D,EAAkBvI,YAA8BuE,EAAkB,CAAC,KAAM,YAAa,WAAY,WAAY,YAAa,aAE3HiE,EAAiBnI,IAAWpX,EAAWiX,YAAmBP,EAAU,cACxE,OAAoBF,IAAMU,cAAc2H,EAAiBzC,SAAU,CACjEzb,MAAO6a,GAAa,MACNhF,IAAMU,cAAcmF,IAAkBD,SAAU,CAC9Dzb,MAAOgb,GAAY,MACLnF,IAAMU,cAAcJ,EAAWK,YAAS,CACtD3R,IAAKA,GACJ8Z,EAAiB,CAClBtf,UAAWuf,IACTrJ,QAENkJ,GAAU/H,YAAc,YACxB+H,GAAUhY,OAAS0X,GACnBM,GAAUH,SAAWD,GACNI,U,8BCpCA,SAASI,GAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIpc,EAAK9C,EADLqB,ECHS,SAAuC6d,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIpc,EAAK9C,EAFLqB,EAAS,GACT+d,EAAazc,OAAO9C,KAAKqf,GAG7B,IAAKlf,EAAI,EAAGA,EAAIof,EAAW7F,OAAQvZ,IACjC8C,EAAMsc,EAAWpf,GACbmf,EAASE,QAAQvc,IAAQ,IAC7BzB,EAAOyB,GAAOoc,EAAOpc,IAGvB,OAAOzB,EDTM,CAA6B6d,EAAQC,GAGlD,GAAIxc,OAAO2c,sBAAuB,CAChC,IAAIC,EAAmB5c,OAAO2c,sBAAsBJ,GAEpD,IAAKlf,EAAI,EAAGA,EAAIuf,EAAiBhG,OAAQvZ,IACvC8C,EAAMyc,EAAiBvf,GACnBmf,EAASE,QAAQvc,IAAQ,GACxBH,OAAOkb,UAAU2B,qBAAqBC,KAAKP,EAAQpc,KACxDzB,EAAOyB,GAAOoc,EAAOpc,IAIzB,OAAOzB,E,uBEbT,SAASqe,GAAT,GAA+E,IAAD,EAExEC,EAFkB1L,EAAsD,EAAtDA,QAASnD,EAA6C,EAA7CA,UAAW8O,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAaC,EAAc,iDACxEC,GAAgB,OAALH,QAAK,IAALA,GAAA,UAAAA,EAAOI,kBAAP,eAAoB/L,KAAY,EAClCgM,EAAY,KACzB,GAAwB,kBAAbF,EACTJ,EAAU,+BAAOI,QACZ,CAAC,IAAD,MACDG,EAAclO,IAAUmO,yBAAyBrP,EAAWmD,GAChD,aAAZA,EACFiM,EAAclO,IAAUmO,yBAAyBrP,EAAW,WACzC,cAAZmD,EACPiM,EAAclO,IAAUmO,yBAAyBrP,EAAW,YACzC,cAAZmD,IACPiM,EAAclO,IAAUmO,yBAAyBrP,EAAW,YAAckB,IAAUmO,yBAAyBrP,EAAW,eAE1H,IAAIsP,EAAOL,EAAWG,EAClBG,IAAgB,OAAJD,QAAI,IAAJA,GAAA,UAAAA,EAAMzG,eAAN,oBAAAyG,EAAgBnI,KAAKqI,UAAUrM,MAAamM,GAAQnI,KAAKC,YAAYjE,GACjFmM,EAAO,EAAGH,EAAY,sBAAMxgB,UAAU,eAAhB,SAAgC4gB,IACjDD,EAAO,IAAGH,EAAY,uBAAMxgB,UAAU,eAAhB,eAAkC4gB,OAE7DH,GAAgBE,IAAMT,EAAU,sBAAMlgB,UAAWogB,GAAY7N,IAAUuO,YAAYzP,EAAWmD,GAAW,eAAiB,GAA1F,WAA2G,QAAX,EAAAiM,SAAA,mBAAavG,eAAb,sBAAuB1B,KAAKqI,UAAUrM,MAAaiM,GAAejI,KAAKC,YAAYjE,MAEzN,OAAO,eAACuM,EAAA,EAAD,2BAASV,GAAT,cACL,qBAAIrgB,UAAU,WAAd,UAA0BuU,aAAYC,GAAtC,IAAiDgE,KAAKe,YAAY/E,MAClE,uBAAMxU,UAAU,yBAAhB,UAA0CkgB,EAASM,SAGvD,IAAMQ,GAAsB,SAAC,GAA8E,IAAD,UAA3ExM,EAA2E,EAA3EA,QAASnD,EAAkE,EAAlEA,UAAW4P,EAAuD,EAAvDA,cAAeC,EAAwC,EAAxCA,SAAUd,EAA8B,EAA9BA,SAAaC,EAAiB,oEACpGH,GAAwB,OAAbe,QAAa,IAAbA,GAAA,UAAAA,EAAeV,kBAAf,eAA4B/L,KAAYjC,IAAUmO,yBAAyBrP,EAAWmD,GACjG2M,EAAO3I,KAAKC,YAAYjE,GACxBgM,IAAqB,OAARU,QAAQ,IAARA,GAAA,UAAAA,EAAUX,kBAAV,eAAuB/L,KAAY,KAAmB,OAAbyM,QAAa,IAAbA,GAAA,UAAAA,EAAeV,kBAAf,eAA4B/L,KAAY,GAElG,OAAO,eAACuM,EAAA,EAAD,2BAASV,GAAT,cACL,qBAAIrgB,UAAU,WAAd,UAA0BuU,aAAYC,GAAtC,IAAiDgE,KAAKe,YAAY/E,MAClE,uBAAMxU,UAAS,sBAAiBogB,GAAY7N,IAAUuO,YAAYzP,EAAWmD,GAAW,eAAiB,IAAzG,UACG0L,IAAYM,GAAmB,OAAPN,QAAO,IAAPA,GAAA,UAAAA,EAAShG,eAAT,oBAAAgG,EAAmB1H,KAAKqI,UAAUrM,KAAY2M,EAAO,KAC7EX,EAAY,uBAAMxgB,UAAWwgB,EAAY,EAAI,eAAiB,cAAlD,eAAoEA,EAAY,GAAK,KAAc,OAATA,QAAS,IAATA,GAAA,UAAAA,EAAWtG,eAAX,oBAAAsG,EAAqBhI,KAAKqI,UAAUrM,KAAY2M,EAA1I,OAA0J,a,mBC8F9JC,OA1Hf,YAAoL,IAAD,EAAlJ/P,EAAkJ,EAAlJA,UAAkJ,IAAvIA,UAAaa,EAA0H,EAA1HA,aAAcmP,EAA4G,EAA5GA,uBAAwBxP,EAAoF,EAApFA,qBAAwBoP,EAA4D,EAA5DA,cAAeC,EAA6C,EAA7CA,SAAUd,EAAmC,EAAnCA,SAAU3I,EAAyB,EAAzBA,YAAa6J,EAAY,EAAZA,SAAY,EACjJjgB,oBAAS,GADwI,mBAC5KkgB,EAD4K,KACjKC,EADiK,KAG7KrB,EAAQe,GAAsBD,EAC9BQ,EAAsBP,EAAQ,UAAGA,EAASX,kBAAZ,aAAG,EAAqBkB,oBAAsBpQ,EAAUoQ,oBACtFP,IAAUrP,EAAuBqP,EAASrP,sBAC9C,IAAM6P,EAAWnP,IAAUoP,mBAAmBzP,GAE1C0P,EAAmB,CAAEvQ,YAAW8O,QAAOC,YACvCyB,EAAuB,CAAExQ,YAAW4P,gBAAeC,WAAUd,YAI3D0B,EAAqB,YAAO,IAAI5M,IAAIwM,EAASrhB,KAAI,SAAAgD,GAAG,aAAIwR,aAAmBxR,EAAD,UAAM8c,EAAMI,kBAAZ,aAAM,EAAkB5L,qBAAmBoN,SACrH5M,EAAcjS,OAAO9C,KAAK4hB,MAAalQ,QAAO,SAAAzO,GAAG,OAAIye,EAAsB7M,SAAS5R,MAC1F,OAAO,qCACL,cAAC4e,EAAA,EAAD,UACE,cAAClB,EAAA,EAAD,CAAK/gB,UAAU,OAAf,SACE,cAAC,GAAD,UACE,eAACkiB,EAAA,EAAD,CAAMliB,UAAU,QAAQ2Y,GAAG,eAAe5R,KAAK,YAA/C,UACE,cAACmb,EAAA,EAAKtJ,OAAN,UACE,eAACqJ,EAAA,EAAD,WACE,cAAClB,EAAA,EAAD,UACE,qDAEF,cAACA,EAAA,EAAD,CAAKlI,GAAG,OAAR,SACE,cAAC,GAAUzR,OAAX,CAAkByP,GAAIsL,IAAQjb,QAAQ,OAAO6V,SAAS,iBAAiBvV,QAAS,kBAAMga,GAAcD,IAAYla,KAAK,KAArH,mBACMka,EAAY,OAAS,OAD3B,0BAMN,eAACW,EAAA,EAAK9I,KAAN,WACE,cAAC6I,EAAA,EAAD,UACIf,GAAYG,EACZK,EAASrhB,KAAI,SAAAmU,GAAO,OAAI,cAAC,GAAD,aAAqBqE,GAAI,GAAIC,GAAI,EAAGsJ,GAAI,GAAxC,2BAAkEP,GAAlE,IAAwFrN,aAAxCA,MACxEkN,EAASrhB,KAAI,SAAAmU,GAAO,OAAI,cAACyL,GAAD,aAAcpH,GAAI,GAAIC,GAAI,EAAGsJ,GAAI,GAAjC,2BAA2DR,GAA3D,IAA6EpN,aAApCA,QAErE,cAAC,GAAUyK,SAAX,CAAoBlC,SAAS,iBAA7B,SACE,cAACkF,EAAA,EAAD,UACG9M,EAAY9U,KAAI,SAAAgD,GAAG,OAAI,cAAC0d,EAAA,EAAD,CAAelI,GAAI,GAAI7Y,UAAU,OAAjC,SACtB,eAACkiB,EAAA,EAAD,CAAMvJ,GAAG,cAAc5R,KAAK,YAA5B,UACE,cAACmb,EAAA,EAAKtJ,OAAN,CAAa5Y,UAAU,MAAvB,SACGwY,KAAK6J,UAAUhf,EAAK8c,EAAMI,cAE7B,cAAC2B,EAAA,EAAK9I,KAAN,CAAWpZ,UAAU,MAArB,SACE,gCAAQwY,KAAK8J,aAAajf,EAAK8c,EAAMI,WAAYJ,EAAMI,WAAW5L,kBAAkB,WANxDtR,aAcvC6d,EAAW,eAACgB,EAAA,EAAKzH,OAAN,WACV,cAAC0H,EAAA,EAAD,CAAQ3a,QAAS,WACf+K,IAAUgQ,eAAelR,EAAUqJ,GAAIwG,EAASsB,aACrC,OAAX/K,QAAW,IAAXA,QAFF,sDAICgK,GAAuB,cAACgB,GAAA,EAAD,CAAOziB,UAAU,mCAAmCkH,QAAQ,SAA5D,SAAsE,yEAC/E,cAKzB,cAAC+a,EAAA,EAAD,UACE,cAAClB,EAAA,EAAD,UACE,eAACkB,EAAA,EAAD,WACE,cAAClB,EAAA,EAAD,CAAK2B,GAAI,EAAGC,GAAI,EAAG3iB,UAAU,OAA7B,SACE,eAACkiB,EAAA,EAAD,CAAMliB,UAAU,2BAA2B2Y,GAAG,eAAe5R,KAAK,YAAlE,UACE,cAACmb,EAAA,EAAKtJ,OAAN,mCACA,cAACsJ,EAAA,EAAK9I,KAAN,CAAWpZ,UAAU,cAArB,SACE,cAACiiB,EAAA,EAAD,UACG/e,OAAOsO,QAAQuG,IAAS6K,sBAAsBzC,EAAM0C,aAAaxiB,KAAI,mCAAEyQ,EAAF,KAAUgS,EAAV,YACpE,eAAC/B,EAAA,EAAD,CAAkBlI,GAAI,GAAI7Y,UAAU,OAApC,UACE,6BAAK+X,IAASuB,mBAAmBxI,KACjC,cAACmR,EAAA,EAAD,UACGa,EAAaziB,KAAI,SAAA0iB,GAChB,IAAIC,EAAWjL,IAASkL,uBAAuBnS,EAAQiS,GACnDxc,EAAiB,EACjBD,EAAcyR,IAASmL,gCAAgCpS,EAAQiS,GACnE,GAAIzc,EAAa,CACfC,EAAiB4c,KAAiBC,kBAAkBvR,EAAsB,CAAEG,OAAQlB,EAAQmB,QAAS8Q,IACrG,IAAIM,EAAmBtL,IAASuL,4BAA4BxS,EAAQiS,EAAWxc,GAC3E8c,IACGL,IAAUA,EAAW,IAC1B9f,OAAOsO,QAAQ6R,GAAkBjgB,SAAQ,mCAAEoR,EAAF,KAAW+O,EAAX,YACvCP,EAASxO,IAAYwO,EAASxO,IAAY,GAAK+O,MAGrD,IAAIC,EAAqB,cAACnd,GAAA,EAAD,CACvBjF,WAAU8f,EACV5a,YAAaA,EACbC,eAAgBA,EAChBC,eAAgB,SAACid,GAAD,OAnFN,SAAC3S,EAAQiS,EAAWxc,GAApB,cAAuC+a,QAAvC,IAAuCA,OAAvC,EAAuCA,GAAW,SAAAoC,GAAK,MACxF,CAAE7R,qBAAsBsR,KAAiB3c,eAAekd,EAAM7R,qBAAsB,CAAEG,OAAQlB,EAAQmB,QAAS8Q,GAAaxc,OAkF3Eod,CAA4B7S,EAAQiS,EAAWU,IACzEhd,OAAQ,eAAC8P,EAAA,EAAD,CAAOrP,QAAQ,UAAf,UAA0B6b,EAA1B,YAEV,OAAO,eAAChC,EAAA,EAAD,CAAqBlI,GAAI,GAAI7Y,UAAU,OAAvC,UACL,+BAAKwjB,EAAL,IAA0BzL,IAAS6L,yBAAyB9S,EAAQiS,EAAW5C,EAAMI,eACpFyC,EAAW,cAACf,EAAA,EAAD,UACT/e,OAAOsO,QAAQwR,GAAU3iB,KAAI,mCAAEmU,EAAF,KAAW+O,EAAX,YAC5B,eAACxC,EAAA,EAAD,CAAKlI,GAAI,GAAT,UAA4BL,KAAKe,YAAY/E,GAA7C,KAAyD+O,EAAK/K,KAAKC,YAAYjE,KAA7DA,QACb,OALMuO,UAvBbjS,eAsCnB5N,OAAOsN,OAAO2P,EAAMqC,aAAaniB,KAAI,SAAAqR,GAAK,OACzCA,EAAQ,cAACqP,EAAA,EAAD,CAAK2B,GAAI,EAAGC,GAAI,EAAe3iB,UAAU,OAAzC,SACN,cAACuX,GAAA,EAAD,CAAcC,WAAY9F,EAAO+F,YAAaA,EAAaG,WAAY6J,KADzC/P,GAEvB,mB,4DCtFNmS,GAhCG,SAAC,GAAD,IAAG5e,EAAH,EAAGA,KAAM6e,EAAT,EAASA,WAAYnjB,EAArB,EAAqBA,MAAOO,EAA5B,EAA4BA,YAAa6iB,EAAzC,EAAyCA,aAAc5iB,EAAvD,EAAuDA,cAAe8U,EAAtE,EAAsEA,QAAS7U,EAA/E,EAA+EA,SAAa4iB,EAA5F,6GAChB,eAACC,EAAA,EAAD,2BAAgBD,GAAhB,cACGF,EAAa,cAACG,EAAA,EAAWC,QAAZ,UAAqBJ,IAAmC,KACtE,cAACG,EAAA,EAAWC,QAAZ,UACE,cAACD,EAAA,EAAWE,KAAZ,UAAkBlf,MAEnBgR,EACC,cAAC,KAAD,CACE/U,YAAaA,EACbP,MAAOA,EACPQ,cAAeA,EACfC,SAAUA,IACP,cAAC,KAAD,CACHF,YAAaA,EACbP,MAAOA,EACPQ,cAAeA,EACfC,SAAUA,IAEb6U,EAAW,cAACgO,EAAA,EAAWG,OAAZ,UACV,cAACH,EAAA,EAAWE,KAAZ,kBACsB,UACNvS,IAAjBmS,EAA6B,cAACE,EAAA,EAAWG,OAAZ,UAC5B,cAACC,GAAA,EAAD,CAAgBzJ,UAAU,MACxBC,QAAS,cAACyJ,GAAA,EAAD,wDADX,SAEE,sBAAMtkB,UAAU,iBAAhB,SACE,cAACmiB,EAAA,EAAD,CAAQ3a,QAAS,kBAAMrG,EAAc4iB,IAAe3iB,SAAUA,GAAYT,IAAUojB,EAAc5J,MAAOxZ,IAAUojB,EAAe,CAAEjJ,cAAe,QAAW,GAA9J,SACE,cAAC,IAAD,CAAiBlb,KAAM2kB,cAIR,UCrBZ,SAASC,GAAsBzkB,GAAQ,IAAD,EAC7CsR,EAAmGtR,EAAnGsR,UAD6C,EACsDtR,EAAxFsR,UAAaa,EADqB,EACrBA,aAAcE,EADO,EACPA,cAAiBgO,EAA4CrgB,EAA5CqgB,SAAUqE,EAAkC1kB,EAAlC0kB,YAAaC,EAAqB3kB,EAArB2kB,iBADjC,EAEnBrjB,oBAAS,GAFU,mBAE9CsjB,EAF8C,KAEnCC,EAFmC,KAG/CC,EAAatS,IAAUuS,gBAAgB5S,GACvC6S,EAAgBxS,IAAUyS,iBAAiB9S,GAC3CiB,EAAQZ,IAAUmO,yBAAyBrP,EAAW,cAC1D,OAAO,eAAC4Q,EAAA,EAAD,WACL,cAAClB,EAAA,EAAD,CAAKlI,GAAI,GAAIC,GAAI,EAAjB,SAEE,eAACoJ,EAAA,EAAD,CAAMvJ,GAAG,eAAe5R,KAAK,YAAY/G,UAAU,OAAnD,UACE,cAACkiB,EAAA,EAAK+C,IAAN,CAAUlM,IAAKxG,IAAU2S,QAAQhT,GAAelS,UAAU,iBAC1D,cAACkiB,EAAA,EAAK9I,KAAN,UACE,eAAC6I,EAAA,EAAD,WACE,eAAClB,EAAA,EAAD,CAAKlI,GAAI,GAAT,UACE,+BAAKtG,IAAU4S,QAAQjT,GAAvB,IAAsC,cAACkT,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAAS6V,GAAa7kB,UAAU,gBAAzF,IAA0G,cAAColB,EAAA,EAAD,CAAOrM,IAAG,UAAEnK,KAAOY,mBAAT,aAAE,EAAqBuV,GAAgB/kB,UAAU,mBACrK,6BAAI,cAAC,KAAD,CAAOE,MAAOqS,IAAU8S,QAAQnT,GAAejS,SAAO,SAE5D,cAAC8gB,EAAA,EAAD,UACG4D,EAAY,cAAC1C,EAAA,EAAD,UAAK,cAAClB,EAAA,EAAD,UAChB,eAACkD,EAAA,EAAD,WACE,cAACA,EAAA,EAAWC,QAAZ,UACE,cAACD,EAAA,EAAWE,KAAZ,qBAEF,cAAC,KAAD,CAAgBhjB,cAAe,SAACoiB,GAAD,OAASkB,EAAY,aAAca,YAAM/B,EAAK,EAAG,MAAM5iB,MAAOwS,IAC7F,cAAC8Q,EAAA,EAAWG,OAAZ,UACE,cAACjC,EAAA,EAAD,UACE,cAAC,IAAD,CAAiBviB,KAAM2kB,IAAQld,KAAK,KAAKG,QAAS,kBAAMid,EAAY,aAAclS,IAAUgT,SAASlU,EAAUc,kBAGnH,cAAC8R,EAAA,EAAWG,OAAZ,UACE,cAACC,GAAA,EAAD,CACEzJ,UAAU,SACVC,QAAS,cAACyJ,GAAA,EAAD,gFAFX,SAIE,cAACnC,EAAA,EAAD,CAAQjb,QAAQ,SAASM,QAAS,kBAAMod,GAAcD,IAAYtd,KAAK,KAAvE,SACE,+BAAM,cAAC,IAAD,CAAiBzH,KAAM4lB,qBAMrC,eAACvD,EAAA,EAAD,WACE,cAAClB,EAAA,EAAD,UACE,yCAAY5N,OAEbiN,EAAW,cAACW,EAAA,EAAD,CAAKlI,GAAG,OAAO7Y,UAAU,YAAzB,SACV,cAACmiB,EAAA,EAAD,CAAQjb,QAAQ,OAAOM,QAAS,kBAAMod,GAAcD,IAAYtd,KAAK,KAArE,SACE,+BAAM,cAAC,IAAD,CAAiBzH,KAAMub,YAExB,UAGf,cAAC4F,EAAA,EAAD,CAAKlI,GAAI,GAAT,SACE,eAACoJ,EAAA,EAAD,WACE,cAAClB,EAAA,EAAD,CAAKlI,GAAI,GAAT,SAAa,6BAAKtG,IAAUkT,qBAAqBvT,OACjD,cAAC6O,EAAA,EAAD,UACE,cAACkB,EAAA,EAAD,CAAKjiB,UAAU,OAAf,SACG,YAAIG,MAAM,GAAGC,QAAQC,KAAI,SAAAE,GAAC,OACzB,cAACwgB,EAAA,EAAD,CAAKlI,GAAI,EAAG7Y,UAAU,MAAtB,SACE,cAAColB,EAAA,EAAD,CAAOrM,IAAKxG,IAAUmT,oBAAoBxT,EAAc3R,GAAIP,UAAS,uBAAkBoS,EAAgB7R,EAAI,GAAK,gBAC9G4Z,MAAO,CAAEwL,OAAQ,WAAaC,eAAa,EAACpe,QAAS4Y,EAAY,kBAC/DsE,EAAkBnkB,EAAI,IAAO6R,EAAgB7R,EAAIA,EAAI,IAAM,QAHhCA,yBAanD,eAACwgB,EAAA,EAAD,CAAKlI,GAAI,GAAIC,GAAI,EAAjB,UACE,cAAC+M,GAAD,eAA2B9lB,IAC3B,cAAC+lB,GAAD,eAAoB/lB,UAI1B,SAAS8lB,GAAsB9lB,GAAQ,IAAD,EACRsB,oBAAS,GADD,mBAC/B0kB,EAD+B,KACtBC,EADsB,OAEQ3kB,oBAAS,GAFjB,mBAE/B4kB,EAF+B,KAEdC,EAFc,KAG9B7U,EAAgGtR,EAAhGsR,UAH8B,EAGkEtR,EAArFsR,UAAaa,EAHM,EAGNA,aAAciU,EAHR,EAGQA,OAAU/F,EAAgDrgB,EAAhDqgB,SAAUkB,EAAsCvhB,EAAtCuhB,SAAUL,EAA4BlhB,EAA5BkhB,cAAeC,EAAanhB,EAAbmhB,SAGrFf,EAAQe,GAAsBD,EAE5BmF,EAAiB,SAAC/iB,EAAK1C,GAAN,OAAgB2gB,GAAS,SAAAoC,GAI9C,MAFY,QAARrgB,IAAeqgB,EAAMyC,OAAO5f,eAAiB,GACjDmd,EAAMyC,OAAO9iB,GAAO1C,EACb,CAAEwlB,OAAQzC,EAAMyC,YAErBE,EAAaC,IAAOC,oBAAoBJ,EAAO9iB,KAC/C0hB,EAAgBxS,IAAUyS,iBAAiB9S,GAC3CsU,EAAuBL,EAAOM,iBAAmBH,IAAOI,qBAAqBP,EAAO9iB,IAAK8iB,EAAOhU,UAChGwU,EAAsBR,EAAOS,gBAAkBN,IAAOO,oBAAoBV,EAAO9iB,IAAK8iB,EAAOhU,UAC7F2U,EAAoBR,IAAOS,qBAAqBZ,EAAO9iB,KACvD2jB,EAAmBV,IAAOW,mBAAmBd,EAAO9iB,IAAK8iB,EAAOe,aAChE7D,EAAmBiD,IAAOa,yBAAyBhB,EAAO9iB,IAAK8iB,EAAOe,YAAaf,EAAO5f,gBAC1FD,EAAcggB,IAAOc,qBAAqBjB,EAAO9iB,KACjDkD,EAAiB4f,EAAO5f,eACxB8gB,EAAiB,cAAChhB,GAAA,EAAD,CACnBC,YAAaA,EACbC,eAAgBA,EAChBC,eAAgB,SAACid,GAAD,OAAU2C,EAAe,iBAAkB3C,IAC3Dhd,OAAQ,+BAAOqgB,MAGjB,OAAO,eAAC5E,EAAA,EAAD,CAAMvJ,GAAG,eAAe5R,KAAK,YAAY/G,UAAU,OAAnD,UACL,cAACkiB,EAAA,EAAKtJ,OAAN,UACE,eAACqJ,EAAA,EAAD,WACE,cAAClB,EAAA,EAAD,UACE,4CAEF,cAACA,EAAA,EAAD,CAAKlI,GAAG,OAAR,SACE,cAACsJ,EAAA,EAAD,CAAQjb,QAAQ,OAAOG,KAAK,KAAKG,QAAS,kBAAM0e,GAAoBD,IAApE,SACE,iCAAM,cAAC,IAAD,CAAiBrmB,KAAM0nB,MAA7B,IAA8CrB,EAAkB,aAAe,oBAGlF7F,EAAW,cAACW,EAAA,EAAD,CAAKlI,GAAG,OAAR,SACV,cAACsJ,EAAA,EAAD,CAAQjb,QAAS6e,EAAU,SAAW,OAAQve,QAAS,kBAAMwe,GAAYD,IAAU1e,KAAK,KAAxF,SACE,iCAAM,cAAC,IAAD,CAAiBzH,KAAMmmB,EAAUP,IAASrK,MAAhD,IAA4D4K,EAAU,OAAS,cAE1E,UAGb,eAAC7D,EAAA,EAAK9I,KAAN,WACE,eAAC6I,EAAA,EAAD,CAAKjiB,UAAU,OAAf,UACE,cAAC+gB,EAAA,EAAD,CAAKlI,GAAI,GAAIC,GAAI,EAAjB,SACE,cAACsM,EAAA,EAAD,CAAOrM,IAAKnK,KAAOC,QAAQsX,EAAO9iB,KAAMrD,UAAS,4BAAuBsmB,IAAOiB,gBAAgBpB,EAAO9iB,KAArD,QAAiE4V,WAAS,MAE5H8M,EAAU,cAAChF,EAAA,EAAD,UACT,eAACkB,EAAA,EAAD,WACE,cAAClB,EAAA,EAAD,CAAK4B,GAAG,OAAO9J,GAAI,EAAG7Y,UAAU,YAAhC,SACE,cAACwnB,EAAA,EAAD,CAAgBC,MAAOnB,IAAOoB,cAAcvB,EAAO9iB,KAAnD,SACG,YAAIlD,MAAM,GAAGC,QAAQunB,UAAUtnB,KAAI,SAAAgD,GAAG,OAAIA,EAAM,KAAGhD,KAAI,SAACunB,EAAMrnB,EAAGsnB,GAAV,OAAkB,eAAC,IAAMngB,SAAP,WACxE,cAACogB,EAAA,EAASC,SAAV,UAAuC,cAAC,KAAD,CAAO7nB,MAAO0nB,KAA7B,OAASA,GAChC1kB,OAAOsO,QAAQ8U,IAAO0B,iBAAiBjD,IAAgBjT,QAAO,oDAAgCmW,SAAWL,KAAMvnB,KAAI,mCAAEgD,EAAF,KAAO6kB,EAAP,YAClH,cAACJ,EAAA,EAASvgB,KAAV,CAAyBC,QAAS,kBAAM4e,EAAe,MAAO/iB,IAA9D,SACG6kB,EAAUjjB,MADO5B,MAIpB9C,IAAMsnB,EAAI/N,OAAS,GAAM,cAAEgO,EAAA,EAASK,QAAX,MAPkEP,UAWnG,cAAC7G,EAAA,EAAD,CAAK4B,GAAG,OAAO9J,GAAI,EAAG7Y,UAAU,YAAhC,SACE,eAACwnB,EAAA,EAAD,CAAgBC,MAAOnB,IAAO8B,aAAajC,EAAOhU,UAAlD,UACE,cAAC2V,EAAA,EAASC,SAAV,UACE,yDAED7kB,OAAOsO,QAAQhP,KAAenC,KAAI,mCAAEgD,EAAF,KAAO4B,EAAP,YACjC,cAAC6iB,EAAA,EAASvgB,KAAV,CAAyBC,QAAS,kBAAM4e,EAAe,WAAY/iB,IAAnE,SACG4B,GADiB5B,WAKzByjB,GAAqB,cAAC/F,EAAA,EAAD,CAAK4B,GAAG,OAAO9J,GAAI,EAAG7Y,UAAU,OAAhC,SACpB,eAACwnB,EAAA,EAAD,CAAgBC,MAAK,qBAAgBtB,EAAOe,YAAc,GAAKlnB,UAAU,QAAzE,UACE,cAAC8nB,EAAA,EAASC,SAAV,UACE,6DAED,YAAI5nB,MAAM,GAAGC,QAAQC,KAAI,SAAAgD,GAAG,OAC3B,cAACykB,EAAA,EAASvgB,KAAV,CAAyBC,QAAS,kBAAM4e,EAAe,cAAe/iB,IAAtE,8BACiBA,EAAM,IADHA,WAK1B,cAAC0d,EAAA,EAAD,CAAKlI,GAAI,GAAI7Y,UAAU,OAAvB,SACE,cAAC,GAAD,CACEiF,KAAM,iCAAM,cAAC,IAAD,CAAiBrF,KAAMyoB,IAASroB,UAAU,SAAhD,SACNkB,YAAY,gBACZP,MAAO6lB,EACPvQ,SAAS,EACT9U,cAAe,SAACR,GAAD,OAAWylB,EAAe,kBAAmBzlB,IAC5DojB,aAAcuC,IAAOI,qBAAqBP,EAAO9iB,IAAK8iB,EAAOhU,cAGhEkU,GAAc,cAACtF,EAAA,EAAD,CAAKlI,GAAI,GAAI7Y,UAAU,OAAvB,SACb,cAAC,GAAD,CACEiF,KAAM,iCAAM,sBAAMjF,UAAU,OAAhB,SAAwBuU,aAAY8R,KAAoB7N,KAAKe,YAAY8M,MACrFnlB,YAAY,iBACZP,MAAOgmB,EACP1Q,QAA0C,MAAjCuC,KAAKC,YAAY4N,GAC1BllB,cAAe,SAACR,GAAD,OAAWylB,EAAe,iBAAkBzlB,IAC3DojB,aAAcuC,IAAOO,oBAAoBV,EAAO9iB,IAAK8iB,EAAOhU,mBAKlE,eAAC4O,EAAA,EAAD,WACE,cAACkB,EAAA,EAAD,CAAKjiB,UAAU,OAAf,SAAsB,eAAC+gB,EAAA,EAAD,WACpB,qBAAI/gB,UAAU,OAAd,UAAsBsmB,IAAOoB,cAAcvB,EAAO9iB,KAAlD,IAAyDijB,IAAO8B,aAAajC,EAAOhU,UAApF,IAAgG2U,GAAiB,sBAAmBX,EAAOe,YAAc,EAAxC,QACjH,gCAAQ,cAAC,KAAD,CAAOhnB,MAAOomB,IAAOiB,gBAAgBpB,EAAO9iB,cAEtD,cAAC4e,EAAA,EAAD,UACE,cAAClB,EAAA,EAAD,UAAMsG,MAGR,4BAAIP,GAAqBR,IAAOgC,4BAA4BnC,EAAO9iB,IAAK8iB,EAAOe,YAAa/G,EAAMI,WAAYlP,KAC9G,eAAC4Q,EAAA,EAAD,WACE,cAAClB,EAAA,EAAD,CAAKlI,GAAI,GAAIC,GAAI,EAAjB,SACE,uCAAU0N,OAEXH,GAAc,cAACtF,EAAA,EAAD,CAAKlI,GAAI,GAAIC,GAAI,EAAjB,SACb,+BAAKN,KAAKe,YAAY8M,GAAtB,KAAqCM,EAAqBnO,KAAKC,YAAY4N,WAG9E,eAACpE,EAAA,EAAD,YACGoB,GAAoB2D,IAAqB,cAACjG,EAAA,EAAD,CAAKlI,GAAI,GAAT,SAAa,oBAAI7Y,UAAU,OAAd,4BACvDgnB,GAAoB9jB,OAAOsO,QAAQwV,GAAkB3mB,KAAI,mCAAEgD,EAAF,KAAOkgB,EAAP,YACxD,eAACxC,EAAA,EAAD,CAAKlI,GAAI,GAAIC,GAAI,EAAjB,UAAwCN,KAAKe,YAAYlW,GAAzD,KAAiEkgB,EAAK/K,KAAKC,YAAYpV,KAA9D,OAASA,MAEnCggB,GAAoBngB,OAAOsO,QAAQ6R,GAAkBhjB,KAAI,mCAAEgD,EAAF,KAAOkgB,EAAP,YACxD,eAACxC,EAAA,EAAD,CAAKlI,GAAI,GAAIC,GAAI,EAAjB,UAAwCN,KAAKe,YAAYlW,GAAzD,KAAiEkgB,EAAK/K,KAAKC,YAAYpV,KAA9D,OAASA,eAK3C4iB,GAAmB,cAAChE,EAAA,EAAD,UAAK,cAAClB,EAAA,EAAD,UAAK,gCAAQuF,IAAOiC,qBAAqBpC,EAAO9iB,iBAK/E,SAASyiB,GAAe/lB,GAAQ,IACxBqgB,EAAqGrgB,EAArGqgB,SAAU/O,EAA2FtR,EAA3FsR,UAAwBgQ,EAAmEthB,EAAhFsR,UAAagQ,uBAA0BoD,EAAyC1kB,EAAzC0kB,YAAaxD,EAA4BlhB,EAA5BkhB,cAAeC,EAAanhB,EAAbmhB,SAE1Ff,EAAQe,GAAsBD,EAHL,EAKD5f,oBAAS,GALR,mBAKxB0kB,EALwB,KAKfC,EALe,OAMS3kB,oBAAS,GANlB,mBAMxBmnB,EANwB,KAMVC,EANU,KAQzBC,EAAiB,CAAC,UAAW,YAAa,WAAY,YAAa,aACjEC,EAAkB,CAAC,WAAY,YAAa,aAClDA,EAAgBrlB,KAAhB,MAAAqlB,EAAwBD,GACxB,IAAME,EAAe,CAAC,UAAW,KAAM,MAAO,WAAY,MAAO,OAAQ,WAAY,MAAO,QAC5FA,EAAatlB,KAAb,MAAAslB,EAAqBF,GACrB,IAAMG,EAAgB,CAAC,OAAQ,WAAY,aAAc,SAAU,gBAAiB,WAEpFtW,IAAUuW,mBAAmB1lB,SAAQ,SAAA2lB,GACnCF,EAAcvlB,KAAd,UAAsBylB,EAAtB,mBACAF,EAAcvlB,KAAd,UAAsBylB,EAAtB,gBAEF,IAAMC,EAAe,CAAC,qBAAsB,qBAAsB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,MAAO,WAAY,UAAW,gBAExKC,EAAqB1W,IAAUmO,yBAAyBrP,EAAW,sBACnE6X,EAAqB3W,IAAUmO,yBAAyBrP,EAAW,sBACnE8X,EAAsB3Q,KAAKC,YAAYwQ,GAEvCG,EAAmE,MAAzC5Q,KAAKC,YAAYwQ,GAC3CI,EAAmB,CACrBnoB,YAAa,yBACbP,MAAO4R,IAAUmO,yBAAyBrP,EAAW,sBACrDlQ,cAAe,SAACR,GAAD,OAAW8jB,EAAY,qBAAsB9jB,KAE1D2oB,EAAmBF,EACrB,cAAC,KAAD,eAAsBC,IACpB,cAAC,KAAD,eAAoBA,IAEpBzH,EAAmB,CAAEvQ,YAAW8O,QAAOC,YACvCyB,EAAuB,CAAExQ,YAAW4P,gBAAeC,WAAUd,YACjE,OAAO,qCACL,eAAC8B,EAAA,EAAD,CAAMvJ,GAAG,eAAe5R,KAAK,YAAY/G,UAAU,OAAnD,UACE,cAACkiB,EAAA,EAAKtJ,OAAN,UACE,eAACqJ,EAAA,EAAD,WACE,cAAClB,EAAA,EAAD,UACE,qDAEDX,EAAW,cAACW,EAAA,EAAD,CAAKlI,GAAG,OAAR,SACV,cAACsJ,EAAA,EAAD,CAAQjb,QAAS6e,EAAU,SAAW,OAAQve,QAAS,kBAAMwe,GAAYD,IAAU1e,KAAK,KAAxF,SACE,iCAAM,cAAC,IAAD,CAAiBzH,KAAMmmB,EAAUP,IAASrK,MAAhD,IAA4D4K,EAAU,OAAS,cAE1E,UAGZA,EACC,cAAC7D,EAAA,EAAK9I,KAAN,UACE,eAAC6I,EAAA,EAAD,CAAKjiB,UAAU,OAAf,UACG4oB,EAAavoB,KAAI,SAAAmU,GAAO,OACvB,cAACuM,EAAA,EAAD,CAAK4B,GAAI,EAAG9J,GAAI,GAAhB,SACE,cAAC,GAAD,CACE7Y,UAAU,OACViF,KAAM,iCAAOsP,aAAYC,GAAnB,IAA8BgE,KAAK+Q,kBAAkB/U,MAC3DtT,YAAW,eAAUsX,KAAKe,YAAY/E,IACtC7T,MAAO4R,IAAUmO,yBAAyBrP,EAAWmD,GACrDyB,QAAuC,MAA9BuC,KAAKC,YAAYjE,GAC1BrT,cAAe,SAACR,GAAD,OAAW8jB,EAAYjQ,EAAS7T,IAC/CojB,aAAcxR,IAAUiX,iBAAiBnY,EAAWmD,MAR/BA,MAY3B,cAACuM,EAAA,EAAD,CAAK4B,GAAI,EAAG9J,GAAI,GAAhB,SACE,eAACoL,EAAA,EAAD,WACE,eAACuD,EAAA,EAAD,CACEC,MAAOjP,KAAKiR,uBAAuBR,EAAoB,oBACvDpS,GAAIoN,IAAWC,QAFjB,UAIE,cAAC4D,EAAA,EAASC,SAAV,uCACCxU,KAA4BlT,KAAI,SAAAgD,GAAG,OAClC,cAACykB,EAAA,EAASvgB,KAAV,CAAyBC,QAAS,kBAAMid,EAAY,qBAAsBphB,IAA1E,SACGmV,KAAKiR,uBAAuBpmB,IADXA,SAIvBimB,EACAF,GAA4B,cAACnF,EAAA,EAAWG,OAAZ,UAC3B,cAACH,EAAA,EAAWE,KAAZ,4BAMV,cAACjC,EAAA,EAAK9I,KAAN,UACE,eAAC6I,EAAA,EAAD,CAAKjiB,UAAU,OAAf,UACIkhB,GAAYG,EACZsH,EAAgBtoB,KAAI,SAAAmU,GAAO,OAAI,cAAC,GAAD,aAAqBqE,GAAI,GAAI8J,GAAI,GAAjC,2BAA2Dd,GAA3D,IAAiFrN,aAAxCA,MACxEmU,EAAgBtoB,KAAI,SAAAmU,GAAO,OAAI,cAACyL,GAAD,aAAcpH,GAAI,GAAI8J,GAAI,GAA1B,2BAAoDf,GAApD,IAAsEpN,aAApCA,MAClE0U,EAAqB,eAACnI,EAAA,EAAD,CAAK4B,GAAI,EAAG9J,GAAI,GAAhB,UACpB,iCAAM,6CAAN,IAA0B,sBAAM7Y,UAAWuS,IAAUuO,YAAYzP,EAAW,sBAAwB,eAAiB,GAA3F,SAAgGmH,KAAKe,YAAY0P,QAC3I,sBAAMjpB,UAAS,sBAAiBuS,IAAUuO,YAAYzP,EAAW,sBAAwB,eAAiB,IAA1G,mBAAoH6X,GAApH,OAAyIC,QAClI,aAKjB,eAACjH,EAAA,EAAD,CAAMvJ,GAAG,eAAe5R,KAAK,YAAY/G,UAAU,OAAnD,UACE,cAACkiB,EAAA,EAAKtJ,OAAN,UACE,eAACqJ,EAAA,EAAD,WACE,cAAClB,EAAA,EAAD,UACE,iDAEDX,EAAW,cAACW,EAAA,EAAD,CAAKlI,GAAG,OAAR,SACV,cAACsJ,EAAA,EAAD,CAAQjb,QAASshB,EAAe,SAAW,OAAQhhB,QAAS,kBAAMihB,GAAiBD,IAAenhB,KAAK,KAAvG,SACE,iCAAM,cAAC,IAAD,CAAiBzH,KAAM4oB,EAAehD,IAASrK,MAArD,IAAiEqN,EAAe,OAAS,cAEpF,UAGZA,EACC,cAACtG,EAAA,EAAK9I,KAAN,UACE,cAAC6I,EAAA,EAAD,CAAKjiB,UAAU,OAAf,SACG6oB,EAAcxoB,KAAI,SAAAmU,GAAO,OACxB,cAACuM,EAAA,EAAD,CAAK4B,GAAI,EAAG9J,GAAI,GAAhB,SACE,cAAC,GAAD,CACE7Y,UAAU,OACViF,KAAM,iCAAOsP,aAAYC,GAAnB,IAA8BgE,KAAKe,YAAY/E,MACrDtT,YAAW,eAAUsX,KAAKkR,eAAelV,IACzC7T,MAAO4R,IAAUmO,yBAAyBrP,EAAWmD,GACrDyB,QAAuC,MAA9BuC,KAAKC,YAAYjE,GAC1BrT,cAAe,SAACR,GAAD,OAAW8jB,EAAYjQ,EAAS7T,IAC/CojB,aAAcxR,IAAUiX,iBAAiBnY,EAAWmD,MAR/BA,UAa/B,cAAC0N,EAAA,EAAK9I,KAAN,UACE,cAAC6I,EAAA,EAAD,CAAKjiB,UAAU,OAAf,SACIkhB,GAAYG,EACZwH,EAAcxoB,KAAI,SAAAmU,GAAO,OAAI,cAAC,GAAD,aAAqBqE,GAAI,GAAI8J,GAAI,GAAjC,2BAA2Dd,GAA3D,IAAiFrN,aAAxCA,MACtEqU,EAAcxoB,KAAI,SAAAmU,GAAO,OAAI,cAACyL,GAAD,aAAcpH,GAAI,GAAI8J,GAAI,GAA1B,2BAAoDf,GAApD,IAAsEpN,aAApCA,aAKzE,eAAC0N,EAAA,EAAD,CAAMvJ,GAAG,eAAe5R,KAAK,YAAY/G,UAAU,OAAnD,UACE,cAACkiB,EAAA,EAAKtJ,OAAN,UACE,cAACqJ,EAAA,EAAD,UACE,cAAClB,EAAA,EAAD,UACE,oDAIN,cAACmB,EAAA,EAAK9I,KAAN,UACE,cAAC6I,EAAA,EAAD,CAAKjiB,UAAU,OAAf,SACIkhB,GAAYG,EACZ2H,EAAa3oB,KAAI,SAAAmU,GAAO,OAAI,cAAC,GAAD,aAAqBqE,GAAI,GAAI8J,GAAI,GAAjC,2BAA2Dd,GAA3D,IAAiFrN,aAAxCA,MACrEwU,EAAa3oB,KAAI,SAAAmU,GAAO,OAAI,cAACyL,GAAD,aAAcpH,GAAI,GAAI8J,GAAI,GAA1B,2BAAoDf,GAApD,IAAsEpN,aAApCA,gB,2CCzX3D,SAASmV,GAAoB5pB,GAAQ,IAC5CsR,EAAuItR,EAAvIsR,UAD2C,EAC4FtR,EAA5HsR,UAAaa,EADmB,EACnBA,aAAcC,EADK,EACLA,SAAUC,EADL,EACKA,cAAeU,EADpB,EACoBA,QAAWsN,EAA6DrgB,EAA7DqgB,SAAUkB,EAAmDvhB,EAAnDuhB,SAAUmD,EAAyC1kB,EAAzC0kB,YAAavD,EAA4BnhB,EAA5BmhB,SAAUD,EAAkBlhB,EAAlBkhB,cACvHd,EAAQe,GAAsBD,EAE9B3O,EAAYC,IAAUC,aAAaL,GAMnCyX,EAAiB,2BAAQ7pB,GAAR,IAAeuS,cAC9BuX,EAAqB,SAAC,GAA4B,IAA1B9M,EAAyB,EAAzBA,SAAU+M,EAAe,EAAfA,SAChCC,EAAkBpN,qBAAWkC,GAC7BmL,EAAmBrL,EACvB5B,GACA,kBAAM+M,GAAYA,EAAS/M,MAEvBkN,EAAWF,IAAoBhN,EACrC,OACE,eAACoF,EAAA,EAAD,CAEE3a,QAASwiB,EAFX,UAIE,cAAC,IAAD,CAAiBpqB,KAAMqqB,EAAWC,IAAmBC,IAAkBnqB,UAAS,gBAAWiqB,EAAW,gBAAkB,MACxH,qCAAeA,EAAW,UAAY,aAwB5C,OAAO,qCACL,cAAChI,EAAA,EAAD,UAAK,cAAClB,EAAA,EAAD,CAAKlI,GAAI,GAAI7Y,UAAU,OAAvB,SACH,eAAC,GAAD,WACE,eAACkiB,EAAA,EAAD,CAAMvJ,GAAG,eAAe5R,KAAK,YAAY/G,UAAU,OAAnD,UACE,cAACkiB,EAAA,EAAKtJ,OAAN,UACE,eAACqJ,EAAA,EAAD,WACE,eAAClB,EAAA,EAAD,WACE,sBAAM/gB,UAAU,UAAhB,wCACA,2EAEF,cAAC+gB,EAAA,EAAD,CAAKlI,GAAG,OAAR,SACE,eAACuR,GAAA,EAAD,CAAmB5oB,KAAK,QAAQb,MAAOmS,EAAS7N,KAAK,aAAavD,SAAU,SAACoR,GAAD,OAAawO,EAAS,CAAExO,aAApG,UACE,cAACuX,GAAA,EAAD,CAAc1pB,MAAM,UAApB,sBACA,cAAC0pB,GAAA,EAAD,CAAc1pB,MAAM,MAApB,iCACA,cAAC0pB,GAAA,EAAD,CAAc1pB,MAAM,WAApB,+BAGJ,cAACogB,EAAA,EAAD,CAAKlI,GAAG,OAAR,SACE,cAACgR,EAAD,CAAoBhT,GAAIsL,IAAQpF,SAAS,aAI/C,cAAC,GAAUkC,SAAX,CAAoBlC,SAAS,IAA7B,SACE,eAACmF,EAAA,EAAK9I,KAAN,WACE,cAAC6I,EAAA,EAAD,CAAKjiB,UAAU,OAAf,SAAsB,cAAC+gB,EAAA,EAAD,UACpB,cAACoB,EAAA,EAAD,CAAQjb,QAAQ,UAAhB,SACE,mBAAGojB,KAAK,uEAAuE1oB,OAAO,SAAS2oB,IAAI,aAAnG,4FAKJ,eAACtI,EAAA,EAAD,WACE,cAAClB,EAAA,EAAD,CAAKlI,GAAI,GAAIuJ,GAAI,EAAGpiB,UAAU,OAA9B,SACE,cAAC,GAAD,CACEiF,KAAM,4CACNtE,MAAO4R,IAAUmO,yBAAyBrP,EAAW,eACrDnQ,YAAasX,KAAKkR,eAAe,eACjC3F,aAAcxR,IAAUiX,iBAAiBnY,EAAW,eACpDlQ,cAAe,SAACoiB,GAAD,OAASkB,EAAY,cAAelB,QAGtD,CAAC,YAAD,mBAAgBhR,IAAUuW,qBAAoBzoB,KAAI,SAAAmqB,GACjD,IAAIhW,EAAqB,aAAXgW,EAAwB,gBAAxB,UAA6CA,EAA7C,kBACVC,EAA6B,aAAXD,EAAwB,qBAAxB,UAAkDA,EAAlD,uBAClBE,EAAkBnY,IAAUmO,yBAAyBrP,EAAWoZ,GACpE,OAAO,cAAC1J,EAAA,EAAD,CAAKlI,GAAI,GAAIuJ,GAAI,EAAgBpiB,UAAU,OAA3C,SACL,cAAC,GAAD,CACE8jB,WAAY,eAAC3B,EAAA,EAAD,CAAQjb,QAASsjB,EAAQhjB,QAAS,kBAAMid,EAAYgG,GAAkBC,IAAkB1qB,UAAU,mBAAlG,UACV,cAAC,IAAD,CAAiBJ,KAAM8qB,EAAkB5iB,IAAgBC,IAAU/H,UAAU,UADnE,eAGZiF,KAAM,4BAAIuT,KAAKkR,eAAelV,KAC9B7T,MAAO4R,IAAUmO,yBAAyBrP,EAAWmD,GACrDtT,YAAasX,KAAKkR,eAAelV,GACjCuP,aAAcxR,IAAUiX,iBAAiBnY,EAAWmD,GACpDrT,cAAe,SAACoiB,GAAD,OAASkB,EAAYjQ,EAAS+O,IAC7CniB,SAAUspB,KAVkBF,iBAmB1C,eAACtI,EAAA,EAAD,CAAMvJ,GAAG,eAAe5R,KAAK,YAA7B,UACE,cAACmb,EAAA,EAAKtJ,OAAN,UACE,eAACqJ,EAAA,EAAD,WACE,eAAClB,EAAA,EAAD,WACE,sBAAM/gB,UAAU,UAAhB,yCACA,gFAEF,cAAC+gB,EAAA,EAAD,CAAKlI,GAAG,OAAR,SACE,cAACgR,EAAD,CAAoBhT,GAAIsL,IAAQpF,SAAS,aAI/C,cAAC,GAAUkC,SAAX,CAAoBlC,SAAS,IAA7B,SACE,cAACmF,EAAA,EAAK9I,KAAN,UACE,cAAC6I,EAAA,EAAD,UAlGa,WACvB,IAAI7hB,EAAO,CAAC,WAAY,YAAa,aAEjCuqB,EAAkBpY,IAAUoY,gBAAgBzY,GAC5C0Y,EAAkBrY,IAAUqY,gBAAgB1Y,GAC5C2Y,EAAW,CAAC,WAAY,WAAY,UAaxC,OAXKF,GACHE,EAASznB,SAAQ,SAAAC,GAAG,OAAIjD,EAAKkD,KAAKiP,IAAUuY,iBAAiBznB,EAAKgO,OAChEsZ,GAAoBC,GAAmBvZ,EAAU0Z,YACnDF,EAASznB,SAAQ,SAAAC,GAAG,OAAIjD,EAAKkD,KAAKiP,IAAUuY,iBAAiBznB,EAAKgO,GAAW,OACzB,QAA7CkB,IAAUyS,iBAAiB9S,IAClC9R,EAAKkD,KAAKiP,IAAUuY,iBAAiB,WAAYzZ,GAAW,IANhD,CAAC,MAAO,QAAS,SAQvBjO,SAAQ,SAAAC,GAAG,OAAIjD,EAAKkD,KAAKiP,IAAUuY,iBAAiBznB,EAAKgO,OAEjEjR,EAAI,YAAO,IAAI8U,IAAI9U,EAAKC,KAAI,SAAAgD,GAAG,aAAIwR,aAAmBxR,EAAD,UAAM8c,EAAMI,kBAAZ,aAAM,EAAkB5L,qBAAmBoN,SAEzF7e,OAAO9C,KAAK4hB,MAAalQ,QAAO,SAAAzO,GAAG,OAAIjD,EAAK6U,SAAS5R,MAiF/C2nB,GAAmB3qB,KAAI,SAAAgD,GAAG,OAAI,cAAC0d,EAAA,EAAD,CAAelI,GAAI,GAAI7Y,UAAU,OAAjC,SAC7B,eAACkiB,EAAA,EAAD,CAAMvJ,GAAG,cAAc5R,KAAK,YAA5B,UACE,cAACmb,EAAA,EAAKtJ,OAAN,CAAa5Y,UAAU,MAAvB,SACGwY,KAAK6J,UAAUhf,EAAK8c,EAAMI,cAE7B,cAAC2B,EAAA,EAAK9I,KAAN,CAAWpZ,UAAU,MAArB,SACE,gCAAQwY,KAAK8J,aAAajf,EAAK8c,EAAMI,WAAYJ,EAAMI,WAAW5L,kBAAkB,WANjDtR,sBAiBrD,cAAC4e,EAAA,EAAD,UAAK,cAAClB,EAAA,EAAD,UAAK,cAACkK,GAAD,eAAqBlrB,QAC/B,cAACkiB,EAAA,EAAD,UA3ImB,CAAC,CAAC,OAAQ,yBAA0B,CAAC,QAAS,mBAAoB,CAAC,QAAS,oBA6I7E5hB,KAAI,mCAAE6qB,EAAF,KAAQC,EAAR,YAClB,cAACpK,EAAA,EAAD,CAAgBlI,GAAI,GAAIC,GAAI,EAAG6J,GAAI,EAAG3iB,UAAU,OAAhD,SACE,cAACorB,GAAD,2BACMxB,GADN,IAEEnX,UAAWyY,EACXG,SAAUF,MAJJD,QAQd,cAACjJ,EAAA,EAAD,UApJiB,CAAC,CAAC,WAAY,0BAA2B,GAAI,CAAC,WAAY,0BAA2B,GAAI,CAAC,WAAY,sBAAuB,IAsJ9H5hB,KAAI,YAAyB,IAAD,mBAAtB6qB,EAAsB,KAAhBC,EAAgB,KAATG,EAAS,KACpCC,EAAUjZ,GAAagZ,EAC3B,OAAO,cAACvK,EAAA,EAAD,CAAgB5G,MAAO,CAAEC,QAASmR,EAAU,EAAI,IAAO1S,GAAI,GAAIC,GAAI,EAAG9Y,UAAU,OAAhF,SACL,cAACorB,GAAD,2BACMxB,GADN,IAEEnX,UAAWyY,EACXG,SAAUF,MAJGD,QASrB,cAACjJ,EAAA,EAAD,UACE,cAAClB,EAAA,EAAD,UACE,qBAAI/gB,UAAU,cAAd,+BAA+CoS,SAGnD,cAAC6P,EAAA,EAAD,UAEG,YAAI9hB,MAAM,GAAGC,QAAQC,KAAI,SAAAE,GACxB,IAAI2qB,EAAI,uBAAmB3qB,EAAI,GAC/B,OAAO,cAACwgB,EAAA,EAAD,CAAalI,GAAI,GAAIC,GAAI,EAAG9Y,UAAU,OAC3Cma,MAAO,CAAEC,QAAShI,EAAgB7R,EAAI,EAAI,IADrC,SAEL,cAAC6qB,GAAD,2BACMxB,GADN,IAEEnX,UAAWyY,EACXG,SAAQ,2BAAsB9qB,EAAI,GAClCirB,aAAcpL,EAAY,kBAAMkB,EAAS,CAAElP,cAAgB7R,EAAI,IAAO6R,EAAgB7R,EAAIA,EAAI,UAAQqR,MANzFrR,WAazB,IAAMkrB,GAAqB,CACzBC,iBA2DF,YAAsC,IAAV/qB,EAAS,EAATA,MAC1B,OAAO,cAACuhB,EAAA,EAAD,CAAMvJ,GAAG,cAAc5R,KAAK,YAA5B,SAAwC,eAACmb,EAAA,EAAK9I,KAAN,CAAWpZ,UAAU,MAArB,UAC7C,6BAAKwY,KAAKe,YAAY,sBACtB,qBAAIvZ,UAAU,yBAAd,UACE,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASI,QAASpP,UAAU,gBADjD,IACkE,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASE,KAAMlP,UAAU,gBAD9G,IACgIW,WA9DlIgrB,mBAkEF,YAAwC,IAAVhrB,EAAS,EAATA,MAC5B,OAAO,cAACuhB,EAAA,EAAD,CAAMvJ,GAAG,cAAc5R,KAAK,YAA5B,SAAwC,eAACmb,EAAA,EAAK9I,KAAN,CAAWpZ,UAAU,MAArB,UAC7C,6BAAKwY,KAAKe,YAAY,wBACtB,qBAAIvZ,UAAU,2BAAd,UACE,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASI,QAASpP,UAAU,gBADjD,IACkE,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASM,MAAOtP,UAAU,gBAD/G,IACiIW,WArEnIirB,eAyEF,YAAoC,IAAVjrB,EAAS,EAATA,MACxB,OAAO,cAACuhB,EAAA,EAAD,CAAMvJ,GAAG,cAAc5R,KAAK,YAA5B,SAAwC,eAACmb,EAAA,EAAK9I,KAAN,CAAWpZ,UAAU,MAArB,UAC7C,6BAAKwY,KAAKe,YAAY,oBACtB,qBAAIvZ,UAAU,uBAAd,UACE,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASI,QAASpP,UAAU,gBADjD,IACkE,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASO,KAAMvP,UAAU,gBAD9G,IACgIW,WA5ElIkrB,UAgFF,YAA+B,IAAVlrB,EAAS,EAATA,MACnB,OAAO,cAACuhB,EAAA,EAAD,CAAMvJ,GAAG,cAAc5R,KAAK,YAA5B,SAAwC,eAACmb,EAAA,EAAK9I,KAAN,CAAWpZ,UAAU,MAArB,UAC7C,6BAAKwY,KAAKe,YAAY,eACtB,qBAAIvZ,UAAU,kBAAd,UACE,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASI,QAASpP,UAAU,gBADjD,IACkE,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASM,MAAOtP,UAAU,gBAD/G,IACgI,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASO,KAAMvP,UAAU,gBAD5K,IAC6L,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASE,KAAMlP,UAAU,gBADzO,IAC0P,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASC,MAAOjP,UAAU,gBADvS,IACyTW,WAnF3TmrB,YAuFF,YAAmC,IAAVnrB,EAAS,EAATA,MACnBorB,EAAc,cAAC1H,GAAA,EAAD,CAChBzJ,UAAU,MACVC,QAAS,eAACyJ,GAAA,EAAD,8CAAyC,sBAAMtkB,UAAU,WAAhB,wBAFlC,SAIhB,cAAC,IAAD,CAAiBJ,KAAMosB,IAAkBhsB,UAAU,OAAOma,MAAO,CAAEwL,OAAQ,YAE7E,OAAO,cAACzD,EAAA,EAAD,CAAMvJ,GAAG,cAAc5R,KAAK,YAA5B,SAAwC,eAACmb,EAAA,EAAK9I,KAAN,CAAWpZ,UAAU,MAArB,UAC7C,6BAAKwY,KAAKe,YAAY,iBACtB,qBAAIvZ,UAAU,oBAAd,UACE,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASM,MAAOtP,UAAU,gBAD/C,IACgE,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASE,KAAMlP,UAAU,gBAD5G,KAC8H,wBAAOA,UAAU,gBAAjB,yBAA8C+rB,EAA9C,OAD9H,IACmMprB,WAhGrMsrB,eAoGF,YAAoC,IAAVtrB,EAAS,EAATA,MACxB,OAAO,cAACuhB,EAAA,EAAD,CAAMvJ,GAAG,cAAc5R,KAAK,YAA5B,SAAwC,eAACmb,EAAA,EAAK9I,KAAN,CAAWpZ,UAAU,MAArB,UAC7C,6BAAKwY,KAAKe,YAAY,oBACtB,qBAAIvZ,UAAU,uBAAd,UACE,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASI,QAASpP,UAAU,gBADjD,IACkE,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASM,MAAOtP,UAAU,gBAD/G,IACgI,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASO,KAAMvP,UAAU,gBAD5K,IAC6L,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASE,KAAMlP,UAAU,gBADzO,IAC0P,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASK,IAAKrP,UAAU,gBADrS,IACuTW,YAtG3T,SAASsqB,GAAT,GAAqH,IAAD,IAAzF5Z,UAAaa,EAA4E,EAA5EA,aAA4E,IAA9Dga,oBAA8D,MAA/C,OAA+C,EAArChL,EAAqC,EAArCA,SAAUD,EAA2B,EAA3BA,cAAeK,EAAY,EAAZA,SAClGnB,EAAQe,GAAsBD,EAC9BkL,EAAa5Z,IAAUuS,gBAAgB5S,GACvCka,EAAW,YAAQC,KAAsBF,IAAe,IAE5D,OADKC,EAAYnX,SAAS,gBAA+D,aAA7C1C,IAAUyS,iBAAiB9S,IAA8Bka,EAAY9oB,KAAK,eAC/G,cAAC4e,EAAA,EAAD,CAAMvJ,GAAG,eAAe5R,KAAK,YAAY/G,UAAU,OAAnD,SACL,cAACkiB,EAAA,EAAK9I,KAAN,UACE,eAAC6I,EAAA,EAAD,WACE,cAAClB,EAAA,EAAD,UAAM,cAACkB,EAAA,EAAD,CAAKjiB,UAAU,QAAf,SACHosB,EAAY/rB,KAAI,SAAAgD,GAAQ,IAAD,MAClBipB,EAAMb,GAAmBpoB,GAC7B,IAAKipB,EAAK,OAAO,KACjB,IAAI/I,EAAG,OAAGpD,QAAH,IAAGA,GAAH,UAAGA,EAAOI,kBAAV,aAAG,EAAoBld,GAE9B,OADAkgB,GAAS,QAAH,EAAAA,SAAA,mBAAKrJ,eAAL,sBAAe1B,KAAKqI,UAAUxd,MAASkgB,EACtC,cAACxC,EAAA,EAAD,CAAKlI,GAAG,OAAO7Y,UAAU,OAAzB,SAA0C,cAACssB,EAAD,CAAK3rB,MAAO4iB,KAAjBlgB,UAGhD,cAAC0d,EAAA,EAAD,CAAKlI,GAAG,OAAR,SACG,CAAC,OAAQ,QAAS,QAAQ5D,SAASkX,IAAe,eAAC/B,GAAA,EAAD,CACjD5oB,KAAK,QAAQyD,KAAK,eAAe8e,aAAcmI,EAAcxqB,SAAU,SAAC6hB,GAAD,OAASjC,EAAS,CAAE4K,aAAsB,SAAR3I,EAAiB,KAAOA,KADhF,UAEjD,eAAC8G,GAAA,EAAD,CAAcrqB,UAAU,MAAMW,MAAO,OAArC,cAA8C,8CAA9C,IAAoE,iDACpD,SAAfwrB,GAAyB,eAAC9B,GAAA,EAAD,CAAcrqB,UAAU,MAAMW,MAAO,gBAArC,UACxB,oBAAIX,UAAU,gBAAd,4BACA,qBAAIA,UAAU,qBAAd,UACE,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASM,MAAOtP,UAAU,gBAD/C,IACgE,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASO,KAAMvP,UAAU,sBAG9F,SAAfmsB,GAAyB,eAAC9B,GAAA,EAAD,CAAcrqB,UAAU,MAAMW,MAAO,YAArC,UACxB,oBAAIX,UAAU,YAAd,wBACA,qBAAIA,UAAU,iBAAd,UACE,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASE,KAAMlP,UAAU,gBAD9C,IAC+D,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASO,KAAMvP,UAAU,sBAG7F,UAAfmsB,GAA0B,eAAC9B,GAAA,EAAD,CAAcrqB,UAAU,MAAMW,MAAO,iBAArC,UACzB,oBAAIX,UAAU,gBAAd,wBACA,qBAAIA,UAAU,qBAAd,UACE,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASO,KAAMvP,UAAU,gBAD9C,IAC+D,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASM,MAAOtP,UAAU,sBAG9F,SAAfmsB,GAAyB,eAAC9B,GAAA,EAAD,CAAcrqB,UAAU,MAAMW,MAAO,YAArC,UACxB,oBAAIX,UAAU,YAAd,wBACA,qBAAIA,UAAU,iBAAd,UACE,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASO,KAAMvP,UAAU,gBAD9C,IAC+D,cAAColB,EAAA,EAAD,CAAOrM,IAAKnK,KAAOI,SAASE,KAAMlP,UAAU,kCAiEzH,IAAMusB,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACxC,SAASnB,GAAiBrrB,GAAQ,IAC1BsR,EAA4JtR,EAA5JsR,UADyB,EACmItR,EAAjJsR,UAAaa,EADC,EACDA,aAAcE,EADb,EACaA,cADb,IAC4B2Y,mBAD5B,SACmDtY,EAAgF1S,EAAhF0S,UAAW4Y,EAAqEtrB,EAArEsrB,SAAU/Y,EAA2DvS,EAA3DuS,UAAW2O,EAAgDlhB,EAAhDkhB,cAAeC,EAAiCnhB,EAAjCmhB,SAAUd,EAAuBrgB,EAAvBqgB,SAAUkB,EAAavhB,EAAbuhB,SADtH,EAEcvhB,EAAvCyrB,oBAFyB,MAEV,KAFU,EAEDnL,EAFC,GAEctgB,EAFd,kBAG3BogB,EAAQe,GAAsBD,EAC9BuL,EAAS,KAJkB,EAKoBja,IAAUK,kBAAkBvB,EAAWoB,EAAWL,GAAe,GALrF,IAKzBO,oBALyB,WAKVf,EALU,MAKC6a,kBALD,MAKc,EALd,EAM3BC,EAAY,KAChB,GAAkB,SAAdja,GAAwBF,IAAUqY,gBAAgB1Y,GAAe,CACnE,IAAIsY,EAASjY,IAAUuS,gBAAgB5S,GACvCwa,EAAY,cAAC3L,EAAA,EAAD,CAAKlI,GAAG,OAAR,SACV,cAACsJ,EAAA,EAAD,CAAQjb,QAAS6jB,EAAcP,EAAS,YAAaxqB,UAAU,aAAaoB,UAAWgf,EAAU5Y,QAAS4Y,EAAY,kBAAMkB,GAAS,SAAAoC,GAAK,MAAK,CAAEqH,aAAcrH,EAAMqH,sBAAmBnZ,EAAWvK,KAAM+Y,EAAW,KAAO,KAA3N,SACG2K,EACC,iDAAmB,4BAAIxY,IAAUoa,iBAAiBnC,QAChD,kBAIV,GAA4B,kBAAjB7X,EACT,GAAIyN,EAAU,CAMZoM,EAAS,cAACtK,EAAA,EAAKtJ,OAAN,UACP,eAACqJ,EAAA,EAAD,WACE,cAAClB,EAAA,EAAD,CAAKlI,GAAG,OAAR,SACE,cAAC2O,EAAA,EAAD,CAAgBC,MAAK,qBAAgB9U,EAAe,GAApD,SACG,YAAIxS,MAAMosB,GAAaja,IAAYlS,QAAQC,KAAI,SAAAE,GAAC,OAC/C,eAACunB,EAAA,EAASvgB,KAAV,CAAuBC,QAAS,kBAVpB0jB,EAUyCzY,EAVnCma,EAU8CrsB,EAVrC+gB,GAAS,SAAAoC,GAC5C,IAAImJ,EAAkBnJ,EAAMmJ,iBAAmB,GAE/C,OADAA,EAAgB3B,GAAQ0B,EACjB,CAAEC,sBAHU,IAAC3B,EAAM0B,GAUlB,wBAAgFrsB,EAAIksB,EAAa,IAA7ElsB,UAGzBmsB,YAILF,EAAS,cAACtK,EAAA,EAAKtJ,OAAN,UACP,eAACqJ,EAAA,EAAD,WACE,cAAClB,EAAA,EAAD,CAAKlI,GAAG,OAAR,iCACoBlG,EAAe,KAEnC,cAACoO,EAAA,EAAD,CAAKlI,GAAG,OAAR,SACG6T,SAMX,IAAII,EAAW,KACXC,EAAcxa,IAAUya,eAAe9a,EAAcO,EAAWL,EAAeE,GAkBnF,OAjBIya,IACFD,EAAW,cAAC7K,EAAA,EAAD,UAAK,cAAClB,EAAA,EAAD,UACd,cAACmB,EAAA,EAAD,CAAMvJ,GAAG,cAAc5R,KAAK,YAAY/G,UAAU,mBAAlD,SACE,cAACitB,GAAA,EAAD,CAAWjtB,UAAU,aAAakH,QAAQ,QAA1C,SACGhE,OAAOsO,QAAQub,GAAa1sB,KAAI,WAAqB6sB,GAArB,uBAAE1Y,EAAF,KAAW0L,EAAX,YAC/B,cAAC+M,GAAA,EAAU1lB,KAAX,CAA8BL,QAASgmB,EAAQ,EAAI,aAAe,eAAgBltB,UAAU,MAA5F,SACE,gCACE,+BAAM,4BAAIwY,KAAKe,YAAY/E,OAC3B,uBAAMxU,UAAU,yBAAhB,UAA0CkgB,EAAS1H,KAAKC,YAAYjE,UAHnDA,eAYxB,eAAC0N,EAAA,EAAD,CAAMvJ,GAAG,eAAe5R,KAAK,YAAY/G,UAAU,QAAnD,UACJwsB,EACD,eAACtK,EAAA,EAAK9I,KAAN,WACE,eAAC6I,EAAA,EAAD,CAAKjiB,UAAU,yBAAyBwH,QAASgkB,EAAcrR,MAAO,CAAEwL,OAASvF,GAAYoL,EAAgB,UAAY,WAAzH,UACE,cAACzK,EAAA,EAAD,CAAKlI,GAAG,OAAO7Y,UAAU,mCAAzB,SACE,cAAColB,EAAA,EAAD,CAAOrM,IAAKxG,IAAU4a,aAAajb,EAAcO,GAAYzS,UAAU,gBAEzE,eAAC+gB,EAAA,EAAD,CAAK/gB,UAAU,cAAf,UACE,cAACkiB,EAAA,EAAK7I,MAAN,UAAa9G,IAAU6a,cAAclb,EAAcO,KACnD,cAACyP,EAAA,EAAKmL,SAAN,UAAgBhC,UAGnB9Y,IAAU+a,kBAAkBpb,EAAcO,GAAWpS,KAAI,SAACktB,EAAShtB,GAGlE,GAFuB,oBAAZgtB,IACTA,EAAUA,EAAQnb,EAAeE,KAC9Bib,EAAS,OAAO,KAErB,IAAIC,EAAaD,EAAQxmB,KACC,oBAAfymB,IACTA,EAAaA,EAAW7a,EAAcwN,EAAMI,WAAYlP,IAC1D,IAAIoc,EAASF,EAAQE,QAAU,GAE3BnnB,EAAcinB,EAAQjnB,YACC,oBAAhBA,IACTA,EAAcA,EAAYqM,EAAcP,EAAeE,IACzD,IAAI+U,EAAiB,KACrB,GAAI/gB,EAAa,CACf,IAAIC,EAAiB4c,KAAiBC,kBAAkB/R,EAAUgB,mBAAoB,CAAEL,OAAQS,EAAWR,QAAS3L,EAAYoM,iBAC5H2Q,EAAmB,GACnBqK,EAAoB,GACpBnnB,IACF8c,EAAmB9Q,IAAUob,0BAA0BrnB,EAAaC,EAAgB,IAEpF8c,EAAmBngB,OAAOqO,YAAYrO,OAAOsO,QAAQ6R,GAAkBvR,QAAO,mCAAEzO,EAAF,gBAAsB,qBAARA,MAC5FqqB,EAAoBnb,IAAUqb,2BAA2BtnB,EAAaC,EAAgB,KAIxF8gB,EAAiB,cAACpF,EAAA,EAAD,UAAK,cAAClB,EAAA,EAAD,UACpB,eAACmB,EAAA,EAAD,CAAMvJ,GAAG,cAAc5R,KAAK,YAAY/G,UAAU,mBAAlD,UACE,cAACkiB,EAAA,EAAKtJ,OAAN,UACE,cAACvS,GAAA,EAAD,CAAqBjF,UAAWgf,EAC9B9Z,YAAaA,EACbC,eAAgBA,EAChBC,eARa,SAACD,GAAD,OAAoB+a,GAAS,SAAAoC,GAAK,MACpD,CAAErR,mBAAoB8Q,KAAiB3c,eAAekd,EAAMrR,mBAAoB,CAAEL,OAAQS,EAAWR,QAAS3L,EAAYoM,gBAAkBnM,QAQvIE,OAAQ,+BAAOH,EAAYU,gBAE/B,eAACimB,GAAA,EAAD,CAAWjtB,UAAU,aAAakH,QAAQ,QAA1C,UACGhE,OAAOsO,QAAQ6R,GAAkBhjB,KAAI,WAAqB6sB,GAArB,uBAAE1Y,EAAF,KAAW0L,EAAX,YACpC,cAAC+M,GAAA,EAAU1lB,KAAX,CAA8BL,QAASgmB,EAAQ,EAAI,aAAe,eAAgBltB,UAAU,MAA5F,SACE,gCACE,+BAAM,4BAAIwY,KAAKe,YAAY/E,OAC3B,uBAAMxU,UAAU,yBAAhB,UAA0CkgB,EAAS1H,KAAKC,YAAYjE,UAHnDA,MAOtBkZ,EAAkBrtB,KAAI,SAACwtB,EAAWttB,GAAZ,eAAkB,cAACutB,GAAD,aAAwDZ,MAAO3sB,IAAqB,QAAhB,EAAA8iB,SAAA,eAAkBvJ,SAAU,IAAhG,aAA0GiU,MAAOF,EAAWlb,eAAcL,aAAc+N,IAArI9f,IAAqB,QAAhB,EAAA8iB,SAAA,eAAkBvJ,SAAU,iBAKrG,OAAO,cAACmI,EAAA,EAAD,CAAKjiB,UAAU,OAAf,SAA0C,eAAC+gB,EAAA,EAAD,CAAKlI,GAAI,GAAT,UAC/C,+BAAO2U,IACNC,EAAO3T,OAAS,GAAK,cAACmT,GAAA,EAAD,CAAWjtB,UAAU,yBAArB,SACnBytB,EAAOptB,KAAI,SAAC0tB,EAAOxtB,GAAR,OAAc,cAACutB,GAAD,aAAsBZ,MAAO3sB,GAA7B,aAAsCwtB,QAAOpb,eAAcL,aAAc+N,IAAtD9f,QAE9C8mB,MAL+B,UAAY9mB,MAQ/CusB,QAIP,SAASgB,GAAa/tB,GAAQ,IAAD,MACrBsR,EAAwItR,EAAxIsR,UADqB,EACmHtR,EAA7HsR,UAAagQ,EADH,EACGA,uBAAwBjP,EAD3B,EAC2BA,cAAiB2b,EAAuEhuB,EAAvEguB,MAAOb,EAAgEntB,EAAhEmtB,MADnD,EACmHntB,EAAzD4S,oBAD1D,MACyE,EADzE,EAC4EL,EAAuCvS,EAAvCuS,UAAW2O,EAA4BlhB,EAA5BkhB,cAAeC,EAAanhB,EAAbmhB,SAC7Hf,EAAQe,GAAsBD,EAGlC,GAFqB,oBAAV8M,IACTA,EAAQA,EAAM3b,EAAeE,KAC1Byb,EAAO,OAAO,KAEnB,IAAIC,EAAYD,EAAMhnB,KACG,oBAAdinB,IACTA,EAAS,UAAGA,SAAH,aAAG,EAAYrb,EAAcwN,EAAMI,WAAYlP,IAE1D,IAAI4c,EAAeF,EAAM7mB,SAAW,GACR,oBAAjB+mB,IACTA,EAAY,UAAGA,SAAH,aAAG,EAAetb,EAAcwN,EAAMI,WAAYlP,IAEhE,IAAI6c,EAAaH,EAAMI,SACG,oBAAfD,IACTA,EAAU,UAAGA,SAAH,aAAG,EAAavb,EAAcwN,EAAMI,WAAYlP,IACxD6c,IACFA,EAAa,cAAC7J,GAAA,EAAD,CACXzJ,UAAU,MACVC,QAAS,cAACyJ,GAAA,EAAD,UAAU4J,IAFR,SAIX,cAAC,IAAD,CAAiBtuB,KAAMosB,IAAkBhsB,UAAU,OAAOma,MAAO,CAAEwL,OAAQ,aAG/E,IACoC,EADhCyI,EAAWL,EAAMptB,MAAQotB,EAAMptB,MAAQotB,EAAMM,SACzB,oBAAbD,IACTA,EAAQ,UAAGA,SAAH,aAAG,EAAWzb,EAAcwN,EAAMI,WAAYlP,IAMxD,GAJwB,kBAAb+c,IACTA,EAAW/X,KAAKiY,MAAMF,IAGpB/M,GAA0BJ,GAAqC,kBAAbmN,EAAuB,CAAC,IAAD,MACvEG,EAAmBR,EAAMptB,MAAQotB,EAAMptB,MAAQotB,EAAMM,SACzB,oBAArBE,IACTA,EAAmBtsB,SAAQ,UAACssB,SAAD,iBAAC,EAAmB5b,EAAcsO,EAAcV,WAAYlP,UAA5D,iBAAC,EAAuE6I,eAAxE,aAAC,SAAiF,KAC/G,IAAIyG,EAAOyN,EAAWG,EACtBH,EAAW,iCAAOG,EAAkB5N,EAAO,uBAAM3gB,UAAW2gB,EAAO,EAAI,eAAiB,cAA7C,eAA+DA,EAAO,EAAI,IAAM,GAAIA,EAApF,OAAoG,MAGjJ,OAAO,cAACsM,GAAA,EAAU1lB,KAAX,CAAgBL,QAASgmB,EAAQ,EAAI,aAAe,eAAgBltB,UAAU,MAA9E,SACL,gCACE,iCAAM,4BAAIguB,IAAeE,KACzB,sBAAMluB,UAAS,sCAAiCiuB,GAAhD,SAAkEG,SCtexE,IAAMI,GAAahY,IAAMC,YACvB,WAA+DjR,GAAS,IAArE0Q,EAAoE,EAApEA,SAAUiE,EAA0D,EAA1DA,MAAOna,EAAmD,EAAnDA,UAA8ByuB,EAAqB,EAAxC,mBAC7B,OACE,qBACEjpB,IAAKA,EACL2U,MAAO,CAAEA,QAAOuU,SAAU,SAC1B1uB,UAAWA,EACX2uB,kBAAiBF,EAJnB,SAME,cAACxM,EAAA,EAAD,UACGzL,IAAM0I,SAAS0P,QAAQ1Y,GAAU7V,KAAI,SAACwuB,EAAOtuB,GAAR,OAAc,cAACwgB,EAAA,EAAD,CAAalI,GAAI,EAAjB,SAAqBgW,GAAXtuB,aAOnDuuB,G,kDACnB,WAAY/uB,GAAQ,IAAD,8BACjB,cAAMA,IAkDRgvB,qBAAuB,WACjB,EAAKrL,MAAMhJ,IACb,EAAK4G,SAASnR,IAAkBS,aAAa,EAAK8S,MAAMhJ,KAE1D,EAAK3a,MAAM0X,YAAc,EAAK1X,MAAM0X,cAAgB,EAAKA,eAvDxC,EAyDnBuX,YAAc,SAACzL,GAAD,OAAS,EAAKjC,SAASiC,IAzDlB,EA0DnB0L,gBAAkB,SAAC/c,GAAD,OAChB,EAAKoP,SAAS,CAAEpP,eAAcjN,KAAMiqB,YAA0B3c,IAAU4c,UAAUjd,IAAgBiU,OAAQ2I,EAAqBM,gBAAgBld,GAAega,aAAc,KAAMnB,aAAa,KA3D9K,EA4DnBsE,YAAc,SAACld,GAAD,OACZ,EAAKmP,SAAS,CAAEnP,cA7DC,EA+DnBsS,YAAc,SAACjQ,EAAS7T,GAAV,OAAoB,EAAK2gB,UAAS,SAAAoC,GAC9C,IAAI4L,EAAoB5L,EAAM4L,kBAE9B,OADkB/c,IAAUiX,iBAAiB,EAAK9F,MAAOlP,KACrC7T,UACX2uB,EAAkB9a,GAClB,CAAE8a,uBAETA,EAAkB9a,GAAW7T,EACtB,CAAE2uB,0BAvEM,EA2EnB5K,iBAAmB,SAACtS,GAAD,OAAmB,EAAKkP,SAAS,CAAElP,mBAzEpDpC,cACIjQ,EAAMwvB,YACR,EAAK7L,MAAQvT,IAAkBS,aAAa7Q,EAAMwvB,aAElD,EAAK7L,MAAQoL,EAAqBU,kBANnB,E,gEA4EE,IAAD,OAClBC,QAAQC,IAAI,CACVnd,IAAUod,yBACVrJ,IAAOsJ,sBACP7X,IAAS8X,0BACRztB,MAAK,kBAAM,EAAKqV,mB,2CAKnB,GAFIwG,KAAKle,MAAMwvB,aAAetR,KAAKyF,MAAMhJ,KAAOuD,KAAKle,MAAMwvB,aACzDtR,KAAKqD,SAASnR,IAAkBS,aAAaqN,KAAKle,MAAMwvB,cACtDtR,KAAKle,MAAMqgB,SAAU,CAEvB,IAAIsD,EAAQoM,YAAU7R,KAAKyF,OAE3B,UADOA,EAAMrC,uBACTpD,KAAKyF,MAAMhJ,GACbvK,IAAkB4C,gBAAgB2Q,OAC7B,CACL,IAAIhJ,EAAKvK,IAAkB4f,aAAarM,GACxCzF,KAAKqD,SAAS,CAAE5G,W,+BAIZ,IAAD,qBACuCuD,KAAKle,MAA7CiwB,EADC,EACDA,OAAQ9O,EADP,EACOA,SAAUd,EADjB,EACiBA,SAAU6P,EAD3B,EAC2BA,QAC9B5e,EAAY4M,KAAKyF,MAFd,EAGkDzF,KAAKyF,MAAxDxR,EAHC,EAGDA,aAAcC,EAHb,EAGaA,SAAUkP,EAHvB,EAGuBA,uBAC1BJ,EAAgB1O,IAAU2d,eAAejS,KAAKyF,OAC9CyM,EAAoB,iCACtB,cAAC/K,EAAA,EAAD,CAAOrM,IAAKxG,IAAU6d,SAASle,GAAelS,UAAU,0BAA0B4lB,eAAa,IAC/F,qBAAI5lB,UAAU,WAAd,cAA2BuS,IAAU4S,QAAQjT,GAA7C,UAGF,OAAQ,eAACgQ,EAAA,EAAD,CAAMvJ,GAAG,cAAc5R,KAAK,YAA5B,UACN,cAACmb,EAAA,EAAKtJ,OAAN,UACE,eAACqJ,EAAA,EAAD,WACE,cAAClB,EAAA,EAAD,CAAKlI,GAAI,OAAT,SAEGuH,EAAW,eAACiQ,EAAA,EAAD,WACV,eAACvI,EAAA,EAAD,WACE,cAACwI,EAAA,EAAD,CAAgBzZ,GAAIsL,IAApB,SACGgO,IAEH,cAACrI,EAAA,EAASxgB,KAAV,CAAeuP,GAAI2X,GAAnB,SACGjc,IAAUge,sBAAsBlwB,KAAI,SAAAmwB,GAAO,OAC1C,cAAC1I,EAAA,EAASvgB,KAAV,CAA6BC,QAAS,kBAAM,EAAKynB,gBAAgBuB,IAAjE,SACE,iCACE,cAACpL,EAAA,EAAD,CAAOrM,IAAKxG,IAAU6d,SAASI,GAAUxwB,UAAS,oCAA+BuS,IAAU8S,QAAQmL,GAAjD,QAAiEvX,WAAS,IAC5H,qBAAIjZ,UAAU,gBAAd,UAA+BuS,IAAU4S,QAAQqL,GAAjD,WAHgBA,WAQ1B,eAAChJ,EAAA,EAAD,CAAgB3Q,GAAIwZ,IAAa5I,MAC/B,qBAAIznB,UAAU,WAAd,UAA0BuS,IAAUke,cAActe,GAAlD,OADF,UAGE,cAAC2V,EAAA,EAASC,SAAV,UACE,+DAEDxV,IAAUme,eAAerwB,KAAI,SAAAswB,GAAM,OAClC,cAAC7I,EAAA,EAASvgB,KAAV,CAA4BC,QAAS,kBAAM,EAAK6nB,YAAYsB,IAA5D,SACE,+BAAMpe,IAAUke,cAAcE,GAA9B,QADkBA,YAIT,iCAAOR,EAAP,SAAgC5d,IAAUmO,yBAAyBzC,KAAKyF,MAAO,mBAGlG,cAAC3C,EAAA,EAAD,CAAK/gB,UAAU,YAAf,SACGogB,EAAW,eAAC6D,EAAA,EAAD,WACV,cAACA,EAAA,EAAWC,QAAZ,UACE,eAACD,EAAA,EAAWE,KAAZ,WAAiB,cAAC,IAAD,CAAiBvkB,KAAMgxB,MAAxC,aAEF,cAACC,EAAA,EAAD,CAAa3vB,YAAY,OACvBP,MAAOsd,KAAKyF,MAAMze,KAClBvD,SAAU,SAACC,GAAD,OAAO,EAAK2f,SAAS,CAAErc,KAAMtD,EAAEC,OAAOjB,cAGlD,cAACuhB,EAAA,EAAK7I,MAAN,CAAYrZ,UAAU,yBAAtB,SAA+C,+BAAOie,KAAKyF,MAAMze,WAGpEic,EAAW,cAACH,EAAA,EAAD,CAAKlI,GAAG,OAAR,SACV,eAACwX,EAAA,EAAD,WACE,cAAClO,EAAA,EAAD,CAAQjb,QAASma,EAAyB,UAAY,UAAWjgB,UAAWigB,EAAwB7Z,QAAS,kBAAM,EAAK8Z,SAAS,CAAED,wBAAwB,KAA3J,SACE,8DAEF,cAACc,EAAA,EAAD,CAAQjb,QAAUma,EAAqC,UAAZ,UAAuBjgB,SAAUigB,EAAwB7Z,QAAS,kBAAM,EAAK8Z,SAAS,CAAED,wBAAwB,KAA3J,SACE,6EAGG,KACT,cAACN,EAAA,EAAD,CAAKlI,GAAG,OAAR,SACE,cAACsJ,EAAA,EAAD,CAAQjb,QAAQ,SAASM,QAASyoB,EAAlC,SACE,cAAC,IAAD,CAAiBrwB,KAAMkxB,eAI/B,cAAC5O,EAAA,EAAK9I,KAAN,UACE,eAAC,EAAImF,UAAL,CAAewS,iBAAkB7P,EAAW,eAAiB,YAA7D,UACE,eAAC8P,EAAA,EAAD,CAAK9pB,QAAQ,QAAQlH,UAAU,YAA/B,UACE,cAACgxB,EAAA,EAAIzpB,KAAL,UACE,cAACypB,EAAA,EAAIC,KAAL,CAAUlU,SAAS,YAAnB,yBAEDmE,EAAW,cAAC8P,EAAA,EAAIzpB,KAAL,UACV,cAACypB,EAAA,EAAIC,KAAL,CAAUlU,SAAS,eAAnB,6BACY,KACd,cAACiU,EAAA,EAAIzpB,KAAL,UACE,cAACypB,EAAA,EAAIC,KAAL,CAAUlU,SAAS,YAAnB,SAAgCmE,EAAW,oBAAsB,gBAEnE,cAAC8P,EAAA,EAAIzpB,KAAL,UACE,eAACypB,EAAA,EAAIC,KAAL,CAAUlU,SAAS,SAAS3b,SAAiI,eAA5E,UAAAmR,IAAU2e,YAAYhf,UAAtB,mBAAqCif,cAArC,mBAA6CC,aAA7C,eAAoDnsB,OAAQ,YAA7I,qBAA+P,eAA5E,UAAAsN,IAAU2e,YAAYhf,UAAtB,mBAAqCif,cAArC,mBAA6CC,aAA7C,eAAoDnsB,OAAQ,aAA8B,cAACsR,EAAA,EAAD,CAAOrP,QAAQ,UAAf,sBAE/Q,cAAC8pB,EAAA,EAAIzpB,KAAL,UACE,eAACypB,EAAA,EAAIC,KAAL,CAAUlU,SAAS,OAAO3b,UAAQ,EAAlC,kBAAwC,cAACmV,EAAA,EAAD,CAAOrP,QAAQ,UAAf,yBAG5C,eAAC,EAAIsX,QAAL,WACE,cAAC,EAAIC,KAAL,CAAU1B,SAAS,YAAnB,SACE,cAACyH,GAAD,aACElD,SAAUrD,KAAK+Q,YACfvK,YAAaxG,KAAKwG,YAClBC,iBAAkBzG,KAAKyG,kBACnB,CAAErT,YAAW+O,WAAUa,gBAAeC,gBAG9C,cAAC,EAAIzC,KAAL,CAAU1B,SAAS,YAAnB,SACE,cAAC,GAAD,2BAA2B,CAAE1L,YAAW4P,gBAAeb,WAAU3I,YAAawG,KAAK8Q,uBAAnF,IAA2GzN,SAAUrD,KAAK+Q,iBAE3H9N,EAAW,cAAC,EAAIzC,KAAL,CAAU1B,SAAS,eAAnB,SACV,cAAC,GAAD,eAA2B,CAAE1L,YAAW6P,WAAUD,gBAAeb,WAAU3I,YAAawG,KAAK8Q,0BACjF,KACd,cAAC,EAAItQ,KAAL,CAAU1B,SAAS,SAAnB,SACE,cAAC4M,GAAD,2BAAyB,CAAEtY,YAAW6P,WAAUD,gBAAeb,aAA/D,IAA2EkB,SAAUrD,KAAK+Q,YAAavK,YAAaxG,KAAKwG,yBAKhIuL,GAAU,cAAC9N,EAAA,EAAKzH,OAAN,UACRuV,W,GArNyCxZ,IAAMM,WAAnCgY,GAUZuC,aAAe,CACpBpsB,KAAM,GACNiN,aAAc,GACdC,SAAU,KACVW,QAAS,MACToZ,aAAc,KACd5a,kBAAmB,GACnBO,qBAAsB,GACtByd,kBAAmB,GACnBnJ,OAAQ,CACN9iB,IAAK,GACL8O,SAAU5P,IAAgB,GAC1B2kB,YAAa,EACbT,gBAAiB,EACjBG,eAAgB,EAChBrgB,eAAgB,GAElBsmB,gBAAiB,CACfyE,KAAM,EACNF,MAAO,EACPG,MAAO,GAETxG,aAAa,EACb1Y,mBAAoB,GACpBD,cAAe,EACfiP,wBAAwB,GAnCPyN,GAqCZM,gBAAkB,SAACld,GACxB,IAAIiU,EAAS2J,YAtCIhB,GAsCWuC,aAAalL,QAEzC,OADAA,EAAO9iB,IAAMH,OAAO9C,KAAKkmB,IAAO0B,iBAAiBzV,IAAUyS,iBAAiB9S,KAAgB,GACrFiU,GAxCU2I,GA2CZU,gBAAkB,WACvB,IAAI9L,EAAQoM,YAAUhB,GAAqBuC,cAM3C,OAJA3N,EAAMxR,aAAegd,YAA0B3c,IAAUge,uBACzD7M,EAAMze,KAAOiqB,YAA0B3c,IAAU4c,UAAUzL,EAAMxR,eAEjEwR,EAAMyC,OAjDW2I,GAiDGM,gBAAgB1L,EAAMxR,cACnCwR,I,kIChFPpM,EAAe,CACjBpQ,aAAS0K,EACToL,QAAQ,EACR5b,UAAU,GAERowB,EAA6Bhb,IAAMC,YAAW,SAAUhR,EAAMD,GAChE,IAAIkR,EAAWjR,EAAKiR,SAChBsG,EAASvX,EAAKuX,OACd5b,EAAWqE,EAAKrE,SAChBpB,EAAYyF,EAAKzF,UACjBkH,EAAUzB,EAAKyB,QACfuqB,EAAShsB,EAAKgsB,OACd5a,EAAKpR,EAAKoR,GACVkG,EAAWtX,EAAKsX,SAChBvV,EAAU/B,EAAK+B,QACfzH,EAAQgX,YAA8BtR,EAAM,CAAC,WAAY,SAAU,WAAY,YAAa,UAAW,SAAU,KAAM,WAAY,YAEvIiR,EAAWO,YAAmBP,EAAU,mBACxC,IAAIgb,EAAcC,uBAAY,SAAUC,GACtC,GAAIxwB,EAGF,OAFAwwB,EAAMC,sBACND,EAAME,kBAIJtqB,GAASA,EAAQoqB,KACpB,CAACxwB,EAAUoG,IAOd,OALIpG,QAA+BwQ,IAAnB7R,EAAMgyB,WACpBhyB,EAAMgyB,UAAY,EAClBhyB,EAAM,kBAAmB,GAGPyW,IAAMU,cAAc8a,IAAiB7a,YAAS,CAChE3R,IAAKA,GACJzF,EAAO,CAERgd,SAAUD,YAAaC,EAAUhd,EAAMuqB,MAEvCzT,GAAIA,IAAO4a,EAAS1xB,EAAMuqB,KAAO,IAAM,SAAW,OAClD9iB,QAASkqB,EACT1xB,UAAWoX,IAAWpX,EAAW0W,EAAUsG,GAAU,SAAU5b,GAAY,WAAY8F,GAAWwP,EAAW,IAAMxP,EAASuqB,GAAU/a,EAAW,iBAGrJ8a,EAAcla,aAAeA,EAC7Bka,EAAcna,YAAc,gBACbma,QC5CXla,EAAe,CACjBpQ,aAAS0K,EACTqgB,gBAAYrgB,GAEVqb,EAAyBzW,IAAMC,YAAW,SAAU1W,EAAOyF,GAC7D,IAYI0sB,EAZA5W,EAAmBC,YAAgBxb,EAAO,CAC5Cyb,UAAW,aAETxb,EAAYsb,EAAiBtb,UAC7BmyB,EAAkB7W,EAAiB5E,SACnCxP,EAAUoU,EAAiBpU,QAC3B+qB,EAAa3W,EAAiB2W,WAC9B5S,EAAsB/D,EAAiBzE,GACvCA,OAA6B,IAAxBwI,EAAiC,MAAQA,EAC9CC,EAAkBvI,YAA8BuE,EAAkB,CAAC,YAAa,WAAY,UAAW,aAAc,OAErH5E,EAAWO,YAAmBkb,EAAiB,cAUnD,OANED,EADED,GACiC,IAAfA,EAAsB,aAAe,cAAgBA,EAErD,KAIFzb,IAAMU,cAAckb,IAAajb,YAAS,CAC5D3R,IAAKA,GACJ8Z,EAAiB,CAClBzI,GAAIA,EACJ7W,UAAWoX,IAAWpX,EAAW0W,EAAUxP,GAAWwP,EAAW,IAAMxP,EAASgrB,GAAqBxb,EAAW,IAAMwb,SAG1HjF,EAAU3V,aAAeA,EACzB2V,EAAU5V,YAAc,YACxB4V,EAAU1lB,KAAOiqB,EACFvE,O,4HCzCA,SAASoF,EAAYtyB,GAElC,OADAiQ,cACO,cAAC,IAAD,UACL,cAAC,UAAD,CAAsBoQ,UAAQ,EAACmP,YAAa,oB,uLCG3Bhd,E,WAEnB,aAAgB,GAAD,oBAAK0L,gBAAgB1L,EAAW,MAAM+L,MAAM,0C,iEAuNpCiR,GACrB,IAAIle,EAAYlB,IAAkBS,aAAa2e,GAC3Cle,EAAUC,mBACZpO,OAAOsN,OAAOa,EAAUC,mBAAmBlO,SAAQ,SAAAsO,GAAK,OACtDrB,IAAiBiiB,kBAAkB5gB,EAAO,OAC9CvB,IAAkBoiB,oBAAoBhD,O,KA9NrBhd,EAGZod,uBAAyB,kBAAM1c,KAHnBV,EAIZiX,iBAAmB,SAACnY,EAAWmD,GAAyB,IAAhBge,EAAe,uDAAN,EAChDtgB,EAA2Bb,EAA3Ba,aAAcC,EAAad,EAAbc,SACpB,GAAgB,uBAAZqC,EAAkC,OANrBjC,EAMiCkgB,sBAAsBvgB,GACxE,GAAgB,uBAAZsC,EAAkC,OAPrBjC,EAOiCmgB,sBAAsBxgB,EAAcC,GACtF,GAAgB,eAAZqC,EAA0B,OAAO8R,IAAOqM,iCAAP,OAAwCthB,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAW8U,QACxF,GAAgB,eAAZ3R,GAAwC,gBAAZA,EAA2B,OAT1CjC,EASsDgT,SAASpT,GAChF,GAAgB,kBAAZqC,GAA+BA,EAAQS,SAAS,iBAAkB,OAAO,GAC7E,GAAIT,KAAWnB,IAAmB,OAAOA,IAAkBmB,GAC3D,IAAIoe,EAZargB,EAYO2e,YAAYhf,GACpC,OAAI0gB,GAAgBpe,KAAWoe,EAAaC,SAAiBD,EAAaC,SAASre,GAblEjC,EAagFugB,qBAAqB3gB,IAC/GqgB,GAdUjgB,EAiBZ2e,YAAc,SAACV,GAAD,OAAaxd,IAAcwd,IAjB7Bje,EAkBZoa,iBAAmB,SAACoG,GAAD,MAAeP,EAAf,uDAAwB,GAAxB,MAAgD,aAAjBO,EAA8B,YAA2B,OAAb5vB,UAAa,IAAbA,KAAA,UAAAA,IAAgB4vB,UAAhB,eAA+B9tB,OAAQutB,GAlBzHjgB,EAmBZge,oBAAsB,kBAAMrtB,OAAO9C,KAAK4S,MAnB5BT,EAqBZ4S,QAAU,SAACqL,GAAD,MAAUgC,EAAV,uDAAmB,GAAnB,OAA2B,UArBzBjgB,EAqB8B2e,YAAYV,UAAjB,eAA2BvrB,OAAQutB,GArB5DjgB,EAsBZ8S,QAAU,SAACmL,GAAD,MAAUgC,EAAV,uDAAmB,EAAnB,OAA0B,UAtBxBjgB,EAsB6B2e,YAAYV,UAAjB,eAA2B5I,OAAQ4K,GAtB3DjgB,EAuBZuS,gBAAkB,SAAC0L,GAAD,MAAUgC,EAAV,uDAAmB,GAAnB,OAA2B,UAvBjCjgB,EAuBsC2e,YAAYV,UAAjB,eAA2B3L,aAAc2N,GAvB1EjgB,EAwBZuW,iBAAmB,kBAAM5lB,OAAO9C,KAAK+C,MAxBzBoP,EAyBZyS,iBAAmB,SAACwL,GAAD,MAAUgC,EAAV,uDAAmB,GAAnB,OAA2B,UAzBlCjgB,EAyBuC2e,YAAYV,UAAjB,eAA2BzL,gBAAiByN,GAzB9EjgB,EA0BZkT,qBAAuB,SAAC+K,GAAD,MAAUgC,EAAV,uDAAmB,GAAnB,OAA2B,UA1BtCjgB,EA0B2C2e,YAAYV,UAAjB,eAA2BwC,oBAAqBR,GA1BtFjgB,EA2BZ4c,UAAY,SAACqB,GAAD,MAAUgC,EAAV,uDAAmB,GAAnB,OAA2B,UA3B3BjgB,EA2BgC2e,YAAYV,UAAjB,eAA2ByC,SAAUT,GA3BhEjgB,EA8BZme,aAAe,kBAAMxtB,OAAO9C,KAAK8S,MA9BrBX,EA+BZke,cAAgB,SAACte,GAAD,MAAWqgB,EAAX,uDAAoB,GAApB,OAAsC,OAAVtf,UAAU,IAAVA,KAAA,UAAAA,IAAaf,UAAb,eAAwBlN,OAAQutB,GA/BhEjgB,EAgCZugB,qBAAuB,SAAC3gB,GAAD,OAhCXI,EAgC8Bme,eAAe9Q,QAAQzN,IAhCrDI,EAiCZgT,SAAW,SAACpT,GAAD,MAAWqgB,EAAX,uDAAoB,EAApB,OAAqC,OAAVtf,UAAU,IAAVA,KAAA,UAAAA,IAAaf,UAAb,eAAwBgB,QAASqf,GAjC3DjgB,EAkCZC,aAAe,SAACL,GAAD,MAAWqgB,EAAX,uDAAoB,EAApB,OAAqC,OAAVtf,UAAU,IAAVA,KAAA,UAAAA,IAAaf,UAAb,eAAwBiB,QAASof,GAlC/DjgB,EAqCZ2gB,mBAAqB,SAAC1C,GAAD,uBArCTje,EAqC2B2e,YAAYV,UAA9B,aAAa,EAA2B2C,gBArCjD5gB,EAsCZkgB,sBAAwB,SAACjC,GAAD,uBAtCZje,EAsC8B2gB,mBAAmB1C,UAArC,aAAa,EAAkCntB,KAtC3DkP,EAuCZmgB,sBAAwB,SAAClC,EAASre,GAAV,yBAvCZI,EAuCwC2gB,mBAAmB1C,UAA/C,iBAAuB,EAAkC7vB,aAAzD,aAAuB,EAvCnC4R,EAuCkFugB,qBAAqB3gB,KAvCvGI,EAyCZ6d,SAAW,SAACI,GAAD,MAAUgC,EAAV,uDAAmB,KAAnB,OAA4B,UAzC3BjgB,EAyCgC2e,YAAYV,UAAjB,eAA2B4C,WAAYZ,GAzClEjgB,EA0CZ2S,QAAU,SAACsL,GAAD,MAAUgC,EAAV,uDAAmB,KAAnB,OAA4B,UA1C1BjgB,EA0C+B2e,YAAYV,UAAjB,eAA2B6C,UAAWb,GA1ChEjgB,EA2CZ4a,aAAe,SAACqD,EAAS/d,GAAV,UAAqB+f,EAArB,uDAA8B,KAA9B,OAAuC,UA3C1CjgB,EA2C+C2e,YAAYV,UAAjB,mBAA2BW,cAA3B,mBAAoC1e,UAApC,eAAgD6gB,MAAOd,GA3CjGjgB,EA4CZmT,oBAAsB,SAAC8K,EAAS+C,GAAV,UAAsBf,EAAtB,uDAA+B,KAA/B,OAAwC,UA5ClDjgB,EA4CuD2e,YAAYV,UAAjB,mBAA2BW,cAA3B,0CAAoDoC,EAAa,WAAjE,eAAuED,MAAOd,GA5ChIjgB,EA+CZ6a,cAAgB,SAACoD,EAAS/d,GAAV,UAAqB+f,EAArB,uDAA8B,GAA9B,OAAqC,UA/CzCjgB,EA+C8C2e,YAAYV,UAAjB,mBAA2BW,cAA3B,mBAAoC1e,UAApC,eAAgDxN,OAAQutB,GA/CjGjgB,EAiDZihB,oBAAsB,SAACthB,EAAcO,EAAWL,GAA+B,IAAD,EAAfogB,EAAe,uDAAN,EAE7E,GAAkB,UAAd/f,GAAuC,UAAdA,EAAuB,OAAO+f,EAE3D,IADA,IAAIiB,GAAU,UApDGlhB,EAoDE2e,YAAYhf,UAAjB,eAAgCif,SAAU,GAC/C5wB,EAAI,EAAGA,GAAK6R,EAAe7R,IAAK,CAAC,IAAD,EACnCmzB,GAAc,UAAAD,EAAQ,gBAAD,OAAiBlzB,WAAxB,eAA8BmzB,cAAe,GAC3DC,EAAazwB,OAAOsO,QAAQkiB,GAAaE,MAAK,mCAAEvwB,EAAF,iBAAgBA,IAAQoP,KAC1E,GAAIkhB,EAAY,OAAOA,EAAW,GAEpC,OAAOnB,GA1DUjgB,EA4DZK,kBAAoB,SAACvB,EAAWoB,EAAWL,GAAsC,IAAvByhB,EAAsB,wDACrF,GAAkB,SAAdphB,GAAsC,UAAdA,GAAuC,UAAdA,EAAuB,CAAC,IAAD,EACtEE,GAAwB,OAATtB,QAAS,IAATA,GAAA,UAAAA,EAAWwb,uBAAX,eAA6Bpa,KAAc,EAC1Dga,EA/DWla,EA+DOihB,oBAAL,OAAyBniB,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAWa,aAAcO,EAAWL,GAE9E,OADAO,EAAe2S,YAAM3S,EAAe8Z,EAAY,EAAG,IAC5CoH,EAAY,CAAElhB,eAAc8Z,cAAe9Z,EAC7C,OAAOkhB,EAAY,GAAK,MAlEdthB,EAoEZ+a,kBAAoB,SAACkD,EAAS/d,GAAV,UAAqB+f,EAArB,uDAA8B,GAA9B,OAAqC,UApE7CjgB,EAoEkD2e,YAAYV,UAAjB,mBAA2BW,cAA3B,mBAAoC1e,UAApC,eAAgD/M,WAAY8sB,GApEzGjgB,EAqEZuhB,gBAAkB,SAACtD,EAAS/d,GAAV,UAAqB+f,EAArB,uDAA8B,GAA9B,OAAqC,UArE3CjgB,EAqEgD2e,YAAYV,UAAjB,mBAA2BW,cAA3B,mBAAoC1e,UAApC,eAAgDgb,SAAU+E,GArErGjgB,EAsEZya,eAAiB,SAACwD,EAAS/d,EAAWL,EAAeE,GAA8B,IAAD,MAAlBkgB,EAAkB,uDAAT,KAC1EttB,EAAK,UAvEQqN,EAuEA2e,YAAYV,UAApB,iBAAG,EAA2BW,cAA9B,iBAAG,EAAoC1e,UAAvC,aAAG,EAAgDvN,MAC5D,MAAqB,oBAAVA,EACFA,EAAMkN,EAAeE,GACvBpN,GAASstB,GA1ECjgB,EA4EZwhB,kBAAoB,SAACvD,EAASpe,EAAeE,GAAe,IAAD,EAC5DmhB,GAAU,UA7EGlhB,EA6EE2e,YAAYV,UAAjB,eAA2BW,SAAU,GAC/C6C,EAAW,GAKf,OAJA9wB,OAAO9C,KAAKqzB,GAASrwB,SAAQ,SAAAqP,GAC3B,IAAIvN,EAhFWqN,EAgFEya,eAAewD,EAAS/d,EAAWL,EAAeE,GAC/DpN,GAAO8uB,EAAS1wB,KAAK4B,MAEpB8uB,GAnFUzhB,EAqFZM,qBAAuB,SAAC2d,EAAS/d,EAAWC,EAAgBC,EAAcP,EAAeE,GAA8B,IAAD,EAAlBkgB,EAAkB,uDAAT,KAC9GyB,EAtFa1hB,EAsFF+a,kBAAkBkD,EAAS/d,GACtCV,EAAO,KAFgH,cAGrGkiB,GAHqG,IAG3H,2BAA2B,CAAC,IAAD,EAAhB1G,EAAgB,QACrB2G,EAAW3G,EAAQjnB,YAGvB,GAFwB,oBAAb4tB,IACTA,EAAWA,EAASvhB,EAAcP,EAAeE,KACvC,QAAR,EAAA4hB,SAAA,eAAUxhB,kBAAmBA,EAAgB,CAC/CX,EAAOmiB,EACP,QATuH,8BAY3H,OAAOniB,GAAQygB,GAjGEjgB,EAmGZob,0BAA4B,SAACrnB,EAAaC,GAAmC,IAAnBisB,EAAkB,uDAAT,KACxE,IAAKjsB,IAAmBD,EAAa,OAAOksB,EADqC,MAEtDrP,IAAiBgR,mBAAmB7tB,EAAa,QAASC,GAFJ,0BAE5ErB,OAF4E,MAEpE,GAFoE,EAEhEkvB,EAFgE,KAGjF,OAAKA,EACElxB,OAAOqO,YAAYrO,OAAOsO,QAAQtM,GAAO7E,KAAI,mCAAEgD,EAAF,KAAOkgB,EAAP,WAAwB,qBAARlgB,EAA6B,CAACA,EAAKkgB,GAAO,CAAClgB,EAAKkgB,EAAM6Q,OADtG5B,GAtGHjgB,EAyGZqb,2BAA6B,SAACtnB,EAAaC,GAAiC,IAAjBisB,EAAgB,uDAAP,GACzE,IAAKjsB,IAAmBD,EAAa,OAAOksB,EAC5C,IAAI/E,EAAStK,IAAiBgR,mBAAmB7tB,EAAa,SAAUC,GAAgB,GACxF,OAAOknB,GAAU+E,GA5GAjgB,EA8GZuY,iBAAmB,SAACuJ,EAAUhjB,GAAkC,IAAD,MAAtBijB,EAAsB,0DACWjjB,EAAzEyB,eAD8D,MACpD,GADoD,IACWzB,EAA3D0Z,mBADgD,SAC3B7Y,EAAsCb,EAAtCa,aAD2B,EACWb,EAAxB6a,oBADa,MACE,KADF,EAEhEC,EAhHa5Z,EAgHKuS,gBAAgB5S,GACjCoiB,IAAWA,EAjHC/hB,EAiHgBoY,gBAAgBzY,IAAkB6Y,KAAgB,UAAAxY,EAAU2e,YAAYhf,UAAtB,mBAAqCif,cAArC,mBAA6CG,YAA7C,eAAmDiD,aAAa,IACnJ,IAAI/J,EAAS,GAIb,OAHiB,QAAb6J,GAAmC,UAAbA,GAAqC,UAAbA,GAAwBC,KACxE9J,GAAU0B,GAA8BC,GAAc,KAElD,GAAN,OAAU3B,GAAV,OAAmB6J,EAAnB,YAA+BvhB,IAtHdP,EAwHZiiB,wBAA0B,SAACH,EAAUhjB,GAAkC,IAAD,MAAtBijB,EAAsB,0DACVjjB,EAA3D0Z,mBADqE,SAChD7Y,EAAsCb,EAAtCa,aADgD,EACVb,EAAxB6a,oBADkC,MACnB,KADmB,EAEvEC,EA1Ha5Z,EA0HKuS,gBAAgB5S,GAElC,CAAC,gBAAiB,kBAAkB+C,SAASiX,GAC/CA,EAAe,WACR,CAAC,YAAa,aAAajX,SAASiX,KAC3CA,EAAe,QACZoI,IAAWA,EAhIC/hB,EAgIgBoY,gBAAgBzY,IAAkB6Y,KAAgB,UAAAxY,EAAU2e,YAAYhf,UAAtB,mBAAqCif,cAArC,mBAA6CG,YAA7C,eAAmDiD,aAAa,IACnJ,IAAI/J,EAAS,WAGb,OAFiB,QAAb6J,GAAmC,UAAbA,GAAqC,UAAbA,GAAwBC,KACxE9J,EAAU0B,GAA8BC,GACnC3B,GApIUjY,EAuIZoY,gBAAkB,SAAC6F,GAAD,IAAUgC,EAAV,8DAAgE,aAvItEjgB,EAuIwCyS,iBAAiBwL,IAA2BgC,GAvIpFjgB,EAwIZqY,gBAAkB,SAAC4F,GAAD,UAAUgC,EAAV,+DAA6B,UAxInCjgB,EAwIwC2e,YAAYV,UAAjB,mBAA2BW,cAA3B,mBAAmCG,YAAnC,eAAyCiD,YAAa/B,GAxIzFjgB,EA0IZoP,mBAAqB,SAACzP,GAA+B,IAAjBsgB,EAAgB,uDAAP,GAClD,IAAKtgB,EAAc,OAAOsgB,EAC1B,IAAIhI,EAASjY,EAAUuS,gBAAgB5S,GACvC,IAAKsY,EAAQ,OAAOgI,EACpB,IAAIpyB,EAAO,CAAC,WAAY,YAAa,YAAa,UAAW,YAAa,WAAY,YAAa,YAAxF,UAAwGoqB,EAAxG,mBAEPG,EAAkBpY,EAAUoY,gBAAgBzY,GAC5C0Y,EAAkBrY,EAAUqY,gBAAgB1Y,GAC5CuiB,EAAU,GACT9J,GACH8J,EAAQnxB,KAAK,iBAEVqnB,GACH8J,EAAQnxB,KAAK,mBAAoB,oBAE/BqnB,GAAmBC,EACrB6J,EAAQnxB,KAAR,UAAgBknB,EAAhB,+BAA8CA,EAA9C,sBACoD,QAA7CjY,EAAUyS,iBAAiB9S,IAClCuiB,EAAQnxB,KAAR,UAAgBknB,EAAhB,sBAGFiK,EAAQnxB,KAAR,UAAgBknB,EAAhB,4BAA2CA,EAA3C,mBACApqB,EAAKkD,KAAL,MAAAlD,EAAaq0B,GACE,SAAXjK,GACFpqB,EAAKkD,KAAL,MAAAlD,EAAI,YAASq0B,EAAQ3iB,QAAO,SAAAzO,GAAG,OAAIA,EAAIqxB,WAAJ,UAAkBlK,EAAlB,SAA8BnqB,KAAI,SAAAgD,GAAG,OAAIA,EAAI4N,QAAJ,UAAeuZ,EAAf,eAA6BA,EAA7B,oBAC5EpqB,EAAKkD,KAAL,MAAAlD,EAAI,YAASq0B,EAAQ3iB,QAAO,SAAAzO,GAAG,OAAIA,EAAIqxB,WAAJ,UAAkBlK,EAAlB,SAA8BnqB,KAAI,SAAAgD,GAAG,OAAIA,EAAI4N,QAAJ,UAAeuZ,EAAf,eAA6BA,EAA7B,iBACxD,SAAXA,EACTpqB,EAAKkD,KAAL,MAAAlD,EAAI,YAASq0B,EAAQ3iB,QAAO,SAAAzO,GAAG,OAAIA,EAAIqxB,WAAJ,UAAkBlK,EAAlB,SAA8BnqB,KAAI,SAAAgD,GAAG,OAAIA,EAAI4N,QAAJ,UAAeuZ,EAAf,eAA6BA,EAA7B,gBAC1D,UAAXA,GACPpqB,EAAKkD,KAAL,MAAAlD,EAAI,YAASq0B,EAAQ3iB,QAAO,SAAAzO,GAAG,OAAIA,EAAIqxB,WAAJ,UAAkBlK,EAAlB,SAA8BnqB,KAAI,SAAAgD,GAAG,OAAIA,EAAI4N,QAAJ,UAAeuZ,EAAf,eAA6BA,EAA7B,oBAG9EpqB,EAAKkD,KAAL,MAAAlD,EAAI,YAASisB,IAAsB7B,KACnC,IAAIzF,EA3KaxS,EA2KQyS,iBAAiB9S,GAE1C,MADsB,aAAlB6S,GAA8B3kB,EAAKkD,KAAK,eACrClD,GA7KUmS,EAgLZuO,YAAc,SAACzP,EAAWmD,GAC/B,MAAgB,aAAZA,EACKjC,EAAUuO,YAAYzP,EAAW,OAASkB,EAAUuO,YAAYzP,EAAW,QAAUkB,EAAUuO,YAAYzP,EAAW,aAAc,EACxH,cAAZmD,EACAjC,EAAUuO,YAAYzP,EAAW,QAAUkB,EAAUuO,YAAYzP,EAAW,SAAWkB,EAAUuO,YAAYzP,EAAW,cAAe,EAC3H,cAAZmD,EACAjC,EAAUuO,YAAYzP,EAAW,QAAUkB,EAAUuO,YAAYzP,EAAW,SAAWkB,EAAUuO,YAAYzP,EAAW,cAAe,KACzIA,IAAaA,EAAUie,oBAAqB9a,KAAWnD,EAAUie,mBAvLvD/c,EA0LZmO,yBAA2B,SAACrP,EAAWmD,GAAyB,IAAD,EAAfge,EAAe,uDAAN,EAC9D,OA3LiBjgB,EA2LRuO,YAAYzP,EAAWmD,GAAU,OAAOnD,QAAP,IAAOA,GAAP,UAAOA,EAAWie,yBAAlB,aAAO,EAA+B9a,GA3L/DjC,EA4LAiX,iBAAiBnY,EAAWmD,EAASge,IA5LrCjgB,EAgMZgQ,eAAiB,SAACgN,EAAa/M,GACpC,IAAInR,EAAYlB,IAAkBS,aAAa2e,GAC/C,GAAKle,EAAL,CACA,IAAIsjB,EAAoBtjB,EAAUC,kBAC9BsjB,EAAuBpS,EAG3BzK,IAAS8c,sBAAsBzxB,SAAQ,SAAAqO,GACrC,IAAIqjB,EAAezkB,IAAiBsB,YAAjB,OAA6BijB,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAuBnjB,IACvE,GAAIqjB,EAAankB,WAAa4e,EAA9B,CACA,IAAIwF,EAAY1kB,IAAiBsB,YAAjB,OAA6BgjB,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAoBljB,IAC7DujB,GAA0B,OAAZF,QAAY,IAAZA,OAAA,EAAAA,EAAcnkB,WAAY,GAExCokB,GAAW1kB,IAAiBiiB,kBAAkByC,EAAUra,GAAIsa,GAE5DA,GAAY7kB,IAAkB8kB,cAAcD,EAAYD,GAExDD,GAAczkB,IAAiBiiB,kBAAkBwC,EAAapa,GAAI6U,OAGxEle,EAAUC,kBAAoB,GAC9BpO,OAAOsO,QAAQgR,GAAapf,SAAQ,mCAAEC,EAAF,KAAOqO,EAAP,YAClCL,EAAUC,kBAAkBjO,GAAOqO,KACrCvB,IAAkB4C,gBAAgB1B,KAvNjBkB,EAiOZ2d,eAAiB,SAAC7e,GACvB,IAAI6jB,EAAYhyB,OAAOqO,YAAYrO,OAAOsO,QAAQH,EAAUC,mBAAmBjR,KAAI,mCAAEgD,EAAF,KAAOqO,EAAP,WAAkB,CAACrO,EAAKgN,IAAiBsB,YAAYD,QACpIyjB,EAAe5iB,EAAU6iB,kCAAkC/jB,GAC/D,OApOiBkB,EAoOL8iB,uBAAuBhkB,EAAUQ,qBAAsBsjB,EAAcD,IApOhE3iB,EAuOZ8iB,uBAAyB,SAACxjB,EAAsBsjB,EAAcD,GACnE,IAAIrS,EAAa9K,IAAS8K,WAAWqS,GACjCI,EAA0Bvd,IAASwd,2BAA2B1S,GAE9D3d,EAAQ4qB,YAAUqF,GAmBtB,OAjBAjyB,OAAOsN,OAAO0kB,GAAW9xB,SAAQ,SAAAqN,GAC1BA,IAELvL,EAAMuL,EAAIM,cAAgB7L,EAAMuL,EAAIM,cAAgB,GAAKgH,IAASQ,iBAAiB9H,EAAIM,YAAaN,EAAI2H,SAAUlT,EAAMuc,oBAAqC,EAAfhR,EAAI2H,SAAe3H,EAAI0C,OAErK1C,EAAI+I,SAASpW,SAAQ,SAACoyB,GAAD,OACnBA,GAAWA,EAAQnyB,MAAQ6B,EAAMswB,EAAQnyB,MAAQ6B,EAAMswB,EAAQnyB,MAAQ,GAAKmyB,EAAQ70B,cAGxF20B,EAAwBlyB,SAAQ,SAAAqW,GAAI,OAAIvU,EAAMuU,EAAKpW,MAAQ6B,EAAMuU,EAAKpW,MAAQ,GAAKoW,EAAKyG,WAExFrO,GAAwBA,EAAqBzO,SAAQ,SAAAkD,GAAgB,IACrDwK,EAA+BxK,EAAvC0L,OAAyB+Q,EAAczc,EAAvB2L,QAClBwjB,EAAY1d,IAASuL,4BAA4BxS,EAAQiS,EAAWzc,EAAYC,gBAChFkvB,GAAWvyB,OAAOsO,QAAQikB,GAAWryB,SAAQ,mCAAEoR,EAAF,KAAW+O,EAAX,YAAoBre,EAAMsP,IAAYtP,EAAMsP,IAAY,GAAK+O,QAEhHzN,YAAmB5Q,GACZ,CACLsd,YAAatf,OAAOqO,YAAYrO,OAAOsO,QAAQ0jB,GAAW70B,KAAI,mCAAEgD,EAAF,KAAOkgB,EAAP,WAAgB,CAAClgB,EAAD,OAAMkgB,QAAN,IAAMA,OAAN,EAAMA,EAAK7I,QACzFmI,aACAtC,WAAYrb,EACZ2M,yBAlQeU,EAqQZ6iB,kCAAoC,SAAC/jB,GAAe,IAAD,YACpDqQ,EAAQ,CAAI,UAAW,WAAY,WAAY,aAAc,aAAc,cAAe,gBAAiB,sBAAnG,mBAA4Hxe,OAAO9C,KAAKiT,OAChJ8hB,EAAejyB,OAAOqO,YAAYmQ,EAASrhB,KAAI,SAAAgD,GAAG,MAAI,CAACA,EAvQ1CkP,EAuQoDmO,yBAAyBrP,EAAWhO,QAEzG8xB,EAAaO,aAzQInjB,EAyQgBuS,gBAAgBzT,EAAUa,cAG3DK,EAAUuW,mBAAmB1lB,SAAQ,SAAAonB,GACnC,IAAIhW,EAAO,UAAMgW,EAAN,kBACX2K,EAAa3gB,GA9QEjC,EA8QcmO,yBAAyBrP,EAAWmD,GACjEA,EAAO,UAAMgW,EAAN,uBACP2K,EAAa3gB,GAhREjC,EAgRcmO,yBAAyBrP,EAAWmD,MAInE,IAAImhB,GAAqB,OAATtkB,QAAS,IAATA,OAAA,EAAAA,EAAWie,oBAAqB,GAChDpsB,OAAOsO,QAAQmkB,GAAWvyB,SAAQ,mCAAEoR,EAAF,KAAW+O,EAAX,YAAqB4R,EAAaS,eAAephB,KAAa2gB,EAAa3gB,GAAW+O,MAGxH,IAAIsS,EAAiBtjB,EAAUmO,yBAAyBrP,EAAW,sBACnE,GAAIwkB,EAAgB,CAClB,IAAI3M,EAAqB3W,EAAUmO,yBAAyBrP,EAAW,sBACvE8jB,EAAaU,IAAmBV,EAAaU,IAAmB,GAAK3M,EAGvE,IAAI4M,EAAc,SAAA5wB,GAAK,OAAIA,GAAShC,OAAOsO,QAAQtM,GAAO9B,SAAQ,YAAiB,IAAD,mBAAdC,EAAc,KAATkgB,EAAS,KACpE,qBAARlgB,EAIJ8xB,EAAa9xB,IAAQ8xB,EAAa9xB,IAAQ,GAAKkgB,EAH7C4R,EAAaxgB,iBAAb,sBAAqCwgB,EAAaxgB,kBAAoB,IAAtE,YAA8E4O,QAM5ErR,EAAmEb,EAAnEa,aAAcC,EAAqDd,EAArDc,SAAUC,EAA2Cf,EAA3Ce,cAjC0B,EAiCiBf,EAA5BgB,0BAjCW,MAiCU,GAjCV,EAkCpDC,EAAYC,EAAUC,aAAaL,GAEvCE,EAAmBjP,SAAQ,SAAA2O,GAAS,IACpBU,EAAuDV,EAA/DC,OAA4BU,EAAmCX,EAA5CE,QAAyB1L,EAAmBwL,EAAnBxL,eAC9CoM,EAAeJ,EAAUK,kBAAkBvB,EAAWoB,GACtDnM,EAAciM,EAAUM,qBAAqBX,EAAcO,EAAWC,EAAgBC,EAAcP,EAAeE,GACvHwjB,EAAYvjB,EAAUob,0BAA0BrnB,EAAaC,EAAgB,QAI1DgM,EAAUwhB,kBAAkB7hB,EAAcE,EAAeE,GAC/DlP,QAAQ0yB,GAGvB,IAAIC,EAAc,CAChBC,OAAQ1P,IAAOC,oBAAP,OAA2BlV,QAA3B,IAA2BA,GAA3B,UAA2BA,EAAW8U,cAAtC,aAA2B,EAAmB9iB,KACtD4yB,OAAQ3P,IAAO4P,gCAAP,OAAuC7kB,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAW8U,QAC1DgQ,WAAY7P,IAAOW,mBAAP,OAA0B5V,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAW8U,cAArC,aAA0B,EAAmB9iB,IAA7C,OAAkDgO,QAAlD,IAAkDA,GAAlD,UAAkDA,EAAW8U,cAA7D,aAAkD,EAAmBe,aACjF7D,iBAAkBiD,IAAOa,yBAAP,OAAgC9V,QAAhC,IAAgCA,GAAhC,UAAgCA,EAAW8U,cAA3C,aAAgC,EAAmB9iB,IAAnD,OAAwDgO,QAAxD,IAAwDA,GAAxD,UAAwDA,EAAW8U,cAAnE,aAAwD,EAAmBe,YAA3E,OAAwF7V,QAAxF,IAAwFA,GAAxF,UAAwFA,EAAW8U,cAAnG,aAAwF,EAAmB5f,iBAO/H,OALIwvB,EAAYC,SACdb,EAAaY,EAAYC,SAAWb,EAAaY,EAAYC,SAAW,GAAKD,EAAYE,QACvFF,EAAYI,YAAYL,EAAYC,EAAYI,YAChDJ,EAAY1S,kBAAkByS,EAAYC,EAAY1S,kBAEnD8R,I,gCC1UX,0XAAMjG,EAA4B,SAACkH,GAAD,OAAWA,EAAM/f,KAAKC,MAAMD,KAAKggB,SAAWD,EAAMtc,UAMpF,SAASwc,EAAsBC,EAAKC,GAGlC,OAFAD,EAAMlgB,KAAKogB,KAAKF,GAChBC,EAAMngB,KAAKC,MAAMkgB,GACVngB,KAAKC,MAAMD,KAAKggB,UAAYG,EAAMD,EAAM,GAAKA,GAKtD,IAAMG,EAAuB,SAACrzB,GAC5B,IAAIszB,EAAO1mB,aAAa2mB,QAAQvzB,GAChC,OAAKszB,EACEE,KAAKC,MAAMH,GADA,MAGdI,EAAqB,SAAC1zB,EAAK2zB,GAAN,OACzB/mB,aAAagnB,QAAQ5zB,EAAKwzB,KAAKK,UAAUF,KACrClH,EAAY,SAACkH,GAAD,OAChBH,KAAKC,MAAMD,KAAKK,UAAUF,KAEtBG,EAAmB,SAACC,EAAGC,GAAJ,OACvBhhB,KAAKihB,IAAIF,EAAIC,IAAM,MAEfE,EAAiB,SAACH,EAAGC,GAAJ,OACrBhhB,KAAKihB,IAAIF,EAAIC,IAAM,GACf/R,EAAQ,SAAC/B,EAAKiU,EAAKC,GACvB,OAAIlU,EAAMiU,EAAYA,EAClBjU,EAAMkU,EAAaA,EAChBlU,GAEHmU,EAAoB,SAAC7P,GAAD,OACxBA,EAAI/N,OAAS+N,EAAIA,EAAI/N,OAAS,GAAK,MAG/B6d,EAAe,SAACpU,GAAD,OAAS+B,EAAM/B,EAAK,EAAG,MAG5C,SAASqU,EAAWC,EAAQC,EAAKhe,GAC/B,OAAQ,IAAI3Z,MAAM2Z,EAAS,GAAGie,KAAKD,GAAOD,GAAQG,OAAOle,K,uJCvCtCtB,EAEnB,aACE,GADa,oBACTyF,gBAAgBzF,EAClB,MAAM8F,MAAM,2CAJG9F,EAMZe,YAAc,SAAClW,GAAD,MAAMmvB,EAAN,uDAAe,GAAf,OAClByF,EAAc50B,KAAd,UAAsBkS,IAASlS,UAA/B,aAAsB,EAAe4B,OAASutB,GAP9Bha,EAQZ+Q,kBAAoB,SAAClmB,GAAD,QAAMmvB,EAAN,uDAAe,GAAf,OACxByF,EAAc50B,KAAd,UAAsBkS,IAASlS,UAA/B,aAAsB,EAAe60B,UAArC,UAA+C3iB,IAASlS,UAAxD,aAA+C,EAAe4B,OAASutB,GATvDha,EAUZkR,eAAiB,SAACrmB,GAAD,MAAMmvB,EAAN,uDAAe,GAAf,OACtB,UAAAjd,IAASlS,UAAT,eAAe4B,OAAQutB,GAXNha,EAYZiR,uBAAyB,SAACpmB,GAAsB,IAAjBmvB,EAAgB,uDAAP,GACzCvtB,EAbauT,EAaDe,YAAYlW,EAAKmvB,GAGjC,OAFIvtB,IAASutB,GAAmB,QAARnvB,GAAyB,SAARA,GAA0B,SAARA,IACzD4B,GAAQ,KACHA,GAhBUuT,EAkBZ2f,eAAiB,SAAC90B,GAAD,MAAMmvB,EAAN,uDAAe,GAAf,OACtB,UAAAjd,IAASlS,UAAT,eAAe6D,UAAWsrB,GAnBTha,EAoBZC,YAAc,SAACpV,GAAD,QAAMmvB,EAAN,uDAAe,GAAf,MACK,WAAxB,UAAAjd,IAASlS,UAAT,eAAe8d,MAAmBqR,GAAU,UAAAjd,IAASlS,UAAT,eAAe8d,OAAQqR,GArBlDha,EAuBZqI,UAAY,SAACxd,GAAS,IAAD,EAC1B,MAA4B,WAAxB,UAAAkS,IAASlS,UAAT,eAAe8d,MAAyB,EAE5B,MADL3I,EAAKC,YAAYpV,GACN,EAAI,GA1BTmV,EA4BZ6J,UAAY,SAAC7N,EAAStP,GAAV,OACjBkzB,EAAE,CAAElzB,QAAOmzB,QAAQ,GAAS7jB,IA7BXgE,EA+BZ8J,aAAe,SAAC9N,EAAStP,GAAiD,IAAD,EAAzCyP,EAAyC,uDAAtB,GAAI0jB,IAAkB,uEAChD1jB,GADgD,IAC9E,kCAAWG,EAAX,QACE,IAAI,UAAAC,IAAgB,OAACD,QAAD,IAACA,OAAD,EAACA,EAAiBzR,YAAlC,eAAwCA,OAAQmR,EAClD,OAAOgE,EAAK8f,qBAAqBpzB,EAAO4P,EAAgBzR,IAAKyR,EAAgByjB,SAAS,IAHZ,8BAI9E,OAAkB,OAAXvW,QAAW,IAAXA,OAAA,EAAAA,EAAcxN,KAA8C,oBAAlC,OAAOwN,QAAP,IAAOA,OAAP,EAAOA,EAAcxN,KACnD,+BAAOwN,EAAYxN,GAAS,CAAEtP,QAAOmzB,cApCvB7f,EAuCZ8f,qBAAuB,SAACpzB,EAAOszB,EAAaD,GAArB,IAA8BF,IAA9B,gEACR,OAApBI,QAAoB,IAApBA,OAAA,EAAAA,EAAuBD,KAA2E,oBAA3D,OAAOC,QAAP,IAAOA,OAAP,EAAOA,EAAuBD,GAAaE,cACjF,+BAAOD,EAAqBD,GAAaE,YAAYH,EAA9CE,CAAuD,CAAEvzB,QAAOmzB,cAG5E,IAAMJ,EAAgB/0B,OAAOqO,YAAYrO,OAAOsO,QAAQ+D,KAAUzD,QAAO,oDAAoB5K,WAAS7G,KAAI,mCAAEgD,EAAF,KAAO2zB,EAAP,WAAgB,CAAC3zB,EAAM,sBAAMrD,UAAS,eAAUg3B,EAAI9vB,QAAd,gBAAf,SAAqD8vB,EAAI/xB,YAE1L,SAASmzB,EAAEG,EAAS/jB,GAAU,IAAD,IACrBtP,EAAyBqzB,EAAzBrzB,MADqB,EACIqzB,EAAlBF,OACb,GAAKnzB,EAAL,CACA,SAH2B,YAGjB,OAAI8c,QAAJ,IAAIA,OAAJ,EAAIA,EAAcxN,IAC1B,OAAO,sCAASwN,EAAYxN,GAAS+jB,GAA9B,QACT,IAAIte,EAAWzB,EAAK+Q,kBAAkB/U,GAClCmkB,EAAWngB,EAAKC,YAAYjE,GAC5BqM,EAAYrI,EAAKqI,UAAUrM,GAC3B7T,GAAa,OAALuE,QAAK,IAALA,GAAA,UAAAA,EAAQsP,UAAR,mBAAkB0F,eAAlB,sBAA4B2G,MAA5B,OAA0C3b,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAQsP,IAC9D,OAAO,uBAAMxU,UAAU,cAAhB,UAA8B,4BAAIia,IAAlC,IAAgD,uBAAMja,UAAU,YAAhB,UAA6BW,EAAOg4B,SAG7F,IAAM3W,EAAc,CAElBrO,SAAU,SAACilB,GAAD,OAAO,iCAAOR,EAAEQ,EAAG,WAAZ,YAAiCR,EAAEQ,EAAG,OAAtC,QAAmDR,EAAEQ,EAAG,UAEzE9kB,UAAW,SAAC8kB,GAAD,OAAO,sCAASR,EAAEQ,EAAG,YAAd,MAA8BR,EAAEQ,EAAG,cAAnC,cAA6DR,EAAEQ,EAAG,QAAlE,QAAgFR,EAAEQ,EAAG,WAEvG3kB,UAAW,SAAC2kB,GAAD,OAAO,iCAAOR,EAAEQ,EAAG,YAAZ,YAAkCR,EAAEQ,EAAG,QAAvC,QAAqDR,EAAEQ,EAAG,WAG5EC,aAAc,SAACD,GAAD,OAAO,iCAAOR,EAAEQ,EAAG,aAAZ,MAA6BR,EAAEQ,EAAG,wBAAlC,MAA8DR,EAAEQ,EAAG,qBAAnE,MAA4FR,EAAEQ,EAAG,2BACtHE,kBAAmB,SAACF,GAAD,OAAO,iCAAOR,EAAEQ,EAAG,gBAAZ,MAAgCR,EAAEQ,EAAG,sBAC/DG,iBAAkB,SAACH,GAAD,OAAO,iCAAOR,EAAEQ,EAAG,gBAAZ,MAAgCR,EAAEQ,EAAG,2BAC9DI,oBAAqB,SAACJ,GAAD,OAAO,gDAAmBR,EAAEQ,EAAG,aAAxB,MAAyCR,EAAEQ,EAAG,sBAA9C,eAAiFR,EAAEQ,EAAG,YAAtF,SAC5BK,qBAAsB,SAACL,GAAD,OAAO,0CAAaR,EAAEQ,EAAG,iBAAlB,MAAuCR,EAAEQ,EAAG,sBAA5C,MAAsER,EAAEQ,EAAG,OAA3E,SAG7BM,aAAc,SAACN,GAAD,OAAO,iCAAOR,EAAEQ,EAAG,aAAZ,MAA6BR,EAAEQ,EAAG,wBAAlC,MAA8DR,EAAEQ,EAAG,qBAAnE,MAA4FR,EAAEQ,EAAG,2BACtHO,kBAAmB,SAACP,GAAD,OAAO,iCAAOR,EAAEQ,EAAG,gBAAZ,MAAgCR,EAAEQ,EAAG,sBAC/DQ,iBAAkB,SAACR,GAAD,OAAO,iCAAOR,EAAEQ,EAAG,gBAAZ,MAAgCR,EAAEQ,EAAG,2BAC9DS,oBAAqB,SAACT,GAAD,OAAO,gDAAmBR,EAAEQ,EAAG,aAAxB,MAAyCR,EAAEQ,EAAG,sBAA9C,eAAiFR,EAAEQ,EAAG,YAAtF,SAC5BU,qBAAsB,SAACV,GAAD,OAAO,0CAAaR,EAAEQ,EAAG,iBAAlB,MAAuCR,EAAEQ,EAAG,sBAA5C,MAAsER,EAAEQ,EAAG,OAA3E,SAG7BW,WAAY,SAACX,GAAD,OAAO,+BAAOR,EAAEQ,EAAG,cAC/BY,gBAAiB,SAACZ,GAAD,OAAO,+BAAOR,EAAEQ,EAAG,mBACpCa,eAAgB,SAACb,GAAD,OAAO,+BAAOR,EAAEQ,EAAG,kBACnCc,mBAAoB,SAACd,GAAD,OAAO,+BAAOR,EAAEQ,EAAG,sBAEvCe,QAAS,SAACf,GAAD,OAAO,iCAAOR,EAAEQ,EAAG,aAAZ,MAA6BR,EAAEQ,EAAG,mBAAlC,MAAyDR,EAAEQ,EAAG,qBAA9D,MAAuFR,EAAEQ,EAAG,2BAC5GgB,aAAc,SAAChB,GAAD,OAAO,iCAAOR,EAAEQ,EAAG,WAAZ,MAA2BR,EAAEQ,EAAG,sBACrDiB,YAAa,SAACjB,GAAD,OAAO,iCAAOR,EAAEQ,EAAG,WAAZ,MAA2BR,EAAEQ,EAAG,kBACpDkB,gBAAiB,SAAClB,GAAD,OAAO,0CAAaR,EAAEQ,EAAG,iBAAlB,MAAuCR,EAAEQ,EAAG,OAA5C,SAExBmB,eAAgB,SAACnB,GAAD,OAAO,0CAAaR,EAAEQ,EAAG,YAAlB,SACvBoB,WAAY,SAACpB,GAAD,OAAO,+CAAkBR,EAAEQ,EAAG,aAAvB,cAAgDR,EAAEQ,EAAG,YAArD,SAEnBqB,iBAAkB,SAACrB,GAAD,OAAO,gDAAmBR,EAAEQ,EAAG,aAAxB,MAAyCR,EAAEQ,EAAG,mBAA9C,eAA8ER,EAAEQ,EAAG,YAAnF,SACzBsB,iBAAkB,SAACtB,GAAD,OAAO,gDAAmBR,EAAEQ,EAAG,aAAxB,MAAyCR,EAAEQ,EAAG,mBAA9C,eAA8ER,EAAEQ,EAAG,YAAnF,SAEzBuB,kBAAmB,SAACvB,GAAD,OAAO,4CAAeR,EAAEQ,EAAG,cAApB,eAA+CR,EAAEQ,EAAG,eAApD,YAA6ER,EAAEQ,EAAG,cAAlF,QAE1BwB,oBAAqB,SAACxB,GAEpB,GADSA,EAAE1zB,MAAMm1B,mBAEf,OAAO,qDACT,IAAIC,GAAO1B,EAAE1zB,MAAMq1B,eAAiB,GAAK,IACzC,OAAID,EAAM,EAAU,yCAAYlC,EAAEQ,EAAG,iBAAjB,UACX0B,GAAO,IAAa,2CAAclC,EAAEQ,EAAG,iBAAnB,eACtB,yCAAYR,EAAEQ,EAAG,iBAAjB,QAIThN,eAAgB,SAACgN,GAAD,OAAO,0CAAaR,EAAEQ,EAAG,wBAAlB,QAAgDR,EAAEQ,EAAG,mBAArD,MAA4ER,EAAEQ,EAAG,oBAAjF,MAAyGR,EAAEQ,EAAG,gCACrI4B,iBAAkB,SAAC5B,GAAD,OAAO6B,IAAeC,WAAWr6B,KAAI,SAACkjB,EAAKhjB,GAAN,OAAYo6B,EAA8B/B,EAAGrV,EAAKhjB,OACzGorB,mBAAoB,SAACiN,GAAD,OAAO,0CAAaR,EAAEQ,EAAG,4BAAlB,QAAoDR,EAAEQ,EAAG,mBAAzD,MAAgFR,EAAEQ,EAAG,wBAArF,MAAiHR,EAAEQ,EAAG,mCACjJgC,qBAAsB,SAAChC,GAAD,OAAO6B,IAAeI,eAAex6B,KAAI,SAACkjB,EAAKhjB,GAAN,OAAYo6B,EAA8B/B,EAAGrV,EAAKhjB,OACjHmrB,iBAAkB,SAACkN,GAAD,OAAO,0CAAaR,EAAEQ,EAAG,0BAAlB,QAAkDR,EAAEQ,EAAG,mBAAvD,MAA8ER,EAAEQ,EAAG,sBAAnF,MAA6GR,EAAEQ,EAAG,gCAC3IkC,mBAAoB,SAAClC,GAAD,OAAO6B,IAAeM,aAAa16B,KAAI,SAACkjB,EAAKhjB,GAAN,OAAYo6B,EAA8B/B,EAAGrV,EAAKhjB,OAE7GsrB,UAAW,SAAC+M,GAAD,OAAO,0CAAaR,EAAEQ,EAAG,mBAAlB,QAA2CR,EAAEQ,EAAG,mBAAhD,MAAuER,EAAEQ,EAAG,eAA5E,MAA+FR,EAAEQ,EAAG,iCACtHoC,YAAa,SAACpC,GAAD,OAAO6B,IAAeQ,MAAM56B,KAAI,SAACkjB,EAAKhjB,GAAN,OAAYo6B,EAA8B/B,EAAGrV,EAAKhjB,OAC/FurB,YAAa,SAAC8M,GAAD,OAAO,0CAAaR,EAAEQ,EAAG,qBAAlB,QAA6CR,EAAEQ,EAAG,mBAAlD,MAAyER,EAAEQ,EAAG,iBAA9E,MAAmGR,EAAEQ,EAAG,2BAC5HsC,cAAe,SAACtC,GAAD,OAAO6B,IAAeU,UAAU96B,KAAI,SAACkjB,EAAKhjB,GAAN,OAAYo6B,EAA8B/B,EAAGrV,EAAKhjB,OACrG0rB,eAAgB,SAAC2M,GAAD,OAAO,0CAAaR,EAAEQ,EAAG,wBAAlB,QAAgDR,EAAEQ,EAAG,mBAArD,MAA4ER,EAAEQ,EAAG,wBACxGwC,iBAAkB,SAACxC,GAAD,OAAO6B,IAAeY,WAAWh7B,KAAI,SAACkjB,EAAKhjB,GAAN,OAAYo6B,EAA8B/B,EAAGrV,EAAKhjB,OAEzG+6B,oBAAqB,SAAC1C,GAAD,OAAO,0CAAaR,EAAEQ,EAAG,sBAAlB,QAA8CR,EAAEQ,EAAG,mBAAnD,YAAgFR,EAAEQ,EAAG,iCACjH2C,qBAAsB,SAAC3C,GAAD,OAAO,0CAAaR,EAAEQ,EAAG,sBAAlB,QAA8CR,EAAEQ,EAAG,mBAAnD,UAA8ER,EAAEQ,EAAG,iCAEhH4C,gBAAiB,SAAC5C,GAAD,OAAO,0CAAaR,EAAEQ,EAAG,kBAAlB,QAA0CR,EAAEQ,EAAG,mBAA/C,YAA4ER,EAAEQ,EAAG,iCACzG6C,gBAAiB,SAAC7C,GAAD,OAAO,0CAAaR,EAAEQ,EAAG,kBAAlB,QAA0CR,EAAEQ,EAAG,mBAA/C,UAA0ER,EAAEQ,EAAG,iCACvG8C,0BAA2B,SAAC9C,GAAD,OAAO,sDAAyBR,EAAE,EAAG,WAA9B,uBAA8DA,EAAE,EAAG,WAAnE,eAElCuD,gBAAiB,SAAC/C,GAAD,OAAO,mDAAsBR,EAAEQ,EAAG,WAA3B,cAAkDR,EAAEQ,EAAG,WAAvD,UACxBgD,gBAAiB,SAAChD,GAAD,OAAO,mDAAsBR,EAAEQ,EAAG,WAA3B,cAAkDR,EAAEQ,EAAG,WAAvD,UACxBiD,gBAAiB,SAACjD,GAAD,OAAO,mDAAsBR,EAAEQ,EAAG,WAA3B,cAAkDR,EAAEQ,EAAG,WAAvD,WAE1B,SAAS+B,EAA8B/B,EAAGrV,EAAKhjB,GAC7C,IAAIu7B,EAAOvY,EAAM,EAAI,MAAQ,MACzBwY,EAAS1lB,KAAKihB,IAAI/T,GAClByY,EAAY,GAGhB,OAFIz7B,EAAI,IAAGy7B,EAAY,yCAAY5D,EAAEQ,EAAG,cAAjB,MAAmCr4B,MAChD,IAANA,IAASy7B,EAAY,uCAAU5D,EAAEQ,EAAG,kBACjC,iCAAekD,EAAMC,EAAQC,IAAlBz7B,GAIpB,CAAC,CAAC,gBAAiB,QAAS,CAAC,iBAAkB,SAAU,CAAC,YAAa,QAAS,CAAC,YAAa,SAAS6C,SAAQ,YAA6B,IAAD,mBAA1B64B,EAA0B,KAAbC,EAAa,KACzI,CAAC,CAAC,WAAY,gBAAiB,CAAC,WAAY,kBAAmB,CAAC,SAAU,mBAAoB,CAAC,QAAS,cAAe,CAAC,QAAS,cAAe,CAAC,MAAO,cAAc94B,SAAQ,mCAAE+4B,EAAF,gBAC5K,CAAC,MAAO,UAAW,YAAY/4B,SAAQ,SAAA0P,GACrC,IAAIspB,EAAc,UAAMH,EAAN,YAAqBE,EAArB,YAAgCrpB,GAC9CupB,EAAO,UAAMH,EAAN,YAAiBC,EAAjB,YAA4BrpB,GACvCkP,EAAYoa,GAAkB,SAACxD,GAAD,OAAO,iCAAOR,EAAEQ,EAAD,UAAOqD,EAAP,WAAR,MAAwC7D,EAAEQ,EAAGyD,gBAGxF,IAAMC,EAAiB,CACrBzD,aAAc,SAACD,EAAG7P,GAAJ,OAAY,iCAAOqP,EAAEQ,EAAD,aAAR,MAA6BR,EAAEQ,EAAD,UAAO7P,EAAP,0BAA9B,MAAqEqP,EAAEQ,EAAD,qBAAtE,MAAmGR,EAAEQ,EAAD,UAAO7P,EAAP,6BAC9H+P,kBAAmB,SAACF,EAAG7P,GAAJ,OAAY,iCAAOqP,EAAEQ,EAAD,UAAO7P,EAAP,kBAAR,MAAuCqP,EAAEQ,EAAD,sBACvEG,iBAAkB,SAACH,EAAG7P,GAAJ,OAAY,iCAAOqP,EAAEQ,EAAD,UAAO7P,EAAP,kBAAR,MAAuCqP,EAAEQ,EAAD,2BACtEK,qBAAsB,SAACL,EAAG7P,GAAJ,OAAY,0CAAaqP,EAAEQ,EAAD,UAAO7P,EAAP,mBAAd,MAA8CqP,EAAEQ,EAAD,sBAA/C,MAA6ER,EAAEQ,EAAD,OAA9E,SAElCM,aAAc,SAACN,EAAG7P,GAAJ,OAAY,iCAAOqP,EAAEQ,EAAD,aAAR,MAA6BR,EAAEQ,EAAD,UAAO7P,EAAP,0BAA9B,MAAqEqP,EAAEQ,EAAD,qBAAtE,MAAmGR,EAAEQ,EAAD,UAAO7P,EAAP,6BAC9HoQ,kBAAmB,SAACP,EAAG7P,GAAJ,OAAY,iCAAOqP,EAAEQ,EAAD,UAAO7P,EAAP,kBAAR,MAAuCqP,EAAEQ,EAAD,sBACvEQ,iBAAkB,SAACR,EAAG7P,GAAJ,OAAY,iCAAOqP,EAAEQ,EAAD,UAAO7P,EAAP,kBAAR,MAAuCqP,EAAEQ,EAAD,2BACtEU,qBAAsB,SAACV,EAAG7P,GAAJ,OAAY,0CAAaqP,EAAEQ,EAAD,UAAO7P,EAAP,mBAAd,MAA8CqP,EAAEQ,EAAD,sBAA/C,MAA6ER,EAAEQ,EAAD,OAA9E,SAElCW,WAAY,SAACX,EAAG7P,GAAJ,OAAY,+BAAOqP,EAAEQ,EAAD,UAAO7P,EAAP,gBAChCyQ,gBAAiB,SAACZ,EAAG7P,GAAJ,OAAY,+BAAOqP,EAAEQ,EAAD,UAAO7P,EAAP,qBACrC0Q,eAAgB,SAACb,EAAG7P,GAAJ,OAAY,+BAAOqP,EAAEQ,EAAD,UAAO7P,EAAP,oBACpC2Q,mBAAoB,SAACd,EAAG7P,GAAJ,OAAY,+BAAOqP,EAAEQ,EAAD,UAAO7P,EAAP,wBAExCwT,QAAS,SAAC3D,EAAG7P,GAAJ,OAAY,iCAAOqP,EAAEQ,EAAD,aAAR,MAA6BR,EAAEQ,EAAD,UAAO7P,EAAP,qBAA9B,MAAgEqP,EAAEQ,EAAD,qBAAjE,MAA8FR,EAAEQ,EAAD,UAAO7P,EAAP,6BACpHyT,aAAc,SAAC5D,EAAG7P,GAAJ,OAAY,iCAAOqP,EAAEQ,EAAD,UAAO7P,EAAP,aAAR,MAAkCqP,EAAEQ,EAAD,sBAC7D6D,YAAa,SAAC7D,EAAG7P,GAAJ,OAAY,iCAAOqP,EAAEQ,EAAD,UAAO7P,EAAP,aAAR,MAAkCqP,EAAEQ,EAAD,kBAC5D8D,gBAAiB,SAAC9D,EAAG7P,GAAJ,OAAY,0CAAaqP,EAAEQ,EAAD,UAAO7P,EAAP,mBAAd,MAA8CqP,EAAEQ,EAAD,OAA/C,SAE7B+D,UAAW,SAAC/D,EAAG7P,GAAJ,OAAY,iCAAOqP,EAAEQ,EAAD,aAAR,MAA6BR,EAAEQ,EAAD,UAAO7P,EAAP,uBAA9B,MAAkEqP,EAAEQ,EAAD,qBAAnE,MAAgGR,EAAEQ,EAAD,UAAO7P,EAAP,6BACxH6T,eAAgB,SAAChE,EAAG7P,GAAJ,OAAY,iCAAOqP,EAAEQ,EAAD,UAAO7P,EAAP,eAAR,MAAoCqP,EAAEQ,EAAD,sBACjEiE,cAAe,SAACjE,EAAG7P,GAAJ,OAAY,iCAAOqP,EAAEQ,EAAD,UAAO7P,EAAP,eAAR,MAAoCqP,EAAEQ,EAAD,wBAChEkE,kBAAmB,SAAClE,EAAG7P,GAAJ,OAAY,0CAAaqP,EAAEQ,EAAD,UAAO7P,EAAP,mBAAd,MAA8CqP,EAAEQ,EAAD,mBAA/C,MAA0ER,EAAEQ,EAAD,OAA3E,SAE/BmE,UAAW,SAACnE,EAAG7P,GAAJ,OAAY,iCAAOqP,EAAEQ,EAAD,aAAR,MAA6BR,EAAEQ,EAAD,UAAO7P,EAAP,uBAA9B,MAAkEqP,EAAEQ,EAAD,qBAAnE,MAAgGR,EAAEQ,EAAD,UAAO7P,EAAP,6BACxHiU,eAAgB,SAACpE,EAAG7P,GAAJ,OAAY,iCAAOqP,EAAEQ,EAAD,UAAO7P,EAAP,eAAR,MAAoCqP,EAAEQ,EAAD,sBACjEqE,cAAe,SAACrE,EAAG7P,GAAJ,OAAY,iCAAOqP,EAAEQ,EAAD,UAAO7P,EAAP,eAAR,MAAoCqP,EAAEQ,EAAD,wBAChEsE,kBAAmB,SAACtE,EAAG7P,GAAJ,OAAY,0CAAaqP,EAAEQ,EAAD,UAAO7P,EAAP,mBAAd,MAA8CqP,EAAEQ,EAAD,mBAA/C,MAA0ER,EAAEQ,EAAD,OAA3E,SAE/BuE,oBAAqB,SAACvE,EAAG7P,GAEvB,GADS6P,EAAE1zB,MAAF,UAAW6jB,EAAX,wBAEP,OAAO,qDACT,IAAIuR,GAAO1B,EAAE1zB,MAAF,UAAW6jB,EAAX,oBAAmC,GAAK,IACnD,OAAIuR,EAAM,EAAU,yCAAYlC,EAAEQ,EAAD,UAAO7P,EAAP,mBAAb,UACXuR,GAAO,IAAa,2CAAclC,EAAEQ,EAAD,UAAO7P,EAAP,mBAAf,eACtB,yCAAYqP,EAAEQ,EAAD,UAAO7P,EAAP,mBAAb,SAIX7lB,OAAO9C,KAAK+C,KAAeC,SAAQ,SAAAonB,GAAM,OACvCtnB,OAAOsO,QAAQ8qB,GAAgBl5B,SAAQ,mCAAEC,EAAF,KAAO+5B,EAAP,YACrCl6B,OAAOyS,eAAeqM,EAAtB,UAAsCwI,EAAtC,YAAgDnnB,GAAO,CACrDwS,cAAc,EACdwnB,YAAY,EACZC,UAAU,EACV38B,MAAO,SAACq2B,GAAD,OAAUoG,EAAMpG,EAAKxM,YAGlC,IAAMiO,EAAuB,CAC3B8E,iBAAkB,CAChB7E,YAAa,SAACH,GAAD,OAAa,SAACK,GAAD,OAAO,sCAASR,EAAEQ,EAAG,YAAd,MAA8BR,EAAEQ,EAAG,cAAnC,cAA6DR,EAAEQ,EAAG,QAAlE,QAAgFR,EAAEQ,EAAG,OAArF,MAAgGR,EAAEQ,EAAG,aAArG,MAAsHL,EAAQ53B,MAA9H,Y,4FC7MtB,SAAS68B,EAAmB3V,GACzC,OCJa,SAA4BA,GACzC,GAAI1nB,MAAMuG,QAAQmhB,GAAM,OAAO,OAAA4V,EAAA,GAAiB5V,GDGzC,CAAkBA,IELZ,SAA0B6V,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAY16B,OAAOw6B,GAAO,OAAOv9B,MAAM09B,KAAKH,GFIvD,CAAgB7V,IAAQ,OAAAiW,EAAA,GAA2BjW,IGLvE,WACb,MAAM,IAAIkW,UAAU,wIHIwE,K,gCIL9F,+CACe,SAASC,EAA2BpF,EAAGqF,GACpD,IAAIC,EAEJ,GAAsB,qBAAXP,QAAgD,MAAtB/E,EAAE+E,OAAOC,UAAmB,CAC/D,GAAIz9B,MAAMuG,QAAQkyB,KAAOsF,EAAK,YAA2BtF,KAAOqF,GAAkBrF,GAAyB,kBAAbA,EAAE9e,OAAqB,CAC/GokB,IAAItF,EAAIsF,GACZ,IAAI39B,EAAI,EAEJ49B,EAAI,aAER,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAI99B,GAAKq4B,EAAE9e,OAAe,CACxBwkB,MAAM,GAED,CACLA,MAAM,EACN39B,MAAOi4B,EAAEr4B,OAGboB,EAAG,SAAW48B,GACZ,MAAMA,GAERnG,EAAG+F,GAIP,MAAM,IAAIJ,UAAU,yIAGtB,IAEIS,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLN,EAAG,WACDF,EAAKtF,EAAE+E,OAAOC,aAEhBS,EAAG,WACD,IAAIM,EAAOT,EAAGU,OAEd,OADAH,EAAmBE,EAAKL,KACjBK,GAETh9B,EAAG,SAAWk9B,GACZH,GAAS,EACTF,EAAMK,GAERzG,EAAG,WACD,IACOqG,GAAoC,MAAhBP,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIQ,EAAQ,MAAMF,O,8FCnDtBM,GAAY,EACZC,EAAoB,GACpBC,EAAc,EAEG7uB,EAEnB,aACE,GADa,oBACT8N,gBAAgB9N,EAClB,MAAMmO,MAAM,2CAJGnO,EAOZ8uB,UAAY,SAACtkB,GAAD,OAAWA,IAASA,EAAK1V,OAAS0V,EAAKzI,eAAiByI,EAAKxI,UAP7DhC,EAQZiB,qBAAuB,kBAAM0e,YAAUiP,IAR3B5uB,EASZ+uB,mBAAqB,kBAAMh8B,OAAO9C,KAAK2+B,IAT3B5uB,EAUZC,iCAAmC,WACxC,IAAI0uB,EAiBJ,OAhBA57B,OAAO9C,KAAK6P,cAAc6B,QAAO,SAAAzO,GAAG,OAAIA,EAAI4R,SAAS,iBAAe7R,SAAQ,SAAAsX,GAC1E,IAAKqkB,EAAkBrkB,GAAK,CAC1B,IAAIrJ,EAAYqlB,YAAqBhc,GACrC,IAAKrJ,EAAW,OAChB,GAhBalB,EAgBJ8uB,UAAU5tB,GAEjB,YAlBWlB,EAiBNoiB,oBAAoB7X,GAGtBrJ,EAAUC,oBACbD,EAAUC,kBAAoB,GAC9BylB,YAAmBrc,EAAIrJ,IAEzB0tB,EAAkBrkB,GAAMrJ,MAG5BytB,GAAY,GACL,GA5BU3uB,EA8BZ4f,aAAe,SAACpV,GACrB,IA/BiBxK,EA+BR8uB,UAAUtkB,GAAnB,CAGA,IADA,IAAID,EAAE,oBAAgBskB,KACc,OAA7B/uB,aAAa2mB,QAAQlc,IAC1BA,EAAE,oBAAgBskB,KACpB,IAAIG,EAAQrP,YAAUnV,GAItB,OAHAwkB,EAAMzkB,GAAKA,EACXqc,YAAmBrc,EAAIykB,GACvBJ,EAAkBrkB,GAAMykB,EACjBzkB,IAxCUvK,EA0CZ4C,gBAAkB,SAAC4H,GACxB,IA3CiBxK,EA2CR8uB,UAAUtkB,GAAnB,CACA,IAAID,EAAKC,EAAKD,GACVykB,EAAQrP,YAAUnV,GACtBoc,YAAmBrc,EAAIykB,GACvBJ,EAAkBrkB,GAAMykB,IA/CPhvB,EAiDZS,aAAe,SAAC8J,GAAD,OAAQA,EAAKqkB,EAAkBrkB,GAAM,MAjDxCvK,EAmDZoiB,oBAAsB,SAAC7X,UACrBqkB,EAAkBrkB,GACzBzK,aAAaC,WAAWwK,IArDPvK,EAuDZivB,sBAAwB,SAACC,EAAQ5tB,GACtC,IAAK4tB,IAAW5tB,EAAS,OAAO,KAChC,IAAIkJ,EAzDaxK,EAyDDS,aAAayuB,GAC7B,OAAI1kB,EAAKrJ,kBACAqJ,EAAKrJ,kBAAkBG,QADhC,GA1DiBtB,EA6DZ8kB,cAAgB,SAACoK,EAAQ5uB,GAC9B,IAAIkK,EA9DaxK,EA8DDS,aAAayuB,GACxB1kB,GAASlK,GAAQA,EAAIgB,UACrBkJ,EAAKrJ,oBACRqJ,EAAKrJ,kBAAoB,IAC3BqJ,EAAKrJ,kBAAkBb,EAAIgB,SAAWhB,EAAIiK,GAlEzBvK,EAmEZ4C,gBAAgB4H,KAnEJxK,EAqEZmvB,sBAAwB,SAACD,EAAQ5tB,GACtC,IAAIkJ,EAtEaxK,EAsEDS,aAAayuB,GACxB1kB,GAASlJ,GACTkJ,EAAKrJ,mBAAsBqJ,EAAKrJ,kBAAkBG,KACvDkJ,EAAKrJ,kBAAkBG,GAAW,GAzEjBtB,EA0EZ4C,gBAAgB4H,KA1EJxK,EA4EZovB,mBAAqB,SAAChQ,EAAa/M,GACxC,IAAInR,EA7EalB,EA6EIS,aAAa2e,GAC7Ble,IACLA,EAAUC,kBAAoB,GAC9BpO,OAAOsO,QAAQgR,GAAapf,SAAQ,mCAAEC,EAAF,KAAOqO,EAAP,YAClCL,EAAUC,kBAAkBjO,GAAOqO,KACrCvB,EAAkB4C,gBAAgB1B,M,6IC9EvBmuB,EAPE,CACfx6B,OAAQy6B,IACRt6B,MAAOu6B,IACPt6B,MAAOu6B,IACPt6B,OAAQu6B,IACRt6B,QAASu6B,K,iCCPUC,EAEnB,aAAgB,GAAD,oBAAK7hB,gBAAgB6hB,EAAc,MAAMxhB,MAAM,2CAF3CwhB,EAKZjd,WAAa,SAACqS,GACnB,IAAIrS,EAAa,GAMjB,OALA3f,OAAOsO,QAAQ0jB,GAAW9xB,SAAQ,YAAiB,IAAD,mBAAdC,EAAc,KAAToN,EAAS,KAC3CA,IACDoS,EAAWpS,EAAIK,QAAS+R,EAAWpS,EAAIK,QAAQxN,KAAKD,GACnDwf,EAAWpS,EAAIK,QAAU,CAACzN,OAE1Bwf,G,YCFU9K,E,WAEnB,aAAgB,GAAD,oBAAKkG,gBAAgBlG,EAAU,MAAMuG,MAAM,0C,0DAkD1C3d,EAAOo/B,GAA0B,IAAhBC,EAAe,wDAC1CC,EAAO,KACPC,EAAa7pB,KAAKiY,MAAM3tB,EAAQo/B,EAAS,IAC7C,IAAKG,EAAY,OAAO,KACxB,IAAIC,EAAa,SAAbA,EAAc5c,EAAKsE,GACrB,IAAIoY,EAAJ,CACA,GAAIpY,EAAI/N,OAAQ,CACd,GAAI+N,EAAI/N,OAASomB,EAAY,OAC7B,IAAIE,EAAMvY,EAAIwY,QAAO,SAACC,EAAM34B,GAAP,OAAa24B,EAAO34B,IAAG,GAC5C,GAAIq4B,EAAO,CACT,GAAII,EAAM7c,GAAO,KAAO,OACxB,GAAI4T,YAAiBiJ,EAAK7c,GAExB,YADA0c,EAAOpY,OAGJ,CACL,GAAIuY,EAAM7c,EAAM,EAAG,OACnB,GAAIgU,YAAe6I,EAAK7c,GAEtB,YADA0c,EAAOpY,IAKbkY,EAAS/H,QAAQrQ,UAAUvkB,SAAQ,SAAA68B,GACjCE,EAAWx/B,EAAD,sBAAYknB,GAAZ,CAAiBoY,UAI/B,OADAE,EAAWx/B,EAAO,IACXs/B,I,sCAEcvc,EAAO8R,GAAU,IAAD,IACrC,IAAKA,IAAYA,EAAQ70B,MAAO,MAAO,CAAE+P,OAAO,GAChD,IAAI/P,EAAQkB,WAAW2zB,EAAQ70B,OAC/B,GAAIyV,MAAMzV,GAAQ,MAAO,CAAE+P,OAAO,EAAO4J,IAAI,iBAC7C,IAAIlC,EAAWsL,EAAMtL,SACrB,IAAKA,EAAU,MAAO,CAAE1H,OAAO,EAAO4J,IAAI,2BAC1C,IAAIimB,EAA4C,MAAlC/nB,IAAKC,YAAY+c,EAAQnyB,KACnC08B,EAAW9hB,KAAKuiB,mBAAmBhL,EAAQnyB,IAAK+U,GAChDyB,EAAQoE,KAAKwiB,SAAS9/B,EAAOo/B,EAAUQ,GAE3C,IAAK1mB,GAA0B,IAAjBA,EAAMC,OAAc,MAAO,CAAEpJ,OAAO,EAAO4J,IAAI,qCAC7D,IAAIomB,GAAsB,UAAAn9B,IAAkB6U,UAAlB,eAA6BzU,uBAAwB,aAAIJ,IAAkB6U,UAAtB,aAAI,EAA6B1U,cAAe,EAC/H,GAAImW,EAAMC,OAAS4mB,EAAqB,MAAO,CAAEhwB,OAAO,EAAO4J,IAAI,sCAAD,OAAwComB,EAAxC,YAElE,IAAInK,EAAMwJ,EAAS,GAAKlmB,EAAMC,OAC1B0c,EAAMuJ,EAASA,EAASjmB,OAAS,GAAKD,EAAMC,OAChD,MAAO,CAAEpJ,OAAO,EAAMqJ,WAAY4d,aAAeh3B,EAAQ41B,IAAQC,EAAMD,GAAQ,KAAMjc,IAAI,2BAAD,OAA6BT,EAAMC,OAAnC,8BAA+DD,EAAMke,KAAK,MAA1E,KAAoFle,W,yCAIpJ6J,GACxB,IAD+B,EAC3BnJ,EAAoB,EAAGC,EAAoB,EAC3Cb,EAAqB+J,EAAMlK,SAASnZ,KAAI,SAAAm1B,GAAO,OAAIzd,EAAS4oB,gBAAgBjd,EAAO8R,MAFxD,cAGT7b,GAHS,IAG/B,4BACE,IADF,QACejJ,MACX,MAAO,CAAEiJ,qBAAoBjJ,OAAO,EAAO4J,IAAK,iCAAkCC,oBAAmBC,sBAL1E,8BAQ/B,GAAIb,EAAmBinB,MAAK,SAAApL,GAAO,aAAW,OAAPA,QAAO,IAAPA,GAAA,UAAAA,EAAS3b,aAAT,eAAgBC,QAAS,MAAMH,EAAmBinB,MAAK,SAACpL,GAAD,OAAcA,EAAQ3b,SAClH,MAAO,CAAEF,qBAAoBjJ,OAAO,EAAO4J,IAAK,uEAAwEC,oBAAmBC,qBAC7I,IAAIqmB,EAAoBlnB,EAAmB0mB,QAAO,SAACD,EAAKU,GAAN,OAAcV,GAAOU,EAAIpwB,OAASowB,EAAIjnB,MAAQinB,EAAIjnB,MAAMC,OAAS,KAAI,GACnHinB,EAAiBhpB,EAASgpB,eAAerd,EAAMvQ,MAAOuQ,EAAMtL,UAC5D4oB,EAAoBjpB,EAASkpB,mBAAmBvd,EAAMtL,UAE1D,GAAKyoB,EAAoBE,EAAkBC,EACzC,MAAO,CAAErnB,qBAAoBjJ,OAAO,EAAO4J,IAAI,oCAAD,OAAsCumB,EAAtC,8CAA6FE,EAA7F,uEAA0KC,EAA1K,MAAiMzmB,oBAAmBC,qBAEpQ,IAAI0mB,EAAyBvnB,EAAmB0mB,QAAO,SAACD,EAAKU,GAAN,OAAcV,GAAOU,EAAIpwB,OAASowB,EAAIjnB,OAASinB,EAAI/mB,WAAc+mB,EAAI/mB,WAAa+mB,EAAIjnB,MAAMC,OAAU,KAAI,GAGjK,MAAO,CAAEpJ,OAAO,EAAMiJ,qBAAoBknB,oBAAmBE,iBAAgBI,oBAAqBH,EAAmBzmB,kBAFrHA,EAAoBod,YAAauJ,EAAyBF,GAE8ExmB,kBADxIA,EAAoBmd,aAAcuJ,EAA0C,IAAjBH,GAAwBC,M,0CAiF1DxpB,EAAY+X,GACrC,IAAI9e,EAAMJ,IAAiBsB,YAAY6F,GACvC,GAAK/G,EAAL,CACA,IAAI2wB,EAAkB3wB,EAAIE,SACtB0wB,EAAoB9R,GAAe,GACvC,GAAI6R,IAAoBC,EAAxB,CACA,IAAI5vB,EAAUhB,EAAIgB,QACd6vB,EAAuBnxB,IAAkBivB,sBAAsBiC,EAAkB5vB,GACjF8vB,EAAqBlxB,IAAiBsB,YAAY2vB,GAGlDC,EAAoBlxB,IAAiBmxB,cAAc/wB,EAAK8wB,GACvDlxB,IAAiBiiB,kBAAkB7hB,EAAIiK,GAAI2mB,GAG5CA,GACFlxB,IAAkB8kB,cAAcoM,EAAkB5wB,GAEhD2wB,IACEG,EACFpxB,IAAkB8kB,cAAcmM,EAAiBG,GAEjDpxB,IAAkBmvB,sBAAsB8B,EAAiB3vB,U,KAhO5CsG,EAKZ8X,sBAAwB,kBAAM7sB,KALlB+U,EAMZuB,mBAAqB,SAACjW,GAAD,MAAMmvB,EAAN,uDAAe,GAAf,OAAkC,OAAZzvB,UAAY,IAAZA,KAAA,UAAAA,IAAeM,UAAf,eAAqB4B,OAAQutB,GAN5Dza,EAOZ0pB,gCAAkC,SAAC7Z,GAAD,OACvC1kB,OAAOsO,QAAQzO,KAAc+O,QAAO,mCAAO4vB,GAAP,kBAAmBA,EAAOzZ,OAAQyZ,EAAOzZ,OAAOnO,OAAU,KAAO8N,MARpF7P,EASZmB,qBAAuB,SAACpI,EAAQW,GAAT,QAAkB+gB,EAAlB,uDAA2B,GAA3B,OAA8C,OAAZzvB,UAAY,IAAZA,KAAA,UAAAA,IAAe+N,UAAf,mBAAwB6wB,cAAxB,eAAiClwB,KAAY+gB,GAT1Fza,EAUZiB,qBAAuB,SAAClI,EAAQW,GAAT,QAAkB+gB,EAAlB,uDAA2B,KAA3B,OAAgD,OAAZzvB,UAAY,IAAZA,KAAA,UAAAA,IAAe+N,UAAf,mBAAwB8wB,aAAxB,eAAgCnwB,KAAY+gB,GAV3Fza,EAWZ8pB,yBAA2B,SAAC/wB,GAAD,MAAS0hB,EAAT,uDAAkB,KAAlB,OAAuC,OAAZzvB,UAAY,IAAZA,KAAA,UAAAA,IAAe+N,UAAf,eAAwBgxB,OAAQtP,GAX1Eza,EAaZ8c,oBAAsB,kBAAM3xB,OAAO9C,KAAK2E,MAb5BgT,EAcZgqB,oBAAsB,SAACtwB,GAAD,IAAU+gB,EAAV,uDAAmB,GAAnB,OAC3BztB,IAAkB0M,GAAW1M,IAAkB0M,GAASxM,KAAOutB,GAf9Cza,EAgBZiqB,oBAAsB,SAACvwB,GAAD,IAAU+gB,EAAV,uDAAmB,GAAnB,OAC1B/gB,GAAW+tB,EAAS/tB,GAAY,cAAC,IAAD,CAAiB7R,KAAM4/B,EAAS/tB,GAAwBzR,UAAU,SAAnByR,GAAgC+gB,GAjB/Fza,EAmBZoB,4BAA8B,SAAC1H,GAA0B,IAAjB+gB,EAAgB,uDAAP,GACtD,IAAK/gB,EAAS,OAAO+gB,EACrB,IAAIvtB,EArBa8S,EAqBDgqB,oBAAoBtwB,GACpC,IAAKxM,EAAM,OAAOutB,EAClB,IAAIyP,EAvBalqB,EAuBGiqB,oBAAoBvwB,GACxC,OAAKwwB,EACG,iCAAOA,EAAP,IAAkBh9B,KADJutB,GAxBLza,EA6BZmqB,aAAe,SAACpxB,GAAD,OAAY/N,IAAa+N,GAAU/N,IAAa+N,GAAQmX,OAAS,IA7BpElQ,EAgCZoqB,gBAAkB,kBAAMl/B,KAhCZ8U,EAiCZQ,iBAAmB,SAAClV,EAAK+U,EAAUjF,GAAuB,IAAD,IAAfqf,EAAe,uDAAN,EACpD4P,EAAI,UAAGt+B,IAAsBsU,UAAzB,iBAAG,EAAkC/U,UAArC,aAAG,EAAyC8P,GACpD,OAAIivB,KACC,OAAI/+B,QAAJ,IAAIA,OAAJ,EAAIA,EAAK4R,SAAS,mBApCN8C,EAqCHQ,iBAAiB,gBAAiBH,EAAUjF,EAAOqf,GAC1DA,IAtCUza,EA0CZsqB,eAAiB,kBAAMn/B,OAAO9C,KAAKyE,MA1CvBkT,EA2CZkpB,mBAAqB,SAAC7oB,GAAD,OAAc7U,IAAkB6U,GACzD7U,IAAkB6U,GAAU1U,YAAcH,IAAkB6U,GAAUzU,qBAAwB,GA5C9EoU,EA6CZgpB,eAAiB,SAAC5tB,EAAOiF,GAAR,OACtB/B,KAAKogB,MAAiB,EAAXre,EAAejF,GAAS,IA9ClB4E,EA+CZuqB,wBAA0B,SAAC5e,GAAD,OAC/BA,EAAMlK,SAAS6mB,QAAO,SAACD,EAAKU,GAAN,OACpBV,GAAOU,GAAOA,EAAIngC,MAAQ,EAAI,KAAI,IAjDnBoX,EAkDZyoB,mBAAqB,SAACna,EAAYjO,GAAb,OAA2BiO,GAAcjO,EACnEvT,IAAqBwhB,GAAYjO,GAAY,IAnD5BL,EA6HZ8K,WAAaid,EAAajd,WA7Hd9K,EA+HZwqB,gBAAkB,SAACzxB,GAAD,MAAS0hB,EAAT,uDAAkB,KAAlB,OACX,OAAZzvB,UAAY,IAAZA,KAAA,UAAAA,IAAe+N,UAAf,eAAwBgxB,OAAQtP,GAhIfza,EAiIZkL,uBAAyB,SAACnS,EAAQiS,GAAT,QAAoByP,EAApB,uDAA6B,KAA7B,OAC9B1C,aAAU,UAlIO/X,EAkIFwqB,gBAAgBzxB,UAArB,mBAA+BiS,UAA/B,eAA2C7d,QAASstB,IAlI7Cza,EAoIZuL,4BAA8B,SAACxS,EAAQiS,EAAWxc,GAAmC,IAAnBisB,EAAkB,uDAAT,KAChF,IAAKjsB,EAAgB,OAAOisB,EAC5B,IAAIlsB,EAtIayR,EAsIMmL,gCAAgCpS,EAAQiS,GAC/D,IAAKzc,EAAa,OAAOksB,EAHgE,MAInErP,IAAiBgR,mBAAmB7tB,EAAa,QAASC,GAJS,mBAIpFrB,EAJoF,KAI7EkvB,EAJ6E,KAKzF,OAAKA,EACElxB,OAAOqO,YAAYrO,OAAOsO,QAAQtM,GAAO7E,KAAI,yCAAgB,CAAhB,UAA4B+zB,OAD5D5B,GAzIHza,EA4IZwd,2BAA6B,SAAC1S,GACnC,IAAI2f,EAAoB,GAMxB,OALAt/B,OAAOsO,QAAQqR,GAAYzf,SAAQ,qCAAE0N,EAAF,KAAU2xB,EAAV,YACrB,OAAZ1/B,UAAY,IAAZA,KAAA,UAAAA,IAAe+N,UAAf,eAAwBgxB,OAAQ5+B,OAAOsO,QAAQzO,IAAa+N,GAAQgxB,MAAM1+B,SAAQ,mCAAE2f,EAAF,KAAapiB,EAAb,YAChFsB,SAAS8gB,IAAc0f,EAAO3oB,QAAUnZ,EAAMuE,OAAShC,OAAO9C,KAAKO,EAAMuE,OAAO4U,QAChF5W,OAAOsO,QAAQ7Q,EAAMuE,OAAO9B,SAAQ,mCAAEC,EAAF,KAAO6c,EAAP,YAClCsiB,EAAkBl/B,KAAK,CAAED,MAAK6c,qBAC7BsiB,GAnJUzqB,EAqJZ6K,sBAAwB,SAACC,GAC9B,IAAI2f,EAAoB,GAQxB,OAPAt/B,OAAOsO,QAAQqR,GAAYzf,SAAQ,YAAuB,IAAD,qBAApB0N,EAAoB,KAAZ2xB,EAAY,KACvD,UAAI1/B,UAAJ,IAAIA,KAAJ,UAAIA,IAAe+N,UAAnB,aAAI,EAAwBgxB,KAAM,CAChC,IAAIY,EAAax/B,OAAO9C,KAAK2C,IAAa+N,GAAQgxB,MAAMhwB,QAAO,SAAAiR,GAAS,OAAI9gB,SAAS8gB,IAAc0f,EAAO3oB,UACtG4oB,EAAW5oB,SACb0oB,EAAkB1xB,GAAU4xB,OAG3BF,GA9JUzqB,EAiKZ6L,yBAA2B,SAAC9S,EAAQiS,EAAW4f,GAAiC,IAAD,MAAhBnQ,EAAgB,uDAAP,GACzEoQ,EAAa,OAAG7/B,UAAH,IAAGA,KAAH,UAAGA,IAAe+N,UAAlB,iBAAG,EAAwBgxB,YAA3B,iBAAG,EAA+B/e,UAAlC,aAAG,EAA2Chc,KAC/D,OAAK67B,EACwB,oBAAlBA,EACFA,EAAcD,GACdC,GAEFpQ,EALoBA,GAnKVza,EA0KZmL,gCAAkC,SAACpS,EAAQiS,GAAT,UAAoByP,EAApB,uDAA6B,KAA7B,OAC3B,OAAZzvB,UAAY,IAAZA,KAAA,UAAAA,IAAe+N,UAAf,mBAAwBgxB,YAAxB,mBAA+B/e,UAA/B,eAA2Czc,cAAeksB,GA3KzCza,EA6KZ8qB,4BAA8B,SAAChxB,GACpC,IAAIixB,EAAwB,GAwB5B,OAvBA5/B,OAAOsO,QAAQzO,KAAcK,SAAQ,YAAuB,IAAD,mBAApB0N,EAAoB,KAAZiyB,EAAY,KACrDC,EAAY,GACZC,GAAe,EACfF,EAAOjB,MACT5+B,OAAOsO,QAAQuxB,EAAOjB,MAAM1+B,SAAQ,YAAgC,IAAD,mBAA7B2f,EAA6B,KAAlBmgB,EAAkB,KAKjE,GAJIA,EAAah+B,OAAShC,OAAO9C,KAAK8iC,EAAah+B,OAAO4U,OAAS,IACjEkpB,EAAUjgB,GAAa+M,YAAUoT,EAAah+B,OAC9C+9B,GAAe,GAEbC,EAAa58B,YAAa,CAC5B,IAAIC,EAAiB4c,IAAiBC,kBAAkBvR,EAAsB,CAAEG,OAAQlB,EAAQmB,QAAS8Q,IACzG,GAAIxc,EAAgB,CAClB,IAAIkvB,EA3LG1d,EA2LcuL,4BAA4BxS,EAAQiS,EAAWxc,GAChEkvB,IACFuN,EAAUjgB,GAAa+M,YAAU2F,GACjCwN,GAAe,QAKrBA,IACFH,EAAsBhyB,GAAUkyB,MAE7BF,I,sFC/MPhE,GAAY,EACZqE,EAAmB,GACnBC,EAAa,EACI/yB,EAEnB,aACE,GADa,oBACT4N,gBAAgB5N,EAClB,MAAMiO,MAAM,2CAJGjO,EAOZ4uB,UAAY,SAACxuB,GAAD,OAChBA,IAAQA,EAAIK,SAAWL,EAAI2H,WAAa3H,EAAIgB,UAAYhB,EAAIM,aAR5CV,EASZE,oBAAsB,kBAAMuf,YAAUqT,IAT1B9yB,EAUZgzB,kBAAoB,kBAAMngC,OAAO9C,KAAK+iC,IAV1B9yB,EAWZD,iCAAmC,WACxC,IAAI0uB,EAaJ,OAZA57B,OAAO9C,KAAK6P,cAAc6B,QAAO,SAAAzO,GAAG,OAAIA,EAAI4R,SAAS,gBAAc7R,SAAQ,SAAAsX,GACzE,IAAKyoB,EAAiBzoB,GAAK,CACzB,IAAIjK,EAAMimB,YAAqBhc,GAC/B,IAAKjK,EAAK,OACV,GAjBaJ,EAiBJ4uB,UAAUxuB,GAEjB,YAnBWJ,EAkBNizB,mBAAmB5oB,GAG1ByoB,EAAiBzoB,GAAMjK,MAG3BquB,GAAY,GACL,GAzBUzuB,EA2BZsB,YAAc,SAAC+I,GAAD,OAAQA,EAAKyoB,EAAiBzoB,GAAM,MA3BtCrK,EA4BZkzB,eAAiB,SAAC9yB,GA5BNJ,EA6BZizB,mBAAmB7yB,EAAIiK,KA7BXrK,EA+BZmzB,YAAc,SAAC/yB,GACpB,GAhCiBJ,EAgCR4uB,UAAUxuB,GAAM,OAAO,KAGhC,IADA,IAAIiK,EAAE,mBAAe0oB,KACe,OAA7BnzB,aAAa2mB,QAAQlc,IAC1BA,EAAE,mBAAe0oB,KACnB,IAAIK,EAAO3T,YAAUrf,GAIrB,OAHAgzB,EAAK/oB,GAAKA,EACVqc,YAAmBrc,EAAI+oB,GACvBN,EAAiBzoB,GAAM+oB,EAChB/oB,GAzCUrK,EA2CZa,eAAiB,SAACT,GACvB,IA5CiBJ,EA4CR4uB,UAAUxuB,GAAnB,CACA,IAAIiK,EAAKjK,EAAIiK,GACT+oB,EAAO3T,YAAUrf,GACrBsmB,YAAmBrc,EAAI+oB,GACvBN,EAAiBzoB,GAAM+oB,IAhDNpzB,EAkDZizB,mBAAqB,SAACI,UACpBP,EAAiBO,GACxBzzB,aAAaC,WAAWwzB,IApDPrzB,EAuDZiiB,kBAAoB,SAAC5gB,EAAOf,GACjC,GAAKe,EAAL,CACA,IAAIjB,EAzDaJ,EAyDFsB,YAAYD,GACtBjB,GAAOA,EAAIE,WAAaA,IAC7BF,EAAIE,SAAWA,EA3DEN,EA4DZa,eAAeT,MA5DHJ,EA8DZmxB,cAAgB,SAACmC,EAAMC,GAC5B,IAAIC,EAAOF,EAAKhzB,SACZmzB,EAAOF,EAAKjzB,SAhECN,EAiEZiiB,kBAAkBqR,EAAKjpB,GAAIopB,GAjEfzzB,EAkEZiiB,kBAAkBsR,EAAKlpB,GAAImpB,IAlEfxzB,EAoEZ0zB,kBAAoB,SAACC,EAAQC,GAAT,OApER5zB,EAqEZmxB,cArEYnxB,EAqEOsB,YAAYqyB,GArEnB3zB,EAqEiCsB,YAAYsyB,M,sGCvE7C9gB,E,WACnB,aAAgB,GAAD,oBAAKlF,gBAAgBkF,EAAkB,MAAM7E,MAAM,0C,mEACzC4lB,EAAcC,GAAY,IAAD,EAC1CnyB,EAAoBmyB,EAApBnyB,OAAQC,EAAYkyB,EAAZlyB,QACd,GAAIiyB,EACF,OAAO,UAAAA,EAAatQ,MAAK,SAAA7hB,GAAI,OAAIA,EAAKC,SAAWA,KAAYC,GAAYA,GAAWF,EAAKE,UAAYA,aAA9F,eAA0G1L,iBAAkB,I,qCAEjH29B,EAAcC,EAAW59B,GAAiB,IACxDyL,EAAoBmyB,EAApBnyB,OAAQC,EAAYkyB,EAAZlyB,QACTiyB,IAAcA,EAAe,IAClC,IAAIhX,EAAQgX,EAAaE,WAAU,SAAAryB,GAAI,OAAIA,EAAKC,SAAWA,KAAYC,GAAYA,GAAWF,EAAKE,UAAYA,MAC/G,IAAK1L,GAAkB2mB,GAAS,EAE9BgX,EAAaG,OAAOnX,EAAO,OACtB,CACL,IAAIoX,EAAU,CAAEtyB,SAAQzL,kBACpB0L,IAASqyB,EAAQryB,QAAUA,GAC3Bib,GAAS,EACXgX,EAAahX,GAASoX,EAEtBJ,EAAa5gC,KAAKghC,GAEtB,OAAOJ,I,yCAEiB59B,EAAai+B,EAAWh+B,GAAmC,IAAnBisB,EAAkB,uDAAT,CAAC,GAAI,GAC9E,GAAIryB,MAAMuG,QAAQJ,GAAc,CAE9B,IAF8B,EAE1BK,EAAyBJ,EACzBK,EAAsB,KAHI,cAIDN,GAJC,IAI9B,2BAA0C,CAAC,IAAhCO,EAA+B,QACxC,KAAIF,EAAyBE,EAAeC,UACvC,CACHF,EAAsBC,EACtB,MAHoDF,GAA0BE,EAAeC,UALnE,8BAW9B,IAAKF,EAAqB,OAAO4rB,EACjC,IAAI4B,EAAS9O,YAAM3e,EAAwB,EAAGC,EAAoBE,UAClE,MAAO,CAACF,EAAoB29B,GAAYnQ,GAGxC,IAAIA,EAAS9O,YAAM/e,EAAgB,EAAGD,EAAYQ,UAClD,MAAO,CAACR,EAAYi+B,GAAYnQ,O,sCCnCvBjxB,IATO,CACpB8L,MAAO,CAAEhK,KAAM,SACfoK,IAAK,CAAEpK,KAAM,OACbmK,QAAS,CAAEnK,KAAM,WACjBqK,MAAO,CAAErK,KAAM,SACfsK,KAAM,CAAEtK,KAAM,QACdiK,KAAM,CAAEjK,KAAM,U,wRCHVsQ,EAAW,CAEf9B,QAAS,CAAExO,KAAM,KAAMizB,OAAQ,WAC/Bl0B,GAAI,CAAEiB,KAAM,KAAMizB,OAAQ,WAC1Bh0B,IAAK,CAAEe,KAAM,KAAMkc,KAAM,IAAK+W,OAAQ,cACtCvkB,SAAU,CAAE1O,KAAM,KAAMizB,OAAQ,YAEhCtkB,SAAU,CAAE3O,KAAM,MAAOizB,OAAQ,YACjCj0B,IAAK,CAAEgB,KAAM,MAAOizB,OAAQ,YAC5B/zB,KAAM,CAAEc,KAAM,MAAOkc,KAAM,IAAK+W,OAAQ,eACxCpkB,UAAW,CAAE7O,KAAM,MAAOizB,OAAQ,aAClCsM,WAAY,CAAEv/B,KAAM,aAAcizB,OAAQ,cAE1CnkB,SAAU,CAAE9O,KAAM,MAAOizB,OAAQ,YACjCpzB,IAAK,CAAEG,KAAM,MAAOizB,OAAQ,YAC5B9zB,KAAM,CAAEa,KAAM,MAAOkc,KAAM,IAAK+W,OAAQ,eACxCjkB,UAAW,CAAEhP,KAAM,MAAOizB,OAAQ,aAElC7zB,cAAe,CAAEY,KAAM,qBAAsBkc,KAAM,KACnDsjB,QAAS,CAAEx/B,KAAM,eAAgBkc,KAAM,KACvC7c,cAAe,CAAEW,KAAM,YAAakc,KAAM,KAC1CujB,QAAS,CAAEz/B,KAAM,UAAWkc,KAAM,KAClC5c,QAAS,CAAEU,KAAM,qBACjBT,UAAW,CAAES,KAAM,kBAAmBkc,KAAM,KAC5C1c,UAAW,CAAEQ,KAAM,YAAakc,KAAM,KACtCzc,SAAU,CAAEO,KAAM,WAAYkc,KAAM,KACpCxc,UAAW,CAAEM,KAAM,gBAAiBkc,KAAM,KAC1C7N,KAAM,CAAErO,KAAM,WACd0/B,SAAU,CAAE1/B,KAAM,yBAA0Bkc,KAAM,KAClDyjB,WAAY,CAAE3/B,KAAM,kBAAmBkc,KAAM,KAC7C0jB,OAAQ,CAAE5/B,KAAM,YAAakc,KAAM,KAGnC0X,aAAc,CAAE5zB,KAAM,qBACtBi0B,aAAc,CAAEj0B,KAAM,sBACtBs0B,WAAY,CAAEt0B,KAAM,uBACpB6zB,kBAAmB,CAAE7zB,KAAM,8BAC3Bk0B,kBAAmB,CAAEl0B,KAAM,+BAC3Bu0B,gBAAiB,CAAEv0B,KAAM,gCACzB8zB,iBAAkB,CAAE9zB,KAAM,0BAC1Bm0B,iBAAkB,CAAEn0B,KAAM,2BAC1Bw0B,eAAgB,CAAEx0B,KAAM,4BACxB6/B,mBAAoB,CAAE7/B,KAAM,0BAA2Bkc,KAAM,KAC7D4jB,mBAAoB,CAAE9/B,KAAM,2BAA4Bkc,KAAM,KAC9D6jB,mBAAoB,CAAE//B,KAAM,0BAA2Bkc,KAAM,KAC7D8jB,mBAAoB,CAAEhgC,KAAM,2BAA4Bkc,KAAM,KAC9D6X,oBAAqB,CAAE/zB,KAAM,gCAAiCkc,KAAM,SACpEkY,oBAAqB,CAAEp0B,KAAM,iCAAkCkc,KAAM,SACrE8X,qBAAsB,CAAEh0B,KAAM,qCAAsCkc,KAAM,SAC1EmY,qBAAsB,CAAEr0B,KAAM,sCAAuCkc,KAAM,SAC3EuY,mBAAoB,CAAEz0B,KAAM,uCAAwCkc,KAAM,SAG1Ewb,UAAW,CAAE13B,KAAM,kBACnB83B,UAAW,CAAE93B,KAAM,kBACnB23B,eAAgB,CAAE33B,KAAM,2BACxB+3B,eAAgB,CAAE/3B,KAAM,2BACxB43B,cAAe,CAAE53B,KAAM,uBACvBg4B,cAAe,CAAEh4B,KAAM,uBACvBigC,gBAAiB,CAAEjgC,KAAM,uBAAwBkc,KAAM,KACvDgkB,gBAAiB,CAAElgC,KAAM,uBAAwBkc,KAAM,KACvDikB,gBAAiB,CAAEngC,KAAM,uBAAwBkc,KAAM,KACvDkkB,gBAAiB,CAAEpgC,KAAM,uBAAwBkc,KAAM,KACvD8Y,iBAAkB,CAAEh1B,KAAM,6BAA8Bkc,KAAM,SAC9D+Y,iBAAkB,CAAEj1B,KAAM,6BAA8Bkc,KAAM,SAC9D2b,kBAAmB,CAAE73B,KAAM,kCAAmCkc,KAAM,SACpE+b,kBAAmB,CAAEj4B,KAAM,kCAAmCkc,KAAM,SACpEmkB,aAAc,CAAErgC,KAAM,qBAAsBkc,KAAM,KAClDokB,aAAc,CAAEtgC,KAAM,qBAAsBkc,KAAM,KAElDwY,QAAS,CAAE10B,KAAM,uBACjB20B,aAAc,CAAE30B,KAAM,gCACtB40B,YAAa,CAAE50B,KAAM,4BACrB60B,gBAAiB,CAAE70B,KAAM,uCAAwCkc,KAAM,SAEvEob,QAAS,CAAEt3B,KAAM,wBACjBu3B,aAAc,CAAEv3B,KAAM,iCACtBw3B,YAAa,CAAEx3B,KAAM,6BACrBy3B,gBAAiB,CAAEz3B,KAAM,wCAAyCkc,KAAM,SAExE4Y,eAAgB,CAAE90B,KAAM,sBAAuBkc,KAAM,SACrD6Y,WAAY,CAAE/0B,KAAM,kBAAmBkc,KAAM,SAC7CqkB,IAAK,CAAEvgC,KAAM,UAAWkc,KAAM,KAC9BskB,SAAU,CAAExgC,KAAM,eAAgBkc,KAAM,KACxCukB,QAAS,CAAEzgC,KAAM,UAAWkc,KAAM,KAClCwkB,aAAc,CAAE1gC,KAAM,eAAgBkc,KAAM,KAC5CykB,YAAa,CAAE3gC,KAAM,2BAA4Bkc,KAAM,KACvD0kB,oBAAqB,CAAE5gC,KAAM,mCAAoCkc,KAAM,KACvE2kB,oBAAqB,CAAE7gC,KAAM,0CAA2Ckc,KAAM,KAG9E4kB,eAAgB,CAAE9gC,KAAM,iBAAkBkc,KAAM,IAAKja,QAAS,QAC9D8+B,mBAAoB,CAAE/gC,KAAM,qBAAsBkc,KAAM,IAAKja,QAAS,YAEtEy0B,gBAAiB,CAAE12B,KAAM,gCAAiCkc,KAAM,SAChEya,gBAAiB,CAAE32B,KAAM,gCAAiCkc,KAAM,SAChE0a,gBAAiB,CAAE52B,KAAM,gCAAiCkc,KAAM,SAChEua,0BAA2B,CAAEz2B,KAAM,0CAA2Ckc,KAAM,SAGpFuU,aAAc,CAAEzwB,KAAM,wBAAyB3C,QAAS,SACxD2jC,WAAY,CAAEhhC,KAAM,kBAAmB3C,QAAS,GAEhD4jC,YAAa,CAAEjhC,KAAM,eACrBk1B,kBAAmB,CAAEl1B,KAAM,yBAA0Bkc,KAAM,SAE3DoZ,cAAe,CAAEt1B,KAAM,qBAAsBkc,KAAM,IAAK7e,QAAS,IACjE83B,oBAAqB,CAAEn1B,KAAM,gCAAiCkc,KAAM,SACpEkZ,mBAAoB,CAAEp1B,KAAM,0BAA2B3C,SAAS,GAChE6jC,cAAe,CAAElhC,KAAM,sBAAuBkc,KAAM,IAAK7e,QAAS,IAClE66B,oBAAqB,CAAEl4B,KAAM,iCAAkCkc,KAAM,SACrEilB,mBAAoB,CAAEnhC,KAAM,2BAA4B3C,SAAS,IAEnE,SAAS+jC,EAAc/L,GAErB,OADAA,GAAY,KACF,EAAU,EAAIA,EAAM,EACrBA,GAAO,IAAa,GAAW,EAANA,EAAU,GACrC,EAAIA,EAEb,IAAMjO,EAAwB,CAC5Bpd,MAAO,CAAC,aACRI,IAAK,CAAC,iBAAkB,eACxBD,QAAS,CAAC,iBAAkB,qBAAsB,oBAClDE,MAAO,CAAC,qBAAsB,eAC9BC,KAAM,CAAC,kBACPL,KAAM,CAAC,cAAe,qBAGlBurB,EAAiB,CACrBC,WAAY,CAAC,eAAgB,aAAc,aAAe,YAAc,WAAe,WACvFK,aAAc,CAAC,cAAe,YAAc,aAAe,WAAc,aAAe,UACxFF,eAAgB,CAAC,eAAgB,YAAc,aAAe,YAAc,aAAe,WAC3FM,UAAW,CAAC,eAAgB,aAAc,aAAe,YAAc,aAAe,WACtFF,MAAO,CAAC,eAAgB,aAAc,aAAe,YAAc,aAAe,UAClFI,WAAY,CAAC,UAAW,QAAS,UAAY,UAAY,aAAe,cAM1E,IAAMjmB,EAAW,CAEfzB,SAAU,SAACyqB,GAAD,OAAOA,EAAE3qB,SAAW,EAAI2qB,EAAEl6B,IAAM,KAAOk6B,EAAEp6B,IAEnD8P,UAAW,SAACsqB,GAAD,OAAQA,EAAExqB,SAAWwqB,EAAEoG,aAAe,EAAIpG,EAAEj6B,KAAO,KAAOi6B,EAAEn6B,KAEvEgQ,UAAW,SAACmqB,GAAD,OAAOA,EAAErqB,UAAY,EAAIqqB,EAAEh6B,KAAO,KAAOg6B,EAAEt5B,KAGtD+zB,aAAc,SAACuF,GAAD,OAAOA,EAAEtqB,UAAYsqB,EAAEnF,qBAAuBmF,EAAEjE,kBAAoBiE,EAAEhE,qBACpFtB,kBAAmB,SAACsF,GAAD,OAAOA,EAAEvF,aAAeuF,EAAErE,gBAC7ChB,iBAAkB,SAACqF,GAAD,OAAOA,EAAEvF,aAAeuF,EAAEpF,qBAC5CA,oBAAqB,SAACoF,GAAD,OAAQ,EAAK9Y,YAAM8Y,EAAE35B,UAAY25B,EAAE4G,mBAAoB,EAAG,KAAO,IAAO5G,EAAE15B,SAAW,KAC1Gu0B,qBAAsB,SAACmF,GAAD,OAAQ,GAAKA,EAAE/5B,cAAgB+5B,EAAE0G,mBAAqB1G,EAAEoH,KAAO,KAGrFtM,aAAc,SAACkF,GAAD,OAAOA,EAAEtqB,UAAYsqB,EAAE9E,qBAAuB8E,EAAEjE,kBAAoBiE,EAAEhE,qBACpFjB,kBAAmB,SAACiF,GAAD,OAAOA,EAAElF,aAAekF,EAAErE,gBAC7CX,iBAAkB,SAACgF,GAAD,OAAOA,EAAElF,aAAekF,EAAE/E,qBAC5CA,oBAAqB,SAAC+E,GAAD,OAAQ,EAAK9Y,YAAM8Y,EAAE35B,UAAY25B,EAAE6G,mBAAoB,EAAG,KAAO,IAAO7G,EAAE15B,SAAW,KAC1G40B,qBAAsB,SAAC8E,GAAD,OAAQ,GAAKA,EAAE/5B,cAAgB+5B,EAAE2G,mBAAqB3G,EAAEoH,KAAO,KAGrFjM,WAAY,SAAC6E,GAAD,OAAOA,EAAEzE,SACrBH,gBAAiB,SAAC4E,GAAD,OAAOA,EAAExE,cAC1BH,eAAgB,SAAC2E,GAAD,OAAOA,EAAEvE,aACzBH,mBAAoB,SAAC0E,GAAD,OAAOA,EAAEtE,iBAE7BH,QAAS,SAACyE,GAAD,OAAOA,EAAEtqB,UAAYsqB,EAAEtE,gBAAkBsE,EAAEjE,kBAAoBiE,EAAEhE,qBAC1ER,aAAc,SAACwE,GAAD,OAAOA,EAAEzE,QAAUyE,EAAErE,gBACnCF,YAAa,SAACuE,GAAD,OAAOA,EAAEzE,QAAUyE,EAAEpE,YAClCF,gBAAiB,SAACsE,GAAD,OAAQ,GAAKA,EAAE/5B,cAAgB+5B,EAAEoH,KAAO,KAEzDzL,eAAgB,SAACqE,GAAD,OAAQ,EAAIA,EAAE15B,SAAW,KACzCs1B,WAAY,SAACoE,GAAD,OAAQ,EAAK9Y,YAAM8Y,EAAE35B,UAAW,EAAG,KAAO,KAAQ25B,EAAE15B,SAAW,MAE3Eu1B,iBAAkB,SAACmE,GAAD,OAAQ,EAAK9Y,YAAM8Y,EAAE35B,UAAY25B,EAAEgH,gBAAiB,EAAG,KAAO,IAAOhH,EAAE15B,SAAW,KACpGw1B,iBAAkB,SAACkE,GAAD,OAAQ,EAAK9Y,YAAM8Y,EAAE35B,UAAY25B,EAAEiH,gBAAiB,EAAG,KAAO,IAAOjH,EAAE15B,SAAW,KAEpGy1B,kBAAmB,SAACiE,GAAD,OAAQ,IAAMA,EAAE6H,aAAe,IAAM7H,EAAE8H,YAAc,IAAM9H,EAAE6H,aAChF7L,oBAAqB,SAACgE,GAAD,OAAOA,EAAE/D,mBAAqB,EAAIgM,EAAcjI,EAAE7D,gBAGvE3O,eAAgB,SAACwS,GAAD,OAAQ,EAAIA,EAAEkI,qBAAuB,KAAOlI,EAAExC,gBAAkBwC,EAAE5D,iBAAmB4D,EAAEmI,0BACvG/L,iBAAkB,SAAC4D,GAAD,OAAO3D,EAAeC,WAAW2F,QAAO,SAACC,EAAM/c,EAAKhjB,GAAZ,OAAkB+/B,EAAO/c,EAAMlN,KAAKmwB,IAAIpI,EAAE6H,WAAY1lC,KAAI,IACpHorB,mBAAoB,SAACyS,GAAD,OAAQ,EAAIA,EAAEqI,yBAA2B,KAAOrI,EAAExC,gBAAkBwC,EAAExD,qBAAuBwD,EAAEsI,6BACnH9L,qBAAsB,SAACwD,GAAD,OAAO3D,EAAeI,eAAewF,QAAO,SAACC,EAAM/c,EAAKhjB,GAAZ,OAAkB+/B,EAAO/c,EAAMlN,KAAKmwB,IAAIpI,EAAE6H,WAAY1lC,KAAI,IAC5HmrB,iBAAkB,SAAC0S,GAAD,OAAQ,EAAIA,EAAEuI,uBAAyB,KAAOvI,EAAExC,gBAAkBwC,EAAEtD,mBAAqBsD,EAAEwI,0BAC7G9L,mBAAoB,SAACsD,GAAD,OAAO3D,EAAeM,aAAasF,QAAO,SAACC,EAAM/c,EAAKhjB,GAAZ,OAAkB+/B,EAAO/c,EAAMlN,KAAKmwB,IAAIpI,EAAE6H,WAAY1lC,KAAI,IAGxHsrB,UAAW,SAACuS,GAAD,OAAQ,EAAIA,EAAEyI,gBAAkB,KAAOzI,EAAExC,gBAAkBwC,EAAEpD,YAAcoD,EAAE0I,2BACxF9L,YAAa,SAACoD,GAAD,OAAO3D,EAAeQ,MAAMoF,QAAO,SAACC,EAAM/c,EAAKhjB,GAAZ,OAAkB+/B,EAAO/c,EAAMlN,KAAKmwB,IAAIpI,EAAE6H,WAAY1lC,KAAI,IAC1GurB,YAAa,SAACsS,GAAD,OAAQ,EAAIA,EAAE2I,kBAAoB,KAAO3I,EAAExC,gBAAkBwC,EAAElD,cAAgBkD,EAAEhE,qBAC9Fc,cAAe,SAACkD,GAAD,OAAO3D,EAAeU,UAAUkF,QAAO,SAACC,EAAM/c,EAAKhjB,GAAZ,OAAkB+/B,EAAO/c,EAAMlN,KAAKmwB,IAAIpI,EAAE6H,WAAY1lC,KAAI,IAChH0rB,eAAgB,SAACmS,GAAD,OAAQ,EAAIA,EAAE4I,qBAAuB,KAAO5I,EAAEvC,gBAAkBuC,EAAEhD,kBAClFA,iBAAkB,SAACgD,GAAD,OAAO3D,EAAeY,WAAWgF,QAAO,SAACC,EAAM/c,EAAKhjB,GAAZ,OAAkB+/B,EAAO/c,EAAMlN,KAAKmwB,IAAIpI,EAAE6H,WAAY1lC,KAAI,IAEpH+6B,oBAAqB,SAAC8C,GAAD,OAAQ,EAAIA,EAAE4H,mBAAqB,KAAO5H,EAAEzC,gBAAkB,IAAMyC,EAAE1C,2BAC3FH,qBAAsB,SAAC6C,GAAD,OAAQ,EAAIA,EAAE4H,mBAAqB,KAAO5H,EAAEzC,gBAAkB,EAAIyC,EAAE1C,2BAE1FF,gBAAiB,SAAC4C,GAAD,OAAQ,EAAIA,EAAE2H,eAAiB,KAAO3H,EAAEzC,gBAAkB,IAAMyC,EAAE1C,2BACnFD,gBAAiB,SAAC2C,GAAD,OAAQ,EAAIA,EAAE2H,eAAiB,KAAO3H,EAAEzC,gBAAkB,EAAIyC,EAAE1C,2BACjFA,0BAA2B,SAAC0C,GAAD,OAlEpB,EAAI,YADM75B,EAmE2B65B,EAAE75B,SAlEX8R,KAAK4wB,KAAK,OAAW1iC,GAAW,IADrE,IAAmBA,GAqEjBo3B,gBAAiB,SAACyC,GAAD,OAAQ,EAAK,GAAK,EAAIA,EAAE75B,SAAW,KAAO65B,EAAE75B,UAC7Dq3B,gBAAiB,SAACwC,GAAD,OAAQ,EAAK,GAAK,EAAIA,EAAE75B,SAAW,KAAO65B,EAAE75B,UAC7Ds3B,gBAAiB,SAACuC,GAAD,OAAQ,EAAK,GAAK,EAAIA,EAAE75B,SAAW,KAAO65B,EAAE75B,WAIzD2iC,EAAc,CAClBrO,aAAc,SAACuF,EAAGrV,GAAJ,OAAYqV,EAAEtqB,UAAYsqB,EAAE,GAAD,OAAIrV,EAAJ,0BAAkCqV,EAAEjE,kBAAoBiE,EAAE,GAAD,OAAIrV,EAAJ,0BAClG+P,kBAAmB,SAACsF,EAAGrV,GAAJ,OAAYqV,EAAE,GAAD,OAAIrV,EAAJ,kBAA0BqV,EAAErE,gBAC5DhB,iBAAkB,SAACqF,EAAGrV,GAAJ,OAAYqV,EAAE,GAAD,OAAIrV,EAAJ,kBAA0BqV,EAAEpF,qBAC3DC,qBAAsB,SAACmF,EAAGrV,GAAJ,OAAa,GAAKqV,EAAE,GAAD,OAAIrV,EAAJ,mBAA2BqV,EAAE0G,mBAAqB1G,EAAEoH,KAAO,KAEpGtM,aAAc,SAACkF,EAAGrV,GAAJ,OAAYqV,EAAEtqB,UAAYsqB,EAAE,GAAD,OAAIrV,EAAJ,0BAAkCqV,EAAEjE,kBAAoBiE,EAAE,GAAD,OAAIrV,EAAJ,0BAClGoQ,kBAAmB,SAACiF,EAAGrV,GAAJ,OAAYqV,EAAE,GAAD,OAAIrV,EAAJ,kBAA0BqV,EAAErE,gBAC5DX,iBAAkB,SAACgF,EAAGrV,GAAJ,OAAYqV,EAAE,GAAD,OAAIrV,EAAJ,kBAA0BqV,EAAE/E,qBAC3DC,qBAAsB,SAAC8E,EAAGrV,GAAJ,OAAa,GAAKqV,EAAE,GAAD,OAAIrV,EAAJ,mBAA2BqV,EAAE2G,mBAAqB3G,EAAEoH,KAAO,KAEpGjM,WAAY,SAAC6E,EAAGrV,GAAJ,OAAYqV,EAAE,GAAD,OAAIrV,EAAJ,cACzByQ,gBAAiB,SAAC4E,EAAGrV,GAAJ,OAAYqV,EAAE,GAAD,OAAIrV,EAAJ,mBAC9B0Q,eAAgB,SAAC2E,EAAGrV,GAAJ,OAAYqV,EAAE,GAAD,OAAIrV,EAAJ,kBAC7B2Q,mBAAoB,SAAC0E,EAAGrV,GAAJ,OAAYqV,EAAE,GAAD,OAAIrV,EAAJ,sBAEjCwT,QAAS,SAAC6B,EAAGrV,GAAJ,OAAYqV,EAAEtqB,UAAYsqB,EAAE,GAAD,OAAIrV,EAAJ,qBAA6BqV,EAAEjE,kBAAoBiE,EAAE,GAAD,OAAIrV,EAAJ,0BACxFyT,aAAc,SAAC4B,EAAGrV,GAAJ,OAAYqV,EAAE,GAAD,OAAIrV,EAAJ,aAAqBqV,EAAErE,gBAClD0C,YAAa,SAAC2B,EAAGrV,GAAJ,OAAYqV,EAAE,GAAD,OAAIrV,EAAJ,aAAqBqV,EAAEpE,YACjD0C,gBAAiB,SAAC0B,EAAGrV,GAAJ,OAAa,GAAKqV,EAAE,GAAD,OAAIrV,EAAJ,mBAA2BqV,EAAEoH,KAAO,KAExE7I,UAAW,SAACyB,EAAGrV,GAAJ,OAAYqV,EAAEtqB,UAAYsqB,EAAE,GAAD,OAAIrV,EAAJ,uBAA+BqV,EAAEjE,kBAAoBiE,EAAE,GAAD,OAAIrV,EAAJ,0BAC5F6T,eAAgB,SAACwB,EAAGrV,GAAJ,OAAYqV,EAAE,GAAD,OAAIrV,EAAJ,eAAuBqV,EAAErE,gBACtD8C,cAAe,SAACuB,EAAGrV,GAAJ,OAAYqV,EAAE,GAAD,OAAIrV,EAAJ,eAAuBqV,EAAEnE,kBACrD6C,kBAAmB,SAACsB,EAAGrV,GAAJ,OAAa,GAAKqV,EAAE,GAAD,OAAIrV,EAAJ,mBAA2BqV,EAAE8G,gBAAkB9G,EAAEoH,KAAO,KAE9FzI,UAAW,SAACqB,EAAGrV,GAAJ,OAAYqV,EAAEtqB,UAAYsqB,EAAE,GAAD,OAAIrV,EAAJ,uBAA+BqV,EAAEjE,kBAAoBiE,EAAE,GAAD,OAAIrV,EAAJ,0BAC5FiU,eAAgB,SAACoB,EAAGrV,GAAJ,OAAYqV,EAAE,GAAD,OAAIrV,EAAJ,eAAuBqV,EAAErE,gBACtDkD,cAAe,SAACmB,EAAGrV,GAAJ,OAAYqV,EAAE,GAAD,OAAIrV,EAAJ,eAAuBqV,EAAElE,kBACrDgD,kBAAmB,SAACkB,EAAGrV,GAAJ,OAAa,GAAKqV,EAAE,GAAD,OAAIrV,EAAJ,mBAA2BqV,EAAE+G,gBAAkB/G,EAAEoH,KAAO,KAE9FrI,oBAAqB,SAACiB,EAAGrV,GAAJ,OAAYqV,EAAE,GAAD,OAAIrV,EAAJ,wBAAgC,EAAIsd,EAAcjI,EAAE,GAAD,OAAIrV,EAAJ,sBAGvF,CAAC,CAAC,aAAc,cAAe,CAAC,iBAAkB,mBAAoB,CAAC,eAAgB,gBAAiB,CAAC,UAAW,WAAY,CAAC,QAAS,SAAU,CAAC,UAAW,aAAc,CAAC,aAAc,eAAe3lB,SAAQ,mCAAE64B,EAAF,KAAekL,EAAf,WAClN,CAAC,CAAC,MAAO,OAAQ,CAAC,YAAa,YAAa,CAAEhmB,KAAM,MAAQ,CAAC,QAAS,aAAc,CAAEA,KAAM,WAAY/d,SAAQ,YAAoC,IAAD,mBAAjCgkC,EAAiC,KAAzBC,EAAyB,YAAhBtnC,OAAgB,MAAR,GAAQ,EACjJwV,EAAS,GAAD,OAAI0mB,EAAJ,YAAmBmL,IAA3B,aACEniC,KAAK,GAAD,OAAKkiC,EAAL,YAAqBE,GACzBngC,QAAS+0B,GACNl8B,SAKT,CACE,gBAAiB,UAAW,gBAAiB,qBAAsB,UAAW,eAAgB,cAAe,mBAD/G,mBAEKmD,OAAO9C,KAAKmV,GAAUzD,QAAO,SAAAzO,GAAG,MAAI,CAAC,WAAY,WAAY,UAAUu9B,MAAK,SAAA0G,GAAG,OAAIjkC,EAAI4R,SAASqyB,WACnGlkC,SAAQ,SAAAC,GACRkS,EAASlS,GAAK6D,QAAU,cAI1B,CAAC,CAAC,gBAAiB,iBAAkB,WAAY,QAAS,CAAC,iBAAkB,kBAAmB,WAAY,SAAU,CAAC,YAAa,aAAc,OAAQ,QAAS,CAAC,YAAa,aAAc,OAAQ,SAAS9D,SAAQ,YAAoD,IAAD,mBAAjD64B,EAAiD,KAApCkL,EAAoC,KAAtBjgC,EAAsB,KAAbg1B,EAAa,KACzQ,CAAC,CAAC,QAAS,aAAc,CAAE/a,KAAM,WAAY/d,SAAQ,YAAoC,IAAD,mBAAjCgkC,EAAiC,KAAzBC,EAAyB,YAAhBtnC,OAAgB,MAAR,GAAQ,EACtFwV,EAAS,GAAD,OAAI0mB,EAAJ,YAAmBmL,IAA3B,aACEniC,KAAK,GAAD,OAAKkiC,EAAL,YAAqBE,GACzBngC,WACGnH,MAGP,CAAC,CAAC,WAAY,gBAAiB,CAAC,WAAY,kBAAmB,CAAC,SAAU,mBAAoB,CAAC,QAAS,cAAe,CAAC,QAAS,cAAe,CAAC,MAAO,cAAcqD,SAAQ,mCAAE+4B,EAAF,KAAWoL,EAAX,WAC5K,CAAC,CAAC,MAAO,OAAQ,CAAC,UAAW,YAAa,CAAC,WAAY,iBAAiBnkC,SAAQ,YAA6B,IAAD,mBAA1B0P,EAA0B,KAAjB00B,EAAiB,KACtGpL,EAAc,UAAMH,EAAN,YAAqBE,EAArB,YAAgCrpB,GAClDyC,EAAS6mB,GAAkB,CAAEn3B,KAAK,GAAD,OAAKkiC,EAAL,YAAqBI,EAArB,YAAoCC,GAAetgC,WACpF,IAAIm1B,EAAO,UAAMH,EAAN,YAAiBC,EAAjB,YAA4BrpB,GACvCsC,EAASgnB,GAAkB,SAACgC,GAAD,OAAOA,EAAE,GAAD,OAAInC,EAAJ,WAA2BmC,EAAE/B,aAKtE,CAAC,gBAAiB,UAAW,gBAAiB,sBAA9C,mBAAuEn5B,OAAO9C,KAAK8mC,KAAc9jC,SAAQ,SAAAC,GACvG,IAAI2zB,EAAMzhB,EAASlS,GACnBH,OAAO9C,KAAK+C,KAAeC,SAAQ,SAAAonB,GACjC,IAAIid,EAAO,UAAMjd,EAAN,YAAgBnnB,GAC3BkS,EAASkyB,GAAW3X,YAAUkH,GAE5BzhB,EAASkyB,GAASxiC,KADR,kBAAR5B,EACF,gBAAkCF,IAAcqnB,GAAQvlB,KAAxD,QACe,wBAAR5B,EACP,gBAAkCF,IAAcqnB,GAAQvlB,KAAxD,mBACe,uBAAR5B,EACP,gBAAkCF,IAAcqnB,GAAQvlB,KAAxD,aAEA,UAA4B9B,IAAcqnB,GAAQvlB,KAAlD,YAA0D+xB,EAAI/xB,MAChEsQ,EAASkyB,GAASvgC,QAAUsjB,QAMhCtnB,OAAOsO,QAAQ01B,GAAa9jC,SAAQ,mCAAEC,EAAF,KAAO+5B,EAAP,YAClCl6B,OAAO9C,KAAK+C,KAAeC,SAAQ,SAAAonB,GAAM,OACvCtnB,OAAOyS,eAAeP,EAAtB,UAAmCoV,EAAnC,YAA6CnnB,GAAO,CAClDwS,cAAc,EACdwnB,YAAY,EACZC,UAAU,EACV38B,MAAO,SAACq2B,GAAD,OAAUoG,EAAMpG,EAAKxM,YAGlC,IAAMzV,EAAmB,CACvBwoB,iBAAkB,CAChBl6B,IAAK,YACLqkC,QAAS,SAACnP,GAAD,OAAa,SAAC6F,GAAD,OAAQA,EAAExqB,SAAWwqB,EAAEoG,aAAe,EAAIpG,EAAEj6B,KAAO,KAAOi6B,EAAEn6B,IAAMm6B,EAAEnqB,WAAaskB,EAAQ53B,MAAQ,OACvHqU,WAAY,CAAC,WAAY,aAAc,OAAQ,MAAO,YAAa,WAAY,OAAQ,SAK3F,SAASc,EAAmBkhB,GAAoB,IAAfuB,EAAc,uDAAJ,GAAI,EACmCA,EAA1EpjB,mBADuC,MACzBjS,OAAO9C,KAAKgV,GADa,IACmCmjB,EAArC7W,gBADE,MACSxe,OAAO9C,KAAKmV,GADrB,IAEbyhB,EAA1BriB,wBAFuC,MAEpB,GAFoB,EAG7CA,EAAiBvR,SAAQ,SAAA0R,GAAoB,IAChC6yB,EAAgC7yB,EAArCzR,IAAyBk1B,EAAYzjB,EAAZyjB,QADW,EAEnBxjB,EAAiB4yB,IAAuB,GAAzDtkC,EAFoC,EAEpCA,IAAKqkC,EAF+B,EAE/BA,QACNvyB,EAAYF,SAAS5R,KAC1BqkC,EAAUA,EAAQnP,GAClBr1B,OAAOyS,eAAeqhB,EAAK3zB,EAAK,CAC9BuS,IAAK2iB,EAAQpjB,YAAc,kBAAMuyB,EAAQ1Q,IAAO,WAC9C,IAAIzT,EAAMmkB,EAAQ1Q,GAElB,OADA9zB,OAAOyS,eAAesI,KAAM5a,EAAK,CAAE1C,MAAO4iB,IACnCA,GAET1N,cAAc,QAIlBV,EAAY/R,SAAQ,SAAAC,IACjB2zB,EAAIpB,eAAevyB,IAAQH,OAAOyS,eAAeqhB,EAAK3zB,EAAK,CAC1DuS,IAAK2iB,EAAQpjB,YAAc,kBAAMC,EAAS/R,GAAK2zB,IAAO,WACpD,IAAIzT,EAAMnO,EAAS/R,GAAK2zB,GAExB,OADA9zB,OAAOyS,eAAesI,KAAM5a,EAAK,CAAE1C,MAAO4iB,IACnCA,GAET1N,cAAc,OAIlB6L,EAASte,SAAQ,SAAAC,GAAG,OAAK2zB,EAAIpB,eAAevyB,KAAS2zB,EAAI3zB,GAAOkS,EAASlS,GAAKf,SAAW,Q,uGC5VtEgkB,EAEnB,aAAgB,GAAD,oBAAKrI,gBAAgBqI,EAAQ,MAAMhI,MAAM,2CAFrCgI,EAIZsJ,oBAAsB,kBAAMztB,KAJhBmkB,EAKZ8B,aAAe,SAACjW,GAAD,IAAWqgB,EAAX,uDAAoB,GAApB,OAA4BhwB,IAAc2P,IAAaqgB,GAL1DlM,EAMZshB,cAAgB,SAACz1B,GAAD,OAAc5P,IAAgBqd,QAAQzN,IAN1CmU,EAQZoB,cAAgB,SAACmgB,GAAD,MAAYrV,EAAZ,uDAAqB,GAArB,OAA6B,UAAAtwB,IAAW2lC,UAAX,eAAuB5iC,OAAQutB,GARhElM,EASZiB,gBAAkB,SAACsgB,GAAD,MAAYrV,EAAZ,uDAAqB,EAArB,OAA4B,UAAAtwB,IAAW2lC,UAAX,eAAuB5f,SAAUuK,GATnElM,EAUZS,qBAAuB,SAAC8gB,GAAD,MAAYrV,EAAZ,uDAAqB,GAArB,OAA6B,UAAAtwB,IAAW2lC,UAAX,eAAuBC,cAAetV,GAV9ElM,EAWZgC,4BAA8B,SAACuf,EAAW3gB,EAAayb,EAAgBtxB,GAAzC,QAAoDmhB,EAApD,uDAA6D,GAA7D,OAAqE,UAAAtwB,IAAW2lC,UAAX,mBAAuBE,0BAAvB,sBAA4C7gB,EAAayb,EAAgBtxB,KAAcmhB,GAX9KlM,EAYZiC,qBAAuB,SAACsf,GAAD,MAAYrV,EAAZ,uDAAqB,GAArB,OAA6B,UAAAtwB,IAAW2lC,UAAX,eAAuBG,cAAexV,GAZ9ElM,EAaZc,qBAAuB,SAACygB,GAAD,MAAYrV,EAAZ,uDAAqB,KAArB,OAA+B,UAAAtwB,IAAW2lC,UAAX,eAAuBvhC,cAAeksB,GAbhFlM,EAgBZI,qBAAuB,SAACmhB,EAAW11B,GAAZ,UAAsBqgB,EAAtB,uDAA+B,EAA/B,OAAsC,UAAAtwB,IAAW2lC,UAAX,mBAAuBI,iBAAvB,mBAAkC7F,YAAlC,eAhBjD9b,EAgB+FshB,cAAcz1B,MAAcqgB,GAhB3HlM,EAiBZO,oBAAsB,SAACghB,EAAW11B,GAAZ,UAAsBqgB,EAAtB,uDAA+B,EAA/B,OAAsC,UAAAtwB,IAAW2lC,UAAX,mBAAuBI,iBAAvB,mBAAkCC,WAAlC,eAjBhD5hB,EAiB6FshB,cAAcz1B,MAAcqgB,GAjBzHlM,EAkBZC,oBAAsB,SAACshB,GAAD,QAAYrV,EAAZ,uDAAqB,GAArB,OAA6B,UAAAtwB,IAAW2lC,UAAX,mBAAuBI,iBAAvB,eAAkC5hB,aAAcmM,GAlBvFlM,EAmBZW,mBAAqB,SAAC4gB,EAAW3gB,GAAZ,yBAA4BhlB,IAAW2lC,UAAvC,iBAA4B,EAAuB3iC,aAAnD,aAA4B,SAA+BgiB,IAnBpEZ,EAqBZ0B,iBAAmB,SAACmgB,GAAD,OAAgBjlC,OAAOqO,YAAYrO,OAAOsO,QAAQtP,KAAY4P,QAAO,oDAAgCq2B,aAAeA,OArB3H7hB,EAsBZ8hB,kBAAoB,SAACD,GAAD,IAAa3V,EAAb,uDAAsB,GAAtB,OAA8B/vB,IAAe0lC,IAAe3V,GAtBpElM,EAwBZqM,iCAAmC,SAACzK,GAAD,IAAYsK,EAAZ,uDAAqB,EAArB,OAC/B,OAATtK,QAAS,IAATA,OAAA,EAAAA,EAAWzB,kBAzBMH,EAyBkBI,qBAAL,OAA0BwB,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAW7kB,IAArC,OAA0C6kB,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAW/V,SAAUqgB,IAzB5ElM,EA0BZ4P,gCAAkC,SAAChO,GAAD,IAAYsK,EAAZ,uDAAqB,EAArB,OAC9B,OAATtK,QAAS,IAATA,OAAA,EAAAA,EAAWtB,iBA3BMN,EA2BiBO,oBAAL,OAAyBqB,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAW7kB,IAApC,OAAyC6kB,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAW/V,SAAUqgB,IA3B1ElM,EA6BZa,yBAA2B,SAAC0gB,EAAW3gB,EAAa3gB,GAAmC,IAAnBisB,EAAkB,uDAAT,KAC9ElsB,EA9BaggB,EA8BMc,qBAAqBygB,GAC5C,IAAKvhC,IAAgBC,EAAgB,OAAOisB,EAF+C,MAGrErP,IAAiBgR,mBAAmB7tB,EAAa,QAASC,GAHW,mBAGtFrB,EAHsF,KAG/EkvB,EAH+E,KAI3F,OAAKA,EACElxB,OAAOqO,YAAYrO,OAAOsO,QAAQtM,EAAMgiB,IAAc7mB,KAAI,yCAAgB,CAAhB,UAA4B+zB,OADzE5B","file":"static/js/8.6f8cab2d.chunk.js","sourcesContent":["import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = (props) => <span className={props.colored ? \"text-5star\" : \"\"}>\r\n  {props.stars ? [...Array(props.stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst FloatFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseFloat(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\n\r\nconst IntFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseInt(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\nexport {\r\n  FloatFormControl,\r\n  IntFormControl\r\n}","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import DullBlade from './Weapon_Dull_Blade.png'\r\nimport SilverSword from './Weapon_Silver_Sword.png'\r\nimport CoolSteel from './Weapon_Cool_Steel.png'\r\nimport DarkIronSword from './Weapon_Dark_Iron_Sword.png'\r\nimport FilletBlade from './Weapon_Fillet_Blade.png'\r\nimport HarbingerOfDawn from './Weapon_Harbinger_of_Dawn.png'\r\nimport SkyriderSword from './Weapon_Skyrider_Sword.png'\r\nimport TravelersHandySword from './Weapon_Traveler\\'s_Handy_Sword.png'\r\nimport BlackcliffLongsword from './Weapon_Blackcliff_Longsword.png'\r\nimport FavoniusSword from './Weapon_Favonius_Sword.png'\r\nimport IronSting from './Weapon_Iron_Sting.png'\r\nimport LionsRoar from './Weapon_Lion\\'s_Roar.png'\r\nimport PrototypeRancour from './Weapon_Prototype_Rancour.png'\r\nimport RoyalLongsword from './Weapon_Royal_Longsword.png'\r\nimport SacrificialSword from './Weapon_Sacrificial_Sword.png'\r\nimport TheAlleyFlash from './Weapon_The_Alley_Flash.png'\r\nimport TheBlackSword from './Weapon_The_Black_Sword.png'\r\nimport TheFlute from './Weapon_The_Flute.png'\r\nimport SwordOfDescension from './Weapon_Sword_of_Descension.png'\r\nimport FesteringDesire from './festering_fang.png'\r\nimport AquilaFavonia from './Weapon_Aquila_Favonia.png'\r\nimport SkywardBlade from './Weapon_Skyward_Blade.png'\r\nimport SummitShaper from './summit_shaper.png'\r\nconst sword = {\r\n  DullBlade,\r\n  SilverSword,\r\n  CoolSteel,\r\n  DarkIronSword,\r\n  FilletBlade,\r\n  HarbingerOfDawn,\r\n  SkyriderSword,\r\n  TravelersHandySword,\r\n  BlackcliffLongsword,\r\n  FavoniusSword,\r\n  IronSting,\r\n  LionsRoar,\r\n  PrototypeRancour,\r\n  RoyalLongsword,\r\n  SacrificialSword,\r\n  TheAlleyFlash,\r\n  TheBlackSword,\r\n  TheFlute,\r\n  SwordOfDescension,\r\n  FesteringDesire,\r\n  AquilaFavonia,\r\n  SkywardBlade,\r\n  SummitShaper,\r\n}\r\nexport default sword","export default __webpack_public_path__ + \"static/media/Weapon_Dull_Blade.f5de06e8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Silver_Sword.e2462179.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Cool_Steel.0c6a9897.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dark_Iron_Sword.8dce5b63.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Fillet_Blade.c8e8ab5f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Harbinger_of_Dawn.26da0d78.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Sword.80e60c22.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Traveler's_Handy_Sword.168a7842.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Longsword.522f4d19.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Sword.cb5df26b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Sting.9f4b4b01.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lion's_Roar.b0e78fa9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Rancour.64965f56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Longsword.5a57f015.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Sword.048703ab.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Alley_Flash.7528f5ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Black_Sword.3987a991.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Flute.82af0cbf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sword_of_Descension.eb67a1df.png\";","export default __webpack_public_path__ + \"static/media/festering_fang.38aa5200.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Aquila_Favonia.7c014114.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Blade.af22a740.png\";","export default __webpack_public_path__ + \"static/media/summit_shaper.5245335d.png\";","import WasterGreatsword from './Weapon_Waster_Greatsword.png'\r\nimport OldMercsPal from './Weapon_Old_Merc\\'s_Pal.png'\r\nimport BloodtaintedGreatsword from './Weapon_Bloodtainted_Greatsword.png'\r\nimport DebateClub from './Weapon_Debate_Club.png'\r\nimport FerrousShadow from './Weapon_Ferrous_Shadow.png'\r\nimport Quartz from './Weapon_Quartz.png'\r\nimport SkyriderGreatsword from './Weapon_Skyrider_Greatsword.png'\r\nimport WhiteIronGreatsword from './Weapon_White_Iron_Greatsword.png'\r\nimport BlackcliffSlasher from './Weapon_Blackcliff_Slasher.png'\r\nimport FavoniusGreatsword from './Weapon_Favonius_Greatsword.png'\r\nimport LithicBlade from './Weapon_Lithic_Blade.png'\r\nimport PrototypeAminus from './Weapon_Prototype_Aminus.png'\r\nimport Rainslasher from './Weapon_Rainslasher.png'\r\nimport RoyalGreatsword from './Weapon_Royal_Greatsword.png'\r\nimport SerpentSpine from './Weapon_Serpent_Spine.png'\r\nimport TheBell from './Weapon_The_Bell.png'\r\nimport Whiteblind from './Weapon_Whiteblind.png'\r\nimport SacrificialGreatsword from './Weapon_Sacrificial_Greatsword.png'\r\nimport SnowTombedStarsilver from './snow_tombed_starsilver.png'\r\nimport SkywardPride from './Weapon_Skyward_Pride.png'\r\nimport WolfsGravestone from './Weapon_Wolf\\'s_Gravestone.png'\r\nimport TheUnforged from './Weapon_The_Unforged.png'\r\nconst claymore = {\r\n  WasterGreatsword,\r\n  OldMercsPal,\r\n  BloodtaintedGreatsword,\r\n  DebateClub,\r\n  FerrousShadow,\r\n  Quartz,\r\n  SkyriderGreatsword,\r\n  WhiteIronGreatsword,\r\n  BlackcliffSlasher,\r\n  FavoniusGreatsword,\r\n  LithicBlade,\r\n  PrototypeAminus,\r\n  Rainslasher,\r\n  RoyalGreatsword,\r\n  SerpentSpine,\r\n  TheBell,\r\n  Whiteblind,\r\n  SacrificialGreatsword,\r\n  SnowTombedStarsilver,\r\n  SkywardPride,\r\n  WolfsGravestone,\r\n  TheUnforged,\r\n}\r\nexport default claymore","export default __webpack_public_path__ + \"static/media/Weapon_Waster_Greatsword.a411f34b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Old_Merc's_Pal.67aa1930.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Bloodtainted_Greatsword.eb68a62c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Debate_Club.be908652.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ferrous_Shadow.ef586057.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Quartz.d41c58b9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Greatsword.46e935cb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Iron_Greatsword.eda6295d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Slasher.4693af54.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Greatsword.bfd288be.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Blade.ab4d4f4f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Aminus.d2bf526a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rainslasher.664c61ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Greatsword.fbc5184a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Serpent_Spine.bb2831b5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Bell.3670f330.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Whiteblind.9c37b7dd.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Greatsword.1b0f0225.png\";","export default __webpack_public_path__ + \"static/media/snow_tombed_starsilver.23f56359.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Pride.66a1b3f7.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wolf's_Gravestone.032b607c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Unforged.f7762a2f.png\";","import BeginnersProtector from './Weapon_Beginner\\'s_Protector.png'\r\nimport IronPoint from './Weapon_Iron_Point.png'\r\nimport BlackTassel from './Weapon_Black_Tassel.png'\r\nimport Halberd from './Weapon_Halberd.png'\r\nimport WhiteTassel from './Weapon_White_Tassel.png'\r\nimport BlackcliffPole from './Weapon_Blackcliff_Pole.png'\r\nimport CrescentPike from './Weapon_Crescent_Pike.png'\r\nimport Deathmatch from './Weapon_Deathmatch.png'\r\nimport DragonsBane from './Weapon_Dragon\\'s_Bane.png'\r\nimport LithicSpear from './Weapon_Lithic_Spear.png'\r\nimport PrototypeGrudge from './Weapon_Prototype_Grudge.png'\r\nimport FavoniusLance from './Weapon_Favonius_Lance.png'\r\nimport RoyalSpear from './Weapon_Royal_Spear.png'\r\nimport DragonspineSpear from './dragonspine_spear.png'\r\nimport VortexVanquisher from './Weapon_Vortex_Vanquisher.png'\r\nimport PrimordialJadeWingedSpear from './Weapon_Primordial_Jade_Winged-Spear.png'\r\nimport SkywardSpine from './Weapon_Skyward_Spine.png'\r\nconst polearms = {\r\n  BeginnersProtector,\r\n  IronPoint,\r\n  BlackTassel,\r\n  Halberd,\r\n  WhiteTassel,\r\n  BlackcliffPole,\r\n  CrescentPike,\r\n  Deathmatch,\r\n  DragonsBane,\r\n  LithicSpear,\r\n  PrototypeGrudge,\r\n  FavoniusLance,\r\n  RoyalSpear,\r\n  DragonspineSpear,\r\n  VortexVanquisher,\r\n  PrimordialJadeWingedSpear,\r\n  SkywardSpine,\r\n}\r\nexport default polearms","export default __webpack_public_path__ + \"static/media/Weapon_Beginner's_Protector.19165915.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Point.8263916c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Black_Tassel.c3103e46.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Halberd.0044e214.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Tassel.a3cc9099.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Pole.1e15a879.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Crescent_Pike.9e473ddb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Deathmatch.9b0e6d8e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dragon's_Bane.7437cf28.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Spear.cfb11b6c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Grudge.64b3a263.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Lance.693335d4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Spear.99058465.png\";","export default __webpack_public_path__ + \"static/media/dragonspine_spear.bb785669.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Vortex_Vanquisher.efad8956.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Primordial_Jade_Winged-Spear.ea10bc42.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Spine.e81931a5.png\";","import HuntersBow from './Weapon_Hunter\\'s_Bow.png'\r\nimport SeasonedHuntersBow from './Weapon_Seasoned_Hunter\\'s_Bow.png'\r\nimport EbonyBow from './Weapon_Ebony_Bow.png'\r\nimport Messenger from './Weapon_Messenger.png'\r\nimport RavenBow from './Weapon_Raven_Bow.png'\r\nimport RecurveBow from './Weapon_Recurve_Bow.png'\r\nimport SharpshootersOath from './Weapon_Sharpshooter\\'s_Oath.png'\r\nimport Slingshot from './Weapon_Slingshot.png'\r\nimport TheStringless from './Weapon_The_Stringless.png'\r\nimport AlleyHunter from './Weapon_Alley_Hunter.png'\r\nimport BlackcliffWarbow from './Weapon_Blackcliff_Warbow.png'\r\nimport CompoundBow from './Weapon_Compound_Bow.png'\r\nimport FavoniusWarbow from './Weapon_Favonius_Warbow.png'\r\nimport PrototypeCrescent from './Weapon_Prototype_Crescent.png'\r\nimport RoyalBow from './Weapon_Royal_Bow.png'\r\nimport Rust from './Weapon_Rust.png'\r\nimport SacrificialBow from './Weapon_Sacrificial_Bow.png'\r\nimport TheViridescentHunt from './Weapon_The_Viridescent_Hunt.png'\r\nimport SkywardHarp from './Weapon_Skyward_Harp.png'\r\nimport AmosBow from './Weapon_Amos\\'_Bow.png'\r\nimport DreamsOfDragonfell from './dreams_of_dragonfell.png'\r\nconst bows = {\r\n  HuntersBow,\r\n  SeasonedHuntersBow,\r\n  EbonyBow,\r\n  Messenger,\r\n  RavenBow,\r\n  RecurveBow,\r\n  SharpshootersOath,\r\n  Slingshot,\r\n  TheStringless,\r\n  AlleyHunter,\r\n  BlackcliffWarbow,\r\n  CompoundBow,\r\n  FavoniusWarbow,\r\n  PrototypeCrescent,\r\n  RoyalBow,\r\n  Rust,\r\n  SacrificialBow,\r\n  TheViridescentHunt,\r\n  SkywardHarp,\r\n  AmosBow,\r\n  DreamsOfDragonfell,\r\n}\r\nexport default bows","export default __webpack_public_path__ + \"static/media/Weapon_Hunter's_Bow.2e941c96.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Seasoned_Hunter's_Bow.bc6a42aa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ebony_Bow.f89cc3cc.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Messenger.939170eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Raven_Bow.b88fe5c0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Recurve_Bow.bafcde86.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sharpshooter's_Oath.1d149cf5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Slingshot.d2eeb3eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Stringless.b718aa93.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Alley_Hunter.8cc323c2.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Warbow.098f24da.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Compound_Bow.a8457f4e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Warbow.19e98358.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Crescent.50a174b0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Bow.06fbac8b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rust.65b7af56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Bow.804b7a38.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Viridescent_Hunt.904062bf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Harp.6961093e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amos'_Bow.e97cd305.png\";","export default __webpack_public_path__ + \"static/media/dreams_of_dragonfell.8aaebb39.png\";","import ApprenticesNotes from './Weapon_Apprentice\\'s_Notes.png'\r\nimport PocketGrimoire from './Weapon_Pocket_Grimoire.png'\r\nimport AmberCatalyst from './Weapon_Amber_Catalyst.png'\r\nimport EmeraldOrb from './Weapon_Emerald_Orb.png'\r\nimport MagicGuide from './Weapon_Magic_Guide.png'\r\nimport OtherworldlyStory from './Weapon_Otherworldly_Story.png'\r\nimport ThrillingTalesOfDragonSlayers from './Weapon_Thrilling_Tales_of_Dragon_Slayers.png'\r\nimport TwinNephrite from './Weapon_Twin_Nephrite.png'\r\nimport BlackcliffAgate from './Weapon_Blackcliff_Amulet.png'\r\nimport FavoniusCodex from './Weapon_Favonius_Codex.png'\r\nimport MappaMare from './Weapon_Mappa_Mare.png'\r\nimport PrototypeMalice from './Weapon_Prototype_Malice.png'\r\nimport RoyalGrimoire from './Weapon_Royal_Grimoire.png'\r\nimport SacrificialFragments from './Weapon_Sacrificial_Fragments.png'\r\nimport SolarPearl from './Weapon_Solar_Pearl.png'\r\nimport TheWidsith from './Weapon_The_Widsith.png'\r\nimport WineAndSong from './Weapon_Wine_and_Song.png'\r\nimport EyeOfPerception from './Weapon_Eye_of_Perception.png'\r\nimport Frostbearer from './Weapon_Frostbearer.png'\r\nimport LostPrayerToTheSacredWinds from './Weapon_Lost_Prayer_to_the_Sacred_Winds.png'\r\nimport SkywardAtlas from './Weapon_Skyward_Atlas.png'\r\nimport MemoryOfDust from './Weapon_Memory_of_Dust.png'\r\nconst catalysts = {\r\n  ApprenticesNotes,\r\n  PocketGrimoire,\r\n  AmberCatalyst,\r\n  EmeraldOrb,\r\n  MagicGuide,\r\n  OtherworldlyStory,\r\n  ThrillingTalesOfDragonSlayers,\r\n  TwinNephrite,\r\n  BlackcliffAgate,\r\n  FavoniusCodex,\r\n  MappaMare,\r\n  PrototypeMalice,\r\n  RoyalGrimoire,\r\n  SacrificialFragments,\r\n  SolarPearl,\r\n  TheWidsith,\r\n  WineAndSong,\r\n  EyeOfPerception,\r\n  Frostbearer,\r\n  LostPrayerToTheSacredWinds,\r\n  SkywardAtlas,\r\n  MemoryOfDust\r\n}\r\nexport default catalysts","export default __webpack_public_path__ + \"static/media/Weapon_Apprentice's_Notes.0b7fb81e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Pocket_Grimoire.536179c5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amber_Catalyst.01ede681.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Emerald_Orb.4008f986.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Magic_Guide.64c777ec.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Otherworldly_Story.48b54293.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Thrilling_Tales_of_Dragon_Slayers.692d45b8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Twin_Nephrite.b0c2488b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Amulet.b97d01eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Codex.6e201cfa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Mappa_Mare.bc35dc35.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Malice.4ab08cb6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Grimoire.2f67eac4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Fragments.4dd54e2d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Solar_Pearl.d629ae58.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Widsith.a6fe1227.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wine_and_Song.0aa416e6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Eye_of_Perception.907a0288.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Frostbearer.bde00061.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lost_Prayer_to_the_Sacred_Winds.45f8ca2a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Atlas.8b4f86fa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Memory_of_Dust.4e45ccbb.png\";","import weapons from './Weapons/Weapons'\r\n\r\nimport anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  weapons,\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","import swords from './Swords/Swords'\r\nimport claymores from './Claymores/Claymores'\r\nimport polearms from './Polearms//Polearms'\r\nimport bows from './Bows/Bows'\r\nimport catalysts from './Catalysts/Catalysts'\r\nconst weapons = {\r\n  ...swords,\r\n  ...claymores,\r\n  ...polearms,\r\n  ...bows,\r\n  ...catalysts,\r\n}\r\nexport default weapons","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport Character from \"./Character/Character\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //remove the old error/prone id lists, if it still exists\r\n  localStorage.removeItem(\"artifact_id_list\")\r\n  localStorage.removeItem(\"character_id_list\")\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  if (CharacterDatabase.populateDatebaseFromLocalStorage() |\r\n    ArtifactDatabase.populateDatebaseFromLocalStorage()) {\r\n    //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n    let arts = ArtifactDatabase.getArtifactDatabase();\r\n    Object.values(arts).forEach(art => {\r\n      let valid = true\r\n      if (art.location && !CharacterDatabase.getCharacter(art.location)) {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n      if (!valid)\r\n        ArtifactDatabase.updateArtifact(art)\r\n    })\r\n\r\n    let chars = CharacterDatabase.getCharacterDatabase();\r\n    Object.values(chars).forEach(character => {\r\n      let valid = true;\r\n      //verify character database equipment validity\r\n      let equippedArtifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([slotKey, artid]) => {\r\n        if (!ArtifactDatabase.getArtifact(artid)) {\r\n          valid = false\r\n          return [slotKey, undefined]\r\n        }\r\n        return [slotKey, artid]\r\n      }))\r\n      if (!valid)\r\n        character.equippedArtifacts = equippedArtifacts\r\n\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      if (character.artifactConditionals) character.artifactConditionals = character.artifactConditionals.filter(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for invalid conditionals from previous iterations where srcKey2 was not used.\r\n      let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n      let ascension = Character.getAscension(levelKey)\r\n      character.talentConditionals = talentConditionals.filter(cond => {\r\n        let { srcKey: talentKey, srcKey2: conditionalKey } = cond\r\n        let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n        let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n        if (!conditional) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n      if (!valid) {\r\n        CharacterDatabase.updateCharacter(character)\r\n      }\r\n    })\r\n  }\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import { AttachLazyFormulas, Formulas, OverrideFormulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nconst formulaKeyDependency = {}\r\nconst getDependency = (key) => {\r\n  let testObj = {}\r\n  let dependency = []\r\n  Object.keys(StatData).filter(k => k !== key).forEach(k => {\r\n    Object.defineProperty(testObj, k, {\r\n      get: () => {\r\n        dependency.push(k)\r\n        Object.defineProperty(testObj, k, { get: () => 0 })\r\n        return 0\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  AttachLazyFormulas(testObj)\r\n  //use the getter to generate the dependency\r\n  if (typeof testObj[key] === \"number\")\r\n    formulaKeyDependency[key] = dependency\r\n}\r\nObject.keys(Formulas).forEach(key => getDependency(key))\r\n\r\nfunction DependencyStatKeys(key, formulaOverrides = []) {\r\n  let dependencies = GetDependencyStats(key, formulaOverrides) || []\r\n  //add any formula override dependencies\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key, dependency = [] } = OverrideFormulas[formulaOverride.key] || {}\r\n    if (!dependencies.includes(key)) return\r\n    dependencies.push(...dependency)\r\n  })\r\n  dependencies = [...new Set(dependencies)]\r\n  let formulaKeys = Object.keys(Formulas).filter(k => k === key || dependencies.includes(k))\r\n  let statkeys = Object.keys(StatData).filter(k => k === key || dependencies.includes(k))\r\n  return { formulaKeys, statkeys }\r\n}\r\nfunction GetDependencyStats(key, formulaOverrides = []) {\r\n  let dependencies = [key]\r\n  let keyDependencies = null\r\n  for (const formulaOverride of formulaOverrides)\r\n    if (OverrideFormulas[formulaOverride?.key]?.key === key)\r\n      keyDependencies = OverrideFormulas[formulaOverride?.key]?.dependency\r\n  keyDependencies = keyDependencies || formulaKeyDependency[key]\r\n  keyDependencies?.forEach(k => {\r\n    let subdependencies = GetDependencyStats(k, formulaOverrides)\r\n    dependencies.push(...subdependencies)\r\n  })\r\n  return dependencies\r\n}\r\nexport {\r\n  DependencyStatKeys,\r\n  GetDependencyStats,\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, Image, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId) return null;\r\n  const equipOnChar = (charId) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charId)\r\n    forceUpdate?.()\r\n  }\r\n\r\n  let art = ArtifactDatabase.getArtifact(artifactId);\r\n  let artifactValidation = Artifact.artifactValidation(art)\r\n  let locationChar = CharacterDatabase.getCharacter(art.location)\r\n  let location = locationChar ? locationChar.name : \"Inventory\"\r\n  let mainStatLevel = assumeFull ? art.numStars * 4 : art.level\r\n  let assFullColor = assumeFull && art.level !== art.numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(art.mainStatKey, art.numStars, mainStatLevel, \"\")}{Stat.getStatUnit(art.mainStatKey)}</span>\r\n  return (<Card className=\"h-100\" border={`${art.numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getArtifactPieceIcon(art.setKey, art.slotKey)} className={`w-100 h-auto grad-${art.numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{`${Artifact.getArtifactPieceName(art.setKey, art.slotKey, \"Unknown Piece Name\")}`}</b></h6>\r\n          <div>{Artifact.getArtifactSlotNameWithIcon(art.slotKey)}{` +${art.level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getArtifactSetName(art.setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={art.numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(art.mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {art.substats ? art.substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let subStatValidation = artifactValidation.subStatValidations[i]\r\n          let numRolls = subStatValidation?.rolls?.length || 0\r\n          let efficiency = subStatValidation?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={artifactValidation.valid ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{artifactValidation.valid ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        }\r\n        ) : null}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.currentEfficiency}>\r\n          {(artifactValidation.currentEfficiency ? artifactValidation.currentEfficiency : 0).toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.maximumEfficiency}>\r\n          {(artifactValidation.maximumEfficiency ? artifactValidation.maximumEfficiency : 0).toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\">{location}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar()}>Inventory</Dropdown.Item>\r\n              {Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n                <Dropdown.Item key={id} onClick={() => equipOnChar(id)}>\r\n                  {char.name}\r\n                </Dropdown.Item>)}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><span>Location: {location}</span></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={art.location}\r\n                  style={art.location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    art.lock = !art.lock\r\n                    ArtifactDatabase.updateArtifact(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(art.lock || art.location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Col } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\nfunction DisplayStats({ statKey, character, build, editable, ...otherProps }) {\r\n  let buildVal = build?.finalStats?.[statKey] || 0\r\n  let statVal, buildDiff = null\r\n  if (typeof buildVal === \"string\") {\r\n    statVal = <span>{buildVal}</span>\r\n  } else {\r\n    let originalVal = Character.getStatValueWithOverride(character, statKey)\r\n    if (statKey === \"hp_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"hp_base\")\r\n    else if (statKey === \"def_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"def_base\")\r\n    else if (statKey === \"atk_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"atk_base\") + Character.getStatValueWithOverride(character, \"atk_weapon\")\r\n\r\n    let diff = buildVal - originalVal\r\n    let diffText = (diff?.toFixed?.(Stat.fixedUnit(statKey)) || diff) + Stat.getStatUnit(statKey)\r\n    if (diff < 0) buildDiff = <span className=\"text-success\">{diffText}</span>\r\n    else if (diff > 0) buildDiff = <span className=\"text-success\"> +{diffText}</span>\r\n\r\n    if (originalVal || !diff) statVal = <span className={editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}>{(originalVal?.toFixed?.(Stat.fixedUnit(statKey)) || originalVal) + Stat.getStatUnit(statKey)}</span>\r\n  }\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className=\"float-right text-right\">{statVal}{buildDiff}</span>\r\n  </Col>\r\n}\r\nconst DisplayNewBuildDiff = ({ statKey, character, equippedBuild, newBuild, editable, ...otherProps }) => {\r\n  let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right ${editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed?.(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed?.(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nexport {\r\n  DisplayStats,\r\n  DisplayNewBuildDiff,\r\n}","import React, { useState } from 'react';\r\nimport { Accordion, Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { DisplayNewBuildDiff, DisplayStats } from '../../Components/StatDisplay';\r\nimport Stat, { FormulaText } from \"../../Stat\";\r\nimport { GetDependencyStats } from '../../StatDependency';\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState }) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(characterKey)\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  const formulaDependencyKeys = [...new Set(statKeys.map(key => GetDependencyStats(key, build.finalStats?.formulaOverrides)).flat())]\r\n  const formulaKeys = Object.keys(FormulaText).filter(key => formulaDependencyKeys.includes(key))\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Calculations`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ?\r\n                  statKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                  statKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {formulaKeys.map(key => <Col key={key} xs={12} className=\"mt-2\">\r\n                    <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                      <Card.Header className=\"p-2\">\r\n                        {Stat.printStat(key, build.finalStats)}\r\n                      </Card.Header>\r\n                      <Card.Body className=\"p-2\">\r\n                        <small>{Stat.printFormula(key, build.finalStats, build.finalStats.formulaOverrides, false)}</small>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  )}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n              {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getArtifactSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getArtifactSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getArtifactSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            let conditionalStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n                            if (conditionalStats) {\r\n                              if (!setStats) setStats = {}\r\n                              Object.entries(conditionalStats).forEach(([statKey, val]) =>\r\n                                setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                            }\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getArtifactSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Object.values(build.artifactIds).map(artid =>\r\n            artid ? <Col sm={6} lg={4} key={artid} className=\"mb-2\">\r\n              <ArtifactCard artifactId={artid} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport { DisplayNewBuildDiff, DisplayStats } from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"char_level\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={(val) => setOverride(\"char_level\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"char_level\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Assets.weapons[weapon.key]} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats, character)}</p>\r\n            <Row>\r\n              <Col xs={12} md={6}>\r\n                <h5>ATK: {weaponDisplayMainVal}</h5>\r\n              </Col>\r\n              {subStatKey && <Col xs={12} md={6}>\r\n                <h5>{Stat.getStatName(subStatKey)}: {weaponDisplaySubVal}{Stat.getStatUnit(subStatKey)}</h5>\r\n              </Col>}\r\n            </Row>\r\n            {<Row>\r\n              {(conditionalStats || weaponBonusStats) && <Col xs={12}><h6 className=\"mb-0\">Bonus Stats:</h6></Col>}\r\n              {weaponBonusStats && Object.entries(weaponBonusStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"bonu\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n              {conditionalStats && Object.entries(conditionalStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"cond\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n            </Row>}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  let { editable, character, character: { compareAgainstEquipped }, setOverride, equippedBuild, newBuild } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  let additionalKeys = [\"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const displayStatKeys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp_base\", \"hp\", \"hp_\", \"atk_base\", \"atk\", \"atk_\", \"def_base\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\", \"skill_crit_rate\", \"burst_crit_rate\", \"dmg\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              displayStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              displayStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              otherStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ?\r\n            miscStatkeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n            miscStatkeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n","import { faCheckSquare, faQuestionCircle, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, ToggleButton, ToggleButtonGroup, Tooltip } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat, { FormulaText } from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { GetDependencyStats } from \"../../StatDependency\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation, dmgMode }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  //choose which one to display stats for\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button\r\n        // style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"norm_atk\", \"char_atk\", \"plunge\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(Character.getTalentStatKey(\"char_atk\", character, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    //search for dependency, and flatten, isolate unique keys\r\n    keys = [...new Set(keys.map(key => GetDependencyStats(key, build.finalStats?.formulaOverrides)).flat())]\r\n    //return keys that are part of the formula text, in the order in which they appear.\r\n    return Object.keys(FormulaText).filter(key => keys.includes(key))\r\n  }\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <Accordion>\r\n        <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Options</span>\r\n                <small>Expand below to edit enemy details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ToggleButtonGroup type=\"radio\" value={dmgMode} name=\"dmgOptions\" onChange={(dmgMode) => setState({ dmgMode })}>\r\n                  <ToggleButton value=\"avg_dmg\">Avg. DMG</ToggleButton>\r\n                  <ToggleButton value=\"dmg\">Normal Hit, No Crit</ToggleButton>\r\n                  <ToggleButton value=\"crit_dmg\">Crit Hit DMG</ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Row className=\"mb-2\"><Col>\r\n                <Button variant=\"warning\" >\r\n                  <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                    To get the specific resistance values of enemies, please visit the wiki.\r\n                  </a>\r\n                </Button >\r\n              </Col></Row>\r\n              <Row>\r\n                <Col xs={12} xl={6} className=\"mb-2\">\r\n                  <StatInput\r\n                    name={<b>Enemy Level</b>}\r\n                    value={Character.getStatValueWithOverride(character, \"enemy_level\")}\r\n                    placeholder={Stat.getStatNameRaw(\"enemy_level\")}\r\n                    defaultValue={Character.getBaseStatValue(character, \"enemy_level\")}\r\n                    onValueChange={(val) => setOverride(\"enemy_level\", val)}\r\n                  />\r\n                </Col>\r\n                {[\"physical\", ...Character.getElementalKeys()].map(eleKey => {\r\n                  let statKey = eleKey === \"physical\" ? \"enemy_phy_res\" : `${eleKey}_enemy_ele_res`\r\n                  let immunityStatKey = eleKey === \"physical\" ? \"enemy_phy_immunity\" : `${eleKey}_enemy_ele_immunity`\r\n                  let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                  return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                        <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                      name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                      value={Character.getStatValueWithOverride(character, statKey)}\r\n                      placeholder={Stat.getStatNameRaw(statKey)}\r\n                      defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                      onValueChange={(val) => setOverride(statKey, val)}\r\n                      disabled={elementImmunity}\r\n                    />\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Formulas</span>\r\n                <small>Expand below to see calculation details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n              <Row>\r\n                {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\r\n                  <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                    <Card.Header className=\"p-2\">\r\n                      {Stat.printStat(key, build.finalStats)}\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-2\">\r\n                      <small>{Stat.printFormula(key, build.finalStats, build.finalStats.formulaOverrides, false)}</small>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                )}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_dmg: SuperConductCard,\r\n  electrocharged_dmg: ElectroChargedCard,\r\n  overloaded_dmg: OverloadedCard,\r\n  swirl_dmg: SwirlCard,\r\n  shatter_dmg: ShatteredCard,\r\n  crystalize_dmg: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey, reactionMode = \"none\" }, newBuild, equippedBuild, setState }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let charEleKey = Character.getElementalKey(characterKey)\r\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shatter_dmg\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shatter_dmg\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body>\r\n      <Row>\r\n        <Col ><Row className=\"mb-n2\">\r\n          {eleInterArr.map(key => {\r\n            let Ele = ReactionComponents[key]\r\n            if (!Ele) return null\r\n            let val = build?.finalStats?.[key]\r\n            val = val?.toFixed?.(Stat.fixedUnit(key)) || val\r\n            return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele value={val} /></Col>\r\n          })}\r\n        </Row></Col>\r\n        <Col xs=\"auto\">\r\n          {[\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup\r\n            type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setState({ reactionMode: val === \"none\" ? null : val })}>\r\n            <ToggleButton className=\"p-3\" value={\"none\"}> <h6>No Elemental</h6> <h6>Interactions</h6></ToggleButton >\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-3\" value={\"pyro_vaporize\"}>\r\n              <h6 className=\"text-vaporize\">Vaporize(Pyro)</h6>\r\n              <h2 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h2>\r\n            </ToggleButton >}\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-3\" value={\"pyro_melt\"}>\r\n              <h6 className=\"text-melt\">Melt(Pyro)</h6>\r\n              <h2 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h2>\r\n            </ToggleButton >}\r\n            {charEleKey === \"hydro\" && <ToggleButton className=\"p-3\" value={\"hydro_vaporize\"}>\r\n              <h6 className=\"text-vaporize\">Melt(Pyro)</h6>\r\n              <h2 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" />\r\n              </h2>\r\n            </ToggleButton >}\r\n            {charEleKey === \"cryo\" && <ToggleButton className=\"p-3\" value={\"cryo_melt\"}>\r\n              <h6 className=\"text-melt\">Melt(Pyro)</h6>\r\n              <h2 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />\r\n              </h2>\r\n            </ToggleButton >}\r\n          </ToggleButtonGroup>}\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"superconduct_dmg\")}</h6>\r\n    <h2 className=\"text-superconduct mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"electrocharged_dmg\")}</h6>\r\n    <h2 className=\"text-electrocharged mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"overloaded_dmg\")}</h6>\r\n    <h2 className=\"text-overloaded mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\nfunction SwirlCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"swirl_dmg\")}</h6>\r\n    <h2 className=\"text-swirl mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ value }) {\r\n  let information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"shatter_dmg\")}</h6>\r\n    <h2 className=\"text-shatter mb-0\">\r\n      <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"crystalize_dmg\")}</h6>\r\n    <h2 className=\"text-crystalize mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let { talentLvlKey = undefined, levelBoost = 0 } = Character.getTalentLevelKey(character, talentKey, constellation, true)\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n  if (typeof talentLvlKey === \"number\") {\r\n    if (editable) {\r\n      let setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        let talentLevelKeys = state.talentLevelKeys || {}\r\n        talentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let statsEle = null\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  if (talentStats) {\r\n    statsEle = <Row><Col>\r\n      <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n        <ListGroup className=\"text-white\" variant=\"flush\">\r\n          {Object.entries(talentStats).map(([statKey, statVal], index) =>\r\n            <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n              <div>\r\n                <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n              </div>\r\n            </ListGroup.Item>\r\n          )}\r\n        </ListGroup>\r\n      </Card>\r\n    </Col></Row>\r\n  }\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalStats = {}\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            //filter out formulaOverrides from rendering\r\n            conditionalStats = Object.fromEntries(Object.entries(conditionalStats).filter(([key, _]) => key !== \"formulaOverrides\"))\r\n            conditionalFields = Character.getTalentConditionalFields(conditional, conditionalNum, [])\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Row><Col>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {Object.entries(conditionalStats).map(([statKey, statVal], index) =>\r\n                  <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n                    <div>\r\n                      <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                      <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n                    </div>\r\n                  </ListGroup.Item>\r\n                )}\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i + (conditionalStats?.length || 0)} index={i + (conditionalStats?.length || 0)} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col></Row>\r\n        }\r\n        return <Row className=\"mt-2\" key={\"section\" + i}><Col xs={12}>\r\n          <span>{talentText}</span>\r\n          {fields.length > 0 && <ListGroup className=\"text-white ml-n2 mr-n2\">\r\n            {fields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n          {conditionalEle}\r\n        </Col></Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay(props) {\r\n  let { character, character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldVariant = field.variant || \"\"\r\n  if (typeof fieldVariant === \"function\")\r\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldBasic = field.basicVal\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats, character)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = field.value ? field.value : field.finalVal\r\n  if (typeof fieldVal === \"function\") {\r\n    fieldVal = fieldVal?.(talentLvlKey, build.finalStats, character)\r\n  }\r\n  if (typeof fieldVal === \"number\")\r\n    fieldVal = Math.round(fieldVal)\r\n\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.finalVal\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats, character)?.toFixed?.(0))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterId)\r\n      this.state = CharacterDatabase.getCharacter(props.characterId)\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    dmgMode: \"dmg\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey), reactionMode: null, autoInfused: false })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getArtifactDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.characterId && this.state.id !== this.props.characterId)\r\n      this.setState(CharacterDatabase.getCharacter(this.props.characterId))\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"char_level\")}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && (Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\"}>Talents {(Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\" && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} setState={this.setSetState} setOverride={this.setOverride} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import { Container } from \"react-bootstrap\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport '../StatDependency'\r\nexport default function TestDisplay(props) {\r\n  DatabaseInitAndVerify()\r\n  return <Container>\r\n    <CharacterDisplayCard editable characterId={\"character_2\"} />\r\n  </Container>\r\n}\r\n","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { AttachLazyFormulas, ElementToReactionKeys } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getCDataObj(charKey)?.talent?.[talentKey]?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getCDataObj(charKey)?.talent?.[talentKey]?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getCDataObj(charKey)?.talent?.[talentKey]?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"formulaOverrides\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_base\") || false\r\n    return character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getArtifactSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals, initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals && artifactConditionals.forEach(conditional => {\r\n      let { srcKey: setKey, srcKey2: setNumKey } = conditional\r\n      let condStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditional.conditionalNum)\r\n      if (condStats) Object.entries(condStats).forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n    AttachLazyFormulas(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"formulaOverrides\") {\r\n        initialStats.formulaOverrides = [...(initialStats.formulaOverrides || []), ...val]\r\n        return\r\n      }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, OverrideFormulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static printFormula = (statKey, stats, formulaOverrides = [], expand = true) => {\r\n    for (const formulaOverride of formulaOverrides)\r\n      if (OverrideFormulas[formulaOverride?.key]?.key === statKey)\r\n        return Stat.printOverrideFormula(stats, formulaOverride.key, formulaOverride.options, false)\r\n    return FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n      (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n  }\r\n\r\n  static printOverrideFormula = (stats, overrideKey, options, expand = true) =>\r\n    OverrideFormulasText?.[overrideKey] && typeof OverrideFormulasText?.[overrideKey].formulaText === \"function\" &&\r\n    (<span>{OverrideFormulasText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  trans_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(0, \"ele_mas\")} * exp^(-0.000505 * {f(0, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulasText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.value}%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getArtifactDataImport = () => ArtifactDataImport\r\n  static getArtifactSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getArtifactSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData).filter(([key, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getArtifactPieceName = (setKey, slotKey, defVal = \"\") => ArtifactData?.[setKey]?.pieces?.[slotKey] || defVal;\r\n  static getArtifactPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n  static getArtifactSetEffectsObj = (setKey, defVal = null) => ArtifactData?.[setKey]?.sets || defVal\r\n  //SLOT\r\n  static getArtifactSlotKeys = () => Object.keys(ArtifactSlotsData)\r\n  static getArtifactSlotName = (slotKey, defVal = \"\") =>\r\n    ArtifactSlotsData[slotKey] ? ArtifactSlotsData[slotKey].name : defVal\r\n  static getArtifactSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n\r\n  static getArtifactSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getArtifactSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getArtifactSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n\r\n  //STARS\r\n  static getRarityArr = (setKey) => ArtifactData[setKey] ? ArtifactData[setKey].rarity : []\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => ArtifactMainSlotKeys\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = ArtifactMainStatsData[numStars]?.[key]?.[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData)\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getRolls(value, rollData, float = false) {\r\n    let roll = null;\r\n    let maxNumRoll = Math.round(value / rollData[0])\r\n    if (!maxNumRoll) return null;\r\n    let rollOption = (val, arr) => {\r\n      if (roll) return;\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (float) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val)) {\r\n            roll = arr;\r\n            return;\r\n          }\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val)) {\r\n            roll = arr;\r\n            return\r\n          }\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        rollOption(value, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(value, [])\r\n    return roll;\r\n  }\r\n  static validateSubStat(state, substat) {\r\n    if (!substat || !substat.value) return { valid: true }\r\n    let value = parseFloat(substat.value);\r\n    if (isNaN(value)) return { valid: false, msg: `Invalid Input` }\r\n    let numStars = state.numStars\r\n    if (!numStars) return { valid: false, msg: `Artifact Stars not set.` }\r\n    let isFloat = Stat.getStatUnit(substat.key) === \"%\"\r\n    let rollData = this.getSubstatRollData(substat.key, numStars);\r\n    let rolls = this.getRolls(value, rollData, isFloat)\r\n\r\n    if (!rolls || rolls.length === 0) return { valid: false, msg: `Substat cannot be rolled 0 times.` };\r\n    let totalAllowableRolls = ArtifactStarsData[numStars]?.numUpgradesOrUnlocks - (4 - ArtifactStarsData[numStars]?.subBaseHigh) + 1;//+1 for its base roll\r\n    if (rolls.length > totalAllowableRolls) return { valid: false, msg: `Substat cannot be rolled more than ${totalAllowableRolls} times.` };\r\n\r\n    let min = rollData[0] * rolls.length;\r\n    let max = rollData[rollData.length - 1] * rolls.length;\r\n    return { valid: true, efficiency: clampPercent(((value - min) / (max - min)) * 100), msg: `This substat was rolled ${rolls.length} time(s). Values: [${rolls.join(\", \")}]`, rolls }\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static artifactValidation(state) {\r\n    let currentEfficiency = 0, maximumEfficiency = 0;\r\n    let subStatValidations = state.substats.map(substat => Artifact.validateSubStat(state, substat));\r\n    for (const substat of subStatValidations)\r\n      if (!substat.valid)\r\n        return { subStatValidations, valid: false, msg: \"One of the substat is invalid.\", currentEfficiency, maximumEfficiency }\r\n\r\n    //if a substat has >=2 rolls, when not all of them have been unlocked//if a substat has >=2 rolls, when not all of them have been unlocked\r\n    if (subStatValidations.some(substat => substat?.rolls?.length > 1) && subStatValidations.some((substat) => !substat.rolls))\r\n      return { subStatValidations, valid: false, msg: \"One of the substat have >1 rolls, but not all substats are unlocked.\", currentEfficiency, maximumEfficiency }\r\n    let currentNumOfRolls = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls ? cur.rolls.length : 0), 0);\r\n    let rollsRemaining = Artifact.rollsRemaining(state.level, state.numStars);\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(state.numStars);\r\n\r\n    if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n      return { subStatValidations, valid: false, msg: `Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `, currentEfficiency, maximumEfficiency }\r\n\r\n    let totalCurrentEfficiency = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls && cur.efficiency ? (cur.efficiency * cur.rolls.length) : 0), 0);\r\n    currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { valid: true, subStatValidations, currentNumOfRolls, rollsRemaining, totalPossbleUpgrade: totalPossbleRolls, currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getArtifactSets = (setKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = null) =>\r\n    deepClone(this.getArtifactSets(setKey)?.[setNumKey]?.stats || defVal)\r\n\r\n  static getArtifactConditionalStats = (setKey, setNumKey, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getArtifactSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      ArtifactData?.[setKey]?.sets && Object.entries(ArtifactData[setKey].sets).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getArtifactSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      if (ArtifactData?.[setKey]?.sets) {\r\n        let setNumKeys = Object.keys(ArtifactData[setKey].sets).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n        if (setNumKeys.length)\r\n          artifactSetEffect[setKey] = setNumKeys\r\n      }\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getArtifactSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = ArtifactData?.[setKey]?.sets?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getArtifactSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets?.[setNumKey]?.conditional || defVal\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      let hasSetEffect = false\r\n      if (setObj.sets)\r\n        Object.entries(setObj.sets).forEach(([setNumKey, setEffectObj]) => {\r\n          if (setEffectObj.stats && Object.keys(setEffectObj.stats).length > 0) {\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n            hasSetEffect = true\r\n          }\r\n          if (setEffectObj.conditional) {\r\n            let conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n            if (conditionalNum) {\r\n              let condStats = this.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n              if (condStats) {\r\n                setEffect[setNumKey] = deepClone(condStats)\r\n                hasSetEffect = true\r\n              }\r\n            }\r\n          }\r\n        })\r\n      if (hasSetEffect)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => id ? artifactDatabase[id] : null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null) \r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  dmg: { name: \"All DMG\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elementry Mastry Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elementry Mastry Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elementry Mastry Multiplier Z\", unit: \"multi\" },\r\n  trans_reaction_base_multi: { name: \"Transformation Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_final: (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.phy_dmg,\r\n  plunge_crit_dmg: (s) => s.phy_crit_dmg,\r\n  plunge_avg_dmg: (s) => s.phy_avg_dmg,\r\n  plunge_bonus_multi: (s) => s.phy_bonus_multi,\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.dmg) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * s.ele_mas_multi_x * 1.5 * s.trans_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * s.ele_mas_multi_x * 2 * s.trans_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * s.ele_mas_multi_x * 1.5 * s.trans_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * s.ele_mas_multi_x * 2 * s.trans_reaction_base_multi,\r\n  trans_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s[`${ele}_ele_dmg`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_ele_crit_dmg`],\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_ele_avg_dmg`],\r\n  plunge_bonus_multi: (s, ele) => s[`${ele}_ele_bonus_multi`],\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.dmg) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.dmg) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.dmg) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulas = {\r\n  noelle_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk + s.def_final * (options.value / 100),\r\n    dependency: [\"atk_base\", \"atk_weapon\", \"atk_\", \"atk\", \"def_final\", \"def_base\", \"def_\", \"def\"],\r\n  }\r\n}\r\n\r\n//the keyfilters are used by build generator to reduce the amount of calculations required\r\nfunction AttachLazyFormulas(obj, options = {}) {\r\n  let { formulaKeys = Object.keys(Formulas), statKeys = Object.keys(StatData) } = options;\r\n  let { formulaOverrides = [] } = obj;\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key: overrideFormulaKey, options } = formulaOverride\r\n    let { key, formula } = OverrideFormulas[overrideFormulaKey] || {}\r\n    if (!formulaKeys.includes(key)) return\r\n    formula = formula(options)\r\n    Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => formula(obj) : function () {\r\n        let val = formula(obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n\r\n  formulaKeys.forEach(key => {\r\n    !obj.hasOwnProperty(key) && Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => Formulas[key](obj) : function () {\r\n        let val = Formulas[key](obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  //assign zeros or default values to the other stats that are not part of the calculations\r\n  statKeys.forEach(key => !obj.hasOwnProperty(key) && (obj[key] = StatData[key].default || 0))\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  OverrideFormulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  AttachLazyFormulas,\r\n}","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}"],"sourceRoot":""}