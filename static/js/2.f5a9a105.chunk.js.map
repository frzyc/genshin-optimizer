{"version":3,"sources":["../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","Components/StatIcon.js","Character/CharacterDisplay/CharacterArtifactPane.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js"],"names":["TabContainer","props","_useUncontrolled","useUncontrolled","activeKey","id","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","children","useMemo","key","type","tabContext","getControlledId","getControllerId","React","createElement","TabContext","Provider","value","SelectableContext","TabContent","forwardRef","_ref","ref","bsPrefix","_ref$as","as","Component","className","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","_extends","classNames","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","in","displayName","Tab","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","Error","Container","Content","Pane","createContext","AccordionToggle","onClick","accordionOnClick","contextEventKey","AccordionContext","e","useAccordionToggle","AccordionCollapse","Collapse","Children","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","Toggle","StatIcon","hp","faTint","atk","faFistRaised","def","faShieldAlt","ele_mas","faMagic","crit_rate","faDice","crit_dmg","faDiceD20","ener_rech","faSync","heal_bonu","faFirstAid","CharacterArtifactPane","useState","showOther","setShowOther","character","characterKey","compareAgainstEquipped","equippedBuild","newBuild","editable","forceUpdate","build","eleKey","Character","getElementalKey","statKeys","push","otherStatKeys","getElementalKeys","forEach","ele","filter","includes","displayStats","statKey","statVal","getStatValueWithOverride","unit","Stat","getStatUnit","buildDiff","finalStats","Col","xs","md","lg","icon","getStatName","hasOverride","toFixed","fixedUnit","displayNewBuildDiff","Row","Card","bg","text","Header","Button","variant","size","Body","map","Footer","equipArtifacts","artifactIds","sm","Object","entries","artifactSetEffect","setKey","effects","Artifact","getArtifactSetName","num","effect","Badge","values","artid","ArtifactCard","artifactId","_objectWithoutProperties","source","excluded","i","target","sourceKeys","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","StatInput","placeholder","defaultValue","onValueChange","percent","restProps","InputGroup","Prepend","Text","name","Append","undefined","OverlayTrigger","placement","overlay","Tooltip","disabled","style","pointerEvents","faUndo","CharacterOverviewPane","constellation","setOverridelevel","setConstellation","editLevel","setEditLevel","elementKey","weaponTypeKey","getWeaponTypeKey","level","getLevelWithOverride","Img","src","getCard","getName","Image","Assets","elements","weaponTypes","stars","getStar","colored","faSave","faEdit","getConstellationName","characters","con","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCard","editing","SetEditing","showDescription","setShowDescription","weapon","setState","setStateWeapon","state","conditionalNum","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","levelKey","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","refineIndex","conditionalStats","getWeaponConditionalStat","conditionalEle","conditional","getWeaponConditional","Array","isArray","selectedConditional","selectedConditionalNum","curConditional","maxStack","condition","badge","count","Dropdown","Menu","Item","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","faQuoteLeft","weapons","thumbnail","DropdownButton","title","getWeaponName","reverse","star","arr","ItemText","getWeaponsOfType","rarity","weaponObj","Divider","getLevelName","LevelNameData","faGavel","getWeaponRarity","getWeaponPassiveDescription","val","getWeaponDescription","editingOther","SetEditingOther","miscStatkeys","setOverride","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","StatOverrideInput","getStatNameWithPercent","CharacterSpecializedStatKey","getBaseStatValue","CharacterTalentPane","talent","img","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","child","CharacterDisplayCard","forceUpdateComponent","CharacterDatabase","getCharacter","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","deepClone","baseLevel","getLevel","overrideLevel","DatabaseInitAndVerify","characterToEdit","getInitialState","updateCharacter","addCharacter","footer","equippedArtifacts","equippedArtifactsObjs","fromEntries","ArtifactDatabase","getArtifact","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","onChange","Title","onClose","faTimes","defaultActiveKey","Nav","Link","process","initialState","WeaponLevelKeys"],"mappings":"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","file":"static/js/2.f5a9a105.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst StatIcon = {\r\n  hp: faTint,\r\n  atk: faFistRaised,\r\n  def: faShieldAlt,\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\nexport default StatIcon","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react';\r\nimport { Accordion, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport StatIcon from '../../Components/StatIcon';\r\nimport Stat from \"../../Stat\";\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane(props) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  let { character: { characterKey, compareAgainstEquipped }, equippedBuild, newBuild, editable, forceUpdate } = props\r\n  let { character } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let eleKey = Character.getElementalKey(characterKey)\r\n  const statKeys = [\"hp\", \"atk\", \"def\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"crit_multi\", \"ener_rech\", \"heal_bonu\", \"phy_dmg\", \"phy_atk\",]\r\n  statKeys.push(`${eleKey}_ele_dmg`)\r\n  statKeys.push(`${eleKey}_ele_atk`)\r\n\r\n  let otherStatKeys = [\"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg\", \"phy_res\", \"norm_atk_dmg\", \"char_atk_dmg\", \"skill_dmg\", \"burst_dmg\"]\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  otherStatKeys = otherStatKeys.filter(key => !statKeys.includes(key))\r\n\r\n  const displayStats = (statKey) => {\r\n    let statVal = Character.getStatValueWithOverride(character, statKey)\r\n    let unit = Stat.getStatUnit(statKey)\r\n    let buildDiff = (build?.finalStats?.[statKey] || 0) - statVal\r\n\r\n    return <Col xs={12} md={6} lg={4} key={statKey}>\r\n      <h6 className=\"d-inline\">{StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null} {Stat.getStatName(statKey)}</h6>\r\n      <span className={`float-right ${(editable && Character.hasOverride(character, statKey)) ? \"text-warning\" : \"\"}`}>\r\n        {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n        {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> {buildDiff > 0 && \"+\"}{buildDiff?.toFixed(Stat.fixedUnit(statKey)) + unit}</span> : null}\r\n      </span>\r\n    </Col>\r\n  }\r\n  const displayNewBuildDiff = (statKey) => {\r\n    let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n    let unit = Stat.getStatUnit(statKey)\r\n    let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n    return <Col xs={12} md={6} lg={4} key={statKey}>\r\n      <h6 className=\"d-inline\">{StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null} {Stat.getStatName(statKey)}</h6>\r\n      <span className={`float-right ${(editable && Character.hasOverride(character, statKey)) ? \"text-warning\" : \"\"}`}>\r\n        {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n        {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 ? \"+\" : \"\"}{buildDiff?.toFixed(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n      </span>\r\n    </Col>\r\n  }\r\n\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-3\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Other Stats`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ? statKeys.map(displayNewBuildDiff) : statKeys.map(displayStats)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {(newBuild && compareAgainstEquipped) ? otherStatKeys.map(displayNewBuildDiff) : otherStatKeys.map(displayStats)}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button size=\"sm\" onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-3\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(build.artifactSetEffect).map(([setKey, effects]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-3\">\r\n                      <h5>{Artifact.getArtifactSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {Object.entries(effects).map(([num, effect]) => {\r\n                          return <Col key={num} xs={12}><h6><Badge variant=\"success\">{num}-Set</Badge> <span>{effect.text}</span></h6></Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Object.values(build.artifactIds).map(artid =>\r\n            artid ? <Col sm={6} lg={4} key={artid} className=\"mb-3 testname\">\r\n              <ArtifactCard artifactId={artid} forceUpdate={forceUpdate} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Button, InputGroup, OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nfunction StatInput(props) {\r\n  let { value, placeholder, defaultValue, onValueChange, percent, ...restProps } = props\r\n  return (<InputGroup {...restProps}>\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{props.name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>)\r\n}\r\nexport default StatInput","import { faCheckSquare, faEdit, faGavel, faQuoteLeft, faSave, faSquare } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Badge, Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport StatIcon from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character: { characterKey, constellation }, editable, setOverridelevel, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getLevelWithOverride(props.character)\r\n  return <Row>\r\n    <Col xs={12} lg={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={setOverridelevel} value={level} />\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Changes the display level. Cosmetic only.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {Assets.characters?.[characterKey]?.constellation?.map((con, i) =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={con} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} lg={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCard {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character: { characterKey, weapon }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum)\r\n  let conditionalEle = (() => {\r\n    let conditional = Weapon.getWeaponConditional(weapon.key)\r\n    if (!conditional) return <h6>{weaponPassiveName}</h6>\r\n    let conditionalNum = weapon.conditionalNum;\r\n    if (Array.isArray(conditional)) {\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) selectedConditionalNum = 0\r\n      //TODO multi conditional\r\n      let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n        (selectedConditional.condition + (selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\"))\r\n      let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n      let count = 0;\r\n      return <Dropdown>\r\n        <Dropdown.Toggle size=\"sm\">\r\n          <h6 className=\"mb-0 d-inline\">{weaponPassiveName} {badge}</h6>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item onClick={() => setStateWeapon(\"conditionalNum\", 0)}>\r\n            <span>Not Active</span>\r\n          </Dropdown.Item>\r\n          {conditional.map(condial =>\r\n            <React.Fragment key={condial.condition}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n              let tempcount = ++count\r\n              return <Dropdown.Item key={tempcount} onClick={() => setStateWeapon(\"conditionalNum\", tempcount)}>\r\n                {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n              </Dropdown.Item>\r\n            })}</React.Fragment>\r\n          )}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    } else if (conditional.maxStack > 1) {\r\n      //stacking conditional\r\n      let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n      return <Dropdown>\r\n        <Dropdown.Toggle size=\"sm\">\r\n          <h6 className=\"mb-0 d-inline\">{weaponPassiveName} {badge}</h6>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item onClick={() => setStateWeapon(\"conditionalNum\", 0)}>\r\n            <span>Not Active</span>\r\n          </Dropdown.Item>\r\n          {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n            <Dropdown.Item key={stack} onClick={() => setStateWeapon(\"conditionalNum\", stack)}>\r\n              {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n            </Dropdown.Item>)}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    } else if (conditional.maxStack === 1) {\r\n      //single boolean conditional\r\n      return <Button size=\"sm\" onClick={() => setStateWeapon(\"conditionalNum\", conditionalNum ? 0 : 1)} >\r\n        <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {weaponPassiveName}</h6>\r\n      </Button>\r\n    }\r\n  })()\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Assets.weapons[weapon.key]} className=\"w-100 h-auto\" thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span>{StatIcon[subStatKey] ? <FontAwesomeIcon icon={StatIcon[subStatKey]} className=\"mr-2\" /> : null}{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats)}</p>\r\n            <Row>\r\n              <Col xs={12} md={6}>\r\n                <h5>ATK: {weaponDisplayMainVal}</h5>\r\n              </Col>\r\n              {subStatKey && <Col xs={12} md={6}>\r\n                <h5>{Stat.getStatName(subStatKey)}: {weaponDisplaySubVal}{Stat.getStatUnit(subStatKey)}</h5>\r\n              </Col>}\r\n            </Row>\r\n            {<Row>\r\n              {(conditionalStats || weaponBonusStats) && <Col xs={12}><h6 className=\"mb-0\">Bonus Stats:</h6></Col>}\r\n              {weaponBonusStats && Object.entries(weaponBonusStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"bonu\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n              {conditionalStats && Object.entries(conditionalStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"cond\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n            </Row>}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  const statKeys = [\"hp\", \"atk\", \"def\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg\", \"char_atk_dmg\", \"skill_dmg\", \"burst_dmg\", \"skill_crit_rate\", \"burst_crit_rate\", \"crit_multi\", \"dmg\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let { editable, character, setOverride, equippedBuild, newBuild } = props\r\n  let { character: { compareAgainstEquipped } } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  const displayStats = (statKey) => {\r\n    let statVal = Character.getStatValueWithOverride(character, statKey)\r\n    let unit = Stat.getStatUnit(statKey)\r\n    let buildDiff = (build?.finalStats?.[statKey] || 0) - statVal\r\n    return <Col xs={12} lg={6} key={statKey}>\r\n      <h6 className=\"d-inline\">{StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null} {Stat.getStatName(statKey)}</h6>\r\n      <span className={`float-right ${(editable && Character.hasOverride(character, statKey)) ? \"text-warning\" : \"\"}`}>\r\n        {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n        {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> {buildDiff > 0 && \"+\"}{buildDiff?.toFixed(Stat.fixedUnit(statKey)) + unit}</span> : null}\r\n      </span>\r\n    </Col>\r\n  }\r\n  const displayNewBuildDiff = (statKey) => {\r\n    let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n    let unit = Stat.getStatUnit(statKey)\r\n    let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n    return <Col xs={12} lg={6} key={statKey}>\r\n      <h6 className=\"d-inline\">{StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null} {Stat.getStatName(statKey)}</h6>\r\n      <span className={`float-right ${(editable && Character.hasOverride(character, statKey)) ? \"text-warning\" : \"\"}`}>\r\n        {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n        {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n      </span>\r\n    </Col>\r\n  }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {statKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}><StatOverrideInput {...props} {...{ statKey, icon: StatIcon[statKey] }} /></Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ? statKeys.map(displayNewBuildDiff) : statKeys.map(displayStats)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}><StatOverrideInput {...props} {...{ statKey, icon: StatIcon[statKey] }} /></Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ? otherStatKeys.map(displayNewBuildDiff) : otherStatKeys.map(displayStats)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ? miscStatkeys.map(displayNewBuildDiff) : miscStatkeys.map(displayStats)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n\r\n\r\nfunction StatOverrideInput(props) {\r\n  let { character: { characterKey, levelKey }, statKey, icon, setOverride } = props\r\n  return <StatInput\r\n    className=\"mb-2\"\r\n    name={<span>{icon && <FontAwesomeIcon icon={icon} className=\"fa-fw\" />} {Stat.getStatName(statKey)}</span>}\r\n    placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n    value={Character.getStatValueWithOverride(props.character, statKey)}\r\n    percent={false}\r\n    onValueChange={(value) => setOverride(statKey, value)}\r\n    defaultValue={Character.getBaseStatValue(characterKey, levelKey, statKey)}\r\n  />\r\n}\r\n","import { Image, Row } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\n//TODO\r\nfunction CharacterTalentPane(props) {\r\n  let { character: { characterKey } } = props\r\n  let talent = Assets.characters?.[characterKey]?.talent\r\n  return <Row>\r\n    {talent && Object.entries(talent).map(([key, img]) => \r\n      <Image src={img} key={key} />\r\n    )}\r\n\r\n  </Row>\r\n}\r\nexport default CharacterTalentPane","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ArtifactDatabase from '../Artifact/ArtifactDatabase';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\nimport Weapon from '../Weapon/Weapon'\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map(child => <Col xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterToEdit)\r\n      this.state = props.characterToEdit\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    overrideLevel: 0,\r\n    equippedArtifacts: {},\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey) })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey, baseStatOverrides: {} })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = deepClone(state.baseStatOverrides)\r\n    let baseStatVal = Character.getBaseStatValue(this.state.characterKey, this.state.levelKey, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n  setOverridelevel = (level) => this.setState(state => {\r\n    let baseLevel = Character.getLevel(state.levelKey)\r\n    if (level === baseLevel)\r\n      return { overrideLevel: 0 }\r\n    else return { overrideLevel: level }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.characterToEdit && this.state.id !== this.props.characterToEdit.id)\r\n      this.setState(this.props.characterToEdit)\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable } = this.props\r\n    let character = this.state\r\n    let { characterKey, equippedArtifacts, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedArtifactsObjs = Object.fromEntries(Object.entries(equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let equippedBuild = Character.calculateBuild(this.state, equippedArtifactsObjs)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className=\"thumb-small my-n1\" roundedCircle />\r\n                        <h6 className=\"d-inline\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getLevelWithOverride(this.state)}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant=\"success\" disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artiact Stats</small>\r\n              </Button>\r\n              <Button variant=\"info\" disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={this.props?.onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\"}>Talents <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setOverridelevel={this.setOverridelevel}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable }} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n"],"sourceRoot":""}