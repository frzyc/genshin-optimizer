{"version":3,"sources":["StatDependency.js","Components/StarDisplay.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","Data/WeaponData.js","Components/CustomFormControl.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","Components/ConditionalSelector.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","../node_modules/react-bootstrap/esm/Badge.js","Data/CharacterData.js","DatabaseUtil.js","Components/StatIcon.js","Components/CharacterSelection.js","Artifact/ArtifactCard.js","Artifact/PercentBadge.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/StatDisplay.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","TestPage/TestDisplay.js","Character/Character.js","Stat.js","Util/Util.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Character/CharacterDatabase.js","Util/ConditionalsUtil.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Artifact/ArtifactDatabase.js","Data/ElementalData.js","StatData.js","Weapon/Weapon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"names":["formulaKeyDependency","GetDependencies","modifiers","keys","Object","Formulas","dependencies","Set","forEach","key","InsertDependencies","has","k","add","formula","dependency","Proxy","get","target","prop","receiver","GetFormulaDependency","s","StarIcon","icon","faStar","Stars","stars","colored","className","Array","map","_","i","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","WeaponData","WeaponDataImport","then","imp","default","WeaponLevelKeys","LevelNameData","WeaponTypeData","sword","claymore","catalyst","bow","polearm","FloatFormControl","placeholder","onValueChange","disabled","useState","focus","setFocus","type","toString","onChange","e","parseFloat","onFocus","onBlur","IntFormControl","parseInt","resolveContainerRef","ref","_ref","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","ConditionalSelector","props","conditional","conditionalNum","setConditional","defEle","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","resin","fragile","condensed","exp_books","advice","wit","experience","Badge","React","forwardRef","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","CharacterData","CharacterDataImport","LevelsData","name","level","asend","characterStatBase","crit_rate","crit_dmg","ener_rech","stam","CharacterSpecializedStatKey","DatabaseInitAndVerify","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","values","art","valid","location","getCharacter","artInSlotId","getArtifactIDFromSlot","slotKey","id","equipArtifact","numStars","keyMapping","setKey","mainStatKey","endsWith","replace","maximumEfficiency","Artifact","substatsValidation","updateArtifact","chars","getCharacterDatabase","character","entries","equippedArtifacts","artid","equippedArt","getArtifact","moveToNewLocation","artifactConditionals","filter","cond","srcKey","srcKey2","dmgMode","updateCharacter","StatIcon","hp_base","faTint","hp_final","hp_","hp","atk_base","faFistRaised","atk_character_base","atk_final","atk_","atk","def_base","faShieldAlt","def_final","def_","def","ele_mas","faMagic","faDice","faDiceD20","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","CharacterSelectionDropdownList","onSelect","char","Character","getName","characterKey","CharacterNameDisplay","flat","locationChar","ArtifactCard","artifactId","artifactObj","forceUpdate","onEdit","onDelete","assumeFull","substats","lock","currentEfficiency","mainStatLevel","assFullColor","mainStatVal","getMainStatValue","Stat","getStatUnit","artifactValid","every","sstat","rolls","length","equipOnChar","charId","equipArtifactOnChar","border","bg","Header","xs","md","src","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Body","Title","getSetName","getStatName","stat","numRolls","efficiency","effOpacity","statName","toFixed","style","opacity","percent","Footer","Divider","cid","placement","overlay","pointerEvents","faLock","faLockOpen","Boolean","faEdit","faTrashAlt","PercentBadge","children","badgeColor","isNaN","Math","floor","func","index","Children","child","isValidElement","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","TabContext","Provider","SelectableContext","TabContent","decoratedBsPrefix","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","Tab","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","Error","Container","Content","Pane","createContext","useAccordionToggle","contextEventKey","AccordionContext","AccordionToggle","accordionOnClick","AccordionCollapse","Collapse","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","_objectWithoutProperties","source","excluded","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","DisplayStats","statVal","build","editable","otherProps","buildVal","finalStats","buildDiff","originalVal","getStatValueWithOverride","diff","diffText","fixedUnit","hasOverride","Col","DisplayNewBuildDiff","equippedBuild","newBuild","unit","CharacterArtifactPane","compareAgainstEquipped","setState","showOther","setShowOther","artifactsAssumeFull","statKeys","getDisplayStatKeys","displayStatProps","displayNewBuildProps","formulaKeys","getPrintableFormulaStatKeyList","Row","Card","Button","xl","printStat","printFormula","equipArtifacts","artifactIds","Alert","sm","lg","getSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","ConditionalsUtil","getConditionalNum","getConditionalStats","val","conditionalElement","cnum","state","setStateArtifactConditional","getSetEffectText","getSlotKeys","StatInput","prependEle","defaultValue","restProps","InputGroup","Prepend","Text","Append","undefined","OverlayTrigger","Tooltip","faUndo","CharacterOverviewPane","constellation","setOverride","setConstellation","editLevel","setEditLevel","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","Image","getStar","clamp","getLevel","levelKey","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","StatItem","getStatVariant","WeaponStatsCard","title","stats","mkey","modifier","reduce","accu","multiplier","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","refineIndex","conditionalStats","getWeaponConditionalStat","getWeaponConditional","conditionalEle","faQuoteLeft","getWeaponImg","getWeaponRarity","DropdownButton","getWeaponName","reverse","star","arr","Dropdown","ItemText","getWeaponsOfType","rarity","weaponObj","getLevelName","faGavel","getWeaponPassiveDescription","getWeaponDescription","editingOther","SetEditingOther","additionalKeys","displayStatKeys","push","editStatKeys","otherStatKeys","getElementalKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","getStatNameRaw","CharacterTalentPane","ascension","getAscension","skillDisplayProps","ContextAwareToggle","callback","currentEventKey","decoratedOnClick","expanded","faWindowMinimize","faWindowMaximize","ToggleButtonGroup","ToggleButton","href","rel","eleKey","immunityStatKey","elementImmunity","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","autoInfused","ElementToReactionKeys","includes","statsDisplayKeys","ReactionDisplay","tKey","tText","SkillDisplayCard","talentKey","subtitle","getTalent","asc","enabled","onClickTitle","ReactionComponents","superconduct_dmg","electrocharged_dmg","overloaded_dmg","swirl_dmg","shatter_dmg","information","faQuestionCircle","crystalize_dmg","reactionMode","charEleKey","eleInterArr","Ele","modifiersToFields","mStatKey","basicVal","fixed","statsToFields","talentLimits","header","getTalentLevelKey","talentLvlKey","levelBoost","infuseBtn","getElementalName","tLvl","talentLevelKeys","talentStats","getTalentStats","statsEle","ListGroup","field","FieldDisplay","getTalentImg","getTalentName","Subtitle","getTalentDocument","section","talentText","fields","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","fieldText","fieldVariant","fieldBasic","fieldVal","finalVal","fixedVal","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","CharacterDisplayCard","forceUpdateComponent","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","characterId","getInitialState","Promise","all","getCharacterDataImport","getWeaponDataImport","getDataImport","deepClone","addCharacter","footer","onClose","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","faTimes","defaultActiveKey","Nav","Link","getCDataObj","talent","skill","initialState","auto","burst","ListGroupItem","action","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","horizontal","horizontalVariant","initialBsPrefix","AbstractNav","TestDisplay","removeCharacterById","defVal","getSpecializedStatKey","getSpeicalizedStatVal","getWeaponMainStatValWithOverride","characterObj","baseStat","getIndexFromlevelkey","elementalKey","ElementalData","constellationName","titles","getSpecializedStat","specializeStat","thumbImg","cardImg","img","constIndex","getTalentLevelBoost","talents","talentBoost","boostEntry","find","withBoost","getTalentFields","getTalentStatsAll","statsArr","getTalentConditional","doc","tempCond","getConditionalProp","stacks","fromEntries","skillKey","elemental","infusable","getTalentStatKeyVariant","atkKeys","startsWith","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","PreprocessFormulas","mergeStats","char_ele_key","overrides","hasOwnProperty","specialStatKey","weaponSubKey","getWeaponSubStatValWithOverride","htmlStatsData","StatData","pretty","f","expand","statList","FormulaText","modifiersKeys","modifierText","obj","options","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_multi","electrocharged","superconduct_multi","superconduct","swirl_multi","swirl","shatter_multi","shattered","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","amp_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","abs","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","defineProperty","configurable","enumerable","writable","array","random","getRandomIntInclusive","min","max","ceil","loadFromLocalStorage","data","localStorage","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","closeEnoughFloat","a","b","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","ownKeys","object","enumerableOnly","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","getOwnPropertyDescriptors","defineProperties","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","phy_dmg_bonus","ele_dmg_bonus","2","ArtifactSubStatsData","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","getSubstatEfficiency","getArtifactEfficiency","errMsgs","some","currentNumOfRolls","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","unequipArtifactOnSlot","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","icons","getSetEffectsObj","setEffects","artifactSetEffect","artArr","setNumKeys","charFinalStats","setEffectText","getSlotName","getSlotIcon","getSlotMainStatKeys","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","main","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","initiated","characterDatabase","charIdIndex","isInvalid","getCharacterIdList","getIdNameList","dchar","removeItem","charid","equipArtifactBuild","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","_createForOfIteratorHelper","allowArrayLike","it","F","n","done","_e","err","normalCompletion","didErr","step","next","_e2","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","dependencyKeys","preFormulas","modifierFunc","initial","reactionName","dmgKey","dmgName","str","atkTypeName","dmgModeName","ele_key","getLevelIndex","weaponKey","passiveName","passiveDescription","description","baseStats","sub","weaponType","getWeaponTypeName","_defineProperty"],"mappings":"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","file":"static/js/8.d78eba14.chunk.js","sourcesContent":["import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nconst formulaKeyDependency = {}\r\nconst GetFormulaDependency = (formula) => {\r\n  const dependency = new Set()\r\n  formula(new Proxy({}, { get: (target, prop, receiver) => dependency.add(prop) }))\r\n  return [...dependency]\r\n}\r\nObject.keys(Formulas).forEach(key => formulaKeyDependency[key] = GetFormulaDependency(s => Formulas[key](s)))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  console.log(formulaKeyDependency)\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key) &&\r\n      console.error(\"Formula\", `\"${formulaKey}\"`, \"has dependency with key\", `\"${key}\"`, \"that does not Exist in StatData.\"))\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(Formulas)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n}\r\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst FloatFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseFloat(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\n\r\nconst IntFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseInt(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\nexport {\r\n  FloatFormControl,\r\n  IntFormControl\r\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //this will only run if neither of the database has been initated.\r\n  if (!CharacterDatabase.populateDatebaseFromLocalStorage() & !ArtifactDatabase.populateDatebaseFromLocalStorage()) return\r\n  //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n  let arts = ArtifactDatabase.getArtifactDatabase();\r\n  Object.values(arts).forEach(art => {\r\n    let valid = true\r\n    if (art.location) {\r\n      const locationChar = CharacterDatabase.getCharacter(art.location)\r\n      if (locationChar) {\r\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\r\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\r\n          CharacterDatabase.equipArtifact(art.location, art)\r\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\r\n          art.location = \"\"\r\n          valid = false\r\n        }\r\n      } else {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    //there was a bug that saved the numStars as strings. convert to number.\r\n    if (typeof art.numStars === \"string\") {\r\n      art.numStars = parseInt(art.numStars)\r\n      valid = false\r\n    }\r\n\r\n    //the set keys were changed to camelcase, need to convert for old databases.\r\n    let keyMapping = {\r\n      \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n      \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n      \"Thundering Fury\": \"ThunderingFury\",\r\n      \"Retracing Bolide\": \"RetracingBolide\",\r\n      \"Noblesse Oblige\": \"NoblesseOblige\",\r\n      \"Maiden Beloved\": \"MaidenBeloved\",\r\n      \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n      \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n      \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n      \"Archaic Petra\": \"ArchaicPetra\",\r\n      \"Brave Heart\": \"BraveHeart\",\r\n      \"Tiny Miracle\": \"TinyMiracle\",\r\n      \"Defender's Will\": \"DefendersWill\",\r\n      \"Martial Artist\": \"MartialArtist\",\r\n      \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n      \"The Exile\": \"TheExile\",\r\n      \"Traveling Doctor\": \"TravelingDoctor\",\r\n      \"Lucky Dog\": \"LuckyDog\",\r\n      \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n      \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n      \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n      \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n    }\r\n    if (keyMapping[art.setKey]) {\r\n      art.setKey = keyMapping[art.setKey]\r\n      valid = false\r\n    }\r\n    //key names were changed. convert old DB\r\n    if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n      art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n      valid = false\r\n    }\r\n    //key names were changed. convert old DB\r\n    if (art?.mainStatKey === \"phy_dmg\") {\r\n      art.mainStatKey = \"phy_dmg_bonus\"\r\n      valid = false\r\n    }\r\n    if (!art.maximumEfficiency) {\r\n      Artifact.substatsValidation(art)\r\n      valid = false\r\n    }\r\n    if (!valid)\r\n      ArtifactDatabase.updateArtifact(art)\r\n  })\r\n\r\n  let chars = CharacterDatabase.getCharacterDatabase();\r\n  Object.values(chars).forEach(character => {\r\n    let valid = true;\r\n    //verify character database equipment validity\r\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\r\n      const equippedArt = ArtifactDatabase.getArtifact(artid)\r\n      if (equippedArt && equippedArt.location !== character.id) //the artifact doesnt have the right location...\r\n        ArtifactDatabase.moveToNewLocation(artid, character.id)\r\n      if (!equippedArt) {\r\n        valid = false\r\n        character.equippedArtifacts[slotKey] = \"\"\r\n      }\r\n    })\r\n\r\n    //conditional format was refactored. this makes sure there is no error when using old DB.\r\n    character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\r\n      if (!cond.srcKey || !cond.srcKey2) {\r\n        valid = false\r\n        return false\r\n      }\r\n      return true\r\n    }) ?? []\r\n\r\n    //check for dmgMode\r\n    if (!character.dmgMode) {\r\n      character.dmgMode = \"dmg\"\r\n      valid = false\r\n    }\r\n    if (!valid) {\r\n      CharacterDatabase.updateCharacter(character)\r\n    }\r\n  })\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_character_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Character from \"../Character/Character\";\r\nimport CharacterDatabase from \"../Character/CharacterDatabase\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n    <Dropdown.Item key={id} onClick={() => onSelect(id)}>\r\n      <span>\r\n        <div className=\"mb-n2\"><b>{Character.getName(char.characterKey)}</b></div>\r\n        <small>{char.name}</small>\r\n      </span>\r\n    </Dropdown.Item>)\r\n}\r\nfunction CharacterNameDisplay({ id, flat = false }) {\r\n  let locationChar = CharacterDatabase.getCharacter(id)\r\n  if (locationChar) {\r\n    if (flat) {\r\n      return <span><b>{Character.getName(locationChar.characterKey)}</b> <small>{locationChar?.name}</small></span>\r\n    } else {\r\n      return <span>\r\n        <div className=\"mb-n2\"><b>{Character.getName(locationChar.characterKey)}</b></div>\r\n        <small>{locationChar.name}</small>\r\n      </span>\r\n    }\r\n\r\n  } else {\r\n    return <b>Inventory</b>\r\n  }\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n  CharacterNameDisplay\r\n};\r\n\r\n","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport { CharacterNameDisplay, CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, artifactObj, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId && !artifactObj) return null;\r\n  let art = artifactObj ? artifactObj : ArtifactDatabase.getArtifact(artifactId);\r\n  if (!art) return null;\r\n  let { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location = \"\", lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  let mainStatLevel = assumeFull ? numStars * 4 : level\r\n  let assFullColor = assumeFull && level !== numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\r\n  let artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\r\n  const equipOnChar = (charId) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charId)\r\n    forceUpdate?.()\r\n  }\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\r\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let numRolls = stat?.rolls?.length || 0\r\n          let efficiency = stat?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge percent={currentEfficiency} valid={artifactValid}>\r\n          {currentEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge percent={maximumEfficiency} valid={artifactValid}>\r\n          {maximumEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\"><CharacterNameDisplay id={location} /></Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar()}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={cid => equipOnChar(cid)} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><span><CharacterNameDisplay id={location} /></span></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={location}\r\n                  style={location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    art.lock = !lock\r\n                    ArtifactDatabase.updateArtifact(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(lock || location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Col } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\nfunction DisplayStats({ statKey, character, build, editable, ...otherProps }) {\r\n  let buildVal = build?.finalStats?.[statKey] || 0\r\n  let statVal, buildDiff = null\r\n  if (typeof buildVal === \"string\") {\r\n    statVal = <span>{buildVal}</span>\r\n  } else {\r\n    let originalVal = Character.getStatValueWithOverride(character, statKey)\r\n    if (statKey === \"hp_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"hp_base\")\r\n    else if (statKey === \"def_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"def_base\")\r\n    else if (statKey === \"atk_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"atk_character_base\") + Character.getStatValueWithOverride(character, \"atk_weapon\")\r\n\r\n    let diff = buildVal - originalVal\r\n    let diffText = (diff?.toFixed?.(Stat.fixedUnit(statKey)) || diff) + Stat.getStatUnit(statKey)\r\n    if (diff < 0) buildDiff = <span className=\"text-success\">{diffText}</span>\r\n    else if (diff > 0) buildDiff = <span className=\"text-success\"> +{diffText}</span>\r\n\r\n    if (originalVal || !diff) statVal = <span className={editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}>{(originalVal?.toFixed?.(Stat.fixedUnit(statKey)) || originalVal) + Stat.getStatUnit(statKey)}</span>\r\n  }\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className=\"float-right text-right\">{statVal}{buildDiff}</span>\r\n  </Col>\r\n}\r\nconst DisplayNewBuildDiff = ({ statKey, character, equippedBuild, newBuild, editable, ...otherProps }) => {\r\n  let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right ${editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed?.(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed?.(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nexport {\r\n  DisplayStats,\r\n  DisplayNewBuildDiff,\r\n}","import React, { useState } from 'react';\r\nimport { Accordion, Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { DisplayNewBuildDiff, DisplayStats } from '../../Components/StatDisplay';\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from '../../StatDependency';\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState }) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(characterKey)\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  const formulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, statKeys), build?.finalStats?.modifiers)\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Calculations`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ?\r\n                  statKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                  statKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {formulaKeys.map(key => <Col key={key} xs={12} className=\"mt-2\">\r\n                    <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                      <Card.Header className=\"p-2\">\r\n                        {Stat.printStat(key, build.finalStats)}\r\n                      </Card.Header>\r\n                      <Card.Body className=\"p-2\">\r\n                        <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  )}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n              {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Artifact.getSlotKeys().map(slotKey =>\r\n            build.artifactIds[slotKey] ? <Col sm={6} lg={4} key={build.artifactIds[slotKey]} className=\"mb-2\">\r\n              <ArtifactCard artifactId={build.artifactIds[slotKey]} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport { DisplayNewBuildDiff, DisplayStats } from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"char_level\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={(val) => setOverride(\"char_level\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"char_level\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction StatItem({ statKey, val }) {\r\n  if (!statKey) return null\r\n  return <Col xs={12} lg={6} className=\"px-3\">\r\n    <span><b>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</b></span>\r\n    <span className={`float-right text-right text-${Stat.getStatVariant(statKey)}`} >{val?.toFixed?.(Stat.fixedUnit(statKey)) || val}{Stat.getStatUnit(statKey)}</span>\r\n  </Col>\r\n}\r\nfunction WeaponStatsCard({ title, stats = {}, finalStats = {} }) {\r\n  if (Object.keys(stats ?? {}).length === 0) return null\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <Card.Body className=\"py-2 px-0\"><Row>\r\n      {Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? <React.Fragment key={key} >{Object.entries(val ?? {}).map(([mkey, modifier]) =>\r\n        <StatItem key={mkey} statKey={mkey} val={Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0)} />)}</React.Fragment>\r\n        : <StatItem key={key} statKey={key} val={val} />)}\r\n    </Row></Card.Body>\r\n  </Card>\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon = {} }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex, undefined)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum, undefined)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats, character)}</p>\r\n            <WeaponStatsCard title={\"Main Stats\"} stats={{ atk: weaponDisplayMainVal, [subStatKey]: weaponDisplaySubVal }} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Bonus Stats\"} stats={weaponBonusStats} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Conditional Stats\"} stats={conditionalStats} finalStats={build?.finalStats} />\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  let { editable, character, character: { compareAgainstEquipped }, setOverride, equippedBuild, newBuild } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  let additionalKeys = [\"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const displayStatKeys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp_base\", \"hp\", \"hp_\", \"atk_character_base\", \"atk\", \"atk_\", \"def_base\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\", \"skill_crit_rate\", \"burst_crit_rate\", \"all_dmg_bonus\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              displayStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              displayStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              otherStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ?\r\n            miscStatkeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n            miscStatkeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n","import { faCheckSquare, faQuestionCircle, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, ToggleButton, ToggleButtonGroup, Tooltip } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation, dmgMode }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  //choose which one to display stats for\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button\r\n        // style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"norm_atk\", \"char_atk\", \"plunge\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(Character.getTalentStatKey(\"char_atk\", character, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    //show elemental interactions\r\n    keys.push(...(ElementToReactionKeys[Character.getElementalKey(characterKey)] || []))\r\n    let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n\r\n    //search for dependency\r\n    return Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, keys), build?.finalStats?.modifiers)\r\n  }\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <Accordion>\r\n        <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Options</span>\r\n                <small>Expand below to edit enemy details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ToggleButtonGroup type=\"radio\" value={dmgMode} name=\"dmgOptions\" onChange={(dmgMode) => setState({ dmgMode })}>\r\n                  <ToggleButton value=\"avg_dmg\">Avg. DMG</ToggleButton>\r\n                  <ToggleButton value=\"dmg\">Normal Hit, No Crit</ToggleButton>\r\n                  <ToggleButton value=\"crit_dmg\">Crit Hit DMG</ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Row className=\"mb-2\"><Col>\r\n                <Button variant=\"warning\" >\r\n                  <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                    To get the specific resistance values of enemies, please visit the wiki.\r\n                  </a>\r\n                </Button >\r\n              </Col></Row>\r\n              <Row>\r\n                <Col xs={12} xl={6} className=\"mb-2\">\r\n                  <StatInput\r\n                    name={<b>Enemy Level</b>}\r\n                    value={Character.getStatValueWithOverride(character, \"enemy_level\")}\r\n                    placeholder={Stat.getStatNameRaw(\"enemy_level\")}\r\n                    defaultValue={Character.getBaseStatValue(character, \"enemy_level\")}\r\n                    onValueChange={(val) => setOverride(\"enemy_level\", val)}\r\n                  />\r\n                </Col>\r\n                {[\"physical\", ...Character.getElementalKeys()].map(eleKey => {\r\n                  let statKey = eleKey === \"physical\" ? \"enemy_phy_res\" : `${eleKey}_enemy_ele_res`\r\n                  let immunityStatKey = eleKey === \"physical\" ? \"enemy_phy_immunity\" : `${eleKey}_enemy_ele_immunity`\r\n                  let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                  return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                        <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                      name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                      value={Character.getStatValueWithOverride(character, statKey)}\r\n                      placeholder={Stat.getStatNameRaw(statKey)}\r\n                      defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                      onValueChange={(val) => setOverride(statKey, val)}\r\n                      disabled={elementImmunity}\r\n                    />\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Formulas</span>\r\n                <small>Expand below to see calculation details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n              <Row>\r\n                {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\r\n                  <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                    <Card.Header className=\"p-2\">\r\n                      {Stat.printStat(key, build.finalStats)}\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-2\">\r\n                      <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                )}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {Character.getTalent(characterKey, \"sprint\", false) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_dmg: SuperConductCard,\r\n  electrocharged_dmg: ElectroChargedCard,\r\n  overloaded_dmg: OverloadedCard,\r\n  swirl_dmg: SwirlCard,\r\n  shatter_dmg: ShatteredCard,\r\n  crystalize_dmg: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey, reactionMode = \"none\" }, newBuild, equippedBuild, setState }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let charEleKey = Character.getElementalKey(characterKey)\r\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shatter_dmg\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shatter_dmg\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row>\r\n        <Col ><Row className=\"mb-n2\">\r\n          {eleInterArr.map(key => {\r\n            let Ele = ReactionComponents[key]\r\n            if (!Ele) return null\r\n            let val = build?.finalStats?.[key]\r\n            val = val?.toFixed?.(Stat.fixedUnit(key)) || val\r\n            return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele value={val} /></Col>\r\n          })}\r\n        </Row></Col>\r\n        <Col xs=\"auto\">\r\n          {[\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup\r\n            type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setState({ reactionMode: val === \"none\" ? null : val })}>\r\n            <ToggleButton className=\"p-2\" value={\"none\"}> <h6>No Elemental</h6> <h6>Interactions</h6></ToggleButton >\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Vaporize(Pyro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Pyro)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"hydro\" && <ToggleButton className=\"p-2\" value={\"hydro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Vaporize(Hydro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"cryo\" && <ToggleButton className=\"p-2\" value={\"cryo_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Cryo)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n          </ToggleButtonGroup>}\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"superconduct_dmg\")}</h5>\r\n    <h4 className=\"text-superconduct mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"electrocharged_dmg\")}</h5>\r\n    <h4 className=\"text-electrocharged mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"overloaded_dmg\")}</h5>\r\n    <h4 className=\"text-overloaded mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction SwirlCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"swirl_dmg\")}</h5>\r\n    <h4 className=\"text-swirl mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ value }) {\r\n  let information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"shatter_dmg\")}</h5>\r\n    <h4 className=\"text-shatter mb-0\">\r\n      <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"crystalize_dmg\")}</h5>\r\n    <h4 className=\"text-crystalize mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\n\r\nfunction modifiersToFields(modifiers, finalStats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    value: Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0),\r\n    basicVal: <span>{Object.entries(modifier ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, finalStats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey)\r\n  }))\r\n}\r\nfunction statsToFields(stats, finalStats = {}) {\r\n  return Object.entries(stats).map(([statKey, statVal]) =>\r\n    statKey === \"modifiers\" ? modifiersToFields(statVal, finalStats) : { text: Stat.getStatName(statKey), variant: Stat.getStatVariant(statKey), value: statVal, fixed: Stat.fixedUnit(statKey) }\r\n  ).flat()\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let { talentLvlKey = undefined, levelBoost = 0 } = Character.getTalentLevelKey(character, talentKey, constellation, true)\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n  if (typeof talentLvlKey === \"number\") {\r\n    if (editable) {\r\n      let setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        let talentLevelKeys = state.talentLevelKeys || {}\r\n        talentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  const statsEle = talentStats && <Row><Col>\r\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {statsToFields(talentStats, build?.finalStats).map((field, i) =>\r\n          <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            let conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            conditionalFields = [...Character.getTalentConditionalFields(conditional, conditionalNum, []), ...statsToFields(conditionalStats, build?.finalStats)]\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Col xs={12}>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i} index={i} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        }\r\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\r\n          <div className=\"mb-2\">{talentText}</div>\r\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n        </Col>{conditionalEle}</Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay({ character, character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldVariant = field.variant || \"\"\r\n  if (typeof fieldVariant === \"function\")\r\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldBasic = field.basicVal\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats, character)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = field.value ? field.value : field.finalVal\r\n  if (typeof fieldVal === \"function\")\r\n    fieldVal = fieldVal?.(talentLvlKey, build.finalStats, character)\r\n  let fixedVal = field.fixed || 0\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.finalVal\r\n\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats, character)?.toFixed?.(fixedVal))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) || fieldVal}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}\r\n","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterId)\r\n      this.state = CharacterDatabase.getCharacter(props.characterId)\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    dmgMode: \"dmg\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey), reactionMode: null, autoInfused: false })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.characterId && this.state.id !== this.props.characterId)\r\n      this.setState(CharacterDatabase.getCharacter(this.props.characterId))\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"char_level\")}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && (Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\"}>Talents {(Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\" && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} setState={this.setSetState} setOverride={this.setOverride} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import { Container } from \"react-bootstrap\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport '../StatDependency'\r\nexport default function TestDisplay(props) {\r\n  DatabaseInitAndVerify()\r\n  return <Container>\r\n    <CharacterDisplayCard editable characterId={\"character_2\"} />\r\n  </Container>\r\n}\r\n","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\nimport { GetDependencies } from \"../StatDependency\"\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    if (skillKey === \"phy\") return `phy_${dmgMode}`\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    if (skillKey === \"phy\") return \"physical\"\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_character_base\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats.modifiers)(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of Object.entries(val)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of Object.entries(modifier))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\r\n  })\r\n\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_character_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey, constellation)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    Character.getTalentStatsAll(characterKey, constellation, ascension).forEach(s => this.mergeStats(initialStats, s))\r\n    \r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\r\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\r\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\r\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\r\n    let formulaKeys = Object.keys(FormulaText)\r\n    let modifiersKeys = Object.keys(modifiers)\r\n    return statList.filter(statKey => formulaKeys.includes(statKey) || modifiersKeys.includes(statKey))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_base: (o) => <span>{f(o, \"atk_character_base\")} + {f(o, \"atk_weapon\")} </span>,\r\n  atk_final: (o) => <span>{f(o, \"atk_base\")} * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"plunge_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"plunge_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"plunge_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"plunge_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  amp_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(o, \"ele_mas\")} * exp^(-0.000505 * {f(o, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_plunge_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_plunge_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_plunge_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `plunge_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};\r\n","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance\r\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, numStars, rolls) => {\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars);\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let min = rollData[0] * len;\r\n    let max = rollData[rollData.length - 1] * len;\r\n    return clampPercent(((sum - min) / (max - min)) * 100)\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      if (rollArr.length > 1) substat.rollArr = rollArr\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, numStars, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, numStars, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect).length > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n      if (Object.keys(condStats).length > 0) {\r\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n        Object.entries(condStats).forEach(([statKey, value]) =>\r\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\r\n      }\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else if (!conditionalNum && index < 0) { //nothing to change\r\n      return conditionals\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => artifactDatabase[id] || null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_character_base: { name: \"ATK\", pretty: \"ATK Character Base\" },\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  plunge_atk_dmg_bonus: { name: \"Plunging Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  all_dmg_bonus: { name: \"All DMG Bonus\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elemental Mastery Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elemental Mastery Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elemental Mastery Multiplier Z\", unit: \"multi\" },\r\n  amp_reaction_base_multi: { name: \"Amplifying Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_base: (s) => s.atk_character_base + s.atk_weapon,\r\n  atk_final: (s) => s.atk_base * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.atk_final * s.plunge_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  plunge_crit_dmg: (s) => s.plunge_dmg * s.crit_dmg_multi,\r\n  plunge_avg_dmg: (s) => s.plunge_dmg * s.crit_multi,\r\n  plunge_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.plunge_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  amp_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s.atk_final * s[`${ele}_plunge_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_plunge_dmg`] * s.crit_dmg_multi,\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_plunge_dmg`] * s.crit_multi,\r\n  plunge_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.plunge_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.all_dmg_bonus) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, modifiers = {}) {\r\n  const preFormulas = dependencyKeys.map(key => {\r\n    if (modifiers[key]) {\r\n      const modifierFunc = (stat, initial) => Object.entries(modifiers[key]).reduce((accu, [mkey, multiplier]) =>\r\n        accu + stat[mkey] * multiplier, initial)\r\n      if (key in Formulas) return [key, (s) => modifierFunc(s, Formulas[key](s))]\r\n      return [key, (s) => modifierFunc(s, s[key] ?? StatData?.[key]?.default ?? 0)]\r\n    } else {\r\n      if (key in Formulas) return [key, Formulas[key]]\r\n      return [key, (s) => (s[key] ?? StatData?.[key]?.default ?? 0)]\r\n    }\r\n  })\r\n  return stat => preFormulas.forEach(([key, formula]) => stat[key] = formula(stat))\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  PreprocessFormulas,\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"sourceRoot":""}