{"version":3,"sources":["Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/StarDisplay.js","Components/CustomFormControl.js","Data/WeaponData.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/ConditionalSelector.js","../node_modules/react-bootstrap/esm/Badge.js","StatConstants.js","StatDependency.js","Data/CharacterData.js","Components/StatIcon.js","dbV2KeyMap.js","DatabaseUtil.js","Components/CharacterSelection.js","../node_modules/react-bootstrap/esm/ElementChildren.js","Character/CharacterDisplay/DamageOptionsAndCalculation.js","Artifact/ArtifactCard.js","Artifact/PercentBadge.js","Character/StatInput.js","Components/StatDisplay.js","../node_modules/react-bootstrap/esm/ToggleButton.js","Character/CharacterDisplay/StatDisplayComponent.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ToggleButtonGroup.js","TestPage/TestDisplay.js","Util/Util.js","Stat.js","Build/Build.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Character/Character.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Util/ConditionalsUtil.js","Data/ElementalData.js","Artifact/ArtifactDatabase.js","StatData.js","Weapon/Weapon.js"],"names":["Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","StarIcon","icon","faStar","Stars","stars","colored","className","Array","keys","map","_","i","CustomFormControl","float","placeholder","value","onValueChange","disabled","allowEmpty","useState","focus","setFocus","props","type","toString","onChange","e","target","parseFloat","parseInt","onFocus","onBlur","aria-label","WeaponData","WeaponDataImport","then","imp","default","WeaponLevelKeys","LevelNameData","WeaponTypeData","_objectWithoutProperties","source","excluded","key","sourceKeys","Object","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","ConditionalSelector","conditional","conditionalNum","setConditional","defEle","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","Badge","React","forwardRef","_ref","ref","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","hitTypes","hit","avgHit","critHit","hitMoves","normal","charged","plunging","skill","burst","hitElements","ElementalData","transformativeReactions","overloaded","shattered","electrocharged","superconduct","swirl","amplifyingReactions","vaporize","melt","ReactionMatrix","crystalize","GetFormulaDependency","formula","dependency","Set","Proxy","get","prop","receiver","add","formulaKeyDependency","freeze","fromEntries","Formulas","GetDependencies","modifiers","StatData","dependencies","forEach","InsertDependencies","has","k","CharacterData","CharacterDataImport","LevelsData","name","level","asend","characterStatBase","critRate_","critDMG_","enerRech_","stamina","CharacterSpecializedStatKey","StatIcon","characterHP","faTint","finalHP","hp_","hp","baseATK","faFistRaised","characterATK","finalATK","atk_","atk","characterDEF","faShieldAlt","finalDEF","def_","def","eleMas","faMagic","faDice","faDiceD20","faSync","heal_","faFirstAid","StatIconEle","statKey","changes","char_ele_key","char_level","hp_base","hp_final","atk_character_base","atk_base","atk_final","atk_weapon","def_base","def_final","phy_dmg_bonus","phy_res","anemo_ele_dmg_bonus","geo_ele_dmg_bonus","electro_ele_dmg_bonus","hydro_ele_dmg_bonus","pyro_ele_dmg_bonus","cryo_ele_dmg_bonus","anemo_ele_res","geo_ele_res","electro_ele_res","hydro_ele_res","pyro_ele_res","cryo_ele_res","ener_rech","crit_rate","crit_dmg","stam","heal_bonu","inc_heal","pow_shield","red_cd","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","norm_atk_dmg","char_atk_dmg","plunge_dmg","norm_atk_crit_dmg","char_atk_crit_dmg","plunge_crit_dmg","norm_atk_avg_dmg","char_atk_avg_dmg","plunge_avg_dmg","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","skill_dmg_bonus","burst_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_crit_rate","burst_crit_rate","anemo_skill_dmg","anemo_burst_dmg","anemo_skill_crit_dmg","anemo_burst_crit_dmg","anemo_skill_avg_dmg","anemo_burst_avg_dmg","geo_skill_dmg","geo_burst_dmg","geo_skill_crit_dmg","geo_burst_crit_dmg","geo_skill_avg_dmg","geo_burst_avg_dmg","electro_skill_dmg","electro_burst_dmg","electro_skill_crit_dmg","electro_burst_crit_dmg","electro_skill_avg_dmg","electro_burst_avg_dmg","hydro_skill_dmg","hydro_burst_dmg","hydro_skill_crit_dmg","hydro_burst_crit_dmg","hydro_skill_avg_dmg","hydro_burst_avg_dmg","pyro_skill_dmg","pyro_burst_dmg","pyro_skill_crit_dmg","pyro_burst_crit_dmg","pyro_skill_avg_dmg","pyro_burst_avg_dmg","cryo_skill_dmg","cryo_burst_dmg","cryo_skill_crit_dmg","cryo_burst_crit_dmg","cryo_skill_avg_dmg","cryo_burst_avg_dmg","phy_dmg","phy_crit_dmg","phy_avg_dmg","anemo_ele_dmg","anemo_ele_crit_dmg","anemo_ele_avg_dmg","geo_ele_dmg","geo_ele_crit_dmg","geo_ele_avg_dmg","electro_ele_dmg","electro_ele_crit_dmg","electro_ele_avg_dmg","hydro_ele_dmg","hydro_ele_crit_dmg","hydro_ele_avg_dmg","pyro_ele_dmg","pyro_ele_crit_dmg","pyro_ele_avg_dmg","cryo_ele_dmg","cryo_ele_crit_dmg","cryo_ele_avg_dmg","overload_dmg","overload_dmg_bonus","overload_multi","electrocharged_dmg","electrocharged_dmg_bonus","electrocharged_multi","superconduct_dmg","superconduct_dmg_bonus","superconduct_multi","burning_dmg","burning_dmg_bonus","swirl_dmg","swirl_dmg_bonus","swirl_multi","shatter_dmg","shatter_dmg_bonus","shatter_multi","crystalize_dmg","crystalize_dmg_bonus","melt_dmg_bonus","vaporize_dmg_bonus","pyro_vaporize_normal_dmg","pyro_vaporize_normal_crit_dmg","pyro_vaporize_normal_avg_dmg","pyro_vaporize_chraged_dmg","pyro_vaporize_chraged_crit_dmg","pyro_vaporize_chraged_avg_dmg","pyro_vaporize_plunge_dmg","pyro_vaporize_plunge_crit_dmg","pyro_vaporize_plunge_avg_dmg","pyro_vaporize_skill_dmg","pyro_vaporize_skill_crit_dmg","pyro_vaporize_skill_avg_dmg","pyro_vaporize_burst_dmg","pyro_vaporize_burst_crit_dmg","pyro_vaporize_burst_avg_dmg","pyro_vaporize_ele_dmg","pyro_vaporize_ele_crit_dmg","pyro_vaporize_ele_avg_dmg","hydro_vaporize_normal_dmg","hydro_vaporize_normal_crit_dmg","hydro_vaporize_normal_avg_dmg","hydro_vaporize_chraged_dmg","hydro_vaporize_chraged_crit_dmg","hydro_vaporize_chraged_avg_dmg","hydro_vaporize_plunge_dmg","hydro_vaporize_plunge_crit_dmg","hydro_vaporize_plunge_avg_dmg","hydro_vaporize_skill_dmg","hydro_vaporize_skill_crit_dmg","hydro_vaporize_skill_avg_dmg","hydro_vaporize_burst_dmg","hydro_vaporize_burst_crit_dmg","hydro_vaporize_burst_avg_dmg","hydro_vaporize_ele_dmg","hydro_vaporize_ele_crit_dmg","hydro_vaporize_ele_avg_dmg","pyro_melt_normal_dmg","pyro_melt_normal_crit_dmg","pyro_melt_normal_avg_dmg","pyro_melt_chraged_dmg","pyro_melt_chraged_crit_dmg","pyro_melt_chraged_avg_dmg","pyro_melt_plunge_dmg","pyro_melt_plunge_crit_dmg","pyro_melt_plunge_avg_dmg","pyro_melt_skill_dmg","pyro_melt_skill_crit_dmg","pyro_melt_skill_avg_dmg","pyro_melt_burst_dmg","pyro_melt_burst_crit_dmg","pyro_melt_burst_avg_dmg","pyro_melt_ele_dmg","pyro_melt_ele_crit_dmg","pyro_melt_ele_avg_dmg","cryo_melt_normal_dmg","cryo_melt_normal_crit_dmg","cryo_melt_normal_avg_dmg","cryo_melt_chraged_dmg","cryo_melt_chraged_crit_dmg","cryo_melt_chraged_avg_dmg","cryo_melt_plunge_dmg","cryo_melt_plunge_crit_dmg","cryo_melt_plunge_avg_dmg","cryo_melt_skill_dmg","cryo_melt_skill_crit_dmg","cryo_melt_skill_avg_dmg","cryo_melt_burst_dmg","cryo_melt_burst_crit_dmg","cryo_melt_burst_avg_dmg","cryo_melt_ele_dmg","cryo_melt_ele_crit_dmg","cryo_melt_ele_avg_dmg","enemy_phy_res","enemy_phy_res_multi","enemy_phy_immunity","anemo_enemy_ele_res","anemo_enemy_ele_res_multi","anemo_enemy_ele_immunity","geo_enemy_ele_res","geo_enemy_ele_res_multi","geo_enemy_ele_immunity","electro_enemy_ele_res","electro_enemy_ele_res_multi","electro_enemy_ele_immunity","hydro_enemy_ele_res","hydro_enemy_ele_res_multi","hydro_enemy_ele_immunity","pyro_enemy_ele_res","pyro_enemy_ele_res_multi","pyro_enemy_ele_immunity","cryo_enemy_ele_res","cryo_enemy_ele_res_multi","cryo_enemy_ele_immunity","ele_mas","amp_reaction_base_multi","enemy_level_multi","enemy_level","dmgModeToHitMode","avg_dmg","dmg","DatabaseInitAndVerify","dbVersion","getDatabaseVersion","localStorage","filter","startsWith","character","loadFromLocalStorage","characterKey","equippedArtifacts","dbKey","getItem","id","dmgMode","rest","buildSetting","mainStat","stat","v2change","statFilters","entries","hitMode","saveToLocalStorage","values","artid","art","location","removeItem","ArtifactDisplayState","filterMainStatKey","filterSubstats","charDBJustPopualted","CharacterDatabase","populateDatebaseFromLocalStorage","artDBJustPopualted","ArtifactDatabase","getArtifactDatabase","valid","artInSlotId","getArtifactIDFromSlot","slotKey","equipArtifact","Artifact","substatsValidation","numStars","keyMapping","setKey","mainStatKey","endsWith","replace","substats","obj","updateArtifact","chars","getCharacterDatabase","equippedArt","moveToNewLocation","artifactConditionals","cond","srcKey","srcKey2","updateCharacter","setDatabaseVersion","defVal","version","CharacterSelectionDropdownList","onSelect","getCharacterKeyList","sort","a","b","Character","getName","children","func","index","Children","child","isValidElement","ReactionToggle","reactionMode","setReactionMode","charEleKey","getElementalKey","eleInterArr","ElementToReactionKeys","includes","getWeaponTypeKey","push","defaultValue","val","src","HitModeToggle","setHitMode","DamageOptionsAndCalculation","setState","setOverride","newBuild","equippedBuild","build","ContextAwareToggle","eventKey","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","bg","Header","xs","r","Button","Collapse","Body","href","rel","xl","getStatValueWithOverride","Stat","getStatNameRaw","getBaseStatValue","getElementalKeys","eleKey","immunityStatKey","elementImmunity","prependEle","m","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","finalStats","autoInfused","weaponTypeKey","getPrintableFormulaStatKeyList","statsDisplayKeys","printStat","printFormula","ArtifactCard","artifactId","artifactObj","forceUpdate","onEdit","onDelete","assumeFull","lock","currentEfficiency","maximumEfficiency","mainStatLevel","assFullColor","mainStatVal","getMainStatValue","getStatUnit","artifactValid","every","sstat","rolls","equipOnChar","charKey","equipArtifactOnChar","border","md","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Title","getSetName","getStatName","numRolls","efficiency","effOpacity","statName","toFixed","style","opacity","percent","Footer","Divider","ckey","placement","overlay","pointerEvents","faLock","faLockOpen","Boolean","faEdit","faTrashAlt","PercentBadge","badgeColor","isNaN","Math","floor","StatInput","restProps","Prepend","Text","Append","undefined","faUndo","DisplayStatDiff","label","oldVal","fixed","unit","diff","oldText","diffText","StatDisplay","editable","invalid","fixedUnit","talentKey","sectionIndex","fieldIndex","field","getTalentField","labelVariant","getTalentFieldValue","hasOverride","noop","ToggleButton","checked","inputRef","_useState","focused","setFocused","handleFocus","useCallback","tagName","handleBlur","active","autoComplete","StatDisplayComponent","cardbg","fields","header","getTalentName","JSON","stringify","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","TabContext","Provider","SelectableContext","TabContent","decoratedBsPrefix","TabPane","_useTabContext","context","shouldTransition","makeEventKey","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","Tab","_React$Component","apply","this","arguments","_inheritsLoose","render","Error","Container","Content","Pane","CharacterArtifactPane","artifactsAssumeFull","statKeys","getDisplayStatKeys","hasTalentPage","Row","Col","Card","equipArtifacts","artifactIds","Alert","sm","lg","getSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","ConditionalsUtil","getConditionalNum","getConditionalStats","conditionalElement","cnum","state","setStateArtifactConditional","getSetEffectText","getSlotKeys","CharacterOverviewPane","constellation","setConstellation","editLevel","setEditLevel","elementKey","Img","getCard","Image","getStar","InputGroup","clamp","getLevel","levelKey","OverlayTrigger","Tooltip","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","StatItem","getStatVariant","WeaponStatsCard","title","stats","mkey","modifier","reduce","accu","multiplier","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","refineIndex","conditionalStats","getWeaponConditionalStat","getWeaponConditional","conditionalEle","faQuoteLeft","getWeaponImg","getWeaponRarity","DropdownButton","getWeaponName","reverse","star","arr","Dropdown","ItemText","getWeaponsOfType","rarity","weaponObj","getLevelName","faGavel","getWeaponPassiveDescription","getWeaponDescription","editingOther","SetEditingOther","additionalKeys","displayStatKeys","editStatKeys","otherStatKeys","ele","specializedStatKey","specializedStatVal","specializedStatUnit","isPercentSpecialStatSelect","displayNewBuildProps","getStatNamePretty","getStatNameWithPercent","CharacterTalentPane","ascension","getAscension","skillDisplayProps","ReactionDisplay","tKey","tText","SkillDisplayCard","subtitle","getTalent","asc","enabled","onClickTitle","ReactionComponents","superconduct_hit","electrocharged_hit","overloaded_hit","swirl_hit","shattered_hit","information","faQuestionCircle","crystalize_hit","Ele","modifiersToFields","mStatKey","formulaText","statsToFields","statVal","flat","talentLimits","talentLevelKeys","otherProps","infuseBtn","getElementalName","talentLvlKey","talentLvlKeyRaw","levelBoost","getTalentLevelBoost","tLvl","stateTalentLevelKeys","talentStats","getTalentStats","statsEle","ListGroup","FieldDisplay","getTalentImg","Subtitle","getTalentDocument","section","talentText","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","compareAgainstEquipped","fieldText","fieldVariant","fieldBasic","fieldVal","fixedVal","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","CharacterDisplayCard","forceUpdateComponent","setCharacterKey","getInitialState","char","getIntialWeapon","setLevelKey","baseStatOverrides","Promise","all","getCharacterDataImport","getWeaponDataImport","getDataImport","prevProps","deepClone","footer","onClose","tabName","calculateBuild","HeaderIconDisplay","getThumb","commonPaneProps","u","ButtonGroup","DropdownToggle","getAllCharacterKeys","getlevelNames","getlevelKeys","lvlKey","faTimes","defaultActiveKey","Nav","Link","initialState","auto","ToggleButtonGroup","controlledProps","getValues","concat","invariant","toggle","_child$props","childVal","childOnChange","cloneElement","chainFunction","inputVal","event","isActive","n","handleToggle","vertical","TestDisplay","getRandomElementFromArray","array","random","getRandomIntInclusive","min","max","ceil","data","parse","setItem","closeEnoughFloat","abs","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","objMultiplication","multi","htmlStatsData","pretty","f","expand","statList","formulaKeys","FormulaText","newModifiersKeys","x","modifierText","options","statUnit","reactionMatrixElementRenderer","o","sign","disVal","powerText","heal_multi","enemyLevel_multi","res","move","assign","amplificative_dmg_","reaction","variants","baseMulti","transformative_dmg_","crystalize_eleMas_","crystalize_multi","calculateTotalBuildNumber","artifactsBySlot","setFilters","setKeys","filteredArtifactsBySlot","slotKeys","artifactsBySet","artifact","setCount","result","slotPerm","num","artifactSetPermutations","artifacts","skillKey","elemental","characterEle","weaponType","getTalentStatKeyVariant","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","formulaDB","getCDataObj","formulaKey","tk","find","remove","getSpecializedStatKey","getSpeicalizedStatVal","getWeaponMainStatValWithOverride","characterObj","baseStat","getIndexFromlevelkey","elementalKey","getElementalKeysWithoutPhysical","constellationName","getTitles","titles","getSpecializedStat","specializeStat","thumbImg","cardImg","img","constIndex","talent","talents","talentBoost","boostEntry","document","getTalentDocumentSections","getTalentStatsAll","statsArr","getTalentConditional","sections","tempCond","getConditionalProp","stacks","infusable","basicKeys","transReactions","charFormulas","genericAvgHit","reactions","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","PreprocessFormulas","mergeStats","overrides","hasOwnProperty","specialStatKey","s","weaponSubKey","getWeaponSubStatValWithOverride","initiated","characterDatabase","isInvalid","getIdNameList","split","dchar","unequipArtifactOnSlot","equipArtifactBuild","clearDatabase","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","physical_dmg_","ele_dmg_","2","ArtifactSubStatsData","ArtifactSubstatsMinMax","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","getSubstatEfficiency","getArtifactEfficiency","errMsgs","some","currentNumOfRolls","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","maxPerRoll","getSubstatAllMax","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","icons","getSetEffectsObj","setEffects","artifactSetEffect","artArr","setNumKeys","charFinalStats","setEffectText","getSlotName","getSlotIcon","getSlotMainStatKeys","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","main","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","_createForOfIteratorHelper","allowArrayLike","it","F","done","_e","err","normalCompletion","didErr","step","next","_e2","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","physical","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","const","characterLevel","weaponATK","dmg_","weakspotDMG_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","staminaDec_","staminaGlidingDec_","staminaChargedDec_","crystalize_dmg_","burning_dmg_","enemyLevel","pow","dependencyKeys","debug","constData","formulaList","tmp","constModifier","dynamicModifier","constFunc","dynamicFunc","funcIndicator","console","log","error","moveName","eleName","opt","typeName","reactionName","getLevelIndex","weaponKey","passiveName","passiveDescription","description","baseStats","sub","getWeaponTypeName","getWeaponTypeKeys"],"mappings":"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","file":"static/js/9.c9924c21.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\nimport cryo from './Element_Cryo.png'\nimport dendro from './Element_Dendro.png'\nimport electro from './Element_Electro.png'\nimport geo from './Element_Geo.png'\nimport hydro from './Element_Hydro.png'\nimport pyro from './Element_Pyro.png'\n\nimport bow from './Weapon-class-bow-icon.png'\nimport catalyst from './Weapon-class-catalyst-icon.png'\nimport claymore from './Weapon-class-claymore-icon.png'\nimport polearm from './Weapon-class-polearm-icon.png'\nimport sword from './Weapon-class-sword-icon.png'\n\nimport fragile from './Item_Fragile_Resin.png'\nimport condensed from './Item_Condensed_Resin.png'\n\n//EXP BOOKS\nimport advice from './Item_Wanderer\\'s_Advice.png'\nimport wit from './Item_Hero\\'s_Wit.png'\nimport experience from './Item_Adventurer\\'s_Experience.png'\n\nlet Assets = {\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\n  resin: {\n    fragile,\n    condensed\n  },\n  exp_books: {\n    advice,\n    wit,\n    experience,\n  }\n};\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { faStar } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\n</span>\n\nexport {\n  StarIcon,\n  Stars\n}\n","import React, { useState } from 'react'\nimport FormControl from 'react-bootstrap/FormControl'\n\nconst CustomFormControl = ({ float = false, placeholder, value, onValueChange, disabled, allowEmpty = false }) => {\n  let [focus, setFocus] = useState(false)\n  let displayValue = value\n  if (allowEmpty) displayValue = typeof value === \"number\" ? value : \"\"\n  else displayValue = !value && focus ? \"\" : (value?.toString?.() || value)\n  const props = {\n    type: \"number\",\n    className: \"hide-appearance\",\n    placeholder,\n    value: displayValue,\n    disabled,\n    onChange: (e) => {\n      let value = e.target.value;\n      if (float) {\n        if (allowEmpty) value = value === \"\" ? null : (parseFloat(value) || 0)\n        else value = parseFloat(value) || 0\n      } else {\n        if (allowEmpty) value = value === \"\" ? null : (parseInt(value) || 0)\n        else value = parseInt(value) || 0\n      }\n      onValueChange?.(value);\n    },\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n  }\n  return <FormControl {...props} aria-label=\"custom-input\" />\n}\nexport default CustomFormControl;","let WeaponData = {}\nlet WeaponDataImport = import('./Weapons')\nWeaponDataImport.then(imp => {\n  WeaponData = imp.default\n  WeaponDataImport = null\n})\n\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\nconst WeaponTypeData = {\n  sword: \"Sword\",\n  claymore: \"Claymore\",\n  catalyst: \"Catalyst\",\n  bow: \"Bow\",\n  polearm: \"Polearm\"\n}\n\nexport {\n  WeaponData,\n  WeaponDataImport,\n  WeaponLevelKeys,\n  LevelNameData,\n  WeaponTypeData\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport Badge from 'react-bootstrap/Badge'\nimport Button from 'react-bootstrap/Button'\nimport Dropdown from 'react-bootstrap/Dropdown'\n\nexport default function ConditionalSelector(props) {\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\n  if (!conditional) return defEle\n  if (Array.isArray(conditional)) {\n    let selectedConditionalNum = conditionalNum\n    let selectedConditional = null\n    for (const curConditional of conditional) {\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\n      else {\n        selectedConditional = curConditional;\n        break;\n      }\n    }\n    if (!selectedConditional) {\n      selectedConditionalNum = 0\n      selectedConditional = conditional[0]\n    }\n\n    //multi conditional\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\n    let count = 0;\n    return <Dropdown>\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        <Dropdown.Item onClick={() => setConditional(0)}>\n          <span>Not Active</span>\n        </Dropdown.Item>\n        {conditional.map((condial, i) =>\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\n            let tempcount = ++count\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\n            </Dropdown.Item>\n          })}</React.Fragment>\n        )}\n      </Dropdown.Menu>\n    </Dropdown>\n  } else if (conditional.maxStack > 1) {\n    //stacking conditional\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\n    return <Dropdown>\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        <Dropdown.Item onClick={() => setConditional(0)}>\n          <span>Not Active</span>\n        </Dropdown.Item>\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\n          </Dropdown.Item>)}\n      </Dropdown.Menu>\n    </Dropdown>\n  } else if (conditional.maxStack === 1) {\n    //single boolean conditional\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\n    </Button>\n  }\n\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import ElementalData from \"./Data/ElementalData\";\n\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\nexport const hitElements = ElementalData\nexport const transformativeReactions = {\n  overloaded: [ \"Overloaded\", \"pyro\", 4 ],\n  shattered: [ \"Shattered\", \"physical\", 3 ],\n  electrocharged: [ \"Electro-Charged\", \"electro\", 2.4 ],\n  superconduct: [ \"Superconduct\", \"cryo\", 1 ],\n  swirl: [ \"Swirl\", \"anemo\", 1.2 ],\n}\nexport const amplifyingReactions = {\n  vaporize: [\"Vaporize\", { pyro: 1.5, hydro: 2 }],\n  melt: [\"Melt\", { pyro: 2, cryo: 1.5 }],\n}\nexport const otherReactions = {\n  burning: \"Burning\",\n  crystalize: \"Crystalize\",\n}\nexport const ReactionMatrix = {\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\n}\n","import { Formulas, StatData } from \"./StatData\"\n\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\nfunction GetFormulaDependency(formula) {\n  const dependency = new Set()\n  formula(\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\n  return [...dependency]\n}\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\n))\n\nif (process.env.NODE_ENV === \"development\") {\n  let statKeys = Object.keys(StatData)\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\n    dependencies.forEach(key =>\n      !statKeys.includes(key) &&\n        console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\n  )\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\n    StatData[formulaKey]?.const && dependencies.forEach(key => \n      !StatData[key]?.const &&\n        console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\n    )\n  )\n}\n\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\n  let dependencies = new Set()\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\n  return [...dependencies]\n}\nfunction InsertDependencies(key, modifiers, dependencies) {\n  if (dependencies.has(key)) return\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\n  dependencies.add(key)\n}\n\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\nconst reduceOptimizationTarget = (optimizationTarget) =>\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0]] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\n\n\nexport {\n  GetFormulaDependency,\n  GetDependencies,\n  reduceOptimizationTarget,\n}\n","let CharacterData = {}\nlet CharacterDataImport = import('./Characters')\nCharacterDataImport.then(imp => {\n  CharacterData = imp.default\n  CharacterDataImport = null\n})\n// import characters from \nconst LevelsData = {\n  \"L1\": {\n    name: \"Lv. 1\",\n    level: 1,\n    asend: 0\n  },\n  \"L20\": {\n    name: \"Lv. 20\",\n    level: 20,\n    asend: 0\n  },\n  \"L20A\": {\n    name: \"Lv. 20 As.1\",\n    level: 20,\n    asend: 1\n\n  },\n  \"L40\": {\n    name: \"Lv. 40\",\n    level: 40,\n    asend: 1\n  },\n  \"L40A\": {\n    name: \"Lv. 40 As.2\",\n    level: 40,\n    asend: 2\n  },\n\n  \"L50\": {\n    name: \"Lv. 50\",\n    level: 50,\n    asend: 2\n  },\n  \"L50A\": {\n    name: \"Lv. 50 As.3\",\n    level: 50,\n    asend: 3\n  },\n  \"L60\": {\n    name: \"Lv. 60\",\n    level: 60,\n    asend: 3\n  },\n  \"L60A\": {\n    name: \"Lv. 60 As.4\",\n    level: 60,\n    asend: 4\n  },\n  \"L70\": {\n    name: \"Lv. 70\",\n    level: 70,\n    asend: 4\n  },\n  \"L70A\": {\n    name: \"Lv. 70 As.5\",\n    level: 70,\n    asend: 5\n  },\n\n  \"L80\": {\n    name: \"Lv. 80\",\n    level: 80,\n    asend: 5\n  },\n  \"L80A\": {\n    name: \"Lv. 80 As.6\",\n    level: 80,\n    asend: 6\n  },\n  \"L90\": {\n    name: \"Lv. 90\",\n    level: 90,\n    asend: 6\n  }\n\n}\nconst characterStatBase = {\n  critRate_: 5,\n  critDMG_: 50,\n  enerRech_: 100,\n  stamina: 100\n}\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\n\nexport {\n  LevelsData,\n  characterStatBase,\n  CharacterData,\n  CharacterDataImport,\n  CharacterSpecializedStatKey\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst StatIcon = {\n  characterHP: faTint,\n  finalHP: faTint,\n  hp_: faTint,\n  hp: faTint,\n\n  baseATK: faFistRaised,\n  characterATK: faFistRaised,\n  finalATK: faFistRaised,\n  atk_: faFistRaised,\n  atk: faFistRaised,\n\n  characterDEF: faShieldAlt,\n  finalDEF: faShieldAlt,\n  def_: faShieldAlt,\n  def: faShieldAlt,\n\n  eleMas: faMagic,\n  critRate_: faDice,\n  critDMG_: faDiceD20,\n  enerRech_: faSync,\n  heal_: faFirstAid,\n}\n\nconst StatIconEle = (statKey) =>\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\n\nexport default StatIcon\n\nexport {\n  StatIconEle\n}","//for DB v2, we changed a bunch of keys.\nconst changes = {\n  char_ele_key: \"characterEle\",\n  char_level: \"characterLevel\",\n\n  hp_base: \"characterHP\",\n  hp_final: \"finalHP\",\n  atk_character_base: \"characterATK\",\n  atk_base: \"baseATK\",\n  atk_final: \"finalATK\",\n  atk_weapon: \"weaponATK\",\n  def_base: \"characterDEF\",\n  def_final: \"finalDEF\",\n  phy_dmg_bonus: \"physical_dmg_\",\n  phy_res: \"physical_res_\",\n  anemo_ele_dmg_bonus: \"anemo_dmg_\",\n  geo_ele_dmg_bonus: \"geo_dmg_\",\n  electro_ele_dmg_bonus: \"electro_dmg_\",\n  hydro_ele_dmg_bonus: \"hydro_dmg_\",\n  pyro_ele_dmg_bonus: \"pyro_dmg_\",\n  cryo_ele_dmg_bonus: \"cryo_dmg_\",\n  anemo_ele_res: \"anemo_res_\",\n  geo_ele_res: \"geo_res_\",\n  electro_ele_res: \"electro_res_\",\n  hydro_ele_res: \"hydro_res_\",\n  pyro_ele_res: \"pyro_res_\",\n  cryo_ele_res: \"cryo_res_\",\n  ener_rech: \"enerRech_\",\n  crit_rate: \"critRate_\",\n  crit_dmg: \"critDMG_\",\n  stam: \"stamina\",\n  heal_bonu: \"heal_\",\n  inc_heal: \"incHeal_\",\n  pow_shield: \"powShield_\",\n  red_cd: \"cdRed_\",\n  skill_cd_red: \"skillCDRed_\",\n  burst_cd_red: \"burstCDRed_\",\n  all_dmg_bonus: \"dmg_\",\n  move_spd: \"moveSPD_\",\n  atk_spd: \"atkSPD_\",\n  weakspot_dmg: \"weakspotDMG_\",\n  stamina_dec: \"staminaDec_\",\n  stamina_gliding_dec: \"staminaGlidingDec_\",\n  stamina_charged_dec: \"staminaChargedDec_\",\n  ele_mas_multi_x: \"eleMasX\",\n  ele_mas_multi_y: \"eleMasY\",\n  ele_mas_multi_z: \"eleMasZ\",\n\n  norm_atk_dmg: \"physical_normal_hit\",\n  char_atk_dmg: \"physical_charged_hit\",\n  plunge_dmg: \"physical_plunging_hit\",\n  norm_atk_crit_dmg: \"physical_normal_critHit\",\n  char_atk_crit_dmg: \"physical_charged_critHit\",\n  plunge_crit_dmg: \"physical_plunging_critHit\",\n  norm_atk_avg_dmg: \"physical_normal_avgHit\",\n  char_atk_avg_dmg: \"physical_charged_avgHit\",\n  plunge_avg_dmg: \"physical_plunging_avgHit\",\n  norm_atk_dmg_bonus: \"normal_dmg_\",\n  char_atk_dmg_bonus: \"charged_dmg_\",\n  plunge_atk_dmg_bonus: \"plunging_dmg_\",\n  skill_dmg_bonus: \"skill_dmg_\",\n  burst_dmg_bonus: \"burst_dmg_\",\n  norm_atk_crit_rate: \"normal_critRate_\",\n  char_atk_crit_rate: \"charged_critRate_\",\n  skill_crit_rate: \"skill_critRate_\",\n  burst_crit_rate: \"burst_critRate_\",\n\n  anemo_skill_dmg: \"anemo_skill_hit\",\n  anemo_burst_dmg: \"anemo_burst_hit\",\n  anemo_skill_crit_dmg: \"anemo_skill_critHit\",\n  anemo_burst_crit_dmg: \"anemo_burst_critHit\",\n  anemo_skill_avg_dmg: \"anemo_skill_avgHit\",\n  anemo_burst_avg_dmg: \"anemo_burst_avgHit\",\n  geo_skill_dmg: \"geo_skill_hit\",\n  geo_burst_dmg: \"geo_burst_hit\",\n  geo_skill_crit_dmg: \"geo_skill_critHit\",\n  geo_burst_crit_dmg: \"geo_burst_critHit\",\n  geo_skill_avg_dmg: \"geo_skill_avgHit\",\n  geo_burst_avg_dmg: \"geo_burst_avgHit\",\n  electro_skill_dmg: \"electro_skill_hit\",\n  electro_burst_dmg: \"electro_burst_hit\",\n  electro_skill_crit_dmg: \"electro_skill_critHit\",\n  electro_burst_crit_dmg: \"electro_burst_critHit\",\n  electro_skill_avg_dmg: \"electro_skill_avgHit\",\n  electro_burst_avg_dmg: \"electro_burst_avgHit\",\n  hydro_skill_dmg: \"hydro_skill_hit\",\n  hydro_burst_dmg: \"hydro_burst_hit\",\n  hydro_skill_crit_dmg: \"hydro_skill_critHit\",\n  hydro_burst_crit_dmg: \"hydro_burst_critHit\",\n  hydro_skill_avg_dmg: \"hydro_skill_avgHit\",\n  hydro_burst_avg_dmg: \"hydro_burst_avgHit\",\n  pyro_skill_dmg: \"pyro_skill_hit\",\n  pyro_burst_dmg: \"pyro_burst_hit\",\n  pyro_skill_crit_dmg: \"pyro_skill_critHit\",\n  pyro_burst_crit_dmg: \"pyro_burst_critHit\",\n  pyro_skill_avg_dmg: \"pyro_skill_avgHit\",\n  pyro_burst_avg_dmg: \"pyro_burst_avgHit\",\n  cryo_skill_dmg: \"cryo_skill_hit\",\n  cryo_burst_dmg: \"cryo_burst_hit\",\n  cryo_skill_crit_dmg: \"cryo_skill_critHit\",\n  cryo_burst_crit_dmg: \"cryo_burst_critHit\",\n  cryo_skill_avg_dmg: \"cryo_skill_avgHit\",\n  cryo_burst_avg_dmg: \"cryo_burst_avgHit\",\n\n  phy_dmg: \"physical_hit\",\n  phy_crit_dmg: \"physical_critHit\",\n  phy_avg_dmg: \"physical_avgHit\",\n  anemo_ele_dmg: \"anemo_hit\",\n  anemo_ele_crit_dmg: \"anemo_critHit\",\n  anemo_ele_avg_dmg: \"anemo_avgHit\",\n  geo_ele_dmg: \"geo_hit\",\n  geo_ele_crit_dmg: \"geo_critHit\",\n  geo_ele_avg_dmg: \"geo_avgHit\",\n  electro_ele_dmg: \"electro_hit\",\n  electro_ele_crit_dmg: \"electro_critHit\",\n  electro_ele_avg_dmg: \"electro_avgHit\",\n  hydro_ele_dmg: \"hydro_hit\",\n  hydro_ele_crit_dmg: \"hydro_critHit\",\n  hydro_ele_avg_dmg: \"hydro_avgHit\",\n  pyro_ele_dmg: \"pyro_hit\",\n  pyro_ele_crit_dmg: \"pyro_critHit\",\n  pyro_ele_avg_dmg: \"pyro_avgHit\",\n  cryo_ele_dmg: \"cryo_hit\",\n  cryo_ele_crit_dmg: \"cryo_critHit\",\n  cryo_ele_avg_dmg: \"cryo_avgHit\",\n\n  overload_dmg: \"overload_hit\",\n  overload_dmg_bonus: \"overload_dmg_\",\n  overload_multi: \"overload_multi\",\n  electrocharged_dmg: \"electrocharged_hit\",\n  electrocharged_dmg_bonus: \"electrocharged_dmg_\",\n  electrocharged_multi: \"electrocharged_multi\",\n  superconduct_dmg: \"superconduct_hit\",\n  superconduct_dmg_bonus: \"superconduct_dmg_\",\n  superconduct_multi: \"superconduct_multi\",\n  burning_dmg: \"burning_hit\",\n  burning_dmg_bonus: \"burning_dmg_\",\n  swirl_dmg: \"swirl_hit\",\n  swirl_dmg_bonus: \"swirl_dmg_\",\n  swirl_multi: \"swirl_multi\",\n  shatter_dmg: \"shattered_hit\",\n  shatter_dmg_bonus: \"shattered_dmg_\",\n  shatter_multi: \"shattered_multi\",\n  crystalize_dmg: \"crystalize_hit\",\n  crystalize_dmg_bonus: \"crystalize_dmg_\",\n\n  melt_dmg_bonus: \"melt_dmg_\",\n  vaporize_dmg_bonus: \"vaporize_dmg_\",\n\n  pyro_vaporize_normal_dmg: \"pyro_vaporize_normal_hit\",\n  pyro_vaporize_normal_crit_dmg: \"pyro_vaporize_normal_critHit\",\n  pyro_vaporize_normal_avg_dmg: \"pyro_vaporize_normal_avgHit\",\n  pyro_vaporize_chraged_dmg: \"pyro_vaporize_chraged_hit\",\n  pyro_vaporize_chraged_crit_dmg: \"pyro_vaporize_chraged_critHit\",\n  pyro_vaporize_chraged_avg_dmg: \"pyro_vaporize_chraged_avgHit\",\n  pyro_vaporize_plunge_dmg: \"pyro_vaporize_plunging_hit\",\n  pyro_vaporize_plunge_crit_dmg: \"pyro_vaporize_plunging_critHit\",\n  pyro_vaporize_plunge_avg_dmg: \"pyro_vaporize_plunging_avgHit\",\n  pyro_vaporize_skill_dmg: \"pyro_vaporize_skill_hit\",\n  pyro_vaporize_skill_crit_dmg: \"pyro_vaporize_skill_critHit\",\n  pyro_vaporize_skill_avg_dmg: \"pyro_vaporize_skill_avgHit\",\n  pyro_vaporize_burst_dmg: \"pyro_vaporize_burst_hit\",\n  pyro_vaporize_burst_crit_dmg: \"pyro_vaporize_burst_critHit\",\n  pyro_vaporize_burst_avg_dmg: \"pyro_vaporize_burst_avgHit\",\n  pyro_vaporize_ele_dmg: \"pyro_vaporize_hit\",\n  pyro_vaporize_ele_crit_dmg: \"pyro_vaporize_critHit\",\n  pyro_vaporize_ele_avg_dmg: \"pyro_vaporize_avgHit\",\n  hydro_vaporize_normal_dmg: \"hydro_vaporize_normal_hit\",\n  hydro_vaporize_normal_crit_dmg: \"hydro_vaporize_normal_critHit\",\n  hydro_vaporize_normal_avg_dmg: \"hydro_vaporize_normal_avgHit\",\n  hydro_vaporize_chraged_dmg: \"hydro_vaporize_chraged_hit\",\n  hydro_vaporize_chraged_crit_dmg: \"hydro_vaporize_chraged_critHit\",\n  hydro_vaporize_chraged_avg_dmg: \"hydro_vaporize_chraged_avgHit\",\n  hydro_vaporize_plunge_dmg: \"hydro_vaporize_plunging_hit\",\n  hydro_vaporize_plunge_crit_dmg: \"hydro_vaporize_plunging_critHit\",\n  hydro_vaporize_plunge_avg_dmg: \"hydro_vaporize_plunging_avgHit\",\n  hydro_vaporize_skill_dmg: \"hydro_vaporize_skill_hit\",\n  hydro_vaporize_skill_crit_dmg: \"hydro_vaporize_skill_critHit\",\n  hydro_vaporize_skill_avg_dmg: \"hydro_vaporize_skill_avgHit\",\n  hydro_vaporize_burst_dmg: \"hydro_vaporize_burst_hit\",\n  hydro_vaporize_burst_crit_dmg: \"hydro_vaporize_burst_critHit\",\n  hydro_vaporize_burst_avg_dmg: \"hydro_vaporize_burst_avgHit\",\n  hydro_vaporize_ele_dmg: \"hydro_vaporize_hit\",\n  hydro_vaporize_ele_crit_dmg: \"hydro_vaporize_critHit\",\n  hydro_vaporize_ele_avg_dmg: \"hydro_vaporize_avgHit\",\n  pyro_melt_normal_dmg: \"pyro_melt_normal_hit\",\n  pyro_melt_normal_crit_dmg: \"pyro_melt_normal_critHit\",\n  pyro_melt_normal_avg_dmg: \"pyro_melt_normal_avgHit\",\n  pyro_melt_chraged_dmg: \"pyro_melt_chraged_hit\",\n  pyro_melt_chraged_crit_dmg: \"pyro_melt_chraged_critHit\",\n  pyro_melt_chraged_avg_dmg: \"pyro_melt_chraged_avgHit\",\n  pyro_melt_plunge_dmg: \"pyro_melt_plunging_hit\",\n  pyro_melt_plunge_crit_dmg: \"pyro_melt_plunging_critHit\",\n  pyro_melt_plunge_avg_dmg: \"pyro_melt_plunging_avgHit\",\n  pyro_melt_skill_dmg: \"pyro_melt_skill_hit\",\n  pyro_melt_skill_crit_dmg: \"pyro_melt_skill_critHit\",\n  pyro_melt_skill_avg_dmg: \"pyro_melt_skill_avgHit\",\n  pyro_melt_burst_dmg: \"pyro_melt_burst_hit\",\n  pyro_melt_burst_crit_dmg: \"pyro_melt_burst_critHit\",\n  pyro_melt_burst_avg_dmg: \"pyro_melt_burst_avgHit\",\n  pyro_melt_ele_dmg: \"pyro_melt_hit\",\n  pyro_melt_ele_crit_dmg: \"pyro_melt_critHit\",\n  pyro_melt_ele_avg_dmg: \"pyro_melt_avgHit\",\n  cryo_melt_normal_dmg: \"cryo_melt_normal_hit\",\n  cryo_melt_normal_crit_dmg: \"cryo_melt_normal_critHit\",\n  cryo_melt_normal_avg_dmg: \"cryo_melt_normal_avgHit\",\n  cryo_melt_chraged_dmg: \"cryo_melt_chraged_hit\",\n  cryo_melt_chraged_crit_dmg: \"cryo_melt_chraged_critHit\",\n  cryo_melt_chraged_avg_dmg: \"cryo_melt_chraged_avgHit\",\n  cryo_melt_plunge_dmg: \"cryo_melt_plunging_hit\",\n  cryo_melt_plunge_crit_dmg: \"cryo_melt_plunging_critHit\",\n  cryo_melt_plunge_avg_dmg: \"cryo_melt_plunging_avgHit\",\n  cryo_melt_skill_dmg: \"cryo_melt_skill_hit\",\n  cryo_melt_skill_crit_dmg: \"cryo_melt_skill_critHit\",\n  cryo_melt_skill_avg_dmg: \"cryo_melt_skill_avgHit\",\n  cryo_melt_burst_dmg: \"cryo_melt_burst_hit\",\n  cryo_melt_burst_crit_dmg: \"cryo_melt_burst_critHit\",\n  cryo_melt_burst_avg_dmg: \"cryo_melt_burst_avgHit\",\n  cryo_melt_ele_dmg: \"cryo_melt_hit\",\n  cryo_melt_ele_crit_dmg: \"cryo_melt_critHit\",\n  cryo_melt_ele_avg_dmg: \"cryo_melt_avgHit\",\n\n  enemy_phy_res: \"physical_enemyRes_\",\n  enemy_phy_res_multi: \"physical_enemyRes_multi\",\n  enemy_phy_immunity: \"physical_enemyImmunity\",\n  anemo_enemy_ele_res: \"anemo_enemyRes_\",\n  anemo_enemy_ele_res_multi: \"anemo_enemyRes_multi\",\n  anemo_enemy_ele_immunity: \"anemo_enemyImmunity\",\n  geo_enemy_ele_res: \"geo_enemyRes_\",\n  geo_enemy_ele_res_multi: \"geo_enemyRes_multi\",\n  geo_enemy_ele_immunity: \"geo_enemyImmunity\",\n  electro_enemy_ele_res: \"electro_enemyRes_\",\n  electro_enemy_ele_res_multi: \"electro_enemyRes_multi\",\n  electro_enemy_ele_immunity: \"electro_enemyImmunity\",\n  hydro_enemy_ele_res: \"hydro_enemyRes_\",\n  hydro_enemy_ele_res_multi: \"hydro_enemyRes_multi\",\n  hydro_enemy_ele_immunity: \"hydro_enemyImmunity\",\n  pyro_enemy_ele_res: \"pyro_enemyRes_\",\n  pyro_enemy_ele_res_multi: \"pyro_enemyRes_multi\",\n  pyro_enemy_ele_immunity: \"pyro_enemyImmunity\",\n  cryo_enemy_ele_res: \"cryo_enemyRes_\",\n  cryo_enemy_ele_res_multi: \"cryo_enemyRes_multi\",\n  cryo_enemy_ele_immunity: \"cryo_enemyImmunity\",\n\n  ele_mas: \"eleMas\",\n  amp_reaction_base_multi: \"ampReactionBase_multi\",\n\n  enemy_level_multi: \"enemyLevel_multi\",\n  enemy_level: \"enemyLevel\"\n}\n/*\nconst same = [\n  hp, hp_, atk, atk_, def, def_, pyro_vaporize_multi, hydro_vaporize_multi, pyro_melt_multi, cryo_melt_multi,\n]\n\nconst removed = [\n  norm_atk_crit_multi, char_atk_crit_multi, norm_atk_bonus_multi, char_atk_bonus_multi, plunge_bonus_multi, skill_crit_multi, burst_crit_multi, skill_bonus_multi, burst_bonus_multi, phy_bonus_multi, anemo_ele_bonus_multi, geo_ele_bonus_multi, electro_ele_bonus_multi, hydro_ele_bonus_multi, pyro_ele_bonus_multi, cryo_ele_bonus_multi, crit_dmg_multi, crit_multi,\n]\n\nconst aded = [\n  plunging_critRate_, final_normal_critRate_, final_charged_critRate_, final_plunging_critRate_, final_skill_critRate_, final_burst_critRate_,\n]\n*/\n\n//renamed dmgMode to hitMode\nconst dmgModeToHitMode = {\n  avg_dmg: \"avgHit\",\n  dmg: \"hit\",\n  crit_dmg: \"critHit\"\n}\nexport { changes, dmgModeToHitMode }","import Artifact from \"./Artifact/Artifact\";\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\nimport { changes as v2change, dmgModeToHitMode } from \"./dbV2KeyMap\";\nimport { loadFromLocalStorage, saveToLocalStorage } from \"./Util/Util\";\n\nfunction DatabaseInitAndVerify() {\n  const dbVersion = getDatabaseVersion()\n  //edit the data before the database is populated\n  if (dbVersion < 2) {\n    //made characters unique, so need to convert character_{NUMBER} to char_{characterKey}. Will only save the 1st instance of a character.\n    Object.keys(localStorage).filter(key => key.startsWith(\"character_\")).forEach(key => {\n      const character = loadFromLocalStorage(key);\n      const { characterKey, equippedArtifacts = {} } = character\n      const dbKey = `char_${characterKey}`\n      if (localStorage.getItem(dbKey) === null) {\n        //if there is no character saved, create a new character\n        const { id, name, dmgMode, ...rest } = character\n        if (Array.isArray(rest?.buildSetting?.mainStat))\n          rest.buildSetting.mainStat = rest.buildSetting.mainStat.map(stat => stat in v2change ? v2change[stat] : stat)\n        if (typeof rest?.buildSetting?.statFilters === \"object\")\n          rest.buildSetting.statFilters = Object.fromEntries(Object.entries(rest.buildSetting.statFilters).map(([stat, value]) => [stat in v2change ? v2change[stat] : stat, value]))\n        rest.hitMode = dmgModeToHitMode[dmgMode] ?? Object.keys(dmgModeToHitMode)[0]\n        saveToLocalStorage(dbKey, rest)\n        //equip to the new character\n        Object.values(equippedArtifacts).forEach(artid => {\n          const art = loadFromLocalStorage(artid);\n          if (!art) return\n          art.location = characterKey\n          saveToLocalStorage(artid, art)\n        });\n      } else {\n        //if the character does exist, \"move\" the artifacts equipped to inventory\n        Object.values(equippedArtifacts).forEach(artid => {\n          const art = loadFromLocalStorage(artid);\n          if (!art) return\n          art.location = \"\"\n          saveToLocalStorage(artid, art)\n        });\n      }\n      //delete the old database\n      localStorage.removeItem(key)\n    })\n    //reset the ArtifactDisplay keys\n    const ArtifactDisplayState = loadFromLocalStorage(\"ArtifactDisplay.state\")\n    if (ArtifactDisplayState) {\n      if (ArtifactDisplayState.filterMainStatKey in v2change)\n        ArtifactDisplayState.filterMainStatKey = v2change[ArtifactDisplayState.filterMainStatKey]\n      ArtifactDisplayState.filterSubstats = ArtifactDisplayState.filterSubstats.map(stat => stat in v2change ? v2change[stat] : stat)\n      saveToLocalStorage(\"ArtifactDisplay.state\", ArtifactDisplayState)\n    }\n  }\n\n  //this will only run if neither of the database has been initated.\n  const charDBJustPopualted = CharacterDatabase.populateDatebaseFromLocalStorage(),\n    artDBJustPopualted = ArtifactDatabase.populateDatebaseFromLocalStorage()\n  if (!charDBJustPopualted && !artDBJustPopualted) return\n\n  Object.values(ArtifactDatabase.getArtifactDatabase()).forEach(art => {\n    let valid = true\n\n    //verify the linking of artifacts and characters\n    if (art.location) {\n      const locationChar = CharacterDatabase.get(art.location)\n      if (locationChar) {\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\n          CharacterDatabase.equipArtifact(art.location, art)\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\n          art.location = \"\"\n          valid = false\n        }\n      } else {\n        art.location = \"\"\n        valid = false\n      }\n    }\n\n    if (dbVersion < 1) {\n      //generate artifact efficiency again for artifacts\n      Artifact.substatsValidation(art)\n      valid = false\n\n      //there was a bug that saved the numStars as strings. convert to number.\n      if (typeof art.numStars === \"string\") {\n        art.numStars = parseInt(art.numStars)\n        valid = false\n      }\n\n      //the set keys were changed to camelcase, need to convert for old databases.\n      let keyMapping = {\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\n        \"Thundering Fury\": \"ThunderingFury\",\n        \"Retracing Bolide\": \"RetracingBolide\",\n        \"Noblesse Oblige\": \"NoblesseOblige\",\n        \"Maiden Beloved\": \"MaidenBeloved\",\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\n        \"Archaic Petra\": \"ArchaicPetra\",\n        \"Brave Heart\": \"BraveHeart\",\n        \"Tiny Miracle\": \"TinyMiracle\",\n        \"Defender's Will\": \"DefendersWill\",\n        \"Martial Artist\": \"MartialArtist\",\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\n        \"The Exile\": \"TheExile\",\n        \"Traveling Doctor\": \"TravelingDoctor\",\n        \"Lucky Dog\": \"LuckyDog\",\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\n      }\n      if (keyMapping[art.setKey]) {\n        art.setKey = keyMapping[art.setKey]\n        valid = false\n      }\n      //key names were changed. convert old DB\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\n        valid = false\n      }\n      //key names were changed. convert old DB\n      if (art?.mainStatKey === \"phy_dmg\") {\n        art.mainStatKey = \"phy_dmg_bonus\"\n        valid = false\n      }\n    }\n\n    if (dbVersion < 2) {\n      if (art.mainStatKey in v2change) {\n        art.mainStatKey = v2change[art.mainStatKey]\n        valid = false\n      }\n      art?.substats?.forEach((obj, i) => {\n        if (obj.key in v2change) {\n          art.substats[i].key = v2change[obj.key]\n          valid = false\n        }\n      })\n    }\n\n    //Update any invalid artifacts in DB\n    if (!valid) ArtifactDatabase.updateArtifact(art)\n  })\n\n  let chars = CharacterDatabase.getCharacterDatabase();\n  Object.values(chars).forEach(character => {\n    let valid = true;\n    const { characterKey } = character\n    //verify character database equipment validity\n    if (!character.equippedArtifacts) {\n      character.equippedArtifacts = {}\n      valid = false\n    }\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\n      const equippedArt = ArtifactDatabase.get(artid)\n      if (equippedArt && equippedArt.location !== characterKey) //the artifact doesnt have the right location...\n        ArtifactDatabase.moveToNewLocation(artid, characterKey)\n      if (!equippedArt) {\n        valid = false\n        character.equippedArtifacts[slotKey] = \"\"\n      }\n    })\n\n    if (dbVersion < 1) {\n      //conditional format was refactored. this makes sure there is no error when using old DB.\n      character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\n        if (!cond.srcKey || !cond.srcKey2) {\n          valid = false\n          return false\n        }\n        return true\n      }) ?? []\n\n      //check for dmgMode\n      if (!character.hitMode) {\n        character.hitMode = \"hit\"\n        valid = false\n      }\n    }\n\n    //update any invalid characters in DB\n    if (!valid) CharacterDatabase.updateCharacter(character)\n  })\n  setDatabaseVersion(2)\n}\nconst getDatabaseVersion = (defVal = 0) =>\n  parseInt(loadFromLocalStorage(\"db_ver\") ?? defVal)\n\nconst setDatabaseVersion = (version) =>\n  saveToLocalStorage(\"db_ver\", version)\n\nexport {\n  DatabaseInitAndVerify\n};\n","import Dropdown from \"react-bootstrap/Dropdown\";\nimport Character from \"../Character/Character\";\nimport CharacterDatabase from \"../Character/CharacterDatabase\";\n\nfunction CharacterSelectionDropdownList({ onSelect }) {\n  return CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\n    if (a < b) return -1;\n    if (a > b) return 1;\n    // names must be equal\n    return 0;\n  })).map(characterKey =>\n    <Dropdown.Item key={characterKey} onClick={() => onSelect(characterKey)}>\n      {Character.getName(characterKey)}\n    </Dropdown.Item>)\n}\nexport {\n  CharacterSelectionDropdownList,\n};\n\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useContext } from 'react';\nimport { Accordion, AccordionContext, Button, Card, Col, Image, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\nimport Assets from \"../../Assets/Assets\";\nimport { getTalentStatKey } from \"../../Build/Build\";\nimport Stat from \"../../Stat\";\nimport { ElementToReactionKeys } from \"../../StatData\";\nimport { GetDependencies } from \"../../StatDependency\";\nimport Character from \"../Character\";\nimport StatInput from \"../StatInput\";\n\nfunction ReactionToggle({ character: { characterKey, reactionMode = \"none\" }, setReactionMode, className }) {\n  reactionMode === null && (reactionMode = \"none\")\n  let charEleKey = Character.getElementalKey(characterKey)\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\n  if (!eleInterArr.includes(\"shattered_hit\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shattered_hit\")\n  return [\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup className={className}\n    type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setReactionMode(val === \"none\" ? null : val)}>\n    <ToggleButton value={\"none\"} variant={reactionMode === \"none\" ? \"success\" : \"primary\"}>No Reactions</ToggleButton >\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_vaporize\"} variant={reactionMode === \"pyro_vaporize\" ? \"success\" : \"primary\"}>\n      <span className=\"text-vaporize\">Vaporize(Pyro) <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\n    </ToggleButton >}\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_melt\"} variant={reactionMode === \"pyro_melt\" ? \"success\" : \"primary\"}>\n      <span className=\"text-melt\">Melt(Pyro) <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\n    </ToggleButton >}\n    {charEleKey === \"hydro\" && <ToggleButton value={\"hydro_vaporize\"} variant={reactionMode === \"hydro_vaporize\" ? \"success\" : \"primary\"}>\n      <span className=\"text-vaporize\">Vaporize(Hydro) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /></span>\n    </ToggleButton >}\n    {charEleKey === \"cryo\" && <ToggleButton value={\"cryo_melt\"} variant={reactionMode === \"cryo_melt\" ? \"success\" : \"primary\"}>\n      <span className=\"text-melt\">Melt(Cryo) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /></span>\n    </ToggleButton >}\n  </ToggleButtonGroup>\n}\nfunction HitModeToggle({ hitMode, setHitMode, className }) {\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={setHitMode} className={className}>\n    <ToggleButton value=\"avgHit\" variant={hitMode === \"avgHit\" ? \"success\" : \"primary\"}>Avg. DMG</ToggleButton>\n    <ToggleButton value=\"hit\" variant={hitMode === \"hit\" ? \"success\" : \"primary\"}>Normal Hit, No Crit</ToggleButton>\n    <ToggleButton value=\"critHit\" variant={hitMode === \"critHit\" ? \"success\" : \"primary\"}>Crit Hit DMG</ToggleButton>\n  </ToggleButtonGroup>\n}\n\nexport default function DamageOptionsAndCalculation({ character, character: { characterKey, hitMode }, setState, setOverride, newBuild, equippedBuild }) {\n  //choose which one to display stats for\n  const build = newBuild ? newBuild : equippedBuild\n\n  const ContextAwareToggle = ({ eventKey, callback }) => {\n    const currentEventKey = useContext(AccordionContext);\n    const decoratedOnClick = useAccordionToggle(\n      eventKey,\n      () => callback && callback(eventKey),\n    );\n    const expanded = currentEventKey === eventKey;\n    return (\n      <Button onClick={decoratedOnClick} >\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\n      </Button>\n    );\n  }\n  const statsDisplayKeys = () => {\n    let keys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\n    let isAutoElemental = Character.isAutoElemental(characterKey)\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\n    let autoKeys = [\"normal\", \"charged\", \"plunging\"];\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\n    if (!isAutoElemental)  //add physical variants of the formulas\n      autoKeys.forEach(key => keys.push(getTalentStatKey(key, build.finalStats)))\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\n      autoKeys.forEach(key => keys.push(getTalentStatKey(key, build.finalStats, true)))\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\n      keys.push(getTalentStatKey(\"charged\", build.finalStats, true))\n    //add talents/skills\n    talKeys.forEach(key => keys.push(getTalentStatKey(key, build.finalStats)))\n    //show elemental interactions\n    keys.push(...(ElementToReactionKeys[Character.getElementalKey(characterKey)] || []))\n    let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\n    if (!keys.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") keys.push(\"shattered_hit\")\n\n    //search for dependency\n    return Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, keys), build?.finalStats?.modifiers)\n  }\n  return <Accordion>\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n      <Card.Header>\n        <Row>\n          <Col>\n            <span className=\"d-block\">Damage Calculation Options</span>\n            <small>Expand below to edit enemy details.</small>\n          </Col>\n          <Col xs=\"auto\">\n            {/* TODO reaction interaction UI */}\n            <ReactionToggle {...{ character, setReactionMode: r => setState({ reactionMode: r }) }} />\n          </Col>\n          <Col xs=\"auto\">\n            <ContextAwareToggle as={Button} eventKey=\"1\" />\n          </Col>\n        </Row>\n      </Card.Header>\n      <Accordion.Collapse eventKey=\"1\">\n        <Card.Body>\n          <Row className=\"mb-2\"><Col>\n            <Button variant=\"warning\" >\n              <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\n                To get the specific resistance values of enemies, please visit the wiki.\n          </a>\n            </Button >\n          </Col></Row>\n          <Row>\n            <Col xs={12} xl={6} className=\"mb-2\">\n              <StatInput\n                name={<b>Enemy Level</b>}\n                value={Character.getStatValueWithOverride(character, \"enemyLevel\")}\n                placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\n                defaultValue={Character.getBaseStatValue(character, \"enemyLevel\")}\n                onValueChange={(val) => setOverride?.(\"enemyLevel\", val)}\n              />\n            </Col>\n            {Character.getElementalKeys().map(eleKey => {\n              let statKey = eleKey === \"physical\" ? \"physical_enemyRes_\" : `${eleKey}_enemyRes_`\n              let immunityStatKey = eleKey === \"physical\" ? \"physical_enemyImmunity\" : `${eleKey}_enemyImmunity`\n              let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\n              return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\n                <StatInput\n                  prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\n                    <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\n                </Button>}\n                  name={<b>{Stat.getStatNameRaw(statKey)}</b>}\n                  value={Character.getStatValueWithOverride(character, statKey)}\n                  placeholder={Stat.getStatNameRaw(statKey)}\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\n                  onValueChange={(val) => setOverride?.(statKey, val)}\n                  disabled={elementImmunity}\n                />\n              </Col>\n            })}\n          </Row>\n        </Card.Body>\n      </Accordion.Collapse>\n    </Card>\n\n    <Card bg=\"lightcontent\" text=\"lightfont\">\n      <Card.Header>\n        <Row>\n          <Col>\n            <span className=\"d-block\">Damage Calculation Formulas</span>\n            <small>Expand below to see calculation details.</small>\n          </Col>\n          <Col xs=\"auto\">\n            <HitModeToggle {...{ hitMode, setHitMode: m => setState({ hitMode: m }) }} />\n          </Col>\n          <Col xs=\"auto\">\n            <ContextAwareToggle as={Button} eventKey=\"2\" />\n          </Col>\n        </Row>\n      </Card.Header>\n      <Accordion.Collapse eventKey=\"2\">\n        <Card.Body>\n          <Row>\n            {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\n              <Card bg=\"darkcontent\" text=\"lightfont\">\n                <Card.Header className=\"p-2\">\n                  {Stat.printStat(key, build.finalStats)}\n                </Card.Header>\n                <Card.Body className=\"p-2\">\n                  <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\n                </Card.Body>\n              </Card>\n            </Col>\n            )}\n          </Row>\n        </Card.Body>\n      </Accordion.Collapse>\n    </Card>\n  </Accordion>\n}\nexport {\n  HitModeToggle,\n  ReactionToggle,\n};\n","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Image from 'react-bootstrap/Image';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Row from 'react-bootstrap/Row';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Character from '../Character/Character';\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\nimport { Stars } from '../Components/StarDisplay';\nimport Stat from '../Stat';\nimport Artifact from './Artifact';\nimport ArtifactDatabase from './ArtifactDatabase';\nimport PercentBadge from './PercentBadge';\nexport default function ArtifactCard({ artifactId, artifactObj, forceUpdate, onEdit, onDelete, assumeFull = false }) {\n  if (!artifactId && !artifactObj) return null;\n  const art = artifactObj ? artifactObj : ArtifactDatabase.get(artifactId);\n  if (!art) return null;\n  let { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location = \"\", lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\n  let mainStatLevel = assumeFull ? numStars * 4 : level\n  let assFullColor = assumeFull && level !== numStars * 4\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\n  let artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\n  const equipOnChar = (charKey) => {\n    Artifact.equipArtifactOnChar(artifactId, charKey)\n    forceUpdate?.()\n  }\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\n    <Card.Header className=\"p-0\">\n      <Row>\n        <Col xs={2} md={3}>\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\n        </Col>\n        <Col className=\"pt-3\">\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\n        </Col>\n      </Row>\n    </Card.Header>\n    <Card.Body className=\"d-flex flex-column py-2\">\n      <Card.Title>\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\n      </Card.Title>\n      <h5 className=\"mb-1\">\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\n      </h5>\n      <Row className=\"mb-0\">\n        {substats.map((stat, i) => {\n          if (!stat || !stat.value) return null\n          let numRolls = stat?.rolls?.length || 0\n          let efficiency = stat?.efficiency || 0\n          let effOpacity = 0.3 + efficiency * 0.7\n          let statName = Stat.getStatName(stat.key)\n          return (<Col key={i} xs={12}>\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\n          </Col>)\n        })}\n      </Row>\n      <div className=\"mt-auto\">\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\n        <PercentBadge percent={currentEfficiency} valid={artifactValid}>\n          {currentEfficiency?.toFixed(2) ?? currentEfficiency + \"%\"}\n        </PercentBadge>\n        <b>{\" < \"}</b>\n        <PercentBadge percent={maximumEfficiency} valid={artifactValid}>\n          {maximumEfficiency?.toFixed(2) ?? maximumEfficiency + \"%\"}\n        </PercentBadge>\n      </div>\n    </Card.Body>\n\n    <Card.Footer className=\"pr-3\">\n      <Row className=\"d-flex justify-content-between no-gutters\">\n        {forceUpdate ? <Col xs=\"auto\">\n          <Dropdown>\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{Character.getName(location, \"Inventory\")}</Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}>Inventory</Dropdown.Item>\n              <Dropdown.Divider />\n              <CharacterSelectionDropdownList onSelect={ckey => equipOnChar(ckey)} />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Col> : <Col xs=\"auto\"><b>{Character.getName(location)}</b></Col>}\n        <Col xs=\"auto\">\n          <ButtonGroup>\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\n              <span className=\"d-inline-block\">\n                <Button size=\"sm\"\n                  disabled={location}\n                  style={location ? { pointerEvents: 'none' } : {}}\n                  onClick={() => {\n                    art.lock = !lock\n                    ArtifactDatabase.updateArtifact(art);\n                    forceUpdate?.();\n                  }}>\n                  <FontAwesomeIcon icon={(lock || location) ? faLock : faLockOpen} className=\"fa-fw\" />\n                </Button>\n              </span>\n            </OverlayTrigger> : null}\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\n              onClick={() => onEdit()}>\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\n            </Button>}\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\n              onClick={() => onDelete()}>\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\n            </Button>}\n          </ButtonGroup>\n        </Col>\n      </Row>\n    </Card.Footer>\n  </Card>)\n}\n","import { Badge } from 'react-bootstrap';\n\nexport default function PercentBadge(props) {\n  let { percent, valid, children } = props\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\n}\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport Button from \"react-bootstrap/Button\"\nimport InputGroup from \"react-bootstrap/InputGroup\"\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\nimport Tooltip from \"react-bootstrap/Tooltip\"\nimport CustomFormControl from \"../Components/CustomFormControl\"\n\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\n  <InputGroup {...restProps}>\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\n    <InputGroup.Prepend>\n      <InputGroup.Text>{name}</InputGroup.Text>\n    </InputGroup.Prepend>\n    <CustomFormControl\n      float={percent}\n      placeholder={placeholder}\n      value={value}\n      onValueChange={onValueChange}\n      disabled={disabled}\n    />\n    {percent ? (<InputGroup.Append>\n      <InputGroup.Text>%</InputGroup.Text>\n    </InputGroup.Append>) : null}\n    {defaultValue !== undefined ? <InputGroup.Append>\n      <OverlayTrigger placement=\"top\"\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\n        <span className=\"d-inline-block\">\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\n            <FontAwesomeIcon icon={faUndo} />\n          </Button>\n        </span>\n      </OverlayTrigger>\n    </InputGroup.Append> : null}\n  </InputGroup>\nexport default StatInput","import Character from \"../Character/Character\"\nimport Stat from \"../Stat\"\nimport { StatIconEle } from \"./StatIcon\"\n\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\n    oldVal = val\n    val = undefined\n  }\n  const diff = val !== undefined ? val - oldVal : 0;\n  let oldText = \"\", diffText = \"\"\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\n\n  return <div>\n    <b>{label}</b>\n    <span className=\"float-right text-right\">{oldText}{diff ? \" \" : \"\"}{diffText}</span>\n  </div>\n}\nexport default function StatDisplay({ character, character: { characterKey }, equippedBuild, newBuild, editable, statKey }) {\n  let val, oldVal, fixed, unit, variant;\n  let label = \"\"\n  if (typeof statKey === \"string\") {//basic statKey\n    if (newBuild && equippedBuild) {//comparable\n      //newbuild -> val\n      //equippedbuild ->old\n      val = newBuild?.finalStats?.[statKey] ?? 0\n      oldVal = equippedBuild?.finalStats?.[statKey] ?? 0\n    } else {\n      const build = newBuild ? newBuild : equippedBuild\n      //build ->val\n      val = build?.finalStats?.[statKey] ?? 0\n      //statvaluewith override -> old\n      const invalid = \"invalid\"//can't use undeinfed as the defVal, since I want undefined for invalid numbers.\n      oldVal = Character.getStatValueWithOverride(character, statKey, invalid)\n      oldVal === invalid && (oldVal = undefined)\n      if (statKey === \"finalHP\")\n        oldVal = Character.getStatValueWithOverride(character, \"characterHP\")\n      else if (statKey === \"finalDEF\")\n        oldVal = Character.getStatValueWithOverride(character, \"characterDEF\")\n      else if (statKey === \"finalATK\")\n        oldVal = Character.getStatValueWithOverride(character, \"characterATK\") + Character.getStatValueWithOverride(character, \"weaponATK\")\n    }\n    unit = Stat.getStatUnit(statKey)\n    fixed = Stat.fixedUnit(statKey)\n    label = <span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>\n  } else {//from character sheet\n    const build = newBuild ? newBuild : equippedBuild\n    const { talentKey, sectionIndex, fieldIndex } = statKey\n    const field = Character.getTalentField(characterKey, talentKey, sectionIndex, fieldIndex)\n    const labelVariant = Character.getTalentFieldValue(field, \"variant\", talentKey, build.finalStats)\n    label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", talentKey, build.finalStats)}</span>\n    fixed = Character.getTalentFieldValue(field, \"fixed\", talentKey, build.finalStats, 0)\n    val = Character.getTalentFieldValue(field, \"formula\", talentKey, build.finalStats)\n    if (newBuild && equippedBuild) {//comparable\n      oldVal = Character.getTalentFieldValue(field, \"formula\", talentKey, equippedBuild.finalStats)\n    }\n  }\n\n  if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label }} />\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","\n//take the new statsDisplayKeys, and display the stats.\n\nimport { Card, Col, Row } from \"react-bootstrap\"\nimport StatDisplay from \"../../Components/StatDisplay\"\nimport Character from \"../Character\"\n\nexport default function StatDisplayComponent({ character, character: { characterKey }, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }) {\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([talentKey, fields]) => {\n    let header = \"\"\n    if (talentKey === \"basicKeys\") header = \"Basic Stats\"\n    else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\n    else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\n    else header = Character.getTalentName(characterKey, talentKey, talentKey)\n    return <Col key={talentKey} className=\"mb-2\" xs={12} md={6} xl={4}>\n      <Card bg={cardbg} text=\"lightfont\" className=\"h-100\">\n        <Card.Header>{header}</Card.Header>\n        <Card.Body>\n          {fields.map(field => <StatDisplay key={JSON.stringify(field)} {...{ character, equippedBuild, newBuild, editable, statKey: field }} />)}\n        </Card.Body>\n      </Card>\n    </Col>\n  })}</Row>\n}","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nimport { Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\nimport Artifact from '../../Artifact/Artifact';\nimport ArtifactCard from '../../Artifact/ArtifactCard';\nimport ConditionalSelector from '../../Components/ConditionalSelector';\nimport Stat from \"../../Stat\";\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\nimport Character from \"../Character\";\nimport DamageOptionsAndCalculation from './DamageOptionsAndCalculation';\nimport StatDisplayComponent from './StatDisplayComponent';\n\nfunction CharacterArtifactPane({ character, character: { characterKey, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState, setOverride }) {\n  //choose which one to display stats for\n  let build = newBuild ? newBuild : equippedBuild\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\n  const statKeys = Character.getDisplayStatKeys(characterKey)\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\n  return <>\n    {Character.hasTalentPage(characterKey) && <Row><Col xs={12} className=\"mb-2\">\n      <DamageOptionsAndCalculation {...{ character, setState, setOverride, newBuild, equippedBuild }} />\n    </Col></Row>}\n    <Row>\n      <Col className=\"mb-2\">\n        <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\n          <Card.Body>\n            <StatDisplayComponent {...{ character, equippedBuild, newBuild, statsDisplayKeys: statKeys, build, forceUpdate, setState, setOverride, editable }} />\n          </Card.Body>\n          {newBuild ? <Card.Footer>\n            <Button onClick={() => {\n              Character.equipArtifacts(characterKey, newBuild.artifactIds)\n              forceUpdate?.()\n            }}>Equip All artifacts to current character</Button>\n            {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\n          </Card.Footer> : null}\n        </Card>\n      </Col>\n    </Row>\n    <Row className=\"mb-n2\">\n      <Col>\n        <Row>\n          <Col sm={6} lg={4} className=\"mb-2\">\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\n              <Card.Header>Artifact Set Effects</Card.Header>\n              <Card.Body className=\"flex-grow-1\">\n                <Row>\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\n                    <Col key={setKey} xs={12} className=\"mb-2\">\n                      <h5>{Artifact.getSetName(setKey)}</h5>\n                      <Row>\n                        {setNumKeyArr.map(setNumKey => {\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\n                          let conditionalNum = 0;\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\n                          if (conditional) {\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\n                          }\n                          let conditionalElement = <ConditionalSelector\n                            disabled={newBuild ? true : false}\n                            conditional={conditional}\n                            conditionalNum={conditionalNum}\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\n                          />\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\n                            {setStats ? <Row>\n                              {Object.entries(setStats).map(([statKey, val]) =>\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\n                            </Row> : null}\n                          </Col>\n                        })}\n                      </Row>\n                    </Col>\n                  )}\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n          {Artifact.getSlotKeys().map(slotKey =>\n            build.artifactIds[slotKey] ? <Col sm={6} lg={4} key={build.artifactIds[slotKey]} className=\"mb-2\">\n              <ArtifactCard artifactId={build.artifactIds[slotKey]} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\n            </Col> : null\n          )}\n        </Row>\n      </Col>\n    </Row>\n  </>\n}\nexport default CharacterArtifactPane\n","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport React, { useState } from \"react\"\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\nimport Assets from \"../../Assets/Assets\"\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\nimport CustomFormControl from \"../../Components/CustomFormControl\"\nimport { Stars } from \"../../Components/StarDisplay\"\nimport StatDisplay from \"../../Components/StatDisplay\"\nimport { StatIconEle } from \"../../Components/StatIcon\"\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\nimport { LevelNameData } from \"../../Data/WeaponData\"\nimport Stat from \"../../Stat\"\nimport { clamp } from \"../../Util/Util\"\nimport Weapon from \"../../Weapon/Weapon\"\nimport Character from \"../Character\"\nimport StatInput from \"../StatInput\"\nexport default function CharacterOverviewPane(props) {\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\n  let [editLevel, setEditLevel] = useState(false)\n  let elementKey = Character.getElementalKey(characterKey)\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\n  let level = Character.getStatValueWithOverride(character, \"characterLevel\")\n  return <Row>\n    <Col xs={12} md={3} >\n      {/* Image card with star and name and level */}\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\n        <Card.Body>\n          <Row>\n            <Col xs={12}>\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\n            </Col>\n            <Col>\n              {editLevel ? <Row><Col>\n                <InputGroup >\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <CustomFormControl onValueChange={(val) => setOverride(\"characterLevel\", clamp(val, 1, 90))} value={level} />\n                  <InputGroup.Append>\n                    <Button>\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"characterLevel\", Character.getLevel(character.levelKey))} />\n                    </Button>\n                  </InputGroup.Append>\n                  <InputGroup.Append>\n                    <OverlayTrigger\n                      placement=\"bottom\"\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\n                    >\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\n                        <span><FontAwesomeIcon icon={faSave} /></span>\n                      </Button>\n                    </OverlayTrigger>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Col></Row> :\n                <Row>\n                  <Col>\n                    <h5>Level: {level}</h5>\n                  </Col>\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\n                    </Button>\n                  </Col> : null}\n                </Row>}\n            </Col>\n            <Col xs={12}>\n              <Row>\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\n                <Col>\n                  <Row className=\"px-2\">\n                    {[...Array(6).keys()].map(i =>\n                      <Col xs={4} className=\"p-1\" key={i}>\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\n                      </Col>)}\n                  </Row>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </Col>\n    <Col xs={12} md={9} >\n      <WeaponStatsEditorCard {...props} />\n      <MainStatsCards {...props} />\n    </Col>\n  </Row >\n}\nfunction StatItem({ statKey, val }) {\n  if (!statKey) return null\n  return <Col xs={12} lg={6} className=\"px-3\">\n    <span><b>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</b></span>\n    <span className={`float-right text-right text-${Stat.getStatVariant(statKey)}`} >{val?.toFixed?.(Stat.fixedUnit(statKey)) || val}{Stat.getStatUnit(statKey)}</span>\n  </Col>\n}\nfunction WeaponStatsCard({ title, stats = {}, finalStats = {} }) {\n  if (Object.keys(stats ?? {}).length === 0) return null\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\n    <Card.Body className=\"py-2 px-0\"><Row>\n      {Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? <React.Fragment key={key} >{Object.entries(val ?? {}).map(([mkey, modifier]) =>\n        <StatItem key={mkey} statKey={mkey} val={Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0)} />)}</React.Fragment>\n        : <StatItem key={key} statKey={key} val={val} />)}\n    </Row></Card.Body>\n  </Card>\n}\nfunction WeaponStatsEditorCard(props) {\n  let [editing, SetEditing] = useState(false)\n  let [showDescription, setShowDescription] = useState(false)\n  let { character, character: { characterKey, weapon = {} }, editable, setState, equippedBuild, newBuild } = props\n\n  //choose which one to display stats for\n  let build = newBuild ? newBuild : equippedBuild\n\n  const setStateWeapon = (key, value) => setState(state => {\n    //reset the conditionalNum when we switch weapons\n    if (key === \"key\") state.weapon.conditionalNum = 0\n    state.weapon[key] = value\n    return { weapon: state.weapon }\n  })\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex, undefined)\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum, undefined)\n  let conditional = Weapon.getWeaponConditional(weapon.key)\n  let conditionalNum = weapon.conditionalNum;\n  let conditionalEle = <ConditionalSelector\n    conditional={conditional}\n    conditionalNum={conditionalNum}\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\n    defEle={<span>{weaponPassiveName}</span>}\n  />\n\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n    <Card.Header>\n      <Row>\n        <Col>\n          <span>Weapon</span>\n        </Col>\n        <Col xs=\"auto\">\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\n          </Button>\n        </Col>\n        {editable ? <Col xs=\"auto\" >\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\n          </Button>\n        </Col> : null}\n      </Row>\n    </Card.Header>\n    <Card.Body>\n      <Row className=\"mb-2\">\n        <Col xs={12} md={3}>\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\n        </Col>\n        {editing ? <Col>\n          <Row>\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\n                      {weaponObj.name}\n                    </Dropdown.Item>\n                  )}\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\n                </React.Fragment>)}\n              </DropdownButton>\n            </Col>\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\n                <Dropdown.ItemText>\n                  <span>Select Weapon Level</span>\n                </Dropdown.ItemText>\n                {Object.entries(LevelNameData).map(([key, name]) =>\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\n                    {name}\n                  </Dropdown.Item>)}\n              </DropdownButton>\n            </Col>\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\n                <Dropdown.ItemText>\n                  <span>Select Weapon Refinement</span>\n                </Dropdown.ItemText>\n                <Dropdown.Divider />\n                {[...Array(5).keys()].map(key =>\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\n                    {`Refinement ${key + 1}`}\n                  </Dropdown.Item>)}\n              </DropdownButton>\n            </Col>}\n            <Col xs={12} className=\"mb-2\">\n              <StatInput\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\n                placeholder=\"Weapon Attack\"\n                value={weaponDisplayMainVal}\n                percent={false}\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\n              />\n            </Col>\n            {subStatKey && <Col xs={12} className=\"mb-2\">\n              <StatInput\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\n                placeholder=\"Weapon Substat\"\n                value={weaponDisplaySubVal}\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\n              />\n            </Col>}\n          </Row>\n        </Col> :\n          <Col>\n            <Row className=\"mb-2\"><Col>\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\n            </Col></Row>\n            <Row>\n              <Col>{conditionalEle}</Col>\n            </Row>\n\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build?.finalStats, character)}</p>\n            <WeaponStatsCard title={\"Main Stats\"} stats={{ atk: weaponDisplayMainVal, [subStatKey]: weaponDisplaySubVal }} finalStats={build?.finalStats} />\n            <WeaponStatsCard title={\"Bonus Stats\"} stats={weaponBonusStats} finalStats={build?.finalStats} />\n            <WeaponStatsCard title={\"Conditional Stats\"} stats={conditionalStats} finalStats={build?.finalStats} />\n          </Col>}\n      </Row>\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\n    </Card.Body>\n  </Card>\n}\n\nfunction MainStatsCards(props) {\n  let { editable, character, setOverride, equippedBuild, newBuild } = props\n\n  let [editing, SetEditing] = useState(false)\n  let [editingOther, SetEditingOther] = useState(false)\n\n  let additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\n  displayStatKeys.push(...additionalKeys)\n  const editStatKeys = [\"characterHP\", \"hp\", \"hp_\", \"characterATK\", \"atk\", \"atk_\", \"characterDEF\", \"def\", \"def_\"]\n  editStatKeys.push(...additionalKeys)\n  const otherStatKeys = [\"stamina\", \"incHeal_\", \"powShield_\", \"cdRed_\"]\n\n  Character.getElementalKeys().forEach(ele => {\n    otherStatKeys.push(`${ele}_dmg_`)\n    otherStatKeys.push(`${ele}_res_`)\n  })\n  const miscStatkeys = [\"normal_dmg_\", \"charged_dmg_\", \"skill_dmg_\", \"burst_dmg_\", \"skill_critRate_\", \"burst_critRate_\", \"dmg_\", \"moveSPD_\", \"atkSPD_\", \"weakspotDMG_\"]\n\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\n\n  const isPercentSpecialStatSelect = Stat.getStatUnit(specializedStatKey) === \"%\"\n\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\n  return <>\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n      <Card.Header>\n        <Row>\n          <Col>\n            <span>Main Base Stats</span>\n          </Col>\n          {editable ? <Col xs=\"auto\" >\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\n            </Button>\n          </Col> : null}\n        </Row>\n      </Card.Header>\n      {editing ?\n        <Card.Body>\n          <Row className=\"mb-2\">\n            {editStatKeys.map(statKey =>\n              <Col lg={6} xs={12} key={statKey}>\n                <StatInput\n                  className=\"mb-2\"\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\n                  value={Character.getStatValueWithOverride(character, statKey)}\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\n                  onValueChange={(value) => setOverride(statKey, value)}\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\n                />\n              </Col>)}\n\n            <Col lg={6} xs={12}>\n              <InputGroup>\n                <DropdownButton\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\n                  as={InputGroup.Prepend}\n                >\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\n                  {CharacterSpecializedStatKey.map(key =>\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\n                      {Stat.getStatNameWithPercent(key)}\n                    </Dropdown.Item>)}\n                </DropdownButton>\n                <CustomFormControl float={isPercentSpecialStatSelect}\n                  placeholder=\"Character Special Stat\"\n                  value={Character.getStatValueWithOverride(character, \"specializedStatVal\")}\n                  onValueChange={(value) => setOverride(\"specializedStatVal\", value)} />\n                {isPercentSpecialStatSelect && (<InputGroup.Append>\n                  <InputGroup.Text>%</InputGroup.Text>\n                </InputGroup.Append>)}\n              </InputGroup>\n            </Col>\n          </Row>\n        </Card.Body> :\n        <Card.Body>\n          <Row className=\"mb-2\">\n            {displayStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}\n            {specializedStatVal ? <Col lg={6} xs={12}>\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\n            </Col> : null}\n          </Row>\n        </Card.Body>\n      }\n    </Card >\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n      <Card.Header>\n        <Row>\n          <Col>\n            <span>Other Stats</span>\n          </Col>\n          {editable ? <Col xs=\"auto\" >\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\n            </Button>\n          </Col> : null}\n        </Row>\n      </Card.Header>\n      {editingOther ?\n        <Card.Body>\n          <Row className=\"mb-2\">\n            {otherStatKeys.map(statKey =>\n              <Col lg={6} xs={12} key={statKey}>\n                <StatInput\n                  className=\"mb-2\"\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\n                  value={Character.getStatValueWithOverride(character, statKey)}\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\n                  onValueChange={(value) => setOverride(statKey, value)}\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\n                />\n              </Col>)}\n          </Row>\n        </Card.Body> :\n        <Card.Body>\n          <Row className=\"mb-2\">{otherStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\n        </Card.Body>\n      }\n    </Card>\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n      <Card.Header>\n        <Row>\n          <Col>\n            <span>Misc Stats</span>\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Body>\n        <Row className=\"mb-2\">{miscStatkeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\n      </Card.Body>\n    </Card>\n  </>\n}\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from 'react';\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\nimport Assets from \"../../Assets/Assets\";\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\nimport Stat from \"../../Stat\";\nimport { ElementToReactionKeys } from \"../../StatData\";\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\nimport Character from \"../Character\";\nimport DamageOptionsAndCalculation from \"./DamageOptionsAndCalculation\";\n\nexport default function CharacterTalentPane(props) {\n  let { character, character: { characterKey, levelKey, constellation }, editable, setState, setOverride, newBuild, equippedBuild } = props\n\n  let ascension = Character.getAscension(levelKey)\n\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\n\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\n\n  let skillDisplayProps = { ...props, ascension }\n\n  return <>\n    <Row><Col xs={12} className=\"mb-2\">\n      <DamageOptionsAndCalculation {...{ character, setState, setOverride, newBuild, equippedBuild }} />\n    </Col></Row>\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\n    <Row>\n      {/* auto, skill, burst */}\n      {skillBurstList.map(([tKey, tText]) =>\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\n          <SkillDisplayCard\n            {...skillDisplayProps}\n            talentKey={tKey}\n            subtitle={tText}\n          />\n        </Col>)}\n      {Character.getTalent(characterKey, \"sprint\", false) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\n        <SkillDisplayCard\n          {...skillDisplayProps}\n          talentKey=\"sprint\"\n          subtitle=\"Alternative Sprint\"\n        />\n      </Col>}\n    </Row>\n    <Row>\n      {/* passives */}\n      {passivesList.map(([tKey, tText, asc]) => {\n        let enabled = ascension >= asc\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\n          <SkillDisplayCard\n            {...skillDisplayProps}\n            talentKey={tKey}\n            subtitle={tText}\n          />\n        </Col>\n      })}\n    </Row>\n    <Row>\n      <Col>\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\n      </Col>\n    </Row>\n    <Row className=\"mb-n2\">\n      {/* constellations */}\n      {[...Array(6).keys()].map(i => {\n        let tKey = `constellation${i + 1}`\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\n          <SkillDisplayCard\n            {...skillDisplayProps}\n            talentKey={tKey}\n            subtitle={`Contellation Lv. ${i + 1}`}\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\n          />\n        </Col>\n      })}\n    </Row>\n  </>\n}\nconst ReactionComponents = {\n  superconduct_hit: SuperConductCard,\n  electrocharged_hit: ElectroChargedCard,\n  overloaded_hit: OverloadedCard,\n  swirl_hit: SwirlCard,\n  shattered_hit: ShatteredCard,\n  crystalize_hit: CrystalizeCard,\n}\nfunction ReactionDisplay({ character: { characterKey, reactionMode = \"none\" }, newBuild, equippedBuild, setState }) {\n  let build = newBuild ? newBuild : equippedBuild\n  let charEleKey = Character.getElementalKey(characterKey)\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\n  if (!eleInterArr.includes(\"shattered_hit\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shattered_hit\")\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n    <Card.Body className=\"px-3 py-2\">\n      <Row>\n        <Col ><Row className=\"mb-n2\">\n          {eleInterArr.map(key => {\n            let Ele = ReactionComponents[key]\n            if (!Ele) return null\n            let val = build?.finalStats?.[key]\n            val = val?.toFixed?.(Stat.fixedUnit(key)) || val\n            return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele value={val} /></Col>\n          })}\n        </Row></Col>\n      </Row>\n\n    </Card.Body>\n  </Card>\n}\nfunction SuperConductCard({ value }) {\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\n    <span className=\"text-superconduct\">{Stat.getStatName(\"superconduct_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {value}</span>\n  </Card.Body></Card>\n}\nfunction ElectroChargedCard({ value }) {\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\n    <span className=\"text-electrocharged\">{Stat.getStatName(\"electrocharged_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {value}</span>\n  </Card.Body></Card>\n}\nfunction OverloadedCard({ value }) {\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\n    <span className=\"text-overloaded\">{Stat.getStatName(\"overloaded_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {value}</span>\n  </Card.Body></Card>\n}\nfunction SwirlCard({ value }) {\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\n    <span className=\"text-swirl\">{Stat.getStatName(\"swirl_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /> {value}</span>\n  </Card.Body></Card>\n}\nfunction ShatteredCard({ value }) {\n  const information = <OverlayTrigger\n    placement=\"top\"\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\n  >\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\n  </OverlayTrigger>\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\n    <span className=\"text-shattered\">{Stat.getStatName(\"shattered_hit\")} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {value}</span>\n  </Card.Body></Card>\n}\nfunction CrystalizeCard({ value }) {\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\n    <span className=\"text-crystalize\">{Stat.getStatName(\"crystalize_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {value}</span>\n  </Card.Body></Card>\n}\n\nfunction modifiersToFields(modifiers, finalStats = {}) {\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\n    text: Stat.getStatName(mStatKey),\n    variant: Stat.getStatVariant(mStatKey),\n    value: Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0),\n    formulaText: <span>{Object.entries(modifier ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, finalStats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)}</span>,\n    fixed: Stat.fixedUnit(mStatKey)\n  }))\n}\nfunction statsToFields(stats, finalStats = {}) {\n  return Object.entries(stats).map(([statKey, statVal]) =>\n    statKey === \"modifiers\" ? modifiersToFields(statVal, finalStats) : { text: Stat.getStatName(statKey), variant: Stat.getStatVariant(statKey), value: statVal, fixed: Stat.fixedUnit(statKey) }\n  ).flat()\n}\n\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\nfunction SkillDisplayCard(props) {\n  let { character, character: { characterKey, constellation, talentLevelKeys, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\n  let { onClickTitle = null, ...otherProps } = props\n  let build = newBuild ? newBuild : equippedBuild\n  let header = null\n  let infuseBtn = null\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\n    let eleKey = Character.getElementalKey(characterKey)\n    infuseBtn = <Col xs=\"auto\">\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\n        {autoInfused ?\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\n          : \"Not Infused\"}\n      </Button>\n    </Col>\n  }\n\n  let talentLvlKey = 0\n  if (talentKey in talentLevelKeys) {\n    const talentLvlKeyRaw = talentLevelKeys[talentKey]\n    const levelBoost = Character.getTalentLevelBoost(characterKey, talentKey, constellation)\n    talentLvlKey = talentLvlKeyRaw + levelBoost\n    if (editable) {\n      const setTalentLevel = (tKey, tLvl) => setState(state => {\n        const stateTalentLevelKeys = state.talentLevelKeys || {}\n        stateTalentLevelKeys[tKey] = tLvl\n        return { talentLevelKeys: stateTalentLevelKeys }\n      })\n      header = <Card.Header>\n        <Row>\n          <Col xs=\"auto\">\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\n            </DropdownButton>\n          </Col>\n          {infuseBtn}\n        </Row>\n      </Card.Header>\n    } else {\n      header = <Card.Header>\n        <Row>\n          <Col xs=\"auto\">\n            {`Talent Level: ${talentLvlKey + 1}`}\n          </Col>\n          <Col xs=\"auto\">\n            {infuseBtn}\n          </Col>\n        </Row>\n      </Card.Header>\n    }\n  }\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\n  const statsEle = talentStats && <Row><Col>\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\n      <ListGroup className=\"text-white\" variant=\"flush\">\n        {statsToFields(talentStats, build?.finalStats).map((field, i) =>\n          <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\n      </ListGroup>\n    </Card>\n  </Col></Row>\n\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\n    {header}\n    <Card.Body>\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\n        </Col>\n        <Col className=\"flex-grow-1\">\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\n        </Col>\n      </Row>\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\n        if (typeof section === \"function\")\n          section = section(constellation, ascension)\n        if (!section) return null\n\n        let talentText = section.text\n        if (typeof talentText === \"function\")\n          talentText = talentText(talentLvlKey, build.finalStats, character)\n        let fields = section.fields || []\n\n        let conditional = section.conditional;\n        if (typeof conditional === \"function\")\n          conditional = conditional(talentLvlKey, constellation, ascension)\n        let conditionalEle = null\n        if (conditional) {\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\n          let conditionalFields = []\n          if (conditionalNum) {\n            let conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\n            conditionalFields = [...Character.getTalentConditionalFields(conditional, conditionalNum, []), ...statsToFields(conditionalStats, build?.finalStats)]\n          }\n          let setConditional = (conditionalNum) => setState(state =>\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\n          conditionalEle = <Col xs={12}>\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\n              <Card.Header>\n                <ConditionalSelector disabled={!editable}\n                  conditional={conditional}\n                  conditionalNum={conditionalNum}\n                  setConditional={setConditional}\n                  defEle={<span>{conditional.condition}</span>} />\n              </Card.Header>\n              <ListGroup className=\"text-white\" variant=\"flush\">\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i} index={i} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\n              </ListGroup>\n            </Card>\n          </Col>\n        }\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\n          <div className=\"mb-2\">{talentText}</div>\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\n          </ListGroup>}\n        </Col>{conditionalEle}</Row>\n      })}\n      {statsEle}\n    </Card.Body>\n  </Card>\n}\nfunction FieldDisplay({ character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild }) {\n  let build = newBuild ? newBuild : equippedBuild\n  if (typeof field === \"function\")\n    field = field(constellation, ascension)\n  if (!field) return null\n\n  let fieldText = field.text\n  if (typeof fieldText === \"function\")\n    fieldText = fieldText?.(talentLvlKey, build.finalStats)\n\n  let fieldVariant = field.variant || \"\"\n  if (typeof fieldVariant === \"function\")\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats)\n\n  let fieldBasic = field.formulaText\n  if (typeof fieldBasic === \"function\")\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats)\n  if (fieldBasic)\n    fieldBasic = <OverlayTrigger\n      placement=\"top\"\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\n    >\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\n    </OverlayTrigger>\n\n  let fieldVal = null\n  if (field.value)\n    fieldVal = typeof field.value === \"function\" ? field.value?.(talentLvlKey, build.finalStats) : field.value\n  else if (typeof field.formula === \"function\")\n    fieldVal = field?.formula?.(talentLvlKey, build.finalStats)?.[0]?.(build.finalStats)\n\n  let fixedVal = field.fixed || 0\n  //compareAgainstEquipped\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\n    let fieldEquippedVal = field.value ? field.value : field.formula?.(talentLvlKey, equippedBuild.finalStats)?.[0]?.(equippedBuild.finalStats)\n\n    if (typeof fieldEquippedVal === \"function\")\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats)?.toFixed?.(fixedVal))\n    let diff = fieldVal - fieldEquippedVal\n    fieldVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\n  }\n\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\n    <div>\n      <span><b>{fieldText}</b>{fieldBasic}</span>\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) || fieldVal}</span>\n    </div>\n  </ListGroup.Item>\n}\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, Image, Nav, Tab } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\nimport Row from 'react-bootstrap/Row';\nimport Artifact from '../Artifact/Artifact';\nimport { WeaponLevelKeys } from '../Data/WeaponData';\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\nimport { deepClone } from '../Util/Util';\nimport Weapon from '../Weapon/Weapon';\nimport Character from './Character';\nimport CharacterDatabase from './CharacterDatabase';\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\n\nconst CustomMenu = React.forwardRef(\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n    return (\n      <div\n        ref={ref}\n        style={{ style, minWidth: \"25rem\" }}\n        className={className}\n        aria-labelledby={labeledBy}\n      >\n        <Row>\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\n        </Row>\n      </div>\n    );\n  },\n);\n\nexport default class CharacterDisplayCard extends React.Component {\n  constructor(props) {\n    super(props)\n    DatabaseInitAndVerify();\n    this.state = CharacterDisplayCard.getInitialState()\n    const { characterKey } = props\n    if (characterKey) {\n      const char = CharacterDatabase.get(characterKey) ?? { characterKey, weapon: CharacterDisplayCard.getIntialWeapon(characterKey) }\n      this.state = { ...this.state, ...char }\n    }\n  }\n\n  static initialState = {\n    characterKey: \"\",//the game character this is based off\n    levelKey: \"L1\",//combination of level and ascension\n    hitMode: \"hit\",\n    reactionMode: null,\n    equippedArtifacts: {},\n    artifactConditionals: [],\n    baseStatOverrides: {},//overriding the baseStat\n    weapon: {\n      key: \"\",\n      levelKey: WeaponLevelKeys[0],\n      refineIndex: 0,\n      overrideMainVal: 0,\n      overrideSubVal: 0,\n      conditionalNum: 0,\n    },\n    talentLevelKeys: {\n      auto: 0,\n      skill: 0,\n      burst: 0,\n    },\n    autoInfused: false,\n    talentConditionals: [],\n    constellation: 0,\n    compareAgainstEquipped: false//note: needs to be deleted when saving\n  }\n  static getIntialWeapon = (characterKey) => {\n    let weapon = deepClone(this.initialState.weapon)\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\n    return weapon\n  }\n\n  static getInitialState = () => deepClone(CharacterDisplayCard.initialState)\n  //UI will not update if the character is updated in DB. Components will have to call this to update this UI.\n  forceUpdateComponent = () => {\n    if (this.state.characterKey)\n      this.setState(CharacterDatabase.get(this.state.characterKey))\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\n  }\n  setCharacterKey = (characterKey) => {\n    this.props?.setCharacterKey?.(characterKey)\n    let state = CharacterDisplayCard.getInitialState()\n    let char = CharacterDatabase.get(characterKey)\n    if (char) state = { ...state, ...char }\n    else state = { ...state, characterKey, weapon: CharacterDisplayCard.getIntialWeapon(characterKey) }\n    this.setState(state)\n  }\n\n  setLevelKey = (levelKey) =>\n    this.setState({ levelKey })\n\n  setOverride = (statKey, value) => this.setState(state => {\n    let baseStatOverrides = state.baseStatOverrides\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\n    if (baseStatVal === value) {\n      delete baseStatOverrides[statKey]\n      return { baseStatOverrides }\n    } else {\n      baseStatOverrides[statKey] = value\n      return { baseStatOverrides }\n    }\n  })\n\n  setConstellation = (constellation) => this.setState({ constellation })\n  componentDidMount() {\n    Promise.all([\n      Character.getCharacterDataImport(),\n      Weapon.getWeaponDataImport(),\n      Artifact.getDataImport(),\n    ]).then(() => this.forceUpdate())\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.characterKey !== this.props.characterKey)\n      this.setCharacterKey(this.props.characterKey)\n    if (this.props.editable && this.state.characterKey) {\n      //save this.state as character to character db.\n      const state = deepClone(this.state)\n      delete state.compareAgainstEquipped\n      CharacterDatabase.updateCharacter(state)\n    }\n  }\n  render() {\n    let { footer, newBuild, editable, onClose, tabName } = this.props\n    let character = this.state\n    //transfer the hitmode/reactions over \n    if (newBuild?.finalStats) {\n      newBuild = deepClone(newBuild)\n      newBuild.finalStats.hitMode = character.hitMode;\n      newBuild.finalStats.reactionMode = character.reactionMode;\n    }\n\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\n    let equippedBuild = Character.calculateBuild(this.state)\n    let HeaderIconDisplay = characterKey ? <span >\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\n    </span> : <span>Select a Character</span>\n    const commonPaneProps = { character, newBuild, equippedBuild: !newBuild || compareAgainstEquipped ? equippedBuild : undefined, editable, setState: u => this.setState(u), setOverride: this.setOverride, forceUpdate: this.forceUpdateComponent }\n    // main CharacterDisplayCard\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\n      <Card.Header>\n        <Row>\n          <Col xs={\"auto\"} className=\"mr-auto\">\n            {/* character selecter/display */}\n            {editable ? <ButtonGroup>\n              <Dropdown as={ButtonGroup}>\n                <DropdownToggle as={Button}>\n                  {HeaderIconDisplay}\n                </DropdownToggle>\n                <Dropdown.Menu as={CustomMenu}>\n                  {Character.getAllCharacterKeys().map(charKey =>\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\n                      <span >\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\n                      </span>\n                    </Dropdown.Item>)}\n                </Dropdown.Menu>\n              </Dropdown>\n              <DropdownButton as={ButtonGroup} disabled={!characterKey} title={\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\n              }>\n                <Dropdown.ItemText>\n                  <span>Select Base Stat Template</span>\n                </Dropdown.ItemText>\n                {Character.getlevelKeys().map(lvlKey =>\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\n                  </Dropdown.Item>)}\n              </DropdownButton>\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"characterLevel\")}</span>}\n          </Col>\n          {/* Compare against new build toggle */}\n          {newBuild ? <Col xs=\"auto\">\n            <ButtonGroup>\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\n                <small>Show New artifact Stats</small>\n              </Button>\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\n                <small>Compare against equipped artifact</small>\n              </Button>\n            </ButtonGroup>\n          </Col> : null}\n          <Col xs=\"auto\" >\n            <Button variant=\"danger\" onClick={onClose}>\n              <FontAwesomeIcon icon={faTimes} /></Button>\n          </Col>\n        </Row>\n      </Card.Header>\n      {Boolean(characterKey) && <Card.Body>\n        <Tab.Container defaultActiveKey={tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\")} mountOnEnter={true} unmountOnExit={true}>\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\n            <Nav.Item >\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\n            </Nav.Item>\n            {newBuild ? <Nav.Item>\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\n            </Nav.Item> : null}\n            <Nav.Item>\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && !Character.hasTalentPage(characterKey)}>Talents {!Character.hasTalentPage(characterKey) && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\n            </Nav.Item>\n          </Nav>\n          <Tab.Content>\n            <Tab.Pane eventKey=\"character\">\n              <CharacterOverviewPane\n                setConstellation={this.setConstellation}\n                {...commonPaneProps}\n              />\n            </Tab.Pane>\n            <Tab.Pane eventKey=\"artifacts\" >\n              <CharacterArtifactPane {...{ ...commonPaneProps, newBuild: undefined, equippedBuild, }} />\n            </Tab.Pane>\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\n              <CharacterArtifactPane {...commonPaneProps} />\n            </Tab.Pane> : null}\n            <Tab.Pane eventKey=\"talent\">\n              <CharacterTalentPane {...commonPaneProps} />\n            </Tab.Pane>\n          </Tab.Content>\n        </Tab.Container>\n      </Card.Body>}\n      {footer && <Card.Footer>\n        {footer}\n      </Card.Footer>}\n    </Card>)\n  }\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"children\", \"type\", \"name\", \"value\", \"onChange\"]);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    if (!onChange) {\n      return;\n    }\n\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive && onChange) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/React.createElement(ButtonGroup, _extends({}, controlledProps, {\n    ref: ref,\n    toggle: true\n  }), map(children, function (child) {\n    var values = getValues();\n    var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n\n    var handler = function handler(e) {\n      return handleToggle(childVal, e);\n    };\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      type: type,\n      name: child.name || name,\n      checked: values.indexOf(childVal) !== -1,\n      onChange: chainFunction(childOnChange, handler)\n    });\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;","import { Container } from \"react-bootstrap\";\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\nimport '../StatDependency'\nexport default function TestDisplay() {\n  DatabaseInitAndVerify()\n  return <Container>\n    <CharacterDisplayCard editable characterKey=\"amber\" tabName=\"talent\" />\n  </Container>\n}\n","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\nfunction getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \n}\nfunction getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\nconst loadFromLocalStorage = (key) => {\n  let data = localStorage.getItem(key)\n  if (!data) return null\n  return JSON.parse(data)\n}\nconst saveToLocalStorage = (key, obj) =>\n  localStorage.setItem(key, JSON.stringify(obj));\nconst deepClone = (obj) =>\n  JSON.parse(JSON.stringify(obj))\n\nconst closeEnoughFloat = (a, b) =>\n  Math.abs(a - b) <= 0.101\n\nconst closeEnoughInt = (a, b) =>\n  Math.abs(a - b) <= 1\nconst clamp = (val, low, high) => {\n  if (val < low) return low;\n  if (val > high) return high;\n  return val\n}\nconst getArrLastElement = (arr) =>\n  arr.length ? arr[arr.length - 1] : null\n\nconst clamp01 = (val) => clamp(val, 0, 1)\nconst clampPercent = (val) => clamp(val, 0, 100)\n\n//use to pretty print timestamps, or anything really.\nfunction strPadLeft(string, pad, length) {\n  return (new Array(length + 1).join(pad) + string).slice(-length);\n}\n\n//fuzzy compare strings. longer the distance, the higher the mismatch.\nfunction hammingDistance(str1, str2) {\n  var dist = 0;\n  str1 = str1.toLowerCase();\n  str2 = str2.toLowerCase();\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\n    let match = true\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\n      match = false\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\n      match = true\n    if (!match) dist++\n  }\n  return dist;\n}\n\n//multiplies every numberical value in the obj by a multiplier.\nfunction objMultiplication(obj, multi) {\n  Object.keys(obj).forEach(prop => {\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\n  })\n}\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\nconst getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\nexport {\n  getRandomInt,\n  getRandomIntInclusive,\n  getRandomArbitrary,\n  getRandomElementFromArray,\n  loadFromLocalStorage,\n  saveToLocalStorage,\n  deepClone,\n  closeEnoughFloat,\n  closeEnoughInt,\n  clamp,\n  clamp01,\n  clampPercent,\n  getArrLastElement,\n  strPadLeft,\n  hammingDistance,\n  objMultiplication,\n  getObjectKeysRecursive\n}","import { Formulas, StatData } from \"./StatData\"\nimport { ReactionMatrix, hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\n\nexport default class Stat {\n  //do not instantiate.\n  constructor() {\n    if (this instanceof Stat)\n      throw Error('A static class cannot be instantiated.');\n  }\n  static getStatName = (key, defVal = \"\") =>\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\n  static getStatNamePretty = (key, defVal = \"\") =>\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\n  static getStatNameRaw = (key, defVal = \"\") =>\n    StatData[key]?.name || defVal\n  static getStatNameWithPercent = (key, defVal = \"\") => {\n    let name = this.getStatName(key, defVal)\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\n      name += \"%\"\n    return name;\n  }\n  static getStatVariant = (key, defVal = \"\") =>\n    StatData[key]?.variant || defVal\n  static getStatUnit = (key, defVal = \"\") =>\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\n\n  static fixedUnit = (key) => {\n    if (StatData[key]?.unit === \"multi\") return 3\n    let unit = Stat.getStatUnit(key)\n    return unit === \"%\" ? 1 : 0\n  }\n  static printStat = (statKey, stats) =>\n    f({ stats, expand: false }, statKey)\n\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\n    let formulaKeys = Object.keys(FormulaText)\n    let newModifiersKeys = Object.keys(modifiers).filter(x => !formulaKeys.includes(x))\n    return [...newModifiersKeys, ...formulaKeys].filter((key) => statList.includes(key))\n  }\n\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\n    if (typeof FormulaText?.[statKey] === \"function\")\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\n    else\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\n  }\n}\n//generate html tags based on tagged variants of the statData\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\n\nfunction f(options, statKey) {\n  let { stats, expand = true } = options\n  if (!stats) return\n  if (expand && FormulaText?.[statKey])\n    return <span>( {FormulaText[statKey](options)} )</span>\n  let statName = Stat.getStatNamePretty(statKey)\n  let statUnit = Stat.getStatUnit(statKey)\n  let fixedUnit = Stat.fixedUnit(statKey)\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\n}\n\nfunction reactionMatrixElementRenderer(o, val, i) {\n  let sign = val < 0 ? \" - \" : \" + \";\n  let disVal = Math.abs(val)\n  let powerText = \"\"\n  if (i > 1) powerText = <span> * ( {f(o, \"characterLevel\")} )^{i}</span>\n  if (i === 1) powerText = <span> * {f(o, \"characterLevel\")}</span>\n  return <span key={i}>{sign}{disVal}{powerText}</span>\n}\n\n// Base Formula\n\nconst FormulaText = {\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\n\n  heal_multi: (o) => <span>( 1 + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\n\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( 100 + {f(o, \"enemyLevel\")} + 100 + {f(o, \"characterLevel\")} )</span>,\n}\n\n// Enemy RES\n\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\n    if (o.stats[`${ele}_enemyImmunity`])\n      return <span>0 (immune)</span>\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemyRes_`)} / 2</span>\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\n    return <span> 1 - {f(o, `${ele}_enemyRes_`)} </span>\n  }\n})\n\n// Crit Rate\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\n})\n\n// Hit\n\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n  FormulaText[`${ele}_elemental_hit_multi`] = (o) => <span>( 1 + {f(o, `dmg_`)} * {f(o, `${ele}_dmg_`)} ) * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\n  FormulaText[`${ele}_elemental_hit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_hit_multi`)}</span>\n  FormulaText[`${ele}_elemental_critHit_multi`] = (o) => <span>( 1 + {f(o, `critDMG_`)} ) * {f(o, `${ele}_elemental_hit_multi`)}</span>\n  FormulaText[`${ele}_elemental_critHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_critHit_multi`)}</span>\n  FormulaText[`${ele}_elemental_avgHit_multi`] = (o) => <span>( 1 + {f(o, `critDMG_`)} * {f(o, `critRate_`)} ) * {f(o, `${ele}_elemental_hit_multi`)}</span>\n  FormulaText[`${ele}_elemental_avgHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_avgHit_multi`)}</span>\n\n  Object.entries(hitMoves).forEach(([move, moveName]) => {\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>( 1 + {f(o, `dmg_`)} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)} ) * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\n    FormulaText[`${ele}_${move}_hit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>( 1 + {f(o, `critDMG_`)} ) * {f(o, `${ele}_${move}_hit_multi`)}</span>\n    FormulaText[`${ele}_${move}_critHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_critHit_multi`)}</span>\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>( 1 + {f(o, `critDMG_`)} * {f(o, `final_${move}_critRate_`)} ) * {f(o, `${ele}_${move}_hit_multi`)}</span>\n    FormulaText[`${ele}_${move}_avgHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_avgHit_multi`)}</span>\n  })\n})\n\n// Reaction\n\nObject.assign(FormulaText, {\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\n})\nObject.entries(amplifyingReactions).forEach(([reaction, [name, variants]]) => {\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\n    // Move them to the right position\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\n\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      FormulaText[`${ele}_${reaction}_elemental_${type}`] = (o) => <span>{f(o, `${ele}_elemental_${type}`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, `${ele}_${move}_${type}`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\n      })\n    })\n  })\n})\n\nObject.assign(FormulaText, {\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\n})\nObject.entries(transformativeReactions).forEach(([reaction, [reactionName, ele, baseMulti]]) => {\n  FormulaText[`${reaction}_multi`] = (o) => ReactionMatrix[reaction].map((val, i) => reactionMatrixElementRenderer(o, val, i))\n  FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\n})\nObject.assign(FormulaText, {\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\n  crystalize_multi: (o) => ReactionMatrix[\"crystalize\"].map((val, i) => reactionMatrixElementRenderer(o, val, i)),\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\n})\n\n//checks for development\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\n})\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\n})\n","import ElementalData from \"../Data/ElementalData\"\n\n/**\n * Generate all set of artifacts-by-slots based on the filters\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\n *\n */\nexport function artifactSetPermutations(artifactsBySlot, setFilters) {\n  const setKeys = new Set(setFilters.map(i => i.key)), filteredArtifactsBySlot = {}\n  const slotKeys = Object.keys(artifactsBySlot)\n\n  for (const slotKey of slotKeys) {\n    let artifactsBySet = {}\n    for (const artifact of artifactsBySlot[slotKey]) {\n      if (setKeys.has(artifact.setKey)) {\n        if (artifactsBySet[artifact.setKey]) artifactsBySet[artifact.setKey].push(artifact)\n        else artifactsBySet[artifact.setKey] = [artifact]\n      } else {\n        if (artifactsBySet[null]) artifactsBySet[null].push(artifact)\n        else artifactsBySet[null] = [artifact]\n      }\n    }\n    filteredArtifactsBySlot[slotKey] = Object.freeze(artifactsBySet)\n  }\n\n  const setCount = {}, accu = {}, result = []\n\n  function slotPerm(index) {\n    if (index >= slotKeys.length) {\n      for (const { key, num } of setFilters)\n        if ((setCount[key] ?? 0) < num)\n          return\n      result.push({ ...accu })\n      return\n    }\n\n    const slotKey = slotKeys[index]\n    let artifactsBySet = filteredArtifactsBySlot[slotKey]\n    for (const setKey in artifactsBySet) {\n      setCount[setKey] = (setCount[setKey] ?? 0) + 1\n      accu[slotKey] = artifactsBySet[setKey]\n      slotPerm(index + 1)\n      setCount[setKey] -= 1\n    }\n  }\n\n  slotPerm(0)\n  return result\n}\n\n/**\n * Compute number of all artifact permutations based on the filters\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\n */\nexport function calculateTotalBuildNumber(artifactsBySlot, setFilters) {\n  return artifactSetPermutations(artifactsBySlot, setFilters).reduce((accu, artifactsBySlot) =>\n    accu + Object.entries(artifactsBySlot).reduce((accu, artifacts) => accu * artifacts[1].length, 1)\n    , 0)\n}\n\n/**\n * @callback artifactCallback\n * @param {Object.<artifactKey, artifact>} artifacts - the list of artifacts\n * @param {stats} stats - the total stats for the artifacts\n */\n\n/**\n * Generate all artifact permutations and accumulate the stats\n * @param {stats} initialStats - initial stats before any artifact is added\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - the list of the set effects\n * @param {artifactCallback} callback - the functions called with each permutation\n */\nexport function artifactPermutations(initialStats, artifactsBySlot, artifactSetEffects, callback) {\n  const slotKeys = Object.keys(artifactsBySlot), setCount = {}, accu = {}\n  function slotPerm(index, stats) {\n    if (index >= slotKeys.length) {\n      callback(accu, stats)\n      return\n    }\n\n    let slotKey = slotKeys[index]\n    for (const artifact of artifactsBySlot[slotKey]) {\n      let newStats = { ...stats }\n      accumulate(slotKey, artifact, setCount, accu, newStats, artifactSetEffects)\n      slotPerm(index + 1, newStats)\n      setCount[artifact.setKey] -= 1\n    }\n  }\n\n  slotPerm(0, initialStats)\n}\n\nfunction accumulate(slotKey, art, setCount, accu, stats, artifactSetEffects) {\n  let setKey = art.setKey\n  accu[slotKey] = art\n  setCount[setKey] = (setCount[setKey] ?? 0) + 1\n\n  // Add artifact stats\n  if (art.mainStatKey in stats) stats[art.mainStatKey] += art.mainStatVal\n  art.substats.forEach((substat) => {\n    if (substat?.key in stats) stats[substat.key] += substat.value\n  })\n\n  // Add set effects\n  let setEffect = artifactSetEffects[setKey]?.[setCount[setKey]]\n  setEffect && Object.entries(setEffect).forEach(([statKey, val]) => {\n    if (statKey in stats) stats[statKey] += val\n  })\n}\n\n/**\n  * Create statKey in the form of ${ele}_elemental_${type} for elemental DMG, ${ele}_${src}_${type} for talent DMG.\n  * @param {string} skillKey - The DMG src. Can be \"norm\",\"skill\". Use an elemental to specify a elemental hit \"physical\" -> physical_elemental_{type}. Use \"elemental\" here to specify a elemental hit of character's element/reactionMode\n  * @param {*} stats - The character. Will extract hitMode, autoInfused...\n  * @param {*} elemental - Override the hit to be the character's elemental, that is not part of infusion.\n  */\nexport function getTalentStatKey(skillKey, stats, elemental = false) {\n  const { hitMode = \"\", autoInfused = false, reactionMode = null, characterEle = \"anemo\", weaponType = \"sword\" } = stats\n  if (Object.keys(ElementalData).includes(skillKey)) return `${skillKey}_elemental_${hitMode}`//elemental DMG\n  if (!elemental) elemental = weaponType === \"catalyst\" || autoInfused\n  let eleKey = \"physical\"\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\n    eleKey = (reactionMode ? reactionMode : characterEle)\n  return `${eleKey}_${skillKey}_${hitMode}`\n}\n\nexport function getTalentStatKeyVariant(skillKey, stats, elemental = false) {\n  if (Object.keys(ElementalData).includes(skillKey)) return skillKey\n  const { autoInfused = false, characterEle = \"anemo\", weaponType = \"sword\" } = stats\n  let { reactionMode } = stats\n  //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\n  if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\n    reactionMode = \"vaporize\"\n  else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\n    reactionMode = \"melt\"\n  if (!elemental) elemental = weaponType === \"catalyst\" || autoInfused\n  let eleKey = \"physical\"\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\n    eleKey = (reactionMode ? reactionMode : characterEle)\n  return eleKey\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import Artifact from \"../Artifact/Artifact\";\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\nimport ElementalData from \"../Data/ElementalData\";\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\nimport { GetDependencies } from \"../StatDependency\";\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\nimport { deepClone } from \"../Util/Util\";\nimport Weapon from \"../Weapon/Weapon\";\nimport CharacterDatabase from \"./CharacterDatabase\";\n\nexport default class Character {\n  //do not instantiate.\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\n  static getCharacterDataImport = () => CharacterDataImport\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\n    let { characterKey, levelKey } = character\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return this.getLevel(levelKey)\n    if (statKey.includes(\"enemyRes_\")) return 10\n    if (statKey in characterStatBase) return characterStatBase[statKey]\n    let characterObj = this.getCDataObj(characterKey)\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\n    return defVal\n  }\n\n  static getCDataObj = (charKey) => CharacterData[charKey];\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\n\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\n  static getElementalKeys = () => Object.keys(ElementalData)\n  static getElementalKeysWithoutPhysical = () => this.getElementalKeys().filter(e => e !== \"physical\")\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\n\n  //LEVEL\n  static getlevelKeys = () => Object.keys(LevelsData)\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\n\n  //SPECIALIZED STAT\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\n  //ASSETS\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\n\n  //talents\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\n\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\n    //so far we only get level boost from constellations, so only burst and skills.\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\n    let talents = this.getCDataObj(characterKey)?.talent || {}\n    for (let i = 1; i <= constellation; i++) {\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\n      if (boostEntry) return boostEntry[1]\n    }\n    return defVal\n  }\n\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\n  static getTalentDocumentSections = (charKey, talentKey, defVal = []) => {\n    const character = CharacterDatabase.get(charKey);\n    if (!character) return defVal\n    const { constellation = 0, levelKey = Object.keys(LevelsData)[0] } = character\n    const ascension = Character.getAscension(levelKey)\n    return this.getTalentDocument(charKey, talentKey).map(section => typeof section === \"function\" ? section(constellation, ascension) : section)\n  }\n  static getTalentField = (charKey, talentKey, sectionIndex, fieldIndex, defVal = {}) => {\n    const character = CharacterDatabase.get(charKey);\n    if (!character) return defVal\n    const { constellation = 0, levelKey = Object.keys(LevelsData)[0] } = character\n    const ascension = Character.getAscension(levelKey)\n    const field = this.getTalentDocumentSections(charKey, talentKey)?.[sectionIndex]?.fields?.[fieldIndex]\n    if (!field) return defVal\n    return typeof field === \"function\" ? field(constellation, ascension) : field\n  }\n  static getTalentFieldValue = (field, key, talentKey, stats = {}, defVal = \"\") => {\n    if (!field?.[key]) return defVal\n    if (key === \"formula\")\n      return field?.formula?.(stats.talentLevelKeys[talentKey], stats)?.[0]?.(stats)\n    return typeof field?.[key] === \"function\" ? field[key](stats.talentLevelKeys[talentKey], stats) : field[key]\n  }\n\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\n    let stats = this.getTalent(charKey, talentKey)?.stats\n    if (typeof stats === \"function\")\n      return stats(constellation, ascension)\n    return stats || defVal\n  }\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\n    let talents = this.getCDataObj(charKey)?.talent || {}\n    let statsArr = []\n    Object.keys(talents).forEach(talentKey => {\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\n      if (stats) statsArr.push(stats)\n    })\n    return statsArr\n  }\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\n    const sections = this.getTalentDocumentSections(charKey, talentKey)\n    let cond = null\n    for (const section of sections) {\n      let tempCond = section.conditional\n      if (typeof tempCond === \"function\")\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\n      if (tempCond?.conditionalKey === conditionalKey) {\n        cond = tempCond\n        break;\n      }\n    }\n    return cond || defVal\n  }\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\n    if (!conditionalNum || !conditional) return defVal\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\n    if (!stacks) return defVal\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\n  }\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\n    if (!conditionalNum || !conditional) return defVal\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\n    return fields || defVal\n  }\n\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\n\n  //look up the formula, and generate the formulaPath to send to worker.\n  static getFormulaPath(characterKey, talentKey, formula) {\n    const formulaDB = this.getCDataObj(characterKey)?.formula\n    if (!formulaDB) return\n    let formulaKey\n    if (talentKey === \"auto\") {\n      for (const tk of [\"normal\", \"charged\", \"plunging\"]) {\n        ([formulaKey,] = Object.entries(formulaDB?.[tk] ?? {}).find(([, value]) => value === formula) ?? [])\n        if (formulaKey) {\n          talentKey = tk\n          break;\n        }\n      }\n    } else ([formulaKey,] = Object.entries(formulaDB?.[talentKey] ?? {}).find(([, value]) => value === formula) ?? [])\n    if (!formulaKey) return\n    return { characterKey, talentKey, formulaKey }\n  }\n\n\n  static hasTalentPage = (characterKey) => Boolean(Character.getCDataObj(characterKey)?.talent)\n\n  static getDisplayStatKeys = (characterKey, defVal = { basicKeys: [] }) => {\n    if (!characterKey) return defVal\n    let eleKey = Character.getElementalKey(characterKey)\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\n    const isAutoElemental = Character.isAutoElemental(characterKey)\n    const isAutoInfusable = Character.isAutoInfusable(characterKey)\n    if (!isAutoElemental)\n      basicKeys.push(\"physical_dmg_\")\n\n    //show elemental interactions\n    const transReactions = ElementToReactionKeys[eleKey]\n    const weaponTypeKey = this.getWeaponTypeKey(characterKey)\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\n    if (this.hasTalentPage(characterKey)) {\n      const charFormulas = {}\n      Object.keys(Character.getCDataObj(characterKey)?.talent ?? {}).forEach(talentKey =>\n        Character.getTalentDocumentSections(characterKey, talentKey)?.forEach((section, sectionIndex) =>\n          section?.fields?.forEach((field, fieldIndex) =>\n            (field?.formula || this.getTalentField(characterKey, talentKey, sectionIndex, fieldIndex)?.formula) && (charFormulas[talentKey] = [...(charFormulas[talentKey] ?? []), {\n              talentKey,\n              sectionIndex,\n              fieldIndex\n            }]))))\n      return { basicKeys, ...charFormulas, transReactions }\n    } else {\n      //generic average hit parameters.\n      const genericAvgHit = []\n      if (!isAutoElemental) //add phy auto + charged + physical \n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\n\n      if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\n        genericAvgHit.push(`${eleKey}_normal_avgHit`, `${eleKey}_charged_avgHit`)\n      else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\n      }\n      //show skill/burst \n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\n\n      //add reactions.\n      if (eleKey === \"pyro\") {\n        const reactions = []\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\n        genericAvgHit.push(...reactions)\n      } else if (eleKey === \"cryo\")\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\n      else if (eleKey === \"hydro\")\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\n\n      return { basicKeys, genericAvgHit, transReactions }\n    }\n  }\n\n  static hasOverride = (character, statKey) => {\n    if (statKey === \"finalHP\")\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\n    else if (statKey === \"finalDEF\")\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\n    else if (statKey === \"finalATK\")\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\n  }\n\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\n    else return this.getBaseStatValue(character, statKey, defVal)\n  }\n\n  //equipment, with consideration on swapping equipped.\n  static equipArtifacts = (characterKey, artifactIds) => {\n    let character = CharacterDatabase.get(characterKey)\n    if (!character) return;\n    let artIdsOnCharacter = character.equippedArtifacts;\n    let artIdsNotOnCharacter = artifactIds\n\n    //swap, by slot\n    Artifact.getSlotKeys().forEach(slotKey => {\n      let artNotOnChar = ArtifactDatabase.get(artIdsNotOnCharacter?.[slotKey])\n      if (artNotOnChar.location === characterKey) return; //it is already equipped\n      let artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\n      let notCharLoc = (artNotOnChar?.location || \"\")\n      //move current art to other char\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\n      //move current art to other char\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\n      //move other art to current char\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\n    })\n    //move other art to current char \n    character.equippedArtifacts = {}\n    Object.entries(artifactIds).forEach(([key, artid]) =>\n      character.equippedArtifacts[key] = artid)\n    CharacterDatabase.updateCharacter(character);\n  }\n  static remove(characterKey) {\n    let character = CharacterDatabase.get(characterKey)\n    if (character.equippedArtifacts)\n      Object.values(character.equippedArtifacts).forEach(artid =>\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\n    CharacterDatabase.remove(characterKey)\n  }\n\n  static calculateBuild = (character) => {\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\n  }\n\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\n    let setToSlots = Artifact.setToSlots(artifacts)\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\n\n    let stats = deepClone(initialStats)\n    //add artifact and artifactsets\n    Object.values(artifacts).forEach(art => {\n      if (!art) return\n      //main stats\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\n      //substats\n      art.substats.forEach((substat) =>\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\n    })\n    //setEffects\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\n    //setEffects conditionals\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\n    })\n\n    let dependencies = GetDependencies(stats?.modifiers)\n    PreprocessFormulas(dependencies, stats).formula(stats)\n    return {\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\n      setToSlots,\n      finalStats: stats,\n      artifactConditionals\n    }\n  }\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\n    if (key === \"modifiers\") {\n      initialStats.modifiers = initialStats.modifiers ?? {}\n      for (const [statKey, modifier] of Object.entries(val)) {\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\n        for (const [mkey, multiplier] of Object.entries(modifier))\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\n      }\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\n  })\n\n  static calculateCharacterWithWeaponStats = (character) => {\n    character = deepClone(character)\n    const { characterKey, levelKey, hitMode, autoInfused, reactionMode, talentLevelKeys, constellation, talentConditionals = [] } = character\n    const ascension = Character.getAscension(levelKey)\n\n    //generate the initalStats obj with data from Character & overrides\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\n    initialStats.characterEle = this.getElementalKey(characterKey);\n    initialStats.characterKey = characterKey\n    initialStats.hitMode = hitMode;\n    initialStats.autoInfused = autoInfused && Character.getCDataObj(characterKey)?.talent?.auto?.infusable\n    initialStats.reactionMode = reactionMode;\n    initialStats.talentConditionals = talentConditionals\n    initialStats.weaponType = this.getWeaponTypeKey(characterKey)\n    initialStats.talentLevelKeys = talentLevelKeys;\n    initialStats.constellation = constellation\n    initialStats.ascension = ascension\n    for (const key in initialStats.talentLevelKeys)\n      initialStats.talentLevelKeys[key] += this.getTalentLevelBoost(character.characterKey, key, constellation);\n\n    //enemy stuff\n    Character.getElementalKeys().forEach(eleKey => {\n      let statKey = `${eleKey}_enemyRes_`\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\n      statKey = `${eleKey}_enemyImmunity`\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\n    })\n\n    //all the rest of the overrides\n    let overrides = character?.baseStatOverrides || {}\n    Object.entries(overrides).forEach(([statKey, val]) => {\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\n    })\n\n    //add specialized stat\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\n\n\n    //add stats from talentconditionals\n    talentConditionals.forEach(cond => {\n      const { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\n      const conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, initialStats.talentLevelKeys[talentKey], constellation, ascension)\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\n    })\n\n    //add stats from all talents\n    Character.getTalentStatsAll(characterKey, constellation, ascension).forEach(s => this.mergeStats(initialStats, s))\n\n    //add stats from weapons\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\n\n    return initialStats\n  }\n\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\nvar initiated = false\nvar characterDatabase = {};\n\nexport default class CharacterDatabase {\n  //do not instantiate.\n  constructor() {\n    if (this instanceof CharacterDatabase) throw Error('A static class cannot be instantiated.');\n  }\n  static isInvalid = (char) => !char || !char.characterKey || !char.levelKey\n  static getCharacterDatabase = () => deepClone(characterDatabase);\n  static getCharacterKeyList = () => Object.keys(characterDatabase);\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\n  static populateDatebaseFromLocalStorage = () => {\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\n    Object.keys(localStorage).filter(key => key.startsWith(\"char_\")).forEach(key => {\n      let [, characterKey] = key.split(\"char_\")\n      if (!characterDatabase[characterKey]) {\n        let character = loadFromLocalStorage(key);\n        if (!character) return;\n        characterDatabase[characterKey] = character;\n      }\n    })\n    initiated = true\n    return true\n  }\n  static updateCharacter = (char) => {\n    if (this.isInvalid(char)) return;\n    const dchar = deepClone(char)\n    saveToLocalStorage(`char_${char.characterKey}`, dchar);\n    characterDatabase[char.characterKey] = dchar;\n  }\n  static get = (characterKey) => characterDatabase?.[characterKey] ?? null\n\n  static remove = (characterKey) => {\n    delete characterDatabase[characterKey];\n    localStorage.removeItem(`char_${characterKey}`);\n  }\n  static getArtifactIDFromSlot = (characterKey, slotKey) =>\n    this.get(characterKey)?.equippedArtifacts?.[slotKey] ?? null\n\n  static equipArtifact = (characterKey, art) => {\n    const char = this.get(characterKey)\n    if (!char || !art || !art.slotKey) return\n    if (!char.equippedArtifacts) char.equippedArtifacts = {};\n    char.equippedArtifacts[art.slotKey] = art.id;\n    this.updateCharacter(char)\n  }\n  static unequipArtifactOnSlot = (characterKey, slotKey) => {\n    const char = this.get(characterKey)\n    if (!char || !slotKey) return\n    if (!char?.equippedArtifacts?.[slotKey]) return;\n    char.equippedArtifacts[slotKey] = \"\";\n    this.updateCharacter(char)\n  }\n  static equipArtifactBuild = (characterKey, artifactIds) => {\n    const character = this.get(characterKey)\n    if (!character) return;\n    character.equippedArtifacts = artifactIds\n    CharacterDatabase.updateCharacter(character);\n  }\n  //helper function for testing\n  static clearDatabase = () => {\n    characterDatabase = {}\n    initiated = false\n  }\n}\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\n\nconst SlotIcon = {\n  flower: faBahai,\n  plume: faFeatherAlt,\n  sands: faHourglass,\n  goblet: faWineGlass,\n  circlet: faCrown\n}\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\nimport ElementalData from './ElementalData';\nlet ArtifactData = {}\nlet ArtifactDataImport = import('./Artifacts')\nArtifactDataImport.then(imp => {\n  ArtifactData = imp.default\n  ArtifactDataImport = null\n})\nconst ArtifactMainSlotKeys = [\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\",\n]\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_dmg_`))\n\nconst ArtifactStarsData = {\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\n};\n\nconst ArtifactMainStatsData = {\n  1: {\n    hp: [129, 178, 227, 275, 324],\n    atk: [8, 12, 15, 18, 21],\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\n    eleMas: [13, 17, 22, 27, 32],\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\n  },\n  2: {\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\n  },\n  3: {\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\n  },\n  4: {\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\n  },\n  5: {\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\n    critDMG_: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\n  }\n}\n\nconst ArtifactSubStatsData = {\n  hp: { 1: [24, 30], 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\n  hp_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\n  atk: { 1: [2], 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\n  atk_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\n  def: { 1: [2], 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\n  def_: { 1: [1.5, 1.8], 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\n  eleMas: { 1: [5, 6], 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\n  enerRech_: { 1: [1.3, 1.6], 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\n  critRate_: { 1: [0.8, 1], 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\n  critDMG_: { 1: [1.6, 1.9], 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\n}\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubStatsData).map(([key, obj]) =>\n  [key, {\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\n  }]))\n\nconst ArtifactSlotsData = {\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\n};\n\nexport {\n  ArtifactMainSlotKeys,\n  ArtifactSlotsData,\n  ArtifactData,\n  ArtifactDataImport,\n  ArtifactSubStatsData,\n  ArtifactSubstatsMinMax,\n  ArtifactStarsData,\n  ArtifactMainStatsData\n};\n","export default class ArtifactBase {\n  //do not instantiate.\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\n\n  //returns {setKey:[slotKey...]}\n  static setToSlots = (artifacts) => {\n    let setToSlots = {};\n    Object.entries(artifacts).forEach(([key, art]) => {\n      if (!art) return\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\n      else setToSlots[art.setKey] = [key]\n    })\n    return setToSlots\n  }\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport CharacterDatabase from '../Character/CharacterDatabase';\nimport SlotIcon from '../Components/SlotIcon';\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\nimport Stat from '../Stat';\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\nimport ArtifactBase from './ArtifactBase';\nimport ArtifactDatabase from './ArtifactDatabase';\n\nconst maxStar = 5\n\nexport default class Artifact {\n  //do not instantiate.\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\n\n  //SETS\n  static getDataImport = () => ArtifactDataImport\n  static getSetKeys = () => Object.keys(ArtifactData || {})\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\n  static getSetsByMaxStarEntries = (star) =>\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\n\n  //SETEFFECT\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\n  static getArtifactSetEffectsStats = (setToSlots) => {\n    let artifactSetEffect = []\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\n        Object.entries(value.stats).forEach(([key, statVal]) =>\n          artifactSetEffect.push({ key, statVal }))))\n    return artifactSetEffect\n  }\n  static getSetEffects = (setToSlots) => {\n    let artifactSetEffect = {}\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\n      if (setNumKeys.length)\n        artifactSetEffect[setKey] = setNumKeys\n    })\n    return artifactSetEffect\n  }\n\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\n    if (!setEffectText) return defVal\n    if (typeof setEffectText === \"function\")\n      return setEffectText(charFinalStats)\n    else if (setEffectText)\n      return setEffectText\n    return defVal\n  }\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\n\n  //SLOT\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\n  static getSlotIcon = (slotKey, defVal = \"\") =>\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\n\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\n    if (!slotKey) return defVal;\n    let name = this.getSlotName(slotKey)\n    if (!name) return defVal;\n    let slotIcon = this.getSlotIcon(slotKey)\n    if (!slotIcon) return defVal;\n    return (<span>{slotIcon} {name}</span>)\n  }\n  static splitArtifactsBySlot = (databaseObj) =>\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\n\n  //STARS\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\n\n  //MAIN STATS\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\n\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\n    let main = this.getMainStatValues(numStars, key)[level]\n    if (main) return main\n    else if (key?.includes(\"_dmg_\")) // because in the database its still stored as ele_dmg_\n      return this.getMainStatValue(\"ele_dmg_\", numStars, level, defVal)\n    return defVal\n  }\n\n  //SUBSTATS\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\n  static getSubstatAllMax = (statKey, numStars = maxStar, defVal = 0) => ArtifactSubstatsMinMax?.[statKey]?.max[numStars] ?? defVal\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\n  static subStatCloseEnough = (key, value1, value2) => {\n    if (Stat.getStatUnit(key) === \"%\")\n      return closeEnoughFloat(value1, value2)\n    else\n      return closeEnoughInt(value1, value2)\n  }\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\n  static rollsRemaining = (level, numStars) =>\n    Math.ceil((numStars * 4 - level) / 4);\n  static numberOfSubstatUnlocked = (state) =>\n    state.substats.reduce((sum, cur) =>\n      sum + (cur && cur.value ? 1 : 0), 0);\n  static getSubstatRollData = (subStatKey, numStars) => ArtifactSubStatsData?.[subStatKey]?.[numStars] ?? []\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\n    if (!rollData.length) return defVal\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\n      return defVal\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\n    let rolls = [];\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\n    if (!maxNumRoll) return defVal;\n    const rollOption = (val, arr) => {\n      if (arr.length) {\n        if (arr.length > maxNumRoll) return;\n        let sum = arr.reduce((accu, v) => accu + v, 0)\n        if (isFloat) {\n          if (sum - val >= 0.101) return\n          if (closeEnoughFloat(sum, val))\n            return rolls.push(arr);\n        } else {\n          if (sum - val > 1) return\n          if (closeEnoughInt(sum, val))\n            return rolls.push(arr);\n        }\n      }\n      rollData.slice().reverse().forEach(roll => {\n        if (!arr.length || arr[arr.length - 1] >= roll)\n          rollOption(subStatValue, [...arr, roll])\n      })\n    }\n    rollOption(subStatValue, [])\n    return rolls;\n  }\n  static getSubstatEfficiency = (subStatKey, rolls = []) => {\n    let len = rolls.length\n    let sum = rolls.reduce((a, c) => a + c, 0)\n    let max = this.getSubstatAllMax(subStatKey) * len\n    return max ? clampPercent((sum / max) * 100) : 0\n  }\n\n  //ARTIFACT IN GENERAL\n  static substatsValidation(state) {\n    let { numStars = 0, level = 0, substats = [] } = state\n    //calculate rolls for substats\n    for (const substat of substats) {\n      let { key, value } = substat\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\n      substat.rolls = rollArr[0] || []\n      if (rollArr.length > 1) substat.rollArr = rollArr\n      substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\n    }\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\n    state.currentEfficiency = currentEfficiency\n    state.maximumEfficiency = maximumEfficiency\n    //artifact validation logic\n    let errMsgs = []\n    for (const substat of substats)\n      if (!substat.rolls?.length && substat.key && substat.value)\n        errMsgs.push(\"One of the substat is invalid.\")\n\n    //only show this error when all substats are \"valid\"\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\n\n    if (numStars) {\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\n        for (const substat of substats) {\n          let rollslen = substat.rolls?.length\n          if (!rollslen || !substat.rollArr) continue\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\n          if (moreRolls.length) {\n            substat.rolls = moreRolls[0]\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, substat.rolls)\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\n            state.currentEfficiency = currentEfficiency\n            state.maximumEfficiency = maximumEfficiency\n          }\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\n          if (currentNumOfRolls >= leastNumRolls) break;\n        }\n      }\n      if (currentNumOfRolls < leastNumRolls)\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\n      else {\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\n      }\n    }\n    return errMsgs\n  }\n  static getArtifactEfficiency(substats, numStars, level) {\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\n    // Relative to max star, so comparison between different * makes sense.\n    let totalPossbleRolls = Artifact.totalPossibleRolls(maxStar);\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\n    let statKeys = substats.filter(({ key }) => key).map(({ key }) => key)\n    let maxPerRoll = 100 * Math.max(...(statKeys.length === 4 ? statKeys : Object.keys(ArtifactSubstatsMinMax)).map(\n      key => Artifact.getSubstatAllMax(key, numStars) / Artifact.getSubstatAllMax(key)\n    ))\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * maxPerRoll) / totalPossbleRolls);\n    return { currentEfficiency, maximumEfficiency }\n  }\n\n  static setToSlots = ArtifactBase.setToSlots;\n\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\n    if (!conditionalNum) return defVal\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\n    if (!conditional) return defVal\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\n    if (!stacks) return defVal\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\n  }\n\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\n    let ArtifactSetEffectsObj = {};\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\n      let setEffect = {}\n      if (setObj.setEffects)\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\n        })\n      if (Object.keys(setEffect).length > 0)\n        ArtifactSetEffectsObj[setKey] = setEffect;\n    })\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\n      if (Object.keys(condStats).length > 0) {\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\n        Object.entries(condStats).forEach(([statKey, value]) =>\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\n      }\n    })\n    return ArtifactSetEffectsObj\n  }\n\n  //database manipulation\n  static equipArtifactOnChar(artifactId, characterKey) {\n    let art = ArtifactDatabase.get(artifactId);\n    if (!art) return;\n    let currentLocation = art.location;\n    let intendedLocation = (characterKey || \"\")\n    if (currentLocation === intendedLocation) return;\n    let slotKey = art.slotKey\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\n\n    //update artifact\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\n\n    //update Character\n    if (intendedLocation)\n      CharacterDatabase.equipArtifact(intendedLocation, art)\n\n    if (currentLocation) {\n      if (artifactToSwapWith)\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\n      else\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\n    }\n  }\n}\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { clamp } from \"./Util\";\n\nexport default class ConditionalsUtil {\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\n  static getConditionalNum(conditionals, srcKeyObj) {\n    let { srcKey, srcKey2 } = srcKeyObj\n    if (conditionals)\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\n  }\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\n    let { srcKey, srcKey2 } = srcKeyObj\n    if (!conditionals) conditionals = []\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\n    if (!conditionalNum && index >= 0) {\n      //setting conditionalNum to 0 deletes the element\n      conditionals.splice(index, 1);\n    } else if (!conditionalNum && index < 0) { //nothing to change\n      return conditionals\n    } else {\n      let newCond = { srcKey, conditionalNum }\n      if (srcKey2) newCond.srcKey2 = srcKey2\n      if (index >= 0)\n        conditionals[index] = newCond\n      else\n        conditionals.push(newCond)\n    }\n    return conditionals\n  }\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\n    if (Array.isArray(conditional)) {\n      //multiconditional\n      let selectedConditionalNum = conditionalNum\n      let selectedConditional = null\n      for (const curConditional of conditional) {\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\n        else {\n          selectedConditional = curConditional;\n          break;\n        }\n      }\n      if (!selectedConditional) return defVal\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\n      return [selectedConditional[fieldName], stacks]\n    } else {\n      //condtional with stacks\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\n      return [conditional[fieldName], stacks]\n    }\n  }\n}","const ElementalData = {\n  physical: { name: \"Physical\" },\n  anemo: { name: \"Anemo\" },\n  geo: { name: \"Geo\" },\n  electro: { name: \"Electro\" },\n  hydro: { name: \"Hydro\" },\n  pyro: { name: \"Pyro\" },\n  cryo: { name: \"Cryo\" },\n  // dendro: { name: \"Dendro\" }\n}\nexport default ElementalData","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\nvar initiated = false\nvar artifactDatabase = {};\nvar artIdIndex = 1;\nexport default class ArtifactDatabase {\n  //do not instantiate.\n  constructor() {\n    if (this instanceof ArtifactDatabase) {\n      throw Error('A static class cannot be instantiated.');\n    }\n  }\n  static isInvalid = (art) =>\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\n  static populateDatebaseFromLocalStorage = () => {\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\n      if (!artifactDatabase[id]) {\n        let art = loadFromLocalStorage(id)\n        if (!art) return;\n        if (this.isInvalid(art)) {\n          this.removeArtifactById(id);\n          return;\n        }\n        artifactDatabase[id] = art;\n      }\n    })\n    initiated = true\n    return true\n  }\n  static get = (id) => artifactDatabase[id] ?? null\n  static removeArtifact = (art) => {\n    this.removeArtifactById(art.id);\n  }\n  static updateArtifact = (art) => {\n    if (this.isInvalid(art)) return;\n    let id = art.id;\n    if (!id) {//if does not have id, generate ID\n      do {\n        id = `artifact_${artIdIndex++}`\n      } while (localStorage.getItem(id) !== null)\n      art.id = id\n    }\n    let dart = deepClone(art)\n    saveToLocalStorage(id, dart);\n    artifactDatabase[id] = dart;\n  }\n  static removeArtifactById = (artId) => {\n    delete artifactDatabase[artId];\n    localStorage.removeItem(artId);\n  }\n\n  static moveToNewLocation = (artid, location) => {\n    if (!artid) return;\n    let art = this.get(artid)\n    if (!art || art.location === location) return;\n    art.location = location;\n    this.updateArtifact(art);\n  }\n  static swapLocations = (artA, artB) => {\n    let locA = artA.location\n    let locB = artB.location\n    this.moveToNewLocation(artA.id, locB)\n    this.moveToNewLocation(artB.id, locA)\n  }\n  static swapLocationsById = (artAid, artBid) =>\n    this.swapLocations(this.get(artAid), this.get(artBid))\n  //helper function for testing\n  static clearDatabase = () => {\n    artifactDatabase = {}\n    initiated = false\n    artIdIndex = 1\n  }\n}","import { clamp } from \"./Util/Util\";\nimport { ReactionMatrix, hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\n\nconst StatData = {\n  flat: { name: \"\", default: 1 },\n\n  // Character Stats\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\n\n  // Weapon Stats\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\n\n  // Character & Weapon Stats\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\n\n  // Weapon & Artifact Stats\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\n\n  // Attack-related Character, Weapon & Artifact Stats\n  finalHP: { name: \"HP\", pretty: \"HP\" },\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\n\n  eleMas: { name: \"Elemental Mastery\", },\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\" },\n  critRate_: { name: \"CRIT Rate\", unit: \"%\" },\n\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\" },\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\n\n  // Misc. Stats\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\n  powShield_: { name: \"Powerful Shield\", unit: \"%\" },\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\n  stamina: { name: \"Stamina\" },\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\n\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\n\n  // Reaction\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\n\n  // Enemy\n  enemyLevel: { name: \"Enemy Level\", const: true },\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\n}\nconst Formulas = {\n  // Basic Stats\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\n\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / (100 + c.enemyLevel + 100 + c.characterLevel),\n\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\n\n  // Reactions\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\n\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\n  crystalize_multi: (s, c) => ReactionMatrix[\"crystalize\"].reduce((accu, val, i) => accu + val * Math.pow(c.characterLevel, i), 0),\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\n}\n\nconst ElementToReactionKeys = {\n  physical: [],\n  anemo: [\"swirl_hit\"],\n  geo: [\"crystalize_hit\", \"shattered_hit\"],\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\", \n  dendro: []\n}\nfunction resMultiplier(res) {\n  res = res / 100\n  if (res < 0) return 1 - res / 2\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\n  return 1 - res\n}\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\n\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\n})\n\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n  const opt = { variant: ele }\n  // DONT CHANGE. needed for screenshot parsing\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\n\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, const: true, ...opt }\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\n\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", const: true, ...opt }\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\n\n  Object.entries(hitTypes).forEach(([type, typeName]) => {\n    StatData[`${ele}_elemental_${type}`] = { name: `${eleName} Attack ${typeName}`, ...opt }\n    StatData[`${ele}_elemental_${type}_multi`] = { name: `${eleName} Attack ${typeName} Multiplier`, unit: \"multi\" }\n\n    Formulas[`${ele}_elemental_${type}`] = (s) => s.finalATK * s[`${ele}_elemental_${type}_multi`]\n  })\n\n  Formulas[`${ele}_elemental_hit_multi`] = (s, c) => (1 + (s.dmg_ + s[`${ele}_dmg_`]) / 100) * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\n  Formulas[`${ele}_elemental_critHit_multi`] = (s) => s[`${ele}_elemental_hit_multi`] * (1 + s.critDMG_ / 100)\n  Formulas[`${ele}_elemental_avgHit_multi`] = (s) => s[`${ele}_elemental_hit_multi`] * (1 + s.critDMG_ * s[`critRate_`] / 10000)\n\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(c[`${ele}_enemyRes_`])\n})\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n    const opt = { variant: ele }\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\n\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\n    })\n\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => (1 + (s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100) * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * (1 + s.critDMG_ / 100)\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\n  })\n})\n\nObject.entries(transformativeReactions).forEach(([reaction, [reactionName, ele, baseMulti]]) => {\n  let opt = {}\n  if (ele) opt.variant = reaction\n  StatData[`${reaction}_hit`] = { name: `${reactionName} DMG`, ...opt }\n  StatData[`${reaction}_dmg_`] = { name: `${reactionName} DMG Bonus`, unit: \"%\", ...opt }\n  StatData[`${reaction}_multi`] = { name: `${reactionName} Multiplier`, unit: \"multi\", const: true, ...opt }\n\n  Formulas[`${reaction}_multi`] = (s, c) => ReactionMatrix[reaction].reduce((accu, val, i) => accu + val * Math.pow(c.characterLevel, i), 0)\n  Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\n})\n\nObject.entries(amplifyingReactions).forEach(([reaction, [name, variants]]) => {\n  const opt = { variant: reaction }\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      StatData[`${ele}_${reaction}_elemental_${type}`] = { name: `${name} ${typeName}`, ...opt }\n      Formulas[`${ele}_${reaction}_elemental_${type}`] = (s) => s[`${ele}_elemental_${type}`] * s[`${ele}_${reaction}_multi`]\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s[`${ele}_${move}_${type}`] * s[`${ele}_${reaction}_multi`]\n      })\n    })\n  })\n})\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\n\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\n  const formulaList = dependencyKeys.map(key => {\n    const modifier = modifiers[key] ?? {}\n    const constModifier = Object.entries(modifier).filter(([k]) => StatData[k]?.const)\n    const dynamicModifier = Object.entries(modifier).filter(([k]) => !(StatData[k]?.const))\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]) => accu + c[k] * m, 0)\n    const dynamicFunc = (s) => dynamicModifier.reduce((accu, [k, m]) => accu + s[k] * m, 0)\n\n    let funcIndicator = 0\n    if (constModifier.length) funcIndicator += 1\n    if (dynamicModifier.length) funcIndicator += 2\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\n\n    let tmp\n    switch (funcIndicator) {\n      case 0: tmp = Formulas[key]; break\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\n      case 4: tmp = (s, c) => c[key]; break\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\n      case 8: tmp = (s, c) => s[key]; break\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\n    }\n    const func = tmp\n\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\n\n    if (!(key in Formulas))\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\n\n    if (StatData[key]?.const) {\n      constData[key] = stats[key]\n      constData[key] = func(stats, constData)\n      stats[key] = constData[key]\n      if (dynamicModifier.length)\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\n      return null\n    }\n\n    if (!(key in Formulas))\n      initialStats[key] = stats[key]\n\n    return [key, func]\n  }).filter((func) => func)\n\n  if (debug) console.log(initialStats, constData)\n\n  return {\n    initialStats,\n    formula: s => {\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\n      Object.assign(s, constData)\n    }\n  }\n}\n\nexport {\n  Formulas,\n  StatData,\n  ElementToReactionKeys,\n  PreprocessFormulas,\n}\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\nimport { objMultiplication } from '../Util/Util.js';\nexport default class Weapon {\n  //do not instantiate.\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\n\n  static getWeaponDataImport = () => WeaponDataImport\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\n\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\n\n  //base Stat\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\n\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\n  static getWeaponTypeKeys = () => Object.keys(WeaponTypeData)\n\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\n\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\n    let conditional = this.getWeaponConditional(weaponKey)\n    if (!conditional || !conditionalNum) return defVal\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\n    if (!stacks) return defVal\n    stats = stats(refineIndex)\n    if (stacks !== 1) objMultiplication(stats, stacks)\n    return stats\n  }\n}"],"sourceRoot":""}