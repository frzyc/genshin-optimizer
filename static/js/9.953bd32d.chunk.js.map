{"version":3,"sources":["StatDependency.js","Components/StarDisplay.js","Data/WeaponData.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","../node_modules/react-bootstrap/esm/Badge.js","Data/CharacterData.js","DatabaseUtil.js","Components/StatIcon.js","Character/CharacterCard.js","Character/CharacterDisplay.js","Character/Character.js","Util/Util.js","Stat.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Util/ConditionalsUtil.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Artifact/ArtifactDatabase.js","Data/ElementalData.js","StatData.js","Weapon/Weapon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"names":["GetFormulaDependency","formula","dependency","Set","Proxy","get","target","prop","receiver","add","formulaKeyDependency","Object","freeze","fromEntries","keys","Formulas","map","key","GetDependencies","modifiers","StatData","dependencies","forEach","InsertDependencies","has","k","StarIcon","icon","faStar","Stars","stars","colored","className","Array","_","i","WeaponData","WeaponDataImport","then","imp","default","WeaponLevelKeys","LevelNameData","WeaponTypeData","sword","claymore","catalyst","bow","polearm","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","resin","fragile","condensed","exp_books","advice","wit","experience","Badge","React","forwardRef","_ref","ref","bsPrefix","variant","pill","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","CharacterData","CharacterDataImport","LevelsData","name","level","asend","characterStatBase","crit_rate","crit_dmg","ener_rech","stam","CharacterSpecializedStatKey","DatabaseInitAndVerify","charDBJustPopualted","CharacterDatabase","populateDatebaseFromLocalStorage","artDBJustPopualted","ArtifactDatabase","dbVersion","getDatabaseVersion","arts","getArtifactDatabase","values","art","valid","location","getCharacter","artInSlotId","getArtifactIDFromSlot","slotKey","id","equipArtifact","Artifact","substatsValidation","numStars","parseInt","keyMapping","setKey","mainStatKey","endsWith","replace","updateArtifact","chars","getCharacterDatabase","character","entries","equippedArtifacts","artid","equippedArt","getArtifact","moveToNewLocation","artifactConditionals","filter","cond","srcKey","srcKey2","dmgMode","updateCharacter","setDatabaseVersion","defVal","loadFromLocalStorage","version","saveToLocalStorage","StatIcon","hp_base","faTint","hp_final","hp_","hp","atk_base","faFistRaised","atk_character_base","atk_final","atk_","atk","def_base","faShieldAlt","def_final","def_","def","ele_mas","faMagic","faDice","faDiceD20","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","CharacterCard","useReducer","x","forceUpdate","useEffect","Promise","all","Character","getCharacterDataImport","Weapon","getWeaponDataImport","getDataImport","characterId","onEdit","onDelete","build","calculateBuild","setToSlots","characterKey","weapon","constellation","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","weaponName","getWeaponName","weaponMainVal","getWeaponMainStatValWithOverride","weaponSubKey","getWeaponSubStatKey","weaponSubVal","getWeaponSubStatValWithOverride","weaponLevelName","getLevelName","levelKey","weaponPassiveName","getWeaponPassiveName","cardClassName","bg","text","Header","header","xs","size","onClick","faEdit","faTrashAlt","Body","style","cursor","src","getThumb","getStar","thumbnail","getName","getStatValueWithOverride","refineIndex","Stat","getStatName","getStatUnit","getSetEffects","arr","artifactSetName","getSetName","highestNum","Math","max","unit","statVal","finalStats","toFixed","fixedUnit","footer","Footer","Link","to","pathname","selectedCharacterId","CharacterDisplayCardPromise","CharacterDisplayCard","lazy","CharacterDisplay","deleteCharacter","removeCharacter","editCharacter","setState","charIdToEdit","showEditor","scrollRef","current","scrollIntoView","behavior","cancelEditCharacter","state","ReactGA","pageview","this","createRef","charIdList","getCharacterIdList","Suspense","fallback","editable","onClose","lg","md","faPlus","Error","removeCharacterById","getBaseStatValue","getSpecializedStatKey","getSpeicalizedStatVal","getLevel","includes","characterObj","getCDataObj","baseStat","getIndexFromlevelkey","charKey","getElementalName","elementalKey","ElementalData","getAllCharacterKeys","star","getElementalKeys","getConstellationName","constellationName","getTitles","titles","getlevelKeys","getlevelNames","indexOf","getAscension","getSpecializedStat","specializeStat","value","thumbImg","getCard","cardImg","getTalentImg","talentKey","getTalent","img","getConstellationImg","constIndex","talent","getTalentName","getTalentLevelBoost","talents","talentBoost","boostEntry","find","getTalentLevelKey","withBoost","talentLvlKey","talentLevelKeys","levelBoost","clamp","getTalentDocument","document","getTalentFields","fields","getTalentStats","ascension","stats","getTalentStatsAll","statsArr","push","getTalentConditional","conditionalKey","doc","section","tempCond","conditional","getTalentConditionalStats","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","val","getTalentConditionalFields","getTalentStatKey","skillKey","elemental","autoInfused","reactionMode","charEleKey","isAutoElemental","auto","infusable","eleKey","getTalentStatKeyVariant","isAutoInfusable","getDisplayStatKeys","atkKeys","startsWith","ElementToReactionKeys","hasOverride","baseStatOverrides","equipArtifacts","artifactIds","artIdsOnCharacter","artIdsNotOnCharacter","getSlotKeys","artNotOnChar","artOnChar","notCharLoc","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","deepClone","getMainStatValue","artifactsAssumeFull","substats","substat","stat","setNumKey","length","getConditionalStats","PreprocessFormulas","mergeStats","modifier","mkey","multiplier","statKeys","char_ele_key","overrides","hasOwnProperty","specializedStatVal","specialStatKey","talentConditionals","s","getWeaponBonusStat","getWeaponConditionalStat","getRandomElementFromArray","array","floor","random","getRandomIntInclusive","min","ceil","data","localStorage","getItem","JSON","parse","obj","setItem","stringify","closeEnoughFloat","a","b","abs","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","htmlStatsData","getStatNamePretty","pretty","getStatNameRaw","getStatNameWithPercent","getStatVariant","printStat","f","expand","getPrintableFormulaStatKeyList","statList","formulaKeys","FormulaText","modifiersKeys","printFormula","modifierText","options","statName","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_dmg","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_dmg","electrocharged_multi","electrocharged","superconduct_dmg","superconduct_multi","superconduct","swirl_dmg","swirl_multi","swirl","shatter_dmg","shatter_multi","shattered","crystalize_dmg","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","amp_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","defineProperty","configurable","enumerable","writable","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","arguments","source","getOwnPropertyDescriptors","defineProperties","initiated","characterDatabase","charIdIndex","isInvalid","char","getIdNameList","addCharacter","dchar","removeItem","charid","unequipArtifactOnSlot","equipArtifactBuild","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","phy_dmg_bonus","ele_dmg_bonus","2","ArtifactSubStatsData","ArtifactSubstatsMinMax","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","rolls","efficiency","getSubstatEfficiency","getArtifactEfficiency","currentEfficiency","maximumEfficiency","errMsgs","some","currentNumOfRolls","reduce","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","maxPerRoll","getSubstatAllMax","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getSetKeys","getSetsByMaxStarEntries","setobj","rarity","getPieces","pieces","getPieceName","getPieceIcon","icons","getSetEffectsObj","setEffects","getArtifactSetNumStats","artifactSetEffect","artArr","setNumKeys","getSetEffectText","charFinalStats","setEffectText","getSetEffectConditional","getSlotName","getSlotIcon","getSlotMainStatKeys","getSlotNameWithIcon","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","main","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatKey","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","accu","v","reverse","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","conditionals","srcKeyObj","index","findIndex","splice","newCond","fieldName","selectedConditionalNum","selectedConditional","curConditional","maxStack","_createForOfIteratorHelper","allowArrayLike","it","F","n","done","e","_e","err","normalCompletion","didErr","step","next","_e2","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","dependencyKeys","preFormulas","modifierFunc","initial","reactionName","dmgKey","dmgName","str","atkTypeName","dmgModeName","ele_key","getLevelIndex","weaponKey","getWeaponRarity","passiveName","getWeaponPassiveDescription","passiveDescription","getWeaponDescription","description","getWeaponConditional","getWeaponImg","getWeaponMainStatVal","baseStats","getWeaponSubStatVal","sub","getWeaponsOfType","weaponType","getWeaponTypeName","weaponObj","overrideMainVal","overrideSubVal","_defineProperty"],"mappings":"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","file":"static/js/9.953bd32d.chunk.js","sourcesContent":["import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  console.log(formulaKeyDependency)\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key) &&\r\n      console.error(\"Formula\", `\"${formulaKey}\"`, \"has dependency with key\", `\"${key}\"`, \"that does not Exist in StatData.\"))\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n}\r\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\nimport { loadFromLocalStorage, saveToLocalStorage } from \"./Util/Util\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //this will only run if neither of the database has been initated.\r\n  const charDBJustPopualted = CharacterDatabase.populateDatebaseFromLocalStorage(),\r\n    artDBJustPopualted = ArtifactDatabase.populateDatebaseFromLocalStorage()\r\n  if (!charDBJustPopualted && !artDBJustPopualted) return\r\n  const dbVersion = getDatabaseVersion()\r\n  //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n  let arts = ArtifactDatabase.getArtifactDatabase();\r\n  Object.values(arts).forEach(art => {\r\n    let valid = true\r\n    if (art.location) {\r\n      const locationChar = CharacterDatabase.getCharacter(art.location)\r\n      if (locationChar) {\r\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\r\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\r\n          CharacterDatabase.equipArtifact(art.location, art)\r\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\r\n          art.location = \"\"\r\n          valid = false\r\n        }\r\n      } else {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (dbVersion < 1) {\r\n      //generate artifact efficiency again for artifacts\r\n      Artifact.substatsValidation(art)\r\n      valid = false\r\n\r\n      //there was a bug that saved the numStars as strings. convert to number.\r\n      if (typeof art.numStars === \"string\") {\r\n        art.numStars = parseInt(art.numStars)\r\n        valid = false\r\n      }\r\n\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (!valid)\r\n      ArtifactDatabase.updateArtifact(art)\r\n  })\r\n\r\n  let chars = CharacterDatabase.getCharacterDatabase();\r\n  Object.values(chars).forEach(character => {\r\n    let valid = true;\r\n    //verify character database equipment validity\r\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\r\n      const equippedArt = ArtifactDatabase.getArtifact(artid)\r\n      if (equippedArt && equippedArt.location !== character.id) //the artifact doesnt have the right location...\r\n        ArtifactDatabase.moveToNewLocation(artid, character.id)\r\n      if (!equippedArt) {\r\n        valid = false\r\n        character.equippedArtifacts[slotKey] = \"\"\r\n      }\r\n    })\r\n\r\n    if (dbVersion < 1) {\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      }) ?? []\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n    }\r\n    if (!valid) {\r\n      CharacterDatabase.updateCharacter(character)\r\n    }\r\n  })\r\n  setDatabaseVersion(1)\r\n}\r\nconst getDatabaseVersion = (defVal = 0) =>\r\n  parseInt(loadFromLocalStorage(\"db_ver\") ?? defVal)\r\n\r\nconst setDatabaseVersion = (version) =>\r\n  saveToLocalStorage(\"db_ver\", version)\r\n\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_character_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport Stat from '../Stat';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nexport default function CharacterCard(props) {\r\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => forceUpdate())\r\n  }, [])\r\n  let { characterId, onEdit, onDelete } = props\r\n  let character = CharacterDatabase.getCharacter(characterId)\r\n  if (!character) return null;\r\n  let build = Character.calculateBuild(character)\r\n  let { setToSlots } = build\r\n\r\n  let { characterKey, name, weapon = {}, constellation } = character\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponName = Weapon.getWeaponName(weapon.key)\r\n  let weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\r\n  let weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\r\n  let weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const statkeys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\",]\r\n  return (<Card className={props.cardClassName} bg={props.bg ? props.bg : \"darkcontent\"} text=\"lightfont\">\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {props.header ? props.header : <h6><b>{name}</b></h6>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {props.onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {props.onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={onEdit} style={{ cursor: onEdit ? \"pointer\" : \"default\" }}>\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={Character.getThumb(characterKey)} className={`w-100 h-auto grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h4>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h4>\r\n          <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n          <span>{`Lvl. ${Character.getStatValueWithOverride(character, \"char_level\")} C${constellation}`}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {Object.entries(Artifact.getSetEffects(setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = Artifact.getSetName(key)\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = build.finalStats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {props.footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        selectedCharacterId: characterId\r\n      }}>\r\n        Generate Builds\r\n        </Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy } from 'react';\r\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport Character from './Character';\r\nimport CharacterCard from './CharacterCard';\r\nimport CharacterDatabase from './CharacterDatabase';\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCardPromise = import('../Character/CharacterDisplayCard');\r\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\r\n\r\nexport default class CharacterDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = {\r\n      charIdToEdit: \"\",\r\n      showEditor: false,\r\n    }\r\n    ReactGA.pageview('/character')\r\n  }\r\n\r\n  deleteCharacter = (id) => {\r\n    Character.removeCharacter(id)\r\n    this.forceUpdate()\r\n  }\r\n\r\n  editCharacter = (id) =>\r\n    this.setState({ charIdToEdit: id, showEditor: true },\r\n      () => this.scrollRef.current.scrollIntoView({ behavior: \"smooth\" }))\r\n\r\n  cancelEditCharacter = () =>\r\n    this.setState({ charIdToEdit: null, showEditor: false })\r\n\r\n  componentDidMount() {\r\n    this.scrollRef = React.createRef()\r\n  }\r\n  render() {\r\n    let charIdList = CharacterDatabase.getCharacterIdList()\r\n    return (<Container ref={this.scrollRef}>\r\n      {/* editor/character detail display */}\r\n      {this.state.showEditor ? <Row className=\"mt-2\"><Col>\r\n        <React.Suspense fallback={<span>Loading...</span>}>\r\n          <CharacterDisplayCard editable\r\n            characterId={this.state.charIdToEdit}\r\n            onClose={this.cancelEditCharacter}\r\n            footer={<Button variant=\"danger\" onClick={this.cancelEditCharacter}>Close</Button>}\r\n          />\r\n        </React.Suspense>\r\n      </Col></Row> : null}\r\n\r\n      <Row className=\"mt-2\">\r\n        {this.state.showEditor ? null : <Col lg={4} md={6} className=\"mb-2\">\r\n          <Card className=\"h-100\" bg=\"darkcontent\" text=\"lightfont\">\r\n            <Card.Header className=\"pr-2\">\r\n              <span>Add New Character</span>\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex flex-column justify-content-center\">\r\n              <Row className=\"d-flex flex-row justify-content-center\">\r\n                <Col xs=\"auto\">\r\n                  <Button onClick={() => this.editCharacter(\"\")}>\r\n                    <h1><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></h1>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>}\r\n        {charIdList.map(id =>\r\n          <Col key={id} lg={4} md={6} className=\"mb-2\">\r\n            <CharacterCard\r\n              cardClassName=\"h-100\"\r\n              characterId={id}\r\n              onDelete={() => this.deleteCharacter(id)}\r\n              onEdit={() => this.editCharacter(id)}\r\n            />\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Container>)\r\n\r\n  }\r\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\nimport { GetDependencies } from \"../StatDependency\"\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    if (skillKey === \"phy\") return `phy_${dmgMode}`\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    if (skillKey === \"phy\") return \"physical\"\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_character_base\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats.modifiers)(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of Object.entries(val)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of Object.entries(modifier))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\r\n  })\r\n\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_character_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey, constellation)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    Character.getTalentStatsAll(characterKey, constellation, ascension).forEach(s => this.mergeStats(initialStats, s))\r\n    \r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\r\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\r\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\r\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\r\n    let formulaKeys = Object.keys(FormulaText)\r\n    let modifiersKeys = Object.keys(modifiers)\r\n    return statList.filter(statKey => formulaKeys.includes(statKey) || modifiersKeys.includes(statKey))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_base: (o) => <span>{f(o, \"atk_character_base\")} + {f(o, \"atk_weapon\")} </span>,\r\n  atk_final: (o) => <span>{f(o, \"atk_base\")} * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"plunge_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"plunge_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"plunge_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"plunge_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  amp_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(o, \"ele_mas\")} * exp^(-0.000505 * {f(o, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_plunge_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_plunge_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_plunge_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `plunge_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\r\nimport ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 1: [24, 30], 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 1: [2], 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 1: [2], 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 1: [1.5, 1.8], 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 1: [5, 6], 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 1: [1.3, 1.6], 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 1: [0.8, 1], 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 1: [1.6, 1.9], 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubStatsData).map(([key, obj]) =>\r\n  [key, {\r\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\r\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\r\n  }]))\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactSubstatsMinMax,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nconst maxStar = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubstatAllMax = (statKey, numStars = maxStar, defVal = 0) => ArtifactSubstatsMinMax?.[statKey]?.max[numStars] ?? defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, rolls = []) => {\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let max = this.getSubstatAllMax(subStatKey) * len\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      if (rollArr.length > 1) substat.rollArr = rollArr\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(maxStar);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let statKeys = substats.filter(({ key }) => key).map(({ key }) => key)\r\n    let maxPerRoll = 100 * Math.max(...(statKeys.length === 4 ? statKeys : Object.keys(ArtifactSubstatsMinMax)).map(\r\n      key => Artifact.getSubstatAllMax(key, numStars) / Artifact.getSubstatAllMax(key)\r\n    ))\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * maxPerRoll) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect).length > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n      if (Object.keys(condStats).length > 0) {\r\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n        Object.entries(condStats).forEach(([statKey, value]) =>\r\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\r\n      }\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else if (!conditionalNum && index < 0) { //nothing to change\r\n      return conditionals\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => artifactDatabase[id] || null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_character_base: { name: \"ATK\", pretty: \"ATK Character Base\" },\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  plunge_atk_dmg_bonus: { name: \"Plunging Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  all_dmg_bonus: { name: \"All DMG Bonus\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elemental Mastery Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elemental Mastery Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elemental Mastery Multiplier Z\", unit: \"multi\" },\r\n  amp_reaction_base_multi: { name: \"Amplifying Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_base: (s) => s.atk_character_base + s.atk_weapon,\r\n  atk_final: (s) => s.atk_base * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.atk_final * s.plunge_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  plunge_crit_dmg: (s) => s.plunge_dmg * s.crit_dmg_multi,\r\n  plunge_avg_dmg: (s) => s.plunge_dmg * s.crit_multi,\r\n  plunge_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.plunge_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  amp_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s.atk_final * s[`${ele}_plunge_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_plunge_dmg`] * s.crit_dmg_multi,\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_plunge_dmg`] * s.crit_multi,\r\n  plunge_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.plunge_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.all_dmg_bonus) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, modifiers = {}) {\r\n  const preFormulas = dependencyKeys.map(key => {\r\n    if (modifiers[key]) {\r\n      const modifierFunc = (stat, initial) => Object.entries(modifiers[key]).reduce((accu, [mkey, multiplier]) =>\r\n        accu + stat[mkey] * multiplier, initial)\r\n      if (key in Formulas) return [key, (s) => modifierFunc(s, Formulas[key](s))]\r\n      return [key, (s) => modifierFunc(s, s[key] ?? StatData?.[key]?.default ?? 0)]\r\n    } else {\r\n      if (key in Formulas) return [key, Formulas[key]]\r\n      return [key, (s) => (s[key] ?? StatData?.[key]?.default ?? 0)]\r\n    }\r\n  })\r\n  return stat => preFormulas.forEach(([key, formula]) => stat[key] = formula(stat))\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  PreprocessFormulas,\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"sourceRoot":""}