{"version":3,"sources":["Character/CharacterDisplay.js"],"names":["CharacterDisplay","props","deleteCharacter","id","Character","removeCharacter","forceUpdate","editCharacter","setState","charIdToEdit","showEditor","scrollRef","current","scrollIntoView","behavior","cancelEditCharacter","DatabaseInitAndVerify","state","ReactGA","pageview","this","React","createRef","charIdList","CharacterDatabase","getCharacterIdList","ref","className","editable","characterId","onClose","footer","variant","onClick","lg","md","bg","text","Header","Body","xs","icon","faPlus","map","cardClassName","onDelete","onEdit","Component"],"mappings":"qVAWqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,gBAAkB,SAACC,GACjBC,IAAUC,gBAAgBF,GAC1B,EAAKG,eAZY,EAenBC,cAAgB,SAACJ,GAAD,OACd,EAAKK,SAAS,CAAEC,aAAcN,EAAIO,YAAY,IAC5C,kBAAM,EAAKC,UAAUC,QAAQC,eAAe,CAAEC,SAAU,eAjBzC,EAmBnBC,oBAAsB,kBACpB,EAAKP,SAAS,CAAEC,aAAc,KAAMC,YAAY,KAlBhDM,cACA,EAAKC,MAAQ,CACXR,aAAc,GACdC,YAAY,GAEdQ,IAAQC,SAAS,cAPA,E,gEAuBjBC,KAAKT,UAAYU,IAAMC,c,+BAEf,IAAD,OACHC,EAAaC,IAAkBC,qBACnC,OAAQ,eAAC,IAAD,CAAWC,IAAKN,KAAKT,UAArB,UAELS,KAAKH,MAAMP,WAAa,cAAC,IAAD,CAAKiB,UAAU,OAAf,SAAsB,cAAC,IAAD,UAC7C,cAAC,IAAD,CAAsBC,UAAQ,EAC5BC,YAAaT,KAAKH,MAAMR,aACxBqB,QAASV,KAAKL,oBACdgB,OAAQ,cAAC,IAAD,CAAQC,QAAQ,SAASC,QAASb,KAAKL,oBAAvC,yBAEG,KAEf,eAAC,IAAD,CAAKY,UAAU,OAAf,UACGP,KAAKH,MAAMP,WAAa,KAAO,cAAC,IAAD,CAAKwB,GAAI,EAAGC,GAAI,EAAGR,UAAU,OAA7B,SAC9B,eAAC,IAAD,CAAMA,UAAU,QAAQS,GAAG,cAAcC,KAAK,YAA9C,UACE,cAAC,IAAKC,OAAN,CAAaX,UAAU,OAAvB,SACE,uDAEF,cAAC,IAAKY,KAAN,CAAWZ,UAAU,4CAArB,SACE,cAAC,IAAD,CAAKA,UAAU,yCAAf,SACE,cAAC,IAAD,CAAKa,GAAG,OAAR,SACE,cAAC,IAAD,CAAQP,QAAS,kBAAM,EAAK1B,cAAc,KAA1C,SACE,6BAAI,cAAC,IAAD,CAAiBkC,KAAMC,IAAQf,UAAU,yBAOxDJ,EAAWoB,KAAI,SAAAxC,GAAE,OAChB,cAAC,IAAD,CAAc+B,GAAI,EAAGC,GAAI,EAAGR,UAAU,OAAtC,SACE,cAAC,IAAD,CACEiB,cAAc,QACdf,YAAa1B,EACb0C,SAAU,kBAAM,EAAK3C,gBAAgBC,IACrC2C,OAAQ,kBAAM,EAAKvC,cAAcJ,OAL3BA,gB,GAxD0BkB,IAAM0B","file":"static/js/11.461b7b09.chunk.js","sourcesContent":["import { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport Character from './Character';\r\nimport CharacterCard from './CharacterCard';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterDisplayCard from './CharacterDisplayCard';\r\nimport ReactGA from 'react-ga';\r\n\r\nexport default class CharacterDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = {\r\n      charIdToEdit: \"\",\r\n      showEditor: false,\r\n    }\r\n    ReactGA.pageview('/character')\r\n  }\r\n\r\n  deleteCharacter = (id) => {\r\n    Character.removeCharacter(id)\r\n    this.forceUpdate()\r\n  }\r\n\r\n  editCharacter = (id) =>\r\n    this.setState({ charIdToEdit: id, showEditor: true },\r\n      () => this.scrollRef.current.scrollIntoView({ behavior: \"smooth\" }))\r\n\r\n  cancelEditCharacter = () =>\r\n    this.setState({ charIdToEdit: null, showEditor: false })\r\n\r\n  componentDidMount() {\r\n    this.scrollRef = React.createRef()\r\n  }\r\n  render() {\r\n    let charIdList = CharacterDatabase.getCharacterIdList()\r\n    return (<Container ref={this.scrollRef}>\r\n      {/* editor/character detail display */}\r\n      {this.state.showEditor ? <Row className=\"mt-2\"><Col>\r\n        <CharacterDisplayCard editable\r\n          characterId={this.state.charIdToEdit}\r\n          onClose={this.cancelEditCharacter}\r\n          footer={<Button variant=\"danger\" onClick={this.cancelEditCharacter}>Close</Button>}\r\n        />\r\n      </Col></Row> : null}\r\n\r\n      <Row className=\"mt-2\">\r\n        {this.state.showEditor ? null : <Col lg={4} md={6} className=\"mb-2\">\r\n          <Card className=\"h-100\" bg=\"darkcontent\" text=\"lightfont\">\r\n            <Card.Header className=\"pr-2\">\r\n              <span>Add New Character</span>\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex flex-column justify-content-center\">\r\n              <Row className=\"d-flex flex-row justify-content-center\">\r\n                <Col xs=\"auto\">\r\n                  <Button onClick={() => this.editCharacter(\"\")}>\r\n                    <h1><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></h1>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>}\r\n        {charIdList.map(id =>\r\n          <Col key={id} lg={4} md={6} className=\"mb-2\">\r\n            <CharacterCard\r\n              cardClassName=\"h-100\"\r\n              characterId={id}\r\n              onDelete={() => this.deleteCharacter(id)}\r\n              onEdit={() => this.editCharacter(id)}\r\n            />\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Container>)\r\n\r\n  }\r\n}"],"sourceRoot":""}