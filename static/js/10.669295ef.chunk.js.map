{"version":3,"sources":["Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/StarDisplay.js","Data/WeaponData.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-bootstrap/esm/Badge.js","StatConstants.js","StatDependency.js","Data/CharacterData.js","Components/StatIcon.js","dbV2KeyMap.js","DatabaseUtil.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ToggleButton.js","../node_modules/react-bootstrap/esm/ToggleButtonGroup.js","Character/CharacterCard.js","Character/CharacterDisplay.js","Util/Util.js","Stat.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Character/Character.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Util/ConditionalsUtil.js","Data/ElementalData.js","Artifact/ArtifactDatabase.js","StatData.js","Weapon/Weapon.js"],"names":["Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","StarIcon","icon","faStar","Stars","stars","colored","className","Array","keys","map","_","i","WeaponData","WeaponDataImport","then","imp","default","WeaponLevelKeys","LevelNameData","WeaponTypeData","_objectWithoutProperties","source","excluded","key","target","sourceKeys","Object","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","Badge","React","forwardRef","_ref","ref","bsPrefix","variant","pill","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","hitTypes","hit","avgHit","critHit","hitMoves","normal","charged","plunging","skill","burst","hitElements","ElementalData","transformativeReactions","overloaded","shattered","electrocharged","superconduct","swirl","amplifyingReactions","vaporize","melt","ReactionMatrix","crystalize","GetFormulaDependency","formula","dependency","Set","Proxy","get","prop","receiver","add","formulaKeyDependency","freeze","fromEntries","Formulas","GetDependencies","modifiers","StatData","dependencies","forEach","InsertDependencies","has","k","CharacterData","CharacterDataImport","LevelsData","name","level","asend","characterStatBase","critRate_","critDMG_","enerRech_","stamina","CharacterSpecializedStatKey","StatIcon","characterHP","faTint","finalHP","hp_","hp","baseATK","faFistRaised","characterATK","finalATK","atk_","atk","characterDEF","faShieldAlt","finalDEF","def_","def","eleMas","faMagic","faDice","faDiceD20","faSync","heal_","faFirstAid","StatIconEle","statKey","changes","char_ele_key","char_level","hp_base","hp_final","atk_character_base","atk_base","atk_final","atk_weapon","def_base","def_final","phy_dmg_bonus","phy_res","anemo_ele_dmg_bonus","geo_ele_dmg_bonus","electro_ele_dmg_bonus","hydro_ele_dmg_bonus","pyro_ele_dmg_bonus","cryo_ele_dmg_bonus","anemo_ele_res","geo_ele_res","electro_ele_res","hydro_ele_res","pyro_ele_res","cryo_ele_res","ener_rech","crit_rate","crit_dmg","stam","heal_bonu","inc_heal","pow_shield","red_cd","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","norm_atk_dmg","char_atk_dmg","plunge_dmg","norm_atk_crit_dmg","char_atk_crit_dmg","plunge_crit_dmg","norm_atk_avg_dmg","char_atk_avg_dmg","plunge_avg_dmg","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","skill_dmg_bonus","burst_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_crit_rate","burst_crit_rate","anemo_skill_dmg","anemo_burst_dmg","anemo_skill_crit_dmg","anemo_burst_crit_dmg","anemo_skill_avg_dmg","anemo_burst_avg_dmg","geo_skill_dmg","geo_burst_dmg","geo_skill_crit_dmg","geo_burst_crit_dmg","geo_skill_avg_dmg","geo_burst_avg_dmg","electro_skill_dmg","electro_burst_dmg","electro_skill_crit_dmg","electro_burst_crit_dmg","electro_skill_avg_dmg","electro_burst_avg_dmg","hydro_skill_dmg","hydro_burst_dmg","hydro_skill_crit_dmg","hydro_burst_crit_dmg","hydro_skill_avg_dmg","hydro_burst_avg_dmg","pyro_skill_dmg","pyro_burst_dmg","pyro_skill_crit_dmg","pyro_burst_crit_dmg","pyro_skill_avg_dmg","pyro_burst_avg_dmg","cryo_skill_dmg","cryo_burst_dmg","cryo_skill_crit_dmg","cryo_burst_crit_dmg","cryo_skill_avg_dmg","cryo_burst_avg_dmg","phy_dmg","phy_crit_dmg","phy_avg_dmg","anemo_ele_dmg","anemo_ele_crit_dmg","anemo_ele_avg_dmg","geo_ele_dmg","geo_ele_crit_dmg","geo_ele_avg_dmg","electro_ele_dmg","electro_ele_crit_dmg","electro_ele_avg_dmg","hydro_ele_dmg","hydro_ele_crit_dmg","hydro_ele_avg_dmg","pyro_ele_dmg","pyro_ele_crit_dmg","pyro_ele_avg_dmg","cryo_ele_dmg","cryo_ele_crit_dmg","cryo_ele_avg_dmg","overload_dmg","overload_dmg_bonus","overload_multi","electrocharged_dmg","electrocharged_dmg_bonus","electrocharged_multi","superconduct_dmg","superconduct_dmg_bonus","superconduct_multi","burning_dmg","burning_dmg_bonus","swirl_dmg","swirl_dmg_bonus","swirl_multi","shatter_dmg","shatter_dmg_bonus","shatter_multi","crystalize_dmg","crystalize_dmg_bonus","melt_dmg_bonus","vaporize_dmg_bonus","pyro_vaporize_normal_dmg","pyro_vaporize_normal_crit_dmg","pyro_vaporize_normal_avg_dmg","pyro_vaporize_chraged_dmg","pyro_vaporize_chraged_crit_dmg","pyro_vaporize_chraged_avg_dmg","pyro_vaporize_plunge_dmg","pyro_vaporize_plunge_crit_dmg","pyro_vaporize_plunge_avg_dmg","pyro_vaporize_skill_dmg","pyro_vaporize_skill_crit_dmg","pyro_vaporize_skill_avg_dmg","pyro_vaporize_burst_dmg","pyro_vaporize_burst_crit_dmg","pyro_vaporize_burst_avg_dmg","pyro_vaporize_ele_dmg","pyro_vaporize_ele_crit_dmg","pyro_vaporize_ele_avg_dmg","hydro_vaporize_normal_dmg","hydro_vaporize_normal_crit_dmg","hydro_vaporize_normal_avg_dmg","hydro_vaporize_chraged_dmg","hydro_vaporize_chraged_crit_dmg","hydro_vaporize_chraged_avg_dmg","hydro_vaporize_plunge_dmg","hydro_vaporize_plunge_crit_dmg","hydro_vaporize_plunge_avg_dmg","hydro_vaporize_skill_dmg","hydro_vaporize_skill_crit_dmg","hydro_vaporize_skill_avg_dmg","hydro_vaporize_burst_dmg","hydro_vaporize_burst_crit_dmg","hydro_vaporize_burst_avg_dmg","hydro_vaporize_ele_dmg","hydro_vaporize_ele_crit_dmg","hydro_vaporize_ele_avg_dmg","pyro_melt_normal_dmg","pyro_melt_normal_crit_dmg","pyro_melt_normal_avg_dmg","pyro_melt_chraged_dmg","pyro_melt_chraged_crit_dmg","pyro_melt_chraged_avg_dmg","pyro_melt_plunge_dmg","pyro_melt_plunge_crit_dmg","pyro_melt_plunge_avg_dmg","pyro_melt_skill_dmg","pyro_melt_skill_crit_dmg","pyro_melt_skill_avg_dmg","pyro_melt_burst_dmg","pyro_melt_burst_crit_dmg","pyro_melt_burst_avg_dmg","pyro_melt_ele_dmg","pyro_melt_ele_crit_dmg","pyro_melt_ele_avg_dmg","cryo_melt_normal_dmg","cryo_melt_normal_crit_dmg","cryo_melt_normal_avg_dmg","cryo_melt_chraged_dmg","cryo_melt_chraged_crit_dmg","cryo_melt_chraged_avg_dmg","cryo_melt_plunge_dmg","cryo_melt_plunge_crit_dmg","cryo_melt_plunge_avg_dmg","cryo_melt_skill_dmg","cryo_melt_skill_crit_dmg","cryo_melt_skill_avg_dmg","cryo_melt_burst_dmg","cryo_melt_burst_crit_dmg","cryo_melt_burst_avg_dmg","cryo_melt_ele_dmg","cryo_melt_ele_crit_dmg","cryo_melt_ele_avg_dmg","enemy_phy_res","enemy_phy_res_multi","enemy_phy_immunity","anemo_enemy_ele_res","anemo_enemy_ele_res_multi","anemo_enemy_ele_immunity","geo_enemy_ele_res","geo_enemy_ele_res_multi","geo_enemy_ele_immunity","electro_enemy_ele_res","electro_enemy_ele_res_multi","electro_enemy_ele_immunity","hydro_enemy_ele_res","hydro_enemy_ele_res_multi","hydro_enemy_ele_immunity","pyro_enemy_ele_res","pyro_enemy_ele_res_multi","pyro_enemy_ele_immunity","cryo_enemy_ele_res","cryo_enemy_ele_res_multi","cryo_enemy_ele_immunity","ele_mas","amp_reaction_base_multi","enemy_level_multi","enemy_level","dmgModeToHitMode","avg_dmg","dmg","DatabaseInitAndVerify","dbVersion","getDatabaseVersion","localStorage","filter","startsWith","character","loadFromLocalStorage","characterKey","equippedArtifacts","dbKey","getItem","id","dmgMode","rest","isArray","buildSetting","mainStat","stat","v2change","statFilters","entries","value","hitMode","saveToLocalStorage","values","artid","art","location","removeItem","ArtifactDisplayState","filterMainStatKey","filterSubstats","charDBJustPopualted","CharacterDatabase","populateDatebaseFromLocalStorage","artDBJustPopualted","ArtifactDatabase","getArtifactDatabase","valid","artInSlotId","getArtifactIDFromSlot","slotKey","equipArtifact","Artifact","substatsValidation","numStars","parseInt","keyMapping","setKey","mainStatKey","endsWith","replace","substats","obj","updateArtifact","chars","getCharacterDatabase","equippedArt","moveToNewLocation","artifactConditionals","cond","srcKey","srcKey2","updateCharacter","setDatabaseVersion","defVal","version","children","func","index","Children","child","isValidElement","noop","ToggleButton","checked","type","onChange","disabled","inputRef","_useState","useState","focused","setFocused","handleFocus","useCallback","e","tagName","handleBlur","Button","undefined","active","autoComplete","onFocus","onBlur","ToggleButtonGroup","_useUncontrolled","useUncontrolled","controlledProps","getValues","concat","invariant","ButtonGroup","toggle","_child$props","childVal","childOnChange","cloneElement","chainFunction","inputVal","event","isActive","n","handleToggle","vertical","CharacterCard","onEdit","onDelete","cardClassName","bg","header","footer","useReducer","x","forceUpdate","useEffect","Promise","all","Character","getCharacterDataImport","Weapon","getWeaponDataImport","getDataImport","build","calculateBuild","setToSlots","weapon","constellation","getName","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","weaponName","getWeaponName","weaponMainVal","getWeaponMainStatValWithOverride","weaponSubKey","getWeaponSubStatKey","weaponSubVal","getWeaponSubStatValWithOverride","weaponLevelName","getLevelName","levelKey","weaponPassiveName","getWeaponPassiveName","text","Header","xs","size","onClick","faEdit","faTrashAlt","Body","style","cursor","src","getThumb","getStar","thumbnail","getStatValueWithOverride","refineIndex","Stat","getStatName","getStatUnit","getSetEffects","arr","artifactSetName","getSetName","highestNum","Math","max","unit","statVal","finalStats","toFixed","fixedUnit","Footer","Link","to","pathname","CharacterDisplayCardPromise","CharacterDisplayCard","lazy","rarity","sortingFunc","ck","getLevel","CharacterDisplay","deleteCharacter","remove","editCharacter","setState","charIdToEdit","showEditor","scrollRef","current","scrollIntoView","behavior","cancelEditCharacter","state","sortBy","elementalFilter","getElementalKeysWithoutPhysical","weaponFilter","getWeaponTypeKeys","saved","ReactGA","pageview","this","createRef","charKeyList","getCharacterKeyList","cKey","includes","sort","a","b","diff","Suspense","fallback","editable","onClose","defaultValue","v","eleKey","weaponType","lg","md","faPlus","charKey","getRandomElementFromArray","array","floor","random","getRandomIntInclusive","min","ceil","data","JSON","parse","setItem","stringify","deepClone","closeEnoughFloat","abs","closeEnoughInt","clamp","val","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","objMultiplication","multi","Error","htmlStatsData","getStatNamePretty","pretty","getStatNameRaw","getStatNameWithPercent","getStatVariant","printStat","stats","f","expand","getPrintableFormulaStatKeyList","statList","formulaKeys","FormulaText","newModifiersKeys","printFormula","modifierText","mkey","multiplier","options","statName","statUnit","reactionMatrixElementRenderer","o","sign","disVal","powerText","heal_multi","enemyLevel_multi","ele","res","move","assign","amplificative_dmg_","reaction","variants","baseMulti","transformative_dmg_","crystalize_eleMas_","crystalize_multi","crystalize_hit","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","talentKey","formulaDB","getCDataObj","formulaKey","tk","find","getBaseStatValue","getSpecializedStatKey","getSpeicalizedStatVal","characterObj","baseStat","getIndexFromlevelkey","getElementalName","elementalKey","getAllCharacterKeys","star","getElementalKeys","getConstellationName","constellationName","getTitles","titles","getlevelKeys","getlevelNames","getAscension","getSpecializedStat","specializeStat","thumbImg","getCard","cardImg","getTalentImg","getTalent","img","getConstellationImg","constIndex","talent","getTalentName","getTalentLevelBoost","talents","talentBoost","boostEntry","getTalentDocument","document","getTalentDocumentSections","ascension","section","getTalentField","sectionIndex","fieldIndex","field","fields","getTalentFieldValue","talentLevelKeys","getTalentStats","getTalentStatsAll","statsArr","push","getTalentConditional","conditionalKey","talentLvlKey","sections","tempCond","conditional","getTalentConditionalStats","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","getTalentConditionalFields","isAutoElemental","isAutoInfusable","auto","infusable","hasTalentPage","Boolean","getDisplayStatKeys","basicKeys","transReactions","ElementToReactionKeys","charFormulas","genericAvgHit","reactions","hasOverride","baseStatOverrides","equipArtifacts","artifactIds","artIdsOnCharacter","artIdsNotOnCharacter","getSlotKeys","artNotOnChar","artOnChar","notCharLoc","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","getMainStatValue","artifactsAssumeFull","substat","setNumKey","getConditionalStats","PreprocessFormulas","mergeStats","modifier","autoInfused","reactionMode","talentConditionals","statKeys","characterEle","overrides","hasOwnProperty","specializedStatVal","specialStatKey","s","getWeaponBonusStat","getWeaponConditionalStat","initiated","characterDatabase","isInvalid","char","getIdNameList","split","dchar","unequipArtifactOnSlot","equipArtifactBuild","clearDatabase","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","physical_dmg_","ele_dmg_","2","ArtifactSubStatsData","ArtifactSubstatsMinMax","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","rolls","efficiency","getSubstatEfficiency","getArtifactEfficiency","currentEfficiency","maximumEfficiency","errMsgs","some","currentNumOfRolls","reduce","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","maxPerRoll","getSubstatAllMax","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","getPieceName","getPieceIcon","icons","getSetEffectsObj","setEffects","getArtifactSetNumStats","artifactSetEffect","artArr","setNumKeys","getSetEffectText","charFinalStats","setEffectText","getSetEffectConditional","getSlotName","getSlotIcon","getSlotMainStatKeys","getSlotNameWithIcon","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","main","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatKey","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","accu","reverse","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","_createForOfIteratorHelper","allowArrayLike","it","F","done","_e","err","normalCompletion","didErr","step","next","_e2","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","selectedConditionalNum","selectedConditional","curConditional","maxStack","physical","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","flat","const","characterLevel","weaponATK","dmg_","weakspotDMG_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","staminaDec_","staminaGlidingDec_","staminaChargedDec_","crystalize_dmg_","burning_dmg_","enemyLevel","pow","dependencyKeys","debug","constData","formulaList","tmp","constModifier","dynamicModifier","constFunc","m","dynamicFunc","funcIndicator","console","log","error","moveName","eleName","opt","typeName","reactionName","getLevelIndex","weaponKey","getWeaponRarity","passiveName","getWeaponPassiveDescription","passiveDescription","getWeaponDescription","description","getWeaponConditional","getWeaponImg","getWeaponMainStatVal","baseStats","getWeaponSubStatVal","sub","getWeaponsOfType","getWeaponTypeName","weaponObj","overrideMainVal","overrideSubVal"],"mappings":"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","file":"static/js/10.669295ef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\nimport cryo from './Element_Cryo.png'\nimport dendro from './Element_Dendro.png'\nimport electro from './Element_Electro.png'\nimport geo from './Element_Geo.png'\nimport hydro from './Element_Hydro.png'\nimport pyro from './Element_Pyro.png'\n\nimport bow from './Weapon-class-bow-icon.png'\nimport catalyst from './Weapon-class-catalyst-icon.png'\nimport claymore from './Weapon-class-claymore-icon.png'\nimport polearm from './Weapon-class-polearm-icon.png'\nimport sword from './Weapon-class-sword-icon.png'\n\nimport fragile from './Item_Fragile_Resin.png'\nimport condensed from './Item_Condensed_Resin.png'\n\n//EXP BOOKS\nimport advice from './Item_Wanderer\\'s_Advice.png'\nimport wit from './Item_Hero\\'s_Wit.png'\nimport experience from './Item_Adventurer\\'s_Experience.png'\n\nlet Assets = {\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\n  resin: {\n    fragile,\n    condensed\n  },\n  exp_books: {\n    advice,\n    wit,\n    experience,\n  }\n};\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { faStar } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\n</span>\n\nexport {\n  StarIcon,\n  Stars\n}\n","let WeaponData = {}\nlet WeaponDataImport = import('./Weapons')\nWeaponDataImport.then(imp => {\n  WeaponData = imp.default\n  WeaponDataImport = null\n})\n\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\nconst WeaponTypeData = {\n  sword: \"Sword\",\n  claymore: \"Claymore\",\n  catalyst: \"Catalyst\",\n  bow: \"Bow\",\n  polearm: \"Polearm\"\n}\n\nexport {\n  WeaponData,\n  WeaponDataImport,\n  WeaponLevelKeys,\n  LevelNameData,\n  WeaponTypeData\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import ElementalData from \"./Data/ElementalData\";\n\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\nexport const hitElements = ElementalData\nexport const transformativeReactions = {\n  overloaded: [ \"Overloaded\", \"pyro\", 4 ],\n  shattered: [ \"Shattered\", \"physical\", 3 ],\n  electrocharged: [ \"Electro-Charged\", \"electro\", 2.4 ],\n  superconduct: [ \"Superconduct\", \"cryo\", 1 ],\n  swirl: [ \"Swirl\", \"anemo\", 1.2 ],\n}\nexport const amplifyingReactions = {\n  vaporize: [\"Vaporize\", { pyro: 1.5, hydro: 2 }],\n  melt: [\"Melt\", { pyro: 2, cryo: 1.5 }],\n}\nexport const otherReactions = {\n  burning: \"Burning\",\n  crystalize: \"Crystalize\",\n}\nexport const ReactionMatrix = {\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\n}\n","import { Formulas, StatData } from \"./StatData\"\n\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\nfunction GetFormulaDependency(formula) {\n  const dependency = new Set()\n  formula(\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\n  return [...dependency]\n}\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\n))\n\nif (process.env.NODE_ENV === \"development\") {\n  let statKeys = Object.keys(StatData)\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\n    dependencies.forEach(key =>\n      !statKeys.includes(key) &&\n        console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\n  )\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\n    StatData[formulaKey]?.const && dependencies.forEach(key => \n      !StatData[key]?.const &&\n        console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\n    )\n  )\n}\n\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\n  let dependencies = new Set()\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\n  return [...dependencies]\n}\nfunction InsertDependencies(key, modifiers, dependencies) {\n  if (dependencies.has(key)) return\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\n  dependencies.add(key)\n}\n\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\nconst reduceOptimizationTarget = (optimizationTarget) =>\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0]] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\n\n\nexport {\n  GetFormulaDependency,\n  GetDependencies,\n  reduceOptimizationTarget,\n}\n","let CharacterData = {}\nlet CharacterDataImport = import('./Characters')\nCharacterDataImport.then(imp => {\n  CharacterData = imp.default\n  CharacterDataImport = null\n})\n// import characters from \nconst LevelsData = {\n  \"L1\": {\n    name: \"Lv. 1\",\n    level: 1,\n    asend: 0\n  },\n  \"L20\": {\n    name: \"Lv. 20\",\n    level: 20,\n    asend: 0\n  },\n  \"L20A\": {\n    name: \"Lv. 20 As.1\",\n    level: 20,\n    asend: 1\n\n  },\n  \"L40\": {\n    name: \"Lv. 40\",\n    level: 40,\n    asend: 1\n  },\n  \"L40A\": {\n    name: \"Lv. 40 As.2\",\n    level: 40,\n    asend: 2\n  },\n\n  \"L50\": {\n    name: \"Lv. 50\",\n    level: 50,\n    asend: 2\n  },\n  \"L50A\": {\n    name: \"Lv. 50 As.3\",\n    level: 50,\n    asend: 3\n  },\n  \"L60\": {\n    name: \"Lv. 60\",\n    level: 60,\n    asend: 3\n  },\n  \"L60A\": {\n    name: \"Lv. 60 As.4\",\n    level: 60,\n    asend: 4\n  },\n  \"L70\": {\n    name: \"Lv. 70\",\n    level: 70,\n    asend: 4\n  },\n  \"L70A\": {\n    name: \"Lv. 70 As.5\",\n    level: 70,\n    asend: 5\n  },\n\n  \"L80\": {\n    name: \"Lv. 80\",\n    level: 80,\n    asend: 5\n  },\n  \"L80A\": {\n    name: \"Lv. 80 As.6\",\n    level: 80,\n    asend: 6\n  },\n  \"L90\": {\n    name: \"Lv. 90\",\n    level: 90,\n    asend: 6\n  }\n\n}\nconst characterStatBase = {\n  critRate_: 5,\n  critDMG_: 50,\n  enerRech_: 100,\n  stamina: 100\n}\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\n\nexport {\n  LevelsData,\n  characterStatBase,\n  CharacterData,\n  CharacterDataImport,\n  CharacterSpecializedStatKey\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst StatIcon = {\n  characterHP: faTint,\n  finalHP: faTint,\n  hp_: faTint,\n  hp: faTint,\n\n  baseATK: faFistRaised,\n  characterATK: faFistRaised,\n  finalATK: faFistRaised,\n  atk_: faFistRaised,\n  atk: faFistRaised,\n\n  characterDEF: faShieldAlt,\n  finalDEF: faShieldAlt,\n  def_: faShieldAlt,\n  def: faShieldAlt,\n\n  eleMas: faMagic,\n  critRate_: faDice,\n  critDMG_: faDiceD20,\n  enerRech_: faSync,\n  heal_: faFirstAid,\n}\n\nconst StatIconEle = (statKey) =>\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\n\nexport default StatIcon\n\nexport {\n  StatIconEle\n}","//for DB v2, we changed a bunch of keys.\nconst changes = {\n  char_ele_key: \"characterEle\",\n  char_level: \"characterLevel\",\n\n  hp_base: \"characterHP\",\n  hp_final: \"finalHP\",\n  atk_character_base: \"characterATK\",\n  atk_base: \"baseATK\",\n  atk_final: \"finalATK\",\n  atk_weapon: \"weaponATK\",\n  def_base: \"characterDEF\",\n  def_final: \"finalDEF\",\n  phy_dmg_bonus: \"physical_dmg_\",\n  phy_res: \"physical_res_\",\n  anemo_ele_dmg_bonus: \"anemo_dmg_\",\n  geo_ele_dmg_bonus: \"geo_dmg_\",\n  electro_ele_dmg_bonus: \"electro_dmg_\",\n  hydro_ele_dmg_bonus: \"hydro_dmg_\",\n  pyro_ele_dmg_bonus: \"pyro_dmg_\",\n  cryo_ele_dmg_bonus: \"cryo_dmg_\",\n  anemo_ele_res: \"anemo_res_\",\n  geo_ele_res: \"geo_res_\",\n  electro_ele_res: \"electro_res_\",\n  hydro_ele_res: \"hydro_res_\",\n  pyro_ele_res: \"pyro_res_\",\n  cryo_ele_res: \"cryo_res_\",\n  ener_rech: \"enerRech_\",\n  crit_rate: \"critRate_\",\n  crit_dmg: \"critDMG_\",\n  stam: \"stamina\",\n  heal_bonu: \"heal_\",\n  inc_heal: \"incHeal_\",\n  pow_shield: \"powShield_\",\n  red_cd: \"cdRed_\",\n  skill_cd_red: \"skillCDRed_\",\n  burst_cd_red: \"burstCDRed_\",\n  all_dmg_bonus: \"dmg_\",\n  move_spd: \"moveSPD_\",\n  atk_spd: \"atkSPD_\",\n  weakspot_dmg: \"weakspotDMG_\",\n  stamina_dec: \"staminaDec_\",\n  stamina_gliding_dec: \"staminaGlidingDec_\",\n  stamina_charged_dec: \"staminaChargedDec_\",\n  ele_mas_multi_x: \"eleMasX\",\n  ele_mas_multi_y: \"eleMasY\",\n  ele_mas_multi_z: \"eleMasZ\",\n\n  norm_atk_dmg: \"physical_normal_hit\",\n  char_atk_dmg: \"physical_charged_hit\",\n  plunge_dmg: \"physical_plunging_hit\",\n  norm_atk_crit_dmg: \"physical_normal_critHit\",\n  char_atk_crit_dmg: \"physical_charged_critHit\",\n  plunge_crit_dmg: \"physical_plunging_critHit\",\n  norm_atk_avg_dmg: \"physical_normal_avgHit\",\n  char_atk_avg_dmg: \"physical_charged_avgHit\",\n  plunge_avg_dmg: \"physical_plunging_avgHit\",\n  norm_atk_dmg_bonus: \"normal_dmg_\",\n  char_atk_dmg_bonus: \"charged_dmg_\",\n  plunge_atk_dmg_bonus: \"plunging_dmg_\",\n  skill_dmg_bonus: \"skill_dmg_\",\n  burst_dmg_bonus: \"burst_dmg_\",\n  norm_atk_crit_rate: \"normal_critRate_\",\n  char_atk_crit_rate: \"charged_critRate_\",\n  skill_crit_rate: \"skill_critRate_\",\n  burst_crit_rate: \"burst_critRate_\",\n\n  anemo_skill_dmg: \"anemo_skill_hit\",\n  anemo_burst_dmg: \"anemo_burst_hit\",\n  anemo_skill_crit_dmg: \"anemo_skill_critHit\",\n  anemo_burst_crit_dmg: \"anemo_burst_critHit\",\n  anemo_skill_avg_dmg: \"anemo_skill_avgHit\",\n  anemo_burst_avg_dmg: \"anemo_burst_avgHit\",\n  geo_skill_dmg: \"geo_skill_hit\",\n  geo_burst_dmg: \"geo_burst_hit\",\n  geo_skill_crit_dmg: \"geo_skill_critHit\",\n  geo_burst_crit_dmg: \"geo_burst_critHit\",\n  geo_skill_avg_dmg: \"geo_skill_avgHit\",\n  geo_burst_avg_dmg: \"geo_burst_avgHit\",\n  electro_skill_dmg: \"electro_skill_hit\",\n  electro_burst_dmg: \"electro_burst_hit\",\n  electro_skill_crit_dmg: \"electro_skill_critHit\",\n  electro_burst_crit_dmg: \"electro_burst_critHit\",\n  electro_skill_avg_dmg: \"electro_skill_avgHit\",\n  electro_burst_avg_dmg: \"electro_burst_avgHit\",\n  hydro_skill_dmg: \"hydro_skill_hit\",\n  hydro_burst_dmg: \"hydro_burst_hit\",\n  hydro_skill_crit_dmg: \"hydro_skill_critHit\",\n  hydro_burst_crit_dmg: \"hydro_burst_critHit\",\n  hydro_skill_avg_dmg: \"hydro_skill_avgHit\",\n  hydro_burst_avg_dmg: \"hydro_burst_avgHit\",\n  pyro_skill_dmg: \"pyro_skill_hit\",\n  pyro_burst_dmg: \"pyro_burst_hit\",\n  pyro_skill_crit_dmg: \"pyro_skill_critHit\",\n  pyro_burst_crit_dmg: \"pyro_burst_critHit\",\n  pyro_skill_avg_dmg: \"pyro_skill_avgHit\",\n  pyro_burst_avg_dmg: \"pyro_burst_avgHit\",\n  cryo_skill_dmg: \"cryo_skill_hit\",\n  cryo_burst_dmg: \"cryo_burst_hit\",\n  cryo_skill_crit_dmg: \"cryo_skill_critHit\",\n  cryo_burst_crit_dmg: \"cryo_burst_critHit\",\n  cryo_skill_avg_dmg: \"cryo_skill_avgHit\",\n  cryo_burst_avg_dmg: \"cryo_burst_avgHit\",\n\n  phy_dmg: \"physical_hit\",\n  phy_crit_dmg: \"physical_critHit\",\n  phy_avg_dmg: \"physical_avgHit\",\n  anemo_ele_dmg: \"anemo_hit\",\n  anemo_ele_crit_dmg: \"anemo_critHit\",\n  anemo_ele_avg_dmg: \"anemo_avgHit\",\n  geo_ele_dmg: \"geo_hit\",\n  geo_ele_crit_dmg: \"geo_critHit\",\n  geo_ele_avg_dmg: \"geo_avgHit\",\n  electro_ele_dmg: \"electro_hit\",\n  electro_ele_crit_dmg: \"electro_critHit\",\n  electro_ele_avg_dmg: \"electro_avgHit\",\n  hydro_ele_dmg: \"hydro_hit\",\n  hydro_ele_crit_dmg: \"hydro_critHit\",\n  hydro_ele_avg_dmg: \"hydro_avgHit\",\n  pyro_ele_dmg: \"pyro_hit\",\n  pyro_ele_crit_dmg: \"pyro_critHit\",\n  pyro_ele_avg_dmg: \"pyro_avgHit\",\n  cryo_ele_dmg: \"cryo_hit\",\n  cryo_ele_crit_dmg: \"cryo_critHit\",\n  cryo_ele_avg_dmg: \"cryo_avgHit\",\n\n  overload_dmg: \"overload_hit\",\n  overload_dmg_bonus: \"overload_dmg_\",\n  overload_multi: \"overload_multi\",\n  electrocharged_dmg: \"electrocharged_hit\",\n  electrocharged_dmg_bonus: \"electrocharged_dmg_\",\n  electrocharged_multi: \"electrocharged_multi\",\n  superconduct_dmg: \"superconduct_hit\",\n  superconduct_dmg_bonus: \"superconduct_dmg_\",\n  superconduct_multi: \"superconduct_multi\",\n  burning_dmg: \"burning_hit\",\n  burning_dmg_bonus: \"burning_dmg_\",\n  swirl_dmg: \"swirl_hit\",\n  swirl_dmg_bonus: \"swirl_dmg_\",\n  swirl_multi: \"swirl_multi\",\n  shatter_dmg: \"shattered_hit\",\n  shatter_dmg_bonus: \"shattered_dmg_\",\n  shatter_multi: \"shattered_multi\",\n  crystalize_dmg: \"crystalize_hit\",\n  crystalize_dmg_bonus: \"crystalize_dmg_\",\n\n  melt_dmg_bonus: \"melt_dmg_\",\n  vaporize_dmg_bonus: \"vaporize_dmg_\",\n\n  pyro_vaporize_normal_dmg: \"pyro_vaporize_normal_hit\",\n  pyro_vaporize_normal_crit_dmg: \"pyro_vaporize_normal_critHit\",\n  pyro_vaporize_normal_avg_dmg: \"pyro_vaporize_normal_avgHit\",\n  pyro_vaporize_chraged_dmg: \"pyro_vaporize_chraged_hit\",\n  pyro_vaporize_chraged_crit_dmg: \"pyro_vaporize_chraged_critHit\",\n  pyro_vaporize_chraged_avg_dmg: \"pyro_vaporize_chraged_avgHit\",\n  pyro_vaporize_plunge_dmg: \"pyro_vaporize_plunging_hit\",\n  pyro_vaporize_plunge_crit_dmg: \"pyro_vaporize_plunging_critHit\",\n  pyro_vaporize_plunge_avg_dmg: \"pyro_vaporize_plunging_avgHit\",\n  pyro_vaporize_skill_dmg: \"pyro_vaporize_skill_hit\",\n  pyro_vaporize_skill_crit_dmg: \"pyro_vaporize_skill_critHit\",\n  pyro_vaporize_skill_avg_dmg: \"pyro_vaporize_skill_avgHit\",\n  pyro_vaporize_burst_dmg: \"pyro_vaporize_burst_hit\",\n  pyro_vaporize_burst_crit_dmg: \"pyro_vaporize_burst_critHit\",\n  pyro_vaporize_burst_avg_dmg: \"pyro_vaporize_burst_avgHit\",\n  pyro_vaporize_ele_dmg: \"pyro_vaporize_hit\",\n  pyro_vaporize_ele_crit_dmg: \"pyro_vaporize_critHit\",\n  pyro_vaporize_ele_avg_dmg: \"pyro_vaporize_avgHit\",\n  hydro_vaporize_normal_dmg: \"hydro_vaporize_normal_hit\",\n  hydro_vaporize_normal_crit_dmg: \"hydro_vaporize_normal_critHit\",\n  hydro_vaporize_normal_avg_dmg: \"hydro_vaporize_normal_avgHit\",\n  hydro_vaporize_chraged_dmg: \"hydro_vaporize_chraged_hit\",\n  hydro_vaporize_chraged_crit_dmg: \"hydro_vaporize_chraged_critHit\",\n  hydro_vaporize_chraged_avg_dmg: \"hydro_vaporize_chraged_avgHit\",\n  hydro_vaporize_plunge_dmg: \"hydro_vaporize_plunging_hit\",\n  hydro_vaporize_plunge_crit_dmg: \"hydro_vaporize_plunging_critHit\",\n  hydro_vaporize_plunge_avg_dmg: \"hydro_vaporize_plunging_avgHit\",\n  hydro_vaporize_skill_dmg: \"hydro_vaporize_skill_hit\",\n  hydro_vaporize_skill_crit_dmg: \"hydro_vaporize_skill_critHit\",\n  hydro_vaporize_skill_avg_dmg: \"hydro_vaporize_skill_avgHit\",\n  hydro_vaporize_burst_dmg: \"hydro_vaporize_burst_hit\",\n  hydro_vaporize_burst_crit_dmg: \"hydro_vaporize_burst_critHit\",\n  hydro_vaporize_burst_avg_dmg: \"hydro_vaporize_burst_avgHit\",\n  hydro_vaporize_ele_dmg: \"hydro_vaporize_hit\",\n  hydro_vaporize_ele_crit_dmg: \"hydro_vaporize_critHit\",\n  hydro_vaporize_ele_avg_dmg: \"hydro_vaporize_avgHit\",\n  pyro_melt_normal_dmg: \"pyro_melt_normal_hit\",\n  pyro_melt_normal_crit_dmg: \"pyro_melt_normal_critHit\",\n  pyro_melt_normal_avg_dmg: \"pyro_melt_normal_avgHit\",\n  pyro_melt_chraged_dmg: \"pyro_melt_chraged_hit\",\n  pyro_melt_chraged_crit_dmg: \"pyro_melt_chraged_critHit\",\n  pyro_melt_chraged_avg_dmg: \"pyro_melt_chraged_avgHit\",\n  pyro_melt_plunge_dmg: \"pyro_melt_plunging_hit\",\n  pyro_melt_plunge_crit_dmg: \"pyro_melt_plunging_critHit\",\n  pyro_melt_plunge_avg_dmg: \"pyro_melt_plunging_avgHit\",\n  pyro_melt_skill_dmg: \"pyro_melt_skill_hit\",\n  pyro_melt_skill_crit_dmg: \"pyro_melt_skill_critHit\",\n  pyro_melt_skill_avg_dmg: \"pyro_melt_skill_avgHit\",\n  pyro_melt_burst_dmg: \"pyro_melt_burst_hit\",\n  pyro_melt_burst_crit_dmg: \"pyro_melt_burst_critHit\",\n  pyro_melt_burst_avg_dmg: \"pyro_melt_burst_avgHit\",\n  pyro_melt_ele_dmg: \"pyro_melt_hit\",\n  pyro_melt_ele_crit_dmg: \"pyro_melt_critHit\",\n  pyro_melt_ele_avg_dmg: \"pyro_melt_avgHit\",\n  cryo_melt_normal_dmg: \"cryo_melt_normal_hit\",\n  cryo_melt_normal_crit_dmg: \"cryo_melt_normal_critHit\",\n  cryo_melt_normal_avg_dmg: \"cryo_melt_normal_avgHit\",\n  cryo_melt_chraged_dmg: \"cryo_melt_chraged_hit\",\n  cryo_melt_chraged_crit_dmg: \"cryo_melt_chraged_critHit\",\n  cryo_melt_chraged_avg_dmg: \"cryo_melt_chraged_avgHit\",\n  cryo_melt_plunge_dmg: \"cryo_melt_plunging_hit\",\n  cryo_melt_plunge_crit_dmg: \"cryo_melt_plunging_critHit\",\n  cryo_melt_plunge_avg_dmg: \"cryo_melt_plunging_avgHit\",\n  cryo_melt_skill_dmg: \"cryo_melt_skill_hit\",\n  cryo_melt_skill_crit_dmg: \"cryo_melt_skill_critHit\",\n  cryo_melt_skill_avg_dmg: \"cryo_melt_skill_avgHit\",\n  cryo_melt_burst_dmg: \"cryo_melt_burst_hit\",\n  cryo_melt_burst_crit_dmg: \"cryo_melt_burst_critHit\",\n  cryo_melt_burst_avg_dmg: \"cryo_melt_burst_avgHit\",\n  cryo_melt_ele_dmg: \"cryo_melt_hit\",\n  cryo_melt_ele_crit_dmg: \"cryo_melt_critHit\",\n  cryo_melt_ele_avg_dmg: \"cryo_melt_avgHit\",\n\n  enemy_phy_res: \"physical_enemyRes_\",\n  enemy_phy_res_multi: \"physical_enemyRes_multi\",\n  enemy_phy_immunity: \"physical_enemyImmunity\",\n  anemo_enemy_ele_res: \"anemo_enemyRes_\",\n  anemo_enemy_ele_res_multi: \"anemo_enemyRes_multi\",\n  anemo_enemy_ele_immunity: \"anemo_enemyImmunity\",\n  geo_enemy_ele_res: \"geo_enemyRes_\",\n  geo_enemy_ele_res_multi: \"geo_enemyRes_multi\",\n  geo_enemy_ele_immunity: \"geo_enemyImmunity\",\n  electro_enemy_ele_res: \"electro_enemyRes_\",\n  electro_enemy_ele_res_multi: \"electro_enemyRes_multi\",\n  electro_enemy_ele_immunity: \"electro_enemyImmunity\",\n  hydro_enemy_ele_res: \"hydro_enemyRes_\",\n  hydro_enemy_ele_res_multi: \"hydro_enemyRes_multi\",\n  hydro_enemy_ele_immunity: \"hydro_enemyImmunity\",\n  pyro_enemy_ele_res: \"pyro_enemyRes_\",\n  pyro_enemy_ele_res_multi: \"pyro_enemyRes_multi\",\n  pyro_enemy_ele_immunity: \"pyro_enemyImmunity\",\n  cryo_enemy_ele_res: \"cryo_enemyRes_\",\n  cryo_enemy_ele_res_multi: \"cryo_enemyRes_multi\",\n  cryo_enemy_ele_immunity: \"cryo_enemyImmunity\",\n\n  ele_mas: \"eleMas\",\n  amp_reaction_base_multi: \"ampReactionBase_multi\",\n\n  enemy_level_multi: \"enemyLevel_multi\",\n  enemy_level: \"enemyLevel\"\n}\n/*\nconst same = [\n  hp, hp_, atk, atk_, def, def_, pyro_vaporize_multi, hydro_vaporize_multi, pyro_melt_multi, cryo_melt_multi,\n]\n\nconst removed = [\n  norm_atk_crit_multi, char_atk_crit_multi, norm_atk_bonus_multi, char_atk_bonus_multi, plunge_bonus_multi, skill_crit_multi, burst_crit_multi, skill_bonus_multi, burst_bonus_multi, phy_bonus_multi, anemo_ele_bonus_multi, geo_ele_bonus_multi, electro_ele_bonus_multi, hydro_ele_bonus_multi, pyro_ele_bonus_multi, cryo_ele_bonus_multi, crit_dmg_multi, crit_multi,\n]\n\nconst aded = [\n  plunging_critRate_, final_normal_critRate_, final_charged_critRate_, final_plunging_critRate_, final_skill_critRate_, final_burst_critRate_,\n]\n*/\n\n//renamed dmgMode to hitMode\nconst dmgModeToHitMode = {\n  avg_dmg: \"avgHit\",\n  dmg: \"hit\",\n  crit_dmg: \"critHit\"\n}\nexport { changes, dmgModeToHitMode }","import Artifact from \"./Artifact/Artifact\";\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\nimport { changes as v2change, dmgModeToHitMode } from \"./dbV2KeyMap\";\nimport { loadFromLocalStorage, saveToLocalStorage } from \"./Util/Util\";\n\nfunction DatabaseInitAndVerify() {\n  const dbVersion = getDatabaseVersion()\n  //edit the data before the database is populated\n  if (dbVersion < 2) {\n    //made characters unique, so need to convert character_{NUMBER} to char_{characterKey}. Will only save the 1st instance of a character.\n    Object.keys(localStorage).filter(key => key.startsWith(\"character_\")).forEach(key => {\n      const character = loadFromLocalStorage(key);\n      const { characterKey, equippedArtifacts = {} } = character\n      const dbKey = `char_${characterKey}`\n      if (localStorage.getItem(dbKey) === null) {\n        //if there is no character saved, create a new character\n        const { id, name, dmgMode, ...rest } = character\n        if (Array.isArray(rest?.buildSetting?.mainStat))\n          rest.buildSetting.mainStat = rest.buildSetting.mainStat.map(stat => stat in v2change ? v2change[stat] : stat)\n        if (typeof rest?.buildSetting?.statFilters === \"object\")\n          rest.buildSetting.statFilters = Object.fromEntries(Object.entries(rest.buildSetting.statFilters).map(([stat, value]) => [stat in v2change ? v2change[stat] : stat, value]))\n        rest.hitMode = dmgModeToHitMode[dmgMode] ?? Object.keys(dmgModeToHitMode)[0]\n        saveToLocalStorage(dbKey, rest)\n        //equip to the new character\n        Object.values(equippedArtifacts).forEach(artid => {\n          const art = loadFromLocalStorage(artid);\n          if (!art) return\n          art.location = characterKey\n          saveToLocalStorage(artid, art)\n        });\n      } else {\n        //if the character does exist, \"move\" the artifacts equipped to inventory\n        Object.values(equippedArtifacts).forEach(artid => {\n          const art = loadFromLocalStorage(artid);\n          if (!art) return\n          art.location = \"\"\n          saveToLocalStorage(artid, art)\n        });\n      }\n      //delete the old database\n      localStorage.removeItem(key)\n    })\n    //reset the ArtifactDisplay keys\n    const ArtifactDisplayState = loadFromLocalStorage(\"ArtifactDisplay.state\")\n    if (ArtifactDisplayState) {\n      if (ArtifactDisplayState.filterMainStatKey in v2change)\n        ArtifactDisplayState.filterMainStatKey = v2change[ArtifactDisplayState.filterMainStatKey]\n      ArtifactDisplayState.filterSubstats = ArtifactDisplayState.filterSubstats.map(stat => stat in v2change ? v2change[stat] : stat)\n      saveToLocalStorage(\"ArtifactDisplay.state\", ArtifactDisplayState)\n    }\n  }\n\n  //this will only run if neither of the database has been initated.\n  const charDBJustPopualted = CharacterDatabase.populateDatebaseFromLocalStorage(),\n    artDBJustPopualted = ArtifactDatabase.populateDatebaseFromLocalStorage()\n  if (!charDBJustPopualted && !artDBJustPopualted) return\n\n  Object.values(ArtifactDatabase.getArtifactDatabase()).forEach(art => {\n    let valid = true\n\n    //verify the linking of artifacts and characters\n    if (art.location) {\n      const locationChar = CharacterDatabase.get(art.location)\n      if (locationChar) {\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\n          CharacterDatabase.equipArtifact(art.location, art)\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\n          art.location = \"\"\n          valid = false\n        }\n      } else {\n        art.location = \"\"\n        valid = false\n      }\n    }\n\n    if (dbVersion < 1) {\n      //generate artifact efficiency again for artifacts\n      Artifact.substatsValidation(art)\n      valid = false\n\n      //there was a bug that saved the numStars as strings. convert to number.\n      if (typeof art.numStars === \"string\") {\n        art.numStars = parseInt(art.numStars)\n        valid = false\n      }\n\n      //the set keys were changed to camelcase, need to convert for old databases.\n      let keyMapping = {\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\n        \"Thundering Fury\": \"ThunderingFury\",\n        \"Retracing Bolide\": \"RetracingBolide\",\n        \"Noblesse Oblige\": \"NoblesseOblige\",\n        \"Maiden Beloved\": \"MaidenBeloved\",\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\n        \"Archaic Petra\": \"ArchaicPetra\",\n        \"Brave Heart\": \"BraveHeart\",\n        \"Tiny Miracle\": \"TinyMiracle\",\n        \"Defender's Will\": \"DefendersWill\",\n        \"Martial Artist\": \"MartialArtist\",\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\n        \"The Exile\": \"TheExile\",\n        \"Traveling Doctor\": \"TravelingDoctor\",\n        \"Lucky Dog\": \"LuckyDog\",\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\n      }\n      if (keyMapping[art.setKey]) {\n        art.setKey = keyMapping[art.setKey]\n        valid = false\n      }\n      //key names were changed. convert old DB\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\n        valid = false\n      }\n      //key names were changed. convert old DB\n      if (art?.mainStatKey === \"phy_dmg\") {\n        art.mainStatKey = \"phy_dmg_bonus\"\n        valid = false\n      }\n    }\n\n    if (dbVersion < 2) {\n      if (art.mainStatKey in v2change) {\n        art.mainStatKey = v2change[art.mainStatKey]\n        valid = false\n      }\n      art?.substats?.forEach((obj, i) => {\n        if (obj.key in v2change) {\n          art.substats[i].key = v2change[obj.key]\n          valid = false\n        }\n      })\n    }\n\n    //Update any invalid artifacts in DB\n    if (!valid) ArtifactDatabase.updateArtifact(art)\n  })\n\n  let chars = CharacterDatabase.getCharacterDatabase();\n  Object.values(chars).forEach(character => {\n    let valid = true;\n    const { characterKey } = character\n    //verify character database equipment validity\n    if (!character.equippedArtifacts) {\n      character.equippedArtifacts = {}\n      valid = false\n    }\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\n      const equippedArt = ArtifactDatabase.get(artid)\n      if (equippedArt && equippedArt.location !== characterKey) //the artifact doesnt have the right location...\n        ArtifactDatabase.moveToNewLocation(artid, characterKey)\n      if (!equippedArt) {\n        valid = false\n        character.equippedArtifacts[slotKey] = \"\"\n      }\n    })\n\n    if (dbVersion < 1) {\n      //conditional format was refactored. this makes sure there is no error when using old DB.\n      character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\n        if (!cond.srcKey || !cond.srcKey2) {\n          valid = false\n          return false\n        }\n        return true\n      }) ?? []\n\n      //check for dmgMode\n      if (!character.hitMode) {\n        character.hitMode = \"hit\"\n        valid = false\n      }\n    }\n\n    //update any invalid characters in DB\n    if (!valid) CharacterDatabase.updateCharacter(character)\n  })\n  setDatabaseVersion(2)\n}\nconst getDatabaseVersion = (defVal = 0) =>\n  parseInt(loadFromLocalStorage(\"db_ver\") ?? defVal)\n\nconst setDatabaseVersion = (version) =>\n  saveToLocalStorage(\"db_ver\", version)\n\nexport {\n  DatabaseInitAndVerify\n};\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"children\", \"type\", \"name\", \"value\", \"onChange\"]);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    if (!onChange) {\n      return;\n    }\n\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive && onChange) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/React.createElement(ButtonGroup, _extends({}, controlledProps, {\n    ref: ref,\n    toggle: true\n  }), map(children, function (child) {\n    var values = getValues();\n    var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n\n    var handler = function handler(e) {\n      return handleToggle(childVal, e);\n    };\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      type: type,\n      name: child.name || name,\n      checked: values.indexOf(childVal) !== -1,\n      onChange: chainFunction(childOnChange, handler)\n    });\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect, useReducer } from 'react';\nimport { Badge, Image } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { Link } from 'react-router-dom';\nimport Artifact from '../Artifact/Artifact';\nimport Assets from '../Assets/Assets';\nimport { Stars } from '../Components/StarDisplay';\nimport { StatIconEle } from '../Components/StatIcon';\nimport Stat from '../Stat';\nimport Weapon from '../Weapon/Weapon';\nimport Character from './Character';\nimport CharacterDatabase from './CharacterDatabase';\nexport default function CharacterCard({ characterKey, onEdit, onDelete, cardClassName = \"\", bg = \"\", header, footer }) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  useEffect(() => {\n    Promise.all([\n      Character.getCharacterDataImport(),\n      Weapon.getWeaponDataImport(),\n      Artifact.getDataImport(),\n    ]).then(() => forceUpdate())\n  }, [])\n  const character = CharacterDatabase.get(characterKey)\n  if (!character) return null;\n  const build = Character.calculateBuild(character)\n  const { setToSlots } = build\n\n  const { weapon = {}, constellation } = character\n  const name = Character.getName(characterKey)\n  const elementKey = Character.getElementalKey(characterKey)\n  const weaponTypeKey = Character.getWeaponTypeKey(characterKey)\n  const weaponName = Weapon.getWeaponName(weapon.key)\n  const weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\n  const weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\n  const weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\n  const weaponLevelName = Weapon.getLevelName(weapon.levelKey)\n  const weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\n  const statkeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\",]\n  return (<Card className={cardClassName} bg={bg ? bg : \"darkcontent\"} text=\"lightfont\">\n    <Card.Header className=\"pr-2\">\n      <Row className=\"no-gutters\">\n        <Col >\n          {header ? header : <h5><b>{name}</b></h5>}\n        </Col>\n        <Col xs={\"auto\"}>\n          <span className=\"float-right align-top ml-1\">\n            {onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\n              onClick={onEdit}>\n              <FontAwesomeIcon icon={faEdit} />\n            </Button>}\n            {onDelete && <Button variant=\"danger\" size=\"sm\"\n              onClick={onDelete}>\n              <FontAwesomeIcon icon={faTrashAlt} />\n            </Button>}\n          </span>\n        </Col>\n      </Row>\n    </Card.Header>\n    <Card.Body onClick={onEdit} style={{ cursor: onEdit ? \"pointer\" : \"default\" }}>\n      <Row>\n        <Col xs=\"auto\" className=\"pr-0\">\n          <Image src={Character.getThumb(characterKey)} className={`thumb-big grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\n        </Col>\n        <Col>\n          <h3 className=\"mb-0\">{`Lvl. ${Character.getStatValueWithOverride(character, \"characterLevel\")} C${constellation}`}</h3>\n          <h5 className=\"mb-0\"><Stars stars={Character.getStar(characterKey)} colored /></h5>\n          <h2 className=\"mb-0\"><Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h2>\n        </Col>\n      </Row>\n      <Row className=\"mb-2\">\n        <Col>\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          {Object.entries(Artifact.getSetEffects(setToSlots)).map(([key, arr]) => {\n            let artifactSetName = Artifact.getSetName(key)\n            let highestNum = Math.max(...arr)\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\n          })}\n        </Col>\n      </Row>\n      <Row>\n        {statkeys.map(statKey => {\n          let unit = Stat.getStatUnit(statKey)\n          let statVal = build.finalStats[statKey]\n          return <Col xs={12} key={statKey}>\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\n            <span className={`float-right`}>\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\n            </span>\n          </Col>\n        })}\n      </Row>\n    </Card.Body>\n    {footer && <Card.Footer>\n      <Button as={Link} to={{\n        pathname: \"/build\",\n        characterKey\n      }}>\n        Generate Builds\n        </Button>\n    </Card.Footer>}\n  </Card>)\n}","import { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { lazy } from 'react';\nimport { Button, Card, Col, Container, Image, Row, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\nimport ReactGA from 'react-ga';\nimport Assets from '../Assets/Assets';\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\nimport { loadFromLocalStorage, saveToLocalStorage } from '../Util/Util';\nimport Weapon from '../Weapon/Weapon';\nimport Character from './Character';\nimport CharacterCard from './CharacterCard';\nimport CharacterDatabase from './CharacterDatabase';\n\n//lazy load the character display\nconst CharacterDisplayCardPromise = import('../Character/CharacterDisplayCard');\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\nconst toggle = {\n  level: \"Level\",\n  rarity: \"Rarity\",\n  name: \"Name\"\n}\nconst sortingFunc = {\n  level: (ck) => Character.getLevel(CharacterDatabase.get(ck).levelKey),\n  rarity: (ck) => Character.getStar(ck)\n}\nexport default class CharacterDisplay extends React.Component {\n  constructor(props) {\n    super(props)\n    DatabaseInitAndVerify();\n    this.state = {\n      charIdToEdit: \"\",\n      showEditor: false,\n      sortBy: Object.keys(toggle)[0],\n      elementalFilter: Character.getElementalKeysWithoutPhysical(),\n      weaponFilter: Weapon.getWeaponTypeKeys(),\n    }\n    const saved = loadFromLocalStorage(\"CharacterDisplay.state\")\n    if (saved)\n      this.state = { ...this.state, ...saved }\n    ReactGA.pageview('/character')\n  }\n\n  deleteCharacter = (id) => {\n    Character.remove(id)\n    this.forceUpdate()\n  }\n\n  editCharacter = (id) =>\n    this.setState({ charIdToEdit: id, showEditor: true },\n      () => this.scrollRef.current.scrollIntoView({ behavior: \"smooth\" }))\n\n  cancelEditCharacter = () =>\n    this.setState({ charIdToEdit: null, showEditor: false })\n\n  componentDidMount() {\n    this.scrollRef = React.createRef()\n    Promise.all([\n      Character.getCharacterDataImport(),\n    ]).then(() => this.forceUpdate())\n  }\n  componentDidUpdate() {\n    saveToLocalStorage(\"CharacterDisplay.state\", this.state)\n  }\n  render() {\n    const { showEditor, elementalFilter, weaponFilter, sortBy } = this.state\n    const charKeyList = CharacterDatabase.getCharacterKeyList().filter(cKey => {\n      if (!elementalFilter.includes(Character.getElementalKey(cKey))) return false\n      if (!weaponFilter.includes(Character.getWeaponTypeKey(cKey))) return false\n      return true\n    }).sort((a, b) => {\n      if (sortBy === \"name\") {\n        if (a < b) return -1;\n        if (a > b) return 1;\n        // names must be equal\n        return 0;\n      }\n      if (sortBy === \"level\") {\n        const diff = sortingFunc[\"level\"](b) - sortingFunc[\"level\"](a)\n        if (diff) return diff\n        return sortingFunc[\"rarity\"](b) - sortingFunc[\"rarity\"](a)\n      } else {\n        const diff = sortingFunc[\"rarity\"](b) - sortingFunc[\"rarity\"](a)\n        if (diff) return diff\n        return sortingFunc[\"level\"](b) - sortingFunc[\"level\"](a)\n      }\n    })\n    return (<Container ref={this.scrollRef}>\n      {/* editor/character detail display */}\n      {showEditor ? <Row className=\"mt-2\"><Col>\n        <React.Suspense fallback={<span>Loading...</span>}>\n          <CharacterDisplayCard editable\n            characterKey={this.state.charIdToEdit}\n            onClose={this.cancelEditCharacter}\n            footer={<Button variant=\"danger\" onClick={this.cancelEditCharacter}>Close</Button>}\n          />\n        </React.Suspense>\n      </Col></Row> : null}\n      <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2\">\n        <Card.Body className=\"p-2\">\n          <Row>\n            <Col xs=\"auto\">\n              <ToggleButtonGroup type=\"checkbox\" defaultValue={elementalFilter} onChange={v => this.setState({ elementalFilter: v })}>\n                {Character.getElementalKeysWithoutPhysical().map(eleKey =>\n                  <ToggleButton key={eleKey} value={eleKey} variant={elementalFilter.includes(eleKey) ? \"success\" : \"primary\"} className=\"py-1 px-2\"><h4 className=\"mb-0\"><Image src={Assets.elements?.[eleKey]} className=\"inline-icon\" /></h4></ToggleButton>)}\n              </ToggleButtonGroup>\n            </Col>\n            <Col>\n              <ToggleButtonGroup type=\"checkbox\" defaultValue={weaponFilter} onChange={v => this.setState({ weaponFilter: v })}>\n                {Weapon.getWeaponTypeKeys().map(weaponType =>\n                  <ToggleButton key={weaponType} value={weaponType} variant={weaponFilter.includes(weaponType) ? \"success\" : \"primary\"} className=\"py-1 px-2\"><h4 className=\"mb-0\"><Image src={Assets.weaponTypes?.[weaponType]} className=\"inline-icon\" /></h4></ToggleButton>)}\n              </ToggleButtonGroup>\n            </Col>\n            <Col xs=\"auto\">\n              <span>Sort by: </span>\n              <ToggleButtonGroup type=\"radio\" name=\"level\" defaultValue={this.state.sortBy} onChange={v => this.setState({ sortBy: v })}>\n                {Object.entries(toggle).map(([key, text]) =>\n                  <ToggleButton key={key} value={key} variant={this.state.sortBy === key ? \"success\" : \"primary\"}>{text}</ToggleButton>)}\n              </ToggleButtonGroup>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n      <Row className=\"mt-2\">\n        {showEditor ? null : <Col lg={4} md={6} className=\"mb-2\">\n          <Card className=\"h-100\" bg=\"darkcontent\" text=\"lightfont\">\n            <Card.Header className=\"pr-2\">\n              <span>Add New Character</span>\n            </Card.Header>\n            <Card.Body className=\"d-flex flex-column justify-content-center\">\n              <Row className=\"d-flex flex-row justify-content-center\">\n                <Col xs=\"auto\">\n                  <Button onClick={() => this.editCharacter(\"\")}>\n                    <h1><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></h1>\n                  </Button>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>}\n        {charKeyList.map(charKey =>\n          <Col key={charKey} lg={4} md={6} className=\"mb-2\">\n            <CharacterCard\n              cardClassName=\"h-100\"\n              characterKey={charKey}\n              onDelete={() => this.deleteCharacter(charKey)}\n              onEdit={() => this.editCharacter(charKey)}\n            />\n          </Col>\n        )}\n      </Row>\n    </Container>)\n  }\n}","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\nfunction getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \n}\nfunction getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\nconst loadFromLocalStorage = (key) => {\n  let data = localStorage.getItem(key)\n  if (!data) return null\n  return JSON.parse(data)\n}\nconst saveToLocalStorage = (key, obj) =>\n  localStorage.setItem(key, JSON.stringify(obj));\nconst deepClone = (obj) =>\n  JSON.parse(JSON.stringify(obj))\n\nconst closeEnoughFloat = (a, b) =>\n  Math.abs(a - b) <= 0.101\n\nconst closeEnoughInt = (a, b) =>\n  Math.abs(a - b) <= 1\nconst clamp = (val, low, high) => {\n  if (val < low) return low;\n  if (val > high) return high;\n  return val\n}\nconst getArrLastElement = (arr) =>\n  arr.length ? arr[arr.length - 1] : null\n\nconst clamp01 = (val) => clamp(val, 0, 1)\nconst clampPercent = (val) => clamp(val, 0, 100)\n\n//use to pretty print timestamps, or anything really.\nfunction strPadLeft(string, pad, length) {\n  return (new Array(length + 1).join(pad) + string).slice(-length);\n}\n\n//fuzzy compare strings. longer the distance, the higher the mismatch.\nfunction hammingDistance(str1, str2) {\n  var dist = 0;\n  str1 = str1.toLowerCase();\n  str2 = str2.toLowerCase();\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\n    let match = true\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\n      match = false\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\n      match = true\n    if (!match) dist++\n  }\n  return dist;\n}\n\n//multiplies every numberical value in the obj by a multiplier.\nfunction objMultiplication(obj, multi) {\n  Object.keys(obj).forEach(prop => {\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\n  })\n}\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\nconst getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\nexport {\n  getRandomInt,\n  getRandomIntInclusive,\n  getRandomArbitrary,\n  getRandomElementFromArray,\n  loadFromLocalStorage,\n  saveToLocalStorage,\n  deepClone,\n  closeEnoughFloat,\n  closeEnoughInt,\n  clamp,\n  clamp01,\n  clampPercent,\n  getArrLastElement,\n  strPadLeft,\n  hammingDistance,\n  objMultiplication,\n  getObjectKeysRecursive\n}","import { Formulas, StatData } from \"./StatData\"\nimport { ReactionMatrix, hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\n\nexport default class Stat {\n  //do not instantiate.\n  constructor() {\n    if (this instanceof Stat)\n      throw Error('A static class cannot be instantiated.');\n  }\n  static getStatName = (key, defVal = \"\") =>\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\n  static getStatNamePretty = (key, defVal = \"\") =>\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\n  static getStatNameRaw = (key, defVal = \"\") =>\n    StatData[key]?.name || defVal\n  static getStatNameWithPercent = (key, defVal = \"\") => {\n    let name = this.getStatName(key, defVal)\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\n      name += \"%\"\n    return name;\n  }\n  static getStatVariant = (key, defVal = \"\") =>\n    StatData[key]?.variant || defVal\n  static getStatUnit = (key, defVal = \"\") =>\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\n\n  static fixedUnit = (key) => {\n    if (StatData[key]?.unit === \"multi\") return 3\n    let unit = Stat.getStatUnit(key)\n    return unit === \"%\" ? 1 : 0\n  }\n  static printStat = (statKey, stats) =>\n    f({ stats, expand: false }, statKey)\n\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\n    let formulaKeys = Object.keys(FormulaText)\n    let newModifiersKeys = Object.keys(modifiers).filter(x => !formulaKeys.includes(x))\n    return [...newModifiersKeys, ...formulaKeys].filter((key) => statList.includes(key))\n  }\n\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\n    if (typeof FormulaText?.[statKey] === \"function\")\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\n    else\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\n  }\n}\n//generate html tags based on tagged variants of the statData\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\n\nfunction f(options, statKey) {\n  let { stats, expand = true } = options\n  if (!stats) return\n  if (expand && FormulaText?.[statKey])\n    return <span>( {FormulaText[statKey](options)} )</span>\n  let statName = Stat.getStatNamePretty(statKey)\n  let statUnit = Stat.getStatUnit(statKey)\n  let fixedUnit = Stat.fixedUnit(statKey)\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\n}\n\nfunction reactionMatrixElementRenderer(o, val, i) {\n  let sign = val < 0 ? \" - \" : \" + \";\n  let disVal = Math.abs(val)\n  let powerText = \"\"\n  if (i > 1) powerText = <span> * ( {f(o, \"characterLevel\")} )^{i}</span>\n  if (i === 1) powerText = <span> * {f(o, \"characterLevel\")}</span>\n  return <span key={i}>{sign}{disVal}{powerText}</span>\n}\n\n// Base Formula\n\nconst FormulaText = {\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\n\n  heal_multi: (o) => <span>( 1 + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\n\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( 100 + {f(o, \"enemyLevel\")} + 100 + {f(o, \"characterLevel\")} )</span>,\n}\n\n// Enemy RES\n\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\n    if (o.stats[`${ele}_enemyImmunity`])\n      return <span>0 (immune)</span>\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemyRes_`)} / 2</span>\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\n    return <span> 1 - {f(o, `${ele}_enemyRes_`)} </span>\n  }\n})\n\n// Crit Rate\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\n})\n\n// Hit\n\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n  FormulaText[`${ele}_elemental_hit_multi`] = (o) => <span>( 1 + {f(o, `dmg_`)} * {f(o, `${ele}_dmg_`)} ) * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\n  FormulaText[`${ele}_elemental_hit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_hit_multi`)}</span>\n  FormulaText[`${ele}_elemental_critHit_multi`] = (o) => <span>( 1 + {f(o, `critDMG_`)} ) * {f(o, `${ele}_elemental_hit_multi`)}</span>\n  FormulaText[`${ele}_elemental_critHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_critHit_multi`)}</span>\n  FormulaText[`${ele}_elemental_avgHit_multi`] = (o) => <span>( 1 + {f(o, `critDMG_`)} * {f(o, `critRate_`)} ) * {f(o, `${ele}_elemental_hit_multi`)}</span>\n  FormulaText[`${ele}_elemental_avgHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_avgHit_multi`)}</span>\n\n  Object.entries(hitMoves).forEach(([move, moveName]) => {\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>( 1 + {f(o, `dmg_`)} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)} ) * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\n    FormulaText[`${ele}_${move}_hit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>( 1 + {f(o, `critDMG_`)} ) * {f(o, `${ele}_${move}_hit_multi`)}</span>\n    FormulaText[`${ele}_${move}_critHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_critHit_multi`)}</span>\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>( 1 + {f(o, `critDMG_`)} * {f(o, `final_${move}_critRate_`)} ) * {f(o, `${ele}_${move}_hit_multi`)}</span>\n    FormulaText[`${ele}_${move}_avgHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_avgHit_multi`)}</span>\n  })\n})\n\n// Reaction\n\nObject.assign(FormulaText, {\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\n})\nObject.entries(amplifyingReactions).forEach(([reaction, [name, variants]]) => {\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\n    // Move them to the right position\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\n\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      FormulaText[`${ele}_${reaction}_elemental_${type}`] = (o) => <span>{f(o, `${ele}_elemental_${type}`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, `${ele}_${move}_${type}`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\n      })\n    })\n  })\n})\n\nObject.assign(FormulaText, {\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\n})\nObject.entries(transformativeReactions).forEach(([reaction, [reactionName, ele, baseMulti]]) => {\n  FormulaText[`${reaction}_multi`] = (o) => ReactionMatrix[reaction].map((val, i) => reactionMatrixElementRenderer(o, val, i))\n  FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\n})\nObject.assign(FormulaText, {\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\n  crystalize_multi: (o) => ReactionMatrix[\"crystalize\"].map((val, i) => reactionMatrixElementRenderer(o, val, i)),\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\n})\n\n//checks for development\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\n})\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\n})\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import Artifact from \"../Artifact/Artifact\";\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\nimport ElementalData from \"../Data/ElementalData\";\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\nimport { GetDependencies } from \"../StatDependency\";\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\nimport { deepClone } from \"../Util/Util\";\nimport Weapon from \"../Weapon/Weapon\";\nimport CharacterDatabase from \"./CharacterDatabase\";\n\nexport default class Character {\n  //do not instantiate.\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\n  static getCharacterDataImport = () => CharacterDataImport\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\n    let { characterKey, levelKey } = character\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return this.getLevel(levelKey)\n    if (statKey.includes(\"enemyRes_\")) return 10\n    if (statKey in characterStatBase) return characterStatBase[statKey]\n    let characterObj = this.getCDataObj(characterKey)\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\n    return defVal\n  }\n\n  static getCDataObj = (charKey) => CharacterData[charKey];\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\n\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\n  static getElementalKeys = () => Object.keys(ElementalData)\n  static getElementalKeysWithoutPhysical = () => this.getElementalKeys().filter(e => e !== \"physical\")\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\n\n  //LEVEL\n  static getlevelKeys = () => Object.keys(LevelsData)\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\n\n  //SPECIALIZED STAT\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\n  //ASSETS\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\n\n  //talents\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\n\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\n    //so far we only get level boost from constellations, so only burst and skills.\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\n    let talents = this.getCDataObj(characterKey)?.talent || {}\n    for (let i = 1; i <= constellation; i++) {\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\n      if (boostEntry) return boostEntry[1]\n    }\n    return defVal\n  }\n\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\n  static getTalentDocumentSections = (charKey, talentKey, defVal = []) => {\n    const character = CharacterDatabase.get(charKey);\n    if (!character) return defVal\n    const { constellation = 0, levelKey = Object.keys(LevelsData)[0] } = character\n    const ascension = Character.getAscension(levelKey)\n    return this.getTalentDocument(charKey, talentKey).map(section => typeof section === \"function\" ? section(constellation, ascension) : section)\n  }\n  static getTalentField = (charKey, talentKey, sectionIndex, fieldIndex, defVal = {}) => {\n    const character = CharacterDatabase.get(charKey);\n    if (!character) return defVal\n    const { constellation = 0, levelKey = Object.keys(LevelsData)[0] } = character\n    const ascension = Character.getAscension(levelKey)\n    const field = this.getTalentDocumentSections(charKey, talentKey)?.[sectionIndex]?.fields?.[fieldIndex]\n    if (!field) return defVal\n    return typeof field === \"function\" ? field(constellation, ascension) : field\n  }\n  static getTalentFieldValue = (field, key, talentKey, stats = {}, defVal = \"\") => {\n    if (!field?.[key]) return defVal\n    if (key === \"formula\")\n      return field?.formula?.(stats.talentLevelKeys[talentKey], stats)?.[0]?.(stats)\n    return typeof field?.[key] === \"function\" ? field[key](stats.talentLevelKeys[talentKey], stats) : field[key]\n  }\n\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\n    let stats = this.getTalent(charKey, talentKey)?.stats\n    if (typeof stats === \"function\")\n      return stats(constellation, ascension)\n    return stats || defVal\n  }\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\n    let talents = this.getCDataObj(charKey)?.talent || {}\n    let statsArr = []\n    Object.keys(talents).forEach(talentKey => {\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\n      if (stats) statsArr.push(stats)\n    })\n    return statsArr\n  }\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\n    const sections = this.getTalentDocumentSections(charKey, talentKey)\n    let cond = null\n    for (const section of sections) {\n      let tempCond = section.conditional\n      if (typeof tempCond === \"function\")\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\n      if (tempCond?.conditionalKey === conditionalKey) {\n        cond = tempCond\n        break;\n      }\n    }\n    return cond || defVal\n  }\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\n    if (!conditionalNum || !conditional) return defVal\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\n    if (!stacks) return defVal\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\n  }\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\n    if (!conditionalNum || !conditional) return defVal\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\n    return fields || defVal\n  }\n\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\n\n  //look up the formula, and generate the formulaPath to send to worker.\n  static getFormulaPath(characterKey, talentKey, formula) {\n    const formulaDB = this.getCDataObj(characterKey)?.formula\n    if (!formulaDB) return\n    let formulaKey\n    if (talentKey === \"auto\") {\n      for (const tk of [\"normal\", \"charged\", \"plunging\"]) {\n        ([formulaKey,] = Object.entries(formulaDB?.[tk] ?? {}).find(([, value]) => value === formula) ?? [])\n        if (formulaKey) {\n          talentKey = tk\n          break;\n        }\n      }\n    } else ([formulaKey,] = Object.entries(formulaDB?.[talentKey] ?? {}).find(([, value]) => value === formula) ?? [])\n    if (!formulaKey) return\n    return { characterKey, talentKey, formulaKey }\n  }\n\n\n  static hasTalentPage = (characterKey) => Boolean(Character.getCDataObj(characterKey)?.talent)\n\n  static getDisplayStatKeys = (characterKey, defVal = { basicKeys: [] }) => {\n    if (!characterKey) return defVal\n    let eleKey = Character.getElementalKey(characterKey)\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\n    const isAutoElemental = Character.isAutoElemental(characterKey)\n    const isAutoInfusable = Character.isAutoInfusable(characterKey)\n    if (!isAutoElemental)\n      basicKeys.push(\"physical_dmg_\")\n\n    //show elemental interactions\n    const transReactions = ElementToReactionKeys[eleKey]\n    const weaponTypeKey = this.getWeaponTypeKey(characterKey)\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\n    if (this.hasTalentPage(characterKey)) {\n      const charFormulas = {}\n      Object.keys(Character.getCDataObj(characterKey)?.talent ?? {}).forEach(talentKey =>\n        Character.getTalentDocumentSections(characterKey, talentKey)?.forEach((section, sectionIndex) =>\n          section?.fields?.forEach((field, fieldIndex) =>\n            (field?.formula || this.getTalentField(characterKey, talentKey, sectionIndex, fieldIndex)?.formula) && (charFormulas[talentKey] = [...(charFormulas[talentKey] ?? []), {\n              talentKey,\n              sectionIndex,\n              fieldIndex\n            }]))))\n      return { basicKeys, ...charFormulas, transReactions }\n    } else {\n      //generic average hit parameters.\n      const genericAvgHit = []\n      if (!isAutoElemental) //add phy auto + charged + physical \n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\n\n      if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\n        genericAvgHit.push(`${eleKey}_normal_avgHit`, `${eleKey}_charged_avgHit`)\n      else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\n      }\n      //show skill/burst \n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\n\n      //add reactions.\n      if (eleKey === \"pyro\") {\n        const reactions = []\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\n        genericAvgHit.push(...reactions)\n      } else if (eleKey === \"cryo\")\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\n      else if (eleKey === \"hydro\")\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\n\n      return { basicKeys, genericAvgHit, transReactions }\n    }\n  }\n\n  static hasOverride = (character, statKey) => {\n    if (statKey === \"finalHP\")\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\n    else if (statKey === \"finalDEF\")\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\n    else if (statKey === \"finalATK\")\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\n  }\n\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\n    else return this.getBaseStatValue(character, statKey, defVal)\n  }\n\n  //equipment, with consideration on swapping equipped.\n  static equipArtifacts = (characterKey, artifactIds) => {\n    let character = CharacterDatabase.get(characterKey)\n    if (!character) return;\n    let artIdsOnCharacter = character.equippedArtifacts;\n    let artIdsNotOnCharacter = artifactIds\n\n    //swap, by slot\n    Artifact.getSlotKeys().forEach(slotKey => {\n      let artNotOnChar = ArtifactDatabase.get(artIdsNotOnCharacter?.[slotKey])\n      if (artNotOnChar.location === characterKey) return; //it is already equipped\n      let artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\n      let notCharLoc = (artNotOnChar?.location || \"\")\n      //move current art to other char\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\n      //move current art to other char\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\n      //move other art to current char\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\n    })\n    //move other art to current char \n    character.equippedArtifacts = {}\n    Object.entries(artifactIds).forEach(([key, artid]) =>\n      character.equippedArtifacts[key] = artid)\n    CharacterDatabase.updateCharacter(character);\n  }\n  static remove(characterKey) {\n    let character = CharacterDatabase.get(characterKey)\n    if (character.equippedArtifacts)\n      Object.values(character.equippedArtifacts).forEach(artid =>\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\n    CharacterDatabase.remove(characterKey)\n  }\n\n  static calculateBuild = (character) => {\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\n  }\n\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\n    let setToSlots = Artifact.setToSlots(artifacts)\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\n\n    let stats = deepClone(initialStats)\n    //add artifact and artifactsets\n    Object.values(artifacts).forEach(art => {\n      if (!art) return\n      //main stats\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\n      //substats\n      art.substats.forEach((substat) =>\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\n    })\n    //setEffects\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\n    //setEffects conditionals\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\n    })\n\n    let dependencies = GetDependencies(stats?.modifiers)\n    PreprocessFormulas(dependencies, stats).formula(stats)\n    return {\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\n      setToSlots,\n      finalStats: stats,\n      artifactConditionals\n    }\n  }\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\n    if (key === \"modifiers\") {\n      initialStats.modifiers = initialStats.modifiers ?? {}\n      for (const [statKey, modifier] of Object.entries(val)) {\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\n        for (const [mkey, multiplier] of Object.entries(modifier))\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\n      }\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\n  })\n\n  static calculateCharacterWithWeaponStats = (character) => {\n    character = deepClone(character)\n    const { characterKey, levelKey, hitMode, autoInfused, reactionMode, talentLevelKeys, constellation, talentConditionals = [] } = character\n    const ascension = Character.getAscension(levelKey)\n\n    //generate the initalStats obj with data from Character & overrides\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\n    initialStats.characterEle = this.getElementalKey(characterKey);\n    initialStats.characterKey = characterKey\n    initialStats.hitMode = hitMode;\n    initialStats.autoInfused = autoInfused && Character.getCDataObj(characterKey)?.talent?.auto?.infusable\n    initialStats.reactionMode = reactionMode;\n    initialStats.talentConditionals = talentConditionals\n    initialStats.weaponType = this.getWeaponTypeKey(characterKey)\n    initialStats.talentLevelKeys = talentLevelKeys;\n    initialStats.constellation = constellation\n    initialStats.ascension = ascension\n    for (const key in initialStats.talentLevelKeys)\n      initialStats.talentLevelKeys[key] += this.getTalentLevelBoost(character.characterKey, key, constellation);\n\n    //enemy stuff\n    Character.getElementalKeys().forEach(eleKey => {\n      let statKey = `${eleKey}_enemyRes_`\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\n      statKey = `${eleKey}_enemyImmunity`\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\n    })\n\n    //all the rest of the overrides\n    let overrides = character?.baseStatOverrides || {}\n    Object.entries(overrides).forEach(([statKey, val]) => {\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\n    })\n\n    //add specialized stat\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\n\n\n    //add stats from talentconditionals\n    talentConditionals.forEach(cond => {\n      const { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\n      const conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, initialStats.talentLevelKeys[talentKey], constellation, ascension)\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\n    })\n\n    //add stats from all talents\n    Character.getTalentStatsAll(characterKey, constellation, ascension).forEach(s => this.mergeStats(initialStats, s))\n\n    //add stats from weapons\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\n\n    return initialStats\n  }\n\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\nvar initiated = false\nvar characterDatabase = {};\n\nexport default class CharacterDatabase {\n  //do not instantiate.\n  constructor() {\n    if (this instanceof CharacterDatabase) throw Error('A static class cannot be instantiated.');\n  }\n  static isInvalid = (char) => !char || !char.characterKey || !char.levelKey\n  static getCharacterDatabase = () => deepClone(characterDatabase);\n  static getCharacterKeyList = () => Object.keys(characterDatabase);\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\n  static populateDatebaseFromLocalStorage = () => {\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\n    Object.keys(localStorage).filter(key => key.startsWith(\"char_\")).forEach(key => {\n      let [, characterKey] = key.split(\"char_\")\n      if (!characterDatabase[characterKey]) {\n        let character = loadFromLocalStorage(key);\n        if (!character) return;\n        characterDatabase[characterKey] = character;\n      }\n    })\n    initiated = true\n    return true\n  }\n  static updateCharacter = (char) => {\n    if (this.isInvalid(char)) return;\n    const dchar = deepClone(char)\n    saveToLocalStorage(`char_${char.characterKey}`, dchar);\n    characterDatabase[char.characterKey] = dchar;\n  }\n  static get = (characterKey) => characterDatabase?.[characterKey] ?? null\n\n  static remove = (characterKey) => {\n    delete characterDatabase[characterKey];\n    localStorage.removeItem(`char_${characterKey}`);\n  }\n  static getArtifactIDFromSlot = (characterKey, slotKey) =>\n    this.get(characterKey)?.equippedArtifacts?.[slotKey] ?? null\n\n  static equipArtifact = (characterKey, art) => {\n    const char = this.get(characterKey)\n    if (!char || !art || !art.slotKey) return\n    if (!char.equippedArtifacts) char.equippedArtifacts = {};\n    char.equippedArtifacts[art.slotKey] = art.id;\n    this.updateCharacter(char)\n  }\n  static unequipArtifactOnSlot = (characterKey, slotKey) => {\n    const char = this.get(characterKey)\n    if (!char || !slotKey) return\n    if (!char?.equippedArtifacts?.[slotKey]) return;\n    char.equippedArtifacts[slotKey] = \"\";\n    this.updateCharacter(char)\n  }\n  static equipArtifactBuild = (characterKey, artifactIds) => {\n    const character = this.get(characterKey)\n    if (!character) return;\n    character.equippedArtifacts = artifactIds\n    CharacterDatabase.updateCharacter(character);\n  }\n  //helper function for testing\n  static clearDatabase = () => {\n    characterDatabase = {}\n    initiated = false\n  }\n}\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\n\nconst SlotIcon = {\n  flower: faBahai,\n  plume: faFeatherAlt,\n  sands: faHourglass,\n  goblet: faWineGlass,\n  circlet: faCrown\n}\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\nimport ElementalData from './ElementalData';\nlet ArtifactData = {}\nlet ArtifactDataImport = import('./Artifacts')\nArtifactDataImport.then(imp => {\n  ArtifactData = imp.default\n  ArtifactDataImport = null\n})\nconst ArtifactMainSlotKeys = [\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\",\n]\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_dmg_`))\n\nconst ArtifactStarsData = {\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\n};\n\nconst ArtifactMainStatsData = {\n  1: {\n    hp: [129, 178, 227, 275, 324],\n    atk: [8, 12, 15, 18, 21],\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\n    eleMas: [13, 17, 22, 27, 32],\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\n  },\n  2: {\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\n  },\n  3: {\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\n  },\n  4: {\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\n  },\n  5: {\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\n    critDMG_: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\n  }\n}\n\nconst ArtifactSubStatsData = {\n  hp: { 1: [24, 30], 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\n  hp_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\n  atk: { 1: [2], 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\n  atk_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\n  def: { 1: [2], 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\n  def_: { 1: [1.5, 1.8], 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\n  eleMas: { 1: [5, 6], 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\n  enerRech_: { 1: [1.3, 1.6], 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\n  critRate_: { 1: [0.8, 1], 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\n  critDMG_: { 1: [1.6, 1.9], 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\n}\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubStatsData).map(([key, obj]) =>\n  [key, {\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\n  }]))\n\nconst ArtifactSlotsData = {\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\n};\n\nexport {\n  ArtifactMainSlotKeys,\n  ArtifactSlotsData,\n  ArtifactData,\n  ArtifactDataImport,\n  ArtifactSubStatsData,\n  ArtifactSubstatsMinMax,\n  ArtifactStarsData,\n  ArtifactMainStatsData\n};\n","export default class ArtifactBase {\n  //do not instantiate.\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\n\n  //returns {setKey:[slotKey...]}\n  static setToSlots = (artifacts) => {\n    let setToSlots = {};\n    Object.entries(artifacts).forEach(([key, art]) => {\n      if (!art) return\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\n      else setToSlots[art.setKey] = [key]\n    })\n    return setToSlots\n  }\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport CharacterDatabase from '../Character/CharacterDatabase';\nimport SlotIcon from '../Components/SlotIcon';\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\nimport Stat from '../Stat';\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\nimport ArtifactBase from './ArtifactBase';\nimport ArtifactDatabase from './ArtifactDatabase';\n\nconst maxStar = 5\n\nexport default class Artifact {\n  //do not instantiate.\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\n\n  //SETS\n  static getDataImport = () => ArtifactDataImport\n  static getSetKeys = () => Object.keys(ArtifactData || {})\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\n  static getSetsByMaxStarEntries = (star) =>\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\n\n  //SETEFFECT\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\n  static getArtifactSetEffectsStats = (setToSlots) => {\n    let artifactSetEffect = []\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\n        Object.entries(value.stats).forEach(([key, statVal]) =>\n          artifactSetEffect.push({ key, statVal }))))\n    return artifactSetEffect\n  }\n  static getSetEffects = (setToSlots) => {\n    let artifactSetEffect = {}\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\n      if (setNumKeys.length)\n        artifactSetEffect[setKey] = setNumKeys\n    })\n    return artifactSetEffect\n  }\n\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\n    if (!setEffectText) return defVal\n    if (typeof setEffectText === \"function\")\n      return setEffectText(charFinalStats)\n    else if (setEffectText)\n      return setEffectText\n    return defVal\n  }\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\n\n  //SLOT\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\n  static getSlotIcon = (slotKey, defVal = \"\") =>\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\n\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\n    if (!slotKey) return defVal;\n    let name = this.getSlotName(slotKey)\n    if (!name) return defVal;\n    let slotIcon = this.getSlotIcon(slotKey)\n    if (!slotIcon) return defVal;\n    return (<span>{slotIcon} {name}</span>)\n  }\n  static splitArtifactsBySlot = (databaseObj) =>\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\n\n  //STARS\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\n\n  //MAIN STATS\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\n\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\n    let main = this.getMainStatValues(numStars, key)[level]\n    if (main) return main\n    else if (key?.includes(\"_dmg_\")) // because in the database its still stored as ele_dmg_\n      return this.getMainStatValue(\"ele_dmg_\", numStars, level, defVal)\n    return defVal\n  }\n\n  //SUBSTATS\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\n  static getSubstatAllMax = (statKey, numStars = maxStar, defVal = 0) => ArtifactSubstatsMinMax?.[statKey]?.max[numStars] ?? defVal\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\n  static subStatCloseEnough = (key, value1, value2) => {\n    if (Stat.getStatUnit(key) === \"%\")\n      return closeEnoughFloat(value1, value2)\n    else\n      return closeEnoughInt(value1, value2)\n  }\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\n  static rollsRemaining = (level, numStars) =>\n    Math.ceil((numStars * 4 - level) / 4);\n  static numberOfSubstatUnlocked = (state) =>\n    state.substats.reduce((sum, cur) =>\n      sum + (cur && cur.value ? 1 : 0), 0);\n  static getSubstatRollData = (subStatKey, numStars) => ArtifactSubStatsData?.[subStatKey]?.[numStars] ?? []\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\n    if (!rollData.length) return defVal\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\n      return defVal\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\n    let rolls = [];\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\n    if (!maxNumRoll) return defVal;\n    const rollOption = (val, arr) => {\n      if (arr.length) {\n        if (arr.length > maxNumRoll) return;\n        let sum = arr.reduce((accu, v) => accu + v, 0)\n        if (isFloat) {\n          if (sum - val >= 0.101) return\n          if (closeEnoughFloat(sum, val))\n            return rolls.push(arr);\n        } else {\n          if (sum - val > 1) return\n          if (closeEnoughInt(sum, val))\n            return rolls.push(arr);\n        }\n      }\n      rollData.slice().reverse().forEach(roll => {\n        if (!arr.length || arr[arr.length - 1] >= roll)\n          rollOption(subStatValue, [...arr, roll])\n      })\n    }\n    rollOption(subStatValue, [])\n    return rolls;\n  }\n  static getSubstatEfficiency = (subStatKey, rolls = []) => {\n    let len = rolls.length\n    let sum = rolls.reduce((a, c) => a + c, 0)\n    let max = this.getSubstatAllMax(subStatKey) * len\n    return max ? clampPercent((sum / max) * 100) : 0\n  }\n\n  //ARTIFACT IN GENERAL\n  static substatsValidation(state) {\n    let { numStars = 0, level = 0, substats = [] } = state\n    //calculate rolls for substats\n    for (const substat of substats) {\n      let { key, value } = substat\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\n      substat.rolls = rollArr[0] || []\n      if (rollArr.length > 1) substat.rollArr = rollArr\n      substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\n    }\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\n    state.currentEfficiency = currentEfficiency\n    state.maximumEfficiency = maximumEfficiency\n    //artifact validation logic\n    let errMsgs = []\n    for (const substat of substats)\n      if (!substat.rolls?.length && substat.key && substat.value)\n        errMsgs.push(\"One of the substat is invalid.\")\n\n    //only show this error when all substats are \"valid\"\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\n\n    if (numStars) {\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\n        for (const substat of substats) {\n          let rollslen = substat.rolls?.length\n          if (!rollslen || !substat.rollArr) continue\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\n          if (moreRolls.length) {\n            substat.rolls = moreRolls[0]\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, substat.rolls)\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\n            state.currentEfficiency = currentEfficiency\n            state.maximumEfficiency = maximumEfficiency\n          }\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\n          if (currentNumOfRolls >= leastNumRolls) break;\n        }\n      }\n      if (currentNumOfRolls < leastNumRolls)\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\n      else {\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\n      }\n    }\n    return errMsgs\n  }\n  static getArtifactEfficiency(substats, numStars, level) {\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\n    // Relative to max star, so comparison between different * makes sense.\n    let totalPossbleRolls = Artifact.totalPossibleRolls(maxStar);\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\n    let statKeys = substats.filter(({ key }) => key).map(({ key }) => key)\n    let maxPerRoll = 100 * Math.max(...(statKeys.length === 4 ? statKeys : Object.keys(ArtifactSubstatsMinMax)).map(\n      key => Artifact.getSubstatAllMax(key, numStars) / Artifact.getSubstatAllMax(key)\n    ))\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * maxPerRoll) / totalPossbleRolls);\n    return { currentEfficiency, maximumEfficiency }\n  }\n\n  static setToSlots = ArtifactBase.setToSlots;\n\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\n    if (!conditionalNum) return defVal\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\n    if (!conditional) return defVal\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\n    if (!stacks) return defVal\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\n  }\n\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\n    let ArtifactSetEffectsObj = {};\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\n      let setEffect = {}\n      if (setObj.setEffects)\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\n        })\n      if (Object.keys(setEffect).length > 0)\n        ArtifactSetEffectsObj[setKey] = setEffect;\n    })\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\n      if (Object.keys(condStats).length > 0) {\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\n        Object.entries(condStats).forEach(([statKey, value]) =>\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\n      }\n    })\n    return ArtifactSetEffectsObj\n  }\n\n  //database manipulation\n  static equipArtifactOnChar(artifactId, characterKey) {\n    let art = ArtifactDatabase.get(artifactId);\n    if (!art) return;\n    let currentLocation = art.location;\n    let intendedLocation = (characterKey || \"\")\n    if (currentLocation === intendedLocation) return;\n    let slotKey = art.slotKey\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\n\n    //update artifact\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\n\n    //update Character\n    if (intendedLocation)\n      CharacterDatabase.equipArtifact(intendedLocation, art)\n\n    if (currentLocation) {\n      if (artifactToSwapWith)\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\n      else\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\n    }\n  }\n}\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { clamp } from \"./Util\";\n\nexport default class ConditionalsUtil {\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\n  static getConditionalNum(conditionals, srcKeyObj) {\n    let { srcKey, srcKey2 } = srcKeyObj\n    if (conditionals)\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\n  }\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\n    let { srcKey, srcKey2 } = srcKeyObj\n    if (!conditionals) conditionals = []\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\n    if (!conditionalNum && index >= 0) {\n      //setting conditionalNum to 0 deletes the element\n      conditionals.splice(index, 1);\n    } else if (!conditionalNum && index < 0) { //nothing to change\n      return conditionals\n    } else {\n      let newCond = { srcKey, conditionalNum }\n      if (srcKey2) newCond.srcKey2 = srcKey2\n      if (index >= 0)\n        conditionals[index] = newCond\n      else\n        conditionals.push(newCond)\n    }\n    return conditionals\n  }\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\n    if (Array.isArray(conditional)) {\n      //multiconditional\n      let selectedConditionalNum = conditionalNum\n      let selectedConditional = null\n      for (const curConditional of conditional) {\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\n        else {\n          selectedConditional = curConditional;\n          break;\n        }\n      }\n      if (!selectedConditional) return defVal\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\n      return [selectedConditional[fieldName], stacks]\n    } else {\n      //condtional with stacks\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\n      return [conditional[fieldName], stacks]\n    }\n  }\n}","const ElementalData = {\n  physical: { name: \"Physical\" },\n  anemo: { name: \"Anemo\" },\n  geo: { name: \"Geo\" },\n  electro: { name: \"Electro\" },\n  hydro: { name: \"Hydro\" },\n  pyro: { name: \"Pyro\" },\n  cryo: { name: \"Cryo\" },\n  // dendro: { name: \"Dendro\" }\n}\nexport default ElementalData","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\nvar initiated = false\nvar artifactDatabase = {};\nvar artIdIndex = 1;\nexport default class ArtifactDatabase {\n  //do not instantiate.\n  constructor() {\n    if (this instanceof ArtifactDatabase) {\n      throw Error('A static class cannot be instantiated.');\n    }\n  }\n  static isInvalid = (art) =>\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\n  static populateDatebaseFromLocalStorage = () => {\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\n      if (!artifactDatabase[id]) {\n        let art = loadFromLocalStorage(id)\n        if (!art) return;\n        if (this.isInvalid(art)) {\n          this.removeArtifactById(id);\n          return;\n        }\n        artifactDatabase[id] = art;\n      }\n    })\n    initiated = true\n    return true\n  }\n  static get = (id) => artifactDatabase[id] ?? null\n  static removeArtifact = (art) => {\n    this.removeArtifactById(art.id);\n  }\n  static updateArtifact = (art) => {\n    if (this.isInvalid(art)) return;\n    let id = art.id;\n    if (!id) {//if does not have id, generate ID\n      do {\n        id = `artifact_${artIdIndex++}`\n      } while (localStorage.getItem(id) !== null)\n      art.id = id\n    }\n    let dart = deepClone(art)\n    saveToLocalStorage(id, dart);\n    artifactDatabase[id] = dart;\n  }\n  static removeArtifactById = (artId) => {\n    delete artifactDatabase[artId];\n    localStorage.removeItem(artId);\n  }\n\n  static moveToNewLocation = (artid, location) => {\n    if (!artid) return;\n    let art = this.get(artid)\n    if (!art || art.location === location) return;\n    art.location = location;\n    this.updateArtifact(art);\n  }\n  static swapLocations = (artA, artB) => {\n    let locA = artA.location\n    let locB = artB.location\n    this.moveToNewLocation(artA.id, locB)\n    this.moveToNewLocation(artB.id, locA)\n  }\n  static swapLocationsById = (artAid, artBid) =>\n    this.swapLocations(this.get(artAid), this.get(artBid))\n  //helper function for testing\n  static clearDatabase = () => {\n    artifactDatabase = {}\n    initiated = false\n    artIdIndex = 1\n  }\n}","import { clamp } from \"./Util/Util\";\nimport { ReactionMatrix, hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\n\nconst StatData = {\n  flat: { name: \"\", default: 1 },\n\n  // Character Stats\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\n\n  // Weapon Stats\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\n\n  // Character & Weapon Stats\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\n\n  // Weapon & Artifact Stats\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\n\n  // Attack-related Character, Weapon & Artifact Stats\n  finalHP: { name: \"HP\", pretty: \"HP\" },\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\n\n  eleMas: { name: \"Elemental Mastery\", },\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\" },\n  critRate_: { name: \"CRIT Rate\", unit: \"%\" },\n\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\" },\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\n\n  // Misc. Stats\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\n  powShield_: { name: \"Powerful Shield\", unit: \"%\" },\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\n  stamina: { name: \"Stamina\" },\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\n\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\n\n  // Reaction\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\n\n  // Enemy\n  enemyLevel: { name: \"Enemy Level\", const: true },\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\n}\nconst Formulas = {\n  // Basic Stats\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\n\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / (100 + c.enemyLevel + 100 + c.characterLevel),\n\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\n\n  // Reactions\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\n\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\n  crystalize_multi: (s, c) => ReactionMatrix[\"crystalize\"].reduce((accu, val, i) => accu + val * Math.pow(c.characterLevel, i), 0),\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\n}\n\nconst ElementToReactionKeys = {\n  physical: [],\n  anemo: [\"swirl_hit\"],\n  geo: [\"crystalize_hit\", \"shattered_hit\"],\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\", \n  dendro: []\n}\nfunction resMultiplier(res) {\n  res = res / 100\n  if (res < 0) return 1 - res / 2\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\n  return 1 - res\n}\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\n\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\n})\n\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n  const opt = { variant: ele }\n  // DONT CHANGE. needed for screenshot parsing\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\n\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, const: true, ...opt }\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\n\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", const: true, ...opt }\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\n\n  Object.entries(hitTypes).forEach(([type, typeName]) => {\n    StatData[`${ele}_elemental_${type}`] = { name: `${eleName} Attack ${typeName}`, ...opt }\n    StatData[`${ele}_elemental_${type}_multi`] = { name: `${eleName} Attack ${typeName} Multiplier`, unit: \"multi\" }\n\n    Formulas[`${ele}_elemental_${type}`] = (s) => s.finalATK * s[`${ele}_elemental_${type}_multi`]\n  })\n\n  Formulas[`${ele}_elemental_hit_multi`] = (s, c) => (1 + (s.dmg_ + s[`${ele}_dmg_`]) / 100) * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\n  Formulas[`${ele}_elemental_critHit_multi`] = (s) => s[`${ele}_elemental_hit_multi`] * (1 + s.critDMG_ / 100)\n  Formulas[`${ele}_elemental_avgHit_multi`] = (s) => s[`${ele}_elemental_hit_multi`] * (1 + s.critDMG_ * s[`critRate_`] / 10000)\n\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(c[`${ele}_enemyRes_`])\n})\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n    const opt = { variant: ele }\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\n\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\n    })\n\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => (1 + (s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100) * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * (1 + s.critDMG_ / 100)\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\n  })\n})\n\nObject.entries(transformativeReactions).forEach(([reaction, [reactionName, ele, baseMulti]]) => {\n  let opt = {}\n  if (ele) opt.variant = reaction\n  StatData[`${reaction}_hit`] = { name: `${reactionName} DMG`, ...opt }\n  StatData[`${reaction}_dmg_`] = { name: `${reactionName} DMG Bonus`, unit: \"%\", ...opt }\n  StatData[`${reaction}_multi`] = { name: `${reactionName} Multiplier`, unit: \"multi\", const: true, ...opt }\n\n  Formulas[`${reaction}_multi`] = (s, c) => ReactionMatrix[reaction].reduce((accu, val, i) => accu + val * Math.pow(c.characterLevel, i), 0)\n  Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\n})\n\nObject.entries(amplifyingReactions).forEach(([reaction, [name, variants]]) => {\n  const opt = { variant: reaction }\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      StatData[`${ele}_${reaction}_elemental_${type}`] = { name: `${name} ${typeName}`, ...opt }\n      Formulas[`${ele}_${reaction}_elemental_${type}`] = (s) => s[`${ele}_elemental_${type}`] * s[`${ele}_${reaction}_multi`]\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s[`${ele}_${move}_${type}`] * s[`${ele}_${reaction}_multi`]\n      })\n    })\n  })\n})\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\n\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\n  const formulaList = dependencyKeys.map(key => {\n    const modifier = modifiers[key] ?? {}\n    const constModifier = Object.entries(modifier).filter(([k]) => StatData[k]?.const)\n    const dynamicModifier = Object.entries(modifier).filter(([k]) => !(StatData[k]?.const))\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]) => accu + c[k] * m, 0)\n    const dynamicFunc = (s) => dynamicModifier.reduce((accu, [k, m]) => accu + s[k] * m, 0)\n\n    let funcIndicator = 0\n    if (constModifier.length) funcIndicator += 1\n    if (dynamicModifier.length) funcIndicator += 2\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\n\n    let tmp\n    switch (funcIndicator) {\n      case 0: tmp = Formulas[key]; break\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\n      case 4: tmp = (s, c) => c[key]; break\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\n      case 8: tmp = (s, c) => s[key]; break\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\n    }\n    const func = tmp\n\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\n\n    if (!(key in Formulas))\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\n\n    if (StatData[key]?.const) {\n      constData[key] = stats[key]\n      constData[key] = func(stats, constData)\n      stats[key] = constData[key]\n      if (dynamicModifier.length)\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\n      return null\n    }\n\n    if (!(key in Formulas))\n      initialStats[key] = stats[key]\n\n    return [key, func]\n  }).filter((func) => func)\n\n  if (debug) console.log(initialStats, constData)\n\n  return {\n    initialStats,\n    formula: s => {\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\n      Object.assign(s, constData)\n    }\n  }\n}\n\nexport {\n  Formulas,\n  StatData,\n  ElementToReactionKeys,\n  PreprocessFormulas,\n}\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\nimport { objMultiplication } from '../Util/Util.js';\nexport default class Weapon {\n  //do not instantiate.\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\n\n  static getWeaponDataImport = () => WeaponDataImport\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\n\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\n\n  //base Stat\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\n\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\n  static getWeaponTypeKeys = () => Object.keys(WeaponTypeData)\n\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\n\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\n    let conditional = this.getWeaponConditional(weaponKey)\n    if (!conditional || !conditionalNum) return defVal\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\n    if (!stacks) return defVal\n    stats = stats(refineIndex)\n    if (stacks !== 1) objMultiplication(stats, stacks)\n    return stats\n  }\n}"],"sourceRoot":""}