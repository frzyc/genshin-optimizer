{"version":3,"sources":["Artifact/ArtifactData.js","Artifact/Artifact.js","Artifact/PercentBadge.js","Artifact/ArtifactCard.js","Util.js","Artifact/ArtifactDatabase.js","Components/CustomFormControl.js","Artifact/ArtifactEditor.js","Artifact/ArtifactDisplay.js","Character/CharacterCard.js","Character/CharacterDatabase.js","Character/CharacterEditor.js","Character/CharacterDisplay.js","Build/BuildDisplay.js","App.js","reportWebVitals.js","index.js"],"names":["artifactStats","hp","name","key","hp_","unit","atk","atk_","def","def_","phy_dmg","ele_dmg","ele_mas","ener_rech","crit_rate","crit_dmg","heal_bonu","artifactSubStats","3","low","high","4","5","artifactSlots","flower","stats","plume","sands","goblet","circlet","star5ArtifactsSets","rarity","pieces","stars","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","mainStats","Artifact","getArtifactSetName","state","substateValidation","currentEfficiency","maximumEfficiency","substats","map","substat","validateSubStat","valid","msg","some","rolls","currentNumOfRolls","getCurrentNumOfRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","getCurrentTotalEfficiency","totalPossbleUpgrade","selectedArtifactSetKey","getArtifactSlotName","slotKey","getArtifactPieceName","getStatName","getStatUnit","getMainStatValue","mainStatKey","numStars","level","Math","floor","numberOfSubstatUnlocked","reduce","sum","cur","value","getRemainingSubstats","Object","keys","filter","i","efficiency","getStatHighRollVal","subStatKey","getStatLowRollVal","parseFloat","isNaN","statHighRollVal","statLowRollVal","validateRolls","totalAllowableRolls","min","max","toFixed","ceil","validation","errormsg","rolls2","PercentBadge","getBadgeColor","percent","badgeColor","this","props","tooltip","OverlayTrigger","placement","overlay","Tooltip","Badge","variant","children","React","Component","ArtifactCard","artifactData","art","artifactValidation","Card","className","border","bg","text","Header","Row","Col","xs","Button","size","onClick","onEdit","icon","faEdit","onDelete","faTrashAlt","Body","Title","split","Subtitle","repeat","stat","Footer","getRandomElementFromArray","array","random","length","getRandomIntInclusive","loadFromLocalStorage","data","localStorage","getItem","JSON","parse","saveToLocalStorage","obj","setItem","stringify","artifactDatabase","artifactIdList","artIdIndex","ArtifactDatabase","Error","getIdList","saveIdList","getartifactIdList","populateDatebaseFromLocalStorage","id","parseInt","addArtifact","push","updateArtifact","getArtifact","removeArtifact","removeArtifactById","artId","removeItem","index","indexOf","splice","FloatFormControl","validateInput","e","target","periodEnd","setState","onValueChange","render","FormControl","onChange","IntFormControl","ArtifactEditor","ArtifactDropDown","DropdownButton","title","Dropdown","ItemText","entries","setobj","Item","Divider","StarDropdown","disabled","star","includes","LevelSelection","InputGroup","Prepend","Text","placeholder","setLevel","Append","MainStatInputRow","as","getInitialState","readOnly","SubStatInput","percentStat","substatprops","substatevalue","val","subStatFormControl","remainingSubstats","onSubStatSelected","subStatValidation","onSubstatValueChange","newStatValue","randomizeArtifact","numOfInitialSubStats","totRolls","RollStat","lowRoll","highRoll","componentDidUpdate","artifactToEdit","initialState","newlevel","substatValidations","Container","Alert","saveArtifact","cancelEdit","ArtifactDisplay","artToEdit","forceUpdate","artIdList","deleteArtifact","editArtifact","cancelEditArtifact","artid","lg","md","CharacterCard","characterData","char","liElement","mainEles","advEles","weaponAtk","weapon_atk","weaponSub","weaponStatKey","weaponStatVal","characterDatabase","characterIdList","charIdIndex","CharacterDatabase","getCharacterIdList","addCharacter","updateCharacter","getCharacter","removeCharacter","removeCharacterById","CharacterEditor","StatInput","v","characterToEdit","percentWeaponStatSelect","weaponprops","weaponSubStatInput","faSignature","faTint","faFistRaised","faShieldAlt","faMagic","faDice","faDiceD20","faFirstAid","faSync","faGavel","CharacterDisplay","charToEdit","charIdList","deleteCharacter","editCharacter","cancelEditCharacter","App","basename","Navbar","expand","Brand","Link","to","Nav","process","href","faDiscord","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"8RACMA,EAAgB,CACpBC,GAAI,CAAEC,KAAM,KAAMC,IAAK,MACvBC,IAAK,CAAEF,KAAM,MAAOC,IAAK,MAAOE,KAAM,KACtCC,IAAK,CAAEJ,KAAM,MAAOC,IAAK,OACzBI,KAAM,CAAEL,KAAM,OAAQC,IAAK,OAAQE,KAAM,KACzCG,IAAK,CAAEN,KAAM,MAAOC,IAAK,OACzBM,KAAM,CAAEP,KAAM,OAAQC,IAAK,OAAQE,KAAM,KACzCK,QAAS,CAAER,KAAM,gBAAiBC,IAAK,UAAWE,KAAM,KACxDM,QAAS,CAAET,KAAM,iBAAkBC,IAAK,UAAWE,KAAM,KACzDO,QAAS,CAAEV,KAAM,oBAAqBC,IAAK,WAC3CU,UAAW,CAAEX,KAAM,mBAAoBC,IAAK,YAAaE,KAAM,KAC/DS,UAAW,CAAEZ,KAAM,aAAcC,IAAK,YAAaE,KAAM,KACzDU,SAAU,CAAEb,KAAM,YAAaC,IAAK,WAAYE,KAAM,KACtDW,UAAW,CAAEd,KAAM,iBAAkBC,IAAK,YAAaE,KAAM,MAGzDY,EAAmB,CACvBhB,GAAI,CAAEiB,EAAG,CAAEC,IAAK,IAAKC,KAAM,KAAOC,EAAG,CAAEF,IAAK,IAAKC,KAAM,KAAOE,EAAG,CAAEH,IAAK,IAAKC,KAAM,MACnFhB,IAAK,CAAEc,EAAG,CAAEC,IAAK,IAAKC,KAAM,KAAOC,EAAG,CAAEF,IAAK,IAAKC,KAAM,KAAOE,EAAG,CAAEH,IAAK,IAAKC,KAAM,MACpFd,IAAK,CAAEY,EAAG,CAAEC,IAAK,EAAGC,KAAM,GAAKC,EAAG,CAAEF,IAAK,GAAIC,KAAM,IAAME,EAAG,CAAEH,IAAK,GAAIC,KAAM,KAC7Eb,KAAM,CAAEW,EAAG,CAAEC,IAAK,IAAKC,KAAM,KAAOC,EAAG,CAAEF,IAAK,IAAKC,KAAM,KAAOE,EAAG,CAAEH,IAAK,IAAKC,KAAM,MACrFZ,IAAK,CAAEU,EAAG,CAAEC,IAAK,EAAGC,KAAM,IAAMC,EAAG,CAAEF,IAAK,GAAIC,KAAM,IAAME,EAAG,CAAEH,IAAK,GAAIC,KAAM,KAC9EX,KAAM,CAAES,EAAG,CAAEC,IAAK,IAAKC,KAAM,KAAOC,EAAG,CAAEF,IAAK,IAAKC,KAAM,KAAOE,EAAG,CAAEH,IAAK,IAAKC,KAAM,MACrFR,QAAS,CAAEM,EAAG,CAAEC,IAAK,GAAIC,KAAM,IAAMC,EAAG,CAAEF,IAAK,GAAIC,KAAM,IAAME,EAAG,CAAEH,IAAK,GAAIC,KAAM,KACnFP,UAAW,CAAEK,EAAG,CAAEC,IAAK,IAAKC,KAAM,KAAOC,EAAG,CAAEF,IAAK,IAAKC,KAAM,KAAOE,EAAG,CAAEH,IAAK,IAAKC,KAAM,MAC1FN,UAAW,CAAEI,EAAG,CAAEC,IAAK,IAAKC,KAAM,KAAOC,EAAG,CAAEF,IAAK,IAAKC,KAAM,KAAOE,EAAG,CAAEH,IAAK,IAAKC,KAAM,MAC1FL,SAAU,CAAEG,EAAG,CAAEC,IAAK,IAAKC,KAAM,KAAOC,EAAG,CAAEF,IAAK,IAAKC,KAAM,KAAOE,EAAG,CAAEH,IAAK,IAAKC,KAAM,OAGrFG,EAAgB,CACpBC,OAAQ,CAAEtB,KAAM,iBAAkBuB,MAAO,CAAC,OAC1CC,MAAO,CAAExB,KAAM,iBAAkBuB,MAAO,CAAC,QACzCE,MAAO,CAAEzB,KAAM,eAAgBuB,MAAO,CAAC,MAAO,OAAQ,OAAQ,UAAW,cACzEG,OAAQ,CAAE1B,KAAM,qBAAsBuB,MAAO,CAAC,MAAO,OAAQ,OAAQ,UAAW,UAAW,YAC3FI,QAAS,CAAE3B,KAAM,mBAAoBuB,MAAO,CAAC,MAAO,OAAQ,OAAQ,UAAW,YAAa,WAAY,eAEpGK,EAAqB,CACzB,oBAAqB,CACnB5B,KAAM,oBAAqB6B,OAAQ,CAAC,EAAG,GAAIC,OAAQ,CACjDR,OAAQ,qBACRE,MAAO,uBACPC,MAAO,uBACPC,OAAQ,2BACRC,QAAS,wBAEV,sBAAuB,CACxB3B,KAAM,sBAAuB6B,OAAQ,CAAC,EAAG,GAAIC,OAAQ,CACnDR,OAAQ,uCACRE,MAAO,4BACPC,MAAO,sCACPC,OAAQ,+BACRC,QAAS,iCAEV,eAAkB,CACnB3B,KAAM,iBAAkB6B,OAAQ,CAAC,EAAG,GAAIC,OAAQ,CAC9CR,OAAQ,yBACRE,MAAO,yBACPC,MAAO,2BACPC,OAAQ,0BACRC,QAAS,4BAEV,kBAAmB,CACpB3B,KAAM,kBAAmB6B,OAAQ,CAAC,EAAG,GAAIC,OAAQ,CAC/CR,OAAQ,sBACRE,MAAO,0BACPC,MAAO,uBACPC,OAAQ,uBACRC,QAAS,6BAEV,mBAAoB,CACrB3B,KAAM,mBAAoB6B,OAAQ,CAAC,EAAG,GAAIC,OAAQ,CAChDR,OAAQ,uBACRE,MAAO,wBACPC,MAAO,wBACPC,OAAQ,8BACRC,QAAS,wBAEV,kBAAmB,CACpB3B,KAAM,kBAAmB6B,OAAQ,CAAC,EAAG,GAAIC,OAAQ,CAC/CR,OAAQ,cACRE,MAAO,cACPC,MAAO,qBACPC,OAAQ,mBACRC,QAAS,iBAEV,iBAAkB,CACnB3B,KAAM,iBAAkB6B,OAAQ,CAAC,EAAG,GAAIC,OAAQ,CAC9CR,OAAQ,wBACRE,MAAO,sCACPC,MAAO,yBACPC,OAAQ,4BACRC,QAAS,2BAEV,WAAc,CACf3B,KAAM,aAAc6B,OAAQ,CAAC,EAAG,GAAIC,OAAQ,CAC1CR,OAAQ,0BACRE,MAAO,yBACPC,MAAO,uBACPC,OAAQ,wBACRC,QAAS,wBAEV,qBAAsB,CACvB3B,KAAM,qBAAsB6B,OAAQ,CAAC,EAAG,GAAIC,OAAQ,CAClDR,OAAQ,wBACRE,MAAO,sBACPC,MAAO,sBACPC,OAAQ,2BACRC,QAAS,0BAEV,0BAA2B,CAC5B3B,KAAM,0BAA2B6B,OAAQ,CAAC,EAAG,GAAIC,OAAQ,CACvDR,OAAQ,0BACRE,MAAO,6BACPC,MAAO,mBACPC,OAAQ,uBACRC,QAAS,0BAEV,wBAAyB,CAC1B3B,KAAM,wBAAyB6B,OAAQ,CAAC,EAAG,GAAIC,OAAQ,CACrDR,OAAQ,8BACRE,MAAO,2BACPC,MAAO,0BACPC,OAAQ,kCACRC,QAAS,2BAEV,gBAAiB,CAClB3B,KAAM,gBAAiB6B,OAAQ,CAAC,EAAG,GAAIC,OAAQ,CAC7CR,OAAQ,2BACRE,MAAO,0BACPC,MAAO,2BACPC,OAAQ,0BACRC,QAAS,6BAaTI,EAAQ,CACZf,EAAG,CAAEgB,YAAa,EAAGC,YAAa,EAAGC,qBAAsB,GAC3Df,EAAG,CAAEa,YAAa,EAAGC,YAAa,EAAGC,qBAAsB,GAC3Dd,EAAG,CAAEY,YAAa,EAAGC,YAAa,EAAGC,qBAAsB,IAGvDC,EAAY,CAChBnB,EAAG,CACDjB,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACxEK,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,KACxDF,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1EG,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3EE,KAAM,CAAC,IAAK,IAAK,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MAC7EC,QAAS,CAAC,IAAK,IAAK,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MAChFC,QAAS,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC9EC,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC1DC,UAAW,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,GAAM,MACjFC,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,MAC7EC,SAAU,CAAC,EAAK,EAAK,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACjFC,UAAW,CAAC,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,OAEhFK,EAAG,CACDpB,GAAI,CAAC,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACnGK,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjFF,IAAK,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MACnGG,KAAM,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MACpGE,KAAM,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACtGC,QAAS,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACzGC,QAAS,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MACvGC,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/EC,UAAW,CAAC,EAAK,EAAK,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1GC,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,EAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MACvGC,SAAU,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1GC,UAAW,CAAC,IAAK,IAAK,IAAK,EAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,OAE1GM,EAAG,CACDrB,GAAI,CAAC,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3HK,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACtGF,IAAK,CAAC,EAAK,EAAK,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5HG,KAAM,CAAC,EAAK,EAAK,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC7HE,KAAM,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1HC,QAAS,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC7HC,QAAS,CAAC,EAAK,EAAK,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAChIC,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACpGC,UAAW,CAAC,IAAK,GAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,MACnIC,UAAW,CAAC,IAAK,EAAK,IAAK,IAAK,GAAM,KAAM,KAAM,GAAM,KAAM,KAAM,GAAM,KAAM,KAAM,GAAM,KAAM,KAAM,GAAM,KAAM,KAAM,GAAM,MAChIC,SAAU,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,MAClIC,UAAW,CAAC,IAAK,IAAK,IAAK,GAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QC9LhHsB,E,4DAEnBC,mBAAqB,kBACnBD,EAASC,mBAAmB,EAAKC,Q,oEAiFTA,EAAOC,GAC/B,IAAIC,EAAoB,EAAGC,EAAoB,EAC1CF,IAAoBA,EAAqBD,EAAMI,SAASC,KAAI,SAAAC,GAAO,OAAIR,EAASS,gBAAgBP,EAAOM,OAFzD,oBAG7BL,GAH6B,IAGnD,4BACE,IADF,QACeO,MACX,MAAO,CAAEP,qBAAoBO,OAAO,EAAOC,IAAK,iCAAkCP,oBAAmBC,sBALtD,8BAQnD,GAAIF,EAAmBS,MAAK,SAACJ,GAAD,OAAaA,EAAQK,MAAQ,MAAMV,EAAmBS,MAAK,SAACJ,GAAD,OAAcA,EAAQK,SAC3G,MAAO,CAAEV,qBAAoBO,OAAO,EAAOC,IAAK,uEAAwEP,oBAAmBC,qBAC7I,IAAIS,EAAoBd,EAASe,qBAAqBZ,GAClDa,EAAiBhB,EAASgB,eAAed,GACzCe,EAAoBjB,EAASkB,mBAAmBhB,GAEpD,GAAKY,EAAoBE,EAAkBC,EACzC,MAAO,CAAEd,qBAAoBO,OAAO,EAAOC,IAAI,oCAAD,OAAsCG,EAAtC,8CAA6FE,EAA7F,uEAA0KC,EAA1K,MAAiMb,oBAAmBC,qBAEpQ,IAAIc,EAAyBnB,EAASoB,0BAA0BjB,GAGhE,MAAO,CAAEO,OAAO,EAAMP,qBAAoBW,oBAAmBE,iBAAgBK,oBAAqBJ,EAAmBb,kBAFrHA,EAAoBe,EAAyBF,EAE2FZ,kBADxIA,GAAqBc,EAA0C,IAAjBH,GAAwBC,O,KAvGrDjB,EAKZC,mBAAqB,SAACC,GAAD,OAC1BA,EAAMoB,uBAAyB9B,EAAmBU,EAAMoB,wBAAwB1D,KAAO,gBANtEoC,EAOZuB,oBAAsB,SAACC,GAAD,OAC3BvC,EAAcuC,GAAWvC,EAAcuC,GAAS5D,KAAO,IARtCoC,EAUZyB,qBAAuB,SAACvB,GAAD,OAC3BA,EAAMoB,wBAA0BpB,EAAMsB,SAAWhC,EAAmBU,EAAMoB,wBAAwB5B,OACjGF,EAAmBU,EAAMoB,wBAAwB5B,OAAOQ,EAAMsB,SAAW,cAZ1DxB,EAaZ0B,YAAc,SAAC7D,GAAD,OAASH,EAAcG,GAAKD,MAb9BoC,EAeZ2B,YAAc,SAAC9D,GAAD,OAAUA,GAAOH,EAAcG,IAAQH,EAAcG,GAAKE,KAAQL,EAAcG,GAAKE,KAAO,IAf9FiC,EAiBZ4B,iBAAmB,SAAC1B,GAAD,OACvBA,EAAM2B,aAAe3B,EAAM4B,SAA5B,UAA2C/B,EAAUG,EAAM4B,UAAU5B,EAAM2B,aAAa3B,EAAM6B,QAAW,GAlBxF/B,EAoBZkB,mBAAqB,SAAChB,GAAD,OAAWP,EAAMO,EAAM4B,UAChDnC,EAAMO,EAAM4B,UAAUjC,YAAcF,EAAMO,EAAM4B,UAAUhC,qBAAwB,GArBlEE,EAuBZgB,eAAiB,SAACd,GAAD,OACtB8B,KAAKC,OAAwB,EAAjB/B,EAAM4B,SAAe5B,EAAM6B,OAAS,IAxB/B/B,EA0BZkC,wBAA0B,SAAChC,GAAD,OAC/BA,EAAMI,SAAS6B,QAAO,SAACC,EAAKC,GAAN,OACpBD,GAAOC,GAAOA,EAAIC,MAAQ,EAAI,KAAI,IA5BnBtC,EA8BZuC,qBAAuB,SAACrC,GAAD,OAC3BA,EAAMsB,QAAUgB,OAAOC,KAAK9D,GAAkB+D,QAAO,SAAC7E,GAErD,OAAIqC,EAAM2B,cAAgBhE,IAElBqC,EAAMI,SAASM,MAAK,SAACJ,EAASmC,GAAV,SACzBnC,IAAWA,EAAQ3C,MAAO2C,EAAQ3C,MAAQA,QAE1C,IAtCYmC,EAwCZe,qBAAuB,SAACZ,GAAD,OAC5BA,EAAmBgC,QAAO,SAACC,EAAKC,GAAN,OAAcD,GAAOC,EAAI3B,MAAQ2B,EAAIxB,MAAQ,KAAI,IAzC1Db,EA2CZoB,0BAA4B,SAACjB,GAAD,OACjCA,EAAmBgC,QAAO,SAACC,EAAKC,GAAN,OAAcD,GAAOC,EAAI3B,OAAS2B,EAAIO,WAAcP,EAAIO,WAAaP,EAAIxB,MAAS,KAAI,IA5C/Fb,EA8CZ6C,mBAAqB,SAACC,EAAYhB,GAAb,OAA0B,OAACgB,QAAD,IAACA,IAAchB,GACnEnD,EAAiBmE,GAAYhB,GAAUhD,KAAO,GA/C7BkB,EAgDZ+C,kBAAoB,SAACD,EAAYhB,GAAb,OAA0B,OAACgB,QAAD,IAACA,IAAchB,GAClEnD,EAAiBmE,GAAYhB,GAAUjD,IAAM,GAjD5BmB,EAkDZS,gBAAkB,SAACP,EAAOM,GAC/B,IAAKA,IAAYA,EAAQ8B,MAAO,MAAO,CAAE5B,OAAO,GAChD,IAAI4B,EAAQU,WAAWxC,EAAQ8B,OAC/B,GAAIW,MAAMX,GAAQ,MAAO,CAAE5B,OAAO,EAAOC,IAAI,iBAC7C,IAAIuC,EAtDalD,EAsDU6C,mBAAmBrC,EAAQ3C,IAAKqC,EAAM4B,UAC7DqB,EAvDanD,EAuDS+C,kBAAkBvC,EAAQ3C,IAAKqC,EAAM4B,UACzDsB,EAAgB,SAACvC,GACrB,GAAc,IAAVA,EAAa,MAAO,CAAEH,OAAO,EAAOC,IAAI,qCAC5C,IAAI0C,EAAsB1D,EAAMO,EAAM4B,UAAUhC,sBAAwB,EAAIH,EAAMO,EAAM4B,UAAUjC,aAAe,EACjH,GAAIgB,EAAQwC,EAAqB,MAAO,CAAE3C,OAAO,EAAOC,IAAI,sCAAD,OAAwC0C,EAAxC,YAC3D,IAAIC,EAAMH,EAAiBtC,EACvB0C,EAAML,EAAkBrC,EAC5B,OAAIyB,EAAQgB,GAAOhB,EAAQiB,EAClB,CAAE7C,OAAO,EAAOC,IAAI,iBAAD,OAAmB2B,EAAnB,iBAAiCzB,EAAjC,sCAAoEyC,EAAIE,QAAQ,GAAhF,YAAsFD,EAAIC,QAAQ,GAAlG,OACrB,CAAE9C,OAAO,EAAMkC,YAAcN,EAAQgB,IAAQC,EAAMD,GAAQ,IAAK3C,IAAI,2BAAD,OAA6BE,EAA7B,oCAA8DyC,EAAIE,QAAQ,GAA1E,YAAgFD,EAAIC,QAAQ,GAA5F,OAExE3C,EAAQmB,KAAKyB,KAAKnB,EAAQY,GAC1BQ,EAAaN,EAAcvC,GAC3B8C,EAAWD,EAAW/C,IAC1B,IAAK+C,EAAWhD,MAAO,CACrB,IAAIkD,EAAS5B,KAAKC,MAAMK,EAAQa,GAC5BS,IAAW/C,IACb6C,EAAaN,EAAcQ,IACxBF,EAAWhD,MAKdG,EAAQ+C,GAJR/C,EAAQ,EACJ6C,EAAW/C,MAAQgD,IACrBD,EAAW/C,IAAMgD,EAAW,IAAMD,EAAW/C,MAMnD,OADA+C,EAAW7C,MAAQA,EACZ6C,G,+CCjFUG,E,4MACnBC,cAAgB,SAACC,GACf,IAAIC,EAAa,YAMjB,OALID,EAAU,GACZC,EAAa,UACJD,EAAU,KACnBC,EAAa,WAERA,G,uDAEC,IAAD,OAMHA,EAAcC,KAAKC,MAAMxD,MAAmBuD,KAAKH,cAAcG,KAAKC,MAAMH,SAAzC,SACrC,OAAIE,KAAKC,MAAMC,QAEX,cAACC,EAAA,EAAD,CAAgBC,UAAU,MAAMC,QARd,SAACJ,GAAD,OACpB,cAACK,EAAA,EAAD,2BAAaL,GAAb,aACG,EAAKA,MAAMC,YAMZ,SACE,cAACK,EAAA,EAAD,CAAOC,QAAST,EAAhB,SACGC,KAAKC,MAAMQ,aAKhB,cAACF,EAAA,EAAD,CAAOC,QAAST,EAAhB,SAA6BC,KAAKC,MAAMQ,e,GA1BNC,IAAMC,W,gBCM3BC,E,uKACT,IAAD,OACP,IAAKZ,KAAKC,MAAMY,aAAc,OAAO,KACrC,IAAIC,EAAMd,KAAKC,MAAMY,aACjBE,EAAqBhF,EAASgF,mBAAmBD,GACrD,OAAQ,eAACE,EAAA,EAAD,CAAMC,UAAU,QAAQC,OAAM,UAAKJ,EAAIjD,SAAT,QAAyBsD,GAAG,cAAcC,KAAK,YAA7E,UACN,cAACJ,EAAA,EAAKK,OAAN,CAAaJ,UAAU,OAAvB,SACE,eAACK,EAAA,EAAD,CAAKL,UAAU,aAAf,UACE,eAACM,EAAA,EAAD,WACE,6BAAI,sCAAOxF,EAASyB,qBAAqBsD,QACzC,wCAAS/E,EAASuB,oBAAoBwD,EAAIvD,SAA1C,aAAuDuD,EAAIhD,YAE7D,cAACyD,EAAA,EAAD,CAAKC,GAAI,OAAT,SACE,uBAAMP,UAAU,6BAAhB,UACE,cAACQ,EAAA,EAAD,CAAQjB,QAAQ,UAAUkB,KAAK,KAAKT,UAAU,OAC5CU,QAAS,kBAAM,EAAK1B,MAAM2B,QAAU,EAAK3B,MAAM2B,UADjD,SAEE,cAAC,IAAD,CAAiBC,KAAMC,QAEzB,cAACL,EAAA,EAAD,CAAQjB,QAAQ,SAASkB,KAAK,KAC5BC,QAAS,kBAAM,EAAK1B,MAAM8B,UAAY,EAAK9B,MAAM8B,YADnD,SAEE,cAAC,IAAD,CAAiBF,KAAMG,kBAMjC,eAAChB,EAAA,EAAKiB,KAAN,WACE,cAACjB,EAAA,EAAKkB,MAAN,UACE,6BAAKpB,EAAIlD,YAAJ,UAAqB7B,EAAS0B,YAAYqD,EAAIlD,aAAauE,MAAM,KAAK,GAAtE,YAA4EpG,EAAS4B,iBAAiBmD,IAAtG,OAA6G/E,EAAS2B,YAAYoD,EAAIlD,cAAiB,SAE9J,eAACoD,EAAA,EAAKoB,SAAN,WACE,8BAAMrG,EAASC,mBAAmB8E,KAClC,8BAAM,eAAKuB,OAAOvB,EAAIjD,SAAWiD,EAAIjD,SAAW,QAGlD,oBAAIoD,UAAU,OAAd,SACGH,EAAIzE,SAAWyE,EAAIzE,SAASC,KAAI,SAACgG,EAAM5D,GAAP,OAC9B4D,GAAQA,EAAKjE,MAAU,uCAAgBtC,EAAS0B,YAAY6E,EAAK1I,KAAKuI,MAAM,KAAK,GAA1D,YAAgEG,EAAKjE,OAArE,OAA6EtC,EAAS2B,YAAY4E,EAAK1I,OAA9F8E,GAA8G,QAC7I,OAEN,gCACE,sBAAMuC,UAAU,YAAhB,2BACA,cAAC,EAAD,CAAcf,QAASa,EAAmBrE,IAAKD,MAAOsE,EAAmBtE,MAAOqD,QAASiB,EAAmB5E,kBAA5G,UACI4E,EAAmB5E,kBAAoB4E,EAAmB5E,kBAAoB,GAAGoD,QAAQ,GAAK,MAElG,+BAAO,MACP,cAAC,EAAD,CAAcW,QAASa,EAAmBrE,IAAKD,MAAOsE,EAAmBtE,MAAOqD,QAASiB,EAAmB3E,kBAA5G,UACI2E,EAAmB3E,kBAAoB2E,EAAmB3E,kBAAoB,GAAGmD,QAAQ,GAAK,YAItG,cAACyB,EAAA,EAAKuB,OAAN,yC,GAnDoC7B,IAAMC,WCT1C6B,EAA4B,SAACC,GAAD,OAAWA,EAAM1E,KAAKC,MAAMD,KAAK2E,SAASD,EAAME,UAMlF,SAASC,EAAsBvD,EAAKC,GAGlC,OAFAD,EAAMtB,KAAKyB,KAAKH,GAChBC,EAAMvB,KAAKC,MAAMsB,GACVvB,KAAKC,MAAMD,KAAK2E,UAAYpD,EAAMD,EAAM,GAAKA,GAKtD,IAAMwD,EAAuB,SAACjJ,GAC5B,IAAIkJ,EAAOC,aAAaC,QAAQpJ,GAChC,OAAKkJ,EACEG,KAAKC,MAAMJ,GADA,MAGdK,EAAqB,SAACvJ,EAAKwJ,GAAN,OACzBL,aAAaM,QAAQzJ,EAAKqJ,KAAKK,UAAUF,KClBvCG,EAAmB,GACnBC,EAAiB,GACjBC,EAAa,EAEIC,EAEnB,aACE,GADa,oBACT1D,gBAAgB0D,EAClB,MAAMC,MAAM,2CAJGD,EAOZE,UAAY,kBAAMf,EAAqB,qBAP3Ba,EAQZG,WAAa,kBAAMV,EAAmB,mBAAoBK,IAR9CE,EASZI,kBAAoB,kBAAMN,GATdE,EAUZK,iCAAmC,WAEjB,QADvBP,EAAiBE,EAAiBE,eACLJ,EAAiB,IAFA,oBAG7BA,GAH6B,IAG9C,gCAAWQ,EAAX,QACET,EAAiBS,GAAMnB,EAAqBmB,IAJA,8BAK9CP,EAAaQ,SAASlB,aAAaC,QAAQ,wBACvChE,MAAMyE,KAAaA,EAAa,IAhBnBC,EAkBZQ,YAAc,SAACpD,GAEpB,IAAIkD,EAAE,mBAAeP,KAOrB,OANAV,aAAaM,QAAQ,sBAAuBI,GAC5C3C,EAAIkD,GAAKA,EACTb,EAAmBa,EAAIlD,GACvByC,EAAiBS,GAAMlD,EACvB0C,EAAeW,KAAKH,GACpBN,EAAiBG,aACVG,GA3BUN,EA6BZU,eAAiB,SAACtD,GACvB,IAAIkD,EAAKlD,EAAIkD,GACbb,EAAmBa,EAAIlD,GACvByC,EAAiBS,GAAMlD,GAhCN4C,EAkCZW,YAAc,SAACL,GAAD,OAAQT,EAAiBS,IAlC3BN,EAmCZY,eAAiB,SAACxD,GACvB4C,EAAiBa,mBAAmBzD,EAAIkD,KApCvBN,EAsCZa,mBAAqB,SAACC,UACpBjB,EAAiBiB,GACxBzB,aAAa0B,WAAWD,GACxB,IAAIE,EAAQlB,EAAemB,QAAQH,IACpB,IAAXE,IACFlB,EAAeoB,OAAOF,EAAO,GAC7BhB,EAAiBG,e,oDC/CjBgB,E,kDACJ,WAAY5E,GAAQ,IAAD,8BACjB,cAAMA,IAKR6E,cAAgB,SAACC,GACf,IAAI1G,EAAQ0G,EAAEC,OAAO3G,MACjB4G,EAAwC,MAA5B5G,EAAMA,EAAMsE,OAAS,GACrCtE,EAAQU,WAAWV,GACdW,MAAMX,IAAQ,EAAK6G,SAAS,CAAED,UAAWA,IAC9C5G,EAAQA,GAAgB,EACxB,EAAK4B,MAAMkF,eAAiB,EAAKlF,MAAMkF,cAAc9G,IAZpC,EAcnB+G,OAAS,WACP,IAAInF,EAAK,eAAQ,EAAKA,OAGtB,OAFAA,EAAM5B,MAAQ,EAAK4B,MAAM5B,MAAS,EAAK4B,MAAM5B,OAAS,EAAKpC,MAAMgJ,UAAY,IAAM,IAAO,UACnFhF,EAAMkF,cACN,cAACE,EAAA,EAAD,2BAAiBpF,GAAjB,IACLqF,SAAU,SAACP,GAAD,OAAO,EAAKD,cAAcC,QAjBtC,EAAK9I,MAAQ,CACXgJ,WAAW,GAHI,E,UADUvE,IAAMC,WAwB/B4E,E,4MACJT,cAAgB,SAACC,GACf,IAAI1G,EAAQ0G,EAAEC,OAAO3G,MAErBA,GADAA,EAAQ4F,SAAS5F,KACO,EACxB,EAAK4B,MAAMkF,eAAiB,EAAKlF,MAAMkF,cAAc9G,I,EAEvD+G,OAAS,WACP,IAAInF,EAAK,eAAQ,EAAKA,OAEtB,cADOA,EAAMkF,cACN,cAACE,EAAA,EAAD,2BAAiBpF,GAAjB,IACLqF,SAAU,SAACP,GAAD,OAAO,EAAKD,cAAcC,Q,YAXbrE,IAAMC,WCVd6E,E,kDACnB,WAAYvF,GAAQ,IAAD,8BACjB,cAAMA,IAoBRwF,iBAAmB,kBACjB,eAACC,EAAA,EAAD,CAAgBzE,UAAU,gBAAgB0E,MAAO5J,EAASC,mBAAmB,EAAKC,OAAlF,UACE,cAAC2J,EAAA,EAASC,SAAV,sFACCtH,OAAOuH,QAAQvK,GAAoBe,KAAI,mCAAE1C,EAAF,KAAOmM,EAAP,YACtC,cAACH,EAAA,EAASI,KAAV,CACErE,QAAS,kBAAM,EAAKuD,SAAS,CAAE7H,uBAAwBzD,EAAKiE,SAAUkI,EAAOvK,OAAOuK,EAAOvK,OAAOmH,OAAS,MAD7G,SAGGoD,EAAOpM,MAHUC,MAMtB,cAACgM,EAAA,EAASK,QAAV,IACA,cAACL,EAAA,EAASC,SAAV,0EACA,cAACD,EAAA,EAASC,SAAV,kEAjCe,EAmCnBK,aAAe,kBACb,cAACR,EAAA,EAAD,CAAgBzE,UAAU,gBAAgB0E,MAAO,EAAK1J,MAAM4B,SAAW,EAAI,eAAKwE,OAAO,EAAKpG,MAAM4B,UAAY,SAAUsI,UAAW,EAAKlK,MAAMoB,uBAA9I,SACGkB,OAAOC,KAAK9C,GAAOY,KAAI,SAAC8J,EAAM1B,GAE7B,OADA0B,EAAOnC,SAASmC,GACT,cAACR,EAAA,EAASI,KAAV,CAA2BG,UAAW,EAAKlK,MAAMoB,yBAA2B9B,EAAmB,EAAKU,MAAMoB,wBAAwB7B,OAAO6K,SAASD,GAAOzE,QAAS,WACvK,EAAKuD,SAAS,CAAErH,SAAUuI,EAAMtI,MAAO,KADlC,SAGJ,eAAKuE,OAAO+D,IAHY1B,SAvCd,EA8CnB4B,eAAiB,SAACrG,GAAD,OACf,6CAAKgB,UAAU,YAAehB,GAA9B,aACE,eAACsG,EAAA,EAAD,WACE,cAACA,EAAA,EAAWC,QAAZ,UACE,cAACD,EAAA,EAAWE,KAAZ,sBAEF,cAACpB,EAAA,EAAD,CACEhH,MAAO,EAAKpC,MAAM6B,MAClBqI,UAAW,EAAKlK,MAAMoB,uBACtBqJ,YAAW,YAA6B,EAAtB,EAAKzK,MAAM4B,UAC7ByH,SAAW,SAAAP,GAAC,OAAI,EAAK4B,SAAS5B,EAAEC,OAAO3G,UAEzC,eAACkI,EAAA,EAAWK,OAAZ,WACE,cAACnF,EAAA,EAAD,CAAQE,QAAS,kBAAM,EAAKgF,SAAS,IAAIR,UAAW,EAAKlK,MAAMoB,wBAA+C,IAArB,EAAKpB,MAAM6B,MAApG,eACA,cAAC2D,EAAA,EAAD,CAAQE,QAAS,kBAAM,EAAKgF,SAAS,EAAK1K,MAAM6B,MAAQ,IAAIqI,UAAW,EAAKlK,MAAMoB,wBAA+C,IAArB,EAAKpB,MAAM6B,MAAvH,eACA,cAAC2D,EAAA,EAAD,CAAQE,QAAS,kBAAM,EAAKgF,SAAS,EAAK1K,MAAM6B,MAAQ,IAAIqI,UAAW,EAAKlK,MAAMoB,wBAA0B,EAAKpB,MAAM6B,QAAiC,EAAtB,EAAK7B,MAAM4B,SAA7I,eACA,cAAC4D,EAAA,EAAD,CAAQE,QAAS,kBAAM,EAAKgF,SAA+B,EAAtB,EAAK1K,MAAM4B,WAAesI,UAAW,EAAKlK,MAAMoB,wBAA0B,EAAKpB,MAAM6B,QAAiC,EAAtB,EAAK7B,MAAM4B,SAAhJ,SAAsL,EAAtB,EAAK5B,MAAM4B,qBA9DhK,EAkEnBgJ,iBAAmB,kBACjB,eAACN,EAAA,EAAD,WACE,cAACb,EAAA,EAAD,CACEC,MAAO,EAAK1J,MAAMsB,QAAUvC,EAAc,EAAKiB,MAAMsB,SAAS5D,KAAO,OACrEwM,UAAW,EAAKlK,MAAMoB,uBACtByJ,GAAIP,IAAWC,QAHjB,SAKGjI,OAAOuH,QAAQ9K,GAAesB,KAAI,mCAAE1C,EAAF,KAAOyE,EAAP,YACjC,cAACuH,EAAA,EAASI,KAAV,CAAyBrE,QAAS,kBAChC,EAAKuD,SAAS,CAAE3H,QAAS3D,EAAKgE,YAAaS,EAAMnD,MAAM,GAAImB,SAAUmJ,EAAeuB,kBAAkB1K,YADxG,SAGGgC,EAAM1E,MAHWC,QAMxB,cAACyL,EAAA,EAAD,CACEhH,MAAOtC,EAASyB,qBAAqB,EAAKvB,OAC1CkK,UAAQ,EACRa,UAAQ,IAEV,eAACtB,EAAA,EAAD,CACEC,MAAO,EAAK1J,MAAM2B,YAAcnE,EAAc,EAAKwC,MAAM2B,aAAajE,KAAO,YAC7EwM,UAAW,EAAKlK,MAAMoB,yBAA2B,EAAKpB,MAAMsB,QAC5DuJ,GAAIP,IAAWC,QAHjB,UAKE,cAACZ,EAAA,EAASC,SAAV,2CACC,EAAK5J,MAAMsB,QAAUvC,EAAc,EAAKiB,MAAMsB,SAASrC,MAAMoB,KAAI,SAACgG,GAAD,OAChE,cAACsD,EAAA,EAASI,KAAV,CAA0BrE,QAAS,WACjC,EAAKuD,SAAS,CAAEtH,YAAa0E,EAAMjG,SAAUmJ,EAAeuB,kBAAkB1K,YADhF,SAGGN,EAAS0B,YAAY6E,IAHJA,MAIA,cAACsD,EAAA,EAASI,KAAV,OAExB,cAACX,EAAA,EAAD,CACEhH,MAAO,EAAKpC,MAAM2B,YAAX,UAA4B7B,EAAS4B,iBAAiB,EAAK1B,QAA3D,OAAoEF,EAAS2B,YAAY,EAAKzB,MAAM2B,cAAiB,YAC5HuI,UAAQ,EACRa,UAAQ,QArGK,EAwGnBC,aAAe,SAAChH,GACd,IAAIiH,EAAcjH,EAAMpB,YAAyD,MAA3C9C,EAAS2B,YAAYuC,EAAMpB,YAC7DsI,EAAe,CACjBT,YAAa,oBACbrI,MAAO4B,EAAMmH,cAAgBnH,EAAMmH,cAAgB,GACnDjC,cAAe,SAACkC,GAAD,OAASpH,EAAMkF,eAAiBlF,EAAMkF,cAAckC,EAAKpH,EAAMyE,QAC9EyB,UAAWlG,EAAMpB,YAEfyI,EAAqBJ,EACvB,cAAC,EAAD,eAAsBC,IACpB,cAAC,EAAD,eAAoBA,IACxB,OAAO,eAACZ,EAAA,EAAD,WACL,cAACb,EAAA,EAAD,CACEC,MAAO1F,EAAMpB,WAAapF,EAAcwG,EAAMpB,YAAYlF,KAAnD,kBAAqEsG,EAAMyE,MAAQ,GAC1FyB,UAAWlG,EAAMsH,mBAAwD,IAAnCtH,EAAMsH,kBAAkB5E,OAC9DmE,GAAIP,IAAWC,QAHjB,SAKGvG,EAAMsH,kBAAoBtH,EAAMsH,kBAAkBjL,KAAI,SAAC1C,GACtD,OAAQ,cAACgM,EAAA,EAASI,KAAV,CAAyBrE,QAAS,WACpC1B,EAAMuH,mBAAmBvH,EAAMuH,kBAAkB5N,EAAKqG,EAAMyE,QAD1D,SAGL3I,EAAS0B,YAAY7D,IAHIA,MAKzB,cAACgM,EAAA,EAASI,KAAV,MAENsB,EACD,eAACf,EAAA,EAAWK,OAAZ,WACGM,GAAe,cAACX,EAAA,EAAWE,KAAZ,gBAChB,cAACF,EAAA,EAAWE,KAAZ,UACE,cAAC,EAAD,CACEvG,QAASD,EAAMwH,kBAAkB/K,IACjCD,MAAOwD,EAAMwH,kBAAkBhL,QAAUwD,EAAMpB,WAC/CiB,QAASG,EAAMwH,kBAAkB9I,WAHnC,SAIGsB,EAAMpB,WAAcoB,EAAMwH,kBAAkBhL,MAAxB,WAAoCwD,EAAMwH,kBAAkB9I,WAAasB,EAAMwH,kBAAkB9I,WAAa,GAAGY,QAAQ,GAAzH,KAAiI,MAAS,qBAzItJ,EAgJnBiI,kBAAoB,SAAC5N,EAAK8K,GACxB,EAAKQ,UAAS,SAACjJ,GACb,IAAII,EAAW4G,KAAKC,MAAMD,KAAKK,UAAUrH,EAAMI,WAE/C,OADAA,EAASqI,GAAS,CAAE9K,IAAKA,EAAKyE,MAAO,MAC9B,CAAEhC,gBApJM,EAuJnBqL,qBAAuB,SAACC,EAAcjD,GACpC,EAAKQ,UAAS,SAACjJ,GACb,IAAII,EAAW4G,KAAKC,MAAMD,KAAKK,UAAUrH,EAAMI,WAE/C,OADAA,EAASqI,GAAOrG,MAAQsJ,EACjB,CAAEtL,gBA3JM,EA8JnBuL,kBAAoB,WAClB,IAAI3L,EAAQuJ,EAAeuB,kBAE3B9K,EAAMoB,uBAAyBmF,EAA0BjE,OAAOC,KAAKjD,IAErEU,EAAM4B,SAAW2E,EAA0BjH,EAAmBU,EAAMoB,wBAAwB7B,QAE5FS,EAAMsB,QAAUiF,EAA0BjE,OAAOC,KAAKxD,IAEtDiB,EAAM2B,YAAc4E,EAA0BxH,EAAciB,EAAMsB,SAASrC,OAG3E,IAAI2M,EAAuBjF,EAAsBlH,EAAMO,EAAM4B,UAAUlC,YAAaD,EAAMO,EAAM4B,UAAUjC,aAG1GK,EAAM6B,MAAQ8E,EAAsB,EAAoB,EAAjB3G,EAAM4B,UAC7C,IAAIhC,EAAuBkC,KAAKC,MAAM/B,EAAM6B,MAAQ,GAChDgK,EAAWD,EAAuBhM,EAClCiM,GAAY,GACdD,EAAuB,EACvBhM,EAAuBiM,EAAW,IAElCD,EAAuBC,EACvBjM,EAAuB,GAazB,IAXA,IAAIkM,EAAW,SAAClJ,GACd,IH/LsBQ,EAAKC,EG+LvB0I,EAAUjM,EAAS+C,kBAAkBD,EAAY5C,EAAM4B,UACvDoK,EAAWlM,EAAS6C,mBAAmBC,EAAY5C,EAAM4B,UAG7D,MAAa,MAFF9B,EAAS2B,YAAYmB,GAGvBE,YHpMaM,EGoMiB2I,EHpMZ1I,EGoMqB2I,EHnM7ClK,KAAK2E,UAAYpD,EAAMD,GAAOA,GGmMyBE,QAAQ,IAEzDqD,EAAsBoF,EAASC,IAGjCvJ,EAAI,EAAGA,EAAImJ,EAAsBnJ,IAAK,CAC7C,IAAInC,EAAUN,EAAMI,SAASqC,GAC7BnC,EAAQ3C,IAAM4I,EAA0BzG,EAASuC,qBAAqBrC,IACtEM,EAAQ8B,MAAQ0J,EAASxL,EAAQ3C,KAInC,IAAK,IAAI8E,EAAI,EAAGA,EAAI7C,EAAsB6C,IAAK,CAC7C,IAAInC,EAAUiG,EAA0BvG,EAAMI,UAC9CE,EAAQ8B,OAAS0J,EAASxL,EAAQ3C,KAEpC,EAAKsL,SAASjJ,IA7MG,EA+MnBiM,mBAAqB,WACf,EAAKjI,MAAMkI,gBAAkB,EAAKlM,MAAM+H,KAAO,EAAK/D,MAAMkI,eAAenE,IAC3E,EAAKkB,SAAS,EAAKjF,MAAMkI,iBA/M3B,EAAKlM,MAAQuJ,EAAe4C,aAFX,E,qDAaVC,GACPA,EAAWpE,SAASoE,GAChBrJ,MAAMqJ,KAAWA,EAAW,GAC5BA,EAAW,IAAGA,EAAW,GACzBA,EAAiC,EAAtBrI,KAAK/D,MAAM4B,WAAcwK,EAAiC,EAAtBrI,KAAK/D,MAAM4B,UAC9DmC,KAAKkF,SAAS,CAAEpH,MAAOuK,M,+BAiMf,IAAD,OACHd,EAAoBxL,EAASuC,qBAAqB0B,KAAK/D,OACvDqM,EAAqBtI,KAAK/D,MAAMI,SAASC,KAAI,SAAAC,GAAO,OAAIR,EAASS,gBAAgB,EAAKP,MAAOM,MAC7FwE,EAAqBhF,EAASgF,mBAAmBf,KAAK/D,MAAOqM,GACjE,OACE,eAACtH,EAAA,EAAD,CAAMG,GAAG,cAAcC,KAAK,YAA5B,UACE,cAACJ,EAAA,EAAKK,OAAN,8BAGA,eAACL,EAAA,EAAKiB,KAAN,WACE,mBAAMwD,iBAAN,IACA,mBAAMS,aAAN,IACA,mBAAMI,eAAN,CAAqBrF,UAAU,cAC/B,mBAAM4F,iBAAN,IACA,eAAC0B,EAAA,EAAD,CAAWtH,UAAU,OAArB,UACE,eAACK,EAAA,EAAD,WACE,oBAAIL,UAAU,UAAd,sBACA,iCACE,uBAAMA,UAAU,OAAhB,UACE,+DACA,cAAC,EAAD,CAAcf,QAASa,EAAmBrE,IAAKD,MAAOsE,EAAmBtE,MAAOqD,QAASiB,EAAmB5E,kBAA5G,UACI4E,EAAmB5E,kBAAoB4E,EAAmB5E,kBAAoB,GAAGoD,QAAQ,GAAK,SAIpG,iCACE,+DACA,cAAC,EAAD,CAAcW,QAASa,EAAmBrE,IAAKD,MAAOsE,EAAmBtE,MAAOqD,QAASiB,EAAmB3E,kBAA5G,UACI2E,EAAmB3E,kBAAoB2E,EAAmB3E,kBAAoB,GAAGmD,QAAQ,GAAK,eAKxG,cAAC+B,EAAA,EAAD,UACGtB,KAAK/D,MAAMI,SAASC,KAAI,SAACC,EAASmI,GAAV,OACvB,cAACnD,EAAA,EAAD,CAA6BN,UAAU,qBAAvC,SACE,cAAC,EAAKgG,aAAN,CACEpJ,SAAU,EAAK5B,MAAM4B,SACrB0J,kBAAmBA,EACnB1I,WAAYtC,EAAUA,EAAQ3C,IAAM,KACpCwN,cAAe7K,EAAUA,EAAQ8B,MAAQ,KACzCqG,MAAOA,EACPS,cAAe,EAAKuC,qBACpBF,kBAAmB,EAAKA,kBACxBC,kBAAmBa,EAAmB5D,MAThC,UAAYA,WAe3B3D,EAAmBrE,IAAM,cAAC8L,EAAA,EAAD,CAAOhI,QAAQ,SAAf,SAAyBO,EAAmBrE,MAAe,QAEvF,eAACsE,EAAA,EAAKuB,OAAN,WACE,cAACd,EAAA,EAAD,CAAQR,UAAU,OAAOU,QAAS,WAChC,IAAI8G,EAAY,eAAQ,EAAKxM,OACzBwM,EAAaN,uBACRM,EAAaN,eACtB,EAAKlI,MAAMiE,aAAe,EAAKjE,MAAMiE,YAAYuE,GACjD,EAAKvD,SAASM,EAAeuB,oBAL/B,SAOG/G,KAAKC,MAAMkI,eAAiB,gBAAkB,iBAEjD,cAAC1G,EAAA,EAAD,CAAQR,UAAU,OAAOT,QAAQ,UAC/BmB,QAAS,WACP,EAAK1B,MAAMyI,YAAc,EAAKzI,MAAMyI,aACpC,EAAKxD,SAASM,EAAeuB,oBAHjC,mBAQA,cAACtF,EAAA,EAAD,CAAQjB,QAAQ,UACdmB,QAAS3B,KAAK4H,kBADhB,iC,GA1RkClH,IAAMC,WAA7B6E,EAKZ4C,aAAe,CACpB/K,uBAAwB,GACxBQ,SAAU,EACVC,MAAO,EACPP,QAAS,GACTK,YAAa,GACbvB,SAAU,CAAC,GAAI,GAAI,GAAI,KAXNmJ,EAaZuB,gBAAkB,kBAAM9D,KAAKC,MAAMD,KAAKK,UAAUkC,EAAe4C,gB,ICtBrDO,E,kDACnB,WAAY1I,GAAQ,IAAD,8BACjB,cAAMA,IAORiE,YAAc,SAACpD,GACb,GAAI,EAAK7E,MAAM2M,WAAa,EAAK3M,MAAM2M,UAAU5E,KAAOlD,EAAIkD,GAC1DN,EAAiBU,eAAetD,GAChC,EAAKoE,SAAS,CAAE0D,UAAW,MAAQ,EAAKC,iBACnC,CACL,IAAI7E,EAAKN,EAAiBQ,YAAYpD,GAEtC,EAAKoE,UAAS,SAACjJ,GAAD,MAAY,CAAE6M,UAAU,GAAD,mBAAM7M,EAAM6M,WAAZ,CAAuB9E,UAf7C,EAmBnB+E,eAAiB,SAACrE,GAChBhB,EAAiBa,mBAAmB,EAAKtI,MAAM6M,UAAUpE,IACzD,EAAKQ,UAAS,SAACjJ,GACb,IAAI6M,EAAS,YAAO7M,EAAM6M,WAE1B,OADAA,EAAUlE,OAAOF,EAAO,GACjB,CAAEoE,iBAxBM,EA2BnBE,aAAe,SAACtE,GAAD,OACb,EAAKQ,SAAS,CAAE0D,UAAWlF,EAAiBW,YAAY,EAAKpI,MAAM6M,UAAUpE,OA5B5D,EA8BnBuE,mBAAqB,kBACnB,EAAK/D,SAAS,CAAE0D,UAAW,QA7B3BlF,EAAiBK,mCACjB,EAAK9H,MAAQ,CACX6M,UAAU,YAAKpF,EAAiBI,qBAChC8E,UAAW,MALI,E,qDAiCT,IAAD,OACP,OAAQ,eAACL,EAAA,EAAD,CAAWtH,UAAU,OAArB,UACN,cAACK,EAAA,EAAD,CAAKL,UAAU,kBAAf,SAAiC,cAACM,EAAA,EAAD,UAC/B,cAAC,EAAD,CACE4G,eAAgBnI,KAAK/D,MAAM2M,UAC3B1E,YAAalE,KAAKkE,YAClBwE,WAAY1I,KAAKiJ,yBASrB,cAAC3H,EAAA,EAAD,CAAKL,UAAU,OAAf,SACGjB,KAAK/D,MAAM6M,UAAUxM,KAAI,SAAC4M,EAAOxE,GAAR,OACxB,cAACnD,EAAA,EAAD,CAAiB4H,GAAI,EAAGC,GAAI,EAAGnI,UAAU,OAAzC,SACE,cAAC,EAAD,CACEJ,aAAc6C,EAAiBW,YAAY6E,GAC3CnH,SAAU,kBAAM,EAAKgH,eAAerE,IACpC9C,OAAQ,kBAAM,EAAKoH,aAAatE,OAJ1BwE,e,GAnDyBxI,IAAMC,W,2BCA9B0I,G,uKACT,IAAD,OACP,IAAKrJ,KAAKC,MAAMqJ,cAAe,OAAO,KACtC,IAAIC,EAAOvJ,KAAKC,MAAMqJ,cAEhBE,EAAY,SAAC5P,GAAD,OACf,+BACC,+BAAOmC,EAAS0B,YAAY7D,GAAKuI,MAAM,KAAK,KAC5C,sBAAMlB,UAAU,cAAhB,SAA+BsI,EAAK3P,GAAOmC,EAAS2B,YAAY9D,OAFxDA,IAKR6P,EADU,CAAC,KAAM,MAAO,MAAO,WACZnN,IAAIkN,GAEvBE,EADS,CAAC,YAAa,WAAY,YAAa,aAC/BpN,IAAIkN,GACrBG,EAAa,+BACf,8CACA,sBAAM1I,UAAU,cAAhB,SAA+BsI,EAAKK,gBAElCC,EAAa,+BACf,+BAAON,EAAKO,cAAiB/N,EAAS0B,YAAY8L,EAAKO,eAAe3H,MAAM,KAAK,GAAI,KACrF,sBAAMlB,UAAU,cAAhB,SAA+BsI,EAAKQ,cAAgBhO,EAAS2B,YAAY6L,EAAKO,oBAEhF,OAAQ,eAAC9I,EAAA,EAAD,CAAMC,UAAU,QAAQC,OAAM,UAAKqI,EAAK1L,SAAV,QAA0BsD,GAAG,cAAcC,KAAK,YAA9E,UACN,cAACJ,EAAA,EAAKK,OAAN,CAAaJ,UAAU,OAAvB,SACE,eAACK,EAAA,EAAD,CAAKL,UAAU,aAAf,UACE,cAACM,EAAA,EAAD,UACE,6BAAI,sCAAOgI,EAAK5P,YAElB,cAAC4H,EAAA,EAAD,CAAKC,GAAI,OAAT,SACE,uBAAMP,UAAU,6BAAhB,UACE,cAACQ,EAAA,EAAD,CAAQjB,QAAQ,UAAUkB,KAAK,KAAKT,UAAU,OAC5CU,QAAS,kBAAM,EAAK1B,MAAM2B,QAAU,EAAK3B,MAAM2B,UADjD,SAEE,cAAC,IAAD,CAAiBC,KAAMC,QAEzB,cAACL,EAAA,EAAD,CAAQjB,QAAQ,SAASkB,KAAK,KAC5BC,QAAS,kBAAM,EAAK1B,MAAM8B,UAAY,EAAK9B,MAAM8B,YADnD,SAEE,cAAC,IAAD,CAAiBF,KAAMG,kBAMjC,eAAChB,EAAA,EAAKiB,KAAN,WACE,wCACA,+BAAK0H,EAAWE,KAChB,4CACA,+BAAKJ,EAAL,OACA,gDACA,6BAAKC,c,GAhD8BhJ,IAAMC,WCN7CqJ,GAAoB,GACpBC,GAAkB,GAClBC,GAAc,EAEGC,GAEnB,aACE,GADa,oBACTnK,gBAAgBmK,EAClB,MAAMxG,MAAM,2CAJGwG,GAOZvG,UAAY,kBAAMf,EAAqB,sBAP3BsH,GAQZtG,WAAa,kBAAMV,EAAmB,oBAAqB8G,KAR/CE,GASZC,mBAAqB,kBAAMH,IATfE,GAUZpG,iCAAmC,WAEhB,QADxBkG,GAAkBE,GAAkBvG,eACNqG,GAAkB,IAFF,oBAG7BA,IAH6B,IAG9C,gCAAWjG,EAAX,QACEgG,GAAkBhG,GAAMnB,EAAqBmB,IAJD,8BAK9CkG,GAAcjG,SAASlB,aAAaC,QAAQ,yBACxChE,MAAMkL,MAAcA,GAAc,IAhBrBC,GAkBZE,aAAe,SAACd,GAErB,IAAIvF,EAAE,oBAAgBkG,MAOtB,OANAnH,aAAaM,QAAQ,uBAAwB6G,IAC7CX,EAAKvF,GAAKA,EACVb,EAAmBa,EAAIuF,GACvBS,GAAkBhG,GAAMuF,EACxBU,GAAgB9F,KAAKH,GACrBmG,GAAkBtG,aACXG,GA3BUmG,GA6BZG,gBAAkB,SAACf,GACxB,IAAIvF,EAAKuF,EAAKvF,GACdb,EAAmBa,EAAIuF,GACvBS,GAAkBhG,GAAMuF,GAhCPY,GAkCZI,aAAe,SAACvG,GAAD,OAAQgG,GAAkBhG,IAlC7BmG,GAmCZK,gBAAkB,SAACjB,GACxBY,GAAkBM,oBAAoBlB,EAAKvF,KApC1BmG,GAsCZM,oBAAsB,SAACzG,UACrBgG,GAAkBhG,GACzBjB,aAAa0B,WAAWT,GACxB,IAAIU,EAAQuF,GAAgBtF,QAAQX,IACrB,IAAXU,IACFuF,GAAgBrF,OAAOF,EAAO,GAC9ByF,GAAkBtG,e,IC3CH6G,G,kDACnB,WAAYzK,GAAQ,IAAD,8BACjB,cAAMA,IAmBR0K,UAAY,SAAC1K,GACX,IAAMkF,EAAgB,SAACyF,GAAD,OACpB3K,EAAMkF,eAAiBlF,EAAMkF,cAAcyF,IAC7C,OAAQ,eAACrE,EAAA,EAAD,CAAYtF,UAAU,OAAtB,UACN,cAACsF,EAAA,EAAWC,QAAZ,UACE,cAACD,EAAA,EAAWE,KAAZ,UAAkBxG,EAAMtG,SAEzBsG,EAAMH,QACL,cAAC,EAAD,CACE4G,YAAazG,EAAMyG,YACnBrI,MAAO4B,EAAM5B,MAAQ4B,EAAM5B,MAAQ,GACnC8G,cAAeA,IAGf,cAAC,EAAD,CACEuB,YAAazG,EAAMyG,YACnBrI,MAAO4B,EAAM5B,MAAQ4B,EAAM5B,MAAQ,GACnC8G,cAAeA,IAGpBlF,EAAMH,SAAY,cAACyG,EAAA,EAAWK,OAAZ,UACjB,cAACL,EAAA,EAAWE,KAAZ,sBAzCa,EA8CnByB,mBAAqB,WACf,EAAKjI,MAAM4K,iBAAmB,EAAK5O,MAAM+H,KAAO,EAAK/D,MAAM4K,gBAAgB7G,IAC7E,EAAKkB,SAAS,EAAKjF,MAAM4K,kBA9C3B,EAAK5O,MAAQyO,EAAgB3D,kBAFZ,E,qDAkDT,IAAD,OACH+D,IACF9K,KAAK/D,MAAM6N,eAAmE,MAAnD/N,EAAS2B,YAAYsC,KAAK/D,MAAM6N,eACzDiB,EAAc,CAChBrE,YAAa,kBACbrI,MAAO2B,KAAK/D,MAAM8N,cAAgB/J,KAAK/D,MAAM8N,cAAgB,GAC7D5E,cAAe,SAACkC,GAAD,OAAS,EAAKnC,SAAS,CAAE6E,cAAe1C,KACvDlB,UAAWnG,KAAK/D,MAAM6N,eAEpBkB,EAAqBF,EACvB,cAAC,EAAD,eAAsBC,IACpB,cAAC,EAAD,eAAoBA,IAExB,OAAQ,eAAC/J,EAAA,EAAD,CAAMG,GAAG,cAAcC,KAAK,YAA5B,UACN,cAACJ,EAAA,EAAKK,OAAN,+BACA,eAACL,EAAA,EAAKiB,KAAN,WACE,eAACsE,EAAA,EAAD,CAAYtF,UAAU,OAAtB,UACE,cAACsF,EAAA,EAAWC,QAAZ,UACE,eAACD,EAAA,EAAWE,KAAZ,WAAiB,cAAC,IAAD,CAAiB5E,KAAMoJ,IAAahK,UAAU,SAA/D,uBAEF,cAACoE,EAAA,EAAD,CAAaqB,YAAY,wCACvBrI,MAAO2B,KAAK/D,MAAMtC,KAClB2L,SAAU,SAACP,GAAD,OAAO,EAAKG,SAAS,CAAEvL,KAAMoL,EAAEC,OAAO3G,cAGpD,4CACA,mBAAMsM,UAAN,CACEhR,KAAM,iCAAM,cAAC,IAAD,CAAiBkI,KAAMqJ,IAAQjK,UAAU,SAA/C,cACNyF,YAAY,gDACZrI,MAAO2B,KAAK/D,MAAMvC,GAClBoG,SAAS,EACTqF,cAAe,SAAC9G,GAAD,OAAW,EAAK6G,SAAS,CAAExL,GAAI2E,OAEhD,mBAAMsM,UAAN,CACEhR,KAAM,iCAAM,cAAC,IAAD,CAAiBkI,KAAMsJ,IAAclK,UAAU,SAArD,eACNyF,YAAY,gDACZrI,MAAO2B,KAAK/D,MAAMlC,IAClB+F,SAAS,EACTqF,cAAe,SAAC9G,GAAD,OAAW,EAAK6G,SAAS,CAAEnL,IAAKsE,OAEjD,mBAAMsM,UAAN,CACEhR,KAAM,iCAAM,cAAC,IAAD,CAAiBkI,KAAMuJ,IAAanK,UAAU,SAApD,eACNyF,YAAY,iDACZrI,MAAO2B,KAAK/D,MAAMhC,IAClB6F,SAAS,EACTqF,cAAe,SAAC9G,GAAD,OAAW,EAAK6G,SAAS,CAAEjL,IAAKoE,OAEjD,mBAAMsM,UAAN,CACEhR,KAAM,iCAAM,cAAC,IAAD,CAAiBkI,KAAMwJ,IAASpK,UAAU,SAAhD,6BACNyF,YAAY,2DACZrI,MAAO2B,KAAK/D,MAAM5B,QAClByF,SAAS,EACTqF,cAAe,SAAC9G,GAAD,OAAW,EAAK6G,SAAS,CAAE7K,QAASgE,OAGrD,gDACA,mBAAMsM,UAAN,CACEhR,KAAM,iCAAM,cAAC,IAAD,CAAiBkI,KAAMyJ,IAAQrK,UAAU,SAA/C,qBACNyF,YAAY,mDACZrI,MAAO2B,KAAK/D,MAAM1B,UAClBuF,SAAS,EACTqF,cAAe,SAAC9G,GAAD,OAAW,EAAK6G,SAAS,CAAE3K,UAAW8D,OAEvD,mBAAMsM,UAAN,CACEhR,KAAM,iCAAM,cAAC,IAAD,CAAiBkI,KAAM0J,IAAWtK,UAAU,SAAlD,uBACNyF,YAAY,qDACZrI,MAAO2B,KAAK/D,MAAMzB,SAClBsF,SAAS,EACTqF,cAAe,SAAC9G,GAAD,OAAW,EAAK6G,SAAS,CAAE1K,SAAU6D,OAEtD,mBAAMsM,UAAN,CACEhR,KAAM,iCAAM,cAAC,IAAD,CAAiBkI,KAAM2J,IAAYvK,UAAU,SAAnD,yBACNyF,YAAY,uDACZrI,MAAO2B,KAAK/D,MAAMxB,UAClBqF,SAAS,EACTqF,cAAe,SAAC9G,GAAD,OAAW,EAAK6G,SAAS,CAAEzK,UAAW4D,OAEvD,mBAAMsM,UAAN,CACEhR,KAAM,iCAAM,cAAC,IAAD,CAAiBkI,KAAM4J,IAAQxK,UAAU,SAA/C,2BACNyF,YAAY,yDACZrI,MAAO2B,KAAK/D,MAAM3B,UAClBwF,SAAS,EACTqF,cAAe,SAAC9G,GAAD,OAAW,EAAK6G,SAAS,CAAE5K,UAAW+D,OAEvD,8CAEA,mBAAMsM,UAAN,CACEhR,KAAM,iCAAM,cAAC,IAAD,CAAiBkI,KAAM6J,IAASzK,UAAU,SAAhD,iBACNyF,YAAY,gBACZrI,MAAO2B,KAAK/D,MAAM2N,WAClB9J,SAAS,EACTqF,cAAe,SAAC9G,GAAD,OAAW,EAAK6G,SAAS,CAAE0E,WAAYvL,OAGxD,eAACkI,EAAA,EAAD,WACE,eAACb,EAAA,EAAD,CACEC,MAAO3F,KAAK/D,MAAM6N,cAAgBrQ,EAAcuG,KAAK/D,MAAM6N,eAAenQ,KAAO,cACjFmN,GAAIP,IAAWC,QAFjB,UAIE,cAACZ,EAAA,EAASC,SAAV,8CACCtH,OAAOuH,QAAQrM,GAAe6C,KAAI,mCAAE1C,EAAF,KAAOyE,EAAP,YACjC,cAACuH,EAAA,EAASI,KAAV,CAAyBrE,QAAS,WAChC,EAAKuD,SAAS,CAAE4E,cAAelQ,EAAKmQ,cAAe,QADrD,SAGG1L,EAAM1E,MAHWC,SAMvBoR,EACAF,GAA4B,cAACvE,EAAA,EAAWK,OAAZ,UAC3B,cAACL,EAAA,EAAWE,KAAZ,wBAIN,eAACzF,EAAA,EAAKuB,OAAN,WACE,cAACd,EAAA,EAAD,CAAQR,UAAU,OAAOU,QAAS,WAChC,EAAK1B,MAAMoK,cAAgB,EAAKpK,MAAMoK,aAAa,EAAKpO,OACxD,EAAKiJ,SAASwF,EAAgB3D,oBAFhC,SAIG/G,KAAKC,MAAM4K,gBAAkB,iBAAmB,kBAEnD,cAACpJ,EAAA,EAAD,CAAQR,UAAU,OAAOT,QAAQ,UAC/BmB,QAAS,WACP,EAAK1B,MAAMyI,YAAc,EAAKzI,MAAMyI,aACpC,EAAKxD,SAASwF,EAAgB3D,oBAHlC,6B,GA3KqCrG,IAAMC,WAA9B+J,GAKZtC,aAAe,CACpBzO,KAAM,GACND,GAAI,EACJK,IAAK,EACLE,IAAK,EACLI,QAAS,EACTE,UAAW,EACXC,SAAU,EACVC,UAAW,EACXH,UAAW,EACXsP,WAAY,EACZE,cAAe,GACfC,cAAe,GAjBEW,GAmBZ3D,gBAAkB,kBAAM9D,KAAKC,MAAMD,KAAKK,UAAUoH,GAAgBtC,gB,ICrBtDuD,G,kDACnB,WAAY1L,GAAQ,IAAD,8BACjB,cAAMA,IAORoK,aAAe,SAACvJ,GACd,GAAI,EAAK7E,MAAM2P,YAAc,EAAK3P,MAAM2P,WAAW5H,KAAOlD,EAAIkD,GAC5DmG,GAAkBG,gBAAgBxJ,GAClC,EAAKoE,SAAS,CAAE0G,WAAY,MAAQ,EAAK/C,iBACpC,CACL,IAAI7E,EAAKmG,GAAkBE,aAAavJ,GAExC,EAAKoE,UAAS,SAACjJ,GAAD,MAAY,CAAE4P,WAAW,GAAD,mBAAM5P,EAAM4P,YAAZ,CAAwB7H,UAf/C,EAmBnB8H,gBAAkB,SAACpH,GACjByF,GAAkBM,oBAAoB,EAAKxO,MAAM4P,WAAWnH,IAC5D,EAAKQ,UAAS,SAACjJ,GACb,IAAI4P,EAAU,YAAO5P,EAAM4P,YAE3B,OADAA,EAAWjH,OAAOF,EAAO,GAClB,CAAEmH,kBAxBM,EA2BnBE,cAAgB,SAACrH,GAAD,OACd,EAAKQ,SAAS,CAAE0G,WAAYzB,GAAkBI,aAAa,EAAKtO,MAAM4P,WAAWnH,OA5BhE,EA8BnBsH,oBAAsB,kBACpB,EAAK9G,SAAS,CAAE0G,WAAY,QA7B5BzB,GAAkBpG,mCAClB,EAAK9H,MAAQ,CACX4P,WAAW,YAAK1B,GAAkBC,sBAClCwB,WAAY,MALG,E,qDAiCT,IAAD,OACP,OAAQ,eAACrD,EAAA,EAAD,WACN,cAACjH,EAAA,EAAD,CAAKL,UAAU,kBAAf,SAAiC,cAACM,EAAA,EAAD,UAC/B,cAAC,GAAD,CACEsJ,gBAAiB7K,KAAK/D,MAAM2P,WAC5BvB,aAAcrK,KAAKqK,aACnB3B,WAAY1I,KAAKgM,0BAIrB,cAAC1K,EAAA,EAAD,CAAKL,UAAU,OAAf,SACGjB,KAAK/D,MAAM4P,WAAWvP,KAAI,SAAC0H,EAAIU,GAAL,OACzB,cAACnD,EAAA,EAAD,CAAc4H,GAAI,EAAGC,GAAI,EAAGnI,UAAU,OAAtC,SACE,cAAC,GAAD,CACEqI,cAAea,GAAkBI,aAAavG,GAC9CjC,SAAU,kBAAM,EAAK+J,gBAAgBpH,IACrC9C,OAAQ,kBAAM,EAAKmK,cAAcrH,OAJ3BV,e,GA9C0BtD,IAAMC,WCJVD,IAAMC,UCmDjCsL,OApCf,WACE,OACE,qBAAKjI,GAAG,OAAR,SACE,eAAC,KAAD,CAAQkI,SAAS,qBAAjB,UACE,eAACC,EAAA,EAAD,CAAQhL,GAAG,OAAOX,QAAQ,OAAO4L,OAAO,KAAxC,UACE,cAACD,EAAA,EAAOE,MAAR,CAAcvF,GAAIwF,KAAMC,GAAG,IAA3B,+BACA,eAACC,EAAA,EAAD,CAAKvL,UAAU,UAAf,UACE,cAACuL,EAAA,EAAIF,KAAL,CAAUxF,GAAIwF,KAAMC,GAAG,YAAvB,uBAEA,cAACC,EAAA,EAAIF,KAAL,CAAUxF,GAAIwF,KAAMC,GAAG,aAAvB,yBACCE,KAEH,cAACD,EAAA,EAAD,UAAK,eAACA,EAAA,EAAIF,KAAL,CAAUI,KAAMD,gCAAoCzH,OAAO,SAA3D,UAAqE,cAAC,IAAD,CAAiBnD,KAAM8K,OAA5F,kBAGP,eAAC,KAAD,WACE,cAAC,KAAD,CAAOC,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,KAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,GAAD,OAEDH,EAGD,cAAC,KAAD,CAAOG,KAAK,IAAZ,SACE,cAAC,EAAD,eC9BGC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASlI,OACP,cAAC,IAAMmI,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.abe16d0c.chunk.js","sourcesContent":["\r\nconst artifactStats = {\r\n  hp: { name: \"HP\", key: \"hp\" },\r\n  hp_: { name: \"HP%\", key: \"hp_\", unit: \"%\" },\r\n  atk: { name: \"ATK\", key: \"atk\" },\r\n  atk_: { name: \"ATK%\", key: \"atk_\", unit: \"%\" },\r\n  def: { name: \"DEF\", key: \"def\" },\r\n  def_: { name: \"DEF%\", key: \"def_\", unit: \"%\" },\r\n  phy_dmg: { name: \"Physical DMG%\", key: \"phy_dmg\", unit: \"%\" },\r\n  ele_dmg: { name: \"Elemental DMG%\", key: \"ele_dmg\", unit: \"%\" },\r\n  ele_mas: { name: \"Elemental Mastery\", key: \"ele_mas\" },\r\n  ener_rech: { name: \"Energy Recharge%\", key: \"ener_rech\", unit: \"%\" },\r\n  crit_rate: { name: \"Crit Rate%\", key: \"crit_rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"Crit DMG%\", key: \"crit_dmg\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus%\", key: \"heal_bonu\", unit: \"%\" },\r\n};\r\n\r\nconst artifactSubStats = {\r\n  hp: { 3: { low: 100, high: 143 }, 4: { low: 167, high: 239 }, 5: { low: 209, high: 299 } },\r\n  hp_: { 3: { low: 2.5, high: 3.5 }, 4: { low: 3.3, high: 4.7 }, 5: { low: 4.1, high: 5.8 } },\r\n  atk: { 3: { low: 7, high: 9 }, 4: { low: 11, high: 16 }, 5: { low: 14, high: 19 } },\r\n  atk_: { 3: { low: 2.5, high: 3.5 }, 4: { low: 3.3, high: 4.7 }, 5: { low: 4.1, high: 5.8 } },\r\n  def: { 3: { low: 8, high: 11 }, 4: { low: 13, high: 19 }, 5: { low: 16, high: 23 } },\r\n  def_: { 3: { low: 3.1, high: 4.4 }, 4: { low: 4.1, high: 5.8 }, 5: { low: 5.1, high: 7.3 } },\r\n  ele_mas: { 3: { low: 10, high: 14 }, 4: { low: 13, high: 19 }, 5: { low: 16, high: 23 } },\r\n  ener_rech: { 3: { low: 2.7, high: 3.5 }, 4: { low: 4.1, high: 5.8 }, 5: { low: 4.5, high: 6.5 } },\r\n  crit_rate: { 3: { low: 1.6, high: 2.3 }, 4: { low: 2.2, high: 3.1 }, 5: { low: 2.7, high: 3.9 } },\r\n  crit_dmg: { 3: { low: 3.3, high: 4.7 }, 4: { low: 4.4, high: 6.2 }, 5: { low: 5.4, high: 7.8 } },\r\n}\r\n\r\nconst artifactSlots = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ele_dmg\", \"phy_dmg\"] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\nconst star5ArtifactsSets = {\r\n  \"Wanderer's Troupe\": {\r\n    name: \"Wanderer's Troupe\", rarity: [4, 5], pieces: {\r\n      flower: \"Troupe's Dawnlight\",\r\n      plume: \"Bard's Arrow Feather\",\r\n      sands: \"Concert's Final Hour\",\r\n      goblet: \"Wanderer's String-Kettle\",\r\n      circlet: \"Conductor's Top Hat\"\r\n    }\r\n  }, \"Viridescent Venerer\": {\r\n    name: \"Viridescent Venerer\", rarity: [4, 5], pieces: {\r\n      flower: \"In Remembrance of Viridescent Fields\",\r\n      plume: \"Viridescent Arrow Feather\",\r\n      sands: \"Viridescent Venerer's Determination\",\r\n      goblet: \"Viridescent Venerer's Vessel\",\r\n      circlet: \"Viridescent Venerer's Diadem\"\r\n    }\r\n  }, \"Thundersoother\": {\r\n    name: \"Thundersoother\", rarity: [4, 5], pieces: {\r\n      flower: \"Thundersoother's Heart\",\r\n      plume: \"Thundersoother's Plume\",\r\n      sands: \"Hour of Soothing Thunder\",\r\n      goblet: \"Thundersoother's Goblet\",\r\n      circlet: \"Thundersoother's Diadem\"\r\n    }\r\n  }, \"Thundering Fury\": {\r\n    name: \"Thundering Fury\", rarity: [4, 5], pieces: {\r\n      flower: \"Thunderbird's Mercy\",\r\n      plume: \"Survivor of Catastrophe\",\r\n      sands: \"Hourglass of Thunder\",\r\n      goblet: \"Omen of Thunderstorm\",\r\n      circlet: \"Thunder Summoner's Crown\"\r\n    }\r\n  }, \"Retracing Bolide\": {\r\n    name: \"Retracing Bolide\", rarity: [4, 5], pieces: {\r\n      flower: \"Summer Night's Bloom\",\r\n      plume: \"Summer Night's Finale\",\r\n      sands: \"Summer Night's Moment\",\r\n      goblet: \"Summer Night's Waterballoon\",\r\n      circlet: \"Summer Night's Mask\"\r\n    }\r\n  }, \"Noblesse Oblige\": {\r\n    name: \"Noblesse Oblige\", rarity: [4, 5], pieces: {\r\n      flower: \"Royal Flora\",\r\n      plume: \"Royal Plume\",\r\n      sands: \"Royal Pocket Watch\",\r\n      goblet: \"Royal Silver Urn\",\r\n      circlet: \"Royal Masque\"\r\n    }\r\n  }, \"Maiden Beloved\": {\r\n    name: \"Maiden Beloved\", rarity: [4, 5], pieces: {\r\n      flower: \"Maiden's Distant Love\",\r\n      plume: \"Maiden's Heart-stricken Infatuation\",\r\n      sands: \"Maiden's Passing Youth\",\r\n      goblet: \"Maiden's Fleeting Leisure\",\r\n      circlet: \"Maiden's Fading Beauty\"\r\n    }\r\n  }, \"Lavawalker\": {\r\n    name: \"Lavawalker\", rarity: [4, 5], pieces: {\r\n      flower: \"Lavawalker's Resolution\",\r\n      plume: \"Lavawalker's Salvation\",\r\n      sands: \"Lavawalker's Torment\",\r\n      goblet: \"Lavawalker's Epiphany\",\r\n      circlet: \"Lavawalker's Wisdom\"\r\n    }\r\n  }, \"Gladiator's Finale\": {\r\n    name: \"Gladiator's Finale\", rarity: [4, 5], pieces: {\r\n      flower: \"Gladiator's Nostalgia\",\r\n      plume: \"Gladiator's Destiny\",\r\n      sands: \"Gladiator's Longing\",\r\n      goblet: \"Gladiator's Intoxication\",\r\n      circlet: \"Gladiator's Triumphus\"\r\n    }\r\n  }, \"Crimson Witch of Flames\": {\r\n    name: \"Crimson Witch of Flames\", rarity: [4, 5], pieces: {\r\n      flower: \"Witch's Flower of Blaze\",\r\n      plume: \"Witch's Ever-Burning Plume\",\r\n      sands: \"Witch's End Time\",\r\n      goblet: \"Witch's Heart Flames\",\r\n      circlet: \"Witch's Scorching Hat\"\r\n    }\r\n  }, \"Bloodstained Chivalry\": {\r\n    name: \"Bloodstained Chivalry\", rarity: [4, 5], pieces: {\r\n      flower: \"Bloodstained Flower of Iron\",\r\n      plume: \"Bloodstained Black Plume\",\r\n      sands: \"Bloodstained Final Hour\",\r\n      goblet: \"Bloodstained Chevalier's Goblet\",\r\n      circlet: \"Bloodstained Iron Mask\"\r\n    }\r\n  }, \"Archaic Petra\": {\r\n    name: \"Archaic Petra\", rarity: [4, 5], pieces: {\r\n      flower: \"Flower of Creviced Cliff\",\r\n      plume: \"Feather of Jagged Peaks\",\r\n      sands: \"Sundial of Enduring Jade\",\r\n      goblet: \"Goblet of Chiseled Crag\",\r\n      circlet: \"Mask of Solitude Basalt\"\r\n    }\r\n  },\r\n  // \"\":{\r\n  //   name: \"\", rarity: [4, 5], pieces: {\r\n  //     flower: \"\",\r\n  //     plume: \"\",\r\n  //     sands: \"\",\r\n  //     goblet: \"\",\r\n  //     circlet: \"\"\r\n  //   }\r\n  // },\r\n}\r\nconst stars = {\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst mainStats = {\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg: [8.7, 11.2, 13.7, 16.2, 16.2, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.4, 8.7, 10.0, 11.4, 12.7, 14.0, 15.4, 16.7, 18.0, 19.3, 20.7, 22.0, 23.3, 24.7, 26.0, 27.3, 28.7, 30.0, 31.3],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nexport {\r\n  artifactStats,\r\n  artifactSlots,\r\n  star5ArtifactsSets,\r\n  artifactSubStats,\r\n  stars,\r\n  mainStats\r\n}","import { artifactStats, stars, mainStats, star5ArtifactsSets, artifactSubStats, artifactSlots } from './ArtifactData'\r\n\r\nexport default class Artifact {\r\n\r\n  getArtifactSetName = () =>\r\n    Artifact.getArtifactSetName(this.state);\r\n\r\n  static getArtifactSetName = (state) =>\r\n    state.selectedArtifactSetKey ? star5ArtifactsSets[state.selectedArtifactSetKey].name : \"Artifact Set\";\r\n  static getArtifactSlotName = (slotKey) =>\r\n    artifactSlots[slotKey] ? artifactSlots[slotKey].name : \"\"\r\n\r\n  static getArtifactPieceName = (state) =>\r\n    (state.selectedArtifactSetKey && state.slotKey && star5ArtifactsSets[state.selectedArtifactSetKey].pieces) ?\r\n      star5ArtifactsSets[state.selectedArtifactSetKey].pieces[state.slotKey] : \"Piece Name\";\r\n  static getStatName = (key) => artifactStats[key].name;\r\n\r\n  static getStatUnit = (key) => (key && artifactStats[key] && artifactStats[key].unit) ? artifactStats[key].unit : \"\";\r\n\r\n  static getMainStatValue = (state) =>\r\n    (state.mainStatKey && state.numStars) ? `${mainStats[state.numStars][state.mainStatKey][state.level]}` : 0\r\n\r\n  static totalPossibleRolls = (state) => stars[state.numStars] ?\r\n    (stars[state.numStars].subBaseHigh + stars[state.numStars].numUpgradesOrUnlocks) : 0;\r\n\r\n  static rollsRemaining = (state) =>\r\n    Math.floor((state.numStars * 4 - state.level) / 4);\r\n\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n\r\n  static getRemainingSubstats = (state) =>\r\n    (state.slotKey ? Object.keys(artifactSubStats).filter((key) => {\r\n      //if mainstat has key, not valid\r\n      if (state.mainStatKey === key) return false;\r\n      //if any one of the substat has, not valid.\r\n      return !state.substats.some((substat, i) =>\r\n        (substat && substat.key ? (substat.key === key) : false)\r\n      )\r\n    }) : []);\r\n\r\n  static getCurrentNumOfRolls = (substateValidation) =>\r\n    substateValidation.reduce((sum, cur) => sum + (cur.valid ? cur.rolls : 0), 0);\r\n\r\n  static getCurrentTotalEfficiency = (substateValidation) =>\r\n    substateValidation.reduce((sum, cur) => sum + (cur.valid && cur.efficiency ? (cur.efficiency * cur.rolls) : 0), 0)\r\n\r\n  static getStatHighRollVal = (subStatKey, numStars) => (subStatKey ?? numStars) ?\r\n    artifactSubStats[subStatKey][numStars].high : 0\r\n  static getStatLowRollVal = (subStatKey, numStars) => (subStatKey ?? numStars) ?\r\n    artifactSubStats[subStatKey][numStars].low : 0\r\n  static validateSubStat = (state, substat) => {\r\n    if (!substat || !substat.value) return { valid: true }\r\n    let value = parseFloat(substat.value);\r\n    if (isNaN(value)) return { valid: false, msg: `Invalid Input` }\r\n    let statHighRollVal = this.getStatHighRollVal(substat.key, state.numStars);\r\n    let statLowRollVal = this.getStatLowRollVal(substat.key, state.numStars);\r\n    const validateRolls = (rolls) => {\r\n      if (rolls === 0) return { valid: false, msg: `Substat cannot be rolled 0 times.` };\r\n      let totalAllowableRolls = stars[state.numStars].numUpgradesOrUnlocks - (4 - stars[state.numStars].subBaseHigh) + 1;//+1 for its base roll\r\n      if (rolls > totalAllowableRolls) return { valid: false, msg: `Substat cannot be rolled more than ${totalAllowableRolls} times.` };\r\n      let min = statLowRollVal * rolls;\r\n      let max = statHighRollVal * rolls;\r\n      if (value < min || value > max)\r\n        return { valid: false, msg: `Invalid value(${value}) for ${rolls} rolls, should be between [${min.toFixed(2)},${max.toFixed(2)}].` }\r\n      return { valid: true, efficiency: ((value - min) / (max - min)) * 100, msg: `This substat was rolled ${rolls} time(s). Min/Max value: ${min.toFixed(2)}/${max.toFixed(2)}.` }\r\n    }\r\n    let rolls = Math.ceil(value / statHighRollVal);\r\n    let validation = validateRolls(rolls);\r\n    let errormsg = validation.msg;//store error msg\r\n    if (!validation.valid) {\r\n      let rolls2 = Math.floor(value / statLowRollVal);\r\n      if (rolls2 !== rolls)\r\n        validation = validateRolls(rolls2);\r\n      if (!validation.valid) {\r\n        rolls = 0;\r\n        if (validation.msg !== errormsg)\r\n          validation.msg = errormsg + \" \" + validation.msg;//combine both error tooltips\r\n      } else {\r\n        rolls = rolls2\r\n      }\r\n    }\r\n    validation.rolls = rolls;\r\n    return validation;\r\n  }\r\n  static artifactValidation(state, substateValidation) {\r\n    let currentEfficiency = 0, maximumEfficiency = 0;\r\n    if (!substateValidation) substateValidation = state.substats.map(substat => Artifact.validateSubStat(state, substat));\r\n    for (const substat of substateValidation)\r\n      if (!substat.valid)\r\n        return { substateValidation, valid: false, msg: \"One of the substat is invalid.\", currentEfficiency, maximumEfficiency }\r\n\r\n    //if a substat has >=2 rolls, when not all of them have been unlocked//if a substat has >=2 rolls, when not all of them have been unlocked\r\n    if (substateValidation.some((substat) => substat.rolls > 1) && substateValidation.some((substat) => !substat.rolls))\r\n      return { substateValidation, valid: false, msg: \"One of the substat have >1 rolls, but not all substats are unlocked.\", currentEfficiency, maximumEfficiency }\r\n    let currentNumOfRolls = Artifact.getCurrentNumOfRolls(substateValidation);\r\n    let rollsRemaining = Artifact.rollsRemaining(state);\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(state);\r\n\r\n    if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n      return { substateValidation, valid: false, msg: `Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possibel roll of this artifact (${totalPossbleRolls}) `, currentEfficiency, maximumEfficiency }\r\n\r\n    let totalCurrentEfficiency = Artifact.getCurrentTotalEfficiency(substateValidation);\r\n    currentEfficiency = totalCurrentEfficiency / totalPossbleRolls;\r\n    maximumEfficiency = (totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls;\r\n    return { valid: true, substateValidation, currentNumOfRolls, rollsRemaining, totalPossbleUpgrade: totalPossbleRolls, currentEfficiency, maximumEfficiency }\r\n\r\n  }\r\n}","import React from 'react';\r\nimport { Badge, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\n\r\nexport default class PercentBadge extends React.Component {\r\n  getBadgeColor = (percent) => {\r\n    let badgeColor = \"secondary\";\r\n    if (percent > 70) {\r\n      badgeColor = \"success\";\r\n    } else if (percent > 40) {\r\n      badgeColor = \"warning\"\r\n    }\r\n    return badgeColor\r\n  }\r\n  render() {\r\n    const renderTooltip = (props) => (\r\n      <Tooltip {...props}>\r\n        {this.props.tooltip}\r\n      </Tooltip>\r\n    );\r\n    let badgeColor = !this.props.valid ? \"danger\" : this.getBadgeColor(this.props.percent);\r\n    if (this.props.tooltip)\r\n      return (\r\n        <OverlayTrigger placement=\"top\" overlay={renderTooltip}>\r\n          <Badge variant={badgeColor}>\r\n            {this.props.children}\r\n          </Badge>\r\n        </OverlayTrigger>)\r\n    else\r\n      return (\r\n        <Badge variant={badgeColor}>{this.props.children}</Badge>)\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Artifact from './Artifact'\r\nimport Button from 'react-bootstrap/Button'\r\nimport PercentBadge from './PercentBadge';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nexport default class ArtifactCard extends React.Component {\r\n  render() {\r\n    if (!this.props.artifactData) return null;\r\n    let art = this.props.artifactData;\r\n    let artifactValidation = Artifact.artifactValidation(art)\r\n    return (<Card className=\"h-100\" border={`${art.numStars}star`} bg=\"darkcontent\" text=\"lightfont\">\r\n      <Card.Header className=\"pr-2\">\r\n        <Row className=\"no-gutters\">\r\n          <Col >\r\n            <h6><b>{`${Artifact.getArtifactPieceName(art)}`}</b></h6>\r\n            <div>{`${Artifact.getArtifactSlotName(art.slotKey)} +${art.level}`}</div>\r\n          </Col>\r\n          <Col xs={\"auto\"}>\r\n            <span className=\"float-right align-top ml-1\">\r\n              <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n                onClick={() => this.props.onEdit && this.props.onEdit()}>\r\n                <FontAwesomeIcon icon={faEdit} />\r\n              </Button>\r\n              <Button variant=\"danger\" size=\"sm\"\r\n                onClick={() => this.props.onDelete && this.props.onDelete()}>\r\n                <FontAwesomeIcon icon={faTrashAlt} />\r\n              </Button>\r\n            </span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Card.Title>\r\n          <h6>{art.mainStatKey ? `${Artifact.getStatName(art.mainStatKey).split(\"%\")[0]} ${Artifact.getMainStatValue(art)}${Artifact.getStatUnit(art.mainStatKey)}` : null}</h6>\r\n        </Card.Title>\r\n        <Card.Subtitle>\r\n          <div>{Artifact.getArtifactSetName(art)}</div>\r\n          <div>{\"🟊\".repeat(art.numStars ? art.numStars : 0)}</div>\r\n\r\n        </Card.Subtitle>\r\n        <ul className=\"mb-0\">\r\n          {art.substats ? art.substats.map((stat, i) =>\r\n            (stat && stat.value) ? (<li key={i}>{`${Artifact.getStatName(stat.key).split(\"%\")[0]}+${stat.value}${Artifact.getStatUnit(stat.key)}`}</li>) : null\r\n          ) : null}\r\n        </ul>\r\n        <div>\r\n          <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n          <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.currentEfficiency}>\r\n            {(artifactValidation.currentEfficiency ? artifactValidation.currentEfficiency : 0).toFixed(2) + \"%\"}\r\n          </PercentBadge>\r\n          <span>{\"<\"}</span>\r\n          <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.maximumEfficiency}>\r\n            {(artifactValidation.maximumEfficiency ? artifactValidation.maximumEfficiency : 0).toFixed(2) + \"%\"}\r\n          </PercentBadge>\r\n        </div>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        Location: Inventory\r\n          {/* <Button variant=\"primary\"\r\n            onClick={() => this.props.onEdit && this.props.onEdit()}\r\n          >Edit</Button>\r\n          <Button className=\"float-right\" variant=\"danger\"\r\n            onClick={() => this.props.onDelete && this.props.onDelete()}>Delete</Button> */}\r\n      </Card.Footer>\r\n    </Card>)\r\n  }\r\n}","const getRandomElementFromArray = (array) => array[Math.floor(Math.random()*array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage\r\n}","import { loadFromLocalStorage, saveToLocalStorage } from \"../Util\";\r\n\r\nvar artifactDatabase = {};\r\nvar artifactIdList = [];\r\nvar artIdIndex = 1;\r\n\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static getIdList = () => loadFromLocalStorage(\"artifact_id_list\"); \r\n  static saveIdList = () => saveToLocalStorage(\"artifact_id_list\", artifactIdList);\r\n  static getartifactIdList = () => artifactIdList;\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    artifactIdList = ArtifactDatabase.getIdList();\r\n    if (artifactIdList === null) artifactIdList = []\r\n    for (const id of artifactIdList)\r\n      artifactDatabase[id] = loadFromLocalStorage(id);\r\n    artIdIndex = parseInt(localStorage.getItem(\"artifact_highest_id\"));\r\n    if (isNaN(artIdIndex)) artIdIndex = 0;\r\n  }\r\n  static addArtifact = (art) => {\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    localStorage.setItem(\"artifact_highest_id\", artIdIndex)\r\n    art.id = id;\r\n    saveToLocalStorage(id, art);\r\n    artifactDatabase[id] = art;\r\n    artifactIdList.push(id)\r\n    ArtifactDatabase.saveIdList()\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    let id = art.id;\r\n    saveToLocalStorage(id, art);\r\n    artifactDatabase[id] = art;\r\n  }\r\n  static getArtifact = (id) => artifactDatabase[id]\r\n  static removeArtifact = (art) => {\r\n    ArtifactDatabase.removeArtifactById(art.id);\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n    let index = artifactIdList.indexOf(artId)\r\n    if (index !== -1) {\r\n      artifactIdList.splice(index, 1);\r\n      ArtifactDatabase.saveIdList();\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { FormControl } from 'react-bootstrap'\r\n\r\nclass FloatFormControl extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      periodEnd: false,\r\n    }\r\n  }\r\n  validateInput = (e) => {\r\n    let value = e.target.value;\r\n    let periodEnd = value[value.length - 1] === \".\";\r\n    value = parseFloat(value)\r\n    if (!isNaN(value)) this.setState({ periodEnd: periodEnd })\r\n    value = value ? value : 0\r\n    this.props.onValueChange && this.props.onValueChange(value);\r\n  }\r\n  render = () => {\r\n    let props = { ...this.props }\r\n    props.value = this.props.value ? (this.props.value + (this.state.periodEnd ? \".\" : \"\")) : \"\";\r\n    delete props.onValueChange\r\n    return <FormControl {...props}\r\n      onChange={(e) => this.validateInput(e)}\r\n    />\r\n  }\r\n}\r\nclass IntFormControl extends React.Component {\r\n  validateInput = (e) => {\r\n    let value = e.target.value;\r\n    value = parseInt(value)\r\n    value = value ? value : 0\r\n    this.props.onValueChange && this.props.onValueChange(value);\r\n  }\r\n  render = () => {\r\n    let props = { ...this.props }\r\n    delete props.onValueChange\r\n    return <FormControl {...props}\r\n      onChange={(e) => this.validateInput(e)}\r\n    />\r\n  }\r\n}\r\nexport {\r\n  FloatFormControl,\r\n  IntFormControl\r\n}","import React from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport { artifactStats, artifactSlots, star5ArtifactsSets, stars } from './ArtifactData'\r\nimport Artifact from './Artifact'\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport PercentBadge from './PercentBadge';\r\nimport { getRandomElementFromArray, getRandomIntInclusive, getRandomArbitrary } from '../Util';\r\nimport { FloatFormControl, IntFormControl } from '../Components/CustomFormControl';\r\n\r\nexport default class ArtifactEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ArtifactEditor.initialState\r\n  }\r\n  static initialState = {\r\n    selectedArtifactSetKey: \"\",\r\n    numStars: 0,\r\n    level: 0,\r\n    slotKey: \"\",//one of flower, plume, sands, globlet, circlet\r\n    mainStatKey: \"\",\r\n    substats: [{}, {}, {}, {}],//{key:\"\",value:_}\r\n  }\r\n  static getInitialState = () => JSON.parse(JSON.stringify(ArtifactEditor.initialState))\r\n  setLevel(newlevel) {\r\n    newlevel = parseInt(newlevel)\r\n    if (isNaN(newlevel)) newlevel = 0\r\n    if (newlevel < 0) newlevel = 0;\r\n    if (newlevel > this.state.numStars * 4) newlevel = this.state.numStars * 4;\r\n    this.setState({ level: newlevel })\r\n  }\r\n\r\n  ArtifactDropDown = () =>\r\n    <DropdownButton className=\"d-inline mr-3\" title={Artifact.getArtifactSetName(this.state)}>\r\n      <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊🟊</Dropdown.ItemText>\r\n      {Object.entries(star5ArtifactsSets).map(([key, setobj]) =>\r\n        <Dropdown.Item key={key}\r\n          onClick={() => this.setState({ selectedArtifactSetKey: key, numStars: setobj.rarity[setobj.rarity.length - 1] })}\r\n        >\r\n          {setobj.name}\r\n        </Dropdown.Item>\r\n      )}\r\n      <Dropdown.Divider />\r\n      <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊</Dropdown.ItemText>\r\n      <Dropdown.ItemText>Max Rarity 🟊🟊🟊</Dropdown.ItemText>\r\n    </DropdownButton>\r\n  StarDropdown = () =>\r\n    <DropdownButton className=\"d-inline mr-3\" title={this.state.numStars > 0 ? \"🟊\".repeat(this.state.numStars) : \"Rarity\"} disabled={!this.state.selectedArtifactSetKey}>\r\n      {Object.keys(stars).map((star, index) => {\r\n        star = parseInt(star);\r\n        return <Dropdown.Item key={index} disabled={!this.state.selectedArtifactSetKey || !star5ArtifactsSets[this.state.selectedArtifactSetKey].rarity.includes(star)} onClick={() => {\r\n          this.setState({ numStars: star, level: 0 });\r\n        }}>\r\n          {\"🟊\".repeat(star)}\r\n        </Dropdown.Item>\r\n      })}\r\n    </DropdownButton>\r\n  LevelSelection = (props) =>\r\n    <div className=\"d-inline\" {...props} >\r\n      <InputGroup>\r\n        <InputGroup.Prepend>\r\n          <InputGroup.Text>Level</InputGroup.Text>\r\n        </InputGroup.Prepend>\r\n        <FormControl\r\n          value={this.state.level}\r\n          disabled={!this.state.selectedArtifactSetKey}\r\n          placeholder={`0~${this.state.numStars * 4}`}\r\n          onChange={(e => this.setLevel(e.target.value))}\r\n        />\r\n        <InputGroup.Append>\r\n          <Button onClick={() => this.setLevel(0)} disabled={!this.state.selectedArtifactSetKey || this.state.level === 0}>0</Button>\r\n          <Button onClick={() => this.setLevel(this.state.level - 1)} disabled={!this.state.selectedArtifactSetKey || this.state.level === 0}>-</Button>\r\n          <Button onClick={() => this.setLevel(this.state.level + 1)} disabled={!this.state.selectedArtifactSetKey || this.state.level === (this.state.numStars * 4)}>+</Button>\r\n          <Button onClick={() => this.setLevel(this.state.numStars * 4)} disabled={!this.state.selectedArtifactSetKey || this.state.level === (this.state.numStars * 4)}>{this.state.numStars * 4}</Button>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n    </div>\r\n  MainStatInputRow = () =>\r\n    <InputGroup>\r\n      <DropdownButton\r\n        title={this.state.slotKey ? artifactSlots[this.state.slotKey].name : \"Slot\"}\r\n        disabled={!this.state.selectedArtifactSetKey}\r\n        as={InputGroup.Prepend}\r\n      >\r\n        {Object.entries(artifactSlots).map(([key, value]) =>\r\n          <Dropdown.Item key={key} onClick={() =>\r\n            this.setState({ slotKey: key, mainStatKey: value.stats[0], substats: ArtifactEditor.getInitialState().substats })\r\n          } >\r\n            {value.name}\r\n          </Dropdown.Item>)}\r\n      </DropdownButton>\r\n      <FormControl\r\n        value={Artifact.getArtifactPieceName(this.state)}\r\n        disabled\r\n        readOnly\r\n      />\r\n      <DropdownButton\r\n        title={this.state.mainStatKey ? artifactStats[this.state.mainStatKey].name : \"Main Stat\"}\r\n        disabled={!this.state.selectedArtifactSetKey || !this.state.slotKey}\r\n        as={InputGroup.Prepend}\r\n      >\r\n        <Dropdown.ItemText>Select a Main Artifact Stat </Dropdown.ItemText>\r\n        {this.state.slotKey ? artifactSlots[this.state.slotKey].stats.map((stat) =>\r\n          <Dropdown.Item key={stat} onClick={() => {\r\n            this.setState({ mainStatKey: stat, substats: ArtifactEditor.getInitialState().substats })\r\n          }} >\r\n            {Artifact.getStatName(stat)}\r\n          </Dropdown.Item>) : <Dropdown.Item />}\r\n      </DropdownButton>\r\n      <FormControl\r\n        value={this.state.mainStatKey ? `${Artifact.getMainStatValue(this.state)}${Artifact.getStatUnit(this.state.mainStatKey)}` : \"Main Stat\"}\r\n        disabled\r\n        readOnly\r\n      />\r\n    </InputGroup>\r\n  SubStatInput = (props) => {\r\n    let percentStat = props.subStatKey && Artifact.getStatUnit(props.subStatKey) === \"%\";\r\n    let substatprops = {\r\n      placeholder: \"Select a Substat.\",\r\n      value: props.substatevalue ? props.substatevalue : \"\",\r\n      onValueChange: (val) => props.onValueChange && props.onValueChange(val, props.index),\r\n      disabled: !props.subStatKey\r\n    }\r\n    let subStatFormControl = percentStat ?\r\n      <FloatFormControl {...substatprops} />\r\n      : <IntFormControl {...substatprops} />\r\n    return <InputGroup>\r\n      <DropdownButton\r\n        title={props.subStatKey ? artifactStats[props.subStatKey].name : `Substat ${props.index + 1}`}\r\n        disabled={!props.remainingSubstats || props.remainingSubstats.length === 0}\r\n        as={InputGroup.Prepend}\r\n      >\r\n        {props.remainingSubstats ? props.remainingSubstats.map((key) => {\r\n          return (<Dropdown.Item key={key} onClick={() => {\r\n            if (props.onSubStatSelected) props.onSubStatSelected(key, props.index);\r\n          }} >\r\n            {Artifact.getStatName(key)}\r\n          </Dropdown.Item>)\r\n        }) : <Dropdown.Item />}\r\n      </DropdownButton>\r\n      {subStatFormControl}\r\n      <InputGroup.Append>\r\n        {percentStat && <InputGroup.Text>%</InputGroup.Text>}\r\n        <InputGroup.Text>\r\n          <PercentBadge\r\n            tooltip={props.subStatValidation.msg}\r\n            valid={props.subStatValidation.valid || !props.subStatKey}\r\n            percent={props.subStatValidation.efficiency}>\r\n            {props.subStatKey ? (props.subStatValidation.valid ? `${(props.subStatValidation.efficiency ? props.subStatValidation.efficiency : 0).toFixed(2)}%` : \"ERR\") : \"No Stat\"}\r\n          </PercentBadge>\r\n        </InputGroup.Text>\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  }\r\n\r\n  onSubStatSelected = (key, index) => {\r\n    this.setState((state) => {\r\n      let substats = JSON.parse(JSON.stringify(state.substats));\r\n      substats[index] = { key: key, value: null }\r\n      return { substats }\r\n    });\r\n  }\r\n  onSubstatValueChange = (newStatValue, index) => {\r\n    this.setState((state) => {\r\n      let substats = JSON.parse(JSON.stringify(state.substats));\r\n      substats[index].value = newStatValue\r\n      return { substats }\r\n    });\r\n  }\r\n  randomizeArtifact = () => {\r\n    let state = ArtifactEditor.getInitialState();\r\n    //randomly choose artifact set\r\n    state.selectedArtifactSetKey = getRandomElementFromArray(Object.keys(star5ArtifactsSets));\r\n    //choose star\r\n    state.numStars = getRandomElementFromArray(star5ArtifactsSets[state.selectedArtifactSetKey].rarity);\r\n    //choose piece\r\n    state.slotKey = getRandomElementFromArray(Object.keys(artifactSlots));\r\n    //choose mainstat\r\n    state.mainStatKey = getRandomElementFromArray(artifactSlots[state.slotKey].stats);\r\n\r\n    //choose initial substats from star\r\n    let numOfInitialSubStats = getRandomIntInclusive(stars[state.numStars].subsBaselow, stars[state.numStars].subBaseHigh);\r\n\r\n    //choose level\r\n    state.level = getRandomIntInclusive(0, state.numStars * 4)\r\n    let numUpgradesOrUnlocks = Math.floor(state.level / 4);\r\n    let totRolls = numOfInitialSubStats + numUpgradesOrUnlocks\r\n    if (totRolls >= 4) {\r\n      numOfInitialSubStats = 4;\r\n      numUpgradesOrUnlocks = totRolls - 4;\r\n    } else {\r\n      numOfInitialSubStats = totRolls;\r\n      numUpgradesOrUnlocks = 0;\r\n    }\r\n    let RollStat = (subStatKey) => {\r\n      let lowRoll = Artifact.getStatLowRollVal(subStatKey, state.numStars);\r\n      let highRoll = Artifact.getStatHighRollVal(subStatKey, state.numStars);\r\n      let unit = Artifact.getStatUnit(subStatKey)\r\n\r\n      if (unit === \"%\")\r\n        return parseFloat(getRandomArbitrary(lowRoll, highRoll).toFixed(1));\r\n      else\r\n        return getRandomIntInclusive(lowRoll, highRoll);\r\n    }\r\n    //set initial substat & value\r\n    for (let i = 0; i < numOfInitialSubStats; i++) {\r\n      let substat = state.substats[i]\r\n      substat.key = getRandomElementFromArray(Artifact.getRemainingSubstats(state))\r\n      substat.value = RollStat(substat.key)\r\n    }\r\n\r\n    //numUpgradesOrUnlocks should only have upgrades right now. that means all 4 substats have value.\r\n    for (let i = 0; i < numUpgradesOrUnlocks; i++) {\r\n      let substat = getRandomElementFromArray(state.substats)\r\n      substat.value += RollStat(substat.key)\r\n    }\r\n    this.setState(state)\r\n  }\r\n  componentDidUpdate = () => {\r\n    if (this.props.artifactToEdit && this.state.id !== this.props.artifactToEdit.id)\r\n      this.setState(this.props.artifactToEdit)\r\n  }\r\n  render() {\r\n    let remainingSubstats = Artifact.getRemainingSubstats(this.state);\r\n    let substatValidations = this.state.substats.map(substat => Artifact.validateSubStat(this.state, substat));\r\n    let artifactValidation = Artifact.artifactValidation(this.state, substatValidations)\r\n    return (\r\n      <Card bg=\"darkcontent\" text=\"lightfont\">\r\n        <Card.Header>\r\n          Artifact Editor\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <this.ArtifactDropDown />\r\n          <this.StarDropdown />\r\n          <this.LevelSelection className=\"mt-2 mb-2\" />\r\n          <this.MainStatInputRow />\r\n          <Container className=\"mt-2\">\r\n            <Row>\r\n              <h5 className=\"mr-auto\">Substats</h5>\r\n              <span>\r\n                <span className=\"mr-3\">\r\n                  <span>Current Substat Efficiency </span>\r\n                  <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.currentEfficiency}>\r\n                    {(artifactValidation.currentEfficiency ? artifactValidation.currentEfficiency : 0).toFixed(2) + \"%\"}\r\n                  </PercentBadge>\r\n                </span>\r\n\r\n                <span >\r\n                  <span >Maximum Substat Efficiency </span>\r\n                  <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.maximumEfficiency}>\r\n                    {(artifactValidation.maximumEfficiency ? artifactValidation.maximumEfficiency : 0).toFixed(2) + \"%\"}\r\n                  </PercentBadge>\r\n                </span>\r\n              </span>\r\n            </Row>\r\n            <Row>\r\n              {this.state.substats.map((substat, index) =>\r\n                <Col key={\"substat\" + index} className=\"col-sm-6 mt-1 mb-1\">\r\n                  <this.SubStatInput\r\n                    numStars={this.state.numStars}\r\n                    remainingSubstats={remainingSubstats}\r\n                    subStatKey={substat ? substat.key : null}\r\n                    substatevalue={substat ? substat.value : null}\r\n                    index={index}\r\n                    onValueChange={this.onSubstatValueChange}\r\n                    onSubStatSelected={this.onSubStatSelected}\r\n                    subStatValidation={substatValidations[index]}\r\n                  />\r\n                </Col>\r\n              )}\r\n            </Row>\r\n          </Container>\r\n          {artifactValidation.msg ? <Alert variant=\"danger\">{artifactValidation.msg}</Alert> : null}\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Button className=\"mr-3\" onClick={() => {\r\n            let saveArtifact = { ...this.state }\r\n            if (saveArtifact.artifactToEdit)\r\n              delete saveArtifact.artifactToEdit;\r\n            this.props.addArtifact && this.props.addArtifact(saveArtifact)\r\n            this.setState(ArtifactEditor.getInitialState());\r\n          }}>\r\n            {this.props.artifactToEdit ? \"Save Artifact\" : \"Add Artifact\"}\r\n          </Button>\r\n          <Button className=\"mr-3\" variant=\"success\"\r\n            onClick={() => {\r\n              this.props.cancelEdit && this.props.cancelEdit();\r\n              this.setState(ArtifactEditor.getInitialState());\r\n            }}\r\n          >\r\n            Clear\r\n          </Button>\r\n          <Button variant=\"warning\"\r\n            onClick={this.randomizeArtifact}\r\n          >\r\n            Randomize\r\n          </Button>\r\n        </Card.Footer>\r\n      </Card>)\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ArtifactCard from './ArtifactCard';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport ArtifactEditor from './ArtifactEditor';\r\n\r\nexport default class ArtifactDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    ArtifactDatabase.populateDatebaseFromLocalStorage();\r\n    this.state = {\r\n      artIdList: [...ArtifactDatabase.getartifactIdList()],\r\n      artToEdit: null,\r\n    }\r\n  }\r\n  addArtifact = (art) => {\r\n    if (this.state.artToEdit && this.state.artToEdit.id === art.id) {\r\n      ArtifactDatabase.updateArtifact(art);\r\n      this.setState({ artToEdit: null }, this.forceUpdate)\r\n    } else {\r\n      let id = ArtifactDatabase.addArtifact(art)\r\n      //add the new artifact at the beginning\r\n      this.setState((state) => ({ artIdList: [...state.artIdList, id] }))\r\n    }\r\n  }\r\n\r\n  deleteArtifact = (index) => {\r\n    ArtifactDatabase.removeArtifactById(this.state.artIdList[index])\r\n    this.setState((state) => {\r\n      let artIdList = [...state.artIdList]\r\n      artIdList.splice(index, 1)\r\n      return { artIdList }\r\n    });\r\n  }\r\n  editArtifact = (index) =>\r\n    this.setState({ artToEdit: ArtifactDatabase.getArtifact(this.state.artIdList[index]) })\r\n\r\n  cancelEditArtifact = () =>\r\n    this.setState({ artToEdit: null })\r\n\r\n  render() {\r\n    return (<Container className=\"mt-3\">\r\n      <Row className=\"mb-2 no-gutters\"><Col>\r\n        <ArtifactEditor\r\n          artifactToEdit={this.state.artToEdit}\r\n          addArtifact={this.addArtifact}\r\n          cancelEdit={this.cancelEditArtifact}\r\n        />\r\n      </Col></Row>\r\n      {/* <Row className=\"mb-2\"><Col>\r\n        <Card bg=\"darkcontent\" text=\"lightfont\">\r\n          <Card.Header>Artifact Filter</Card.Header>\r\n          <Card.Body>default filtering</Card.Body>\r\n        </Card>\r\n      </Col></Row> */}\r\n      <Row className=\"mb-2\">\r\n        {this.state.artIdList.map((artid, index) =>\r\n          <Col key={artid} lg={4} md={6} className=\"mb-2\">\r\n            <ArtifactCard\r\n              artifactData={ArtifactDatabase.getArtifact(artid)}\r\n              onDelete={() => this.deleteArtifact(index)}\r\n              onEdit={() => this.editArtifact(index)}\r\n            />\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Container>)\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nimport Artifact from '../Artifact/Artifact';\r\nexport default class CharacterCard extends React.Component {\r\n  render() {\r\n    if (!this.props.characterData) return null;\r\n    let char = this.props.characterData;\r\n\r\n    const liElement = (key) =>\r\n      (<li key={key}>\r\n        <span>{Artifact.getStatName(key).split(\"%\")[0]}</span>\r\n        <span className=\"float-right\">{char[key] + Artifact.getStatUnit(key)}</span>\r\n      </li>)\r\n    let mainArr = [\"hp\", \"atk\", \"def\", \"ele_mas\"]\r\n    let mainEles = mainArr.map(liElement);\r\n    let advArr = [\"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\"]\r\n    let advEles = advArr.map(liElement);\r\n    let weaponAtk = (<li>\r\n      <span>Weapon ATK</span>\r\n      <span className=\"float-right\">{char.weapon_atk}</span>\r\n    </li>)\r\n    let weaponSub = (<li>\r\n      <span>{char.weaponStatKey ? (Artifact.getStatName(char.weaponStatKey).split(\"%\")[0]):\"\"}</span>\r\n      <span className=\"float-right\">{char.weaponStatVal + Artifact.getStatUnit(char.weaponStatKey)}</span>\r\n    </li>)\r\n    return (<Card className=\"h-100\" border={`${char.numStars}star`} bg=\"darkcontent\" text=\"lightfont\">\r\n      <Card.Header className=\"pr-2\">\r\n        <Row className=\"no-gutters\">\r\n          <Col >\r\n            <h6><b>{`${char.name}`}</b></h6>\r\n          </Col>\r\n          <Col xs={\"auto\"}>\r\n            <span className=\"float-right align-top ml-1\">\r\n              <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n                onClick={() => this.props.onEdit && this.props.onEdit()}>\r\n                <FontAwesomeIcon icon={faEdit} />\r\n              </Button>\r\n              <Button variant=\"danger\" size=\"sm\"\r\n                onClick={() => this.props.onDelete && this.props.onDelete()}>\r\n                <FontAwesomeIcon icon={faTrashAlt} />\r\n              </Button>\r\n            </span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <h5>Weapon</h5>\r\n        <ul>{weaponAtk}{weaponSub}</ul>\r\n        <h5>Main Stats</h5>\r\n        <ul>{mainEles} </ul>\r\n        <h5>Advanced Stats</h5>\r\n        <ul>{advEles}</ul>\r\n\r\n        {/* <ul className=\"mb-0\">\r\n          {char.substats ? char.substats.map((stat, i) =>\r\n            (stat && stat.value) ? (<li key={i}>{`${Artifact.getStatName(stat.key).split(\"%\")[0]}+${stat.value}${Artifact.getStatUnit(stat.key)}`}</li>) : null\r\n          ) : null}\r\n        </ul>\r\n        <div>\r\n          <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n          <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.currentEfficiency}>\r\n            {(artifactValidation.currentEfficiency ? artifactValidation.currentEfficiency : 0).toFixed(2) + \"%\"}\r\n          </PercentBadge>\r\n          <span>{\"<\"}</span>\r\n          <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.maximumEfficiency}>\r\n            {(artifactValidation.maximumEfficiency ? artifactValidation.maximumEfficiency : 0).toFixed(2) + \"%\"}\r\n          </PercentBadge>\r\n        </div> */}\r\n      </Card.Body>\r\n      {/* <Card.Footer>\r\n        Location: Inventory\r\n      </Card.Footer> */}\r\n    </Card>)\r\n  }\r\n}","import { loadFromLocalStorage, saveToLocalStorage } from \"../Util\";\r\n\r\nvar characterDatabase = {};\r\nvar characterIdList = [];\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static getIdList = () => loadFromLocalStorage(\"character_id_list\"); \r\n  static saveIdList = () => saveToLocalStorage(\"character_id_list\", characterIdList);\r\n  static getCharacterIdList = () => characterIdList;\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    characterIdList = CharacterDatabase.getIdList();\r\n    if (characterIdList === null) characterIdList = []\r\n    for (const id of characterIdList)\r\n      characterDatabase[id] = loadFromLocalStorage(id);\r\n    charIdIndex = parseInt(localStorage.getItem(\"character_highest_id\"));\r\n    if (isNaN(charIdIndex)) charIdIndex = 0;\r\n  }\r\n  static addCharacter = (char) => {\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    localStorage.setItem(\"character_highest_id\", charIdIndex)\r\n    char.id = id;\r\n    saveToLocalStorage(id, char);\r\n    characterDatabase[id] = char;\r\n    characterIdList.push(id)\r\n    CharacterDatabase.saveIdList()\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    let id = char.id;\r\n    saveToLocalStorage(id, char);\r\n    characterDatabase[id] = char;\r\n  }\r\n  static getCharacter = (id) => characterDatabase[id]\r\n  static removeCharacter = (char) => {\r\n    CharacterDatabase.removeCharacterById(char.id);\r\n  }\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n    let index = characterIdList.indexOf(id)\r\n    if (index !== -1) {\r\n      characterIdList.splice(index, 1);\r\n      CharacterDatabase.saveIdList();\r\n    }\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\nimport { Button, Card, Dropdown, DropdownButton, FormControl, InputGroup } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSignature, faTint, faFistRaised, faShieldAlt, faMagic, faDice, faDiceD20, faFirstAid, faSync, faGavel } from '@fortawesome/free-solid-svg-icons'\r\nimport { artifactStats } from '../Artifact/ArtifactData';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { FloatFormControl, IntFormControl } from '../Components/CustomFormControl';\r\nexport default class CharacterEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = CharacterEditor.getInitialState();\r\n  }\r\n  static initialState = {\r\n    name: \"\",\r\n    hp: 0,\r\n    atk: 0,\r\n    def: 0,\r\n    ele_mas: 0,\r\n    crit_rate: 0,\r\n    crit_dmg: 0,\r\n    heal_bonu: 0,\r\n    ener_rech: 0,\r\n    weapon_atk: 0,\r\n    weaponStatKey: \"\",\r\n    weaponStatVal: 0\r\n  }\r\n  static getInitialState = () => JSON.parse(JSON.stringify(CharacterEditor.initialState))\r\n  \r\n  StatInput = (props) => {\r\n    const onValueChange = (v) =>\r\n      props.onValueChange && props.onValueChange(v)\r\n    return (<InputGroup className=\"mb-3\">\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text>{props.name}</InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n      {props.percent ? (\r\n        <FloatFormControl\r\n          placeholder={props.placeholder}\r\n          value={props.value ? props.value : \"\"}\r\n          onValueChange={onValueChange}\r\n        />\r\n      ) : (\r\n          <IntFormControl\r\n            placeholder={props.placeholder}\r\n            value={props.value ? props.value : \"\"}\r\n            onValueChange={onValueChange}\r\n          />\r\n        )}\r\n      {props.percent && (<InputGroup.Append>\r\n        <InputGroup.Text>%</InputGroup.Text>\r\n      </InputGroup.Append>)}\r\n    </InputGroup>)\r\n\r\n  }\r\n  componentDidUpdate = () => {\r\n    if (this.props.characterToEdit && this.state.id !== this.props.characterToEdit.id)\r\n      this.setState(this.props.characterToEdit)\r\n  }\r\n  render() {\r\n    let percentWeaponStatSelect =\r\n      this.state.weaponStatKey ? Artifact.getStatUnit(this.state.weaponStatKey) === \"%\" : false;\r\n    let weaponprops = {\r\n      placeholder: \"Weapon 2nd Stat\",\r\n      value: this.state.weaponStatVal ? this.state.weaponStatVal : \"\",\r\n      onValueChange: (val) => this.setState({ weaponStatVal: val }),\r\n      disabled: !this.state.weaponStatKey\r\n    }\r\n    let weaponSubStatInput = percentWeaponStatSelect ?\r\n      <FloatFormControl {...weaponprops} />\r\n      : <IntFormControl {...weaponprops} />\r\n\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\">\r\n      <Card.Header>Character Editor</Card.Header>\r\n      <Card.Body>\r\n        <InputGroup className=\"mb-3\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text><FontAwesomeIcon icon={faSignature} className=\"mr-2\" /> Character Name</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl placeholder=\"A name to remember your character by.\"\r\n            value={this.state.name}\r\n            onChange={(e) => this.setState({ name: e.target.value })}\r\n          />\r\n        </InputGroup>\r\n        <h5>Base Stats</h5>\r\n        <this.StatInput\r\n          name={<span><FontAwesomeIcon icon={faTint} className=\"mr-2\" /> Base HP</span>}\r\n          placeholder=\"Character Base Health, without stats or gear.\"\r\n          value={this.state.hp}\r\n          percent={false}\r\n          onValueChange={(value) => this.setState({ hp: value })}\r\n        />\r\n        <this.StatInput\r\n          name={<span><FontAwesomeIcon icon={faFistRaised} className=\"mr-2\" /> Base ATK</span>}\r\n          placeholder=\"Character Base Attack, without stats or gear.\"\r\n          value={this.state.atk}\r\n          percent={false}\r\n          onValueChange={(value) => this.setState({ atk: value })}\r\n        />\r\n        <this.StatInput\r\n          name={<span><FontAwesomeIcon icon={faShieldAlt} className=\"mr-2\" /> Base DEF</span>}\r\n          placeholder=\"Character Base Defence, without stats or gear.\"\r\n          value={this.state.def}\r\n          percent={false}\r\n          onValueChange={(value) => this.setState({ def: value })}\r\n        />\r\n        <this.StatInput\r\n          name={<span><FontAwesomeIcon icon={faMagic} className=\"mr-2\" /> Base Elemental Mastery</span>}\r\n          placeholder=\"Character Base Elemental Mastery, without stats or gear.\"\r\n          value={this.state.ele_mas}\r\n          percent={false}\r\n          onValueChange={(value) => this.setState({ ele_mas: value })}\r\n        />\r\n\r\n        <h5>Advanced Stats</h5>\r\n        <this.StatInput\r\n          name={<span><FontAwesomeIcon icon={faDice} className=\"mr-2\" /> Base Crit Rate</span>}\r\n          placeholder=\"Character Base Crit Rate, without stats or gear.\"\r\n          value={this.state.crit_rate}\r\n          percent={true}\r\n          onValueChange={(value) => this.setState({ crit_rate: value })}\r\n        />\r\n        <this.StatInput\r\n          name={<span><FontAwesomeIcon icon={faDiceD20} className=\"mr-2\" /> Base Crit Damage</span>}\r\n          placeholder=\"Character Base Crit Damage, without stats or gear.\"\r\n          value={this.state.crit_dmg}\r\n          percent={true}\r\n          onValueChange={(value) => this.setState({ crit_dmg: value })}\r\n        />\r\n        <this.StatInput\r\n          name={<span><FontAwesomeIcon icon={faFirstAid} className=\"mr-2\" /> Base Healing Bonus</span>}\r\n          placeholder=\"Character Base Healing Bonus, without stats or gear.\"\r\n          value={this.state.heal_bonu}\r\n          percent={true}\r\n          onValueChange={(value) => this.setState({ heal_bonu: value })}\r\n        />\r\n        <this.StatInput\r\n          name={<span><FontAwesomeIcon icon={faSync} className=\"mr-2\" /> Base Energy Recharge</span>}\r\n          placeholder=\"Character Base Energy Recharge, without stats or gear.\"\r\n          value={this.state.ener_rech}\r\n          percent={true}\r\n          onValueChange={(value) => this.setState({ ener_rech: value })}\r\n        />\r\n        <h5>Weapon Stats</h5>\r\n\r\n        <this.StatInput\r\n          name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" /> Weapon ATK</span>}\r\n          placeholder=\"Weapon Attack\"\r\n          value={this.state.weapon_atk}\r\n          percent={false}\r\n          onValueChange={(value) => this.setState({ weapon_atk: value })}\r\n        />\r\n\r\n        <InputGroup>\r\n          <DropdownButton\r\n            title={this.state.weaponStatKey ? artifactStats[this.state.weaponStatKey].name : \"Weapon Stat\"}\r\n            as={InputGroup.Prepend}\r\n          >\r\n            <Dropdown.ItemText>Select a weapon secondary stat </Dropdown.ItemText>\r\n            {Object.entries(artifactStats).map(([key, value]) =>\r\n              <Dropdown.Item key={key} onClick={() => {\r\n                this.setState({ weaponStatKey: key, weaponStatVal: null })\r\n              }} >\r\n                {value.name}\r\n              </Dropdown.Item>)}\r\n          </DropdownButton>\r\n          {weaponSubStatInput}\r\n          {percentWeaponStatSelect && (<InputGroup.Append>\r\n            <InputGroup.Text>%</InputGroup.Text>\r\n          </InputGroup.Append>)}\r\n        </InputGroup>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Button className=\"mr-3\" onClick={() => {\r\n          this.props.addCharacter && this.props.addCharacter(this.state)\r\n          this.setState(CharacterEditor.getInitialState());\r\n        }}>\r\n          {this.props.characterToEdit ? \"Save Character\" : \"Add Character\"}\r\n        </Button>\r\n        <Button className=\"mr-3\" variant=\"success\"\r\n          onClick={() => {\r\n            this.props.cancelEdit && this.props.cancelEdit();\r\n            this.setState(CharacterEditor.getInitialState());\r\n          }}\r\n        >\r\n          Clear\r\n          </Button>\r\n      </Card.Footer>\r\n    </Card>)\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport CharacterCard from './CharacterCard';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterEditor from './CharacterEditor';\r\nexport default class CharacterDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    CharacterDatabase.populateDatebaseFromLocalStorage();\r\n    this.state = {\r\n      charIdList: [...CharacterDatabase.getCharacterIdList()],\r\n      charToEdit: null\r\n    }\r\n  }\r\n  addCharacter = (art) => {\r\n    if (this.state.charToEdit && this.state.charToEdit.id === art.id) {\r\n      CharacterDatabase.updateCharacter(art);\r\n      this.setState({ charToEdit: null }, this.forceUpdate)\r\n    } else {\r\n      let id = CharacterDatabase.addCharacter(art)\r\n      //add the new Character at the beginning\r\n      this.setState((state) => ({ charIdList: [...state.charIdList, id] }))\r\n    }\r\n  }\r\n\r\n  deleteCharacter = (index) => {\r\n    CharacterDatabase.removeCharacterById(this.state.charIdList[index])\r\n    this.setState((state) => {\r\n      let charIdList = [...state.charIdList]\r\n      charIdList.splice(index, 1)\r\n      return { charIdList }\r\n    });\r\n  }\r\n  editCharacter = (index) =>\r\n    this.setState({ charToEdit: CharacterDatabase.getCharacter(this.state.charIdList[index]) })\r\n\r\n  cancelEditCharacter = () =>\r\n    this.setState({ charToEdit: null })\r\n\r\n  render() {\r\n    return (<Container>\r\n      <Row className=\"mb-2 no-gutters\"><Col>\r\n        <CharacterEditor\r\n          characterToEdit={this.state.charToEdit}\r\n          addCharacter={this.addCharacter}\r\n          cancelEdit={this.cancelEditCharacter}\r\n        />\r\n      </Col></Row>\r\n\r\n      <Row className=\"mb-2\">\r\n        {this.state.charIdList.map((id, index) =>\r\n          <Col key={id} lg={4} md={6} className=\"mb-2\">\r\n            <CharacterCard\r\n              characterData={CharacterDatabase.getCharacter(id)}\r\n              onDelete={() => this.deleteCharacter(index)}\r\n              onEdit={() => this.editCharacter(index)}\r\n            />\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Container>)\r\n\r\n  }\r\n}","import React from 'react';\r\nexport default class BuildDisplay extends React.Component{\r\n    render(){\r\n        return <h1 className=\"text-white\">BUILDS PAGE IN CONSTRUCTION</h1>\r\n    }\r\n}","import React from 'react';\nimport './App.scss';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport ArtifactDisplay from './Artifact/ArtifactDisplay';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDiscord } from '@fortawesome/free-brands-svg-icons'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport CharacterDisplay from './Character/CharacterDisplay';\nimport BuildDisplay from './Build/BuildDisplay';\n\nfunction App() {\n  return (\n    <div id=\"root\">\n      <Router basename=\"/genshin-optimizer\">\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\n          <Navbar.Brand as={Link} to=\"/\">Genshin Optimizer</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to=\"/artifact\">\n              Artifacts</Nav.Link>\n            <Nav.Link as={Link} to=\"/character\">Characters</Nav.Link>\n            {process.env.NODE_ENV === \"development\" && <Nav.Link as={Link} to=\"/build\">Builds</Nav.Link>}\n          </Nav>\n          <Nav><Nav.Link href={process.env.REACT_APP_DISCORD_LINK} target=\"_blank\" ><FontAwesomeIcon icon={faDiscord} />Discord</Nav.Link></Nav>\n        </Navbar>\n\n        <Switch>\n          <Route path=\"/artifact\">\n            <ArtifactDisplay />\n          </Route>\n          <Route path=\"/character\">\n            <CharacterDisplay />\n          </Route>\n          {process.env.NODE_ENV === \"development\" && (<Route path=\"/build\">\n            <BuildDisplay />\n          </Route>)}\n          <Route path=\"/\">\n            <ArtifactDisplay />\n          </Route>\n        </Switch>\n\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}