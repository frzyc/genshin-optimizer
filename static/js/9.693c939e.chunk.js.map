{"version":3,"sources":["StatData.js","Weapon/Weapon.js","Components/StarDisplay.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/CustomFormControl.js","Data/WeaponData.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/ConditionalSelector.js","../node_modules/react-bootstrap/esm/Badge.js","StatConstants.js","StatDependency.js","Data/CharacterData.js","Components/StatIcon.js","dbV2KeyMap.js","DatabaseUtil.js","Components/CharacterSelection.js","../node_modules/react-bootstrap/esm/ElementChildren.js","Character/CharacterDisplay/DamageOptionsAndCalculation.js","Artifact/ArtifactCard.js","Artifact/PercentBadge.js","Character/StatInput.js","Components/StatDisplay.js","Components/WIPComponent.js","../node_modules/react-bootstrap/esm/ToggleButton.js","Character/CharacterDisplay/StatDisplayComponent.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ToggleButtonGroup.js","TestPage/TestDisplay.js","Util/Util.js","Stat.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Character/Character.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Util/ConditionalsUtil.js","Artifact/ArtifactDatabase.js","Data/ElementalData.js"],"names":["StatData","flat","name","default","characterHP","pretty","const","characterDEF","characterATK","characterEle","characterLevel","weaponATK","baseATK","hp","hp_","unit","atk","atk_","def","def_","dmg_","finalHP","finalATK","finalDEF","critHit_base_multi","eleMas","enerRech_","critRate_","critDMG_","weakspotDMG_","heal_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","stamina","staminaDec_","staminaGlidingDec_","staminaChargedDec_","heal_multi","transformative_level_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","variant","crystalize_multi","crystalize_dmg_","crystalize_hit","burning_dmg_","enemyLevel","enemyLevel_multi","enemyDEFRed_","Formulas","s","c","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","ElementToReactionKeys","physical","anemo","geo","electro","hydro","pyro","cryo","dendro","PreprocessFormulas","dependencyKeys","stats","debug","modifiers","initialStats","constData","formulaList","map","key","tmp","modifier","constModifier","Object","entries","filter","k","dynamicModifier","constFunc","reduce","accu","m","dynamicFunc","funcIndicator","length","func","console","log","error","formula","forEach","assign","hitMoves","move","moveName","clamp","hitElements","ele","eleName","opt","res","hitTypes","type","typeName","transformativeReactions","reaction","multi","variants","amplifyingReactions","baseMulti","Weapon","this","Error","getWeaponDataImport","WeaponDataImport","getLevelName","levelKey","defVal","LevelNameData","getLevelIndex","WeaponLevelKeys","indexOf","getWeaponName","weaponKey","WeaponData","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","refineIndex","charFinalStats","character","passiveDescription","getWeaponDescription","description","getWeaponConditional","conditional","getWeaponImg","img","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","getWeaponSubStatKey","subStatKey","getWeaponBonusStat","getWeaponsOfType","weaponType","fromEntries","getWeaponTypeName","WeaponTypeData","getWeaponTypeKeys","keys","getWeaponMainStatValWithOverride","weaponObj","overrideMainVal","getWeaponSubStatValWithOverride","overrideSubVal","getWeaponConditionalStat","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","objMultiplication","StarIcon","icon","faStar","Stars","stars","colored","className","Array","_","i","Assets","elements","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","CustomFormControl","float","placeholder","value","onValueChange","disabled","allowEmpty","useState","focus","setFocus","props","toString","onChange","e","target","parseFloat","parseInt","onFocus","onBlur","aria-label","then","imp","_objectWithoutProperties","source","excluded","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","ConditionalSelector","setConditional","defEle","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","Badge","React","forwardRef","_ref","ref","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","hit","avgHit","critHit","normal","charged","plunging","elemental","skill","burst","ElementalData","overloaded","shattered","electrocharged","superconduct","swirl","vaporize","melt","GetFormulaDependency","dependency","Set","Proxy","get","prop","receiver","add","formulaKeyDependency","freeze","GetDependencies","dependencies","InsertDependencies","has","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","CharacterSpecializedStatKey","StatIcon","faTint","faFistRaised","faShieldAlt","faMagic","faDice","faDiceD20","faSync","faFirstAid","StatIconEle","statKey","changes","char_ele_key","char_level","hp_base","hp_final","atk_character_base","atk_base","atk_final","atk_weapon","def_base","def_final","phy_dmg_bonus","phy_res","anemo_ele_dmg_bonus","geo_ele_dmg_bonus","electro_ele_dmg_bonus","hydro_ele_dmg_bonus","pyro_ele_dmg_bonus","cryo_ele_dmg_bonus","anemo_ele_res","geo_ele_res","electro_ele_res","hydro_ele_res","pyro_ele_res","cryo_ele_res","ener_rech","crit_rate","crit_dmg","stam","heal_bonu","inc_heal","pow_shield","red_cd","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","norm_atk_dmg","char_atk_dmg","plunge_dmg","norm_atk_crit_dmg","char_atk_crit_dmg","plunge_crit_dmg","norm_atk_avg_dmg","char_atk_avg_dmg","plunge_avg_dmg","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","skill_dmg_bonus","burst_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_crit_rate","burst_crit_rate","anemo_skill_dmg","anemo_burst_dmg","anemo_skill_crit_dmg","anemo_burst_crit_dmg","anemo_skill_avg_dmg","anemo_burst_avg_dmg","geo_skill_dmg","geo_burst_dmg","geo_skill_crit_dmg","geo_burst_crit_dmg","geo_skill_avg_dmg","geo_burst_avg_dmg","electro_skill_dmg","electro_burst_dmg","electro_skill_crit_dmg","electro_burst_crit_dmg","electro_skill_avg_dmg","electro_burst_avg_dmg","hydro_skill_dmg","hydro_burst_dmg","hydro_skill_crit_dmg","hydro_burst_crit_dmg","hydro_skill_avg_dmg","hydro_burst_avg_dmg","pyro_skill_dmg","pyro_burst_dmg","pyro_skill_crit_dmg","pyro_burst_crit_dmg","pyro_skill_avg_dmg","pyro_burst_avg_dmg","cryo_skill_dmg","cryo_burst_dmg","cryo_skill_crit_dmg","cryo_burst_crit_dmg","cryo_skill_avg_dmg","cryo_burst_avg_dmg","phy_dmg","phy_crit_dmg","phy_avg_dmg","anemo_ele_dmg","anemo_ele_crit_dmg","anemo_ele_avg_dmg","geo_ele_dmg","geo_ele_crit_dmg","geo_ele_avg_dmg","electro_ele_dmg","electro_ele_crit_dmg","electro_ele_avg_dmg","hydro_ele_dmg","hydro_ele_crit_dmg","hydro_ele_avg_dmg","pyro_ele_dmg","pyro_ele_crit_dmg","pyro_ele_avg_dmg","cryo_ele_dmg","cryo_ele_crit_dmg","cryo_ele_avg_dmg","overload_dmg","overload_dmg_bonus","overload_multi","electrocharged_dmg","electrocharged_dmg_bonus","electrocharged_multi","superconduct_dmg","superconduct_dmg_bonus","superconduct_multi","burning_dmg","burning_dmg_bonus","swirl_dmg","swirl_dmg_bonus","swirl_multi","shatter_dmg","shatter_dmg_bonus","shatter_multi","crystalize_dmg","crystalize_dmg_bonus","melt_dmg_bonus","vaporize_dmg_bonus","pyro_vaporize_normal_dmg","pyro_vaporize_normal_crit_dmg","pyro_vaporize_normal_avg_dmg","pyro_vaporize_chraged_dmg","pyro_vaporize_chraged_crit_dmg","pyro_vaporize_chraged_avg_dmg","pyro_vaporize_plunge_dmg","pyro_vaporize_plunge_crit_dmg","pyro_vaporize_plunge_avg_dmg","pyro_vaporize_skill_dmg","pyro_vaporize_skill_crit_dmg","pyro_vaporize_skill_avg_dmg","pyro_vaporize_burst_dmg","pyro_vaporize_burst_crit_dmg","pyro_vaporize_burst_avg_dmg","pyro_vaporize_ele_dmg","pyro_vaporize_ele_crit_dmg","pyro_vaporize_ele_avg_dmg","hydro_vaporize_normal_dmg","hydro_vaporize_normal_crit_dmg","hydro_vaporize_normal_avg_dmg","hydro_vaporize_chraged_dmg","hydro_vaporize_chraged_crit_dmg","hydro_vaporize_chraged_avg_dmg","hydro_vaporize_plunge_dmg","hydro_vaporize_plunge_crit_dmg","hydro_vaporize_plunge_avg_dmg","hydro_vaporize_skill_dmg","hydro_vaporize_skill_crit_dmg","hydro_vaporize_skill_avg_dmg","hydro_vaporize_burst_dmg","hydro_vaporize_burst_crit_dmg","hydro_vaporize_burst_avg_dmg","hydro_vaporize_ele_dmg","hydro_vaporize_ele_crit_dmg","hydro_vaporize_ele_avg_dmg","pyro_melt_normal_dmg","pyro_melt_normal_crit_dmg","pyro_melt_normal_avg_dmg","pyro_melt_chraged_dmg","pyro_melt_chraged_crit_dmg","pyro_melt_chraged_avg_dmg","pyro_melt_plunge_dmg","pyro_melt_plunge_crit_dmg","pyro_melt_plunge_avg_dmg","pyro_melt_skill_dmg","pyro_melt_skill_crit_dmg","pyro_melt_skill_avg_dmg","pyro_melt_burst_dmg","pyro_melt_burst_crit_dmg","pyro_melt_burst_avg_dmg","pyro_melt_ele_dmg","pyro_melt_ele_crit_dmg","pyro_melt_ele_avg_dmg","cryo_melt_normal_dmg","cryo_melt_normal_crit_dmg","cryo_melt_normal_avg_dmg","cryo_melt_chraged_dmg","cryo_melt_chraged_crit_dmg","cryo_melt_chraged_avg_dmg","cryo_melt_plunge_dmg","cryo_melt_plunge_crit_dmg","cryo_melt_plunge_avg_dmg","cryo_melt_skill_dmg","cryo_melt_skill_crit_dmg","cryo_melt_skill_avg_dmg","cryo_melt_burst_dmg","cryo_melt_burst_crit_dmg","cryo_melt_burst_avg_dmg","cryo_melt_ele_dmg","cryo_melt_ele_crit_dmg","cryo_melt_ele_avg_dmg","enemy_phy_res","enemy_phy_res_multi","enemy_phy_immunity","anemo_enemy_ele_res","anemo_enemy_ele_res_multi","anemo_enemy_ele_immunity","geo_enemy_ele_res","geo_enemy_ele_res_multi","geo_enemy_ele_immunity","electro_enemy_ele_res","electro_enemy_ele_res_multi","electro_enemy_ele_immunity","hydro_enemy_ele_res","hydro_enemy_ele_res_multi","hydro_enemy_ele_immunity","pyro_enemy_ele_res","pyro_enemy_ele_res_multi","pyro_enemy_ele_immunity","cryo_enemy_ele_res","cryo_enemy_ele_res_multi","cryo_enemy_ele_immunity","ele_mas","amp_reaction_base_multi","enemy_level_multi","enemy_level","dmgModeToHitMode","avg_dmg","dmg","DatabaseInitAndVerify","dbVersion","getDatabaseVersion","localStorage","startsWith","loadFromLocalStorage","characterKey","equippedArtifacts","dbKey","getItem","id","dmgMode","rest","buildSetting","mainStat","stat","v2change","statFilters","hitMode","saveToLocalStorage","values","artid","art","location","removeItem","ArtifactDisplayState","filterMainStatKey","filterSubstats","charDBJustPopualted","CharacterDatabase","populateDatebaseFromLocalStorage","artDBJustPopualted","ArtifactDatabase","getArtifactDatabase","valid","artInSlotId","getArtifactIDFromSlot","slotKey","equipArtifact","Artifact","substatsValidation","numStars","keyMapping","setKey","mainStatKey","endsWith","replace","substats","obj","updateArtifact","chars","getCharacterDatabase","equippedArt","moveToNewLocation","artifactConditionals","cond","srcKey","srcKey2","updateCharacter","setDatabaseVersion","version","CharacterSelectionDropdownList","onSelect","getCharacterKeyList","sort","a","b","Character","getName","children","index","Children","child","isValidElement","ReactionToggle","reactionMode","setReactionMode","charEleKey","getElementalKey","includes","defaultValue","val","src","HitModeToggle","setHitMode","CalculationDisplay","build","getDisplayStatKeys","talentKey","fields","header","getTalentName","bg","Header","Body","field","fieldIndex","subFormulaKeys","Stat","getPrintableFormulaStatKeyList","finalStats","reverse","Boolean","Card","eventKey","printStat","Collapse","subKey","printFormula","talentField","getTalentField","sectionIndex","fieldText","getTalentFieldValue","fieldVariant","fieldFormulaText","fieldFormula","fieldFormulaDependency","fieldValue","toFixed","ContextAwareToggle","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","DamageOptionsAndCalculation","setState","setOverride","newBuild","equippedBuild","xs","r","Button","href","rel","xl","getStatValueWithOverride","getStatNameRaw","getBaseStatValue","getElementalKeys","eleKey","immunityStatKey","elementImmunity","prependEle","ArtifactCard","artifactId","artifactObj","forceUpdate","onEdit","onDelete","assumeFull","lock","currentEfficiency","maximumEfficiency","mainStatLevel","assFullColor","mainStatVal","getMainStatValue","getStatUnit","artifactValid","every","sstat","rolls","equipOnChar","charKey","equipArtifactOnChar","border","md","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Title","getSetName","getStatName","numRolls","efficiency","effOpacity","statName","style","opacity","percent","Footer","Divider","ckey","placement","overlay","pointerEvents","faLock","faLockOpen","faEdit","faTrashAlt","PercentBadge","badgeColor","isNaN","Math","floor","StatInput","restProps","Prepend","Text","Append","undefined","faUndo","DisplayStatDiff","label","oldVal","fixed","diff","oldText","diffText","StatDisplay","editable","invalid","fixedUnit","labelVariant","hasOverride","WIPComponent","noop","ToggleButton","checked","inputRef","_useState","focused","setFocused","handleFocus","useCallback","tagName","handleBlur","active","autoComplete","StatDisplayComponent","statsDisplayKeys","cardbg","JSON","stringify","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","TabContext","Provider","SelectableContext","TabContent","decoratedBsPrefix","TabPane","_useTabContext","context","shouldTransition","makeEventKey","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","Tab","_React$Component","apply","arguments","_inheritsLoose","render","Container","Content","Pane","CharacterArtifactPane","artifactsAssumeFull","statKeys","hasTalentPage","Row","Col","equipArtifacts","artifactIds","Alert","sm","lg","getSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","getConditionalNum","getConditionalStats","conditionalElement","cnum","state","setStateArtifactConditional","getSetEffectText","getSlotKeys","CharacterOverviewPane","constellation","setConstellation","editLevel","setEditLevel","elementKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","Image","getStar","InputGroup","getLevel","OverlayTrigger","Tooltip","faSave","getConstellationName","getConstellationImg","roundedCircle","WeaponStatsEditorCard","MainStatsCards","StatItem","getStatVariant","WeaponStatsCard","title","mkey","multiplier","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","conditionalStats","conditionalEle","faQuoteLeft","DropdownButton","star","arr","Dropdown","ItemText","faGavel","editingOther","SetEditingOther","editingMisc","SetEditingMisc","additionalKeys","displayStatKeys","push","editStatKeys","otherStatKeys","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","isPercentSpecialStatSelect","displayNewBuildProps","getStatNamePretty","getStatNameWithPercent","CharacterTalentPane","ascension","getAscension","skillDisplayProps","ReactionDisplay","tKey","tText","SkillDisplayCard","subtitle","getTalent","asc","enabled","onClickTitle","ReactionComponents","superconduct_hit","sKey","electrocharged_hit","overloaded_hit","pyro_swirl_hit","swirlEleToDisplay","setele","element","shattered_hit","information","faQuestionCircle","cursor","eleInterArr","Ele","modifiersToFields","mStatKey","formulaText","statsToFields","statVal","talentLimits","talentLevelKeys","autoInfused","otherProps","infuseBtn","isAutoInfusable","getElementalName","talentLvlKey","talentLvlKeyRaw","levelBoost","getTalentLevelBoost","tLvl","stateTalentLevelKeys","talentStats","getTalentStats","statsEle","ListGroup","FieldDisplay","getTalentImg","Subtitle","getTalentDocument","section","talentText","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","compareAgainstEquipped","fieldBasic","fieldVal","fixedVal","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","CharacterDisplayCard","forceUpdateComponent","setCharacterKey","getInitialState","char","getIntialWeapon","setLevelKey","baseStatOverrides","Promise","all","getCharacterDataImport","getDataImport","deepClone","prevProps","footer","onClose","tabName","calculateBuild","HeaderIconDisplay","getThumb","commonPaneProps","u","ButtonGroup","DropdownToggle","getAllCharacterKeys","getlevelNames","getlevelKeys","lvlKey","faTimes","defaultActiveKey","Nav","Link","initialState","auto","ToggleButtonGroup","controlledProps","getValues","concat","invariant","toggle","_child$props","childVal","childOnChange","cloneElement","chainFunction","inputVal","event","isActive","n","handleToggle","vertical","TestDisplay","getRandomElementFromArray","array","random","getRandomIntInclusive","min","max","ceil","data","parse","setItem","closeEnoughFloat","abs","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","htmlStatsData","f","expand","statList","FormulaText","modifierText","options","statUnit","o","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","formulaDB","getCDataObj","formulaKey","tk","find","remove","getSpecializedStatKey","getSpeicalizedStatVal","characterObj","baseStat","getIndexFromlevelkey","elementalKey","getElementalKeysWithoutPhysical","constellationName","getTitles","titles","getSpecializedStat","specializeStat","thumbImg","cardImg","constIndex","talent","talents","talentBoost","boostEntry","document","getTalentDocumentSections","getTalentStatsAll","statsArr","getTalentConditional","sections","tempCond","isAutoElemental","infusable","basicKeys","transReactions","charFormulas","genericAvgHit","reactions","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","artifacts","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","mergeStats","overrides","hasOwnProperty","specialStatKey","weaponSubKey","initiated","characterDatabase","isInvalid","getIdNameList","split","dchar","unequipArtifactOnSlot","equipArtifactBuild","unequipAllArtifacts","clearDatabase","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","physical_dmg_","ele_dmg_","2","ArtifactSubStatsData","ArtifactSubstatsMinMax","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","getSubstatEfficiency","getArtifactEfficiency","errMsgs","some","currentNumOfRolls","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","maxPerRoll","getSubstatAllMax","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","icons","getSetEffectsObj","setEffects","artifactSetEffect","artArr","setNumKeys","setEffectText","getSlotName","getSlotIcon","getSlotMainStatKeys","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","roll","len","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","_createForOfIteratorHelper","allowArrayLike","it","F","done","_e","err","normalCompletion","didErr","step","next","_e2","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid"],"mappings":"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","file":"static/js/9.693c939e.chunk.js","sourcesContent":["import { clamp } from \"./Util/Util\";\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\n\nconst StatData = {\n  flat: { name: \"\", default: 1 },\n\n  // Character Stats\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\n\n  // Weapon Stats\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\n\n  // Character & Weapon Stats\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\n\n  // Weapon & Artifact Stats\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\n\n  // Attack-related Character, Weapon & Artifact Stats\n  finalHP: { name: \"HP\", pretty: \"HP\" },\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\n\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\n\n  eleMas: { name: \"Elemental Mastery\", },\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\n\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\n\n  // Misc. Stats\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\n  stamina: { name: \"Stamina\" },\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\n\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\n\n  // Reaction\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\n\n  // Enemy\n  enemyLevel: { name: \"Enemy Level\", const: true },\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true }\n}\nconst Formulas = {\n  // Basic Stats\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\n\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\n\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\n\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\n\n  // Reactions\n  transformative_level_multi: (s, c) => transformativeReactionLevelMultipliers[c.characterLevel],\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\n\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\n  crystalize_multi: (s, c) => crystalizeLevelMultipliers[c.characterLevel],\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\n}\n\nconst ElementToReactionKeys = {\n  physical: [],\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\n  geo: [\"crystalize_hit\", \"shattered_hit\"],\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\", \n  dendro: []\n}\nfunction resMultiplier(res) {\n  res = res / 100\n  if (res < 0) return 1 - res / 2\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\n  return 1 - res\n}\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\n\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\n})\n\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n  const opt = { variant: ele }\n  // DONT CHANGE. needed for screenshot parsing\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\n\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, const: true, ...opt }\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\n\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", const: true, ...opt }\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\n\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(c[`${ele}_enemyRes_`])\n})\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n    const opt = { variant: ele }\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s, c) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\n    })\n\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => s[`${ele}_${move}_hit_base_multi`] * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\n  })\n})\n\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\n  const opt = { variant: reaction }\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\n  Formulas[`${reaction}_multi`] = (s, c) => multi * c.transformative_level_multi\n  if (variants.length === 1) {\n    const [ele] = variants, opt = { variant: reaction }\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\n    Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\n  } else {\n    variants.forEach(ele => {\n      const opt = { variant: ele }\n\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\n      Formulas[`${ele}_${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\n    })\n  }\n})\n\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\n  const opt = { variant: reaction }\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\n\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\n      })\n    })\n  })\n})\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\n\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\n  const formulaList = dependencyKeys.map(key => {\n    const modifier = modifiers[key] ?? {}\n    const constModifier = Object.entries(modifier).filter(([k]) => StatData[k]?.const)\n    const dynamicModifier = Object.entries(modifier).filter(([k]) => !(StatData[k]?.const))\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]) => accu + c[k] * m, 0)\n    const dynamicFunc = (s) => dynamicModifier.reduce((accu, [k, m]) => accu + s[k] * m, 0)\n\n    let funcIndicator = 0\n    if (constModifier.length) funcIndicator += 1\n    if (dynamicModifier.length) funcIndicator += 2\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\n\n    let tmp\n    switch (funcIndicator) {\n      case 0: tmp = Formulas[key]; break\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\n      case 4: tmp = (s, c) => c[key]; break\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\n      case 8: tmp = (s, c) => s[key]; break\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\n    }\n    const func = tmp\n\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\n\n    if (!(key in Formulas))\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\n\n    if (StatData[key]?.const) {\n      constData[key] = stats[key]\n      constData[key] = func(stats, constData)\n      stats[key] = constData[key]\n      if (dynamicModifier.length)\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\n      return null\n    }\n\n    if (!(key in Formulas))\n      initialStats[key] = stats[key]\n\n    return [key, func]\n  }).filter((func) => func)\n\n  if (debug) console.log(initialStats, constData)\n\n  return {\n    initialStats,\n    formula: s => {\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\n      Object.assign(s, constData)\n    }\n  }\n}\n\nexport {\n  Formulas,\n  StatData,\n  ElementToReactionKeys,\n  PreprocessFormulas,\n}\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\nimport { objMultiplication } from '../Util/Util.js';\nexport default class Weapon {\n  //do not instantiate.\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\n\n  static getWeaponDataImport = () => WeaponDataImport\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\n\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\n\n  //base Stat\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\n\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\n  static getWeaponTypeKeys = () => Object.keys(WeaponTypeData)\n\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\n\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\n    let conditional = this.getWeaponConditional(weaponKey)\n    if (!conditional || !conditionalNum) return defVal\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\n    if (!stacks) return defVal\n    stats = stats(refineIndex)\n    if (stacks !== 1) objMultiplication(stats, stacks)\n    return stats\n  }\n}","import { faStar } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\n</span>\n\nexport {\n  StarIcon,\n  Stars\n}\n","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\nimport cryo from './Element_Cryo.png'\nimport dendro from './Element_Dendro.png'\nimport electro from './Element_Electro.png'\nimport geo from './Element_Geo.png'\nimport hydro from './Element_Hydro.png'\nimport pyro from './Element_Pyro.png'\n\nimport bow from './Weapon-class-bow-icon.png'\nimport catalyst from './Weapon-class-catalyst-icon.png'\nimport claymore from './Weapon-class-claymore-icon.png'\nimport polearm from './Weapon-class-polearm-icon.png'\nimport sword from './Weapon-class-sword-icon.png'\n\nimport fragile from './Item_Fragile_Resin.png'\nimport condensed from './Item_Condensed_Resin.png'\n\n//EXP BOOKS\nimport advice from './Item_Wanderer\\'s_Advice.png'\nimport wit from './Item_Hero\\'s_Wit.png'\nimport experience from './Item_Adventurer\\'s_Experience.png'\n\nlet Assets = {\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\n  resin: {\n    fragile,\n    condensed\n  },\n  exp_books: {\n    advice,\n    wit,\n    experience,\n  }\n};\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import React, { useState } from 'react'\nimport FormControl from 'react-bootstrap/FormControl'\n\nconst CustomFormControl = ({ float = false, placeholder, value, onValueChange, disabled, allowEmpty = false }) => {\n  let [focus, setFocus] = useState(false)\n  let displayValue = value\n  if (allowEmpty) displayValue = typeof value === \"number\" ? value : \"\"\n  else displayValue = !value && focus ? \"\" : (value?.toString?.() || value)\n  const props = {\n    type: \"number\",\n    className: \"hide-appearance\",\n    placeholder,\n    value: displayValue,\n    disabled,\n    onChange: (e) => {\n      let value = e.target.value;\n      if (float) {\n        if (allowEmpty) value = value === \"\" ? null : (parseFloat(value) || 0)\n        else value = parseFloat(value) || 0\n      } else {\n        if (allowEmpty) value = value === \"\" ? null : (parseInt(value) || 0)\n        else value = parseInt(value) || 0\n      }\n      onValueChange?.(value);\n    },\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n  }\n  return <FormControl {...props} aria-label=\"custom-input\" />\n}\nexport default CustomFormControl;","let WeaponData = {}\nlet WeaponDataImport = import('./Weapons')\nWeaponDataImport.then(imp => {\n  WeaponData = imp.default\n  WeaponDataImport = null\n})\n\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\nconst WeaponTypeData = {\n  sword: \"Sword\",\n  claymore: \"Claymore\",\n  catalyst: \"Catalyst\",\n  bow: \"Bow\",\n  polearm: \"Polearm\"\n}\n\nexport {\n  WeaponData,\n  WeaponDataImport,\n  WeaponLevelKeys,\n  LevelNameData,\n  WeaponTypeData\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport Badge from 'react-bootstrap/Badge'\nimport Button from 'react-bootstrap/Button'\nimport Dropdown from 'react-bootstrap/Dropdown'\n\nexport default function ConditionalSelector(props) {\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\n  if (!conditional) return defEle\n  if (Array.isArray(conditional)) {\n    let selectedConditionalNum = conditionalNum\n    let selectedConditional = null\n    for (const curConditional of conditional) {\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\n      else {\n        selectedConditional = curConditional;\n        break;\n      }\n    }\n    if (!selectedConditional) {\n      selectedConditionalNum = 0\n      selectedConditional = conditional[0]\n    }\n\n    //multi conditional\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\n    let count = 0;\n    return <Dropdown>\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        <Dropdown.Item onClick={() => setConditional(0)}>\n          <span>Not Active</span>\n        </Dropdown.Item>\n        {conditional.map((condial, i) =>\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\n            let tempcount = ++count\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\n            </Dropdown.Item>\n          })}</React.Fragment>\n        )}\n      </Dropdown.Menu>\n    </Dropdown>\n  } else if (conditional.maxStack > 1) {\n    //stacking conditional\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\n    return <Dropdown>\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        <Dropdown.Item onClick={() => setConditional(0)}>\n          <span>Not Active</span>\n        </Dropdown.Item>\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\n          </Dropdown.Item>)}\n      </Dropdown.Menu>\n    </Dropdown>\n  } else if (conditional.maxStack === 1) {\n    //single boolean conditional\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\n    </Button>\n  }\n\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import ElementalData from \"./Data/ElementalData\";\n\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\nexport const hitElements = ElementalData\nexport const transformativeReactions = {\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [ \"pyro\" ] },\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [ \"physical\" ] },\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [ \"electro\" ] },\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [ \"cryo\" ] },\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [ \"pyro\", \"hydro\", \"electro\", \"cryo\" ] },\n}\nexport const amplifyingReactions = {\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\n}\nexport const otherReactions = {\n  burning: \"Burning\",\n  crystalize: \"Crystalize\",\n}\nexport const transformativeReactionLevelMultipliers = [ 0,\n  17.2,  18.5,  19.9,  21.3,  22.6,  24.6,  26.6,  28.9,  31.4,  34.1,\n  37.2,  40.7,  44.4,  48.6,  53.7,  59.1,  64.4,  69.7,  75.1,  80.6,\n  86.1,  91.7,  97.2, 102.8, 108.4, 113.2, 118.1, 123.0, 129.7, 136.3,\n 142.7, 149.0, 155.4, 161.8, 169.1, 176.5, 184.1, 191.7, 199.6, 207.4,\n 215.4, 224.2, 233.5, 243.4, 256.1, 268.5, 281.5, 295.0, 309.1, 323.6,\n 336.8, 350.5, 364.5, 378.6, 398.6, 416.4, 434.4, 452.6, 471.4, 490.5,\n 509.5, 532.8, 556.4, 580.1, 607.9, 630.2, 652.9, 675.2, 697.8, 720.2,\n 742.5, 765.2, 784.4, 803.4, 830.9, 854.4, 877.8, 900.1, 923.8, 946.4,\n 968.6, 991.0,1013.5,1036.1,1066.6,1090.0,1115.0,1141.7,1171.9,1202.8,\n1202.8,1233.9,1264.7,1305.7,1346.1,1468.9,1524.0,1577.0,1627.6,1674.8,\n]\nexport const crystalizeLevelMultipliers = [ 0,\n  91,  99, 106, 114, 121, 129, 136, 144, 151, 159,\n 170, 181, 192, 204, 216, 228, 248, 268, 287, 304,\n 320, 337, 352, 368, 384, 394, 405, 416, 427, 438,\n 448, 459, 470, 481, 490, 499, 513, 529, 544, 557,\n 574, 591, 607, 622, 638, 649, 667, 684, 702, 715,\n 733, 750, 767, 784, 800, 814, 834, 855, 876, 896,\n 915, 936, 956, 982,1003,1017,1036,1057,1075,1096,\n1114,1135,1149,1170,1191,1205,1224,1243,1260,1277,\n1293,1308,1317,1327,1336,1349,1366,1384,1403,1424,\n1450,1478,1507,1543,1570,1580,1589,1673,1682,1691,\n]","import { Formulas, StatData } from \"./StatData\"\n\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\nfunction GetFormulaDependency(formula) {\n  const dependency = new Set()\n  formula(\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\n  return [...dependency]\n}\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\n))\n\nif (process.env.NODE_ENV === \"development\") {\n  let statKeys = Object.keys(StatData)\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\n    dependencies.forEach(key =>\n      !statKeys.includes(key) &&\n        console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\n  )\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\n    StatData[formulaKey]?.const && dependencies.forEach(key => \n      !StatData[key]?.const &&\n        console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\n    )\n  )\n}\n\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\n  let dependencies = new Set()\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\n  return [...dependencies]\n}\nfunction InsertDependencies(key, modifiers, dependencies) {\n  if (dependencies.has(key)) return\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\n  dependencies.add(key)\n}\n\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\nconst reduceOptimizationTarget = (optimizationTarget) =>\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0]] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\n\n\nexport {\n  GetFormulaDependency,\n  GetDependencies,\n  reduceOptimizationTarget,\n}\n","let CharacterData = {}\nlet CharacterDataImport = import('./Characters')\nCharacterDataImport.then(imp => {\n  CharacterData = imp.default\n  CharacterDataImport = null\n})\n// import characters from \nconst LevelsData = {\n  \"L1\": {\n    name: \"Lv. 1\",\n    level: 1,\n    asend: 0\n  },\n  \"L20\": {\n    name: \"Lv. 20\",\n    level: 20,\n    asend: 0\n  },\n  \"L20A\": {\n    name: \"Lv. 20 As.1\",\n    level: 20,\n    asend: 1\n\n  },\n  \"L40\": {\n    name: \"Lv. 40\",\n    level: 40,\n    asend: 1\n  },\n  \"L40A\": {\n    name: \"Lv. 40 As.2\",\n    level: 40,\n    asend: 2\n  },\n\n  \"L50\": {\n    name: \"Lv. 50\",\n    level: 50,\n    asend: 2\n  },\n  \"L50A\": {\n    name: \"Lv. 50 As.3\",\n    level: 50,\n    asend: 3\n  },\n  \"L60\": {\n    name: \"Lv. 60\",\n    level: 60,\n    asend: 3\n  },\n  \"L60A\": {\n    name: \"Lv. 60 As.4\",\n    level: 60,\n    asend: 4\n  },\n  \"L70\": {\n    name: \"Lv. 70\",\n    level: 70,\n    asend: 4\n  },\n  \"L70A\": {\n    name: \"Lv. 70 As.5\",\n    level: 70,\n    asend: 5\n  },\n\n  \"L80\": {\n    name: \"Lv. 80\",\n    level: 80,\n    asend: 5\n  },\n  \"L80A\": {\n    name: \"Lv. 80 As.6\",\n    level: 80,\n    asend: 6\n  },\n  \"L90\": {\n    name: \"Lv. 90\",\n    level: 90,\n    asend: 6\n  }\n\n}\nconst characterStatBase = {\n  critRate_: 5,\n  critDMG_: 50,\n  enerRech_: 100,\n  stamina: 100\n}\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\n\nexport {\n  LevelsData,\n  characterStatBase,\n  CharacterData,\n  CharacterDataImport,\n  CharacterSpecializedStatKey\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst StatIcon = {\n  characterHP: faTint,\n  finalHP: faTint,\n  hp_: faTint,\n  hp: faTint,\n\n  baseATK: faFistRaised,\n  characterATK: faFistRaised,\n  finalATK: faFistRaised,\n  atk_: faFistRaised,\n  atk: faFistRaised,\n\n  characterDEF: faShieldAlt,\n  finalDEF: faShieldAlt,\n  def_: faShieldAlt,\n  def: faShieldAlt,\n\n  eleMas: faMagic,\n  critRate_: faDice,\n  critDMG_: faDiceD20,\n  enerRech_: faSync,\n  heal_: faFirstAid,\n}\n\nconst StatIconEle = (statKey) =>\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\n\nexport default StatIcon\n\nexport {\n  StatIconEle\n}","//for DB v2, we changed a bunch of keys.\nconst changes = {\n  char_ele_key: \"characterEle\",\n  char_level: \"characterLevel\",\n\n  hp_base: \"characterHP\",\n  hp_final: \"finalHP\",\n  atk_character_base: \"characterATK\",\n  atk_base: \"baseATK\",\n  atk_final: \"finalATK\",\n  atk_weapon: \"weaponATK\",\n  def_base: \"characterDEF\",\n  def_final: \"finalDEF\",\n  phy_dmg_bonus: \"physical_dmg_\",\n  phy_res: \"physical_res_\",\n  anemo_ele_dmg_bonus: \"anemo_dmg_\",\n  geo_ele_dmg_bonus: \"geo_dmg_\",\n  electro_ele_dmg_bonus: \"electro_dmg_\",\n  hydro_ele_dmg_bonus: \"hydro_dmg_\",\n  pyro_ele_dmg_bonus: \"pyro_dmg_\",\n  cryo_ele_dmg_bonus: \"cryo_dmg_\",\n  anemo_ele_res: \"anemo_res_\",\n  geo_ele_res: \"geo_res_\",\n  electro_ele_res: \"electro_res_\",\n  hydro_ele_res: \"hydro_res_\",\n  pyro_ele_res: \"pyro_res_\",\n  cryo_ele_res: \"cryo_res_\",\n  ener_rech: \"enerRech_\",\n  crit_rate: \"critRate_\",\n  crit_dmg: \"critDMG_\",\n  stam: \"stamina\",\n  heal_bonu: \"heal_\",\n  inc_heal: \"incHeal_\",\n  pow_shield: \"powShield_\",\n  red_cd: \"cdRed_\",\n  skill_cd_red: \"skillCDRed_\",\n  burst_cd_red: \"burstCDRed_\",\n  all_dmg_bonus: \"dmg_\",\n  move_spd: \"moveSPD_\",\n  atk_spd: \"atkSPD_\",\n  weakspot_dmg: \"weakspotDMG_\",\n  stamina_dec: \"staminaDec_\",\n  stamina_gliding_dec: \"staminaGlidingDec_\",\n  stamina_charged_dec: \"staminaChargedDec_\",\n  ele_mas_multi_x: \"eleMasX\",\n  ele_mas_multi_y: \"eleMasY\",\n  ele_mas_multi_z: \"eleMasZ\",\n\n  norm_atk_dmg: \"physical_normal_hit\",\n  char_atk_dmg: \"physical_charged_hit\",\n  plunge_dmg: \"physical_plunging_hit\",\n  norm_atk_crit_dmg: \"physical_normal_critHit\",\n  char_atk_crit_dmg: \"physical_charged_critHit\",\n  plunge_crit_dmg: \"physical_plunging_critHit\",\n  norm_atk_avg_dmg: \"physical_normal_avgHit\",\n  char_atk_avg_dmg: \"physical_charged_avgHit\",\n  plunge_avg_dmg: \"physical_plunging_avgHit\",\n  norm_atk_dmg_bonus: \"normal_dmg_\",\n  char_atk_dmg_bonus: \"charged_dmg_\",\n  plunge_atk_dmg_bonus: \"plunging_dmg_\",\n  skill_dmg_bonus: \"skill_dmg_\",\n  burst_dmg_bonus: \"burst_dmg_\",\n  norm_atk_crit_rate: \"normal_critRate_\",\n  char_atk_crit_rate: \"charged_critRate_\",\n  skill_crit_rate: \"skill_critRate_\",\n  burst_crit_rate: \"burst_critRate_\",\n\n  anemo_skill_dmg: \"anemo_skill_hit\",\n  anemo_burst_dmg: \"anemo_burst_hit\",\n  anemo_skill_crit_dmg: \"anemo_skill_critHit\",\n  anemo_burst_crit_dmg: \"anemo_burst_critHit\",\n  anemo_skill_avg_dmg: \"anemo_skill_avgHit\",\n  anemo_burst_avg_dmg: \"anemo_burst_avgHit\",\n  geo_skill_dmg: \"geo_skill_hit\",\n  geo_burst_dmg: \"geo_burst_hit\",\n  geo_skill_crit_dmg: \"geo_skill_critHit\",\n  geo_burst_crit_dmg: \"geo_burst_critHit\",\n  geo_skill_avg_dmg: \"geo_skill_avgHit\",\n  geo_burst_avg_dmg: \"geo_burst_avgHit\",\n  electro_skill_dmg: \"electro_skill_hit\",\n  electro_burst_dmg: \"electro_burst_hit\",\n  electro_skill_crit_dmg: \"electro_skill_critHit\",\n  electro_burst_crit_dmg: \"electro_burst_critHit\",\n  electro_skill_avg_dmg: \"electro_skill_avgHit\",\n  electro_burst_avg_dmg: \"electro_burst_avgHit\",\n  hydro_skill_dmg: \"hydro_skill_hit\",\n  hydro_burst_dmg: \"hydro_burst_hit\",\n  hydro_skill_crit_dmg: \"hydro_skill_critHit\",\n  hydro_burst_crit_dmg: \"hydro_burst_critHit\",\n  hydro_skill_avg_dmg: \"hydro_skill_avgHit\",\n  hydro_burst_avg_dmg: \"hydro_burst_avgHit\",\n  pyro_skill_dmg: \"pyro_skill_hit\",\n  pyro_burst_dmg: \"pyro_burst_hit\",\n  pyro_skill_crit_dmg: \"pyro_skill_critHit\",\n  pyro_burst_crit_dmg: \"pyro_burst_critHit\",\n  pyro_skill_avg_dmg: \"pyro_skill_avgHit\",\n  pyro_burst_avg_dmg: \"pyro_burst_avgHit\",\n  cryo_skill_dmg: \"cryo_skill_hit\",\n  cryo_burst_dmg: \"cryo_burst_hit\",\n  cryo_skill_crit_dmg: \"cryo_skill_critHit\",\n  cryo_burst_crit_dmg: \"cryo_burst_critHit\",\n  cryo_skill_avg_dmg: \"cryo_skill_avgHit\",\n  cryo_burst_avg_dmg: \"cryo_burst_avgHit\",\n\n  phy_dmg: \"physical_hit\",\n  phy_crit_dmg: \"physical_critHit\",\n  phy_avg_dmg: \"physical_avgHit\",\n  anemo_ele_dmg: \"anemo_hit\",\n  anemo_ele_crit_dmg: \"anemo_critHit\",\n  anemo_ele_avg_dmg: \"anemo_avgHit\",\n  geo_ele_dmg: \"geo_hit\",\n  geo_ele_crit_dmg: \"geo_critHit\",\n  geo_ele_avg_dmg: \"geo_avgHit\",\n  electro_ele_dmg: \"electro_hit\",\n  electro_ele_crit_dmg: \"electro_critHit\",\n  electro_ele_avg_dmg: \"electro_avgHit\",\n  hydro_ele_dmg: \"hydro_hit\",\n  hydro_ele_crit_dmg: \"hydro_critHit\",\n  hydro_ele_avg_dmg: \"hydro_avgHit\",\n  pyro_ele_dmg: \"pyro_hit\",\n  pyro_ele_crit_dmg: \"pyro_critHit\",\n  pyro_ele_avg_dmg: \"pyro_avgHit\",\n  cryo_ele_dmg: \"cryo_hit\",\n  cryo_ele_crit_dmg: \"cryo_critHit\",\n  cryo_ele_avg_dmg: \"cryo_avgHit\",\n\n  overload_dmg: \"overload_hit\",\n  overload_dmg_bonus: \"overload_dmg_\",\n  overload_multi: \"overload_multi\",\n  electrocharged_dmg: \"electrocharged_hit\",\n  electrocharged_dmg_bonus: \"electrocharged_dmg_\",\n  electrocharged_multi: \"electrocharged_multi\",\n  superconduct_dmg: \"superconduct_hit\",\n  superconduct_dmg_bonus: \"superconduct_dmg_\",\n  superconduct_multi: \"superconduct_multi\",\n  burning_dmg: \"burning_hit\",\n  burning_dmg_bonus: \"burning_dmg_\",\n  swirl_dmg: \"swirl_hit\",\n  swirl_dmg_bonus: \"swirl_dmg_\",\n  swirl_multi: \"swirl_multi\",\n  shatter_dmg: \"shattered_hit\",\n  shatter_dmg_bonus: \"shattered_dmg_\",\n  shatter_multi: \"shattered_multi\",\n  crystalize_dmg: \"crystalize_hit\",\n  crystalize_dmg_bonus: \"crystalize_dmg_\",\n\n  melt_dmg_bonus: \"melt_dmg_\",\n  vaporize_dmg_bonus: \"vaporize_dmg_\",\n\n  pyro_vaporize_normal_dmg: \"pyro_vaporize_normal_hit\",\n  pyro_vaporize_normal_crit_dmg: \"pyro_vaporize_normal_critHit\",\n  pyro_vaporize_normal_avg_dmg: \"pyro_vaporize_normal_avgHit\",\n  pyro_vaporize_chraged_dmg: \"pyro_vaporize_chraged_hit\",\n  pyro_vaporize_chraged_crit_dmg: \"pyro_vaporize_chraged_critHit\",\n  pyro_vaporize_chraged_avg_dmg: \"pyro_vaporize_chraged_avgHit\",\n  pyro_vaporize_plunge_dmg: \"pyro_vaporize_plunging_hit\",\n  pyro_vaporize_plunge_crit_dmg: \"pyro_vaporize_plunging_critHit\",\n  pyro_vaporize_plunge_avg_dmg: \"pyro_vaporize_plunging_avgHit\",\n  pyro_vaporize_skill_dmg: \"pyro_vaporize_skill_hit\",\n  pyro_vaporize_skill_crit_dmg: \"pyro_vaporize_skill_critHit\",\n  pyro_vaporize_skill_avg_dmg: \"pyro_vaporize_skill_avgHit\",\n  pyro_vaporize_burst_dmg: \"pyro_vaporize_burst_hit\",\n  pyro_vaporize_burst_crit_dmg: \"pyro_vaporize_burst_critHit\",\n  pyro_vaporize_burst_avg_dmg: \"pyro_vaporize_burst_avgHit\",\n  pyro_vaporize_ele_dmg: \"pyro_vaporize_hit\",\n  pyro_vaporize_ele_crit_dmg: \"pyro_vaporize_critHit\",\n  pyro_vaporize_ele_avg_dmg: \"pyro_vaporize_avgHit\",\n  hydro_vaporize_normal_dmg: \"hydro_vaporize_normal_hit\",\n  hydro_vaporize_normal_crit_dmg: \"hydro_vaporize_normal_critHit\",\n  hydro_vaporize_normal_avg_dmg: \"hydro_vaporize_normal_avgHit\",\n  hydro_vaporize_chraged_dmg: \"hydro_vaporize_chraged_hit\",\n  hydro_vaporize_chraged_crit_dmg: \"hydro_vaporize_chraged_critHit\",\n  hydro_vaporize_chraged_avg_dmg: \"hydro_vaporize_chraged_avgHit\",\n  hydro_vaporize_plunge_dmg: \"hydro_vaporize_plunging_hit\",\n  hydro_vaporize_plunge_crit_dmg: \"hydro_vaporize_plunging_critHit\",\n  hydro_vaporize_plunge_avg_dmg: \"hydro_vaporize_plunging_avgHit\",\n  hydro_vaporize_skill_dmg: \"hydro_vaporize_skill_hit\",\n  hydro_vaporize_skill_crit_dmg: \"hydro_vaporize_skill_critHit\",\n  hydro_vaporize_skill_avg_dmg: \"hydro_vaporize_skill_avgHit\",\n  hydro_vaporize_burst_dmg: \"hydro_vaporize_burst_hit\",\n  hydro_vaporize_burst_crit_dmg: \"hydro_vaporize_burst_critHit\",\n  hydro_vaporize_burst_avg_dmg: \"hydro_vaporize_burst_avgHit\",\n  hydro_vaporize_ele_dmg: \"hydro_vaporize_hit\",\n  hydro_vaporize_ele_crit_dmg: \"hydro_vaporize_critHit\",\n  hydro_vaporize_ele_avg_dmg: \"hydro_vaporize_avgHit\",\n  pyro_melt_normal_dmg: \"pyro_melt_normal_hit\",\n  pyro_melt_normal_crit_dmg: \"pyro_melt_normal_critHit\",\n  pyro_melt_normal_avg_dmg: \"pyro_melt_normal_avgHit\",\n  pyro_melt_chraged_dmg: \"pyro_melt_chraged_hit\",\n  pyro_melt_chraged_crit_dmg: \"pyro_melt_chraged_critHit\",\n  pyro_melt_chraged_avg_dmg: \"pyro_melt_chraged_avgHit\",\n  pyro_melt_plunge_dmg: \"pyro_melt_plunging_hit\",\n  pyro_melt_plunge_crit_dmg: \"pyro_melt_plunging_critHit\",\n  pyro_melt_plunge_avg_dmg: \"pyro_melt_plunging_avgHit\",\n  pyro_melt_skill_dmg: \"pyro_melt_skill_hit\",\n  pyro_melt_skill_crit_dmg: \"pyro_melt_skill_critHit\",\n  pyro_melt_skill_avg_dmg: \"pyro_melt_skill_avgHit\",\n  pyro_melt_burst_dmg: \"pyro_melt_burst_hit\",\n  pyro_melt_burst_crit_dmg: \"pyro_melt_burst_critHit\",\n  pyro_melt_burst_avg_dmg: \"pyro_melt_burst_avgHit\",\n  pyro_melt_ele_dmg: \"pyro_melt_hit\",\n  pyro_melt_ele_crit_dmg: \"pyro_melt_critHit\",\n  pyro_melt_ele_avg_dmg: \"pyro_melt_avgHit\",\n  cryo_melt_normal_dmg: \"cryo_melt_normal_hit\",\n  cryo_melt_normal_crit_dmg: \"cryo_melt_normal_critHit\",\n  cryo_melt_normal_avg_dmg: \"cryo_melt_normal_avgHit\",\n  cryo_melt_chraged_dmg: \"cryo_melt_chraged_hit\",\n  cryo_melt_chraged_crit_dmg: \"cryo_melt_chraged_critHit\",\n  cryo_melt_chraged_avg_dmg: \"cryo_melt_chraged_avgHit\",\n  cryo_melt_plunge_dmg: \"cryo_melt_plunging_hit\",\n  cryo_melt_plunge_crit_dmg: \"cryo_melt_plunging_critHit\",\n  cryo_melt_plunge_avg_dmg: \"cryo_melt_plunging_avgHit\",\n  cryo_melt_skill_dmg: \"cryo_melt_skill_hit\",\n  cryo_melt_skill_crit_dmg: \"cryo_melt_skill_critHit\",\n  cryo_melt_skill_avg_dmg: \"cryo_melt_skill_avgHit\",\n  cryo_melt_burst_dmg: \"cryo_melt_burst_hit\",\n  cryo_melt_burst_crit_dmg: \"cryo_melt_burst_critHit\",\n  cryo_melt_burst_avg_dmg: \"cryo_melt_burst_avgHit\",\n  cryo_melt_ele_dmg: \"cryo_melt_hit\",\n  cryo_melt_ele_crit_dmg: \"cryo_melt_critHit\",\n  cryo_melt_ele_avg_dmg: \"cryo_melt_avgHit\",\n\n  enemy_phy_res: \"physical_enemyRes_\",\n  enemy_phy_res_multi: \"physical_enemyRes_multi\",\n  enemy_phy_immunity: \"physical_enemyImmunity\",\n  anemo_enemy_ele_res: \"anemo_enemyRes_\",\n  anemo_enemy_ele_res_multi: \"anemo_enemyRes_multi\",\n  anemo_enemy_ele_immunity: \"anemo_enemyImmunity\",\n  geo_enemy_ele_res: \"geo_enemyRes_\",\n  geo_enemy_ele_res_multi: \"geo_enemyRes_multi\",\n  geo_enemy_ele_immunity: \"geo_enemyImmunity\",\n  electro_enemy_ele_res: \"electro_enemyRes_\",\n  electro_enemy_ele_res_multi: \"electro_enemyRes_multi\",\n  electro_enemy_ele_immunity: \"electro_enemyImmunity\",\n  hydro_enemy_ele_res: \"hydro_enemyRes_\",\n  hydro_enemy_ele_res_multi: \"hydro_enemyRes_multi\",\n  hydro_enemy_ele_immunity: \"hydro_enemyImmunity\",\n  pyro_enemy_ele_res: \"pyro_enemyRes_\",\n  pyro_enemy_ele_res_multi: \"pyro_enemyRes_multi\",\n  pyro_enemy_ele_immunity: \"pyro_enemyImmunity\",\n  cryo_enemy_ele_res: \"cryo_enemyRes_\",\n  cryo_enemy_ele_res_multi: \"cryo_enemyRes_multi\",\n  cryo_enemy_ele_immunity: \"cryo_enemyImmunity\",\n\n  ele_mas: \"eleMas\",\n  amp_reaction_base_multi: \"ampReactionBase_multi\",\n\n  enemy_level_multi: \"enemyLevel_multi\",\n  enemy_level: \"enemyLevel\"\n}\n/*\nconst same = [\n  hp, hp_, atk, atk_, def, def_, pyro_vaporize_multi, hydro_vaporize_multi, pyro_melt_multi, cryo_melt_multi,\n]\n\nconst removed = [\n  norm_atk_crit_multi, char_atk_crit_multi, norm_atk_bonus_multi, char_atk_bonus_multi, plunge_bonus_multi, skill_crit_multi, burst_crit_multi, skill_bonus_multi, burst_bonus_multi, phy_bonus_multi, anemo_ele_bonus_multi, geo_ele_bonus_multi, electro_ele_bonus_multi, hydro_ele_bonus_multi, pyro_ele_bonus_multi, cryo_ele_bonus_multi, crit_dmg_multi, crit_multi,\n]\n\nconst aded = [\n  plunging_critRate_, final_normal_critRate_, final_charged_critRate_, final_plunging_critRate_, final_skill_critRate_, final_burst_critRate_,\n]\n*/\n\n//renamed dmgMode to hitMode\nconst dmgModeToHitMode = {\n  avg_dmg: \"avgHit\",\n  dmg: \"hit\",\n  crit_dmg: \"critHit\"\n}\nexport { changes, dmgModeToHitMode }","import Artifact from \"./Artifact/Artifact\";\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\nimport { changes as v2change, dmgModeToHitMode } from \"./dbV2KeyMap\";\nimport { loadFromLocalStorage, saveToLocalStorage } from \"./Util/Util\";\n\nfunction DatabaseInitAndVerify() {\n  const dbVersion = getDatabaseVersion()\n  //edit the data before the database is populated\n  if (dbVersion < 2) {\n    //made characters unique, so need to convert character_{NUMBER} to char_{characterKey}. Will only save the 1st instance of a character.\n    Object.keys(localStorage).filter(key => key.startsWith(\"character_\")).forEach(key => {\n      const character = loadFromLocalStorage(key);\n      const { characterKey, equippedArtifacts = {} } = character\n      const dbKey = `char_${characterKey}`\n      if (localStorage.getItem(dbKey) === null) {\n        //if there is no character saved, create a new character\n        const { id, name, dmgMode, ...rest } = character\n        if (Array.isArray(rest?.buildSetting?.mainStat))\n          rest.buildSetting.mainStat = rest.buildSetting.mainStat.map(stat => stat in v2change ? v2change[stat] : stat)\n        if (typeof rest?.buildSetting?.statFilters === \"object\")\n          rest.buildSetting.statFilters = Object.fromEntries(Object.entries(rest.buildSetting.statFilters).map(([stat, value]) => [stat in v2change ? v2change[stat] : stat, value]))\n        rest.hitMode = dmgModeToHitMode[dmgMode] ?? Object.keys(dmgModeToHitMode)[0]\n        saveToLocalStorage(dbKey, rest)\n        //equip to the new character\n        Object.values(equippedArtifacts).forEach(artid => {\n          const art = loadFromLocalStorage(artid);\n          if (!art) return\n          art.location = characterKey\n          saveToLocalStorage(artid, art)\n        });\n      } else {\n        //if the character does exist, \"move\" the artifacts equipped to inventory\n        Object.values(equippedArtifacts).forEach(artid => {\n          const art = loadFromLocalStorage(artid);\n          if (!art) return\n          art.location = \"\"\n          saveToLocalStorage(artid, art)\n        });\n      }\n      //delete the old database\n      localStorage.removeItem(key)\n    })\n    //reset the ArtifactDisplay keys\n    const ArtifactDisplayState = loadFromLocalStorage(\"ArtifactDisplay.state\")\n    if (ArtifactDisplayState) {\n      if (ArtifactDisplayState.filterMainStatKey in v2change)\n        ArtifactDisplayState.filterMainStatKey = v2change[ArtifactDisplayState.filterMainStatKey]\n      ArtifactDisplayState.filterSubstats = ArtifactDisplayState.filterSubstats.map(stat => stat in v2change ? v2change[stat] : stat)\n      saveToLocalStorage(\"ArtifactDisplay.state\", ArtifactDisplayState)\n    }\n  }\n\n  //this will only run if neither of the database has been initated.\n  const charDBJustPopualted = CharacterDatabase.populateDatebaseFromLocalStorage(),\n    artDBJustPopualted = ArtifactDatabase.populateDatebaseFromLocalStorage()\n  if (!charDBJustPopualted && !artDBJustPopualted) return\n\n  Object.values(ArtifactDatabase.getArtifactDatabase()).forEach(art => {\n    let valid = true\n\n    //verify the linking of artifacts and characters\n    if (art.location) {\n      const locationChar = CharacterDatabase.get(art.location)\n      if (locationChar) {\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\n          CharacterDatabase.equipArtifact(art.location, art)\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\n          art.location = \"\"\n          valid = false\n        }\n      } else {\n        art.location = \"\"\n        valid = false\n      }\n    }\n\n    if (dbVersion < 1) {\n      //generate artifact efficiency again for artifacts\n      Artifact.substatsValidation(art)\n      valid = false\n\n      //there was a bug that saved the numStars as strings. convert to number.\n      if (typeof art.numStars === \"string\") {\n        art.numStars = parseInt(art.numStars)\n        valid = false\n      }\n\n      //the set keys were changed to camelcase, need to convert for old databases.\n      let keyMapping = {\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\n        \"Thundering Fury\": \"ThunderingFury\",\n        \"Retracing Bolide\": \"RetracingBolide\",\n        \"Noblesse Oblige\": \"NoblesseOblige\",\n        \"Maiden Beloved\": \"MaidenBeloved\",\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\n        \"Archaic Petra\": \"ArchaicPetra\",\n        \"Brave Heart\": \"BraveHeart\",\n        \"Tiny Miracle\": \"TinyMiracle\",\n        \"Defender's Will\": \"DefendersWill\",\n        \"Martial Artist\": \"MartialArtist\",\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\n        \"The Exile\": \"TheExile\",\n        \"Traveling Doctor\": \"TravelingDoctor\",\n        \"Lucky Dog\": \"LuckyDog\",\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\n      }\n      if (keyMapping[art.setKey]) {\n        art.setKey = keyMapping[art.setKey]\n        valid = false\n      }\n      //key names were changed. convert old DB\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\n        valid = false\n      }\n      //key names were changed. convert old DB\n      if (art?.mainStatKey === \"phy_dmg\") {\n        art.mainStatKey = \"phy_dmg_bonus\"\n        valid = false\n      }\n    }\n\n    if (dbVersion < 2) {\n      if (art.mainStatKey in v2change) {\n        art.mainStatKey = v2change[art.mainStatKey]\n        valid = false\n      }\n      art?.substats?.forEach((obj, i) => {\n        if (obj.key in v2change) {\n          art.substats[i].key = v2change[obj.key]\n          valid = false\n        }\n      })\n    }\n\n    //Update any invalid artifacts in DB\n    if (!valid) ArtifactDatabase.updateArtifact(art)\n  })\n\n  let chars = CharacterDatabase.getCharacterDatabase();\n  Object.values(chars).forEach(character => {\n    let valid = true;\n    const { characterKey } = character\n    //verify character database equipment validity\n    if (!character.equippedArtifacts) {\n      character.equippedArtifacts = {}\n      valid = false\n    }\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\n      const equippedArt = ArtifactDatabase.get(artid)\n      if (equippedArt && equippedArt.location !== characterKey) //the artifact doesnt have the right location...\n        ArtifactDatabase.moveToNewLocation(artid, characterKey)\n      if (!equippedArt) {\n        valid = false\n        character.equippedArtifacts[slotKey] = \"\"\n      }\n    })\n\n    if (dbVersion < 1) {\n      //conditional format was refactored. this makes sure there is no error when using old DB.\n      character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\n        if (!cond.srcKey || !cond.srcKey2) {\n          valid = false\n          return false\n        }\n        return true\n      }) ?? []\n\n      //check for dmgMode\n      if (!character.hitMode) {\n        character.hitMode = \"hit\"\n        valid = false\n      }\n    }\n\n    //update any invalid characters in DB\n    if (!valid) CharacterDatabase.updateCharacter(character)\n  })\n  setDatabaseVersion(2)\n}\nconst getDatabaseVersion = (defVal = 0) =>\n  parseInt(loadFromLocalStorage(\"db_ver\") ?? defVal)\n\nconst setDatabaseVersion = (version) =>\n  saveToLocalStorage(\"db_ver\", version)\n\nexport {\n  DatabaseInitAndVerify\n};\n","import Dropdown from \"react-bootstrap/Dropdown\";\nimport Character from \"../Character/Character\";\nimport CharacterDatabase from \"../Character/CharacterDatabase\";\n\nfunction CharacterSelectionDropdownList({ onSelect }) {\n  return CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\n    if (a < b) return -1;\n    if (a > b) return 1;\n    // names must be equal\n    return 0;\n  })).map(characterKey =>\n    <Dropdown.Item key={characterKey} onClick={() => onSelect(characterKey)}>\n      {Character.getName(characterKey)}\n    </Dropdown.Item>)\n}\nexport {\n  CharacterSelectionDropdownList,\n};\n\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useContext } from 'react';\nimport { Accordion, AccordionContext, Button, Card, Col, Image, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\nimport Assets from \"../../Assets/Assets\";\nimport Stat from \"../../Stat\";\nimport { GetDependencies } from \"../../StatDependency\";\nimport Character from \"../Character\";\nimport StatInput from \"../StatInput\";\n\nfunction ReactionToggle({ character: { characterKey, reactionMode = \"none\" }, setReactionMode, className }) {\n  reactionMode === null && (reactionMode = \"none\")\n  const charEleKey = Character.getElementalKey(characterKey)\n  return [\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup className={className}\n    type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setReactionMode(val === \"none\" ? null : val)}>\n    <ToggleButton value={\"none\"} variant={reactionMode === \"none\" ? \"success\" : \"primary\"}>No Reactions</ToggleButton >\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_vaporize\"} variant={reactionMode === \"pyro_vaporize\" ? \"success\" : \"primary\"}>\n      <span className=\"text-vaporize\">Vaporize(Pyro) <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\n    </ToggleButton >}\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_melt\"} variant={reactionMode === \"pyro_melt\" ? \"success\" : \"primary\"}>\n      <span className=\"text-melt\">Melt(Pyro) <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\n    </ToggleButton >}\n    {charEleKey === \"hydro\" && <ToggleButton value={\"hydro_vaporize\"} variant={reactionMode === \"hydro_vaporize\" ? \"success\" : \"primary\"}>\n      <span className=\"text-vaporize\">Vaporize(Hydro) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /></span>\n    </ToggleButton >}\n    {charEleKey === \"cryo\" && <ToggleButton value={\"cryo_melt\"} variant={reactionMode === \"cryo_melt\" ? \"success\" : \"primary\"}>\n      <span className=\"text-melt\">Melt(Cryo) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /></span>\n    </ToggleButton >}\n  </ToggleButtonGroup>\n}\nfunction HitModeToggle({ hitMode, setHitMode, className }) {\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={setHitMode} className={className}>\n    <ToggleButton value=\"avgHit\" variant={hitMode === \"avgHit\" ? \"success\" : \"primary\"}>Avg. DMG</ToggleButton>\n    <ToggleButton value=\"hit\" variant={hitMode === \"hit\" ? \"success\" : \"primary\"}>Normal Hit, No Crit</ToggleButton>\n    <ToggleButton value=\"critHit\" variant={hitMode === \"critHit\" ? \"success\" : \"primary\"}>Crit Hit DMG</ToggleButton>\n  </ToggleButtonGroup>\n}\n\nfunction CalculationDisplay({ character, character: { characterKey }, build }) {\n  return <div>\n    {Object.entries(Character.getDisplayStatKeys(character)).map(([talentKey, fields]) => {\n      let header = \"\"\n      if (talentKey === \"basicKeys\") header = \"Basic Stats\"\n      else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\n      else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\n      else header = Character.getTalentName(characterKey, talentKey, talentKey)\n      return <Card bg=\"darkcontent\" text=\"lightfont\" key={talentKey} className=\"w-100 mb-2\">\n        <Card.Header>{header}</Card.Header>\n        <Card.Body className=\"p-2\">\n          <Accordion className=\"mb-n2\">\n            {fields.map((field, fieldIndex) => {\n              //simple statKey field\n              if (typeof field === \"string\") {\n                const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, [field]), build?.finalStats?.modifiers).reverse()\n                return Boolean(subFormulaKeys.length) && <Card key={fieldIndex} bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n                  <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\n                    {Stat.printStat(field, build.finalStats)}\n                  </Accordion.Toggle>\n                  <Accordion.Collapse eventKey={`field${fieldIndex}`}>\n                    <Card.Body className=\"p-2\">\n                      <div className=\"mb-n2\">\n                        {subFormulaKeys.map(subKey =>\n                          <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build.finalStats)} = <small>{Stat.printFormula(subKey, build.finalStats, build.finalStats.modifiers, false)}</small></p>\n                        )}\n                      </div>\n                    </Card.Body>\n                  </Accordion.Collapse>\n                </Card>\n              }\n              //fields\n              const talentField = Character.getTalentField(character, field.talentKey, field.sectionIndex, field.fieldIndex)\n              const fieldText = Character.getTalentFieldValue(talentField, \"text\", talentKey, build.finalStats)\n              const fieldVariant = Character.getTalentFieldValue(talentField, \"variant\", talentKey, build.finalStats)\n              const fieldFormulaText = Character.getTalentFieldValue(talentField, \"formulaText\", talentKey, build.finalStats)\n              const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(talentField, \"formula\", talentKey, build.finalStats, [])\n              if (!fieldFormula || !fieldFormulaDependency) return null\n              const fieldValue = fieldFormula?.(build.finalStats)?.toFixed?.()\n              const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, fieldFormulaDependency), build?.finalStats?.modifiers).reverse()\n              return <Card key={fieldIndex} bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n                <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\n                  <b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span>\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={`field${fieldIndex}`}>\n                  <Card.Body className=\"p-2\">\n                    <div className=\"mb-n2\">\n                      <p className=\"mb-2\"><b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span> = <small>{fieldFormulaText}</small></p>\n                      {subFormulaKeys.map(subKey =>\n                        <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build.finalStats)} = <small>{Stat.printFormula(subKey, build.finalStats, build.finalStats.modifiers, false)}</small></p>\n                      )}\n                    </div>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            })}\n          </Accordion>\n        </Card.Body>\n      </Card>\n    })}\n  </div>\n}\n\nconst ContextAwareToggle = ({ eventKey, callback }) => {\n  const currentEventKey = useContext(AccordionContext);\n  const decoratedOnClick = useAccordionToggle(\n    eventKey,\n    () => callback && callback(eventKey),\n  );\n  const expanded = currentEventKey === eventKey;\n  return (\n    <Button onClick={decoratedOnClick} >\n      <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\n      <span> </span>{expanded ? \"Retract\" : \"Expand\"}\n    </Button>\n  );\n}\n\nexport default function DamageOptionsAndCalculation({ character, character: { hitMode }, setState, setOverride, newBuild, equippedBuild }) {\n  //choose which one to display stats for\n  const build = newBuild ? newBuild : equippedBuild\n  return <Accordion>\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n      <Card.Header>\n        <Row>\n          <Col>\n            <span className=\"d-block\">Damage Calculation Options</span>\n            <small>Expand below to edit enemy details.</small>\n          </Col>\n          <Col xs=\"auto\">\n            {/* TODO reaction interaction UI */}\n            <ReactionToggle {...{ character, setReactionMode: r => setState({ reactionMode: r }) }} />\n          </Col>\n          <Col xs=\"auto\">\n            <ContextAwareToggle as={Button} eventKey=\"1\" />\n          </Col>\n        </Row>\n      </Card.Header>\n      <Accordion.Collapse eventKey=\"1\">\n        <Card.Body>\n          <Row className=\"mb-2\"><Col>\n            <Button variant=\"warning\" >\n              <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\n                To get the specific resistance values of enemies, please visit the wiki.\n          </a>\n            </Button >\n          </Col></Row>\n          <Row>\n            <Col xs={12} xl={6} className=\"mb-2\">\n              <StatInput\n                name={<b>Enemy Level</b>}\n                value={Character.getStatValueWithOverride(character, \"enemyLevel\")}\n                placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\n                defaultValue={Character.getBaseStatValue(character, \"enemyLevel\")}\n                onValueChange={(val) => setOverride?.(\"enemyLevel\", val)}\n              />\n            </Col>\n            {Character.getElementalKeys().map(eleKey => {\n              let statKey = eleKey === \"physical\" ? \"physical_enemyRes_\" : `${eleKey}_enemyRes_`\n              let immunityStatKey = eleKey === \"physical\" ? \"physical_enemyImmunity\" : `${eleKey}_enemyImmunity`\n              let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\n              return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\n                <StatInput\n                  prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\n                    <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\n                </Button>}\n                  name={<b>{Stat.getStatNameRaw(statKey)}</b>}\n                  value={Character.getStatValueWithOverride(character, statKey)}\n                  placeholder={Stat.getStatNameRaw(statKey)}\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\n                  onValueChange={(val) => setOverride?.(statKey, val)}\n                  disabled={elementImmunity}\n                />\n              </Col>\n            })}\n          </Row>\n        </Card.Body>\n      </Accordion.Collapse>\n    </Card>\n\n    <Card bg=\"lightcontent\" text=\"lightfont\">\n      <Card.Header>\n        <Row>\n          <Col>\n            <span className=\"d-block\">Damage Calculation Formulas</span>\n            <small>Expand below to see calculation details.</small>\n          </Col>\n          <Col xs=\"auto\">\n            <HitModeToggle {...{ hitMode, setHitMode: m => setState({ hitMode: m }) }} />\n          </Col>\n          <Col xs=\"auto\">\n            <ContextAwareToggle as={Button} eventKey=\"2\" />\n          </Col>\n        </Row>\n      </Card.Header>\n      <Accordion.Collapse eventKey=\"2\">\n        <Card.Body className=\"p-2\">\n          <CalculationDisplay character={character} build={build} />\n        </Card.Body>\n      </Accordion.Collapse>\n    </Card>\n  </Accordion>\n}\nexport {\n  HitModeToggle,\n  ReactionToggle,\n};\n\n","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Image from 'react-bootstrap/Image';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Row from 'react-bootstrap/Row';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Character from '../Character/Character';\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\nimport { Stars } from '../Components/StarDisplay';\nimport Stat from '../Stat';\nimport Artifact from './Artifact';\nimport ArtifactDatabase from './ArtifactDatabase';\nimport PercentBadge from './PercentBadge';\nexport default function ArtifactCard({ artifactId, artifactObj, forceUpdate, onEdit, onDelete, assumeFull = false }) {\n  if (!artifactId && !artifactObj) return null;\n  const art = artifactObj ? artifactObj : ArtifactDatabase.get(artifactId);\n  if (!art) return null;\n  let { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location = \"\", lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\n  let mainStatLevel = assumeFull ? numStars * 4 : level\n  let assFullColor = assumeFull && level !== numStars * 4\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\n  let artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\n  const equipOnChar = (charKey) => {\n    Artifact.equipArtifactOnChar(artifactId, charKey)\n    forceUpdate?.()\n  }\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\n    <Card.Header className=\"p-0\">\n      <Row>\n        <Col xs={2} md={3}>\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\n        </Col>\n        <Col className=\"pt-3\">\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\n        </Col>\n      </Row>\n    </Card.Header>\n    <Card.Body className=\"d-flex flex-column py-2\">\n      <Card.Title>\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\n      </Card.Title>\n      <h5 className=\"mb-1\">\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\n      </h5>\n      <Row className=\"mb-0\">\n        {substats.map((stat, i) => {\n          if (!stat || !stat.value) return null\n          let numRolls = stat?.rolls?.length || 0\n          let efficiency = stat?.efficiency || 0\n          let effOpacity = 0.3 + efficiency * 0.7\n          let statName = Stat.getStatName(stat.key)\n          return (<Col key={i} xs={12}>\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\n          </Col>)\n        })}\n      </Row>\n      <div className=\"mt-auto\">\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\n        <PercentBadge percent={currentEfficiency} valid={artifactValid}>\n          {currentEfficiency?.toFixed(2) ?? currentEfficiency + \"%\"}\n        </PercentBadge>\n        <b>{\" < \"}</b>\n        <PercentBadge percent={maximumEfficiency} valid={artifactValid}>\n          {maximumEfficiency?.toFixed(2) ?? maximumEfficiency + \"%\"}\n        </PercentBadge>\n      </div>\n    </Card.Body>\n\n    <Card.Footer className=\"pr-3\">\n      <Row className=\"d-flex justify-content-between no-gutters\">\n        {forceUpdate ? <Col xs=\"auto\">\n          <Dropdown>\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{Character.getName(location, \"Inventory\")}</Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}>Inventory</Dropdown.Item>\n              <Dropdown.Divider />\n              <CharacterSelectionDropdownList onSelect={ckey => equipOnChar(ckey)} />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Col> : <Col xs=\"auto\"><b>{Character.getName(location, \"Inventory\")}</b></Col>}\n        <Col xs=\"auto\">\n          <ButtonGroup>\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\n              <span className=\"d-inline-block\">\n                <Button size=\"sm\"\n                  disabled={location}\n                  style={location ? { pointerEvents: 'none' } : {}}\n                  onClick={() => {\n                    art.lock = !lock\n                    ArtifactDatabase.updateArtifact(art);\n                    forceUpdate?.();\n                  }}>\n                  <FontAwesomeIcon icon={(lock || location) ? faLock : faLockOpen} className=\"fa-fw\" />\n                </Button>\n              </span>\n            </OverlayTrigger> : null}\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\n              onClick={() => onEdit()}>\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\n            </Button>}\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\n              onClick={() => onDelete()}>\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\n            </Button>}\n          </ButtonGroup>\n        </Col>\n      </Row>\n    </Card.Footer>\n  </Card>)\n}\n","import { Badge } from 'react-bootstrap';\n\nexport default function PercentBadge(props) {\n  let { percent, valid, children } = props\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\n}\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport Button from \"react-bootstrap/Button\"\nimport InputGroup from \"react-bootstrap/InputGroup\"\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\nimport Tooltip from \"react-bootstrap/Tooltip\"\nimport CustomFormControl from \"../Components/CustomFormControl\"\n\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\n  <InputGroup {...restProps}>\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\n    <InputGroup.Prepend>\n      <InputGroup.Text>{name}</InputGroup.Text>\n    </InputGroup.Prepend>\n    <CustomFormControl\n      float={percent}\n      placeholder={placeholder}\n      value={value}\n      onValueChange={onValueChange}\n      disabled={disabled}\n    />\n    {percent ? (<InputGroup.Append>\n      <InputGroup.Text>%</InputGroup.Text>\n    </InputGroup.Append>) : null}\n    {defaultValue !== undefined ? <InputGroup.Append>\n      <OverlayTrigger placement=\"top\"\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\n        <span className=\"d-inline-block\">\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\n            <FontAwesomeIcon icon={faUndo} />\n          </Button>\n        </span>\n      </OverlayTrigger>\n    </InputGroup.Append> : null}\n  </InputGroup>\nexport default StatInput","import { Col, Row } from \"react-bootstrap\"\nimport Character from \"../Character/Character\"\nimport Stat from \"../Stat\"\nimport { StatIconEle } from \"./StatIcon\"\n\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\n    oldVal = val\n    val = undefined\n  }\n  const diff = val !== undefined ? val - oldVal : 0;\n  let oldText = \"\", diffText = \"\"\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\n\n  return <Col xs=\"12\"><Row>\n    <Col><b>{label}</b></Col>\n    <Col xs=\"auto\">{oldText}{diff ? \" \" : \"\"}{diffText}</Col>\n  </Row></Col>\n}\nexport default function StatDisplay({ character, character: { characterKey }, equippedBuild, newBuild, editable, statKey }) {\n  let val, oldVal, fixed, unit, variant;\n  let label = \"\"\n  if (typeof statKey === \"string\") {//basic statKey\n    if (newBuild && equippedBuild) {//comparable\n      //newbuild -> val\n      //equippedbuild ->old\n      val = newBuild?.finalStats?.[statKey] ?? 0\n      oldVal = equippedBuild?.finalStats?.[statKey] ?? 0\n    } else {\n      const build = newBuild ? newBuild : equippedBuild\n      //build ->val\n      val = build?.finalStats?.[statKey] ?? 0\n      //statvaluewith override -> old\n      const invalid = \"invalid\"//can't use undeinfed as the defVal, since I want undefined for invalid numbers.\n      oldVal = Character.getStatValueWithOverride(character, statKey, invalid)\n      oldVal === invalid && (oldVal = undefined)\n      if (statKey === \"finalHP\")\n        oldVal = Character.getStatValueWithOverride(character, \"characterHP\")\n      else if (statKey === \"finalDEF\")\n        oldVal = Character.getStatValueWithOverride(character, \"characterDEF\")\n      else if (statKey === \"finalATK\")\n        oldVal = Character.getStatValueWithOverride(character, \"characterATK\") + Character.getStatValueWithOverride(character, \"weaponATK\")\n    }\n    unit = Stat.getStatUnit(statKey)\n    fixed = Stat.fixedUnit(statKey)\n    label = <span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>\n  } else {//from character sheet\n    const build = newBuild ? newBuild : equippedBuild\n    const { talentKey, sectionIndex, fieldIndex } = statKey\n    const field = Character.getTalentField(character, talentKey, sectionIndex, fieldIndex)\n    const labelVariant = Character.getTalentFieldValue(field, \"variant\", talentKey, build.finalStats)\n    label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", talentKey, build.finalStats)}</span>\n    fixed = Character.getTalentFieldValue(field, \"fixed\", talentKey, build.finalStats, 0)\n    val = Character.getTalentFieldValue(field, \"formula\", talentKey, build.finalStats)?.[0]?.(build.finalStats)\n    if (newBuild && equippedBuild) {//comparable\n      oldVal = Character.getTalentFieldValue(field, \"formula\", talentKey, equippedBuild.finalStats)?.[0]?.(equippedBuild.finalStats)\n    }\n  }\n\n  if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label }} />\n}","import { OverlayTrigger, Tooltip } from \"react-bootstrap\"\n\nconst WIPComponent = ({ children }) =>\n  <OverlayTrigger\n    overlay={<Tooltip>Work In Progress</Tooltip>}\n  >\n    <span>\n      {children}\n    </span>\n  </OverlayTrigger>\n\nexport default WIPComponent","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","\n//take the new statsDisplayKeys, and display the stats.\n\nimport { Card, Col, Row } from \"react-bootstrap\"\nimport StatDisplay from \"../../Components/StatDisplay\"\nimport Character from \"../Character\"\n\nexport default function StatDisplayComponent({ character, character: { characterKey }, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }) {\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([talentKey, fields]) => {\n    let header = \"\"\n    if (talentKey === \"basicKeys\") header = \"Basic Stats\"\n    else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\n    else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\n    else header = Character.getTalentName(characterKey, talentKey, talentKey)\n    return <Col key={talentKey} className=\"mb-2\" xs={12} md={6} xl={4}>\n      <Card bg={cardbg} text=\"lightfont\" className=\"h-100\">\n        <Card.Header>{header}</Card.Header>\n        <Card.Body>\n          <Row>{fields.map(field => <StatDisplay key={JSON.stringify(field)} {...{ character, equippedBuild, newBuild, editable, statKey: field }} />)}</Row>\n        </Card.Body>\n      </Card>\n    </Col>\n  })}</Row>\n}","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nimport { Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\nimport Artifact from '../../Artifact/Artifact';\nimport ArtifactCard from '../../Artifact/ArtifactCard';\nimport ConditionalSelector from '../../Components/ConditionalSelector';\nimport Stat from \"../../Stat\";\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\nimport Character from \"../Character\";\nimport DamageOptionsAndCalculation from './DamageOptionsAndCalculation';\nimport StatDisplayComponent from './StatDisplayComponent';\n\nfunction CharacterArtifactPane({ character, character: { characterKey, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState, setOverride }) {\n  //choose which one to display stats for\n  let build = newBuild ? newBuild : equippedBuild\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\n  const statKeys = Character.getDisplayStatKeys(character)\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\n  return <>\n    {Character.hasTalentPage(characterKey) && <Row><Col xs={12} className=\"mb-2\">\n      <DamageOptionsAndCalculation {...{ character, setState, setOverride, newBuild, equippedBuild }} />\n    </Col></Row>}\n    <Row>\n      <Col className=\"mb-2\">\n        <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\n          <Card.Body>\n            <StatDisplayComponent {...{ character, equippedBuild, newBuild, statsDisplayKeys: statKeys, build, forceUpdate, setState, setOverride, editable }} />\n          </Card.Body>\n          {newBuild ? <Card.Footer>\n            <Button onClick={() => {\n              Character.equipArtifacts(characterKey, newBuild.artifactIds)\n              forceUpdate?.()\n            }}>Equip All artifacts to current character</Button>\n            {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\n          </Card.Footer> : null}\n        </Card>\n      </Col>\n    </Row>\n    <Row className=\"mb-n2\">\n      <Col>\n        <Row>\n          <Col sm={6} lg={4} className=\"mb-2\">\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\n              <Card.Header>Artifact Set Effects</Card.Header>\n              <Card.Body className=\"flex-grow-1\">\n                <Row>\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\n                    <Col key={setKey} xs={12} className=\"mb-2\">\n                      <h5>{Artifact.getSetName(setKey)}</h5>\n                      <Row>\n                        {setNumKeyArr.map(setNumKey => {\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\n                          let conditionalNum = 0;\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\n                          if (conditional) {\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\n                          }\n                          let conditionalElement = <ConditionalSelector\n                            disabled={newBuild ? true : false}\n                            conditional={conditional}\n                            conditionalNum={conditionalNum}\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\n                          />\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\n                            {setStats ? <Row>\n                              {Object.entries(setStats).map(([statKey, val]) =>\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\n                            </Row> : null}\n                          </Col>\n                        })}\n                      </Row>\n                    </Col>\n                  )}\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n          {Artifact.getSlotKeys().map(slotKey =>\n            build.artifactIds[slotKey] ? <Col sm={6} lg={4} key={build.artifactIds[slotKey]} className=\"mb-2\">\n              <ArtifactCard artifactId={build.artifactIds[slotKey]} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\n            </Col> : null\n          )}\n        </Row>\n      </Col>\n    </Row>\n  </>\n}\nexport default CharacterArtifactPane\n","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport React, { useState } from \"react\"\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\nimport Assets from \"../../Assets/Assets\"\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\nimport CustomFormControl from \"../../Components/CustomFormControl\"\nimport { Stars } from \"../../Components/StarDisplay\"\nimport StatDisplay from \"../../Components/StatDisplay\"\nimport { StatIconEle } from \"../../Components/StatIcon\"\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\nimport { LevelNameData } from \"../../Data/WeaponData\"\nimport Stat from \"../../Stat\"\nimport { clamp } from \"../../Util/Util\"\nimport Weapon from \"../../Weapon/Weapon\"\nimport Character from \"../Character\"\nimport StatInput from \"../StatInput\"\nexport default function CharacterOverviewPane(props) {\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\n  let [editLevel, setEditLevel] = useState(false)\n  let elementKey = Character.getElementalKey(characterKey)\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\n  let level = Character.getStatValueWithOverride(character, \"characterLevel\")\n  return <Row>\n    <Col xs={12} md={3} >\n      {/* Image card with star and name and level */}\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\n        <Card.Body>\n          <Row>\n            <Col xs={12}>\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\n            </Col>\n            <Col>\n              {editLevel ? <Row><Col>\n                <InputGroup >\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <CustomFormControl onValueChange={(val) => setOverride(\"characterLevel\", clamp(val, 1, 90))} value={level} />\n                  <InputGroup.Append>\n                    <Button>\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"characterLevel\", Character.getLevel(character.levelKey))} />\n                    </Button>\n                  </InputGroup.Append>\n                  <InputGroup.Append>\n                    <OverlayTrigger\n                      placement=\"bottom\"\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\n                    >\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\n                        <span><FontAwesomeIcon icon={faSave} /></span>\n                      </Button>\n                    </OverlayTrigger>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Col></Row> :\n                <Row>\n                  <Col>\n                    <h5>Level: {level}</h5>\n                  </Col>\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\n                    </Button>\n                  </Col> : null}\n                </Row>}\n            </Col>\n            <Col xs={12}>\n              <Row>\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\n                <Col>\n                  <Row className=\"px-2\">\n                    {[...Array(6).keys()].map(i =>\n                      <Col xs={4} className=\"p-1\" key={i}>\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"} cursor-pointer`}\n                          roundedCircle onClick={editable ? (() =>\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\n                      </Col>)}\n                  </Row>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </Col>\n    <Col xs={12} md={9} >\n      <WeaponStatsEditorCard {...props} />\n      <MainStatsCards {...props} />\n    </Col>\n  </Row >\n}\nfunction StatItem({ statKey, val }) {\n  if (!statKey) return null\n  return <Col xs={12} lg={6} className=\"px-3\">\n    <span><b>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</b></span>\n    <span className={`float-right text-right text-${Stat.getStatVariant(statKey)}`} >{val?.toFixed?.(Stat.fixedUnit(statKey)) || val}{Stat.getStatUnit(statKey)}</span>\n  </Col>\n}\nfunction WeaponStatsCard({ title, stats = {}, finalStats = {} }) {\n  if (Object.keys(stats ?? {}).length === 0) return null\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\n    <Card.Body className=\"py-2 px-0\"><Row>\n      {Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? <React.Fragment key={key} >{Object.entries(val ?? {}).map(([mkey, modifier]) =>\n        <StatItem key={mkey} statKey={mkey} val={Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0)} />)}</React.Fragment>\n        : <StatItem key={key} statKey={key} val={val} />)}\n    </Row></Card.Body>\n  </Card>\n}\nfunction WeaponStatsEditorCard(props) {\n  let [editing, SetEditing] = useState(false)\n  let [showDescription, setShowDescription] = useState(false)\n  let { character, character: { characterKey, weapon = {} }, editable, setState, equippedBuild, newBuild } = props\n\n  //choose which one to display stats for\n  let build = newBuild ? newBuild : equippedBuild\n\n  const setStateWeapon = (key, value) => setState(state => {\n    //reset the conditionalNum when we switch weapons\n    if (key === \"key\") state.weapon.conditionalNum = 0\n    state.weapon[key] = value\n    return { weapon: state.weapon }\n  })\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex, undefined)\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum, undefined)\n  let conditional = Weapon.getWeaponConditional(weapon.key)\n  let conditionalNum = weapon.conditionalNum;\n  let conditionalEle = <ConditionalSelector\n    conditional={conditional}\n    conditionalNum={conditionalNum}\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\n    defEle={<span>{weaponPassiveName}</span>}\n  />\n\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n    <Card.Header>\n      <Row>\n        <Col>\n          <span>Weapon</span>\n        </Col>\n        <Col xs=\"auto\">\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\n          </Button>\n        </Col>\n        {editable ? <Col xs=\"auto\" >\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\n          </Button>\n        </Col> : null}\n      </Row>\n    </Card.Header>\n    <Card.Body>\n      <Row className=\"mb-2\">\n        <Col xs={12} md={3}>\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\n        </Col>\n        {editing ? <Col>\n          <Row>\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\n                      {weaponObj.name}\n                    </Dropdown.Item>\n                  )}\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\n                </React.Fragment>)}\n              </DropdownButton>\n            </Col>\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\n                <Dropdown.ItemText>\n                  <span>Select Weapon Level</span>\n                </Dropdown.ItemText>\n                {Object.entries(LevelNameData).map(([key, name]) =>\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\n                    {name}\n                  </Dropdown.Item>)}\n              </DropdownButton>\n            </Col>\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\n                <Dropdown.ItemText>\n                  <span>Select Weapon Refinement</span>\n                </Dropdown.ItemText>\n                <Dropdown.Divider />\n                {[...Array(5).keys()].map(key =>\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\n                    {`Refinement ${key + 1}`}\n                  </Dropdown.Item>)}\n              </DropdownButton>\n            </Col>}\n            <Col xs={12} className=\"mb-2\">\n              <StatInput\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\n                placeholder=\"Weapon Attack\"\n                value={weaponDisplayMainVal}\n                percent={false}\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\n              />\n            </Col>\n            {subStatKey && <Col xs={12} className=\"mb-2\">\n              <StatInput\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\n                placeholder=\"Weapon Substat\"\n                value={weaponDisplaySubVal}\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\n              />\n            </Col>}\n          </Row>\n        </Col> :\n          <Col>\n            <Row className=\"mb-2\"><Col>\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\n            </Col></Row>\n            <Row>\n              <Col>{conditionalEle}</Col>\n            </Row>\n\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build?.finalStats, character)}</p>\n            <WeaponStatsCard title={\"Main Stats\"} stats={{ atk: weaponDisplayMainVal, [subStatKey]: weaponDisplaySubVal }} finalStats={build?.finalStats} />\n            <WeaponStatsCard title={\"Bonus Stats\"} stats={weaponBonusStats} finalStats={build?.finalStats} />\n            <WeaponStatsCard title={\"Conditional Stats\"} stats={conditionalStats} finalStats={build?.finalStats} />\n          </Col>}\n      </Row>\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\n    </Card.Body>\n  </Card>\n}\n\nfunction MainStatsCards(props) {\n  const { editable, character, setOverride, equippedBuild, newBuild } = props\n\n  const [editing, SetEditing] = useState(false)\n  const [editingOther, SetEditingOther] = useState(false)\n  const [editingMisc, SetEditingMisc] = useState(false)\n\n  const additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\n  displayStatKeys.push(...additionalKeys)\n  const editStatKeys = [\"characterHP\", \"hp\", \"hp_\", \"characterATK\", \"atk\", \"atk_\", \"characterDEF\", \"def\", \"def_\"]\n  editStatKeys.push(...additionalKeys)\n  const otherStatKeys = []\n\n  Character.getElementalKeys().forEach(ele => {\n    otherStatKeys.push(`${ele}_dmg_`)\n    otherStatKeys.push(`${ele}_res_`)\n  })\n  otherStatKeys.push(\"stamina\", \"incHeal_\", \"powShield_\")\n\n  const miscStatkeys = [\n    \"normal_dmg_\", \"normal_critRate_\",\n    \"charged_dmg_\", \"charged_critRate_\",\n    \"skill_dmg_\", \"skill_critRate_\",\n    \"burst_dmg_\", \"burst_critRate_\",\n    \"dmg_\", \"moveSPD_\", \"atkSPD_\", \"weakspotDMG_\"]\n\n  const specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\n  const specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\n\n  const isPercentSpecialStatSelect = Stat.getStatUnit(specializedStatKey) === \"%\"\n\n  const displayNewBuildProps = { character, equippedBuild, newBuild, editable }\n  return <>\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n      <Card.Header>\n        <Row>\n          <Col>\n            <span>Main Base Stats</span>\n          </Col>\n          {editable ? <Col xs=\"auto\" >\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\n            </Button>\n          </Col> : null}\n        </Row>\n      </Card.Header>\n      {editing ?\n        <Card.Body>\n          <Row className=\"mb-2\">\n            {editStatKeys.map(statKey =>\n              <Col lg={6} xs={12} key={statKey}>\n                <StatInput\n                  className=\"mb-2\"\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\n                  value={Character.getStatValueWithOverride(character, statKey)}\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\n                  onValueChange={(value) => setOverride(statKey, value)}\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\n                />\n              </Col>)}\n\n            <Col lg={6} xs={12}>\n              <InputGroup>\n                <DropdownButton\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\n                  as={InputGroup.Prepend}\n                >\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\n                  {CharacterSpecializedStatKey.map(key =>\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\n                      {Stat.getStatNameWithPercent(key)}\n                    </Dropdown.Item>)}\n                </DropdownButton>\n                <CustomFormControl float={isPercentSpecialStatSelect}\n                  placeholder=\"Character Special Stat\"\n                  value={Character.getStatValueWithOverride(character, \"specializedStatVal\")}\n                  onValueChange={(value) => setOverride(\"specializedStatVal\", value)} />\n                {isPercentSpecialStatSelect && (<InputGroup.Append>\n                  <InputGroup.Text>%</InputGroup.Text>\n                </InputGroup.Append>)}\n              </InputGroup>\n            </Col>\n          </Row>\n        </Card.Body> :\n        <Card.Body>\n          <Row className=\"mb-2\">\n            {displayStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}\n            {specializedStatVal ? <Col lg={6} xs={12}>\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\n            </Col> : null}\n          </Row>\n        </Card.Body>\n      }\n    </Card >\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n      <Card.Header>\n        <Row>\n          <Col>\n            <span>Other Stats</span>\n          </Col>\n          {editable && <Col xs=\"auto\" >\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\n            </Button>\n          </Col>}\n        </Row>\n      </Card.Header>\n      {editingOther ?\n        <Card.Body>\n          <Row className=\"mb-2\">\n            {otherStatKeys.map(statKey =>\n              <Col lg={6} xs={12} key={statKey}>\n                <StatInput\n                  className=\"mb-2\"\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\n                  value={Character.getStatValueWithOverride(character, statKey)}\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\n                  onValueChange={(value) => setOverride(statKey, value)}\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\n                />\n              </Col>)}\n          </Row>\n        </Card.Body> :\n        <Card.Body>\n          <Row className=\"mb-2\">{otherStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\n        </Card.Body>\n      }\n    </Card>\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n      <Card.Header>\n        <Row>\n          <Col>\n            <span>Misc Stats</span>\n          </Col>\n          {editable && <Col xs=\"auto\" >\n            <Button variant={editingMisc ? \"danger\" : \"info\"} onClick={() => SetEditingMisc(!editingMisc)} size=\"sm\">\n              <span><FontAwesomeIcon icon={editingMisc ? faSave : faEdit} /> {editingMisc ? \"EXIT\" : \"EDIT\"}</span>\n            </Button>\n          </Col>}\n        </Row>\n      </Card.Header>\n      {editingMisc ?\n        <Card.Body>\n          <Row className=\"mb-2\">\n            {miscStatkeys.map(statKey =>\n              <Col xl={6} xs={12} key={statKey}>\n                <StatInput\n                  className=\"mb-2\"\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\n                  value={Character.getStatValueWithOverride(character, statKey)}\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\n                  onValueChange={(value) => setOverride(statKey, value)}\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\n                />\n              </Col>)}\n          </Row>\n        </Card.Body> :\n        <Card.Body>\n          <Row className=\"mb-2\">{miscStatkeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\n        </Card.Body>\n      }\n    </Card>\n  </>\n}\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from 'react';\nimport { useState } from \"react\";\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\nimport Assets from \"../../Assets/Assets\";\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\nimport Stat from \"../../Stat\";\nimport { ElementToReactionKeys } from \"../../StatData\";\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\nimport Character from \"../Character\";\nimport DamageOptionsAndCalculation from \"./DamageOptionsAndCalculation\";\n\nexport default function CharacterTalentPane(props) {\n  let { character, character: { characterKey, levelKey, constellation }, editable, setState, setOverride, newBuild, equippedBuild } = props\n\n  let ascension = Character.getAscension(levelKey)\n\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\n\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\n\n  let skillDisplayProps = { ...props, ascension }\n\n  return <>\n    <Row><Col xs={12} className=\"mb-2\">\n      <DamageOptionsAndCalculation {...{ character, setState, setOverride, newBuild, equippedBuild }} />\n    </Col></Row>\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\n    <Row>\n      {/* auto, skill, burst */}\n      {skillBurstList.map(([tKey, tText]) =>\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\n          <SkillDisplayCard\n            {...skillDisplayProps}\n            talentKey={tKey}\n            subtitle={tText}\n          />\n        </Col>)}\n      {Character.getTalent(characterKey, \"sprint\", false) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\n        <SkillDisplayCard\n          {...skillDisplayProps}\n          talentKey=\"sprint\"\n          subtitle=\"Alternative Sprint\"\n        />\n      </Col>}\n    </Row>\n    <Row>\n      {/* passives */}\n      {passivesList.map(([tKey, tText, asc]) => {\n        let enabled = ascension >= asc\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\n          <SkillDisplayCard\n            {...skillDisplayProps}\n            talentKey={tKey}\n            subtitle={tText}\n          />\n        </Col>\n      })}\n    </Row>\n    <Row>\n      <Col>\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\n      </Col>\n    </Row>\n    <Row className=\"mb-n2\">\n      {/* constellations */}\n      {[...Array(6).keys()].map(i => {\n        let tKey = `constellation${i + 1}`\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\n          <SkillDisplayCard\n            {...skillDisplayProps}\n            talentKey={tKey}\n            subtitle={`Contellation Lv. ${i + 1}`}\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\n          />\n        </Col>\n      })}\n    </Row>\n  </>\n}\nconst ReactionComponents = {\n  superconduct_hit: SuperConductCard,\n  electrocharged_hit: ElectroChargedCard,\n  overloaded_hit: OverloadedCard,\n  pyro_swirl_hit: SwirlCard,\n  shattered_hit: ShatteredCard,\n  crystalize_hit: CrystalizeCard,\n}\nfunction ReactionDisplay({ character: { characterKey }, newBuild, equippedBuild }) {\n  const build = newBuild ? newBuild : equippedBuild\n  const charEleKey = Character.getElementalKey(characterKey)\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\n  if (!eleInterArr.includes(\"shattered_hit\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shattered_hit\")\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n    <Card.Body className=\"px-3 py-2\">\n      <Row className=\"mb-n2\">\n        {eleInterArr.map(key => {\n          const Ele = ReactionComponents[key]\n          if (!Ele) return null\n          return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele stats={build?.finalStats} /></Col>\n        })}\n      </Row>\n    </Card.Body>\n  </Card>\n}\nfunction SuperConductCard({ stats }) {\n  const sKey = \"superconduct_hit\"\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\n    <span className=\"text-superconduct\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\n  </Card.Body></Card>\n}\nfunction ElectroChargedCard({ stats }) {\n  const sKey = \"electrocharged_hit\"\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\n    <span className=\"text-electrocharged\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\n  </Card.Body></Card>\n}\nfunction OverloadedCard({ stats }) {\n  const sKey = \"overloaded_hit\"\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\n    <span className=\"text-overloaded\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\n  </Card.Body></Card>\n}\n\nconst swirlEleToDisplay = {\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>\n}\nfunction SwirlCard({ stats }) {\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\n  const sKey = `${ele}_swirl_hit`\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-0\">\n    <DropdownButton size=\"sm\" title={swirlEleToDisplay[ele]} className=\"d-inline-block\">\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\n    </DropdownButton>\n    <span className={`text-${ele} p-2`}> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\n  </Card.Body></Card>\n}\nfunction ShatteredCard({ stats }) {\n  const sKey = \"shattered_hit\"\n  const information = <OverlayTrigger\n    placement=\"top\"\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\n  >\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\n  </OverlayTrigger>\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\n    <span className=\"text-shattered\">{Stat.getStatName(sKey)} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\n  </Card.Body></Card>\n}\nfunction CrystalizeCard({ stats }) {\n  const sKey = \"crystalize_hit\"\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\n    <span className=\"text-crystalize\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\n  </Card.Body></Card>\n}\n\nfunction modifiersToFields(modifiers, finalStats = {}) {\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\n    text: Stat.getStatName(mStatKey),\n    variant: Stat.getStatVariant(mStatKey),\n    value: Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0),\n    formulaText: <span>{Object.entries(modifier ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, finalStats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)}</span>,\n    fixed: Stat.fixedUnit(mStatKey),\n    unit: Stat.getStatUnit(mStatKey)\n  }))\n}\nfunction statsToFields(stats, finalStats = {}) {\n  return Object.entries(stats).map(([statKey, statVal]) =>\n    statKey === \"modifiers\" ? modifiersToFields(statVal, finalStats) : {\n      text: Stat.getStatName(statKey),\n      variant: Stat.getStatVariant(statKey),\n      value: statVal,\n      fixed: Stat.fixedUnit(statKey),\n      unit: Stat.getStatUnit(statKey)\n    }\n  ).flat()\n}\n\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\nfunction SkillDisplayCard(props) {\n  let { character, character: { characterKey, constellation, talentLevelKeys, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\n  let { onClickTitle = null, ...otherProps } = props\n  let build = newBuild ? newBuild : equippedBuild\n  let header = null\n  let infuseBtn = null\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\n    let eleKey = Character.getElementalKey(characterKey)\n    infuseBtn = <Col xs=\"auto\">\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\n        {autoInfused ?\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\n          : \"Not Infused\"}\n      </Button>\n    </Col>\n  }\n\n  let talentLvlKey = 0\n  if (talentKey in talentLevelKeys) {\n    const talentLvlKeyRaw = talentLevelKeys[talentKey]\n    const levelBoost = Character.getTalentLevelBoost(characterKey, talentKey, constellation)\n    talentLvlKey = talentLvlKeyRaw + levelBoost\n    if (editable) {\n      const setTalentLevel = (tKey, tLvl) => setState(state => {\n        const stateTalentLevelKeys = state.talentLevelKeys || {}\n        stateTalentLevelKeys[tKey] = tLvl\n        return { talentLevelKeys: stateTalentLevelKeys }\n      })\n      header = <Card.Header>\n        <Row>\n          <Col xs=\"auto\">\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\n            </DropdownButton>\n          </Col>\n          {infuseBtn}\n        </Row>\n      </Card.Header>\n    } else {\n      header = <Card.Header>\n        <Row>\n          <Col xs=\"auto\">\n            {`Talent Level: ${talentLvlKey + 1}`}\n          </Col>\n          <Col xs=\"auto\">\n            {infuseBtn}\n          </Col>\n        </Row>\n      </Card.Header>\n    }\n  }\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\n  const statsEle = talentStats && <Row><Col>\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\n      <ListGroup className=\"text-white\" variant=\"flush\">\n        {statsToFields(talentStats, build?.finalStats).map((field, i) =>\n          <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\n      </ListGroup>\n    </Card>\n  </Col></Row>\n\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\n    {header}\n    <Card.Body>\n      <Row className={`d-flex flex-row mb-2 ${(editable && onClickTitle) ? \"cursor-pointer\" : \"\"}`} onClick={onClickTitle} >\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\n        </Col>\n        <Col className=\"flex-grow-1\">\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\n        </Col>\n      </Row>\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\n        if (typeof section === \"function\")\n          section = section(constellation, ascension)\n        if (!section) return null\n\n        let talentText = section.text\n        if (typeof talentText === \"function\")\n          talentText = talentText(talentLvlKey, build.finalStats, character)\n        let fields = section.fields || []\n\n        let conditional = section.conditional;\n        if (typeof conditional === \"function\")\n          conditional = conditional(talentLvlKey, constellation, ascension)\n        let conditionalEle = null\n        if (conditional) {\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\n          let conditionalFields = []\n          if (conditionalNum) {\n            let conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\n            conditionalFields = [...Character.getTalentConditionalFields(conditional, conditionalNum, []), ...statsToFields(conditionalStats, build?.finalStats)]\n          }\n          let setConditional = (conditionalNum) => setState(state =>\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\n          conditionalEle = <Col xs={12}>\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\n              <Card.Header>\n                <ConditionalSelector disabled={!editable}\n                  conditional={conditional}\n                  conditionalNum={conditionalNum}\n                  setConditional={setConditional}\n                  defEle={<span>{conditional.condition}</span>} />\n              </Card.Header>\n              <ListGroup className=\"text-white\" variant=\"flush\">\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i} index={i} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\n              </ListGroup>\n            </Card>\n          </Col>\n        }\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\n          <div className=\"mb-2\">{talentText}</div>\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\n          </ListGroup>}\n        </Col>{conditionalEle}</Row>\n      })}\n      {statsEle}\n    </Card.Body>\n  </Card>\n}\nfunction FieldDisplay({ character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild }) {\n  let build = newBuild ? newBuild : equippedBuild\n  if (typeof field === \"function\")\n    field = field(constellation, ascension)\n  if (!field) return null\n\n  let fieldText = field.text\n  if (typeof fieldText === \"function\")\n    fieldText = fieldText?.(talentLvlKey, build.finalStats)\n\n  let fieldVariant = field.variant || \"\"\n  if (typeof fieldVariant === \"function\")\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats)\n\n  let fieldBasic = field.formulaText\n  if (typeof fieldBasic === \"function\")\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats)\n  if (fieldBasic)\n    fieldBasic = <OverlayTrigger\n      placement=\"top\"\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\n    >\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\n    </OverlayTrigger>\n\n  let fieldVal = null\n  if (field.value)\n    fieldVal = typeof field.value === \"function\" ? field.value?.(talentLvlKey, build.finalStats) : field.value\n  else if (typeof field.formula === \"function\")\n    fieldVal = field?.formula?.(talentLvlKey, build.finalStats)?.[0]?.(build.finalStats)\n\n  let fixedVal = field.fixed || 0\n  const unit = typeof field.unit === \"function\" ? field.unit?.(talentLvlKey, build.finalStats) : (field.unit ?? \"\")\n  //compareAgainstEquipped\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\n    let fieldEquippedVal = field.value ? field.value : field.formula?.(talentLvlKey, equippedBuild.finalStats)?.[0]?.(equippedBuild.finalStats)\n\n    if (typeof fieldEquippedVal === \"function\")\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats)?.toFixed?.(fixedVal))\n    let diff = fieldVal - fieldEquippedVal\n    fieldVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\n  }\n\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\n    <div>\n      <span><b>{fieldText}</b>{fieldBasic}</span>\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) || fieldVal}{unit}</span>\n    </div>\n  </ListGroup.Item>\n}\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, Image, Nav, Tab } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\nimport Row from 'react-bootstrap/Row';\nimport Artifact from '../Artifact/Artifact';\nimport WIPComponent from '../Components/WIPComponent';\nimport { WeaponLevelKeys } from '../Data/WeaponData';\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\nimport { deepClone } from '../Util/Util';\nimport Weapon from '../Weapon/Weapon';\nimport Character from './Character';\nimport CharacterDatabase from './CharacterDatabase';\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\n\nconst CustomMenu = React.forwardRef(\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n    return (\n      <div\n        ref={ref}\n        style={{ style, minWidth: \"25rem\" }}\n        className={className}\n        aria-labelledby={labeledBy}\n      >\n        <Row>\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\n        </Row>\n      </div>\n    );\n  },\n);\n\nexport default class CharacterDisplayCard extends React.Component {\n  constructor(props) {\n    super(props)\n    DatabaseInitAndVerify();\n    this.state = CharacterDisplayCard.getInitialState()\n    const { characterKey } = props\n    if (characterKey) {\n      const char = CharacterDatabase.get(characterKey) ?? { characterKey, weapon: CharacterDisplayCard.getIntialWeapon(characterKey) }\n      this.state = { ...this.state, ...char }\n    }\n  }\n\n  static initialState = {\n    characterKey: \"\",//the game character this is based off\n    levelKey: \"L1\",//combination of level and ascension\n    hitMode: \"hit\",\n    reactionMode: null,\n    equippedArtifacts: {},\n    artifactConditionals: [],\n    baseStatOverrides: {},//overriding the baseStat\n    weapon: {\n      key: \"\",\n      levelKey: WeaponLevelKeys[0],\n      refineIndex: 0,\n      overrideMainVal: 0,\n      overrideSubVal: 0,\n      conditionalNum: 0,\n    },\n    talentLevelKeys: {\n      auto: 0,\n      skill: 0,\n      burst: 0,\n    },\n    autoInfused: false,\n    talentConditionals: [],\n    constellation: 0,\n    compareAgainstEquipped: false//note: needs to be deleted when saving\n  }\n  static getIntialWeapon = (characterKey) => {\n    let weapon = deepClone(this.initialState.weapon)\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\n    return weapon\n  }\n\n  static getInitialState = () => deepClone(CharacterDisplayCard.initialState)\n  //UI will not update if the character is updated in DB. Components will have to call this to update this UI.\n  forceUpdateComponent = () => {\n    if (this.state.characterKey)\n      this.setState(CharacterDatabase.get(this.state.characterKey))\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\n  }\n  setCharacterKey = (characterKey) => {\n    let state = CharacterDisplayCard.getInitialState()\n    let char = CharacterDatabase.get(characterKey)\n    if (char) state = { ...state, ...char }\n    else {\n      state = { ...state, characterKey, weapon: CharacterDisplayCard.getIntialWeapon(characterKey) }\n      this.updateCharacter(this.state)\n    }\n    this.setState(state)\n    this.props?.setCharacterKey?.(characterKey)\n  }\n\n  setLevelKey = (levelKey) =>\n    this.setState({ levelKey })\n\n  setOverride = (statKey, value) => this.setState(state => {\n    let baseStatOverrides = state.baseStatOverrides\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\n    if (baseStatVal === value) {\n      delete baseStatOverrides[statKey]\n      return { baseStatOverrides }\n    } else {\n      baseStatOverrides[statKey] = value\n      return { baseStatOverrides }\n    }\n  })\n\n  setConstellation = (constellation) => this.setState({ constellation })\n  componentDidMount() {\n    Promise.all([\n      Character.getCharacterDataImport(),\n      Weapon.getWeaponDataImport(),\n      Artifact.getDataImport(),\n    ]).then(() => this.forceUpdate())\n  }\n  updateCharacter(state) {\n    state = deepClone(state)\n    delete state.compareAgainstEquipped\n    CharacterDatabase.updateCharacter(state)\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.characterKey !== this.props.characterKey && this.props.characterKey !== this.state.characterKey)\n      this.setCharacterKey(this.props.characterKey)\n    if (this.props.editable && this.state.characterKey) {\n      //save this.state as character to character db.\n      this.updateCharacter(this.state)\n    }\n  }\n  render() {\n    let { footer, newBuild, editable, onClose, tabName } = this.props\n    let character = this.state\n    //transfer the hitmode/reactions over \n    if (newBuild?.finalStats) {\n      newBuild = deepClone(newBuild)\n      newBuild.finalStats.hitMode = character.hitMode;\n      newBuild.finalStats.reactionMode = character.reactionMode;\n    }\n\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\n    let equippedBuild = Character.calculateBuild(this.state)\n    let HeaderIconDisplay = characterKey ? <span >\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\n    </span> : <span>Select a Character</span>\n    const commonPaneProps = { character, newBuild, equippedBuild: !newBuild || compareAgainstEquipped ? equippedBuild : undefined, editable, setState: u => this.setState(u), setOverride: this.setOverride, forceUpdate: this.forceUpdateComponent }\n    // main CharacterDisplayCard\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\n      <Card.Header>\n        <Row>\n          <Col xs={\"auto\"} className=\"mr-auto\">\n            {/* character selecter/display */}\n            {editable ? <ButtonGroup>\n              <Dropdown as={ButtonGroup}>\n                <DropdownToggle as={Button}>\n                  {HeaderIconDisplay}\n                </DropdownToggle>\n                <Dropdown.Menu as={CustomMenu}>\n                  {Character.getAllCharacterKeys().map(charKey =>\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\n                      <span >\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\n                      </span>\n                    </Dropdown.Item>)}\n                </Dropdown.Menu>\n              </Dropdown>\n              <DropdownButton as={ButtonGroup} disabled={!characterKey} title={\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\n              }>\n                <Dropdown.ItemText>\n                  <span>Select Base Stat Template</span>\n                </Dropdown.ItemText>\n                {Character.getlevelKeys().map(lvlKey =>\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\n                  </Dropdown.Item>)}\n              </DropdownButton>\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"characterLevel\")}</span>}\n          </Col>\n          {/* Compare against new build toggle */}\n          {newBuild ? <Col xs=\"auto\">\n            <ButtonGroup>\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\n                <small>Show New artifact Stats</small>\n              </Button>\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\n                <small>Compare against equipped artifact</small>\n              </Button>\n            </ButtonGroup>\n          </Col> : null}\n          <Col xs=\"auto\" >\n            <Button variant=\"danger\" onClick={onClose}>\n              <FontAwesomeIcon icon={faTimes} /></Button>\n          </Col>\n        </Row>\n      </Card.Header>\n      {Boolean(characterKey) && <Card.Body>\n        <Tab.Container defaultActiveKey={tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\")} mountOnEnter={true} unmountOnExit={true}>\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\n            <Nav.Item >\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\n            </Nav.Item>\n            {newBuild ? <Nav.Item>\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\n            </Nav.Item> : null}\n            <Nav.Item>\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              {(process.env.NODE_ENV !== \"development\" && !Character.hasTalentPage(characterKey)) ?\n                <WIPComponent>\n                  <Nav.Link eventKey=\"talent\" disabled>Talents <Badge variant=\"warning\">WIP</Badge></Nav.Link>\n                </WIPComponent> :\n                <Nav.Link eventKey=\"talent\">Talents</Nav.Link>\n              }\n            </Nav.Item>\n            <Nav.Item>\n              <WIPComponent>\n                <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\n              </WIPComponent>\n            </Nav.Item>\n          </Nav>\n          <Tab.Content>\n            <Tab.Pane eventKey=\"character\">\n              <CharacterOverviewPane\n                setConstellation={this.setConstellation}\n                {...commonPaneProps}\n              />\n            </Tab.Pane>\n            <Tab.Pane eventKey=\"artifacts\" >\n              <CharacterArtifactPane {...{ ...commonPaneProps, newBuild: undefined, equippedBuild, }} />\n            </Tab.Pane>\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\n              <CharacterArtifactPane {...commonPaneProps} />\n            </Tab.Pane> : null}\n            <Tab.Pane eventKey=\"talent\">\n              <CharacterTalentPane {...commonPaneProps} />\n            </Tab.Pane>\n          </Tab.Content>\n        </Tab.Container>\n      </Card.Body>}\n      {footer && <Card.Footer>\n        {footer}\n      </Card.Footer>}\n    </Card>)\n  }\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"children\", \"type\", \"name\", \"value\", \"onChange\"]);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    if (!onChange) {\n      return;\n    }\n\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive && onChange) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/React.createElement(ButtonGroup, _extends({}, controlledProps, {\n    ref: ref,\n    toggle: true\n  }), map(children, function (child) {\n    var values = getValues();\n    var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n\n    var handler = function handler(e) {\n      return handleToggle(childVal, e);\n    };\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      type: type,\n      name: child.name || name,\n      checked: values.indexOf(childVal) !== -1,\n      onChange: chainFunction(childOnChange, handler)\n    });\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;","import { Container } from \"react-bootstrap\";\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\nimport '../StatDependency'\nexport default function TestDisplay() {\n  DatabaseInitAndVerify()\n  return <Container>\n    <CharacterDisplayCard editable characterKey=\"amber\" tabName=\"talent\" />\n  </Container>\n}\n","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\nfunction getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \n}\nfunction getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\nconst loadFromLocalStorage = (key) => {\n  let data = localStorage.getItem(key)\n  if (!data) return null\n  return JSON.parse(data)\n}\nconst saveToLocalStorage = (key, obj) =>\n  localStorage.setItem(key, JSON.stringify(obj));\nconst deepClone = (obj) =>\n  JSON.parse(JSON.stringify(obj))\n\nconst closeEnoughFloat = (a, b) =>\n  Math.abs(a - b) <= 0.101\n\nconst closeEnoughInt = (a, b) =>\n  Math.abs(a - b) <= 1\nconst clamp = (val, low, high) => {\n  if (val < low) return low;\n  if (val > high) return high;\n  return val\n}\nconst getArrLastElement = (arr) =>\n  arr.length ? arr[arr.length - 1] : null\n\nconst clamp01 = (val) => clamp(val, 0, 1)\nconst clampPercent = (val) => clamp(val, 0, 100)\n\n//use to pretty print timestamps, or anything really.\nfunction strPadLeft(string, pad, length) {\n  return (new Array(length + 1).join(pad) + string).slice(-length);\n}\n\n//fuzzy compare strings. longer the distance, the higher the mismatch.\nfunction hammingDistance(str1, str2) {\n  var dist = 0;\n  str1 = str1.toLowerCase();\n  str2 = str2.toLowerCase();\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\n    let match = true\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\n      match = false\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\n      match = true\n    if (!match) dist++\n  }\n  return dist;\n}\n\n//multiplies every numberical value in the obj by a multiplier.\nfunction objMultiplication(obj, multi) {\n  Object.keys(obj).forEach(prop => {\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\n  })\n}\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\nconst getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\nexport {\n  getRandomInt,\n  getRandomIntInclusive,\n  getRandomArbitrary,\n  getRandomElementFromArray,\n  loadFromLocalStorage,\n  saveToLocalStorage,\n  deepClone,\n  closeEnoughFloat,\n  closeEnoughInt,\n  clamp,\n  clamp01,\n  clampPercent,\n  getArrLastElement,\n  strPadLeft,\n  hammingDistance,\n  objMultiplication,\n  getObjectKeysRecursive\n}","import { StatData } from \"./StatData\"\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\n\nexport default class Stat {\n  //do not instantiate.\n  constructor() {\n    if (this instanceof Stat)\n      throw Error('A static class cannot be instantiated.');\n  }\n  static getStatName = (key, defVal = \"\") =>\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\n  static getStatNamePretty = (key, defVal = \"\") =>\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\n  static getStatNameRaw = (key, defVal = \"\") =>\n    StatData[key]?.name || defVal\n  static getStatNameWithPercent = (key, defVal = \"\") => {\n    let name = this.getStatName(key, defVal)\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\n      name += \"%\"\n    return name;\n  }\n  static getStatVariant = (key, defVal = \"\") =>\n    StatData[key]?.variant || defVal\n  static getStatUnit = (key, defVal = \"\") =>\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\n\n  static fixedUnit = (key) => {\n    if (StatData[key]?.unit === \"multi\") return 3\n    let unit = Stat.getStatUnit(key)\n    return unit === \"%\" ? 1 : 0\n  }\n  static printStat = (statKey, stats) =>\n    f({ stats, expand: false }, statKey)\n\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\n    return statList.filter(key => keys.has(key))\n  }\n\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\n    if (typeof FormulaText?.[statKey] === \"function\")\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\n    else\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\n  }\n}\n//generate html tags based on tagged variants of the statData\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\n\nfunction f(options, statKey) {\n  let { stats, expand = true } = options\n  if (!stats) return\n  if (expand && FormulaText?.[statKey])\n    return <span>( {FormulaText[statKey](options)} )</span>\n  let statName = Stat.getStatNamePretty(statKey)\n  let statUnit = Stat.getStatUnit(statKey)\n  let fixedUnit = Stat.fixedUnit(statKey)\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\n}\n\nexport const FormulaText = {\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\n\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\n\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\n\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\n\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\n}\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\n})\n\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\n    if (o.stats[`${ele}_enemyImmunity`])\n      return <span>0 (immune)</span>\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\n  }\n})\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\n    })\n\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} + {f(o, `final_${move}_critRate_`)} </span>\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\n\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\n  })\n})\n\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\n  if (variants.length === 1) {\n    const [ ele ] = variants\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>  \n  } else {\n    variants.forEach(ele => {\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>  \n    })    \n  }\n})\n\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\n      })\n    })\n  })\n})\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import Artifact from \"../Artifact/Artifact\";\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\nimport ElementalData from \"../Data/ElementalData\";\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\nimport { GetDependencies } from \"../StatDependency\";\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\nimport { deepClone } from \"../Util/Util\";\nimport Weapon from \"../Weapon/Weapon\";\nimport CharacterDatabase from \"./CharacterDatabase\";\n\nexport default class Character {\n  //do not instantiate.\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\n  static getCharacterDataImport = () => CharacterDataImport\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\n    let { characterKey, levelKey } = character\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return this.getLevel(levelKey)\n    if (statKey.includes(\"enemyRes_\")) return 10\n    if (statKey in characterStatBase) return characterStatBase[statKey]\n    let characterObj = this.getCDataObj(characterKey)\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\n    return defVal\n  }\n\n  static getCDataObj = (charKey) => CharacterData[charKey];\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\n\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\n  static getElementalKeys = () => Object.keys(ElementalData)\n  static getElementalKeysWithoutPhysical = () => this.getElementalKeys().filter(e => e !== \"physical\")\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\n\n  //LEVEL\n  static getlevelKeys = () => Object.keys(LevelsData)\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\n\n  //SPECIALIZED STAT\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\n  //ASSETS\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\n\n  //talents\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\n\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\n    //so far we only get level boost from constellations, so only burst and skills.\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\n    let talents = this.getCDataObj(characterKey)?.talent || {}\n    for (let i = 1; i <= constellation; i++) {\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\n      if (boostEntry) return boostEntry[1]\n    }\n    return defVal\n  }\n\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\n  static getTalentDocumentSections = (charKey, talentKey, defVal = []) => {\n    const character = CharacterDatabase.get(charKey);\n    if (!character) return defVal\n    const { constellation = 0, levelKey = Object.keys(LevelsData)[0] } = character\n    const ascension = Character.getAscension(levelKey)\n    return this.getTalentDocument(charKey, talentKey).map(section => typeof section === \"function\" ? section(constellation, ascension) : section)\n  }\n  static getTalentField = (character, talentKey, sectionIndex, fieldIndex, defVal = {}) => {\n    if (!character) return defVal\n    const { constellation = 0, levelKey = Object.keys(LevelsData)[0] } = character\n    const ascension = Character.getAscension(levelKey)\n    const field = this.getTalentDocumentSections(character.characterKey, talentKey)?.[sectionIndex]?.fields?.[fieldIndex]\n    if (!field) return defVal\n    return typeof field === \"function\" ? field(constellation, ascension) : field\n  }\n  static getTalentFieldValue = (field, key, talentKey, stats = {}, defVal = \"\") => {\n    if (!field?.[key]) return defVal\n    return typeof field?.[key] === \"function\" ? field[key](stats.talentLevelKeys[talentKey], stats) : field[key]\n  }\n\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\n    let stats = this.getTalent(charKey, talentKey)?.stats\n    if (typeof stats === \"function\")\n      return stats(constellation, ascension)\n    return stats || defVal\n  }\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\n    let talents = this.getCDataObj(charKey)?.talent || {}\n    let statsArr = []\n    Object.keys(talents).forEach(talentKey => {\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\n      if (stats) statsArr.push(stats)\n    })\n    return statsArr\n  }\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\n    const sections = this.getTalentDocumentSections(charKey, talentKey)\n    let cond = null\n    for (const section of sections) {\n      let tempCond = section.conditional\n      if (typeof tempCond === \"function\")\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\n      if (tempCond?.conditionalKey === conditionalKey) {\n        cond = tempCond\n        break;\n      }\n    }\n    return cond || defVal\n  }\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\n    if (!conditionalNum || !conditional) return defVal\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\n    if (!stacks) return defVal\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\n  }\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\n    if (!conditionalNum || !conditional) return defVal\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\n    return fields || defVal\n  }\n\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\n\n  //look up the formula, and generate the formulaPath to send to worker.\n  static getFormulaPath(characterKey, talentKey, formula) {\n    const formulaDB = this.getCDataObj(characterKey)?.formula\n    if (!formulaDB) return\n    let formulaKey\n    if (talentKey === \"auto\") {\n      for (const tk of [\"normal\", \"charged\", \"plunging\"]) {\n        ([formulaKey,] = Object.entries(formulaDB?.[tk] ?? {}).find(([, value]) => value === formula) ?? [])\n        if (formulaKey) {\n          talentKey = tk\n          break;\n        }\n      }\n    } else ([formulaKey,] = Object.entries(formulaDB?.[talentKey] ?? {}).find(([, value]) => value === formula) ?? [])\n    if (!formulaKey) return\n    return { characterKey, talentKey, formulaKey }\n  }\n\n\n  static hasTalentPage = (characterKey) => Boolean(Character.getCDataObj(characterKey)?.talent)\n\n  static getDisplayStatKeys = (character, defVal = { basicKeys: [] }) => {\n    if (!character) return defVal\n    const { characterKey } = character\n    let eleKey = Character.getElementalKey(characterKey)\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\n    const isAutoElemental = Character.isAutoElemental(characterKey)\n    const isAutoInfusable = Character.isAutoInfusable(characterKey)\n    if (!isAutoElemental)\n      basicKeys.push(\"physical_dmg_\")\n\n    //show elemental interactions\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\n    const weaponTypeKey = this.getWeaponTypeKey(characterKey)\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\n    if (this.hasTalentPage(characterKey)) {\n      const charFormulas = {}\n      Object.keys(Character.getCDataObj(characterKey)?.talent ?? {}).forEach(talentKey =>\n        Character.getTalentDocumentSections(characterKey, talentKey)?.forEach((section, sectionIndex) =>\n          section?.fields?.forEach((field, fieldIndex) =>\n            (field?.formula || this.getTalentField(character, talentKey, sectionIndex, fieldIndex)?.formula) && (charFormulas[talentKey] = [...(charFormulas[talentKey] ?? []), {\n              talentKey,\n              sectionIndex,\n              fieldIndex\n            }]))))\n      return { basicKeys, ...charFormulas, transReactions }\n    } else {\n      //generic average hit parameters.\n      const genericAvgHit = []\n      if (!isAutoElemental) //add phy auto + charged + physical \n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\n\n      if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\n        genericAvgHit.push(`${eleKey}_normal_avgHit`, `${eleKey}_charged_avgHit`)\n      else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\n      }\n      //show skill/burst \n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\n\n      //add reactions.\n      if (eleKey === \"pyro\") {\n        const reactions = []\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\n        genericAvgHit.push(...reactions)\n      } else if (eleKey === \"cryo\")\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\n      else if (eleKey === \"hydro\")\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\n\n      return { basicKeys, genericAvgHit, transReactions }\n    }\n  }\n\n  static hasOverride = (character, statKey) => {\n    if (statKey === \"finalHP\")\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\n    else if (statKey === \"finalDEF\")\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\n    else if (statKey === \"finalATK\")\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\n  }\n\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\n    else return this.getBaseStatValue(character, statKey, defVal)\n  }\n\n  //equipment, with consideration on swapping equipped.\n  static equipArtifacts = (characterKey, artifactIds) => {\n    let character = CharacterDatabase.get(characterKey)\n    if (!character) return;\n    let artIdsOnCharacter = character.equippedArtifacts;\n    let artIdsNotOnCharacter = artifactIds\n\n    //swap, by slot\n    Artifact.getSlotKeys().forEach(slotKey => {\n      let artNotOnChar = ArtifactDatabase.get(artIdsNotOnCharacter?.[slotKey])\n      if (artNotOnChar.location === characterKey) return; //it is already equipped\n      let artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\n      let notCharLoc = (artNotOnChar?.location || \"\")\n      //move current art to other char\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\n      //move current art to other char\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\n      //move other art to current char\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\n    })\n    //move other art to current char \n    character.equippedArtifacts = {}\n    Object.entries(artifactIds).forEach(([key, artid]) =>\n      character.equippedArtifacts[key] = artid)\n    CharacterDatabase.updateCharacter(character);\n  }\n  static remove(characterKey) {\n    let character = CharacterDatabase.get(characterKey)\n    if (character.equippedArtifacts)\n      Object.values(character.equippedArtifacts).forEach(artid =>\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\n    CharacterDatabase.remove(characterKey)\n  }\n\n  static calculateBuild = (character) => {\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\n  }\n\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\n    let setToSlots = Artifact.setToSlots(artifacts)\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\n\n    let stats = deepClone(initialStats)\n    //add artifact and artifactsets\n    Object.values(artifacts).forEach(art => {\n      if (!art) return\n      //main stats\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\n      //substats\n      art.substats.forEach((substat) =>\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\n    })\n    //setEffects\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\n    //setEffects conditionals\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\n    })\n\n    let dependencies = GetDependencies(stats?.modifiers)\n    PreprocessFormulas(dependencies, stats).formula(stats)\n    return {\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\n      setToSlots,\n      finalStats: stats,\n      artifactConditionals\n    }\n  }\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\n    if (key === \"modifiers\") {\n      initialStats.modifiers = initialStats.modifiers ?? {}\n      for (const [statKey, modifier] of Object.entries(val)) {\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\n        for (const [mkey, multiplier] of Object.entries(modifier))\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\n      }\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\n  })\n\n  static calculateCharacterWithWeaponStats = (character) => {\n    character = deepClone(character)\n    const { characterKey, levelKey, hitMode, autoInfused, reactionMode, talentLevelKeys, constellation, talentConditionals = [] } = character\n    const ascension = Character.getAscension(levelKey)\n\n    //generate the initalStats obj with data from Character & overrides\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\n    initialStats.characterEle = this.getElementalKey(characterKey);\n    initialStats.characterKey = characterKey\n    initialStats.hitMode = hitMode;\n    initialStats.autoInfused = autoInfused && Character.getCDataObj(characterKey)?.talent?.auto?.infusable\n    initialStats.reactionMode = reactionMode;\n    initialStats.talentConditionals = talentConditionals\n    initialStats.weaponType = this.getWeaponTypeKey(characterKey)\n    initialStats.talentLevelKeys = talentLevelKeys;\n    initialStats.constellation = constellation\n    initialStats.ascension = ascension\n    for (const key in initialStats.talentLevelKeys)\n      initialStats.talentLevelKeys[key] += this.getTalentLevelBoost(character.characterKey, key, constellation);\n\n    //enemy stuff\n    Character.getElementalKeys().forEach(eleKey => {\n      let statKey = `${eleKey}_enemyRes_`\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\n      statKey = `${eleKey}_enemyImmunity`\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\n    })\n\n    //all the rest of the overrides\n    let overrides = character?.baseStatOverrides || {}\n    Object.entries(overrides).forEach(([statKey, val]) => {\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\n    })\n\n    //add specialized stat\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\n\n\n    //add stats from talentconditionals\n    talentConditionals.forEach(cond => {\n      const { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\n      const conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, initialStats.talentLevelKeys[talentKey], constellation, ascension)\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\n    })\n\n    //add stats from all talents\n    Character.getTalentStatsAll(characterKey, constellation, ascension).forEach(s => this.mergeStats(initialStats, s))\n\n    //add stats from weapons\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\n\n    return initialStats\n  }\n\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\nvar initiated = false\nvar characterDatabase = {};\n\nexport default class CharacterDatabase {\n  //do not instantiate.\n  constructor() {\n    if (this instanceof CharacterDatabase) throw Error('A static class cannot be instantiated.');\n  }\n  static isInvalid = (char) => !char || !char.characterKey || !char.levelKey\n  static getCharacterDatabase = () => deepClone(characterDatabase);\n  static getCharacterKeyList = () => Object.keys(characterDatabase);\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\n  static populateDatebaseFromLocalStorage = () => {\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\n    Object.keys(localStorage).filter(key => key.startsWith(\"char_\")).forEach(key => {\n      let [, characterKey] = key.split(\"char_\")\n      if (!characterDatabase[characterKey]) {\n        let character = loadFromLocalStorage(key);\n        if (!character) return;\n        characterDatabase[characterKey] = character;\n      }\n    })\n    initiated = true\n    return true\n  }\n  static updateCharacter = (char) => {\n    if (this.isInvalid(char)) return;\n    const dchar = deepClone(char)\n    saveToLocalStorage(`char_${char.characterKey}`, dchar);\n    characterDatabase[char.characterKey] = dchar;\n  }\n  static get = (characterKey) => characterDatabase?.[characterKey] ?? null\n\n  static remove = (characterKey) => {\n    delete characterDatabase[characterKey];\n    localStorage.removeItem(`char_${characterKey}`);\n  }\n  static getArtifactIDFromSlot = (characterKey, slotKey) =>\n    this.get(characterKey)?.equippedArtifacts?.[slotKey] ?? null\n\n  static equipArtifact = (characterKey, art) => {\n    const char = this.get(characterKey)\n    if (!char || !art || !art.slotKey) return\n    if (!char.equippedArtifacts) char.equippedArtifacts = {};\n    char.equippedArtifacts[art.slotKey] = art.id;\n    this.updateCharacter(char)\n  }\n  static unequipArtifactOnSlot = (characterKey, slotKey) => {\n    const char = this.get(characterKey)\n    if (!char || !slotKey) return\n    if (!char?.equippedArtifacts?.[slotKey]) return;\n    char.equippedArtifacts[slotKey] = \"\";\n    this.updateCharacter(char)\n  }\n  static equipArtifactBuild = (characterKey, artifactIds) => {\n    const character = this.get(characterKey)\n    if (!character) return;\n    character.equippedArtifacts = artifactIds\n    CharacterDatabase.updateCharacter(character);\n  }\n  static unequipAllArtifacts = () => {\n    Object.values(characterDatabase).forEach(char => {\n      char.equippedArtifacts = {}\n      this.updateCharacter(char)\n    })\n  }\n  //helper function for testing\n  static clearDatabase = () => {\n    characterDatabase = {}\n    initiated = false\n  }\n}\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\n\nconst SlotIcon = {\n  flower: faBahai,\n  plume: faFeatherAlt,\n  sands: faHourglass,\n  goblet: faWineGlass,\n  circlet: faCrown\n}\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\nimport ElementalData from './ElementalData';\nlet ArtifactData = {}\nlet ArtifactDataImport = import('./Artifacts')\nArtifactDataImport.then(imp => {\n  ArtifactData = imp.default\n  ArtifactDataImport = null\n})\nconst ArtifactMainSlotKeys = [\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\",\n]\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_dmg_`))\n\nconst ArtifactStarsData = {\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\n};\n\nconst ArtifactMainStatsData = {\n  1: {\n    hp: [129, 178, 227, 275, 324],\n    atk: [8, 12, 15, 18, 21],\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\n    eleMas: [13, 17, 22, 27, 32],\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\n  },\n  2: {\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\n  },\n  3: {\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\n  },\n  4: {\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\n  },\n  5: {\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\n    critDMG_: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\n  }\n}\n\nconst ArtifactSubStatsData = {\n  hp: { 1: [24, 30], 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\n  hp_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\n  atk: { 1: [2], 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\n  atk_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\n  def: { 1: [2], 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\n  def_: { 1: [1.5, 1.8], 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\n  eleMas: { 1: [5, 6], 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\n  enerRech_: { 1: [1.3, 1.6], 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\n  critRate_: { 1: [0.8, 1], 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\n  critDMG_: { 1: [1.6, 1.9], 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\n}\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubStatsData).map(([key, obj]) =>\n  [key, {\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\n  }]))\n\nconst ArtifactSlotsData = {\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\n};\n\nexport {\n  ArtifactMainSlotKeys,\n  ArtifactSlotsData,\n  ArtifactData,\n  ArtifactDataImport,\n  ArtifactSubStatsData,\n  ArtifactSubstatsMinMax,\n  ArtifactStarsData,\n  ArtifactMainStatsData\n};\n","export default class ArtifactBase {\n  //do not instantiate.\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\n\n  //returns {setKey:[slotKey...]}\n  static setToSlots = (artifacts) => {\n    let setToSlots = {};\n    Object.entries(artifacts).forEach(([key, art]) => {\n      if (!art) return\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\n      else setToSlots[art.setKey] = [key]\n    })\n    return setToSlots\n  }\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport CharacterDatabase from '../Character/CharacterDatabase';\nimport SlotIcon from '../Components/SlotIcon';\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\nimport Stat from '../Stat';\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\nimport ArtifactBase from './ArtifactBase';\nimport ArtifactDatabase from './ArtifactDatabase';\n\nconst maxStar = 5\n\nexport default class Artifact {\n  //do not instantiate.\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\n\n  //SETS\n  static getDataImport = () => ArtifactDataImport\n  static getSetKeys = () => Object.keys(ArtifactData || {})\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\n  static getSetsByMaxStarEntries = (star) =>\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\n\n  //SETEFFECT\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\n  static getArtifactSetEffectsStats = (setToSlots) => {\n    let artifactSetEffect = []\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\n        Object.entries(value.stats).forEach(([key, statVal]) =>\n          artifactSetEffect.push({ key, statVal }))))\n    return artifactSetEffect\n  }\n  static getSetEffects = (setToSlots) => {\n    let artifactSetEffect = {}\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\n      if (setNumKeys.length)\n        artifactSetEffect[setKey] = setNumKeys\n    })\n    return artifactSetEffect\n  }\n\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\n    if (!setEffectText) return defVal\n    if (typeof setEffectText === \"function\")\n      return setEffectText(charFinalStats)\n    else if (setEffectText)\n      return setEffectText\n    return defVal\n  }\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\n\n  //SLOT\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\n  static getSlotIcon = (slotKey, defVal = \"\") =>\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\n\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\n    if (!slotKey) return defVal;\n    let name = this.getSlotName(slotKey)\n    if (!name) return defVal;\n    let slotIcon = this.getSlotIcon(slotKey)\n    if (!slotIcon) return defVal;\n    return (<span>{slotIcon} {name}</span>)\n  }\n  static splitArtifactsBySlot = (databaseObj) =>\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\n\n  //STARS\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\n\n  //MAIN STATS\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\n\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\n    let main = this.getMainStatValues(numStars, key)[level]\n    if (main) return main\n    else if (key?.includes(\"_dmg_\")) // because in the database its still stored as ele_dmg_\n      return this.getMainStatValue(\"ele_dmg_\", numStars, level, defVal)\n    return defVal\n  }\n\n  //SUBSTATS\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\n  static getSubstatAllMax = (statKey, numStars = maxStar, defVal = 0) => ArtifactSubstatsMinMax?.[statKey]?.max[numStars] ?? defVal\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\n  static subStatCloseEnough = (key, value1, value2) => {\n    if (Stat.getStatUnit(key) === \"%\")\n      return closeEnoughFloat(value1, value2)\n    else\n      return closeEnoughInt(value1, value2)\n  }\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\n  static rollsRemaining = (level, numStars) =>\n    Math.ceil((numStars * 4 - level) / 4);\n  static numberOfSubstatUnlocked = (state) =>\n    state.substats.reduce((sum, cur) =>\n      sum + (cur && cur.value ? 1 : 0), 0);\n  static getSubstatRollData = (subStatKey, numStars) => ArtifactSubStatsData?.[subStatKey]?.[numStars] ?? []\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\n    if (!rollData.length) return defVal\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\n      return defVal\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\n    let rolls = [];\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\n    if (!maxNumRoll) return defVal;\n    const rollOption = (val, arr) => {\n      if (arr.length) {\n        if (arr.length > maxNumRoll) return;\n        let sum = arr.reduce((accu, v) => accu + v, 0)\n        if (isFloat) {\n          if (sum - val >= 0.101) return\n          if (closeEnoughFloat(sum, val))\n            return rolls.push(arr);\n        } else {\n          if (sum - val > 1) return\n          if (closeEnoughInt(sum, val))\n            return rolls.push(arr);\n        }\n      }\n      rollData.slice().reverse().forEach(roll => {\n        if (!arr.length || arr[arr.length - 1] >= roll)\n          rollOption(subStatValue, [...arr, roll])\n      })\n    }\n    rollOption(subStatValue, [])\n    return rolls;\n  }\n  static getSubstatEfficiency = (subStatKey, rolls = []) => {\n    let len = rolls.length\n    let sum = rolls.reduce((a, c) => a + c, 0)\n    let max = this.getSubstatAllMax(subStatKey) * len\n    return max ? clampPercent((sum / max) * 100) : 0\n  }\n\n  //ARTIFACT IN GENERAL\n  static substatsValidation(state) {\n    let { numStars = 0, level = 0, substats = [] } = state\n    //calculate rolls for substats\n    for (const substat of substats) {\n      let { key, value } = substat\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\n      substat.rolls = rollArr[0] || []\n      if (rollArr.length > 1) substat.rollArr = rollArr\n      substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\n    }\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\n    state.currentEfficiency = currentEfficiency\n    state.maximumEfficiency = maximumEfficiency\n    //artifact validation logic\n    let errMsgs = []\n    for (const substat of substats)\n      if (!substat.rolls?.length && substat.key && substat.value)\n        errMsgs.push(\"One of the substat is invalid.\")\n\n    //only show this error when all substats are \"valid\"\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\n\n    if (numStars) {\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\n        for (const substat of substats) {\n          let rollslen = substat.rolls?.length\n          if (!rollslen || !substat.rollArr) continue\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\n          if (moreRolls.length) {\n            substat.rolls = moreRolls[0]\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, substat.rolls)\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\n            state.currentEfficiency = currentEfficiency\n            state.maximumEfficiency = maximumEfficiency\n          }\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\n          if (currentNumOfRolls >= leastNumRolls) break;\n        }\n      }\n      if (currentNumOfRolls < leastNumRolls)\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\n      else {\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\n      }\n    }\n    return errMsgs\n  }\n  static getArtifactEfficiency(substats, numStars, level) {\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\n    // Relative to max star, so comparison between different * makes sense.\n    let totalPossbleRolls = Artifact.totalPossibleRolls(maxStar);\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\n    let statKeys = substats.filter(({ key }) => key).map(({ key }) => key)\n    let maxPerRoll = 100 * Math.max(...(statKeys.length === 4 ? statKeys : Object.keys(ArtifactSubstatsMinMax)).map(\n      key => Artifact.getSubstatAllMax(key, numStars) / Artifact.getSubstatAllMax(key)\n    ))\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * maxPerRoll) / totalPossbleRolls);\n    return { currentEfficiency, maximumEfficiency }\n  }\n\n  static setToSlots = ArtifactBase.setToSlots;\n\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\n    if (!conditionalNum) return defVal\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\n    if (!conditional) return defVal\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\n    if (!stacks) return defVal\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\n  }\n\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\n    let ArtifactSetEffectsObj = {};\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\n      let setEffect = {}\n      if (setObj.setEffects)\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\n        })\n      if (Object.keys(setEffect).length > 0)\n        ArtifactSetEffectsObj[setKey] = setEffect;\n    })\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\n      if (Object.keys(condStats).length > 0) {\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\n        Object.entries(condStats).forEach(([statKey, value]) =>\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\n      }\n    })\n    return ArtifactSetEffectsObj\n  }\n\n  //database manipulation\n  static equipArtifactOnChar(artifactId, characterKey) {\n    let art = ArtifactDatabase.get(artifactId);\n    if (!art) return;\n    let currentLocation = art.location;\n    let intendedLocation = (characterKey || \"\")\n    if (currentLocation === intendedLocation) return;\n    let slotKey = art.slotKey\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\n\n    //update artifact\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\n\n    //update Character\n    if (intendedLocation)\n      CharacterDatabase.equipArtifact(intendedLocation, art)\n\n    if (currentLocation) {\n      if (artifactToSwapWith)\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\n      else\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\n    }\n  }\n}\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { clamp } from \"./Util\";\n\nexport default class ConditionalsUtil {\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\n  static getConditionalNum(conditionals, srcKeyObj) {\n    let { srcKey, srcKey2 } = srcKeyObj\n    if (conditionals)\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\n  }\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\n    let { srcKey, srcKey2 } = srcKeyObj\n    if (!conditionals) conditionals = []\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\n    if (!conditionalNum && index >= 0) {\n      //setting conditionalNum to 0 deletes the element\n      conditionals.splice(index, 1);\n    } else if (!conditionalNum && index < 0) { //nothing to change\n      return conditionals\n    } else {\n      let newCond = { srcKey, conditionalNum }\n      if (srcKey2) newCond.srcKey2 = srcKey2\n      if (index >= 0)\n        conditionals[index] = newCond\n      else\n        conditionals.push(newCond)\n    }\n    return conditionals\n  }\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\n    if (Array.isArray(conditional)) {\n      //multiconditional\n      let selectedConditionalNum = conditionalNum\n      let selectedConditional = null\n      for (const curConditional of conditional) {\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\n        else {\n          selectedConditional = curConditional;\n          break;\n        }\n      }\n      if (!selectedConditional) return defVal\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\n      return [selectedConditional[fieldName], stacks]\n    } else {\n      //condtional with stacks\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\n      return [conditional[fieldName], stacks]\n    }\n  }\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\nvar initiated = false\nvar artifactDatabase = {};\nvar artIdIndex = 1;\nexport default class ArtifactDatabase {\n  //do not instantiate.\n  constructor() {\n    if (this instanceof ArtifactDatabase) {\n      throw Error('A static class cannot be instantiated.');\n    }\n  }\n  static isInvalid = (art) =>\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\n  static populateDatebaseFromLocalStorage = () => {\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\n      if (!artifactDatabase[id]) {\n        let art = loadFromLocalStorage(id)\n        if (!art) return;\n        if (this.isInvalid(art)) {\n          this.removeArtifactById(id);\n          return;\n        }\n        artifactDatabase[id] = art;\n      }\n    })\n    initiated = true\n    return true\n  }\n  static get = (id) => artifactDatabase[id] ?? null\n  static removeArtifact = (art) => {\n    this.removeArtifactById(art.id);\n  }\n  static updateArtifact = (art) => {\n    if (this.isInvalid(art)) return;\n    let id = art.id;\n    if (!id) {//if does not have id, generate ID\n      do {\n        id = `artifact_${artIdIndex++}`\n      } while (localStorage.getItem(id) !== null)\n      art.id = id\n    }\n    let dart = deepClone(art)\n    saveToLocalStorage(id, dart);\n    artifactDatabase[id] = dart;\n  }\n  static removeArtifactById = (artId) => {\n    delete artifactDatabase[artId];\n    localStorage.removeItem(artId);\n  }\n\n  static moveToNewLocation = (artid, location) => {\n    if (!artid) return;\n    let art = this.get(artid)\n    if (!art || art.location === location) return;\n    art.location = location;\n    this.updateArtifact(art);\n  }\n  static swapLocations = (artA, artB) => {\n    let locA = artA.location\n    let locB = artB.location\n    this.moveToNewLocation(artA.id, locB)\n    this.moveToNewLocation(artB.id, locA)\n  }\n  static swapLocationsById = (artAid, artBid) =>\n    this.swapLocations(this.get(artAid), this.get(artBid))\n  static unequipAllArtifacts = () => {\n    Object.values(artifactDatabase).forEach(art => {\n      art.location = \"\"\n      this.updateArtifact(art)\n    })\n  }\n  //helper function for testing\n  static clearDatabase = () => {\n    artifactDatabase = {}\n    initiated = false\n    artIdIndex = 1\n  }\n}","const ElementalData = {\n  physical: { name: \"Physical\" },\n  anemo: { name: \"Anemo\" },\n  geo: { name: \"Geo\" },\n  electro: { name: \"Electro\" },\n  hydro: { name: \"Hydro\" },\n  pyro: { name: \"Pyro\" },\n  cryo: { name: \"Cryo\" },\n  // dendro: { name: \"Dendro\" }\n}\nexport default ElementalData"],"sourceRoot":""}