{"version":3,"sources":["StatData.js","Data/WeaponData.js","Data/ArtifactData.js","Components/ConditionalSelector.js","DatabaseUtil.js","Data/CharacterData.js","Components/StatIcon.js","StatDependency.js","Assets/Weapons/Swords/Swords.js","Assets/Weapons/Swords/Weapon_Dull_Blade.png","Assets/Weapons/Swords/Weapon_Silver_Sword.png","Assets/Weapons/Swords/Weapon_Cool_Steel.png","Assets/Weapons/Swords/Weapon_Dark_Iron_Sword.png","Assets/Weapons/Swords/Weapon_Fillet_Blade.png","Assets/Weapons/Swords/Weapon_Harbinger_of_Dawn.png","Assets/Weapons/Swords/Weapon_Skyrider_Sword.png","Assets/Weapons/Swords/Weapon_Traveler's_Handy_Sword.png","Assets/Weapons/Swords/Weapon_Blackcliff_Longsword.png","Assets/Weapons/Swords/Weapon_Favonius_Sword.png","Assets/Weapons/Swords/Weapon_Iron_Sting.png","Assets/Weapons/Swords/Weapon_Lion's_Roar.png","Assets/Weapons/Swords/Weapon_Prototype_Rancour.png","Assets/Weapons/Swords/Weapon_Royal_Longsword.png","Assets/Weapons/Swords/Weapon_Sacrificial_Sword.png","Assets/Weapons/Swords/Weapon_The_Alley_Flash.png","Assets/Weapons/Swords/Weapon_The_Black_Sword.png","Assets/Weapons/Swords/Weapon_The_Flute.png","Assets/Weapons/Swords/Weapon_Sword_of_Descension.png","Assets/Weapons/Swords/festering_fang.png","Assets/Weapons/Swords/Weapon_Aquila_Favonia.png","Assets/Weapons/Swords/Weapon_Skyward_Blade.png","Assets/Weapons/Swords/summit_shaper.png","Assets/Weapons/Claymores/Claymores.js","Assets/Weapons/Claymores/Weapon_Waster_Greatsword.png","Assets/Weapons/Claymores/Weapon_Old_Merc's_Pal.png","Assets/Weapons/Claymores/Weapon_Bloodtainted_Greatsword.png","Assets/Weapons/Claymores/Weapon_Debate_Club.png","Assets/Weapons/Claymores/Weapon_Ferrous_Shadow.png","Assets/Weapons/Claymores/Weapon_Quartz.png","Assets/Weapons/Claymores/Weapon_Skyrider_Greatsword.png","Assets/Weapons/Claymores/Weapon_White_Iron_Greatsword.png","Assets/Weapons/Claymores/Weapon_Blackcliff_Slasher.png","Assets/Weapons/Claymores/Weapon_Favonius_Greatsword.png","Assets/Weapons/Claymores/Weapon_Lithic_Blade.png","Assets/Weapons/Claymores/Weapon_Prototype_Aminus.png","Assets/Weapons/Claymores/Weapon_Rainslasher.png","Assets/Weapons/Claymores/Weapon_Royal_Greatsword.png","Assets/Weapons/Claymores/Weapon_Serpent_Spine.png","Assets/Weapons/Claymores/Weapon_The_Bell.png","Assets/Weapons/Claymores/Weapon_Whiteblind.png","Assets/Weapons/Claymores/Weapon_Sacrificial_Greatsword.png","Assets/Weapons/Claymores/snow_tombed_starsilver.png","Assets/Weapons/Claymores/Weapon_Skyward_Pride.png","Assets/Weapons/Claymores/Weapon_Wolf's_Gravestone.png","Assets/Weapons/Claymores/Weapon_The_Unforged.png","Assets/Weapons/Polearms/Polearms.js","Assets/Weapons/Polearms/Weapon_Beginner's_Protector.png","Assets/Weapons/Polearms/Weapon_Iron_Point.png","Assets/Weapons/Polearms/Weapon_Black_Tassel.png","Assets/Weapons/Polearms/Weapon_Halberd.png","Assets/Weapons/Polearms/Weapon_White_Tassel.png","Assets/Weapons/Polearms/Weapon_Blackcliff_Pole.png","Assets/Weapons/Polearms/Weapon_Crescent_Pike.png","Assets/Weapons/Polearms/Weapon_Deathmatch.png","Assets/Weapons/Polearms/Weapon_Dragon's_Bane.png","Assets/Weapons/Polearms/Weapon_Lithic_Spear.png","Assets/Weapons/Polearms/Weapon_Prototype_Grudge.png","Assets/Weapons/Polearms/Weapon_Favonius_Lance.png","Assets/Weapons/Polearms/Weapon_Royal_Spear.png","Assets/Weapons/Polearms/dragonspine_spear.png","Assets/Weapons/Polearms/Weapon_Vortex_Vanquisher.png","Assets/Weapons/Polearms/Weapon_Primordial_Jade_Winged-Spear.png","Assets/Weapons/Polearms/Weapon_Skyward_Spine.png","Assets/Weapons/Bows/Bows.js","Assets/Weapons/Bows/Weapon_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Seasoned_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Ebony_Bow.png","Assets/Weapons/Bows/Weapon_Messenger.png","Assets/Weapons/Bows/Weapon_Raven_Bow.png","Assets/Weapons/Bows/Weapon_Recurve_Bow.png","Assets/Weapons/Bows/Weapon_Sharpshooter's_Oath.png","Assets/Weapons/Bows/Weapon_Slingshot.png","Assets/Weapons/Bows/Weapon_The_Stringless.png","Assets/Weapons/Bows/Weapon_Alley_Hunter.png","Assets/Weapons/Bows/Weapon_Blackcliff_Warbow.png","Assets/Weapons/Bows/Weapon_Compound_Bow.png","Assets/Weapons/Bows/Weapon_Favonius_Warbow.png","Assets/Weapons/Bows/Weapon_Prototype_Crescent.png","Assets/Weapons/Bows/Weapon_Royal_Bow.png","Assets/Weapons/Bows/Weapon_Rust.png","Assets/Weapons/Bows/Weapon_Sacrificial_Bow.png","Assets/Weapons/Bows/Weapon_The_Viridescent_Hunt.png","Assets/Weapons/Bows/Weapon_Skyward_Harp.png","Assets/Weapons/Bows/Weapon_Amos'_Bow.png","Assets/Weapons/Bows/dreams_of_dragonfell.png","Assets/Weapons/Catalysts/Catalysts.js","Assets/Weapons/Catalysts/Weapon_Apprentice's_Notes.png","Assets/Weapons/Catalysts/Weapon_Pocket_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Amber_Catalyst.png","Assets/Weapons/Catalysts/Weapon_Emerald_Orb.png","Assets/Weapons/Catalysts/Weapon_Magic_Guide.png","Assets/Weapons/Catalysts/Weapon_Otherworldly_Story.png","Assets/Weapons/Catalysts/Weapon_Thrilling_Tales_of_Dragon_Slayers.png","Assets/Weapons/Catalysts/Weapon_Twin_Nephrite.png","Assets/Weapons/Catalysts/Weapon_Blackcliff_Amulet.png","Assets/Weapons/Catalysts/Weapon_Favonius_Codex.png","Assets/Weapons/Catalysts/Weapon_Mappa_Mare.png","Assets/Weapons/Catalysts/Weapon_Prototype_Malice.png","Assets/Weapons/Catalysts/Weapon_Royal_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Sacrificial_Fragments.png","Assets/Weapons/Catalysts/Weapon_Solar_Pearl.png","Assets/Weapons/Catalysts/Weapon_The_Widsith.png","Assets/Weapons/Catalysts/Weapon_Wine_and_Song.png","Assets/Weapons/Catalysts/Weapon_Eye_of_Perception.png","Assets/Weapons/Catalysts/Weapon_Frostbearer.png","Assets/Weapons/Catalysts/Weapon_Lost_Prayer_to_the_Sacred_Winds.png","Assets/Weapons/Catalysts/Weapon_Skyward_Atlas.png","Assets/Weapons/Catalysts/Weapon_Memory_of_Dust.png","Assets/Assets.js","Assets/Weapons/Weapons.js","Assets/Element_Anemo.png","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Character/CharacterCard.js","Build/BuildWorker.js","Build/Build.js","Build/BuildDisplay.js","Character/Character.js","Util/Util.js","Stat.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Artifact/ArtifactDatabase.js","Util/ConditionalsUtil.js","Data/ElementalData.js","Weapon/Weapon.js","Components/StarDisplay.js"],"names":["StatData","hp_base","name","pretty","hp","hp_","unit","hp_final","atk_base","atk","atk_","atk_final","atk_weapon","def_base","def","def_","def_final","phy_dmg_bonus","phy_res","ele_dmg_bonus","ele_res","ele_mas","ener_rech","crit_rate","crit_dmg","heal_bonu","stam","inc_heal","pow_shield","red_cd","norm_atk_dmg","char_atk_dmg","plunge_dmg","norm_atk_crit_dmg","char_atk_crit_dmg","plunge_crit_dmg","norm_atk_avg_dmg","char_atk_avg_dmg","plunge_avg_dmg","norm_atk_dmg_bonus","char_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","norm_atk_crit_multi","char_atk_crit_multi","norm_atk_bonus_multi","char_atk_bonus_multi","plunge_bonus_multi","skill_dmg","burst_dmg","skill_crit_dmg","burst_crit_dmg","skill_avg_dmg","burst_avg_dmg","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_crit_multi","burst_crit_multi","skill_bonus_multi","burst_bonus_multi","skill_cd_red","burst_cd_red","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","crit_dmg_multi","crit_multi","dmg","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","overloaded_dmg","electro_charged_dmg","superconduct_dmg","burning_dmg","vaporize_dmg","melt_dmg","swirl_dmg","char_ele_key","default","char_level","enemy_level","enemy_level_multi","enemy_phy_res","enemy_phy_res_multi","enemy_phy_immunity","enemy_ele_res","enemy_ele_res_multi","enemy_ele_immunity","resMultiplier","res","Formulas","s","clamp","eleFormulas","ele","Object","keys","filter","key","some","str","includes","forEach","html","className","variant","obj","ElementalData","eleKey","ele_key","deepClone","entries","func","defineProperty","configurable","enumerable","writable","value","OverrideFormulas","noelle_burst_atk","formula","options","dependency","AttachLazyFormulas","formulaKeys","statKeys","formulaOverrides","formulaOverride","overrideFormulaKey","get","val","this","hasOwnProperty","WeaponData","WeaponDataImport","then","imp","WeaponLevelKeys","LevelNameData","WeaponTypeData","sword","claymore","catalyst","bow","polearm","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","push","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","2","ArtifactSubStatsData","ArtifactSlotsData","flower","stats","plume","sands","goblet","circlet","ConditionalSelector","props","conditional","conditionalNum","setConditional","defEle","disabled","Array","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","count","Toggle","size","Menu","Item","onClick","map","condial","i","Fragment","v","stack","tempcount","icon","faCheckSquare","faSquare","DatabaseInitAndVerify","localStorage","removeItem","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","values","art","valid","location","getCharacter","keyMapping","setKey","mainStatKey","endsWith","replace","updateArtifact","chars","getCharacterDatabase","character","equippedArtifacts","fromEntries","slotKey","artid","getArtifact","undefined","artifactConditionals","cond","srcKey","srcKey2","characterKey","levelKey","constellation","talentConditionals","ascension","Character","getAscension","talentKey","conditionalKey","talentLvlKey","getTalentLevelKey","getTalentConditional","dmgMode","updateCharacter","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","CharacterSpecializedStatKey","StatIcon","faTint","faFistRaised","faShieldAlt","faMagic","faDice","faDiceD20","faSync","faFirstAid","StatIconEle","statKey","formulaKeyDependency","DependencyStatKeys","dependencies","GetDependencyStats","Set","k","statkeys","keyDependencies","subdependencies","testObj","getDependency","DullBlade","SilverSword","CoolSteel","DarkIronSword","FilletBlade","HarbingerOfDawn","SkyriderSword","TravelersHandySword","BlackcliffLongsword","FavoniusSword","IronSting","LionsRoar","PrototypeRancour","RoyalLongsword","SacrificialSword","TheAlleyFlash","TheBlackSword","TheFlute","SwordOfDescension","FesteringDesire","AquilaFavonia","SkywardBlade","SummitShaper","WasterGreatsword","OldMercsPal","BloodtaintedGreatsword","DebateClub","FerrousShadow","Quartz","SkyriderGreatsword","WhiteIronGreatsword","BlackcliffSlasher","FavoniusGreatsword","LithicBlade","PrototypeAminus","Rainslasher","RoyalGreatsword","SerpentSpine","TheBell","Whiteblind","SacrificialGreatsword","SnowTombedStarsilver","SkywardPride","WolfsGravestone","TheUnforged","polearms","BeginnersProtector","IronPoint","BlackTassel","Halberd","WhiteTassel","BlackcliffPole","CrescentPike","Deathmatch","DragonsBane","LithicSpear","PrototypeGrudge","FavoniusLance","RoyalSpear","DragonspineSpear","VortexVanquisher","PrimordialJadeWingedSpear","SkywardSpine","bows","HuntersBow","SeasonedHuntersBow","EbonyBow","Messenger","RavenBow","RecurveBow","SharpshootersOath","Slingshot","TheStringless","AlleyHunter","BlackcliffWarbow","CompoundBow","FavoniusWarbow","PrototypeCrescent","RoyalBow","Rust","SacrificialBow","TheViridescentHunt","SkywardHarp","AmosBow","DreamsOfDragonfell","catalysts","ApprenticesNotes","PocketGrimoire","AmberCatalyst","EmeraldOrb","MagicGuide","OtherworldlyStory","ThrillingTalesOfDragonSlayers","TwinNephrite","BlackcliffAgate","FavoniusCodex","MappaMare","PrototypeMalice","RoyalGrimoire","SacrificialFragments","SolarPearl","TheWidsith","WineAndSong","EyeOfPerception","Frostbearer","LostPrayerToTheSacredWinds","SkywardAtlas","MemoryOfDust","Assets","weapons","swords","claymores","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","resin","fragile","condensed","exp_books","advice","wit","experience","CharacterCard","useReducer","x","forceUpdate","useEffect","Promise","all","getCharacterDataImport","Weapon","getWeaponDataImport","Artifact","getArtifactDataImport","characterId","onEdit","onDelete","build","calculateBuild","setToSlots","weapon","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","weaponName","getWeaponName","weaponMainVal","getWeaponMainStatValWithOverride","weaponSubKey","getWeaponSubStatKey","weaponSubVal","getWeaponSubStatValWithOverride","weaponLevelName","getLevelName","weaponPassiveName","getWeaponPassiveName","cardClassName","bg","Header","header","xs","faEdit","faTrashAlt","Body","style","cursor","src","getThumb","getStar","thumbnail","getName","stars","colored","getStatValueWithOverride","refineIndex","Stat","getStatName","getStatUnit","getArtifactSetEffects","arr","artifactSetName","getArtifactSetName","highestNum","Math","max","statVal","finalStats","toFixed","fixedUnit","footer","Footer","as","Link","to","pathname","selectedCharacterId","Worker_fn","Worker","Build","databaseObj","ret","slot","setFilters","sets","reduce","accu","num","perm","slotKeys","getArtifactSlotKeys","slotPerm","index","length","numArtsPerSet","setFilter","pieces","splitArtifacts","setPerms","setsInFilter","splitNumArtsPerSet","artArr","setPerm","permaccu","CharacterDisplayCardPromise","CharacterDisplayCard","lazy","BuildDisplay","forceUpdateBuildDisplay","state","artifactDatabase","lock","every","filterKeys","split","splitArtifactsBySlot","artifactsSlotsToSelectMainStats","mainStat","changeMainStat","setState","autoGenerateBuilds","changeSetFilterKey","newkey","setsNumArr","oldKey","artifactCond","parseInt","dropdownitemsForStar","star","getArtifactSetsByMaxStarEntries","setobj","getArtifactSets","artsAccountedOther","cur","ind","Dropdown","totBuildNumber","maxBuildsToShow","generateBuilds","artifactSetPerms","builds","generatingBuilds","asending","buildFilterKey","artifactsAssumeFull","initialStats","calculateCharacterWithWeaponStats","artifactSetEffects","getAllArtifactSetEffectsObj","mainStatVal","getMainStatValue","numStars","depdendencyStatKeys","data","worker","terminate","onmessage","e","ReactGA","timing","category","variable","label","calculateTotalBuildNumber","calculateBuildWithObjs","artifacts","postMessage","BuildGeneratorEditorCard","statsDisplayKeys","charlist","selectedCharacter","characterName","artsAccounted","generateAllPossibleArtifactSetPerm","buildAlert","Alert","maxBuildsToGenerate","characterDropDown","DropdownButton","title","char","id","Card","Row","Col","lg","editCharacter","Button","getArtifactSlotNameWithIcon","getStatNameWithPercent","ButtonGroup","ItemText","Divider","getArtifactSetEffectsObj","setNkey","setNumKey","setStats","getArtifactSetNumStats","getArtifactSetEffectConditional","ConditionalsUtil","getConditionalNum","conditionalStats","getArtifactConditionalStats","conditionalElement","Badge","getArtifactSetEffectText","faSortAmountDownAlt","faSortAmountUp","ArtifactDisplayItem","ListGroup","action","modalBuild","sort","slotarr1","slotarr","getArtifactSlotIcon","sm","closeModal","BuildModal","characterid","Modal","show","Boolean","onHide","contentClassName","Suspense","fallback","newBuild","onClose","editable","getInitialState","savedState","loadFromLocalStorage","pageview","saveToLocalStorage","getDisplayStatKeys","Container","artifactIds","join","React","Component","initialState","maxBuildsToShowList","maxBuildsToGenerateList","Error","moveToNewLocation","removeCharacterById","getBaseStatValue","defVal","getSpecializedStatKey","getSpeicalizedStatVal","getLevel","characterObj","getCDataObj","baseStat","getIndexFromlevelkey","charKey","getElementalName","elementalKey","getAllCharacterKeys","getElementalKeys","getConstellationName","constellationName","getTitles","titles","getlevelKeys","getlevelNames","indexOf","getSpecializedStat","specializeStat","thumbImg","getCard","cardImg","getTalentImg","talent","img","getConstellationImg","constIndex","getTalentName","getTalentLevelBoost","talents","talentBoost","boostEntry","find","withBoost","talentLevelKeys","levelBoost","getTalentDocument","document","getTalentFields","fields","getTalentStats","getTalentStatsAll","statsArr","doc","section","tempCond","getTalentConditionalStats","getConditionalProp","stacks","getTalentConditionalFields","getTalentStatKey","skillKey","elemental","autoInfused","isAutoElemental","auto","infusable","isAutoInfusable","hasOverride","baseStatOverrides","equipArtifacts","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","equipArtifact","artifactSetEffectsStats","getArtifactSetEffectsStats","substats","substat","stat","condStats","overrides","specialStatKey","specializedStatVal","addStatsObj","weaponStats","subKey","subVal","bonusStats","getWeaponBonusStat","getWeaponConditionalStat","getRandomElementFromArray","array","floor","random","getRandomIntInclusive","min","ceil","getItem","JSON","parse","setItem","stringify","closeEnoughFloat","a","b","abs","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","slice","f","expand","FormulaText","statName","getStatNamePretty","statUnit","getStatNameRaw","getStatVariant","printStat","printFormula","printOverrideFormula","overrideKey","OverrideFormulasText","formulaText","o","eleFormulaText","initiated","characterDatabase","charIdIndex","isInvalid","getCharacterIdList","addCharacter","dchar","getArtifactIDFromSlot","charid","unequipArtifactOnSlot","equipArtifactBuild","SlotIcon","faBahai","faFeatherAlt","faHourglass","faWineGlass","faCrown","ArtifactBase","rollData","float","roll","maxNumRoll","round","rollOption","sum","reverse","parseFloat","isNaN","msg","isFloat","getSubstatRollData","rolls","getRolls","totalAllowableRolls","efficiency","currentEfficiency","maximumEfficiency","subStatValidations","validateSubStat","currentNumOfRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","totalPossbleUpgrade","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","rarity","getArtifactPieceName","getArtifactPieceIcon","icons","getArtifactSlotName","slotIcon","getRarityArr","getMainStatKeys","main","getSubStatKeys","numberOfSubstatUnlocked","subStatKey","artifactSetEffect","setNumKeys","charFinalStats","setEffectText","ArtifactSetEffectsObj","setObj","setEffect","hasSetEffect","setEffectObj","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","getLevelIndex","weaponKey","getWeaponRarity","passiveName","getWeaponPassiveDescription","passiveDescription","getWeaponDescription","description","getWeaponConditional","getWeaponMainStatVal","baseStats","getWeaponSubStatVal","sub","getWeaponsOfType","weaponType","getWeaponTypeName","weaponObj","overrideMainVal","overrideSubVal","StarIcon","faStar","Stars","_"],"mappings":"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7K,OAAOkB,eAAe+J,EAASJ,EAAG,CAAE3I,IAAK,kBAAM,KACxC,GAETf,cAAc,OAGlBS,YAAmBqJ,GAES,kBAAjBA,EAAQ9K,KACjBqK,EAAqBrK,GAAOwB,GAEKuJ,CAAc/K,O,6CC0BpC0C,EAzBD,CACZsI,UCxBa,IAA0B,8CDyBvCC,YEzBa,IAA0B,gDF0BvCC,UG1Ba,IAA0B,8CH2BvCC,cI3Ba,IAA0B,mDJ4BvCC,YK5Ba,IAA0B,gDL6BvCC,gBM7Ba,IAA0B,qDN8BvCC,cO9Ba,IAA0B,kDP+BvCC,oBQ/Ba,IAA0B,0DRgCvCC,oBShCa,IAA0B,wDTiCvCC,cUjCa,IAA0B,kDVkCvCC,UWlCa,IAA0B,8CXmCvCC,UYnCa,IAA0B,+CZoCvCC,iBapCa,IAA0B,qDbqCvCC,ecrCa,IAA0B,mDdsCvCC,iBetCa,IAA0B,qDfuCvCC,cgBvCa,IAA0B,mDhBwCvCC,ciBxCa,IAA0B,mDjByCvCC,SkBzCa,IAA0B,6ClB0CvCC,kBmB1Ca,IAA0B,uDnB2CvCC,gBoB3Ca,IAA0B,2CpB4CvCC,cqB5Ca,IAA0B,kDrB6CvCC,asB7Ca,IAA0B,iDtB8CvCC,auB9Ca,IAA0B,2CC8C1B3J,EAxBE,CACf4J,iBCvBa,IAA0B,qDDwBvCC,YExBa,IAA0B,kDFyBvCC,uBGzBa,IAA0B,2DH0BvCC,WI1Ba,IAA0B,+CJ2BvCC,cK3Ba,IAA0B,kDL4BvCC,OM5Ba,IAA0B,0CN6BvCC,mBO7Ba,IAA0B,uDP8BvCC,oBQ9Ba,IAA0B,yDR+BvCC,kBS/Ba,IAA0B,sDTgCvCC,mBUhCa,IAA0B,uDViCvCC,YWjCa,IAA0B,gDXkCvCC,gBYlCa,IAA0B,oDZmCvCC,YanCa,IAA0B,+CboCvCC,gBcpCa,IAA0B,oDdqCvCC,aerCa,IAA0B,iDfsCvCC,QgBtCa,IAA0B,4ChBuCvCC,WiBvCa,IAA0B,8CjBwCvCC,sBkBxCa,IAA0B,0DlByCvCC,qBmBzCa,IAA0B,mDnB0CvCC,aoB1Ca,IAA0B,iDpB2CvCC,gBqB3Ca,IAA0B,qDrB4CvCC,YsB5Ca,IAA0B,iDCoC1BC,EAnBE,CACfC,mBClBa,IAA0B,wDDmBvCC,UEnBa,IAA0B,8CFoBvCC,YGpBa,IAA0B,gDHqBvCC,QIrBa,IAA0B,2CJsBvCC,YKtBa,IAA0B,gDLuBvCC,eMvBa,IAA0B,mDNwBvCC,aOxBa,IAA0B,iDPyBvCC,WQzBa,IAA0B,8CR0BvCC,YS1Ba,IAA0B,iDT2BvCC,YU3Ba,IAA0B,gDV4BvCC,gBW5Ba,IAA0B,oDX6BvCC,cY7Ba,IAA0B,kDZ8BvCC,Wa9Ba,IAA0B,+Cb+BvCC,iBc/Ba,IAA0B,8CdgCvCC,iBehCa,IAA0B,qDfiCvCC,0BgBjCa,IAA0B,gEhBkCvCC,aiBlCa,IAA0B,kDC4C1BC,EAvBF,CACXC,WCtBa,IAA0B,gDDuBvCC,mBEvBa,IAA0B,yDFwBvCC,SGxBa,IAA0B,6CHyBvCC,UIzBa,IAA0B,6CJ0BvCC,SK1Ba,IAA0B,6CL2BvCC,WM3Ba,IAA0B,+CN4BvCC,kBO5Ba,IAA0B,uDP6BvCC,UQ7Ba,IAA0B,6CR8BvCC,cS9Ba,IAA0B,kDT+BvCC,YU/Ba,IAA0B,gDVgCvCC,iBWhCa,IAA0B,qDXiCvCC,YYjCa,IAA0B,gDZkCvCC,ealCa,IAA0B,mDbmCvCC,kBcnCa,IAA0B,sDdoCvCC,SepCa,IAA0B,6CfqCvCC,KgBrCa,IAA0B,wChBsCvCC,eiBtCa,IAA0B,mDjBuCvCC,mBkBvCa,IAA0B,wDlBwCvCC,YmBxCa,IAA0B,gDnByCvCC,QoBzCa,IAA0B,6CpB0CvCC,mBqB1Ca,IAA0B,kDC8C1BC,EAxBG,CAChBC,iBCvBa,IAA0B,sDDwBvCC,eExBa,IAA0B,mDFyBvCC,cGzBa,IAA0B,kDH0BvCC,WI1Ba,IAA0B,+CJ2BvCC,WK3Ba,IAA0B,+CL4BvCC,kBM5Ba,IAA0B,sDN6BvCC,8BO7Ba,IAA0B,qEP8BvCC,aQ9Ba,IAA0B,iDR+BvCC,gBS/Ba,IAA0B,qDTgCvCC,cUhCa,IAA0B,kDViCvCC,UWjCa,IAA0B,8CXkCvCC,gBYlCa,IAA0B,oDZmCvCC,canCa,IAA0B,kDboCvCC,qBcpCa,IAA0B,yDdqCvCC,WerCa,IAA0B,+CfsCvCC,WgBtCa,IAA0B,+ChBuCvCC,YiBvCa,IAA0B,iDjBwCvCC,gBkBxCa,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","file":"static/js/10.d368052d.chunk.js","sourcesContent":["import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  dmg: { name: \"All DMG\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n  //elemental\r\n  overloaded_dmg: { name: \"Overloaded DMG\", unit: \"%\" },\r\n  electro_charged_dmg: { name: \"Electro-Charged DMG\", unit: \"%\" },\r\n  superconduct_dmg: { name: \"Superconduct DMG\", unit: \"%\" },\r\n  burning_dmg: { name: \"Overloaded DMG\", unit: \"%\" },\r\n  vaporize_dmg: { name: \"Vaporize DMG\", unit: \"%\" },\r\n  melt_dmg: { name: \"Melt DMG\", unit: \"%\" },\r\n  swirl_dmg: { name: \"Swirl DMG\", unit: \"%\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_final: (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.phy_dmg,\r\n  plunge_crit_dmg: (s) => s.phy_crit_dmg,\r\n  plunge_avg_dmg: (s) => s.phy_avg_dmg,\r\n  plunge_bonus_multi: (s) => s.phy_bonus_multi,\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.dmg) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s[`${ele}_ele_dmg`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_ele_crit_dmg`],\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_ele_avg_dmg`],\r\n  plunge_bonus_multi: (s, ele) => s[`${ele}_ele_bonus_multi`],\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.dmg) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.dmg) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.dmg) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//add html text to physical related stuff with html elements.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].html = <span className=\"text-physical text-nowrap\">{StatData[key].name}</span>\r\n  StatData[key].variant = \"physical\"\r\n});\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].html = <span className={`text-${eleKey} text-nowrap`}>{StatData[ele_key].name}</span>\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulas = {\r\n  noelle_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk + s.def_final * (options.value / 100),\r\n    dependency: [\"atk_base\", \"atk_weapon\", \"atk_\", \"atk\", \"def_final\", \"def_base\", \"def_\", \"def\"],\r\n  }\r\n}\r\n\r\n//the keyfilters are used by build generator to reduce the amount of calculations required\r\nfunction AttachLazyFormulas(obj, options = {}) {\r\n  let { formulaKeys = Object.keys(Formulas), statKeys = Object.keys(StatData) } = options;\r\n  let { formulaOverrides = [] } = obj;\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key: overrideFormulaKey, options } = formulaOverride\r\n    let { key, formula } = OverrideFormulas[overrideFormulaKey] || {}\r\n    if (!formulaKeys.includes(key)) return\r\n    formula = formula(options)\r\n    Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => formula(obj) : function () {\r\n        let val = formula(obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n\r\n  formulaKeys.forEach(key => {\r\n    !obj.hasOwnProperty(key) && Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => Formulas[key](obj) : function () {\r\n        let val = Formulas[key](obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  //assign zeros or default values to the other stats that are not part of the calculations\r\n  statKeys.forEach(key => !obj.hasOwnProperty(key) && (obj[key] = StatData[key].default || 0))\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  OverrideFormulas,\r\n  StatData,\r\n  AttachLazyFormulas,\r\n}","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport Character from \"./Character/Character\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //remove the old error/prone id lists, if it still exists\r\n  localStorage.removeItem(\"artifact_id_list\")\r\n  localStorage.removeItem(\"character_id_list\")\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  if (CharacterDatabase.populateDatebaseFromLocalStorage() |\r\n    ArtifactDatabase.populateDatebaseFromLocalStorage()) {\r\n    //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n    let arts = ArtifactDatabase.getArtifactDatabase();\r\n    Object.values(arts).forEach(art => {\r\n      let valid = true\r\n      if (art.location && !CharacterDatabase.getCharacter(art.location)) {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n      if (!valid)\r\n        ArtifactDatabase.updateArtifact(art)\r\n    })\r\n\r\n    let chars = CharacterDatabase.getCharacterDatabase();\r\n    Object.values(chars).forEach(character => {\r\n      let valid = true;\r\n      //verify character database equipment validity\r\n      let equippedArtifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([slotKey, artid]) => {\r\n        if (!ArtifactDatabase.getArtifact(artid)) {\r\n          valid = false\r\n          return [slotKey, undefined]\r\n        }\r\n        return [slotKey, artid]\r\n      }))\r\n      if (!valid)\r\n        character.equippedArtifacts = equippedArtifacts\r\n\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      if (character.artifactConditionals) character.artifactConditionals = character.artifactConditionals.filter(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for invalid conditionals from previous iterations where srcKey2 was not used.\r\n      let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n      let ascension = Character.getAscension(levelKey)\r\n      character.talentConditionals = talentConditionals.filter(cond => {\r\n        let { srcKey: talentKey, srcKey2: conditionalKey } = cond\r\n        let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n        let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n        if (!conditional) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n      if (!valid) {\r\n        CharacterDatabase.updateCharacter(character)\r\n      }\r\n    })\r\n  }\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import { AttachLazyFormulas, Formulas, OverrideFormulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nconst formulaKeyDependency = {}\r\nconst getDependency = (key) => {\r\n  let testObj = {}\r\n  let dependency = []\r\n  Object.keys(StatData).filter(k => k !== key).forEach(k => {\r\n    Object.defineProperty(testObj, k, {\r\n      get: () => {\r\n        dependency.push(k)\r\n        Object.defineProperty(testObj, k, { get: () => 0 })\r\n        return 0\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  AttachLazyFormulas(testObj)\r\n  //use the getter to generate the dependency\r\n  if (typeof testObj[key] === \"number\")\r\n    formulaKeyDependency[key] = dependency\r\n}\r\nObject.keys(Formulas).forEach(key => getDependency(key))\r\n\r\nfunction DependencyStatKeys(key, formulaOverrides = []) {\r\n  let dependencies = GetDependencyStats(key, formulaOverrides) || []\r\n  //add any formula override dependencies\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key, dependency = [] } = OverrideFormulas[formulaOverride.key] || {}\r\n    if (!dependencies.includes(key)) return\r\n    dependencies.push(...dependency)\r\n  })\r\n  dependencies = [...new Set(dependencies)]\r\n  let formulaKeys = Object.keys(Formulas).filter(k => k === key || dependencies.includes(k))\r\n  let statkeys = Object.keys(StatData).filter(k => k === key || dependencies.includes(k))\r\n  return { formulaKeys, statkeys }\r\n}\r\nfunction GetDependencyStats(key, formulaOverrides = []) {\r\n  let dependencies = [key]\r\n  let keyDependencies = null\r\n  for (const formulaOverride of formulaOverrides)\r\n    if (OverrideFormulas[formulaOverride?.key]?.key === key)\r\n      keyDependencies = OverrideFormulas[formulaOverride?.key]?.dependency\r\n  keyDependencies = keyDependencies || formulaKeyDependency[key]\r\n  keyDependencies?.forEach(k => {\r\n    let subdependencies = GetDependencyStats(k, formulaOverrides)\r\n    dependencies.push(...subdependencies)\r\n  })\r\n  return dependencies\r\n}\r\nexport {\r\n  DependencyStatKeys,\r\n  GetDependencyStats,\r\n}\r\n","import DullBlade from './Weapon_Dull_Blade.png'\r\nimport SilverSword from './Weapon_Silver_Sword.png'\r\nimport CoolSteel from './Weapon_Cool_Steel.png'\r\nimport DarkIronSword from './Weapon_Dark_Iron_Sword.png'\r\nimport FilletBlade from './Weapon_Fillet_Blade.png'\r\nimport HarbingerOfDawn from './Weapon_Harbinger_of_Dawn.png'\r\nimport SkyriderSword from './Weapon_Skyrider_Sword.png'\r\nimport TravelersHandySword from './Weapon_Traveler\\'s_Handy_Sword.png'\r\nimport BlackcliffLongsword from './Weapon_Blackcliff_Longsword.png'\r\nimport FavoniusSword from './Weapon_Favonius_Sword.png'\r\nimport IronSting from './Weapon_Iron_Sting.png'\r\nimport LionsRoar from './Weapon_Lion\\'s_Roar.png'\r\nimport PrototypeRancour from './Weapon_Prototype_Rancour.png'\r\nimport RoyalLongsword from './Weapon_Royal_Longsword.png'\r\nimport SacrificialSword from './Weapon_Sacrificial_Sword.png'\r\nimport TheAlleyFlash from './Weapon_The_Alley_Flash.png'\r\nimport TheBlackSword from './Weapon_The_Black_Sword.png'\r\nimport TheFlute from './Weapon_The_Flute.png'\r\nimport SwordOfDescension from './Weapon_Sword_of_Descension.png'\r\nimport FesteringDesire from './festering_fang.png'\r\nimport AquilaFavonia from './Weapon_Aquila_Favonia.png'\r\nimport SkywardBlade from './Weapon_Skyward_Blade.png'\r\nimport SummitShaper from './summit_shaper.png'\r\nconst sword = {\r\n  DullBlade,\r\n  SilverSword,\r\n  CoolSteel,\r\n  DarkIronSword,\r\n  FilletBlade,\r\n  HarbingerOfDawn,\r\n  SkyriderSword,\r\n  TravelersHandySword,\r\n  BlackcliffLongsword,\r\n  FavoniusSword,\r\n  IronSting,\r\n  LionsRoar,\r\n  PrototypeRancour,\r\n  RoyalLongsword,\r\n  SacrificialSword,\r\n  TheAlleyFlash,\r\n  TheBlackSword,\r\n  TheFlute,\r\n  SwordOfDescension,\r\n  FesteringDesire,\r\n  AquilaFavonia,\r\n  SkywardBlade,\r\n  SummitShaper,\r\n}\r\nexport default sword","export default __webpack_public_path__ + \"static/media/Weapon_Dull_Blade.f5de06e8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Silver_Sword.e2462179.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Cool_Steel.0c6a9897.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dark_Iron_Sword.8dce5b63.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Fillet_Blade.c8e8ab5f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Harbinger_of_Dawn.26da0d78.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Sword.80e60c22.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Traveler's_Handy_Sword.168a7842.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Longsword.522f4d19.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Sword.cb5df26b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Sting.9f4b4b01.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lion's_Roar.b0e78fa9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Rancour.64965f56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Longsword.5a57f015.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Sword.048703ab.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Alley_Flash.7528f5ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Black_Sword.3987a991.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Flute.82af0cbf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sword_of_Descension.eb67a1df.png\";","export default __webpack_public_path__ + \"static/media/festering_fang.38aa5200.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Aquila_Favonia.7c014114.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Blade.af22a740.png\";","export default __webpack_public_path__ + \"static/media/summit_shaper.5245335d.png\";","import WasterGreatsword from './Weapon_Waster_Greatsword.png'\r\nimport OldMercsPal from './Weapon_Old_Merc\\'s_Pal.png'\r\nimport BloodtaintedGreatsword from './Weapon_Bloodtainted_Greatsword.png'\r\nimport DebateClub from './Weapon_Debate_Club.png'\r\nimport FerrousShadow from './Weapon_Ferrous_Shadow.png'\r\nimport Quartz from './Weapon_Quartz.png'\r\nimport SkyriderGreatsword from './Weapon_Skyrider_Greatsword.png'\r\nimport WhiteIronGreatsword from './Weapon_White_Iron_Greatsword.png'\r\nimport BlackcliffSlasher from './Weapon_Blackcliff_Slasher.png'\r\nimport FavoniusGreatsword from './Weapon_Favonius_Greatsword.png'\r\nimport LithicBlade from './Weapon_Lithic_Blade.png'\r\nimport PrototypeAminus from './Weapon_Prototype_Aminus.png'\r\nimport Rainslasher from './Weapon_Rainslasher.png'\r\nimport RoyalGreatsword from './Weapon_Royal_Greatsword.png'\r\nimport SerpentSpine from './Weapon_Serpent_Spine.png'\r\nimport TheBell from './Weapon_The_Bell.png'\r\nimport Whiteblind from './Weapon_Whiteblind.png'\r\nimport SacrificialGreatsword from './Weapon_Sacrificial_Greatsword.png'\r\nimport SnowTombedStarsilver from './snow_tombed_starsilver.png'\r\nimport SkywardPride from './Weapon_Skyward_Pride.png'\r\nimport WolfsGravestone from './Weapon_Wolf\\'s_Gravestone.png'\r\nimport TheUnforged from './Weapon_The_Unforged.png'\r\nconst claymore = {\r\n  WasterGreatsword,\r\n  OldMercsPal,\r\n  BloodtaintedGreatsword,\r\n  DebateClub,\r\n  FerrousShadow,\r\n  Quartz,\r\n  SkyriderGreatsword,\r\n  WhiteIronGreatsword,\r\n  BlackcliffSlasher,\r\n  FavoniusGreatsword,\r\n  LithicBlade,\r\n  PrototypeAminus,\r\n  Rainslasher,\r\n  RoyalGreatsword,\r\n  SerpentSpine,\r\n  TheBell,\r\n  Whiteblind,\r\n  SacrificialGreatsword,\r\n  SnowTombedStarsilver,\r\n  SkywardPride,\r\n  WolfsGravestone,\r\n  TheUnforged,\r\n}\r\nexport default claymore","export default __webpack_public_path__ + \"static/media/Weapon_Waster_Greatsword.a411f34b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Old_Merc's_Pal.67aa1930.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Bloodtainted_Greatsword.eb68a62c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Debate_Club.be908652.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ferrous_Shadow.ef586057.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Quartz.d41c58b9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Greatsword.46e935cb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Iron_Greatsword.eda6295d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Slasher.4693af54.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Greatsword.bfd288be.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Blade.ab4d4f4f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Aminus.d2bf526a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rainslasher.664c61ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Greatsword.fbc5184a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Serpent_Spine.bb2831b5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Bell.3670f330.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Whiteblind.9c37b7dd.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Greatsword.1b0f0225.png\";","export default __webpack_public_path__ + \"static/media/snow_tombed_starsilver.23f56359.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Pride.66a1b3f7.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wolf's_Gravestone.032b607c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Unforged.f7762a2f.png\";","import BeginnersProtector from './Weapon_Beginner\\'s_Protector.png'\r\nimport IronPoint from './Weapon_Iron_Point.png'\r\nimport BlackTassel from './Weapon_Black_Tassel.png'\r\nimport Halberd from './Weapon_Halberd.png'\r\nimport WhiteTassel from './Weapon_White_Tassel.png'\r\nimport BlackcliffPole from './Weapon_Blackcliff_Pole.png'\r\nimport CrescentPike from './Weapon_Crescent_Pike.png'\r\nimport Deathmatch from './Weapon_Deathmatch.png'\r\nimport DragonsBane from './Weapon_Dragon\\'s_Bane.png'\r\nimport LithicSpear from './Weapon_Lithic_Spear.png'\r\nimport PrototypeGrudge from './Weapon_Prototype_Grudge.png'\r\nimport FavoniusLance from './Weapon_Favonius_Lance.png'\r\nimport RoyalSpear from './Weapon_Royal_Spear.png'\r\nimport DragonspineSpear from './dragonspine_spear.png'\r\nimport VortexVanquisher from './Weapon_Vortex_Vanquisher.png'\r\nimport PrimordialJadeWingedSpear from './Weapon_Primordial_Jade_Winged-Spear.png'\r\nimport SkywardSpine from './Weapon_Skyward_Spine.png'\r\nconst polearms = {\r\n  BeginnersProtector,\r\n  IronPoint,\r\n  BlackTassel,\r\n  Halberd,\r\n  WhiteTassel,\r\n  BlackcliffPole,\r\n  CrescentPike,\r\n  Deathmatch,\r\n  DragonsBane,\r\n  LithicSpear,\r\n  PrototypeGrudge,\r\n  FavoniusLance,\r\n  RoyalSpear,\r\n  DragonspineSpear,\r\n  VortexVanquisher,\r\n  PrimordialJadeWingedSpear,\r\n  SkywardSpine,\r\n}\r\nexport default polearms","export default __webpack_public_path__ + \"static/media/Weapon_Beginner's_Protector.19165915.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Point.8263916c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Black_Tassel.c3103e46.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Halberd.0044e214.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Tassel.a3cc9099.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Pole.1e15a879.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Crescent_Pike.9e473ddb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Deathmatch.9b0e6d8e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dragon's_Bane.7437cf28.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Spear.cfb11b6c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Grudge.64b3a263.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Lance.693335d4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Spear.99058465.png\";","export default __webpack_public_path__ + \"static/media/dragonspine_spear.bb785669.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Vortex_Vanquisher.efad8956.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Primordial_Jade_Winged-Spear.ea10bc42.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Spine.e81931a5.png\";","import HuntersBow from './Weapon_Hunter\\'s_Bow.png'\r\nimport SeasonedHuntersBow from './Weapon_Seasoned_Hunter\\'s_Bow.png'\r\nimport EbonyBow from './Weapon_Ebony_Bow.png'\r\nimport Messenger from './Weapon_Messenger.png'\r\nimport RavenBow from './Weapon_Raven_Bow.png'\r\nimport RecurveBow from './Weapon_Recurve_Bow.png'\r\nimport SharpshootersOath from './Weapon_Sharpshooter\\'s_Oath.png'\r\nimport Slingshot from './Weapon_Slingshot.png'\r\nimport TheStringless from './Weapon_The_Stringless.png'\r\nimport AlleyHunter from './Weapon_Alley_Hunter.png'\r\nimport BlackcliffWarbow from './Weapon_Blackcliff_Warbow.png'\r\nimport CompoundBow from './Weapon_Compound_Bow.png'\r\nimport FavoniusWarbow from './Weapon_Favonius_Warbow.png'\r\nimport PrototypeCrescent from './Weapon_Prototype_Crescent.png'\r\nimport RoyalBow from './Weapon_Royal_Bow.png'\r\nimport Rust from './Weapon_Rust.png'\r\nimport SacrificialBow from './Weapon_Sacrificial_Bow.png'\r\nimport TheViridescentHunt from './Weapon_The_Viridescent_Hunt.png'\r\nimport SkywardHarp from './Weapon_Skyward_Harp.png'\r\nimport AmosBow from './Weapon_Amos\\'_Bow.png'\r\nimport DreamsOfDragonfell from './dreams_of_dragonfell.png'\r\nconst bows = {\r\n  HuntersBow,\r\n  SeasonedHuntersBow,\r\n  EbonyBow,\r\n  Messenger,\r\n  RavenBow,\r\n  RecurveBow,\r\n  SharpshootersOath,\r\n  Slingshot,\r\n  TheStringless,\r\n  AlleyHunter,\r\n  BlackcliffWarbow,\r\n  CompoundBow,\r\n  FavoniusWarbow,\r\n  PrototypeCrescent,\r\n  RoyalBow,\r\n  Rust,\r\n  SacrificialBow,\r\n  TheViridescentHunt,\r\n  SkywardHarp,\r\n  AmosBow,\r\n  DreamsOfDragonfell,\r\n}\r\nexport default bows","export default __webpack_public_path__ + \"static/media/Weapon_Hunter's_Bow.2e941c96.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Seasoned_Hunter's_Bow.bc6a42aa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ebony_Bow.f89cc3cc.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Messenger.939170eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Raven_Bow.b88fe5c0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Recurve_Bow.bafcde86.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sharpshooter's_Oath.1d149cf5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Slingshot.d2eeb3eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Stringless.b718aa93.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Alley_Hunter.8cc323c2.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Warbow.098f24da.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Compound_Bow.a8457f4e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Warbow.19e98358.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Crescent.50a174b0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Bow.06fbac8b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rust.65b7af56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Bow.804b7a38.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Viridescent_Hunt.904062bf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Harp.6961093e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amos'_Bow.e97cd305.png\";","export default __webpack_public_path__ + \"static/media/dreams_of_dragonfell.8aaebb39.png\";","import ApprenticesNotes from './Weapon_Apprentice\\'s_Notes.png'\r\nimport PocketGrimoire from './Weapon_Pocket_Grimoire.png'\r\nimport AmberCatalyst from './Weapon_Amber_Catalyst.png'\r\nimport EmeraldOrb from './Weapon_Emerald_Orb.png'\r\nimport MagicGuide from './Weapon_Magic_Guide.png'\r\nimport OtherworldlyStory from './Weapon_Otherworldly_Story.png'\r\nimport ThrillingTalesOfDragonSlayers from './Weapon_Thrilling_Tales_of_Dragon_Slayers.png'\r\nimport TwinNephrite from './Weapon_Twin_Nephrite.png'\r\nimport BlackcliffAgate from './Weapon_Blackcliff_Amulet.png'\r\nimport FavoniusCodex from './Weapon_Favonius_Codex.png'\r\nimport MappaMare from './Weapon_Mappa_Mare.png'\r\nimport PrototypeMalice from './Weapon_Prototype_Malice.png'\r\nimport RoyalGrimoire from './Weapon_Royal_Grimoire.png'\r\nimport SacrificialFragments from './Weapon_Sacrificial_Fragments.png'\r\nimport SolarPearl from './Weapon_Solar_Pearl.png'\r\nimport TheWidsith from './Weapon_The_Widsith.png'\r\nimport WineAndSong from './Weapon_Wine_and_Song.png'\r\nimport EyeOfPerception from './Weapon_Eye_of_Perception.png'\r\nimport Frostbearer from './Weapon_Frostbearer.png'\r\nimport LostPrayerToTheSacredWinds from './Weapon_Lost_Prayer_to_the_Sacred_Winds.png'\r\nimport SkywardAtlas from './Weapon_Skyward_Atlas.png'\r\nimport MemoryOfDust from './Weapon_Memory_of_Dust.png'\r\nconst catalysts = {\r\n  ApprenticesNotes,\r\n  PocketGrimoire,\r\n  AmberCatalyst,\r\n  EmeraldOrb,\r\n  MagicGuide,\r\n  OtherworldlyStory,\r\n  ThrillingTalesOfDragonSlayers,\r\n  TwinNephrite,\r\n  BlackcliffAgate,\r\n  FavoniusCodex,\r\n  MappaMare,\r\n  PrototypeMalice,\r\n  RoyalGrimoire,\r\n  SacrificialFragments,\r\n  SolarPearl,\r\n  TheWidsith,\r\n  WineAndSong,\r\n  EyeOfPerception,\r\n  Frostbearer,\r\n  LostPrayerToTheSacredWinds,\r\n  SkywardAtlas,\r\n  MemoryOfDust\r\n}\r\nexport default catalysts","export default __webpack_public_path__ + \"static/media/Weapon_Apprentice's_Notes.0b7fb81e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Pocket_Grimoire.536179c5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amber_Catalyst.01ede681.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Emerald_Orb.4008f986.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Magic_Guide.64c777ec.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Otherworldly_Story.48b54293.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Thrilling_Tales_of_Dragon_Slayers.692d45b8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Twin_Nephrite.b0c2488b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Amulet.b97d01eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Codex.6e201cfa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Mappa_Mare.bc35dc35.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Malice.4ab08cb6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Grimoire.2f67eac4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Fragments.4dd54e2d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Solar_Pearl.d629ae58.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Widsith.a6fe1227.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wine_and_Song.0aa416e6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Eye_of_Perception.907a0288.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Frostbearer.bde00061.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lost_Prayer_to_the_Sacred_Winds.45f8ca2a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Atlas.8b4f86fa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Memory_of_Dust.4e45ccbb.png\";","import weapons from './Weapons/Weapons'\r\n\r\nimport anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  weapons,\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","import swords from './Swords/Swords'\r\nimport claymores from './Claymores/Claymores'\r\nimport polearms from './Polearms//Polearms'\r\nimport bows from './Bows/Bows'\r\nimport catalysts from './Catalysts/Catalysts'\r\nconst weapons = {\r\n  ...swords,\r\n  ...claymores,\r\n  ...polearms,\r\n  ...bows,\r\n  ...catalysts,\r\n}\r\nexport default weapons","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport Stat from '../Stat';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nexport default function CharacterCard(props) {\r\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getArtifactDataImport(),\r\n    ]).then(() => forceUpdate())\r\n  }, [])\r\n  let { characterId, onEdit, onDelete } = props\r\n  let character = CharacterDatabase.getCharacter(characterId)\r\n  if (!character) return null;\r\n  let build = Character.calculateBuild(character)\r\n  let { setToSlots } = build\r\n\r\n  let { characterKey, name, weapon, constellation } = character\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponName = Weapon.getWeaponName(weapon.key)\r\n  let weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\r\n  let weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\r\n  let weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const statkeys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\",]\r\n  return (<Card className={props.cardClassName} bg={props.bg ? props.bg : \"darkcontent\"} text=\"lightfont\">\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {props.header ? props.header : <h6><b>{name}</b></h6>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {props.onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {props.onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={onEdit} style={{ cursor: onEdit ? \"pointer\" : \"default\" }}>\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={Character.getThumb(characterKey)} className={`w-100 h-auto grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h4>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h4>\r\n          <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n          <span>{`Lvl. ${Character.getStatValueWithOverride(character, \"char_level\")} C${constellation}`}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {Object.entries(Artifact.getArtifactSetEffects(setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = Artifact.getArtifactSetName(key)\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = build.finalStats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {props.footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        selectedCharacterId: characterId\r\n      }}>\r\n        Generate Builds\r\n        </Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/BuildWorker.19be0b66.worker.js\");\n}\n","import Artifact from \"../Artifact/Artifact\";\r\nimport { ArtifactData, ArtifactSlotsData } from \"../Data/ArtifactData\";\r\n\r\nexport default class Build {\r\n\r\n  //works with id indexed object for database.\r\n  static splitArtifactsBySlot(databaseObj) {\r\n    let ret = {}\r\n    for (let slot in ArtifactSlotsData)\r\n      ret[slot] = Object.values(databaseObj).filter(art => art.slotKey === slot)\r\n    return ret;\r\n\r\n  }\r\n  /**\r\n   * Calculate all the possible set configuration based on the filters.\r\n   * [{Key:X,num:2},{key:Y,num:2},{key:\"\",num:0}]\r\n   * generates XXYYO,XYXYO,XXOYY..... combinations, where O means other. \r\n   * @param {Object} setFilters From BuildDisplay\r\n   */\r\n  static generateAllPossibleArtifactSetPerm(setFilters) {\r\n    let sets = setFilters.filter(filter => filter.key).map(filter => filter.key);\r\n    let useOther = setFilters.reduce((accu, filter) => filter.key ? accu + filter.num : accu, 0) < 5;\r\n    if (useOther) sets.push(\"Other\");\r\n\r\n    let perm = [];\r\n    let slotKeys = Artifact.getArtifactSlotKeys();\r\n    //recursion function to loop through everything.\r\n    let slotPerm = (index, accu) => {\r\n      if (index >= slotKeys.length) {\r\n        let numArtsPerSet = {}\r\n        Object.values(accu).forEach(setKey => {\r\n          if (numArtsPerSet[setKey]) numArtsPerSet[setKey] += 1\r\n          else numArtsPerSet[setKey] = 1\r\n        })\r\n        let valid = true\r\n        for (const setFilter of setFilters) {\r\n          if (setFilter.key && (!numArtsPerSet[setFilter.key] || numArtsPerSet[setFilter.key] < setFilter.num)) {\r\n            valid = false;\r\n            break;\r\n          }\r\n        }\r\n        if (valid) perm.push(accu)\r\n        return;\r\n      }\r\n      let slotKey = slotKeys[index];\r\n      sets.forEach(setKey => {\r\n        //see if this set is valid at this piece slot. some artifacts dont have artifacts at specific slots.\r\n        if (setKey === \"Other\" || (Object.keys(ArtifactData[setKey]?.pieces || {}).includes(slotKey))) {\r\n          accu[slotKey] = setKey;\r\n          slotPerm(index + 1, { ...accu })\r\n        }\r\n      });\r\n    }\r\n    slotPerm(0, {});\r\n    return perm\r\n  }\r\n  static calculateTotalBuildNumber(splitArtifacts, setPerms, setFilters) {\r\n    let setsInFilter = setFilters.filter(filter => filter.key).map(filter => filter.key)\r\n    let splitNumArtsPerSet = {}\r\n    //count the number of arts in setfilter for each slot\r\n    Object.entries(splitArtifacts).forEach(([key, artArr]) => {\r\n      let numArtsPerSet = {}\r\n      artArr.forEach(art => {\r\n        if (setsInFilter.includes(art.setKey))\r\n          numArtsPerSet[art.setKey] = (numArtsPerSet[art.setKey] || 0) + 1\r\n        else\r\n          numArtsPerSet[\"Other\"] = (numArtsPerSet[\"Other\"] || 0) + 1\r\n      })\r\n      splitNumArtsPerSet[key] = numArtsPerSet\r\n    })\r\n    //calculate!\r\n    return setPerms.reduce((accu, setPerm) =>\r\n      accu + Object.entries(setPerm).reduce((permaccu, [key, setKey]) =>\r\n        (splitNumArtsPerSet[key] && splitNumArtsPerSet[key][setKey]) ? permaccu * splitNumArtsPerSet[key][setKey] : 0\r\n        , 1)\r\n      , 0)\r\n  }\r\n}","import { faCheckSquare, faSortAmountDownAlt, faSortAmountUp, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy } from 'react';\r\nimport { Alert, Badge, Button, ButtonGroup, Card, Col, Container, Dropdown, DropdownButton, ListGroup, Modal, Row } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\n// eslint-disable-next-line\r\nimport Worker from \"worker-loader!./BuildWorker.js\";\r\nimport Artifact from '../Artifact/Artifact';\r\nimport ArtifactDatabase from '../Artifact/ArtifactDatabase';\r\nimport Character from '../Character/Character';\r\nimport CharacterCard from '../Character/CharacterCard';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport ConditionalSelector from '../Components/ConditionalSelector';\r\nimport { ArtifactSlotsData } from '../Data/ArtifactData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport Stat from '../Stat';\r\nimport { DependencyStatKeys } from '../StatDependency';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { deepClone, loadFromLocalStorage, saveToLocalStorage } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Build from './Build';\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCardPromise = import('../Character/CharacterDisplayCard');\r\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\r\n\r\nexport default class BuildDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = BuildDisplay.getInitialState();\r\n    if (props.location.selectedCharacterId) {\r\n      this.state = BuildDisplay.getInitialState();\r\n      props.location.selectedCharacterId && (this.state.selectedCharacterId = props.location.selectedCharacterId)\r\n    } else {\r\n      let savedState = loadFromLocalStorage(\"BuildsDisplay.state\")\r\n      if (savedState) {\r\n        let character = CharacterDatabase.getCharacter(savedState.selectedCharacterId)\r\n        if (savedState && character) this.state = savedState\r\n      }\r\n    }\r\n    ReactGA.pageview('/build')\r\n  }\r\n  static initialState = {\r\n    builds: [],\r\n    generatingBuilds: false,\r\n    selectedCharacterId: \"\",\r\n    setFilters: [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }],\r\n    artifactConditionals: [],//{ setKey: \"\", setNumKey: \"\", conditionalNum: 0 }\r\n    mainStat: [\"\", \"\", \"\"],\r\n    buildFilterKey: \"atk_final\",\r\n    artifactsAssumeFull: false,\r\n    asending: false,\r\n    modalBuild: null,\r\n    editCharacter: false,\r\n    maxBuildsToShow: 100,\r\n    maxBuildsToGenerate: 500000\r\n  }\r\n  static maxBuildsToShowList = [100, 50, 25, 5]\r\n  static maxBuildsToGenerateList = [500000, 100000, 50000, 10000, 5000, 1000]\r\n  static getInitialState = () => deepClone(BuildDisplay.initialState)\r\n  static artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"]\r\n  forceUpdateBuildDisplay = () => this.forceUpdate()\r\n\r\n  splitArtifacts = () => {\r\n    if (!this.state.selectedCharacterId) return {};\r\n    let artifactDatabase = ArtifactDatabase.getArtifactDatabase();\r\n    //do not use artifacts that are locked.\r\n    Object.entries(artifactDatabase).forEach(([key, val]) => {\r\n      if (val.lock) delete artifactDatabase[key]\r\n      if (this.state.selectedCharacterId && val.location && val.location !== this.state.selectedCharacterId)\r\n        delete artifactDatabase[key]\r\n    })\r\n    if (this.state.setFilters.every(filter => filter.key)) {\r\n      let filterKeys = this.state.setFilters.map(filter => filter.key)\r\n      //filter database to only filtered artifacts, if all 3 sets are specified\r\n      Object.entries(artifactDatabase).forEach(([key, val]) => {\r\n        if (filterKeys.includes(val.setKey))\r\n          delete artifactDatabase[key]\r\n      })\r\n    }\r\n    let split = Build.splitArtifactsBySlot(artifactDatabase);\r\n    //filter the split slots on the mainstats selected.\r\n    BuildDisplay.artifactsSlotsToSelectMainStats.forEach((slotKey, index) =>\r\n      this.state.mainStat[index] && (split[slotKey] = split[slotKey].filter((art) => art.mainStatKey === this.state.mainStat[index])))\r\n    return split\r\n  }\r\n  changeMainStat = (index, mainStatKey) => {\r\n    this.setState(state => {\r\n      let mainStat = state.mainStat;\r\n      mainStat[index] = mainStatKey;\r\n      return { mainStat }\r\n    }, this.autoGenerateBuilds)\r\n  }\r\n  changeSetFilterKey = (index, newkey, setsNumArr) => this.setState(state => {\r\n    let oldKey = state.setFilters[index].key\r\n    if (oldKey === newkey) return\r\n    //remove conditionals with that key\r\n    let artifactConditionals = state.artifactConditionals?.filter?.(artifactCond => artifactCond.srcKey !== oldKey) || []\r\n    let setFilters = state.setFilters;\r\n    let num = 0\r\n    //automatically select the 1st element from setsNumArr\r\n    if (setsNumArr && setsNumArr[0])\r\n      num = parseInt(setsNumArr[0])\r\n    setFilters[index] = { key: newkey, num }\r\n    return { setFilters, artifactConditionals }\r\n  }, this.autoGenerateBuilds)\r\n\r\n  dropdownitemsForStar = (star, index) =>\r\n    Artifact.getArtifactSetsByMaxStarEntries(star).map(([setKey, setobj]) => {\r\n      if (this.state.setFilters.some(filter => filter.key === setKey)) return false;\r\n      let setsNumArr = Object.keys(Artifact.getArtifactSets(setKey))\r\n      let artsAccountedOther = this.state.setFilters.reduce((accu, cur, ind) => (cur.key && ind !== index) ? accu + cur.num : accu, 0)\r\n      if (setsNumArr.every(num => parseInt(num) + artsAccountedOther > 5)) return false;\r\n      return (<Dropdown.Item key={setKey}\r\n        onClick={() => this.changeSetFilterKey(index, setKey, setsNumArr)}\r\n      >\r\n        {setobj.name}\r\n      </Dropdown.Item>)\r\n    })\r\n  autoGenerateBuilds = () => typeof this.totBuildNumber === \"number\" && this.totBuildNumber <= this.state.maxBuildsToShow && this.generateBuilds()\r\n\r\n  generateBuilds = () => {\r\n    let { split, artifactSetPerms, totBuildNumber } = this\r\n    if (!totBuildNumber) return this.setState({ builds: [] })\r\n    this.setState({ generatingBuilds: true })\r\n    let { setFilters, asending, buildFilterKey, maxBuildsToShow, artifactConditionals, artifactsAssumeFull } = this.state\r\n    let character = CharacterDatabase.getCharacter(this.state.selectedCharacterId)\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    initialStats.artifactsAssumeFull = artifactsAssumeFull\r\n\r\n    let artifactSetEffects = Artifact.getAllArtifactSetEffectsObj(artifactConditionals)\r\n    let splitArtifacts = deepClone(split)\r\n    //add mainStatVal to each artifact\r\n    Object.values(splitArtifacts).forEach(artArr => {\r\n      artArr.forEach(art => {\r\n        art.mainStatVal = Artifact.getMainStatValue(art.mainStatKey, art.numStars, artifactsAssumeFull ? art.numStars * 4 : art.level);\r\n      })\r\n    })\r\n    //generate the key dependencies for the formula\r\n    let depdendencyStatKeys = DependencyStatKeys(buildFilterKey, initialStats.formulaOverrides)\r\n\r\n    //create an obj with app the artifact set effects to pass to buildworker.\r\n    let data = {\r\n      splitArtifacts, artifactSetPerms, initialStats, artifactSetEffects, depdendencyStatKeys,\r\n      setFilters, maxBuildsToShow, buildFilterKey, asending,\r\n    }\r\n    if (this.worker) this.worker.terminate()\r\n    this.worker = new Worker();\r\n    this.worker.onmessage = (e) => {\r\n      ReactGA.timing({\r\n        category: \"Build Generation\",\r\n        variable: \"timing\",\r\n        value: e.data.timing,\r\n        label: Build.calculateTotalBuildNumber(split, artifactSetPerms, this.state.setFilters)\r\n      })\r\n      let builds = e.data.builds.map(obj =>\r\n        Character.calculateBuildWithObjs(artifactConditionals, initialStats, obj.artifacts))\r\n      this.setState({ builds, generatingBuilds: false })\r\n      // worker.terminate()\r\n      this.worker.terminate()\r\n      delete this.worker\r\n    }\r\n\r\n    this.worker.postMessage(data)\r\n  }\r\n\r\n  BuildGeneratorEditorCard = (props) => {\r\n    let { setFilters, selectedCharacterId, artifactsAssumeFull } = this.state\r\n    let { statsDisplayKeys } = props\r\n    let charlist = CharacterDatabase.getCharacterDatabase();\r\n    let selectedCharacter = CharacterDatabase.getCharacter(selectedCharacterId)\r\n    let characterName = selectedCharacter ? selectedCharacter.name : \"Character Name\"\r\n    let artsAccounted = setFilters.reduce((accu, cur) => cur.key ? accu + cur.num : accu, 0)\r\n    //these variables are used for build generator.\r\n    this.split = this.splitArtifacts();\r\n    this.artifactSetPerms = Build.generateAllPossibleArtifactSetPerm(setFilters)\r\n    this.totBuildNumber = Build.calculateTotalBuildNumber(this.split, this.artifactSetPerms, setFilters)\r\n    let { totBuildNumber } = this\r\n\r\n    let buildAlert = totBuildNumber === 0 ?\r\n      <Alert variant=\"warning\" className=\"mb-0\"><span>Current configuration will not generate any builds for <b>{characterName}</b>. Please change your Artifact configurations, or add/unlock more Artifacts.</span></Alert>\r\n      : (totBuildNumber > this.state.maxBuildsToGenerate ?\r\n        <Alert variant=\"danger\" className=\"mb-0\"><span>Current configuration will generate <b>{totBuildNumber}</b> builds for <b>{characterName}</b>. Please restrict artifact configuration to reduce builds to less than {this.state.maxBuildsToGenerate}, or your browser might crash.</span></Alert> :\r\n        <Alert variant=\"success\" className=\"mb-0\"><span>Current configuration {totBuildNumber <= this.state.maxBuildsToShow ? \"generated\" : \"will generate\"} <b>{totBuildNumber}</b> builds for <b>{characterName}</b>.</span></Alert>)\r\n    let characterDropDown = <DropdownButton title={selectedCharacterId ? characterName : \"Select Character\"}>\r\n      <Dropdown.Item onClick={() => this.setState({ selectedCharacterId: \"\", builds: [], buildFilterKey: \"atk_final\" })}>No Character</Dropdown.Item>\r\n      {Object.values(charlist).map((char, i) =>\r\n        <Dropdown.Item key={char.name + i}\r\n          onClick={() => this.setState({ selectedCharacterId: char.id, builds: [], buildFilterKey: \"atk_final\" })}\r\n        >\r\n          {char.name}\r\n        </Dropdown.Item>)}\r\n    </DropdownButton>\r\n    const toggleArtifactsAssumeFull = () => this.setState(state => ({ artifactsAssumeFull: !state.artifactsAssumeFull }), this.autoGenerateBuilds)\r\n    return <Card bg=\"darkcontent\" text=\"lightfont\">\r\n      <Card.Header>Build Generator</Card.Header>\r\n      <Card.Body>\r\n        <Row >\r\n          <Col xs={12} lg={6} className=\"mb-2\">\r\n            {/* character selection */}\r\n            {selectedCharacterId ?\r\n              <CharacterCard header={characterDropDown} characterId={selectedCharacterId} bg={\"lightcontent\"} footer={false} cardClassName=\"mb-2\" onEdit={() => this.setState({ editCharacter: true })} /> :\r\n              <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                <Card.Header>\r\n                  {characterDropDown}\r\n                </Card.Header>\r\n              </Card>}\r\n            {/* main stat selector */}\r\n            <Card bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>\r\n                <span>Artifact Main Stat</span>\r\n                <Button className=\"float-right text-right\" variant={artifactsAssumeFull ? \"orange\" : \"primary\"} onClick={toggleArtifactsAssumeFull}><FontAwesomeIcon icon={artifactsAssumeFull ? faCheckSquare : faSquare} className=\"fa-fw\" /> Assume Fully Leveled</Button>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                {BuildDisplay.artifactsSlotsToSelectMainStats.map((slotKey, index) =>\r\n                (<div className=\"text-inline mb-1 d-flex justify-content-between\" key={slotKey}>\r\n                  <h6 className=\"d-inline mr-2\">\r\n                    {Artifact.getArtifactSlotNameWithIcon(slotKey)}\r\n                  </h6>\r\n                  <DropdownButton\r\n                    title={this.state.mainStat[index] ? Stat.getStatNameWithPercent(this.state.mainStat[index]) : \"Select a mainstat\"}\r\n                    className=\"d-inline\">\r\n                    <Dropdown.Item onClick={() => this.changeMainStat(index, \"\")} >No MainStat</Dropdown.Item>\r\n                    {ArtifactSlotsData[slotKey].stats.map(mainStatKey =>\r\n                      <Dropdown.Item onClick={() => this.changeMainStat(index, mainStatKey)} key={mainStatKey}>\r\n                        {Stat.getStatNameWithPercent(mainStatKey)}\r\n                      </Dropdown.Item>\r\n                    )}\r\n                  </DropdownButton>\r\n                </div>))}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col xs={12} lg={6} className=\"mb-2\"><Row>\r\n            {/* Artifact set picker */}\r\n            {setFilters.map((setFilter, index) => {\r\n              let { key: setKey, num } = setFilter\r\n              let { artifactConditionals } = this.state\r\n              return (<Col className=\"mb-2\" key={index} xs={12}>\r\n                <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n                  <Card.Header>\r\n                    <ButtonGroup>\r\n                      {/* Artifact set */}\r\n                      <DropdownButton as={ButtonGroup} title={Artifact.getArtifactSetName(setFilter.key, \"Set (Optional)\")} >\r\n                        <Dropdown.Item onClick={() => this.changeSetFilterKey(index, \"\")}>Unselect Artifact</Dropdown.Item>\r\n                        <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊🟊</Dropdown.ItemText>\r\n                        {this.dropdownitemsForStar(5, index)}\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊</Dropdown.ItemText>\r\n                        {this.dropdownitemsForStar(4, index)}\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.ItemText>Max Rarity 🟊🟊🟊</Dropdown.ItemText>\r\n                        {this.dropdownitemsForStar(3, index)}\r\n                      </DropdownButton>\r\n                      {/* set number */}\r\n                      <DropdownButton as={ButtonGroup} title={`${setFilter.num}-set`}\r\n                        disabled={!setFilter.key || artsAccounted >= 5}\r\n                      >\r\n                        {setFilter.key && Artifact.getArtifactSetEffectsObj(setFilter.key) && Object.keys(Artifact.getArtifactSetEffectsObj(setFilter.key)).map(num => {\r\n                          let artsAccountedOther = setFilters.reduce((accu, cur) => (cur.key && cur.key !== setFilter.key) ? accu + cur.num : accu, 0)\r\n                          return (parseInt(num) + artsAccountedOther <= 5) &&\r\n                            (<Dropdown.Item key={num}\r\n                              onClick={() => this.setState((state) => {\r\n                                let setFilters = state.setFilters;\r\n                                setFilters[index].num = parseInt(num)\r\n                                return { setFilters }\r\n                              }, this.autoGenerateBuilds)}\r\n                            >\r\n                              {`${num}-set`}\r\n                            </Dropdown.Item>)\r\n                        })}\r\n                      </DropdownButton>\r\n                    </ButtonGroup>\r\n                  </Card.Header>\r\n                  {setKey ? <Card.Body><Row>\r\n                    {Object.keys(Artifact.getArtifactSets(setKey, {})).filter(setNkey => parseInt(setNkey) <= num).map(setNumKey => {\r\n                      let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                      let conditionalNum = 0;\r\n                      let conditional = Artifact.getArtifactSetEffectConditional(setKey, setNumKey)\r\n                      if (conditional) {\r\n                        conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                        let conditionalStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n                        if (conditionalStats) {\r\n                          if (!setStats) setStats = {}\r\n                          Object.entries(conditionalStats).forEach(([statKey, val]) =>\r\n                            setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                        }\r\n                      }\r\n                      let setStateArtifactConditional = (conditionalNum) => this.setState(state =>\r\n                        ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }), this.autoGenerateBuilds)\r\n                      let conditionalElement = <ConditionalSelector\r\n                        conditional={conditional}\r\n                        conditionalNum={conditionalNum}\r\n                        setConditional={setStateArtifactConditional}\r\n                        defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                      />\r\n                      return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                        <h6>{conditionalElement} {Artifact.getArtifactSetEffectText(setKey, setNumKey)}</h6>\r\n                        {setStats ? <Row>\r\n                          {Object.entries(setStats).map(([statKey, val]) =>\r\n                            <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                        </Row> : null}\r\n                      </Col>\r\n                    })}\r\n                  </Row></Card.Body> : null}\r\n                </Card>\r\n              </Col>)\r\n            })}\r\n          </Row></Col>\r\n        </Row>\r\n        <Row className=\"mb-2\">\r\n          <Col>{selectedCharacterId && buildAlert}</Col>\r\n        </Row>\r\n        <Row className=\"d-flex justify-content-between\">\r\n          <Col xs=\"auto\" >\r\n            <Button\r\n              className=\"h-100\"\r\n              disabled={!selectedCharacterId || totBuildNumber > this.state.maxBuildsToGenerate || this.state.generatingBuilds}\r\n              variant={(selectedCharacterId && totBuildNumber <= this.state.maxBuildsToGenerate) ? \"success\" : \"danger\"}\r\n              onClick={this.generateBuilds}\r\n            ><span>Generate Builds</span></Button>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {/* Dropdown to select sorting value */}\r\n            <ButtonGroup>\r\n              <DropdownButton disabled={!selectedCharacterId} title={<span>Sort by <b>{Stat.getStatNameWithPercent(this.state.buildFilterKey)}</b></span>} as={ButtonGroup}>\r\n                {selectedCharacterId && statsDisplayKeys.map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => this.setState({ buildFilterKey: key }, this.autoGenerateBuilds)}>\r\n                    {Stat.getStatNameWithPercent(key)}\r\n                  </Dropdown.Item>\r\n                )}\r\n              </DropdownButton>\r\n              <Button onClick={() => this.setState(state => ({ asending: !state.asending }), this.autoGenerateBuilds)}>\r\n                <FontAwesomeIcon icon={this.state.asending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  }\r\n  ArtifactDisplayItem = (props) => {\r\n    let { build, statsDisplayKeys } = props\r\n    return (<div>\r\n      <ListGroup.Item\r\n        variant={props.index % 2 ? \"customdark\" : \"customdarker\"} className=\"text-white\" action\r\n        onClick={() => this.setState({ modalBuild: build })}\r\n      >\r\n        <Row>\r\n          <Col>{Object.entries(build.setToSlots).sort(([key1, slotarr1], [key2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\r\n            <Badge key={key} variant=\"primary\" className=\"mr-2\">\r\n              {slotarr.map(slotKey => Artifact.getArtifactSlotIcon(slotKey))} {Artifact.getArtifactSetName(key)}\r\n            </Badge>\r\n          )}</Col>\r\n        </Row>\r\n        <Row>\r\n          {statsDisplayKeys.map(key =>\r\n            <Col className=\"text-nowrap\" key={key} xs={12} sm={6} lg={4}>\r\n              <span>{Stat.getStatName(key)}: <span className=\"text-warning\">{build.finalStats[key]?.toFixed(Stat.fixedUnit(key))}{Stat.getStatUnit(key)}</span></span>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </ListGroup.Item>\r\n    </div>)\r\n  }\r\n  closeModal = () => this.setState({ modalBuild: null, editCharacter: false })\r\n  BuildModal = (props) => {\r\n    let { build, characterid } = props\r\n    let { editCharacter } = this.state\r\n    return <Modal show={Boolean(editCharacter || build)} onHide={this.closeModal} size=\"xl\" contentClassName=\"bg-transparent\">\r\n      <React.Suspense fallback={<span>Loading...</span>}>\r\n        <CharacterDisplayCard characterId={characterid} newBuild={build}\r\n          onClose={this.closeModal}\r\n          forceUpdate={this.forceUpdateBuildDisplay}\r\n          editable={editCharacter}\r\n          footer={<Button variant=\"danger\" onClick={this.closeModal}>Close</Button>} />\r\n      </React.Suspense>\r\n    </Modal>\r\n  }\r\n\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getArtifactDataImport()\r\n    ]).then(() => {\r\n      this.forceUpdate()\r\n      //try to generate a build at the beginning after mount.\r\n      this.autoGenerateBuilds()\r\n    })\r\n  }\r\n  componentDidUpdate() {\r\n    let state = deepClone(this.state)\r\n    state.builds = [];\r\n    delete state.generatingBuilds\r\n    delete state.modalBuild\r\n    delete state.editCharacter\r\n    saveToLocalStorage(\"BuildsDisplay.state\", state)\r\n  }\r\n  componentWillUnmount() {\r\n    this.worker?.terminate()\r\n    delete this.worker\r\n  }\r\n  render() {\r\n    let { selectedCharacterId, modalBuild, maxBuildsToShow, builds = [] } = this.state\r\n    let selectedCharacter = CharacterDatabase.getCharacter(selectedCharacterId)\r\n    let characterKey = selectedCharacter?.characterKey\r\n    let characterName = Character.getName(characterKey, \"Character Name\")\r\n    let statsDisplayKeys = Character.getDisplayStatKeys(characterKey)\r\n    return (<Container>\r\n      <this.BuildModal build={modalBuild} characterid={selectedCharacterId} />\r\n      <Row className=\"mt-2 mb-2\">\r\n        <Col>\r\n          {/* Build Generator Editor */}\r\n          <this.BuildGeneratorEditorCard statsDisplayKeys={statsDisplayKeys} />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <Card bg=\"darkcontent\" text=\"lightfont\">\r\n            <Card.Header>{selectedCharacterId ? `Showing ${builds.length} Builds generated for ${characterName}` : \"Select a character to generate builds.\"}</Card.Header>\r\n            {/* Build List */}\r\n            <ListGroup>\r\n              {builds.map((build, index) =>\r\n                (index < maxBuildsToShow) && <this.ArtifactDisplayItem build={build} character={selectedCharacter} index={index} key={Object.values(build.artifactIds).join(\"_\")} statsDisplayKeys={statsDisplayKeys} />\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>)\r\n  }\r\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { AttachLazyFormulas } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getCDataObj(charKey)?.talent?.[talentKey]?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getCDataObj(charKey)?.talent?.[talentKey]?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getCDataObj(charKey)?.talent?.[talentKey]?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"formulaOverrides\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey } = character\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey)\r\n    if (!elemental) elemental = autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false)\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = this.getElementalKey(characterKey)\r\n    if (eleKey) eleKey = eleKey + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", \"ele_dmg_bonus\"]\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n\r\n    if (!isAutoElemental)\r\n      keys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      keys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      keys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(`${eleKey}_char_atk_avg_dmg`)\r\n\r\n    //show skill/burst at the end\r\n    keys.push(\"skill_avg_dmg\", \"burst_avg_dmg\")\r\n\r\n    return keys.map(key => ([\"ele_dmg_bonus\", \"skill_avg_dmg\", \"burst_avg_dmg\"].includes(key)) ? `${eleKey}_${key}` : key)\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getArtifactSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals, initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals && artifactConditionals.forEach(conditional => {\r\n      let { srcKey: setKey, srcKey2: setNumKey } = conditional\r\n      let condStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditional.conditionalNum)\r\n      if (condStats) Object.entries(condStats).forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n    AttachLazyFormulas(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"formulaOverrides\") {\r\n        initialStats.formulaOverrides = [...(initialStats.formulaOverrides || []), ...val]\r\n        return\r\n      }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { Formulas, OverrideFormulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (StatData[key]?.html || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (StatData[key]?.html || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static printFormula = (statKey, stats, formulaOverrides = [], expand = true) => {\r\n    for (const formulaOverride of formulaOverrides)\r\n      if (OverrideFormulas[formulaOverride?.key]?.key === statKey)\r\n        return Stat.printOverrideFormula(stats, formulaOverride.key, formulaOverride.options, false)\r\n    return FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n      (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n  }\r\n\r\n  static printOverrideFormula = (stats, overrideKey, options, expand = true) =>\r\n    OverrideFormulasText?.[overrideKey] && typeof OverrideFormulasText?.[overrideKey].formulaText === \"function\" &&\r\n    (<span>{OverrideFormulasText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats[statKey]?.toFixed?.(fixedUnit) || stats[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n}\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulasText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.value}%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getArtifactDataImport = () => ArtifactDataImport\r\n  static getArtifactSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getArtifactSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData).filter(([key, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getArtifactPieceName = (setKey, slotKey, defVal = \"\") => ArtifactData?.[setKey]?.pieces?.[slotKey] || defVal;\r\n  static getArtifactPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n  static getArtifactSetEffectsObj = (setKey, defVal = null) => ArtifactData?.[setKey]?.sets || defVal\r\n  //SLOT\r\n  static getArtifactSlotKeys = () => Object.keys(ArtifactSlotsData)\r\n  static getArtifactSlotName = (slotKey, defVal = \"\") =>\r\n    ArtifactSlotsData[slotKey] ? ArtifactSlotsData[slotKey].name : defVal\r\n  static getArtifactSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n\r\n  static getArtifactSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getArtifactSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getArtifactSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n\r\n  //STARS\r\n  static getRarityArr = (setKey) => ArtifactData[setKey] ? ArtifactData[setKey].rarity : []\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => ArtifactMainSlotKeys\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = ArtifactMainStatsData[numStars]?.[key]?.[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData)\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getRolls(value, rollData, float = false) {\r\n    let roll = null;\r\n    let maxNumRoll = Math.round(value / rollData[0])\r\n    if (!maxNumRoll) return null;\r\n    let rollOption = (val, arr) => {\r\n      if (roll) return;\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (float) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val)) {\r\n            roll = arr;\r\n            return;\r\n          }\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val)) {\r\n            roll = arr;\r\n            return\r\n          }\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        rollOption(value, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(value, [])\r\n    return roll;\r\n  }\r\n  static validateSubStat(state, substat) {\r\n    if (!substat || !substat.value) return { valid: true }\r\n    let value = parseFloat(substat.value);\r\n    if (isNaN(value)) return { valid: false, msg: `Invalid Input` }\r\n    let numStars = state.numStars\r\n    if (!numStars) return { valid: false, msg: `Artifact Stars not set.` }\r\n    let isFloat = Stat.getStatUnit(substat.key) === \"%\"\r\n    let rollData = this.getSubstatRollData(substat.key, numStars);\r\n    let rolls = this.getRolls(value, rollData, isFloat)\r\n\r\n    if (!rolls || rolls.length === 0) return { valid: false, msg: `Substat cannot be rolled 0 times.` };\r\n    let totalAllowableRolls = ArtifactStarsData[numStars]?.numUpgradesOrUnlocks - (4 - ArtifactStarsData[numStars]?.subBaseHigh) + 1;//+1 for its base roll\r\n    if (rolls.length > totalAllowableRolls) return { valid: false, msg: `Substat cannot be rolled more than ${totalAllowableRolls} times.` };\r\n\r\n    let min = rollData[0] * rolls.length;\r\n    let max = rollData[rollData.length - 1] * rolls.length;\r\n    return { valid: true, efficiency: clampPercent(((value - min) / (max - min)) * 100), msg: `This substat was rolled ${rolls.length} time(s). Values: [${rolls.join(\", \")}]`, rolls }\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static artifactValidation(state) {\r\n    let currentEfficiency = 0, maximumEfficiency = 0;\r\n    let subStatValidations = state.substats.map(substat => Artifact.validateSubStat(state, substat));\r\n    for (const substat of subStatValidations)\r\n      if (!substat.valid)\r\n        return { subStatValidations, valid: false, msg: \"One of the substat is invalid.\", currentEfficiency, maximumEfficiency }\r\n\r\n    //if a substat has >=2 rolls, when not all of them have been unlocked//if a substat has >=2 rolls, when not all of them have been unlocked\r\n    if (subStatValidations.some(substat => substat?.rolls?.length > 1) && subStatValidations.some((substat) => !substat.rolls))\r\n      return { subStatValidations, valid: false, msg: \"One of the substat have >1 rolls, but not all substats are unlocked.\", currentEfficiency, maximumEfficiency }\r\n    let currentNumOfRolls = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls ? cur.rolls.length : 0), 0);\r\n    let rollsRemaining = Artifact.rollsRemaining(state.level, state.numStars);\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(state.numStars);\r\n\r\n    if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n      return { subStatValidations, valid: false, msg: `Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `, currentEfficiency, maximumEfficiency }\r\n\r\n    let totalCurrentEfficiency = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls && cur.efficiency ? (cur.efficiency * cur.rolls.length) : 0), 0);\r\n    currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { valid: true, subStatValidations, currentNumOfRolls, rollsRemaining, totalPossbleUpgrade: totalPossbleRolls, currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getArtifactSets = (setKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = null) =>\r\n    deepClone(this.getArtifactSets(setKey)?.[setNumKey]?.stats || defVal)\r\n\r\n  static getArtifactConditionalStats = (setKey, setNumKey, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getArtifactSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      ArtifactData?.[setKey]?.sets && Object.entries(ArtifactData[setKey].sets).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getArtifactSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      if (ArtifactData?.[setKey]?.sets) {\r\n        let setNumKeys = Object.keys(ArtifactData[setKey].sets).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n        if (setNumKeys.length)\r\n          artifactSetEffect[setKey] = setNumKeys\r\n      }\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getArtifactSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = ArtifactData?.[setKey]?.sets?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getArtifactSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets?.[setNumKey]?.conditional || defVal\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      let hasSetEffect = false\r\n      if (setObj.sets)\r\n        Object.entries(setObj.sets).forEach(([setNumKey, setEffectObj]) => {\r\n          if (setEffectObj.stats && Object.keys(setEffectObj.stats).length > 0) {\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n            hasSetEffect = true\r\n          }\r\n          if (setEffectObj.conditional) {\r\n            let conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n            if (conditionalNum) {\r\n              let condStats = this.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n              if (condStats) {\r\n                setEffect[setNumKey] = deepClone(condStats)\r\n                hasSetEffect = true\r\n              }\r\n            }\r\n          }\r\n        })\r\n      if (hasSetEffect)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => id ? artifactDatabase[id] : null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null) \r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = (props) => <span className={props.colored ? \"text-5star\" : \"\"}>\r\n  {props.stars ? [...Array(props.stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n"],"sourceRoot":""}