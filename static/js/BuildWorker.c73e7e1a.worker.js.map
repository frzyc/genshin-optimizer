{"version":3,"sources":["../webpack/bootstrap","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","WorkerHack.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","Util/Util.js","Data/ElementalData.js","StatConstants.js","StatData.js","Build/Build.js","Util/FormulaUtil.js","Data/Characters/Amber/data.js","Data/Characters/Barbara/data.js","Data/Characters/Beidou/data.js","Data/Characters/Bennett/data.js","Data/Characters/Diluc/data.js","Data/Characters/Fischl/data.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","Util/ConditionalsUtil.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","Data/Characters/Ganyu/data.js","Data/Characters/Hu Tao/data.js","Data/Characters/Jean/data.js","Data/Characters/Keqing/data.js","Data/Characters/Klee/data.js","Data/Characters/Mona/data.js","Data/Characters/Ningguang/data.js","Data/Characters/Noelle/data.js","Data/Characters/Razor/data.js","Data/Characters/Venti/data.js","Data/Characters/Xiao/data.js","Data/Characters/Xiangling/data.js","Data/Characters/Xingqiu/data.js","Data/Characters/Zhongli/data.js","Data/Characters/formula.js","StatDependency.js","Build/BuildWorker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","runtime","undefined","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","obj","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","$RefreshReg$","$RefreshSig$","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","minLen","from","test","_createForOfIteratorHelper","allowArrayLike","it","isArray","F","e","_e","f","normalCompletion","didErr","step","_e2","_defineProperty","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","arguments","source","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","_slicedToArray","_arr","_n","_d","_s","_i","asyncGeneratorStep","gen","_next","_throw","clamp","val","low","high","ElementalData","physical","anemo","geo","electro","hydro","pyro","cryo","hitTypes","hit","avgHit","critHit","hitMoves","normal","charged","plunging","elemental","skill","burst","hitElements","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","StatData","flat","default","characterHP","pretty","const","characterDEF","characterATK","characterEle","characterLevel","weaponATK","baseATK","hp","hp_","unit","atk","atk_","def","def_","dmg_","finalHP","finalATK","finalDEF","critHit_base_multi","eleMas","enerRech_","critRate_","critDMG_","weakspotDMG_","heal_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","stamina","staminaDec_","staminaGlidingDec_","staminaChargedDec_","heal_multi","transformative_level_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","variant","crystalize_multi","crystalize_dmg_","crystalize_hit","burning_dmg_","enemyLevel","enemyLevel_multi","enemyDEFRed_","Formulas","PreprocessFormulas","dependencyKeys","stats","debug","modifiers","initialStats","constData","formulaList","map","tmp","modifier","constModifier","entries","k","dynamicModifier","constFunc","reduce","accu","dynamicFunc","funcIndicator","func","console","log","formula","assign","artifactSetPermutations","artifactsBySlot","setFilters","setKeys","Set","filteredArtifactsBySlot","slotKeys","slotKey","artifactsBySet","artifact","has","setKey","freeze","setCount","slotPerm","index","num","artifactPermutations","artifactSetEffects","callback","newStats","accumulate","art","mainStatKey","mainStatVal","substats","substat","setEffect","statKey","getTalentStatKey","skillKey","hitMode","autoInfused","reactionMode","weaponType","includes","eleKey","basicDMGFormula","percent","move","moveName","ele","eleName","opt","res","typeName","overloaded","multi","variants","shattered","electrocharged","superconduct","swirl","reaction","vaporize","melt","baseMulti","data","baseStat","specializeStat","hitArr","aimedShot","fullAimedShot","dmg","dmgPerWave","totDMG","fromEntries","percentArr","tlvl","aimShot","detonationDMG","hpFlat","contHP","contHPFlat","regenPerHit","contRegen","regen","spinning","onHit","lightningDMG","dmgRed","shield","atk1","atk2","press","lvl1hit1","lvl1hit2","lvl2hit1","lvl2hit2","explosion","healHP","healHPFlat","atkRatio","atkBonus","constellation","final","hit1","hit2","hit3","slashing","dot","hit2b","hit3b","oz","fullAimedShotOz","activeChar","addDmg","passive2","thunderRetri","constellation1","jointAttDmg","_defineProperties","props","descriptor","ConditionalsUtil","instance","Constructor","protoProps","staticProps","conditionals","srcKeyObj","srcKey","srcKey2","find","cond","conditionalNum","findIndex","splice","newCond","conditional","fieldName","defVal","selectedConditionalNum","selectedConditional","curConditional","maxStack","stacks","aimShot1","frostflake","frostflakeBloom","talentConditionals","getConditionalNum","Math","min","charged_critRate_","atk_inc","low_dmg","low_regen","dmgC2","field_dmg","heal_flat","heal_atk","regen_flat","regen_atk","dmg_hold","heal","passive1","stilleto","thunderclasp_slash","consec_slash","last","thunderclap_slashing","jumpyDmg","mineDmg","dmgPounding","dmgChained","talentLevelKeys","constellation4","bubble_explosion","omen_duration","jade","inheri_hp","dmg_per_gem","skill_dmg","shield_def","shield_flat","heal_def","heal_trigger","burst_dmg","bonus","hold","summon","atkspd","auto","constellation6","full","hit_bonus","full_bonus","flatMap","atk_bonus","drain","constellation2","hydro_dmg_","steeleDMG","resonanceDMG","holdDMG","shieldBase","shieldMaxHP","petriDur","zliDMG","hpMulti","amber","barbara","beidou","bennett","diluc","fischl","ganyu","hutao","jean","keqing","klee","mona","ningguang","noelle","razor","venti","xiao","xiangling","xingqiu","zhongli","dmgHP","lowHP","highHP","steeleDMGHP","resonanceDMGHP","holdDMGHP","base","GetFormulaDependency","dependency","Proxy","prop","receiver","add","formulaKeyDependency","GetDependencies","dependencies","InsertDependencies","onmessage","a","t1","performance","now","splitArtifacts","minFilters","maxFilters","maxBuildsToShow","optimizationTarget","ascending","targetKeys","talentKey","formulaKey","targetFormula","charFormulas","characterKey","postMessage","progress","timing","builds","threshold","prune","sort","b","buildFilterVal","buildCount","some","minimum","maximum","artifacts","t2","args"],"mappings":"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","file":"static/js/BuildWorker.c73e7e1a.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/genshin-optimizer/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","//why does this work? no idea. \n$RefreshReg$ = () => { };\n$RefreshSig$ = () => () => { };\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\nfunction getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \n}\nfunction getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\nconst loadFromLocalStorage = (key) => {\n  let data = localStorage.getItem(key)\n  if (!data) return null\n  return JSON.parse(data)\n}\nconst saveToLocalStorage = (key, obj) =>\n  localStorage.setItem(key, JSON.stringify(obj));\nconst deepClone = (obj) =>\n  JSON.parse(JSON.stringify(obj))\n\nconst closeEnoughFloat = (a, b) =>\n  Math.abs(a - b) <= 0.101\n\nconst closeEnoughInt = (a, b) =>\n  Math.abs(a - b) <= 1\nconst clamp = (val, low, high) => {\n  if (val < low) return low;\n  if (val > high) return high;\n  return val\n}\nconst getArrLastElement = (arr) =>\n  arr.length ? arr[arr.length - 1] : null\n\nconst clamp01 = (val) => clamp(val, 0, 1)\nconst clampPercent = (val) => clamp(val, 0, 100)\n\n//use to pretty print timestamps, or anything really.\nfunction strPadLeft(string, pad, length) {\n  return (new Array(length + 1).join(pad) + string).slice(-length);\n}\n\n//fuzzy compare strings. longer the distance, the higher the mismatch.\nfunction hammingDistance(str1, str2) {\n  var dist = 0;\n  str1 = str1.toLowerCase();\n  str2 = str2.toLowerCase();\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\n    let match = true\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\n      match = false\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\n      match = true\n    if (!match) dist++\n  }\n  return dist;\n}\n\n//multiplies every numberical value in the obj by a multiplier.\nfunction objMultiplication(obj, multi) {\n  Object.keys(obj).forEach(prop => {\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\n  })\n}\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\nconst getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\nexport {\n  getRandomInt,\n  getRandomIntInclusive,\n  getRandomArbitrary,\n  getRandomElementFromArray,\n  loadFromLocalStorage,\n  saveToLocalStorage,\n  deepClone,\n  closeEnoughFloat,\n  closeEnoughInt,\n  clamp,\n  clamp01,\n  clampPercent,\n  getArrLastElement,\n  strPadLeft,\n  hammingDistance,\n  objMultiplication,\n  getObjectKeysRecursive\n}","const ElementalData = {\n  physical: { name: \"Physical\" },\n  anemo: { name: \"Anemo\" },\n  geo: { name: \"Geo\" },\n  electro: { name: \"Electro\" },\n  hydro: { name: \"Hydro\" },\n  pyro: { name: \"Pyro\" },\n  cryo: { name: \"Cryo\" },\n  // dendro: { name: \"Dendro\" }\n}\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\n\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\nexport const hitElements = ElementalData\nexport const transformativeReactions = {\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [ \"pyro\" ] },\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [ \"physical\" ] },\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [ \"electro\" ] },\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [ \"cryo\" ] },\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [ \"pyro\", \"hydro\", \"electro\", \"cryo\" ] },\n}\nexport const amplifyingReactions = {\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\n}\nexport const otherReactions = {\n  burning: \"Burning\",\n  crystalize: \"Crystalize\",\n}\nexport const transformativeReactionLevelMultipliers = [ 0,\n  17.2,  18.5,  19.9,  21.3,  22.6,  24.6,  26.6,  28.9,  31.4,  34.1,\n  37.2,  40.7,  44.4,  48.6,  53.7,  59.1,  64.4,  69.7,  75.1,  80.6,\n  86.1,  91.7,  97.2, 102.8, 108.4, 113.2, 118.1, 123.0, 129.7, 136.3,\n 142.7, 149.0, 155.4, 161.8, 169.1, 176.5, 184.1, 191.7, 199.6, 207.4,\n 215.4, 224.2, 233.5, 243.4, 256.1, 268.5, 281.5, 295.0, 309.1, 323.6,\n 336.8, 350.5, 364.5, 378.6, 398.6, 416.4, 434.4, 452.6, 471.4, 490.5,\n 509.5, 532.8, 556.4, 580.1, 607.9, 630.2, 652.9, 675.2, 697.8, 720.2,\n 742.5, 765.2, 784.4, 803.4, 830.9, 854.4, 877.8, 900.1, 923.8, 946.4,\n 968.6, 991.0,1013.5,1036.1,1066.6,1090.0,1115.0,1141.7,1171.9,1202.8,\n1202.8,1233.9,1264.7,1305.7,1346.1,1468.9,1524.0,1577.0,1627.6,1674.8,\n]\nexport const crystalizeLevelMultipliers = [ 0,\n  91,  99, 106, 114, 121, 129, 136, 144, 151, 159,\n 170, 181, 192, 204, 216, 228, 248, 268, 287, 304,\n 320, 337, 352, 368, 384, 394, 405, 416, 427, 438,\n 448, 459, 470, 481, 490, 499, 513, 529, 544, 557,\n 574, 591, 607, 622, 638, 649, 667, 684, 702, 715,\n 733, 750, 767, 784, 800, 814, 834, 855, 876, 896,\n 915, 936, 956, 982,1003,1017,1036,1057,1075,1096,\n1114,1135,1149,1170,1191,1205,1224,1243,1260,1277,\n1293,1308,1317,1327,1336,1349,1366,1384,1403,1424,\n1450,1478,1507,1543,1570,1580,1589,1673,1682,1691,\n]","import { clamp } from \"./Util/Util\";\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\n\nconst StatData = {\n  flat: { name: \"\", default: 1 },\n\n  // Character Stats\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\n\n  // Weapon Stats\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\n\n  // Character & Weapon Stats\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\n\n  // Weapon & Artifact Stats\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\n\n  // Attack-related Character, Weapon & Artifact Stats\n  finalHP: { name: \"HP\", pretty: \"HP\" },\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\n\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\n\n  eleMas: { name: \"Elemental Mastery\", },\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\n\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\n\n  // Misc. Stats\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\n  stamina: { name: \"Stamina\" },\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\n\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\n\n  // Reaction\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\n\n  // Enemy\n  enemyLevel: { name: \"Enemy Level\", const: true },\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true }\n}\nconst Formulas = {\n  // Basic Stats\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\n\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\n\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\n\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\n\n  // Reactions\n  transformative_level_multi: (s, c) => transformativeReactionLevelMultipliers[c.characterLevel],\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\n\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\n  crystalize_multi: (s, c) => crystalizeLevelMultipliers[c.characterLevel],\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\n}\n\nconst ElementToReactionKeys = {\n  physical: [],\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\n  geo: [\"crystalize_hit\", \"shattered_hit\"],\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\", \n  dendro: []\n}\nfunction resMultiplier(res) {\n  res = res / 100\n  if (res < 0) return 1 - res / 2\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\n  return 1 - res\n}\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\n\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\n})\n\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n  const opt = { variant: ele }\n  // DONT CHANGE. needed for screenshot parsing\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\n\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, const: true, ...opt }\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\n\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", const: true, ...opt }\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\n\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(c[`${ele}_enemyRes_`])\n})\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n    const opt = { variant: ele }\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s, c) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\n    })\n\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => s[`${ele}_${move}_hit_base_multi`] * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\n  })\n})\n\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\n  const opt = { variant: reaction }\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\n  Formulas[`${reaction}_multi`] = (s, c) => multi * c.transformative_level_multi\n  if (variants.length === 1) {\n    const [ele] = variants, opt = { variant: reaction }\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\n    Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\n  } else {\n    variants.forEach(ele => {\n      const opt = { variant: ele }\n\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\n      Formulas[`${ele}_${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\n    })\n  }\n})\n\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\n  const opt = { variant: reaction }\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\n\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\n      })\n    })\n  })\n})\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\n\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\n  const formulaList = dependencyKeys.map(key => {\n    const modifier = modifiers[key] ?? {}\n    const constModifier = Object.entries(modifier).filter(([k]) => StatData[k]?.const)\n    const dynamicModifier = Object.entries(modifier).filter(([k]) => !(StatData[k]?.const))\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]) => accu + c[k] * m, 0)\n    const dynamicFunc = (s) => dynamicModifier.reduce((accu, [k, m]) => accu + s[k] * m, 0)\n\n    let funcIndicator = 0\n    if (constModifier.length) funcIndicator += 1\n    if (dynamicModifier.length) funcIndicator += 2\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\n\n    let tmp\n    switch (funcIndicator) {\n      case 0: tmp = Formulas[key]; break\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\n      case 4: tmp = (s, c) => c[key]; break\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\n      case 8: tmp = (s, c) => s[key]; break\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\n    }\n    const func = tmp\n\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\n\n    if (!(key in Formulas))\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\n\n    if (StatData[key]?.const) {\n      constData[key] = stats[key]\n      constData[key] = func(stats, constData)\n      stats[key] = constData[key]\n      if (dynamicModifier.length)\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\n      return null\n    }\n\n    if (!(key in Formulas))\n      initialStats[key] = stats[key]\n\n    return [key, func]\n  }).filter((func) => func)\n\n  if (debug) console.log(initialStats, constData)\n\n  return {\n    initialStats,\n    formula: s => {\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\n      Object.assign(s, constData)\n    }\n  }\n}\n\nexport {\n  Formulas,\n  StatData,\n  ElementToReactionKeys,\n  PreprocessFormulas,\n}\n","import ElementalData from \"../Data/ElementalData\"\n\n/**\n * Generate all set of artifacts-by-slots based on the filters\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\n *\n */\nexport function artifactSetPermutations(artifactsBySlot, setFilters) {\n  const setKeys = new Set(setFilters.map(i => i.key)), filteredArtifactsBySlot = {}\n  const slotKeys = Object.keys(artifactsBySlot)\n\n  for (const slotKey of slotKeys) {\n    let artifactsBySet = {}\n    for (const artifact of artifactsBySlot[slotKey]) {\n      if (setKeys.has(artifact.setKey)) {\n        if (artifactsBySet[artifact.setKey]) artifactsBySet[artifact.setKey].push(artifact)\n        else artifactsBySet[artifact.setKey] = [artifact]\n      } else {\n        if (artifactsBySet[null]) artifactsBySet[null].push(artifact)\n        else artifactsBySet[null] = [artifact]\n      }\n    }\n    filteredArtifactsBySlot[slotKey] = Object.freeze(artifactsBySet)\n  }\n\n  const setCount = {}, accu = {}, result = []\n\n  function slotPerm(index) {\n    if (index >= slotKeys.length) {\n      for (const { key, num } of setFilters)\n        if ((setCount[key] ?? 0) < num)\n          return\n      result.push({ ...accu })\n      return\n    }\n\n    const slotKey = slotKeys[index]\n    let artifactsBySet = filteredArtifactsBySlot[slotKey]\n    for (const setKey in artifactsBySet) {\n      setCount[setKey] = (setCount[setKey] ?? 0) + 1\n      accu[slotKey] = artifactsBySet[setKey]\n      slotPerm(index + 1)\n      setCount[setKey] -= 1\n    }\n  }\n\n  slotPerm(0)\n  return result\n}\n\n/**\n * Compute number of all artifact permutations based on the filters\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\n */\nexport function calculateTotalBuildNumber(artifactsBySlot, setFilters) {\n  return artifactSetPermutations(artifactsBySlot, setFilters).reduce((accu, artifactsBySlot) =>\n    accu + Object.entries(artifactsBySlot).reduce((accu, artifacts) => accu * artifacts[1].length, 1)\n    , 0)\n}\n\n/**\n * @callback artifactCallback\n * @param {Object.<artifactKey, artifact>} artifacts - the list of artifacts\n * @param {stats} stats - the total stats for the artifacts\n */\n\n/**\n * Generate all artifact permutations and accumulate the stats\n * @param {stats} initialStats - initial stats before any artifact is added\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - the list of the set effects\n * @param {artifactCallback} callback - the functions called with each permutation\n */\nexport function artifactPermutations(initialStats, artifactsBySlot, artifactSetEffects, callback) {\n  const slotKeys = Object.keys(artifactsBySlot), setCount = {}, accu = {}\n  function slotPerm(index, stats) {\n    if (index >= slotKeys.length) {\n      callback(accu, stats)\n      return\n    }\n\n    let slotKey = slotKeys[index]\n    for (const artifact of artifactsBySlot[slotKey]) {\n      let newStats = { ...stats }\n      accumulate(slotKey, artifact, setCount, accu, newStats, artifactSetEffects)\n      slotPerm(index + 1, newStats)\n      setCount[artifact.setKey] -= 1\n    }\n  }\n\n  slotPerm(0, initialStats)\n}\n\nfunction accumulate(slotKey, art, setCount, accu, stats, artifactSetEffects) {\n  let setKey = art.setKey\n  accu[slotKey] = art\n  setCount[setKey] = (setCount[setKey] ?? 0) + 1\n\n  // Add artifact stats\n  if (art.mainStatKey in stats) stats[art.mainStatKey] += art.mainStatVal\n  art.substats.forEach((substat) => {\n    if (substat?.key in stats) stats[substat.key] += substat.value\n  })\n\n  // Add set effects\n  let setEffect = artifactSetEffects[setKey]?.[setCount[setKey]]\n  setEffect && Object.entries(setEffect).forEach(([statKey, val]) => {\n    if (statKey in stats) stats[statKey] += val\n  })\n}\n\n/**\n  * Create statKey in the form of ${ele}_elemental_${type} for elemental DMG, ${ele}_${src}_${type} for talent DMG.\n  * @param {string} skillKey - The DMG src. Can be \"norm\",\"skill\". Use an elemental to specify a elemental hit \"physical\" -> physical_elemental_{type}. Use \"elemental\" here to specify a elemental hit of character's element/reactionMode\n  * @param {*} stats - The character. Will extract hitMode, autoInfused...\n  * @param {*} elemental - Override the hit to be the character's elemental, that is not part of infusion.\n  */\nexport function getTalentStatKey(skillKey, stats, elemental = false) {\n  const { hitMode = \"\", autoInfused = false, reactionMode = null, characterEle = \"anemo\", weaponType = \"sword\" } = stats\n  if (Object.keys(ElementalData).includes(skillKey)) return `${skillKey}_elemental_${hitMode}`//elemental DMG\n  if (!elemental) elemental = weaponType === \"catalyst\" || autoInfused\n  let eleKey = \"physical\"\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\n    eleKey = (reactionMode ? reactionMode : characterEle)\n  return `${eleKey}_${skillKey}_${hitMode}`\n}\n\nexport function getTalentStatKeyVariant(skillKey, stats, elemental = false) {\n  if (Object.keys(ElementalData).includes(skillKey)) return skillKey\n  const { autoInfused = false, characterEle = \"anemo\", weaponType = \"sword\" } = stats\n  let { reactionMode } = stats\n  //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\n  if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\n    reactionMode = \"vaporize\"\n  else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\n    reactionMode = \"melt\"\n  if (!elemental) elemental = weaponType === \"catalyst\" || autoInfused\n  let eleKey = \"physical\"\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\n    eleKey = (reactionMode ? reactionMode : characterEle)\n  return eleKey\n}","import { getTalentStatKey } from \"../Build/Build\"\n//for basic formula in the format of \"percent/100 * s[statKey]\"\nfunction basicDMGFormula(percent, stats, skillKey, elemental = false) {\n  const val = percent / 100\n  const statKey = getTalentStatKey(skillKey, stats, elemental)\n  return [s => val * s[statKey], [statKey]]\n}\nexport {\n  basicDMGFormula,\n}","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\n\nconst data = {\n  baseStat: {\n    characterHP: [793, 2038, 2630, 3940, 4361, 5016, 5578, 6233, 6654, 7309, 7730, 8385, 8806, 9461],\n    characterATK: [19, 48, 62, 93, 103, 118, 131, 147, 157, 172, 182, 198, 208, 223],\n    characterDEF: [50, 129, 167, 250, 277, 318, 354, 396, 423, 464, 491, 532, 559, 601]\n  },\n  specializeStat: {\n    key: \"atk_\",\n    value: [0, 0, 0, 0, 7.5, 7.5, 15, 15, 15, 15, 22.5, 22.5, 30, 30]\n  },\n  normal: {\n    hitArr: [\n      [36.12, 39.06, 42, 46.2, 49.14, 52.5, 57.12, 61.74, 66.36, 71.4, 76.44, 81.48, 86.52, 91.56, 96.6],\n      [36.12, 39.06, 42, 46.2, 49.14, 52.5, 57.12, 61.74, 66.36, 71.4, 76.44, 81.48, 86.52, 91.56, 96.6],\n      [46.44, 50.22, 54, 59.4, 63.18, 67.5, 73.44, 79.38, 85.32, 91.8, 98.28, 104.76, 111.24, 117.72, 124.2],\n      [47.3, 51.15, 55, 60.5, 64.35, 68.75, 74.8, 80.85, 86.9, 93.5, 100.1, 106.7, 113.3, 119.9, 126.5],\n      [59.34, 64.17, 69, 75.9, 80.73, 86.25, 93.84, 101.43, 109.02, 117.3, 125.58, 133.86, 142.14, 150.42, 158.7],\n    ],\n  },\n  charged: {\n    aimedShot: [43.86, 47.43, 51, 56.1, 59.67, 63.75, 69.36, 74.97, 80.58, 86.7, 92.82, 98.94, 105.06, 111.18, 117.3],\n    fullAimedShot: [124, 133.3, 142.6, 155, 164.3, 173.6, 186, 198.4, 210.8, 223.2, 235.6, 248, 263.5, 279, 294.5]\n  },\n  plunging: {\n    dmg: [56.83, 61.45, 66.08, 72.69, 77.31, 82.6, 89.87, 97.14, 104.41, 112.34, 120.27, 128.2, 136.12, 144.05, 151.98],\n    low: [113.63, 122.88, 132.13, 145.35, 154.59, 165.17, 179.7, 194.23, 208.77, 224.62, 240.48, 256.34, 272.19, 288.05, 303.9],\n    high: [141.93, 153.49, 165.04, 181.54, 193.1, 206.3, 224.45, 242.61, 260.76, 280.57, 300.37, 320.18, 339.98, 359.79, 379.59]\n  },\n  skill: {\n    hp: [41.36, 44.46, 47.56, 51.7, 54.8, 57.9, 62.04, 66.18, 70.31, 74.45, 78.58, 82.72, 87.89, 93.06, 98.23],\n    dmg: [123.2, 132.44, 141.68, 154, 163.24, 172.48, 184.8, 197.12, 209.44, 221.76, 234.08, 246.4, 261.8, 277.2, 292.6],\n  },\n  burst: {\n    dmgPerWave: [28.08, 30.19, 32.29, 35.1, 37.21, 39.31, 42.12, 44.93, 47.74, 50.54, 53.35, 56.16, 59.67, 63.18, 66.69],\n    totDMG: [505.44, 543.35, 581.26, 631.8, 669.71, 707.62, 758.16, 808.7, 859.25, 909.79, 960.34, 1010.88, 1074.06, 1137.24, 1200.42],\n  }\n}\n\nconst formula = {\n  normal: Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [i, (tlvl, stats) =>\n    basicDMGFormula(percentArr[tlvl], stats, \"normal\")])),\n  charged: {\n    aimShot: (tlvl, stats) => basicDMGFormula(data.charged.aimedShot[tlvl], stats, \"charged\"),\n    fullAimedShot: (tlvl, stats) => basicDMGFormula(data.charged.fullAimedShot[tlvl], stats, \"charged\", true),\n  },\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([key, arr]) => [key, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\n  skill: {\n    hp: (tlvl) => {\n      const hp = data.skill.hp[tlvl] / 100\n      return [(s) => hp * s.finalHP, [\"finalHP\"]]\n    },\n    dmg: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl], stats, \"skill\"),\n    detonationDMG: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl] + 200, stats, \"skill\"),\n  },\n  burst: {\n    dmgPerWave: (tlvl, stats) => basicDMGFormula(data.burst.dmgPerWave[tlvl], stats, \"burst\"),\n    totDMG: (tlvl, stats) => basicDMGFormula(data.burst.totDMG[tlvl], stats, \"burst\"),\n  }\n}\n\nexport default formula\nexport {\n  data\n}","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\n\nconst data = {\n  baseStat: {\n    characterHP: [821, 2108, 2721, 4076, 4512, 5189, 5770, 6448, 6884, 7561, 7996, 8674, 9110, 9787],\n    characterATK: [13, 34, 44, 66, 73, 84, 94, 105, 112, 123, 130, 141, 148, 159],\n    characterDEF: [56, 144, 186, 279, 308, 355, 394, 441, 470, 517, 546, 593, 623, 669]\n  },\n  specializeStat: {\n    key: \"hp_\",\n    value: [0, 0, 0, 0, 6, 6, 12, 12, 12, 12, 18, 18, 24, 24]\n  },\n  normal: {\n    hitArr: [\n      [37.84, 40.68, 43.52, 47.3, 50.14, 52.98, 56.76, 60.54, 64.33, 68.11, 72.05, 77.19, 82.34, 87.49, 92.63],\n      [35.52, 38.18, 40.85, 44.4, 47.06, 49.73, 53.28, 56.83, 60.38, 63.94, 67.63, 72.46, 77.29, 82.12, 86.95],\n      [41.04, 44.12, 47.2, 51.3, 54.38, 57.46, 61.56, 65.66, 69.77, 73.87, 78.14, 83.72, 89.3, 94.88, 100.47],\n      [55.2, 59.34, 63.48, 69, 73.14, 77.28, 82.8, 88.32, 93.84, 99.36, 105.1, 112.61, 120.12, 127.62, 135.13],\n    ],\n  },\n  charged: {\n    dmg: [166.24, 178.71, 191.18, 207.8, 220.27, 232.74, 249.36, 265.98, 282.61, 299.23, 316.52, 339.13, 361.74, 384.35, 406.96],\n  },\n  plunging: {\n    dmg: [56.83, 61.45, 66.08, 72.69, 77.31, 82.6, 89.87, 97.14, 104.41, 112.34, 120.27, 128.2, 136.12, 144.05, 151.98],\n    low: [113.63, 122.88, 132.13, 145.35, 154.59, 165.17, 179.7, 194.23, 208.77, 224.62, 240.48, 256.34, 272.19, 288.05, 303.9],\n    high: [141.93, 153.49, 165.04, 181.54, 193.1, 206.3, 224.45, 242.61, 260.76, 280.57, 300.37, 320.18, 339.98, 359.79, 379.59]\n  },\n  skill: {\n    hp: [0.75, 0.81, 0.86, 0.94, 0.99, 1.05, 1.13, 1.2, 1.27, 1.35, 1.43, 1.5, 1.59, 1.69, 1.78],\n    hpFlat: [72, 79, 87, 96, 105, 114, 125, 135, 147, 159, 172, 185, 199, 213, 228],\n    contHP: [4, 4.3, 4.6, 5, 5.3, 5.6, 6, 6.4, 6.8, 7.2, 7.6, 8, 8.5, 9, 9.5],\n    contHPFlat: [385, 424, 465, 510, 559, 610, 664, 722, 783, 847, 915, 986, 1059, 1136, 1217],\n    dmg: [58.4, 62.78, 67.16, 73, 77.38, 81.76, 87.6, 93.44, 99.28, 105.12, 110.96, 116.8, 124.1, 131.4, 138.7],\n  },\n  burst: {\n    hp: [17.6, 18.92, 20.24, 22, 23.32, 24.64, 26.4, 28.16, 29.92, 31.68, 33.44, 35.2, 37.4, 39.6, 41.8],\n    flat: [1694, 1864, 2047, 2245, 2457, 2683, 2923, 3177, 3445, 3728, 4024, 4335, 4660, 4999, 5352],\n  }\n}\n\nconst formula = {\n  normal: Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [i, (tlvl, stats) =>\n    basicDMGFormula(percentArr[tlvl], stats, \"normal\")])),\n  charged: {\n    dmg: (tlvl, stats) => basicDMGFormula(data.charged.dmg[tlvl], stats, \"charged\"),\n  },\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([key, arr]) => [key, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\n  skill: {\n    regenPerHit: (tlvl) => {\n      const hp = data.skill.hp[tlvl] / 100\n      const flat = data.skill.hpFlat[tlvl]\n      return [s => (hp * s.finalHP + flat) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\n    },\n    contRegen: (tlvl) => {\n      const hp = data.skill.contHP[tlvl] / 100\n      const flat = data.skill.contHPFlat[tlvl]\n      return [s => (hp * s.finalHP + flat) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\n    },\n    dmg: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl], stats, \"skill\"),\n  },\n  burst: {\n    regen: (tlvl) => {\n      const hp = data.burst.hp[tlvl] / 100\n      const flat = data.burst.flat[tlvl]\n      return [s => (hp * s.finalHP + flat) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\n    },\n  }\n}\n\nexport default formula\nexport {\n  data\n}","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\n\nconst data = {\n  baseStat: {\n    characterHP: [1094, 2811, 3628, 5435, 6015, 6919, 7694, 8597, 9178, 10081, 10662, 11565, 12146, 13050],\n    characterATK: [19, 49, 63, 94, 104, 119, 133, 148, 158, 174, 184, 200, 210, 225],\n    characterDEF: [54, 140, 180, 270, 299, 344, 382, 427, 456, 501, 530, 575, 603, 648]\n  },\n  specializeStat: {\n    key: \"electro_dmg_\",\n    value: [0, 0, 0, 0, 6, 6, 12, 12, 12, 12, 18, 18, 24, 24]\n  },\n  normal: {\n    hitArr: [\n      [71.12, 76.91, 82.7, 90.97, 96.76, 103.38, 112.47, 121.57, 130.67, 140.59, 151.96, 165.33, 178.71, 192.08, 206.67],\n      [70.86, 76.63, 82.4, 90.64, 96.41, 103, 112.06, 121.13, 130.19, 140.08, 151.41, 164.73, 178.06, 191.38, 205.92],\n      [88.32, 95.51, 102.7, 112.97, 120.16, 128.38, 139.67, 150.97, 162.27, 174.59, 188.71, 205.32, 221.92, 238.53, 256.65],\n      [86.52, 93.56, 100.6, 110.66, 117.7, 125.75, 136.82, 147.88, 158.95, 171.02, 184.85, 201.12, 217.39, 233.65, 251.4],\n      [112.14, 121.27, 130.4, 143.44, 152.57, 163, 177.34, 191.69, 206.03, 221.68, 239.61, 260.7, 281.78, 302.87, 325.87],\n    ],\n  },\n  charged: {\n    spinning: [56.24, 60.82, 65.4, 71.94, 76.52, 81.75, 88.94, 96.14, 103.33, 111.18, 120.17, 130.75, 141.32, 151.9, 163.43],\n    finalATK: [101.82, 110.11, 118.4, 130.24, 138.53, 148, 161.02, 174.05, 187.07, 201.28, 217.56, 236.71, 255.85, 275, 295.88]\n  },\n  plunging: {\n    dmg: [74.59, 80.66, 86.73, 95.4, 101.47, 108.41, 117.95, 127.49, 137.03, 147.44, 157.85, 168.26, 178.66, 189.07, 199.48],\n    low: [149.14, 161.28, 173.42, 190.77, 202.91, 216.78, 235.86, 254.93, 274.01, 294.82, 315.63, 336.44, 357.25, 378.06, 398.87],\n    high: [186.29, 201.45, 216.62, 238.28, 253.44, 270.77, 294.6, 318.42, 342.25, 368.25, 394.24, 420.23, 446.23, 472.22, 498.21]\n  },\n  skill: {\n    hp: [14.4, 15.48, 16.56, 18, 19.08, 20.16, 21.6, 23.04, 24.48, 25.92, 27.36, 28.8, 30.6, 32.4, 34.2],\n    flat: [1386, 1525, 1675, 1837, 2010, 2195, 2392, 2600, 2819, 3050, 3293, 3547, 3813, 4090, 4379],\n    dmg: [121.6, 130.72, 139.84, 152, 161.12, 170.24, 182.4, 194.56, 206.72, 218.88, 231.04, 243.2, 258.4, 273.6, 288.8],\n    onHit: [160, 172, 184, 200, 212, 224, 240, 256, 272, 288, 304, 320, 340, 360, 380],\n  },\n  burst: {\n    dmg: [121.6, 130.72, 139.84, 152, 161.12, 170.24, 182.4, 194.56, 206.72, 218.88, 231.04, 243.2, 258.4, 273.6, 288.8],\n    lightningDMG: [96, 103.2, 110.4, 120, 127.2, 134.4, 144, 153.6, 163.2, 172.8, 182.4, 192, 204, 216, 228],\n    dmgRed: [20, 21, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 37, 38, 39],\n  }\n}\n\nconst formula = {\n  normal: {\n    ...Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [i, (tlvl, stats) =>\n      basicDMGFormula(percentArr[tlvl], stats, \"normal\")])),\n    ...Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [`a${i}`, (tlvl, stats) =>\n      basicDMGFormula(percentArr[tlvl] * 0.2, stats, \"normal\", true)])),\n  },\n  charged: {\n    spinning: (tlvl, stats) => basicDMGFormula(data.charged.spinning[tlvl], stats, \"charged\"),\n    finalATK: (tlvl, stats) => basicDMGFormula(data.charged.finalATK[tlvl], stats, \"charged\"),\n  },\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([key, arr]) => [key, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\n  skill: {\n    shield: (tlvl) => {\n      const hp = data.skill.hp[tlvl] / 100\n      const flat = data.skill.flat[tlvl]\n      return [(s) => hp * s.finalHP + flat, [\"finalHP\"]]\n    },\n    dmg: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl], stats, \"skill\"),\n    onHit: (tlvl, stats) => basicDMGFormula(data.skill.onHit[tlvl], stats, \"skill\"),\n  },\n  burst: {\n    dmg: (tlvl, stats) => basicDMGFormula(data.burst.dmg[tlvl], stats, \"burst\"),\n    lightningDMG: (tlvl, stats) => basicDMGFormula(data.burst.lightningDMG[tlvl], stats, \"burst\"),\n  }\n}\n\nexport default formula\nexport {\n  data\n}","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\n\nconst data = {\n  baseStat: {\n    characterHP: [1039, 2670, 3447, 5163, 5715, 6573, 7309, 8168, 8719, 9577, 10129, 10987, 11539, 12397],\n    characterATK: [16, 41, 53, 80, 88, 101, 113, 126, 134, 148, 156, 169, 178, 191],\n    characterDEF: [65, 166, 214, 321, 356, 409, 455, 508, 542, 596, 630, 684, 718, 771]\n  },\n  specializeStat: {\n    key: \"enerRech_\",\n    value: [0, 0, 0, 0, 6.7, 6.7, 13.3, 13.3, 13.3, 13.3, 20, 20, 26.7, 26.7]\n  },\n  normal: {\n    hitArr: [\n      [44.55, 48.17, 51.8, 56.98, 60.61, 64.75, 70.45, 76.15, 81.84, 88.06, 94.28, 100.49, 106.71, 112.92, 119.14],\n      [42.74, 46.22, 49.7, 54.67, 58.15, 62.13, 67.59, 73.06, 78.53, 84.49, 90.45, 96.42, 102.38, 108.35, 114.31],\n      [54.61, 59.06, 63.5, 69.85, 74.3, 79.38, 86.36, 93.35, 100.33, 107.95, 115.57, 123.19, 130.81, 138.43, 146.05],\n      [59.68, 64.54, 69.4, 76.34, 81.2, 86.75, 94.38, 102.02, 109.65, 117.98, 126.31, 134.64, 142.96, 151.29, 159.62],\n      [71.9, 77.75, 83.6, 91.96, 97.81, 104.5, 113.7, 122.89, 132.09, 142.12, 152.15, 162.18, 172.22, 182.25, 192.28]\n    ],\n  },\n  charged: {\n    atk1: [55.9, 60.45, 65, 71.5, 76.05, 81.25, 88.4, 95.55, 102.7, 110.5, 118.3, 126.1, 133.9, 141.7, 149.5],\n    atk2: [60.72, 65.66, 70.6, 77.66, 82.6, 88.25, 96.02, 103.78, 111.55, 120.02, 128.49, 136.96, 145.44, 153.91, 162.38],\n  },\n  plunging: {\n    dmg: [63.93, 69.14, 74.34, 81.77, 86.98, 92.93, 101.1, 109.28, 117.46, 126.38, 135.3, 144.22, 153.14, 162.06, 170.98],\n    low: [127.84, 138.24, 148.65, 163.51, 173.92, 185.81, 202.16, 218.51, 234.86, 252.7, 270.54, 288.38, 306.22, 324.05, 341.89],\n    high: [159.68, 172.67, 185.67, 204.24, 217.23, 232.09, 252.51, 272.93, 293.36, 315.64, 337.92, 360.2, 382.48, 404.76, 427.04]\n  },\n  skill: {\n    press: [137.6, 147.92, 158.24, 172, 182.32, 192.64, 206.4, 220.16, 233.92, 247.68, 261.44, 275.2, 292.4, 309.6, 326.8],\n    lvl1hit1: [84, 90.3, 96.6, 105, 111.3, 117.6, 126, 134.4, 142.8, 151.2, 159.6, 168, 178.5, 189, 199.5],\n    lvl1hit2: [92, 98.9, 105.8, 115, 121.9, 128.8, 138, 147.2, 156.4, 165.6, 174.8, 184, 195.5, 207, 218.5],\n    lvl2hit1: [88, 94.6, 101.2, 110, 116.6, 123.2, 132, 140.8, 149.6, 158.4, 167.2, 176, 187, 198, 209],\n    lvl2hit2: [96, 103.2, 110.4, 120, 127.2, 134.4, 144, 153.6, 163.2, 172.8, 182.4, 192, 204, 216, 228],\n    explosion: [132, 141.9, 151.8, 165, 174.9, 184.8, 198, 211.2, 224.4, 237.6, 250.8, 264, 280.5, 297, 313.5]\n  },\n  burst: {\n    dmg: [232.8, 250.26, 267.72, 291, 308.46, 325.92, 349.2, 372.48, 395.76, 419.04, 442.32, 465.6, 494.7, 523.8, 552.9],\n    healHP: [6, 6.45, 6.9, 7.5, 7.95, 8.4, 9, 9.6, 10.2, 10.8, 11.4, 12, 12.75, 13.5, 14.25],\n    healHPFlat: [577, 635, 698, 765, 837, 914, 996, 1083, 1174, 1270, 1371, 1477, 1588, 1703, 1824],\n    atkRatio: [56, 60.2, 64.4, 70, 74.2, 78.4, 84, 89.6, 95.2, 100.8, 106.4, 112, 119, 126, 133]\n  }\n}\n\nconst formula = {\n  normal: Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [i, (tlvl, stats) =>\n    basicDMGFormula(percentArr[tlvl], stats, \"normal\")])),\n  charged: {\n    atk1: (tlvl, stats) => basicDMGFormula(data.charged.atk1[tlvl], stats, \"charged\"),\n    atk2: (tlvl, stats) => basicDMGFormula(data.charged.atk2[tlvl], stats, \"charged\"),\n  },\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([key, arr]) => [key, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\n  skill: Object.fromEntries(Object.entries(data.skill).map(([key, arr]) => [key, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"skill\")])),\n  burst: {\n    dmg: (tlvl, stats) => basicDMGFormula(data.burst.dmg[tlvl], stats, \"burst\"),\n    regen: (tlvl, stats) => {\n      const hp = data.burst.healHP[tlvl] / 100\n      const flat = data.burst.healHPFlat[tlvl]\n      return [s => (hp * s.finalHP + flat) * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\n    },\n    atkBonus: (tlvl, stats) => {\n      const { constellation } = stats\n      const percent = (data.burst.atkRatio[tlvl] + (constellation < 1 ? 0 : 20)) / 100\n      return [s => percent * s.baseATK, [\"baseATK\"]]\n    }\n  }\n}\n\nexport default formula\nexport {\n  data\n}","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\n\nconst data = {\n  baseStat: {\n    characterHP: [1011, 2621, 3488, 5219, 5834, 6712, 7533, 8421, 9036, 9932, 10547, 11453, 12068, 12981],\n    characterATK: [26, 68, 90, 135, 151, 173, 194, 217, 233, 256, 272, 295, 311, 335],\n    characterDEF: [61, 158, 211, 315, 352, 405, 455, 509, 546, 600, 637, 692, 729, 784]\n  },\n  specializeStat: {\n    key: \"critRate_\",\n    value: [0, 0, 0, 0, 4.8, 4.8, 9.6, 9.6, 9.6, 9.6, 14.4, 14.4, 19.2, 19.2]\n  },\n  normal: {\n    hitArr: [\n      [89.7, 97, 104.3, 114.73, 122.03, 130.38, 141.85, 153.32, 164.79, 177.31, 191.65, 208.52, 225.38, 242.25, 260.65],\n      [87.63, 94.77, 101.9, 112.09, 119.22, 127.38, 138.58, 149.79, 161, 173.23, 187.24, 203.72, 220.2, 236.67, 254.65],\n      [98.81, 106.86, 114.9, 126.39, 134.43, 143.63, 156.26, 168.9, 181.54, 195.33, 211.13, 229.71, 248.29, 266.87, 287.14],\n      [133.99, 144.89, 155.8, 171.38, 182.29, 194.75, 211.89, 229.03, 246.16, 264.86, 286.28, 311.48, 336.67, 361.86, 389.34],\n    ]\n  },\n  charged: {\n    spinning: [68.8, 74.4, 80, 88, 93.6, 100, 108.8, 117.6, 126.4, 136, 147, 159.94, 172.87, 185.81, 199.92],\n    final: [124.7, 134.85, 145, 159.5, 169.65, 181.25, 197.2, 213.15, 229.1, 246.5, 266.44, 289.88, 313.33, 336.78, 362.36]\n  },\n  plunging: {\n    dmg: [89.51, 96.79, 104.08, 114.48, 121.77, 130.1, 141.54, 152.99, 164.44, 176.93, 189.42, 201.91, 214.4, 226.89, 239.37],\n    low: [178.97, 193.54, 208.11, 228.92, 243.49, 260.13, 283.03, 305.92, 328.81, 353.78, 378.76, 403.73, 428.7, 453.68, 478.65],\n    high: [223.55, 241.74, 259.94, 285.93, 304.13, 324.92, 353.52, 382.11, 410.7, 441.89, 473.09, 504.28, 535.47, 566.66, 597.86]\n  },\n  skill: {\n    hit1: [94.4, 101.48, 108.56, 118, 125.08, 132.16, 141.6, 151.04, 160.48, 169.92, 179.36, 188.8, 200.6, 212.4, 224.2],\n    hit2: [97.6, 104.92, 112.24, 122, 129.32, 136.64, 146.4, 156.16, 165.92, 175.68, 185.44, 195.2, 207.4, 219.6, 231.8],\n    hit3: [128.8, 138.46, 148.12, 161, 170.66, 180.32, 193.2, 206.08, 218.96, 231.84, 244.72, 257.6, 273.7, 289.8, 305.9],\n  },\n  burst: {\n    slashing: [204, 219.3, 234.6, 255, 270.3, 285.6, 306, 326.4, 346.8, 367.2, 387.6, 408, 433.5, 459, 484.5],\n    dot: [60, 64.5, 69, 75, 79.5, 84, 90, 96, 102, 108, 114, 120, 127.5, 135, 142.5],\n    explosion: [204, 219.3, 234.6, 255, 270.3, 285.6, 306, 326.4, 346.8, 367.2, 387.6, 408, 433.5, 459, 484.5],\n  }\n}\n\nconst formula = {\n  normal: Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [i, (tlvl, stats) =>\n    basicDMGFormula(percentArr[tlvl], stats, \"normal\")])),\n  charged: Object.fromEntries(Object.entries(data.charged).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"charged\")])),\n  plunging: {\n    dmg: (tlvl, stats) => basicDMGFormula(data.plunging.dmg[tlvl], stats, \"plunging\"),\n    low: (tlvl, stats) => basicDMGFormula(data.plunging.low[tlvl], stats, \"plunging\"),\n    high: (tlvl, stats) => basicDMGFormula(data.plunging.high[tlvl], stats, \"plunging\"),\n  },\n  skill: {\n    ...Object.fromEntries(Object.entries(data.skill).map(([name, arr]) =>\n      [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"skill\")])),\n    hit2b: (tlvl, stats) => basicDMGFormula(data.skill.hit2[tlvl] + 40, stats, \"skill\"),\n    hit3b: (tlvl, stats) => basicDMGFormula(data.skill.hit3[tlvl] + 40, stats, \"skill\"),\n  },\n  burst: Object.fromEntries(Object.entries(data.burst).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"burst\")])),\n}\n\nexport default formula\nexport {\n  data\n}","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\n\nconst data = {\n  baseStat: {\n    characterHP: [770, 1979, 2555, 3827, 4236, 4872, 5418, 6054, 6463, 7099, 7508, 8144, 8553, 9189],\n    characterATK: [20, 53, 68, 102, 113, 130, 144, 161, 172, 189, 200, 216, 227, 244],\n    characterDEF: [50, 128, 165, 247, 274, 315, 350, 391, 418, 459, 485, 526, 553, 594]\n  },\n  specializeStat: {\n    key: \"atk_\",\n    value: [0, 0, 0, 0, 6, 6, 12, 12, 12, 12, 18, 18, 24, 24]\n  },\n  normal: {\n    hitArr: [\n      [44.12, 47.71, 51.3, 56.43, 60.02, 64.13, 69.77, 75.41, 81.05, 87.21, 93.37, 99.52, 105.68, 111.83, 117.99],\n      [46.78, 50.59, 54.4, 59.84, 63.65, 68, 73.98, 79.97, 85.95, 92.48, 99.01, 105.54, 112.06, 118.59, 125.12],\n      [58.14, 62.87, 67.6, 74.36, 79.09, 84.5, 91.94, 99.37, 106.81, 114.92, 123.03, 131.14, 139.26, 147.37, 155.48],\n      [57.71, 62.4, 67.1, 73.81, 78.51, 83.88, 91.26, 98.64, 106.02, 114.07, 122.12, 130.17, 138.23, 146.28, 154.33],\n      [72.07, 77.93, 83.8, 92.18, 98.05, 104.75, 113.97, 123.19, 132.4, 142.46, 152.52, 162.57, 172.63, 182.68, 192.74],\n    ]\n  },\n  charged: {\n    aimedShot: [43.86, 47.43, 51, 56.1, 59.67, 63.75, 69.36, 74.97, 80.58, 86.7, 92.82, 98.94, 105.06, 111.18, 117.3],\n    fullAimedShot: [124, 133.3, 142.6, 155, 164.3, 173.6, 186, 198.4, 210.8, 223.2, 235.6, 248, 263.5, 279, 294.5]\n  },\n  plunging: {\n    dmg: [56.83, 61.45, 66.08, 72.69, 77.31, 82.6, 89.87, 97.14, 104.41, 112.34, 120.27, 128.2, 136.12, 144.05, 151.98],\n    low: [113.63, 122.88, 132.13, 145.35, 154.59, 165.17, 179.7, 194.23, 208.77, 224.62, 240.48, 256.34, 272.19, 288.05, 303.9],\n    high: [141.93, 153.49, 165.04, 181.54, 193.1, 206.3, 224.45, 242.61, 260.76, 280.57, 300.37, 320.18, 339.98, 359.79, 379.59]\n  },\n  skill: {\n    oz: [88.8, 95.46, 102.12, 111, 117.66, 124.32, 133.2, 142.08, 150.96, 159.84, 168.72, 177.6, 188.7, 199.8, 210.9],\n    dmg: [115.44, 124.1, 132.76, 144.3, 152.96, 161.62, 173.16, 184.7, 196.25, 207.79, 219.34, 230.88, 245.31, 259.74, 274.17],\n  },\n  burst: {\n    dmg: [208, 223.6, 239.2, 260, 275.6, 291.2, 312, 332.8, 353.6, 374.4, 395.2, 416, 442, 468, 494],\n  }\n}\n\nconst formula = {\n  normal: Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [i, (tlvl, stats) =>\n    basicDMGFormula(percentArr[tlvl], stats, \"normal\")])),\n  charged: {\n    aimShot: (tlvl, stats) => basicDMGFormula(data.charged.aimedShot[tlvl], stats, \"charged\"),\n    fullAimedShot: (tlvl, stats) => basicDMGFormula(data.charged.fullAimedShot[tlvl], stats, \"charged\", true),\n    fullAimedShotOz: (tlvl, stats) => basicDMGFormula(data.charged.fullAimedShot[tlvl] * (152.7 / 100), stats, \"charged\", true),\n  },\n  plunging: {\n    dmg: (tlvl, stats) => basicDMGFormula(data.plunging.dmg[tlvl], stats, \"plunging\"),\n    low: (tlvl, stats) => basicDMGFormula(data.plunging.low[tlvl], stats, \"plunging\"),\n    high: (tlvl, stats) => basicDMGFormula(data.plunging.high[tlvl], stats, \"plunging\"),\n  },\n  skill: {\n    oz: (tlvl, stats) => basicDMGFormula(data.skill.oz[tlvl], stats, \"skill\"),\n    dmg: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl] + (stats.constellation >= 2 ? 200 : 0), stats, \"skill\"),\n    activeChar: (tlvl, stats) => basicDMGFormula(30, stats, \"skill\"),\n  },\n  burst: {\n    dmg: (tlvl, stats) => basicDMGFormula(data.burst.dmg[tlvl], stats, \"burst\"),\n    addDmg: (tlvl, stats) => basicDMGFormula(222, stats, \"burst\"),\n    regen: (tlvl, stats) => [s => 0.2 * s.finalHP * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\n  },\n  passive2: {\n    thunderRetri: (tlvl, stats) => basicDMGFormula(80, stats, \"skill\"),\n  },\n  constellation1: {\n    jointAttDmg: (tlvl, stats) => basicDMGFormula(22, stats, \"normal\"),\n  }\n}\n\nexport default formula\nexport {\n  data\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import { clamp } from \"./Util\";\n\nexport default class ConditionalsUtil {\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\n  static getConditionalNum(conditionals, srcKeyObj) {\n    let { srcKey, srcKey2 } = srcKeyObj\n    if (conditionals)\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\n  }\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\n    let { srcKey, srcKey2 } = srcKeyObj\n    if (!conditionals) conditionals = []\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\n    if (!conditionalNum && index >= 0) {\n      //setting conditionalNum to 0 deletes the element\n      conditionals.splice(index, 1);\n    } else if (!conditionalNum && index < 0) { //nothing to change\n      return conditionals\n    } else {\n      let newCond = { srcKey, conditionalNum }\n      if (srcKey2) newCond.srcKey2 = srcKey2\n      if (index >= 0)\n        conditionals[index] = newCond\n      else\n        conditionals.push(newCond)\n    }\n    return conditionals\n  }\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\n    if (Array.isArray(conditional)) {\n      //multiconditional\n      let selectedConditionalNum = conditionalNum\n      let selectedConditional = null\n      for (const curConditional of conditional) {\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\n        else {\n          selectedConditional = curConditional;\n          break;\n        }\n      }\n      if (!selectedConditional) return defVal\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\n      return [selectedConditional[fieldName], stacks]\n    } else {\n      //condtional with stacks\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\n      return [conditional[fieldName], stacks]\n    }\n  }\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import ConditionalsUtil from \"../../../Util/ConditionalsUtil\"\nimport { basicDMGFormula } from \"../../../Util/FormulaUtil\"\n\nconst data = {\n  baseStat: {\n    characterHP: [763, 1978, 2632, 3939, 4403, 5066, 5686, 6355, 6820, 7495, 7960, 8643, 9108, 9797],\n    characterATK: [26, 68, 90, 135, 151, 173, 194, 217, 233, 256, 272, 295, 311, 335],\n    characterDEF: [49, 127, 169, 253, 283, 326, 366, 409, 439, 482, 512, 556, 586, 630]\n  },\n  specializeStat: {\n    key: \"critDMG_\",\n    value: [0, 0, 0, 0, 9.6, 9.6, 19.2, 19.2, 19.2, 19.2, 28.8, 28.8, 38.4, 38.4]\n  },\n  normal: {\n    hitArr: [\n      [31.73, 34.32, 36.9, 40.59, 43.17, 46.13, 50.18, 54.24, 58.3, 62.73, 67.8, 73.77, 79.74, 85.7, 92.21],\n      [35.6, 38.5, 41.4, 45.54, 48.44, 51.75, 56.3, 60.86, 65.41, 70.38, 76.07, 82.77, 89.46, 96.16, 103.46],\n      [45.49, 49.2, 52.9, 58.19, 61.89, 66.13, 71.94, 77.76, 83.58, 89.93, 97.2, 105.76, 114.31, 122.87, 132.2],\n      [45.49, 49.2, 52.9, 58.19, 61.89, 66.13, 71.94, 77.76, 83.58, 89.93, 97.2, 105.76, 114.31, 122.87, 132.2],\n      [48.25, 52.17, 56.1, 61.71, 65.64, 70.13, 76.3, 82.47, 88.64, 95.37, 103.08, 112.16, 121.23, 130.3, 140.19],\n      [57.62, 62.31, 67, 73.7, 78.39, 83.75, 91.12, 98.49, 105.86, 113.9, 123.11, 133.95, 144.78, 155.61, 167.43],\n    ]\n  },\n  charged: {\n    aimedShot: [43.86, 47.43, 51, 56.1, 59.67, 63.75, 69.36, 74.97, 80.58, 86.7, 92.82, 98.94, 105.06, 111.18, 117.3],\n    aimShot1: [124, 133.3, 142.6, 155, 164.3, 173.6, 186, 198.4, 210.8, 223.2, 235.6, 248, 263.5, 279, 294.5],\n    frostflake: [128, 137.6, 147.2, 160, 169.6, 179.2, 192, 204.8, 217.6, 230.4, 243.2, 256, 272, 288, 304],\n    frostflakeBloom: [217.6, 233.92, 250.24, 272, 288.32, 304.64, 326.4, 348.16, 369.92, 391.68, 413.44, 435.2, 462.4, 489.6, 516.8]\n  },\n  plunging: {\n    dmg: [56.83, 61.45, 66.08, 72.69, 77.31, 82.6, 89.87, 97.14, 104.41, 112.34, 120.27, 128.2, 136.12, 144.05, 151.98],\n    low: [113.63, 122.88, 132.13, 145.35, 154.59, 165.17, 179.7, 194.23, 208.77, 224.62, 240.48, 256.34, 272.19, 288.05, 303.9],\n    high: [141.93, 153.49, 165.04, 181.54, 193.1, 206.3, 224.45, 242.61, 260.76, 280.57, 300.37, 320.18, 339.98, 359.79, 379.59]\n  },\n  skill: {\n    hp: [120, 129, 138, 150, 159, 168, 180, 192, 204, 216, 228, 240, 255, 270, 285],\n    dmg: [132, 141.9, 151.8, 165, 174.9, 184.8, 198, 211.2, 224.4, 237.6, 250.8, 264, 280.5, 297, 313.5],\n  },\n  burst: {\n    dmg: [70.27, 75.54, 80.81, 87.84, 93.11, 98.38, 105.41, 112.44, 119.46, 126.49, 133.52, 140.54, 149.33, 158.11, 166.9],\n  }\n}\n\nconst formula = {\n  normal: Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [i, (tlvl, stats) =>\n    basicDMGFormula(percentArr[tlvl], stats, \"normal\")])),\n  charged: {\n    aimShot: (tlvl, stats) => basicDMGFormula(data.charged.aimedShot[tlvl], stats, \"charged\"),\n    aimShot1: (tlvl, stats) => basicDMGFormula(data.charged.aimShot1[tlvl], stats, \"charged\", true),\n    frostflake: (tlvl, stats) => {\n      if (stats.hitMode === \"avgHit\") {\n        let { talentConditionals = [] } = stats\n        let conditionalNum = ConditionalsUtil.getConditionalNum(talentConditionals, { srcKey: \"auto\", srcKey2: \"UndividedHeart\" })\n        if (conditionalNum) {\n          const val = data.charged.frostflake[tlvl] / 100\n          //cryo_charged_hit or cryo_melt_charged_hit\n          const statKey = `cryo${stats.reactionMode === \"cryo_melt\" ? \"_melt\" : \"\"}_charged_hit`\n          //cryo charged atk hit * (1 + min(20% + critRate, 100) critDmg_)\n          return [s => val * s[statKey] * (1 + Math.min(20 + s.critRate_ + s.charged_critRate_, 100) * s.critDMG_ / 10000), [statKey, \"critRate_\", \"critDMG_\", \"charged_critRate_\"]]\n        }\n      }\n      return basicDMGFormula(data.charged.frostflake[tlvl], stats, \"charged\", true)\n    },\n    frostflakeBloom: (tlvl, stats) => {\n      if (stats.hitMode === \"avgHit\") {\n        let { talentConditionals = [] } = stats\n        let conditionalNum = ConditionalsUtil.getConditionalNum(talentConditionals, { srcKey: \"auto\", srcKey2: \"UndividedHeart\" })\n        if (conditionalNum) {\n          const val = data.charged.frostflakeBloom[tlvl] / 100\n          //cryo_charged_hit or cryo_melt_charged_hit\n          const statKey = `cryo${stats.reactionMode === \"cryo_melt\" ? \"_melt\" : \"\"}_charged_hit`\n          //cryo charged atk hit * (1 + min(20% + critRate, 100) critDmg_)\n          return [s => val * s[statKey] * (1 + Math.min(20 + s.critRate_ + s.charged_critRate_, 100) * s.critDMG_ / 10000), [statKey, \"critRate_\", \"critDMG_\", \"charged_critRate_\"]]\n        }\n      }\n      return basicDMGFormula(data.charged.frostflakeBloom[tlvl], stats, \"charged\", true)\n    },\n  },\n  plunging: {\n    dmg: (tlvl, stats) => basicDMGFormula(data.plunging.dmg[tlvl], stats, \"plunging\"),\n    low: (tlvl, stats) => basicDMGFormula(data.plunging.low[tlvl], stats, \"plunging\"),\n    high: (tlvl, stats) => basicDMGFormula(data.plunging.high[tlvl], stats, \"plunging\"),\n  },\n  skill: {\n    hp: (tlvl) => {\n      const hp = data.skill.hp[tlvl] / 100\n      return [(s) => hp * s.finalHP, [\"finalHP\"]]\n    },\n    dmg: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl], stats, \"skill\"),\n    detonationDMG: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl], stats, \"skill\"),\n  },\n  burst: {\n    dmg: (tlvl, stats) => basicDMGFormula(data.burst.dmg[tlvl], stats, \"burst\"),\n  }\n}\n\nexport default formula\nexport {\n  data\n}","import { getTalentStatKey } from \"../../../Build/Build\"\nimport { basicDMGFormula } from \"../../../Util/FormulaUtil\"\n\nexport const data = {\n  baseStat: {\n    characterHP: [1211, 3141, 4179, 6253, 6990, 8042, 9026, 10089, 10826, 11899, 12637, 13721, 14459, 15552],\n    characterATK: [8, 21, 29, 43, 48, 55, 62, 69, 74, 81, 86, 94, 99, 106],\n    characterDEF: [68, 177, 235, 352, 394, 453, 508, 568, 610, 670, 712, 773, 815, 876]\n  },\n  specializeStat: {\n    key: \"critDMG_\",\n    value: [0, 0, 0, 0, 9.6, 9.6, 19.2, 19.2, 19.2, 19.2, 28.8, 28.8, 38.4, 38.4]\n  },\n  normal: {\n    hitArr: [\n      [46.89, 50.08, 53.28, 57.54, 60.74, 64.47, 69.26, 74.06, 78.85, 83.65, 88.44, 93.24, 98.04, 102.83, 107.63],\n      [48.25, 51.54, 54.83, 59.22, 62.51, 66.35, 71.28, 76.22, 81.15, 86.09, 91.02, 95.96, 100.89, 105.83, 110.76],\n      [61.05, 65.21, 69.38, 74.93, 79.09, 83.94, 90.19, 96.43, 102.68, 108.92, 115.16, 121.41, 127.65, 133.89, 140.14],\n      [65.64, 70.12, 74.59, 80.56, 85.03, 90.26, 96.97, 103.68, 110.4, 117.11, 123.82, 130.54, 137.25, 143.96, 150.68],\n      [33.27, 35.54, 37.81, 40.84, 43.1, 45.75, 49.15, 52.56, 55.96, 59.36, 62.77, 66.17, 69.57, 72.98, 76.38],//5.1\n      [35.2, 37.6, 40, 43.2, 45.6, 48.4, 52, 55.6, 59.2, 62.8, 66.4, 70, 73.6, 77.2, 80.8],//5.2\n      [85.96, 91.82, 97.68, 105.49, 111.36, 118.19, 126.98, 135.78, 144.57, 153.36, 162.15, 170.94, 179.73, 188.52, 197.31],//6\n    ],\n  },\n  charged: {\n    dmg: [135.96, 145.23, 154.5, 166.86, 176.13, 186.95, 200.85, 214.76, 228.66, 242.57, 256.47, 270.38, 284.28, 298.19, 312.09],\n  },\n  plunging: {\n    dmg: [65.42, 69.88, 74.34, 80.29, 84.75, 89.95, 96.64, 103.33, 110.02, 116.71, 123.4, 130.1, 136.79, 143.48, 150.17],\n    low: [130.81, 139.73, 148.65, 160.54, 169.46, 179.86, 193.24, 206.62, 220, 233.38, 246.76, 260.13, 273.51, 286.89, 300.27],\n    high: [163.39, 174.53, 185.67, 200.52, 211.66, 224.66, 241.37, 258.08, 274.79, 291.5, 308.21, 324.92, 341.63, 358.34, 375.05],\n  },\n  skill: {\n    atk_inc: [3.84, 4.07, 4.3, 4.6, 4.83, 5.06, 5.36, 5.66, 5.96, 6.26, 6.56, 6.85, 7.15, 7.45, 7.75],\n    dmg: [64, 68.8, 73.6, 80, 84.8, 89.6, 96, 102.4, 108.8, 115.2, 121.6, 128, 136, 144, 152],\n  },\n  burst: {\n    dmg: [303.27, 321.43, 339.59, 363.2, 381.36, 399.52, 423.13, 446.74, 470.34, 493.95, 517.56, 541.17, 564.78, 588.38, 611.99],\n    low_dmg: [379.09, 401.79, 424.49, 454, 476.7, 499.4, 528.91, 558.42, 587.93, 617.44, 646.95, 676.46, 705.97, 735.48, 764.99],\n    regen: [6.26, 6.64, 7.01, 7.5, 7.88, 8.25, 8.74, 9.23, 9.71, 10.2, 10.69, 11.18, 11.66, 12.15, 12.64],\n    low_regen: [8.35, 8.85, 9.35, 10, 10.5, 11, 11.65, 12.3, 12.95, 13.6, 14.25, 14.9, 15.55, 16.2, 16.85]\n  }\n}\nconst formula = {\n  normal: Object.fromEntries(data.normal.hitArr.map((arr, i) =>\n    [i, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"normal\")])),\n  charged: {\n    dmg: (tlvl, stats) => basicDMGFormula(data.charged.dmg[tlvl], stats, \"charged\"),\n  },\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\n  skill: {\n    atk_inc: (tlvl, stats) => {\n      const val = data.skill.atk_inc[tlvl] / 100\n      // TODO Check if we need to cap the bonus here or elsewhere.\n      return [s => Math.min(val * s.finalHP, 4 * s.baseATK), [\"finalHP\", \"baseATK\"]]\n    },\n    dmg: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl], stats, \"skill\"),\n    dmgC2: (tlvl, stats) => {\n      const val = data.skill.dmg[tlvl] / 100\n      const statKey = getTalentStatKey(\"skill\", stats) + \"_multi\"\n      return [s => (val * s.finalATK + 0.1 * s.finalHP) * s[statKey], [\"finalATK\", statKey]]\n    }\n  },\n  burst: {\n    dmg: (tlvl, stats) => basicDMGFormula(data.burst.dmg[tlvl], stats, \"burst\"),\n    low_dmg: (tlvl, stats) => basicDMGFormula(data.burst.low_dmg[tlvl], stats, \"burst\"),\n    regen: (tlvl, stats) => {\n      const val = data.burst.regen[tlvl] / 100\n      return [s => val * s.finalHP * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\n    },\n    low_regen: (tlvl, stats) => {\n      const val = data.burst.low_regen[tlvl] / 100\n      return [s => val * s.finalHP * s.heal_multi, [\"finalHP\", \"heal_multi\"]]\n    },\n  },\n}\nexport default formula","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\n\nconst data = {\n  baseStat: {\n    characterHP: [1144, 2967, 3948, 5908, 6605, 7599, 8528, 9533, 10230, 11243, 11940, 12965, 13662, 14695],\n    characterATK: [19, 48, 64, 96, 108, 124, 139, 155, 166, 183, 194, 211, 222, 239],\n    characterDEF: [60, 155, 206, 309, 345, 397, 446, 499, 535, 588, 624, 678, 715, 769]\n  },\n  specializeStat: {\n    key: \"heal_\",\n    value: [0, 0, 0, 0, 5.5, 5.5, 11.1, 11.1, 11.1, 11.1, 16.6, 16.6, 22.2, 22.2]\n  },\n  normal: {\n    hitArr: [\n      [48.33, 52.27, 56.2, 61.82, 65.75, 70.25, 76.43, 82.61, 88.8, 95.54, 103.27, 112.36, 121.44, 130.53, 140.44],\n      [45.58, 49.29, 53, 58.3, 62.01, 66.25, 72.08, 77.91, 83.74, 90.1, 97.39, 105.96, 114.53, 123.1, 132.45],\n      [60.29, 65.19, 70.1, 77.11, 82.02, 87.63, 95.34, 103.05, 110.76, 119.17, 128.81, 140.14, 151.48, 162.81, 175.18],\n      [65.88, 71.24, 76.6, 84.26, 89.62, 95.75, 104.18, 112.6, 121.03, 130.22, 140.75, 153.14, 165.52, 177.91, 191.42],\n      [79.21, 85.65, 92.1, 101.31, 107.76, 115.13, 125.26, 135.39, 145.52, 156.57, 169.23, 184.13, 199.02, 213.91, 230.16],\n    ],\n  },\n  charged: {\n    dmg: [162.02, 175.21, 188.4, 207.24, 220.43, 235.5, 256.22, 276.95, 297.67, 320.28, 346.19, 376.65, 407.11, 437.58, 470.81],\n  },\n  plunging: {\n    dmg: [63.93, 69.14, 74.34, 81.77, 86.98, 92.93, 101.1, 109.28, 117.46, 126.38, 135.3, 144.22, 153.14, 162.06, 170.98],\n    low: [127.84, 138.24, 148.65, 163.51, 173.92, 185.81, 202.16, 218.51, 234.86, 252.7, 270.54, 288.38, 306.22, 324.05, 341.89],\n    high: [159.68, 172.67, 185.67, 204.24, 217.23, 232.09, 252.51, 272.93, 293.36, 315.64, 337.92, 360.2, 382.48, 404.76, 427.04]\n  },\n  skill: {\n    dmg: [292, 313.9, 335.8, 365, 386.9, 408.8, 438, 467.2, 496.4, 525.6, 554.8, 584, 620.5, 657, 693.5],\n  },\n  burst: {\n    skill: [424.8, 456.66, 488.52, 531, 562.86, 594.72, 637.2, 679.68, 722.16, 764.64, 807.12, 849.6, 902.7, 955.8, 1008.9],\n    field_dmg: [78.4, 84.28, 90.16, 98, 103.88, 109.76, 117.6, 125.44, 133.28, 141.12, 148.96, 156.8, 166.6, 176.4, 186.2],\n    heal_flat: [1540, 1694, 1861, 2041, 2234, 2439, 2657, 2888, 3132, 3389, 3659, 3941, 4236, 4544, 4865],\n    heal_atk: [251.2, 270.04, 288.88, 314, 332.84, 351.68, 376.8, 401.92, 427.04, 452.16, 477.28, 502.4, 533.8, 565.2, 596.6],\n    regen_flat: [154, 169, 186, 204, 223, 244, 266, 289, 313, 339, 366, 394, 424, 454, 487],\n    regen_atk: [25.12, 27, 28.89, 31.4, 33.28, 35.17, 37.68, 40.19, 42.7, 45.22, 47.73, 50.24, 53.38, 56.52, 59.66],\n  }\n}\n\nconst formula = {\n  normal: Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [i, (tlvl, stats) =>\n    basicDMGFormula(percentArr[tlvl], stats, \"normal\")])),\n  charged: {\n    dmg: (tlvl, stats) => basicDMGFormula(data.charged.dmg[tlvl], stats, \"charged\"),\n  },\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([key, arr]) => [key, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\n  skill: {\n    dmg: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl], stats, \"skill\"),\n    dmg_hold: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl] * 1.4, stats, \"skill\")\n  },\n  burst: {\n    skill: (tlvl, stats) => basicDMGFormula(data.burst.skill[tlvl], stats, \"burst\"),\n    field_dmg: (tlvl, stats) => basicDMGFormula(data.burst.field_dmg[tlvl], stats, \"burst\"),\n    heal: (tlvl) => {\n      const atk = data.burst.heal_atk[tlvl] / 100\n      const flat = data.burst.heal_flat[tlvl]\n      return [s => (atk * s.finalATK + flat) * s.heal_multi, [\"finalATK\", \"heal_multi\"]]\n    },\n    regen: (tlvl) => {\n      const atk = data.burst.regen_atk[tlvl] / 100\n      const flat = data.burst.regen_flat[tlvl]\n      return [s => (atk * s.finalATK + flat) * s.heal_multi, [\"finalATK\", \"heal_multi\"]]\n    },\n  },\n  passive1: {\n    heal: (tlvl, stats) => [s => 0.15 * s.finalATK * s.heal_multi, [\"finalATK\", \"heal_multi\"]],\n  }\n}\n\nexport default formula\nexport {\n  data\n}\n","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\n\nexport const data = {\n  baseStat: {\n    characterHP: [1020, 2646, 3521, 5268, 5889, 6776, 7604, 8500, 9121, 10025, 10647, 11561, 12182, 13103],\n    characterATK: [25, 65, 87, 130, 145, 167, 187, 209, 225, 247, 262, 285, 300, 323],\n    characterDEF: [62, 161, 215, 321, 359, 413, 464, 519, 556, 612, 649, 705, 743, 799]\n  },\n  specializeStat: {\n    key: \"critDMG_\",\n    value: [0, 0, 0, 0, 9.6, 9.6, 19.2, 19.2, 19.2, 19.2, 28.8, 28.8, 38.4, 38.4]\n  },\n  normal: {\n    hitArr: [\n      [41.02, 44.36, 47.7, 52.47, 55.81, 59.62, 64.87, 70.12, 75.37, 81.09, 86.81, 92.54, 98.26, 103.99, 109.71],\n      [41.02, 44.36, 47.7, 52.47, 55.81, 59.62, 64.87, 70.12, 75.37, 81.09, 86.81, 92.54, 98.26, 103.99, 109.71],\n      [54.44, 58.87, 63.3, 69.63, 74.06, 79.13, 86.09, 93.05, 100.01, 107.61, 115.21, 122.8, 130.4, 137.99, 145.59],\n      [31.48, 34.04, 36.6, 40.26, 42.82, 45.75, 49.78, 53.8, 57.83, 62.22, 66.61, 71, 75.4, 79.79, 84.18],\n      [34.4, 37.2, 40, 44, 46.8, 50, 54.4, 58.8, 63.2, 68, 72.8, 77.6, 82.4, 87.2, 92],\n      [66.99, 72.45, 77.9, 85.69, 91.14, 97.38, 105.94, 114.51, 123.08, 132.43, 141.78, 151.13, 160.47, 169.82, 179.17],\n    ],\n  },\n  charged: {\n    hit1: [76.8, 83.05, 89.3, 98.23, 104.48, 111.63, 121.45, 131.27, 141.09, 151.81, 162.53, 173.24, 183.96, 194.67, 205.39],\n    hit2: [86, 93, 100, 110, 117, 125, 136, 147, 158, 170, 182, 194, 206, 218, 230],\n  },\n  plunging: {\n    dmg: [63.93, 69.14, 74.34, 81.77, 86.98, 92.93, 101.1, 109.28, 117.46, 126.38, 135.3, 144.22, 153.14, 162.06, 170.98],\n    low: [127.84, 138.24, 148.65, 163.51, 173.92, 185.81, 202.16, 218.51, 234.86, 252.7, 270.54, 288.38, 306.22, 324.05, 341.89],\n    high: [159.68, 172.67, 185.67, 204.24, 217.23, 232.09, 252.51, 272.93, 293.36, 315.64, 337.92, 360.2, 382.48, 404.76, 427.04],\n  },\n  skill: {\n    stilleto: [50.4, 54.18, 57.96, 63, 66.78, 70.56, 75.6, 80.64, 85.68, 90.72, 95.76, 100.8, 107.1, 113.4, 119.7],\n    slashing: [168, 180.6, 193.2, 210, 222.6, 235.2, 252, 268.8, 285.6, 302.4, 319.2, 336, 357, 378, 399],\n    thunderclasp_slash: [84, 90.3, 96.6, 105, 111.3, 117.6, 126, 134.4, 142.8, 151.2, 159.6, 168, 178.5, 189, 199.5],\n  },\n  burst: {\n    skill: [88, 94.6, 101.2, 110, 116.6, 123.2, 132, 140.8, 149.6, 158.4, 167.2, 176, 187, 198, 209],\n    consec_slash: [24, 25.8, 27.6, 30, 31.8, 33.6, 36, 38.4, 40.8, 43.2, 45.6, 48, 51, 54, 57],\n    last: [188.8, 202.96, 217.12, 236, 250.16, 264.32, 283.2, 302.08, 320.96, 339.84, 358.72, 377.6, 401.2, 424.8, 448.4],\n  }\n}\nconst formula = {\n  normal: Object.fromEntries(data.normal.hitArr.map((arr, i) =>\n    [i, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"normal\")])),\n  charged: Object.fromEntries(Object.entries(data.charged).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"charged\")])),\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\n  skill: {\n    stilleto: (tlvl, stats) => basicDMGFormula(data.skill.stilleto[tlvl], stats, \"skill\"),\n    slashing: (tlvl, stats) => basicDMGFormula(data.skill.slashing[tlvl], stats, \"skill\"),\n    thunderclap_slashing: (tlvl, stats) => basicDMGFormula(data.skill.thunderclasp_slash[tlvl] * 2, stats, \"skill\"),\n  },\n  burst: {\n    skill: (tlvl, stats) => basicDMGFormula(data.burst.skill[tlvl], stats, \"burst\"),\n    consec_slash: (tlvl, stats) => basicDMGFormula(data.burst.consec_slash[tlvl] * 8, stats, \"burst\"),\n    last: (tlvl, stats) => basicDMGFormula(data.burst.last[tlvl], stats, \"burst\"),\n  }\n}\nexport default formula","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\n\nconst data = {\n  baseStat: {\n    characterHP: [801, 2077, 2764, 4136, 4623, 5319, 5970, 6673, 7161, 7870, 8358, 9076, 9563, 10287],\n    characterATK: [24, 63, 84, 125, 140, 161, 180, 202, 216, 238, 253, 274, 289, 311],\n    characterDEF: [48, 124, 165, 247, 276, 318, 357, 399, 428, 470, 500, 542, 572, 615]\n  },\n  specializeStat: {\n    key: \"pyro_dmg_\",\n    value: [0, 0, 0, 0, 7.2, 7.2, 14.4, 14.4, 14.4, 14.4, 21.6, 21.6, 28.8, 28.8]\n  },\n  normal: {\n    hitArr: [\n      [72.16, 77.57, 82.98, 90.2, 95.61, 101.02, 108.24, 115.46, 122.67, 129.89, 137.39, 147.21, 157.02, 166.83, 176.65],\n      [62.4, 67.08, 71.76, 78, 82.68, 87.36, 93.6, 99.84, 106.08, 112.32, 118.81, 127.3, 135.78, 144.27, 152.76],\n      [89.92, 96.66, 103.41, 112.4, 119.14, 125.89, 134.88, 143.87, 152.86, 161.86, 171.21, 183.44, 195.67, 207.9, 220.12]\n    ],\n  },\n  charged: {\n    dmg: [157.36, 169.16, 180.96, 196.7, 208.5, 220.3, 236.04, 251.78, 267.51, 283.25, 299.61, 321.01, 342.42, 363.82, 385.22],\n  },\n  plunging: {\n    dmg: [56.83, 61.45, 66.08, 72.69, 77.31, 82.6, 89.87, 97.14, 104.41, 112.34, 120.27, 128.2, 136.12, 144.05, 151.98],\n    low: [113.63, 122.88, 132.13, 145.35, 154.59, 165.17, 179.7, 194.23, 208.77, 224.62, 240.48, 256.34, 272.19, 288.05, 303.9],\n    high: [141.93, 153.49, 165.04, 181.54, 193.1, 206.3, 224.45, 242.61, 260.76, 280.57, 300.37, 320.18, 339.98, 359.79, 379.59]\n  },\n  skill: {\n    jumpyDmg: [95.2, 102.34, 109.48, 119, 126.14, 133.28, 142.8, 152.32, 161.84, 171.36, 180.88, 190.4, 202.3, 214.2, 226.1],\n    mineDmg: [32.8, 35.26, 37.72, 41, 43.46, 45.92, 49.2, 52.48, 55.76, 59.04, 62.32, 65.6, 69.7, 73.8, 77.9],\n  },\n  burst: {\n    dmg: [42.64, 45.84, 49.04, 53.3, 56.5, 59.7, 63.96, 68.22, 72.49, 76.75, 81.02, 85.28, 90.61, 95.94, 101.27],\n  }\n}\n\nconst formula = {\n  normal: Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [i, (tlvl, stats) =>\n    basicDMGFormula(percentArr[tlvl], stats, \"normal\")])),\n  charged: {\n    dmg: (tlvl, stats) => basicDMGFormula(data.charged.dmg[tlvl], stats, \"charged\"),\n  },\n  plunging: {\n    dmg: (tlvl, stats) => basicDMGFormula(data.plunging.dmg[tlvl], stats, \"plunging\"),\n    low: (tlvl, stats) => basicDMGFormula(data.plunging.low[tlvl], stats, \"plunging\"),\n    high: (tlvl, stats) => basicDMGFormula(data.plunging.high[tlvl], stats, \"plunging\"),\n  },\n  skill: {\n    jumpyDmg: (tlvl, stats) => basicDMGFormula(data.skill.jumpyDmg[tlvl], stats, \"skill\"),\n    mineDmg: (tlvl, stats) => basicDMGFormula(data.skill.mineDmg[tlvl], stats, \"skill\"),\n  },\n  burst: {\n    dmg: (tlvl, stats) => basicDMGFormula(data.burst.dmg[tlvl], stats, \"burst\"),\n    dmgPounding: (tlvl, stats) => basicDMGFormula(data.burst.dmg[tlvl] * 1.5, stats, \"burst\"),\n  },\n  constellation1: {\n    dmgChained: (tlvl, stats) =>\n      basicDMGFormula(data.burst.dmg[stats.talentLevelKeys.burst] * 1.2, stats, \"burst\"),\n  },\n  constellation4: {\n    dmg: (tlvl, stats) => basicDMGFormula(555, stats, \"elemental\"),\n  }\n}\n\nexport default formula\nexport {\n  data\n}","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\n\nexport const data = {\n  baseStat: {\n    characterHP: [810, 2102, 2797, 4185, 4678, 5383, 6041, 6752, 7246, 7964, 8458, 9184, 9677, 10409],\n    characterATK: [22, 58, 77, 115, 129, 148, 167, 186, 200, 220, 233, 253, 267, 287],\n    characterDEF: [51, 132, 176, 263, 294, 338, 379, 424, 455, 500, 531, 576, 607, 653]\n  },\n  specializeStat: {\n    key: \"enerRech_\",\n    value: [0, 0, 0, 0, 8, 8, 16, 16, 16, 16, 24, 24, 32, 32]\n  },\n  normal: {\n    hitArr: [\n      [37.6, 40.42, 43.24, 47, 49.82, 52.64, 56.4, 60.16, 63.92, 67.68, 71.44, 75.2, 79.9, 84.6, 89.3],\n      [36, 38.7, 41.4, 45, 47.7, 50.4, 54, 57.6, 61.2, 64.8, 68.4, 72, 76.5, 81, 85.5],\n      [44.8, 48.16, 51.52, 56, 59.36, 62.72, 67.2, 71.68, 76.16, 80.64, 85.12, 89.6, 95.2, 100.8, 106.4],\n      [56.16, 60.37, 64.58, 70.2, 74.41, 78.62, 84.24, 89.86, 95.47, 101.09, 106.7, 112.32, 119.34, 126.36, 133.38],\n    ],\n  },\n  charged: {\n    hit: [149.72, 160.95, 172.18, 187.15, 198.38, 209.61, 224.58, 239.55, 254.52, 269.5, 285.07, 305.43, 325.79, 346.15, 366.51],\n  },\n  plunging: {\n    dmg: [56.83, 61.45, 66.08, 72.69, 77.31, 82.6, 89.87, 97.14, 104.41, 112.34, 120.27, 128.2, 136.12, 144.05, 151.98],\n    low: [113.63, 122.88, 132.13, 145.35, 154.59, 165.17, 179.7, 194.23, 208.77, 224.62, 240.48, 256.34, 272.19, 288.05, 303.9],\n    high: [141.93, 153.49, 165.04, 181.54, 193.1, 206.3, 224.45, 242.61, 260.76, 280.57, 300.37, 320.18, 339.98, 359.79, 379.59],\n  },\n  skill: {\n    dmg: [132.8, 142.76, 152.72, 166, 175.96, 185.92, 199.2, 212.48, 225.76, 239.04, 252.32, 265.6, 282.2, 298.8, 315.4],\n    dot: [32, 34.4, 36.8, 40, 42.4, 44.8, 48, 51.2, 54.4, 57.6, 60.8, 64, 68, 72, 76],  \n  },\n  burst: {\n    bubble_explosion: [442.4, 475.58, 508.76, 553, 586.18, 619.36, 663.6, 707.84, 752.08, 796.32, 840.56, 884.8, 940.1, 995.4, 1050.7],\n    dmg_: [42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 60, 60, 60, 60, 60],\n    omen_duration: [4, 4, 4, 4.5, 4.5, 4.5, 5, 5, 5, 5, 5, 5, 5, 5, 5]  \n  }\n}\nconst formula = {\n  normal: Object.fromEntries(data.normal.hitArr.map((arr, i) =>\n    [i, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"normal\")])),\n  charged: Object.fromEntries(Object.entries(data.charged).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"charged\")])),\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\n  skill: Object.fromEntries(Object.entries(data.skill).map(([name, arr]) =>\n      [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"skill\")])),\n  burst: {\n    bubble_explosion: (tlvl, stats) => basicDMGFormula(data.burst.bubble_explosion[tlvl], stats, \"burst\")\n  },\n  passive1: {\n    hit: (tlvl, stats) => basicDMGFormula(data.skill.dmg[stats.talentLevelKeys.skill] / 2, stats, \"skill\"),\n  }\n}\nexport default formula","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\n\nexport const data = {\n  baseStat: {\n    characterHP: [821, 2108, 2721, 4076, 4512, 5189, 5770, 6448, 6884, 7561, 7996, 8674, 9110, 9787],\n    characterATK: [18, 46, 59, 89, 98, 113, 125, 140, 150, 164, 174, 188, 198, 212],\n    characterDEF: [48, 123, 159, 239, 264, 304, 338, 378, 403, 443, 468, 508, 533, 573]\n  },\n  specializeStat: {\n    key: \"geo_dmg_\",\n    value: [0, 0, 0, 0, 6, 6, 12, 12, 12, 12, 18, 18, 24, 24]\n  },\n  normal: {\n    hit: [28, 30.1, 32.2, 35, 37.1, 39.2, 42, 44.8, 47.6, 50.4, 53.31, 57.12, 60.93, 64.74, 68.54]\n  },\n  charged: {\n    dmg: [174.08, 187.14, 200.19, 217.6, 230.66, 243.71, 261.12, 278.53, 295.94, 313.34, 331.45, 355.12, 378.8, 402.47, 426.15],\n    jade: [49.6, 53.32, 57.04, 62, 65.72, 69.44, 74.4, 79.36, 84.32, 89.28, 94.44, 101.18, 107.93, 114.68, 121.42],\n  },\n  plunging: {\n    dmg: [56.83, 61.45, 66.08, 72.69, 77.31, 82.6, 89.87, 97.14, 104.41, 112.34, 120.27, 128.2, 136.12, 144.05, 151.98],\n    low: [113.63, 122.88, 132.13, 145.35, 154.59, 165.17, 179.7, 194.23, 208.77, 224.62, 240.48, 256.34, 272.19, 288.05, 303.9],\n    high: [141.93, 153.49, 165.04, 181.54, 193.1, 206.3, 224.45, 242.61, 260.76, 280.57, 300.37, 320.18, 339.98, 359.79, 379.59]\n  },\n  skill: {\n    inheri_hp: [50.1, 53.1, 56.1, 60, 63, 66, 69.9, 73.8, 77.7, 81.6, 85.5, 89.4, 93.3, 97.2, 101.1],\n    dmg: [230.4, 247.68, 264.96, 288, 305.28, 322.56, 345.6, 368.64, 391.68, 414.72, 437.76, 460.8, 489.6, 518.4, 547.2],  \n  },\n  burst: {\n    dmg_per_gem: [86.96, 93.48, 100, 108.7, 115.22, 121.74, 130.44, 139.14, 147.83, 156.53, 165.22, 173.92, 184.79, 195.66, 206.53],\n  }\n}\nconst formula = {\n  normal: {\n    hit: (tlvl, stats) => basicDMGFormula(data.normal.hit[tlvl], stats, \"normal\")\n  },\n  charged: Object.fromEntries(Object.entries(data.charged).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"charged\")])),\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\n  skill: {\n    inheri_hp: (tlvl, stats) => {\n      const val = data.skill.inheri_hp[tlvl] / 100\n      return [s => val * s.finalHP, [\"finalHP\"]]\n    },\n    dmg: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl], stats, \"skill\")\n  },\n  burst: {\n    dmg_per_gem: (tlvl, stats) => basicDMGFormula(data.burst.dmg_per_gem[tlvl], stats, \"burst\"),\n  },\n}\nexport default formula","import { getTalentStatKey } from \"../../../Build/Build\"\nimport { basicDMGFormula } from \"../../../Util/FormulaUtil\"\n\nexport const data = {\n  baseStat: {\n    characterHP: [1012, 2600, 3356, 5027, 5564, 6400, 7117, 7953, 8490, 9325, 9862, 10698, 11235, 12071],\n    characterATK: [16, 41, 53, 80, 88, 101, 113, 126, 134, 148, 156, 169, 178, 191],\n    characterDEF: [67, 172, 222, 333, 368, 423, 471, 526, 562, 617, 652, 708, 743, 799]\n  },\n  specializeStat: {\n    key: \"def_\",\n    value: [0, 0, 0, 0, 7.5, 7.5, 15, 15, 15, 15, 22.5, 22.5, 30, 30]\n  },\n  normal: {\n    hitArr: [\n      [79.12, 85.56, 92, 101.2, 107.64, 115, 125.12, 135.24, 145.36, 156.4, 167.44, 178.48, 189.52, 200.56, 211.6],\n      [73.36, 79.33, 85.3, 93.83, 99.8, 106.63, 116.01, 125.39, 134.77, 145.01, 155.25, 165.48, 175.72, 185.95, 196.19],\n      [86.26, 93.28, 100.3, 110.33, 117.35, 125.38, 136.41, 147.44, 158.47, 170.51, 182.55, 194.58, 206.62, 218.65, 230.69],\n      [113.43, 122.67, 131.9, 145.09, 154.32, 164.88, 179.38, 193.89, 208.4, 224.23, 240.06, 255.89, 271.71, 287.54, 303.37],    \n    ]\n  },\n  charged: {\n    spinning: [50.74, 54.87, 59, 64.9, 69.03, 73.75, 80.24, 86.73, 93.22, 100.3, 107.38, 114.46, 121.54, 128.62, 135.7],\n    final: [90.47, 97.84, 105.2, 115.72, 123.08, 131.5, 143.07, 154.64, 166.22, 178.84, 191.46, 204.09, 216.71, 229.34, 241.96],\n  },\n  plunging: {\n    dmg: [74.59, 80.66, 86.73, 95.4, 101.47, 108.41, 117.95, 127.49, 137.03, 147.44, 157.85, 168.26, 178.66, 189.07, 199.48],\n    low: [149.14, 161.28, 173.42, 190.77, 202.91, 216.78, 235.86, 254.93, 274.01, 294.82, 315.63, 336.44, 357.25, 378.06, 398.87],\n    high: [186.29, 201.45, 216.62, 238.28, 253.44, 270.77, 294.6, 318.42, 342.25, 368.25, 394.24, 420.23, 446.23, 472.22, 498.21],\n  },\n  skill: {\n    skill_dmg: [120, 129, 138, 150, 159, 168, 180, 192, 204, 216, 228, 240, 255, 270, 285],\n    shield_def: [160, 172, 184, 200, 212, 224, 240, 256, 272, 288, 304, 320, 340, 360, 380],\n    shield_flat: [770, 847, 930, 1020, 1116, 1219, 1328, 1443, 1565, 1694, 1828, 1970, 2117, 2271, 2431],\n    heal_def: [21.28, 22.88, 24.47, 26.6, 28.2, 29.79, 31.92, 34.05, 36.18, 38.3, 40.43, 42.56, 45.22, 47.88, 50.54],\n    heal_flat: [103, 113, 124, 136, 149, 163, 177, 193, 209, 226, 244, 263, 282, 303, 324],\n    heal_trigger: [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 59, 60, 60, 60, 60],  \n  },\n  burst: {\n    burst_dmg: [67.2, 72.24, 77.28, 84, 89.04, 94.08, 100.8, 107.52, 114.24, 120.96, 127.68, 134.4, 142.8, 151.2, 159.6],\n    skill_dmg: [92.8, 99.76, 106.72, 116, 122.96, 129.92, 139.2, 148.48, 157.76, 167.04, 176.32, 185.6, 197.2, 208.8, 220.4],\n    bonus: [40, 43, 46, 50, 53, 56, 60, 64, 68, 72, 76, 80, 85, 90, 95],  \n  }\n}\nconst formula = {\n  normal: Object.fromEntries(data.normal.hitArr.map((arr, i) =>\n    [i, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"normal\")])),\n  charged: Object.fromEntries(Object.entries(data.charged).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"charged\")])),\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\n  skill: {\n    skill_dmg: (tlvl, stats) => {\n      const percent = data.skill.skill_dmg[tlvl] / 100, key = getTalentStatKey(\"skill\", stats) + \"_multi\"\n      return [s => percent * s[key] * s.finalDEF, [key, \"finalDEF\"]]\n    },\n    shield: (tlvl, stats) => {\n      const percent = data.skill.shield_def[tlvl] / 100, flat = data.skill.shield_flat[tlvl]\n      return [s => percent * s.finalDEF + flat, [\"finalDEF\"]]\n    },\n    heal: (tlvl, stats) => {\n      const percent = data.skill.heal_def[tlvl] / 100, flat = data.skill.heal_flat[tlvl]\n      return [s => (percent * s.finalDEF + flat) * s.heal_multi, [\"finalDEF\", \"heal_multi\"]]\n    },\n  },\n  burst: {\n    burst_dmg: (tlvl, stats) => basicDMGFormula(data.burst.burst_dmg[tlvl], stats, \"burst\"),\n    skill_dmg: (tlvl, stats) => basicDMGFormula(data.burst.skill_dmg[tlvl], stats, \"skill\"),\n    bonus: (tlvl, stats) => {\n      const val = (data.burst.bonus[tlvl] + (stats.constellation >= 6 ? 50 : 0)) / 100\n      return [s => val * s.finalDEF, [\"finalDEF\"]]\n    }\n  }\n}\nexport default formula","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\n\nconst data = {\n  baseStat: {\n    characterHP: [1003, 2577, 3326, 4982, 5514, 6343, 7052, 7881, 8413, 9241, 9773, 10602, 11134, 11962],\n    characterATK: [20, 50, 65, 97, 108, 124, 138, 154, 164, 180, 191, 207, 217, 234],\n    characterDEF: [63, 162, 209, 313, 346, 398, 443, 495, 528, 580, 613, 665, 699, 751]\n  },\n  specializeStat: {\n    key: \"physical_dmg_\",\n    value: [0, 0, 0, 0, 7.5, 7.5, 15, 15, 15, 15, 22.5, 22.5, 30, 30]\n  },\n  normal: {\n    hitArr: [\n      [95.92, 102.46, 109, 117.72, 124.26, 131.89, 141.7, 151.51, 161.32, 171.13, 180.94, 190.75, 200.56, 210.37, 220.18],\n      [82.63, 88.27, 93.9, 101.41, 107.05, 113.62, 122.07, 130.52, 138.97, 147.42, 155.87, 164.33, 172.78, 181.23, 189.68],\n      [103.31, 110.36, 117.4, 126.79, 133.84, 142.05, 152.62, 163.19, 173.75, 184.32, 194.88, 205.45, 216.02, 226.58, 237.15],\n      [136.05, 145.32, 154.6, 166.97, 176.24, 187.07, 200.98, 214.89, 228.81, 242.72, 256.64, 270.55, 284.46, 298.38, 312.29],\n    ]\n  },\n  charged: {\n    spinning: [62.54, 67.63, 72.72, 79.99, 85.08, 90.9, 98.9, 106.9, 114.9, 123.62, 132.35, 141.08, 149.8, 158.53, 167.26],\n    final: [113.09, 122.3, 131.5, 144.65, 153.86, 164.38, 178.84, 193.31, 207.77, 223.55, 239.33, 255.11, 270.89, 286.67, 302.45]\n  },\n  plunging: {\n    dmg: [82.05, 88.72, 95.4, 104.94, 111.62, 119.25, 129.75, 140.24, 150.74, 162.19, 173.63, 185.08, 196.53, 207.98, 219.43],\n    low: [164.06, 177.41, 190.77, 209.84, 223.2, 238.46, 259.44, 280.43, 301.41, 324.3, 347.19, 370.09, 392.98, 415.87, 438.76],\n    high: [204.92, 221.6, 238.28, 262.1, 278.78, 297.85, 324.06, 350.27, 376.48, 405.07, 433.66, 462.26, 490.85, 519.44, 548.04]\n  },\n  skill: {\n    press: [199.2, 214.14, 229.08, 249, 263.94, 278.88, 298.8, 318.72, 338.64, 358.56, 378.48, 398.4, 423.3, 448.2, 473.1],\n    hold: [295.2, 317.34, 339.48, 369, 391.14, 413.28, 442.8, 472.32, 501.84, 531.36, 560.88, 590.4, 627.3, 664.2, 701.1],\n  },\n  burst: {\n    summon: [160, 172, 184, 200, 212, 224, 240, 256, 272, 288, 304, 320, 340, 360, 380],\n    dmg: [24, 25.8, 27.6, 30, 31.8, 33.6, 36, 38.4, 40.8, 43.2, 45.6, 48, 51, 54, 57],\n    atkspd: [26, 28, 30, 32, 34, 36, 37, 38, 39, 40, 40, 40, 40, 40, 40],\n  }\n}\n\nconst formula = {\n  normal: Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [i, (tlvl, stats) =>\n    basicDMGFormula(percentArr[tlvl], stats, \"normal\")])),\n  charged: Object.fromEntries(Object.entries(data.charged).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"charged\")])),\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([key, arr]) => [key, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\n  skill: {\n    press: (tlvl, stats) => basicDMGFormula(data.skill.press[tlvl], stats, \"skill\"),\n    hold: (tlvl, stats) => basicDMGFormula(data.skill.hold[tlvl], stats, \"skill\"),\n  },\n  burst: {\n    summon: (tlvl, stats) => basicDMGFormula(data.burst.summon[tlvl], stats, \"burst\"),\n    ...Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [i, (tlvl, stats) =>\n      basicDMGFormula(data.burst.dmg[tlvl] * percentArr[stats.talentLevelKeys.auto] / 100, stats, \"burst\")])),\n  },\n  constellation6: {\n    dmg: (tlvl, stats) => basicDMGFormula(100, stats, \"elemental\"),\n  }\n}\n\nexport default formula\nexport {\n  data\n}","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\n\nexport const data = {\n  baseStat: {\n    characterHP: [820, 2127, 2830, 4234, 4734, 5446, 6112, 6832, 7331, 8058, 8557, 9292, 9791, 10531],\n    characterATK: [20, 53, 71, 106, 118, 136, 153, 171, 183, 201, 214, 232, 245, 263],\n    characterDEF: [52, 135, 180, 269, 301, 346, 388, 434, 465, 512, 543, 590, 622, 669],\n  },\n  specializeStat: {\n    key: \"enerRech_\",\n    value: [0, 0, 0, 0, 8, 8, 16, 16, 16, 16, 24, 24, 32, 32],\n  },\n  normal: {\n    hitArr: [\n      [20.38, 22.04, 23.7, 26.07, 27.73, 29.63, 32.23, 34.84, 37.45, 40.29, 43.55, 47.38, 51.21, 55.05, 59.23],//1\n      [44.38, 47.99, 51.6, 56.76, 60.37, 64.5, 70.18, 75.85, 81.53, 87.72, 94.82, 103.16, 111.5, 119.85, 128.95],//2\n      [52.37, 56.64, 60.9, 66.99, 71.25, 76.13, 82.82, 89.52, 96.22, 103.53, 111.9, 121.75, 131.6, 141.45, 152.19],//3\n      [26.06, 28.18, 30.3, 33.33, 35.45, 37.87, 41.21, 44.54, 47.87, 51.51, 55.68, 60.58, 65.48, 70.37, 75.72],//4\n      [50.65, 54.78, 58.9, 64.79, 68.91, 73.63, 80.1, 86.58, 93.06, 100.13, 108.23, 117.75, 127.28, 136.8, 147.19],//5\n      [70.95, 76.73, 82.5, 90.75, 96.53, 103.13, 112.2, 121.28, 130.35, 140.25, 151.59, 164.93, 178.27, 191.61, 206.17],//6\n    ]\n  },\n  charged: {\n    hit: [43.86, 47.43, 51, 56.1, 59.67, 63.75, 69.36, 74.97, 80.58, 86.7, 93.71, 101.96, 110.21, 118.45, 127.45],\n    full: [124, 133.3, 142.6, 155, 164.3, 173.6, 186, 198.4, 210.8, 223.2, 236.1, 252.96, 269.82, 286.69, 303.55],\n  },\n  plunging: {\n    dmg: [56.83, 61.45, 66.08, 72.69, 77.31, 82.6, 89.87, 97.14, 104.41, 112.34, 120.27, 128.2, 136.12, 144.05, 151.98],\n    low: [113.63, 122.88, 132.13, 145.35, 154.59, 165.17, 179.7, 194.23, 208.77, 224.62, 240.48, 256.34, 272.19, 288.05, 303.9],\n    high: [141.93, 153.49, 165.04, 181.54, 193.1, 206.3, 224.45, 242.61, 260.76, 280.57, 300.37, 320.18, 339.98, 359.79, 379.59],\n  },\n  skill: {\n    press: [276, 296.7, 317.4, 345, 365.7, 386.4, 414, 441.6, 469.2, 496.8, 524.4, 552, 586.5, 621, 655.5],\n    hold: [380, 408.5, 437, 475, 503.5, 532, 570, 608, 646, 684, 722, 760, 807.5, 855, 902.5],\n  },\n  burst: {\n    hit: [37.6, 40.42, 43.24, 47, 49.82, 52.64, 56.4, 60.16, 63.92, 67.68, 71.44, 75.2, 79.9, 84.6, 89.3],\n  }\n}\nconst formula = {\n  normal: Object.fromEntries(data.normal.hitArr.map((arr, i) =>\n    [i, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"normal\")])),\n  charged: {\n    hit: (tlvl, stats) => basicDMGFormula(data.charged.hit[tlvl], stats, \"charged\"),\n    full: (tlvl, stats) => basicDMGFormula(data.charged.full[tlvl], stats, \"charged\", true),\n    hit_bonus: (tlvl, stats) => basicDMGFormula(data.charged.hit[tlvl] * 0.33, stats, \"charged\"),\n    full_bonus: (tlvl, stats) => basicDMGFormula(data.charged.full[tlvl] * 0.33, stats, \"charged\", true),\n  },\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\n  skill: Object.fromEntries(Object.entries(data.skill).map(([name, arr]) => \n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"skill\")])),\n  burst: Object.fromEntries([\n    ...Object.entries(data.burst).map(([name, arr]) =>\n      [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"burst\")]),\n    ...Object.entries(data.burst).flatMap(([name, arr]) =>\n      ([\"hydro\", \"pyro\", \"cryo\", \"electro\"]).map((ele) =>\n        [`${ele}_${name}`, (tlvl, stats) => [s=>(arr[tlvl] / 2 / 100) * stats[`${ele}_burst_${stats.hitMode}`], [`${ele}_burst_${stats.hitMode}`]]])),//not optimizationTarget, dont need to precompute\n  ]),\n}\nexport default formula","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\n\nexport const data = {\n  baseStat:  {\n    characterHP: [991, 2572, 3422, 5120, 5724, 6586, 7391, 8262, 8866, 9744, 10348, 11236, 11840, 12736],\n    characterATK: [27, 71, 94, 140, 157, 181, 203, 227, 243, 267, 284, 308, 325, 349],\n    characterDEF: [62, 161, 215, 321, 359, 413, 464, 519, 556, 612, 649, 705, 743, 799]\n  },\n  specializeStat: {\n    key: \"critRate_\",\n    value: [0, 0, 0, 0, 4.8, 4.8, 9.6, 9.6, 9.6, 9.6, 14.4, 14.4, 19.2, 19.2]\n  },\n  normal: {\n    hitArr: [\n      [27.54, 29.42, 31.3, 33.8, 35.68, 37.87, 40.69, 43.51, 46.32, 49.14, 51.96, 54.78, 57.59, 60.41, 63.23],//1 hits twice\n      [56.94, 60.82, 64.7, 69.88, 73.76, 78.29, 84.11, 89.93, 95.76, 101.58, 107.4, 113.23, 119.05, 124.87, 130.69],//2\n      [68.55, 73.23, 77.9, 84.13, 88.81, 94.26, 101.27, 108.28, 115.29, 122.3, 129.31, 136.33, 143.34, 150.35, 157.36],//3\n      [37.66, 40.23, 42.8, 46.22, 48.79, 51.79, 55.64, 59.49, 63.34, 67.2, 71.05, 74.9, 78.75, 82.6, 86.46],//4 hits twice\n      [71.54, 76.42, 81.3, 87.8, 92.68, 98.37, 105.69, 113.01, 120.32, 127.64, 134.96, 142.28, 149.59, 156.91, 164.23],\n      [95.83, 102.37, 108.9, 117.61, 124.15, 131.77, 141.57, 151.37, 161.17, 170.97, 180.77, 190.58, 200.38, 210.18, 219.98],\n    ]\n  },\n  charged: { \n    hit: [121.09, 129.34, 137.6, 148.61, 156.86, 166.5, 178.88, 191.26, 203.65, 216.03, 228.42, 240.8, 253.18, 265.57, 277.95],\n  },\n  plunging: {\n    dmg: [81.83, 88.49, 95.16, 104.67, 111.33, 118.94, 129.41, 139.88, 150.35, 161.76, 173.18, 184.6, 196.02, 207.44, 218.86],\n    low: [163.63, 176.95, 190.27, 209.3, 222.62, 237.84, 258.77, 279.7, 300.63, 323.46, 346.29, 369.12, 391.96, 414.79, 437.62],\n    high: [204.39, 221.02, 237.66, 261.42, 278.06, 297.07, 323.21, 349.36, 375.5, 404.02, 432.54, 461.06, 489.57, 518.09, 546.61],\n  },\n  skill: {\n    hit: [252.8, 271.76, 290.72, 316, 334.96, 353.92, 379.2, 404.48, 429.76, 455.04, 480.32, 505.6, 537.2, 568.8, 600.4],\n  },\n  burst: {\n    atk_bonus: [58.45, 61.95, 65.45, 70, 73.5, 77, 81.55, 86.1, 90.65, 95.2, 99.75, 104.3, 108.85, 113.4, 117.95],\n    drain: [3, 3, 3, 2.5, 2.5, 2.5, 2, 2, 2, 2, 2, 2, 2, 2, 2]  ,\n  }\n}\nconst formula = {\n  normal: Object.fromEntries(data.normal.hitArr.map((arr, i) =>\n    [i, (tlvl, stats) => basicDMGFormula(arr[tlvl] * ((i === 0 || i === 3) ? 2 : 1), stats, \"normal\")])),\n  charged: Object.fromEntries(Object.entries(data.charged).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"charged\")])),\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\n  skill: Object.fromEntries(Object.entries(data.skill).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"skill\")])),\n}\n\nexport default formula\n","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\n\nexport const data = {\n  baseStat: {\n    characterHP: [912, 2342, 3024, 4529, 5013, 5766, 6411, 7164, 7648, 8401, 8885, 9638, 10122, 10875],\n    characterATK: [19, 49, 63, 94, 104, 119, 133, 149, 159, 174, 184, 200, 210, 225],\n    characterDEF: [56, 144, 186, 279, 308, 355, 394, 441, 470, 517, 546, 593, 623, 669]\n  },\n  specializeStat: {\n    key: \"eleMas\",\n    value: [0, 0, 0, 0, 24, 24, 48, 48, 48, 48, 72, 72, 96, 96]\n  },\n  normal: {\n    hitArr: [\n      [42.05, 45.48, 48.9, 53.79, 57.21, 61.13, 66.5, 71.88, 77.26, 83.13, 89.85, 97.76, 105.67, 113.58, 122.2],//1\n      [42.14, 45.57, 49, 53.9, 57.33, 61.25, 66.64, 72.03, 77.42, 83.3, 90.04, 97.96, 105.88, 113.81, 122.45],//2\n      [26.06, 28.18, 30.3, 33.33, 35.45, 37.87, 41.21, 44.54, 47.87, 51.51, 55.68, 60.58, 65.48, 70.37, 75.72],//3 x2\n      [14.1, 15.25, 16.4, 18.04, 19.19, 20.5, 22.3, 24.11, 25.91, 27.88, 30.14, 32.79, 35.44, 38.09, 40.98],//4 x4\n      [71.04, 76.82, 82.6, 90.86, 96.64, 103.25, 112.34, 121.42, 130.51, 140.42, 151.78, 165.13, 178.49, 191.85, 206.42],//5\n    ],\n  },\n  charged: {\n    dmg: [121.69, 131.6, 141.5, 155.65, 165.56, 176.88, 192.44, 208.01, 223.57, 240.55, 260.01, 282.89, 305.77, 328.65, 353.61],\n  },\n  plunging: {\n    dmg: [63.93, 69.14, 74.34, 81.77, 86.98, 92.93, 101.1, 109.28, 117.46, 126.38, 135.3, 144.22, 153.14, 162.06, 170.98],\n    low: [127.84, 138.24, 148.65, 163.51, 173.92, 185.81, 202.16, 218.51, 234.86, 252.7, 270.54, 288.38, 306.22, 324.05, 341.89],\n    high: [159.68, 172.67, 185.67, 204.24, 217.23, 232.09, 252.51, 272.93, 293.36, 315.64, 337.92, 360.2, 382.48, 404.76, 427.04],\n  },\n  skill: {\n    dmg: [111.28, 119.63, 127.97, 139.1, 147.45, 155.79, 166.92, 178.05, 189.18, 200.3, 211.43, 222.56, 236.47, 250.38, 264.29],\n  },\n  burst: {\n    hit1: [72, 77.4, 82.8, 90, 95.4, 100.8, 108, 115.2, 122.4, 129.6, 136.8, 144, 153, 162, 171],\n    hit2: [88, 94.6, 101.2, 110, 116.6, 123.2, 132, 140.8, 149.6, 158.4, 167.2, 176, 187, 198, 209],\n    hit3: [109.6, 117.82, 126.04, 137, 145.22, 153.44, 164.4, 175.36, 186.32, 197.28, 208.24, 219.2, 232.9, 246.6, 260.3],\n    dmg: [112, 120.4, 128.8, 140, 148.4, 156.8, 168, 179.2, 190.4, 201.6, 212.8, 224, 238, 252, 266],\n  }\n}\nconst formula = {\n  normal: Object.fromEntries(data.normal.hitArr.map((arr, i) =>\n    [i, (tlvl, stats) => basicDMGFormula((i === 2 ? 2 : i === 3 ? 4 : 1) * (arr[tlvl]), stats, \"normal\")])),\n  charged: Object.fromEntries(Object.entries(data.charged).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"charged\")])),\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\n  skill: {\n    dmg: (tlvl, stats) => basicDMGFormula(data.skill.dmg[tlvl], stats, \"skill\"),\n  },\n  burst: {\n    hit1: (tlvl, stats) => basicDMGFormula(data.burst.hit1[tlvl], stats, \"burst\"),\n    hit2: (tlvl, stats) => basicDMGFormula(data.burst.hit2[tlvl], stats, \"burst\"),\n    hit3: (tlvl, stats) => basicDMGFormula(data.burst.hit3[tlvl], stats, \"burst\"),\n    dmg: (tlvl, stats) => basicDMGFormula(data.burst.dmg[tlvl], stats, \"burst\"),\n  },\n  constellation2: {\n    dmg: (tlvl, stats) => basicDMGFormula(75, stats, \"elemental\"),\n  }\n}\nexport default formula","import { basicDMGFormula } from \"../../../Util/FormulaUtil\"\n\nconst data = {\n  baseStat: {\n    characterHP: [857, 2202, 2842, 4257, 4712, 5420, 6027, 6735, 7190, 7897, 8352, 9060, 9515, 10222],\n    characterATK: [17, 43, 56, 84, 93, 107, 119, 133, 142, 156, 165, 179, 188, 202],\n    characterDEF: [64, 163, 211, 316, 349, 402, 447, 499, 533, 585, 619, 671, 705, 758]\n  },\n  specializeStat: {\n    key: \"atk_\",\n    value: [0, 0, 0, 0, 6, 6, 12, 12, 12, 12, 18, 18, 24, 24]\n  },\n  normal: {\n    hitArr: [\n      [46.61, 50.41, 54.2, 59.62, 63.41, 67.75, 73.71, 79.67, 85.64, 92.14, 99.59, 108.36, 117.12, 125.88, 135.45],//1\n      [47.64, 51.52, 55.4, 60.94, 64.82, 69.25, 75.34, 81.44, 87.53, 94.18, 101.8, 110.76, 119.71, 128.67, 138.44],//2\n      [28.55, 30.88, 33.2, 36.52, 38.84, 41.5, 45.15, 48.8, 52.46, 56.44, 61.01, 66.37, 71.74, 77.11, 82.97],//3 x2\n      [55.99, 60.54, 65.1, 71.61, 76.17, 81.38, 88.54, 95.7, 102.86, 110.67, 119.62, 130.15, 140.67, 151.2, 162.68],//4\n      [35.86, 38.78, 41.7, 45.87, 48.79, 52.13, 56.71, 61.3, 65.89, 70.89, 76.62, 83.37, 90.11, 96.85, 104.21],//5\n    ]\n  },\n  charged: {\n    hit1: [47.3, 51.15, 55, 60.5, 64.35, 68.75, 74.8, 80.85, 86.9, 93.5, 101.06, 109.96, 118.85, 127.74, 137.45],\n    hit2: [56.16, 60.73, 65.3, 71.83, 76.4, 81.63, 88.81, 95.99, 103.17, 111.01, 119.99, 130.55, 141.11, 151.67, 163.18]\n  },\n  plunging: {\n    dmg: [63.93, 69.14, 74.34, 81.77, 86.98, 92.93, 101.1, 109.28, 117.46, 126.38, 135.3, 144.22, 153.14, 162.06, 170.98],\n    low: [127.84, 138.24, 148.65, 163.51, 173.92, 185.81, 202.16, 218.51, 234.86, 252.7, 270.54, 288.38, 306.22, 324.05, 341.89],\n    high: [159.68, 172.67, 185.67, 204.24, 217.23, 232.09, 252.51, 272.93, 293.36, 315.64, 337.92, 360.2, 382.48, 404.76, 427.04],\n  },\n  skill: {\n    hit1: [168, 180.6, 193.2, 210, 222.6, 235.2, 252, 268.8, 285.6, 302.4, 319.2, 336, 357, 378, 399],\n    hit2: [191.2, 205.54, 219.88, 239, 253.34, 267.68, 286.8, 305.92, 325.04, 344.16, 363.28, 382.4, 406.3, 430.2, 454.1],\n    dmgRed: [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 29, 29, 29, 29, 29],\n  },\n  burst: {\n    dmg: [54.27, 58.34, 62.41, 67.84, 71.91, 75.98, 81.41, 86.84, 92.26, 97.69, 103.12, 108.54, 115.33, 122.11, 128.9],\n  },\n}\n\nconst formula = {\n  normal: Object.fromEntries(data.normal.hitArr.map((percentArr, i) =>\n    [i, (tlvl, stats) => basicDMGFormula((i === 2 ? 2 : 1) * (percentArr[tlvl]), stats,\"normal\")])),\n  charged: Object.fromEntries(Object.entries(data.charged).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"charged\")])),\n  plunging: Object.fromEntries(Object.entries(data.plunging).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"plunging\")])),\n  skill: Object.fromEntries([\n    ...Object.entries(data.skill).filter(([name]) => name !== \"dmgRed\").map(([name, arr]) =>\n      [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"skill\")]),\n    ...Object.entries(data.skill).filter(([name]) => name !== \"dmgRed\").map(([name, arr]) =>\n      [`${name}RainCutter`, (tlvl, stats) => basicDMGFormula(1.5 * arr[tlvl], stats, \"skill\")]),\n    [\"dmgRed\", (tlvl, stats) => {\n      const flat = data.skill.dmgRed[tlvl]\n      return [s => (flat + Math.min(24, 0.2 * s.hydro_dmg_)), [\"hydro_dmg_\"]]\n    }],\n  ]),\n  burst: Object.fromEntries(Object.entries(data.burst).map(([name, arr]) =>\n    [name, (tlvl, stats) => basicDMGFormula(arr[tlvl], stats, \"burst\")])),\n}\n\nexport default formula\nexport {\n  data\n}","import { getTalentStatKey } from \"../../../Build/Build\"\nimport { basicDMGFormula } from \"../../../Util/FormulaUtil\"\n\nconst data = {\n  baseStat: {\n    characterHP: [1144, 2967, 3948, 5908, 6605, 7599, 8528, 9533, 10230, 11243, 11940, 12965, 13662, 14695],\n    characterATK: [20, 51, 67, 101, 113, 130, 146, 163, 175, 192, 204, 222, 233, 251],\n    characterDEF: [57, 149, 198, 297, 332, 382, 428, 479, 514, 564, 699, 651, 686, 738]\n  },\n  specializeStat: {\n    key: \"geo_dmg_\",\n    value: [0, 0, 0, 0, 7.2, 7.2, 14.4, 14.4, 14.4, 14.4, 21.6, 21.6, 28.8, 28.8]\n  },\n  normal: {\n    hitArr: [\n      [30.77, 33.27, 35.78, 39.36, 41.86, 44.72, 48.66, 52.59, 56.53, 60.82, 65.74, 71.53, 77.31, 83.1, 89.41],//1\n      [31.15, 33.69, 36.22, 39.85, 42.38, 45.28, 49.26, 53.25, 57.23, 61.58, 66.56, 72.42, 78.27, 84.13, 90.52],//2\n      [38.58, 41.72, 44.86, 49.34, 52.48, 56.07, 61, 65.94, 70.87, 76.26, 82.42, 89.68, 96.93, 104.18, 112.1],//3\n      [42.94, 46.43, 49.93, 54.92, 58.42, 62.41, 67.9, 73.4, 78.89, 84.88, 91.74, 99.82, 107.89, 115.97, 124.77],//4\n      [10.75, 11.63, 12.5, 13.75, 14.63, 15.63, 17, 18.38, 19.75, 21.25, 22.97, 24.99, 27.01, 29.03, 31.24],//5 ×4\n      [54.5, 58.93, 63.37, 69.7, 74.14, 79.21, 86.18, 93.15, 100.12, 107.73, 116.44, 126.69, 136.93, 147.18, 158.36]\n    ]\n  },\n  charged: {\n    dmg: [111.03, 120.06, 129.1, 142.01, 151.05, 161.38, 175.58, 189.78, 203.98, 219.47, 237.22, 258.1, 278.97, 299.85, 322.62],\n  },\n  plunging: {\n    dmg: [63.93, 69.14, 74.34, 81.77, 86.98, 92.93, 101.1, 109.28, 117.46, 126.38, 135.3, 144.22, 153.14, 162.06, 170.98],\n    low: [127.84, 138.24, 148.65, 163.51, 173.92, 185.81, 202.16, 218.51, 234.86, 252.7, 270.54, 288.38, 306.22, 324.05, 341.89],\n    high: [159.68, 172.67, 185.67, 204.24, 217.23, 232.09, 252.51, 272.93, 293.36, 315.64, 337.92, 360.2, 382.48, 404.76, 427.04]\n  },\n  skill: {\n    steeleDMG: [16, 17.2, 18.4, 20, 21.2, 22.4, 24, 25.6, 27.2, 28.8, 30.4, 32, 34, 36, 38],\n    resonanceDMG: [32, 34.4, 36.8, 40, 42.4, 44.8, 48, 51.2, 54.4, 57.6, 60.8, 64, 68, 72, 76],\n    holdDMG: [80, 86, 92, 100, 106, 112, 120, 128, 136, 144, 152, 160, 170, 180, 190],\n    shieldBase: [1232, 1356, 1489, 1633, 1787, 1951, 2126, 2311, 2506, 2712, 2927, 3153, 3389, 3636, 3893],\n    shieldMaxHP: [12.8, 13.76, 14.72, 16, 16.96, 17.92, 19.2, 20.48, 21.76, 23.04, 24.32, 25.6, 27.2, 28.8, 30.4]\n  },\n  burst: {\n    dmg: [401.08, 444.44, 487.8, 542, 590.78, 639.56, 704.6, 769.64, 834.68, 899.72, 964.76, 1029.8, 1084, 1138.2, 1192.4],\n    petriDur: [3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4, 4, 4, 4, 4]\n  }\n}\nfunction zliDMG(percent, hpMulti, stats, skillKey, elemental = false) {\n  const val = percent / 100\n  const statKey = getTalentStatKey(skillKey, stats, elemental) + \"_multi\"\n  return [s => (val * s.finalATK + hpMulti * s.finalHP) * s[statKey], [\"finalATK\", \"finalHP\", statKey]]\n}\nconst formula = {\n  normal: {\n    ...Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [i, (tlvl, stats) =>\n      basicDMGFormula(percentArr[tlvl] * (i === 4 ? 4 : 1), stats, \"normal\")])),\n    ...Object.fromEntries(data.normal.hitArr.map((percentArr, i) => [`${i}HP`, (tlvl, stats) => {\n      const val = percentArr[tlvl] / 100\n      const statKey = getTalentStatKey(\"normal\", stats) + \"_multi\"\n      const multi = i === 4 ? 4 : 1\n      return [s => (val * s.finalATK + 0.0139 * s.finalHP) * s[statKey] * multi, [\"finalATK\", \"finalHP\", statKey]]\n    }])),\n  },\n  charged: {\n    dmg: (tlvl, stats) => basicDMGFormula(data.charged.dmg[tlvl], stats, \"charged\"),\n    dmgHP: (tlvl, stats) => zliDMG(data.charged.dmg[tlvl], 0.0139, stats, \"charged\")\n  },\n  plunging: {\n    dmg: (tlvl, stats) => basicDMGFormula(data.plunging.dmg[tlvl], stats, \"plunging\"),\n    dmgHP: (tlvl, stats) => zliDMG(data.plunging.dmg[tlvl], 0.0139, stats, \"plunging\"),\n    low: (tlvl, stats) => basicDMGFormula(data.plunging.low[tlvl], stats, \"plunging\"),\n    lowHP: (tlvl, stats) => zliDMG(data.plunging.low[tlvl], 0.0139, stats, \"plunging\"),\n    high: (tlvl, stats) => basicDMGFormula(data.plunging.high[tlvl], stats, \"plunging\"),\n    highHP: (tlvl, stats) => zliDMG(data.plunging.high[tlvl], 0.0139, stats, \"plunging\"),\n  },\n  skill: {\n    steeleDMG: (tlvl, stats) => basicDMGFormula(data.skill.steeleDMG[tlvl], stats, \"skill\"),\n    steeleDMGHP: (tlvl, stats) => zliDMG(data.skill.steeleDMG[tlvl], 0.019, stats, \"skill\"),\n    resonanceDMG: (tlvl, stats) => basicDMGFormula(data.skill.resonanceDMG[tlvl], stats, \"skill\"),\n    resonanceDMGHP: (tlvl, stats) => zliDMG(data.skill.resonanceDMG[tlvl], 0.019, stats, \"skill\"),\n    holdDMG: (tlvl, stats) => basicDMGFormula(data.skill.holdDMG[tlvl], stats, \"skill\"),\n    holdDMGHP: (tlvl, stats) => zliDMG(data.skill.holdDMG[tlvl], 0.019, stats, \"skill\"),\n    shield: (tlvl, stats) => {\n      const base = data.skill.shieldBase[tlvl]\n      const hpMulti = data.skill.shieldMaxHP[tlvl] / 100\n      return [s => hpMulti * s.finalHP + base, [\"finalHP\"]]\n    }\n  },\n  burst: {\n    dmg: (tlvl, stats) => basicDMGFormula(data.burst.dmg[tlvl], stats, \"burst\"),\n    dmgHP: (tlvl, stats) => zliDMG(data.burst.dmg[tlvl], 0.33, stats, \"burst\"),\n  }\n}\n\nexport default formula\nexport {\n  data\n}","// import albedo from './Albedo/data'\nimport amber from './Amber/data'\nimport barbara from './Barbara/data'\nimport beidou from './Beidou/data'\nimport bennett from './Bennett/data'\n// import chongyun from './Chongyun/data'\nimport diluc from './Diluc/data'\n// import diona from './Diona/data'\nimport fischl from './Fischl/data'\nimport ganyu from './Ganyu/data'\nimport hutao from './Hu Tao/data'\nimport jean from './Jean/data'\n// import kaeya from './Kaeya/data'\nimport keqing from './Keqing/data'\nimport klee from './Klee/data'\n// import lisa from './Lisa/data'\nimport mona from './Mona/data'\nimport ningguang from './Ningguang/data'\nimport noelle from './Noelle/data'\n// import qiqi from './Qiqi/data'\nimport razor from './Razor/data'\n// import sucrose from './Sucrose/data'\n// import tartaglia from './Tartaglia/data'\n// import traveler_anemo from './Traveler Anemo/data'\n// import traveler_geo from './Traveler Geo/data'\nimport venti from './Venti/data'\nimport xiao from './Xiao/data'\nimport xiangling from './Xiangling/data'\nimport xingqiu from './Xingqiu/data'\n// import xinyan from './Xinyan/data'\nimport zhongli from './Zhongli/data'\nconst formula = {\n  // albedo,\n  amber,\n  barbara,\n  beidou,\n  bennett,\n  // chongyun,\n  diluc,\n  // diona,\n  fischl,\n  ganyu,\n  hutao,\n  jean,\n  // kaeya,\n  keqing,\n  klee,\n  // lisa,\n  mona,\n  ningguang,\n  noelle,\n  // qiqi,\n  razor,\n  // sucrose,\n  // tartaglia,\n  // traveler_anemo,\n  // traveler_geo,\n  venti,\n  xiao,\n  xiangling,\n  xingqiu,\n  // xinyan,\n  zhongli\n};\nexport default formula","import { Formulas, StatData } from \"./StatData\"\n\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\nfunction GetFormulaDependency(formula) {\n  const dependency = new Set()\n  formula(\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\n  return [...dependency]\n}\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\n))\n\nif (process.env.NODE_ENV === \"development\") {\n  let statKeys = Object.keys(StatData)\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\n    dependencies.forEach(key =>\n      !statKeys.includes(key) &&\n        console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\n  )\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\n    StatData[formulaKey]?.const && dependencies.forEach(key => \n      !StatData[key]?.const &&\n        console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\n    )\n  )\n}\n\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\n  let dependencies = new Set()\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\n  return [...dependencies]\n}\nfunction InsertDependencies(key, modifiers, dependencies) {\n  if (dependencies.has(key)) return\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\n  dependencies.add(key)\n}\n\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\nconst reduceOptimizationTarget = (optimizationTarget) =>\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0]] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\n\n\nexport {\n  GetFormulaDependency,\n  GetDependencies,\n  reduceOptimizationTarget,\n}\n","import '../WorkerHack'\nimport { PreprocessFormulas } from \"../StatData\";\nimport { artifactSetPermutations, artifactPermutations } from \"./Build\"\nimport charFormulas from \"../Data/Characters/formula\"\nimport { GetDependencies } from '../StatDependency';\n\nonmessage = async (e) => {\n  const t1 = performance.now()\n  const { splitArtifacts, setFilters, minFilters = {}, maxFilters = {}, initialStats: stats, artifactSetEffects, maxBuildsToShow, optimizationTarget, ascending } = e.data;\n\n  let target, targetKeys;\n  if (typeof optimizationTarget === \"string\") {\n    target = (stats) => stats[optimizationTarget]\n    targetKeys = [optimizationTarget]\n  } else {\n    const { talentKey, formulaKey } = optimizationTarget\n    const tlvl = stats.talentLevelKeys[new Set([\"normal\", \"charged\", \"plunging\"]).has(talentKey) ? \"auto\" : talentKey]\n    const targetFormula = charFormulas?.[stats.characterKey]?.[talentKey]?.[formulaKey]\n    if (typeof targetFormula === \"function\")\n      [target, targetKeys] = targetFormula(tlvl, stats)\n    else {\n      postMessage({ progress: 0, timing: 0 })\n      postMessage({ builds: [], timing: 0 })\n      return\n    }\n    if (targetKeys.length === 1) {\n      // CAUTION: This optimization works only with monotonic dependencies\n      const key = targetKeys[0]\n      target = (stats) => stats[key]\n    }\n  }\n\n  const dependencies = GetDependencies(stats.modifiers, [...targetKeys, ...Object.keys(minFilters), ...Object.keys(maxFilters)])\n  let { initialStats, formula } = PreprocessFormulas(dependencies, stats)\n  let builds = [], threshold = -Infinity\n\n  const prune = () => {\n    builds.sort((a, b) => (b.buildFilterVal - a.buildFilterVal))\n    builds.splice(maxBuildsToShow)\n  }\n\n  let buildCount = 0;\n  const callback = (accu, stats) => {\n    if (!(buildCount++ % 10000)) postMessage({ progress: buildCount, timing: performance.now() - t1 })\n    formula(stats)\n    if (Object.entries(minFilters).some(([key, minimum]) => stats[key] < minimum)) return\n    if (Object.entries(maxFilters).some(([key, maximum]) => stats[key] > maximum)) return\n    let buildFilterVal = ascending ? -target(stats) : target(stats)\n    if (buildFilterVal >= threshold) {\n      builds.push({ buildFilterVal, artifacts: { ...accu } })\n      if (builds.length >= 1000) {\n        prune()\n        threshold = builds[builds.length - 1].buildFilterVal\n      }\n    }\n  }\n  for (const artifactsBySlot of artifactSetPermutations(splitArtifacts, setFilters))\n    artifactPermutations(initialStats, artifactsBySlot, artifactSetEffects, callback)\n\n  prune()\n\n  let t2 = performance.now()\n  postMessage({ progress: buildCount, timing: t2 - t1 })\n  postMessage({ builds, timing: t2 - t1 })\n}\n"],"sourceRoot":""}