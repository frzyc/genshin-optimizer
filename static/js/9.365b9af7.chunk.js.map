{"version":3,"sources":["StatData.js","Data/WeaponData.js","Data/ArtifactData.js","DatabaseUtil.js","Data/CharacterData.js","Components/StatIcon.js","Assets/Weapons/Swords/Swords.js","Assets/Weapons/Swords/Weapon_Dull_Blade.png","Assets/Weapons/Swords/Weapon_Silver_Sword.png","Assets/Weapons/Swords/Weapon_Cool_Steel.png","Assets/Weapons/Swords/Weapon_Dark_Iron_Sword.png","Assets/Weapons/Swords/Weapon_Fillet_Blade.png","Assets/Weapons/Swords/Weapon_Harbinger_of_Dawn.png","Assets/Weapons/Swords/Weapon_Skyrider_Sword.png","Assets/Weapons/Swords/Weapon_Traveler's_Handy_Sword.png","Assets/Weapons/Swords/Weapon_Blackcliff_Longsword.png","Assets/Weapons/Swords/Weapon_Favonius_Sword.png","Assets/Weapons/Swords/Weapon_Iron_Sting.png","Assets/Weapons/Swords/Weapon_Lion's_Roar.png","Assets/Weapons/Swords/Weapon_Prototype_Rancour.png","Assets/Weapons/Swords/Weapon_Royal_Longsword.png","Assets/Weapons/Swords/Weapon_Sacrificial_Sword.png","Assets/Weapons/Swords/Weapon_The_Alley_Flash.png","Assets/Weapons/Swords/Weapon_The_Black_Sword.png","Assets/Weapons/Swords/Weapon_The_Flute.png","Assets/Weapons/Swords/Weapon_Sword_of_Descension.png","Assets/Weapons/Swords/festering_fang.png","Assets/Weapons/Swords/Weapon_Aquila_Favonia.png","Assets/Weapons/Swords/Weapon_Skyward_Blade.png","Assets/Weapons/Swords/summit_shaper.png","Assets/Weapons/Claymores/Claymores.js","Assets/Weapons/Claymores/Weapon_Waster_Greatsword.png","Assets/Weapons/Claymores/Weapon_Old_Merc's_Pal.png","Assets/Weapons/Claymores/Weapon_Bloodtainted_Greatsword.png","Assets/Weapons/Claymores/Weapon_Debate_Club.png","Assets/Weapons/Claymores/Weapon_Ferrous_Shadow.png","Assets/Weapons/Claymores/Weapon_Quartz.png","Assets/Weapons/Claymores/Weapon_Skyrider_Greatsword.png","Assets/Weapons/Claymores/Weapon_White_Iron_Greatsword.png","Assets/Weapons/Claymores/Weapon_Blackcliff_Slasher.png","Assets/Weapons/Claymores/Weapon_Favonius_Greatsword.png","Assets/Weapons/Claymores/Weapon_Lithic_Blade.png","Assets/Weapons/Claymores/Weapon_Prototype_Aminus.png","Assets/Weapons/Claymores/Weapon_Rainslasher.png","Assets/Weapons/Claymores/Weapon_Royal_Greatsword.png","Assets/Weapons/Claymores/Weapon_Serpent_Spine.png","Assets/Weapons/Claymores/Weapon_The_Bell.png","Assets/Weapons/Claymores/Weapon_Whiteblind.png","Assets/Weapons/Claymores/Weapon_Sacrificial_Greatsword.png","Assets/Weapons/Claymores/snow_tombed_starsilver.png","Assets/Weapons/Claymores/Weapon_Skyward_Pride.png","Assets/Weapons/Claymores/Weapon_Wolf's_Gravestone.png","Assets/Weapons/Claymores/Weapon_The_Unforged.png","Assets/Weapons/Polearms/Polearms.js","Assets/Weapons/Polearms/Weapon_Beginner's_Protector.png","Assets/Weapons/Polearms/Weapon_Iron_Point.png","Assets/Weapons/Polearms/Weapon_Black_Tassel.png","Assets/Weapons/Polearms/Weapon_Halberd.png","Assets/Weapons/Polearms/Weapon_White_Tassel.png","Assets/Weapons/Polearms/Weapon_Blackcliff_Pole.png","Assets/Weapons/Polearms/Weapon_Crescent_Pike.png","Assets/Weapons/Polearms/Weapon_Deathmatch.png","Assets/Weapons/Polearms/Weapon_Dragon's_Bane.png","Assets/Weapons/Polearms/Weapon_Lithic_Spear.png","Assets/Weapons/Polearms/Weapon_Prototype_Grudge.png","Assets/Weapons/Polearms/Weapon_Favonius_Lance.png","Assets/Weapons/Polearms/Weapon_Royal_Spear.png","Assets/Weapons/Polearms/dragonspine_spear.png","Assets/Weapons/Polearms/Weapon_Vortex_Vanquisher.png","Assets/Weapons/Polearms/Weapon_Primordial_Jade_Winged-Spear.png","Assets/Weapons/Polearms/Weapon_Skyward_Spine.png","Assets/Weapons/Bows/Bows.js","Assets/Weapons/Bows/Weapon_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Seasoned_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Ebony_Bow.png","Assets/Weapons/Bows/Weapon_Messenger.png","Assets/Weapons/Bows/Weapon_Raven_Bow.png","Assets/Weapons/Bows/Weapon_Recurve_Bow.png","Assets/Weapons/Bows/Weapon_Sharpshooter's_Oath.png","Assets/Weapons/Bows/Weapon_Slingshot.png","Assets/Weapons/Bows/Weapon_The_Stringless.png","Assets/Weapons/Bows/Weapon_Alley_Hunter.png","Assets/Weapons/Bows/Weapon_Blackcliff_Warbow.png","Assets/Weapons/Bows/Weapon_Compound_Bow.png","Assets/Weapons/Bows/Weapon_Favonius_Warbow.png","Assets/Weapons/Bows/Weapon_Prototype_Crescent.png","Assets/Weapons/Bows/Weapon_Royal_Bow.png","Assets/Weapons/Bows/Weapon_Rust.png","Assets/Weapons/Bows/Weapon_Sacrificial_Bow.png","Assets/Weapons/Bows/Weapon_The_Viridescent_Hunt.png","Assets/Weapons/Bows/Weapon_Skyward_Harp.png","Assets/Weapons/Bows/Weapon_Amos'_Bow.png","Assets/Weapons/Bows/dreams_of_dragonfell.png","Assets/Weapons/Catalysts/Catalysts.js","Assets/Weapons/Catalysts/Weapon_Apprentice's_Notes.png","Assets/Weapons/Catalysts/Weapon_Pocket_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Amber_Catalyst.png","Assets/Weapons/Catalysts/Weapon_Emerald_Orb.png","Assets/Weapons/Catalysts/Weapon_Magic_Guide.png","Assets/Weapons/Catalysts/Weapon_Otherworldly_Story.png","Assets/Weapons/Catalysts/Weapon_Thrilling_Tales_of_Dragon_Slayers.png","Assets/Weapons/Catalysts/Weapon_Twin_Nephrite.png","Assets/Weapons/Catalysts/Weapon_Blackcliff_Amulet.png","Assets/Weapons/Catalysts/Weapon_Favonius_Codex.png","Assets/Weapons/Catalysts/Weapon_Mappa_Mare.png","Assets/Weapons/Catalysts/Weapon_Prototype_Malice.png","Assets/Weapons/Catalysts/Weapon_Royal_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Sacrificial_Fragments.png","Assets/Weapons/Catalysts/Weapon_Solar_Pearl.png","Assets/Weapons/Catalysts/Weapon_The_Widsith.png","Assets/Weapons/Catalysts/Weapon_Wine_and_Song.png","Assets/Weapons/Catalysts/Weapon_Eye_of_Perception.png","Assets/Weapons/Catalysts/Weapon_Frostbearer.png","Assets/Weapons/Catalysts/Weapon_Lost_Prayer_to_the_Sacred_Winds.png","Assets/Weapons/Catalysts/Weapon_Skyward_Atlas.png","Assets/Weapons/Catalysts/Weapon_Memory_of_Dust.png","Assets/Assets.js","Assets/Weapons/Weapons.js","Assets/Element_Anemo.png","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","../node_modules/react-bootstrap/esm/Badge.js","Character/CharacterCard.js","Character/CharacterDisplay.js","Character/Character.js","Util/Util.js","Stat.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Artifact/ArtifactDatabase.js","Util/ConditionalsUtil.js","Data/ElementalData.js","Weapon/Weapon.js","Components/StarDisplay.js"],"names":["StatData","hp_base","name","pretty","hp","hp_","unit","hp_final","atk_base","atk","atk_","atk_final","atk_weapon","def_base","def","def_","def_final","phy_dmg_bonus","phy_res","ele_dmg_bonus","ele_res","ele_mas","ener_rech","crit_rate","crit_dmg","heal_bonu","stam","inc_heal","pow_shield","red_cd","norm_atk_dmg","char_atk_dmg","plunge_dmg","norm_atk_crit_dmg","char_atk_crit_dmg","plunge_crit_dmg","norm_atk_avg_dmg","char_atk_avg_dmg","plunge_avg_dmg","norm_atk_dmg_bonus","char_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","norm_atk_crit_multi","char_atk_crit_multi","norm_atk_bonus_multi","char_atk_bonus_multi","plunge_bonus_multi","skill_dmg","burst_dmg","skill_crit_dmg","burst_crit_dmg","skill_avg_dmg","burst_avg_dmg","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_crit_multi","burst_crit_multi","skill_bonus_multi","burst_bonus_multi","skill_cd_red","burst_cd_red","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","crit_dmg_multi","crit_multi","dmg","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","overloaded_dmg","electro_charged_dmg","superconduct_dmg","burning_dmg","vaporize_dmg","melt_dmg","swirl_dmg","char_ele_key","default","char_level","enemy_level","enemy_level_multi","enemy_phy_res","enemy_phy_res_multi","enemy_phy_immunity","enemy_ele_res","enemy_ele_res_multi","enemy_ele_immunity","resMultiplier","res","Formulas","s","clamp","eleFormulas","ele","Object","keys","filter","key","some","str","includes","forEach","html","className","variant","obj","ElementalData","eleKey","ele_key","deepClone","entries","func","defineProperty","configurable","enumerable","writable","value","OverrideFormulas","noelle_burst_atk","formula","options","dependency","AttachLazyFormulas","formulaKeys","statKeys","formulaOverrides","formulaOverride","overrideFormulaKey","get","val","this","hasOwnProperty","WeaponData","WeaponDataImport","then","imp","WeaponLevelKeys","LevelNameData","WeaponTypeData","sword","claymore","catalyst","bow","polearm","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","push","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","2","ArtifactSubStatsData","ArtifactSlotsData","flower","stats","plume","sands","goblet","circlet","DatabaseInitAndVerify","localStorage","removeItem","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","values","art","valid","location","getCharacter","keyMapping","setKey","mainStatKey","endsWith","replace","updateArtifact","chars","getCharacterDatabase","character","equippedArtifacts","fromEntries","map","slotKey","artid","getArtifact","undefined","artifactConditionals","cond","srcKey","srcKey2","characterKey","levelKey","constellation","talentConditionals","ascension","Character","getAscension","talentKey","conditionalKey","talentLvlKey","getTalentLevelKey","getTalentConditional","dmgMode","updateCharacter","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","CharacterSpecializedStatKey","StatIcon","faTint","faFistRaised","faShieldAlt","faMagic","faDice","faDiceD20","faSync","faFirstAid","StatIconEle","statKey","icon","DullBlade","SilverSword","CoolSteel","DarkIronSword","FilletBlade","HarbingerOfDawn","SkyriderSword","TravelersHandySword","BlackcliffLongsword","FavoniusSword","IronSting","LionsRoar","PrototypeRancour","RoyalLongsword","SacrificialSword","TheAlleyFlash","TheBlackSword","TheFlute","SwordOfDescension","FesteringDesire","AquilaFavonia","SkywardBlade","SummitShaper","WasterGreatsword","OldMercsPal","BloodtaintedGreatsword","DebateClub","FerrousShadow","Quartz","SkyriderGreatsword","WhiteIronGreatsword","BlackcliffSlasher","FavoniusGreatsword","LithicBlade","PrototypeAminus","Rainslasher","RoyalGreatsword","SerpentSpine","TheBell","Whiteblind","SacrificialGreatsword","SnowTombedStarsilver","SkywardPride","WolfsGravestone","TheUnforged","polearms","BeginnersProtector","IronPoint","BlackTassel","Halberd","WhiteTassel","BlackcliffPole","CrescentPike","Deathmatch","DragonsBane","LithicSpear","PrototypeGrudge","FavoniusLance","RoyalSpear","DragonspineSpear","VortexVanquisher","PrimordialJadeWingedSpear","SkywardSpine","bows","HuntersBow","SeasonedHuntersBow","EbonyBow","Messenger","RavenBow","RecurveBow","SharpshootersOath","Slingshot","TheStringless","AlleyHunter","BlackcliffWarbow","CompoundBow","FavoniusWarbow","PrototypeCrescent","RoyalBow","Rust","SacrificialBow","TheViridescentHunt","SkywardHarp","AmosBow","DreamsOfDragonfell","catalysts","ApprenticesNotes","PocketGrimoire","AmberCatalyst","EmeraldOrb","MagicGuide","OtherworldlyStory","ThrillingTalesOfDragonSlayers","TwinNephrite","BlackcliffAgate","FavoniusCodex","MappaMare","PrototypeMalice","RoyalGrimoire","SacrificialFragments","SolarPearl","TheWidsith","WineAndSong","EyeOfPerception","Frostbearer","LostPrayerToTheSacredWinds","SkywardAtlas","MemoryOfDust","Assets","weapons","swords","claymores","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","resin","fragile","condensed","exp_books","advice","wit","experience","Badge","React","forwardRef","_ref","ref","bsPrefix","pill","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","CharacterCard","useReducer","x","forceUpdate","useEffect","Promise","all","getCharacterDataImport","Weapon","getWeaponDataImport","Artifact","getArtifactDataImport","characterId","onEdit","onDelete","build","calculateBuild","setToSlots","weapon","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","weaponName","getWeaponName","weaponMainVal","getWeaponMainStatValWithOverride","weaponSubKey","getWeaponSubStatKey","weaponSubVal","getWeaponSubStatValWithOverride","weaponLevelName","getLevelName","weaponPassiveName","getWeaponPassiveName","cardClassName","bg","text","Header","header","xs","size","onClick","faEdit","faTrashAlt","Body","style","cursor","src","getThumb","getStar","thumbnail","getName","stars","colored","getStatValueWithOverride","refineIndex","Stat","getStatName","getStatUnit","getArtifactSetEffects","arr","artifactSetName","getArtifactSetName","highestNum","Math","max","statVal","finalStats","toFixed","fixedUnit","footer","Footer","Link","to","pathname","selectedCharacterId","CharacterDisplayCardPromise","CharacterDisplayCard","lazy","CharacterDisplay","deleteCharacter","id","removeCharacter","editCharacter","setState","charIdToEdit","showEditor","scrollRef","current","scrollIntoView","behavior","cancelEditCharacter","state","ReactGA","pageview","createRef","charIdList","getCharacterIdList","Suspense","fallback","editable","onClose","lg","md","faPlus","Error","moveToNewLocation","removeCharacterById","getBaseStatValue","defVal","getSpecializedStatKey","getSpeicalizedStatVal","getLevel","characterObj","getCDataObj","baseStat","getIndexFromlevelkey","charKey","getElementalName","elementalKey","getAllCharacterKeys","star","getElementalKeys","getConstellationName","constellationName","getTitles","titles","getlevelKeys","getlevelNames","indexOf","getSpecializedStat","specializeStat","thumbImg","getCard","cardImg","getTalentImg","talent","img","getConstellationImg","constIndex","getTalentName","getTalentLevelBoost","talents","i","talentBoost","boostEntry","find","withBoost","talentLevelKeys","levelBoost","getTalentDocument","document","getTalentFields","fields","getTalentStats","getTalentStatsAll","statsArr","doc","section","tempCond","conditional","getTalentConditionalStats","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","getTalentConditionalFields","getTalentStatKey","skillKey","elemental","autoInfused","isAutoElemental","auto","infusable","isAutoInfusable","getDisplayStatKeys","hasOverride","baseStatOverrides","equipArtifacts","artifactIds","artIdsOnCharacter","artIdsNotOnCharacter","getArtifactSlotKeys","artNotOnChar","artOnChar","notCharLoc","equipArtifact","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","getMainStatValue","numStars","artifactsAssumeFull","substats","substat","stat","setNumKey","condStats","getArtifactConditionalStats","overrides","specialStatKey","specializedStatVal","addStatsObj","weaponStats","subKey","subVal","bonusStats","getWeaponBonusStat","conditionalStats","getWeaponConditionalStat","getRandomElementFromArray","array","floor","random","length","getRandomIntInclusive","min","ceil","loadFromLocalStorage","data","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","closeEnoughFloat","a","b","abs","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","Array","join","slice","f","expand","FormulaText","statName","getStatNamePretty","statUnit","getStatNameRaw","getStatNameWithPercent","getStatVariant","printStat","printFormula","printOverrideFormula","overrideKey","OverrideFormulasText","formulaText","o","eleFormulaText","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","_createForOfIteratorHelper","allowArrayLike","it","F","n","done","e","_e","err","normalCompletion","didErr","step","next","_e2","initiated","characterDatabase","charIdIndex","isInvalid","char","addCharacter","dchar","getArtifactIDFromSlot","charid","unequipArtifactOnSlot","equipArtifactBuild","SlotIcon","faBahai","faFeatherAlt","faHourglass","faWineGlass","faCrown","ArtifactBase","rollData","float","roll","maxNumRoll","round","rollOption","sum","reduce","accu","v","reverse","parseFloat","isNaN","msg","isFloat","getSubstatRollData","rolls","getRolls","totalAllowableRolls","efficiency","currentEfficiency","maximumEfficiency","subStatValidations","validateSubStat","currentNumOfRolls","cur","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","totalPossbleUpgrade","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getArtifactSetsByMaxStarEntries","setobj","rarity","getArtifactPieceName","pieces","getArtifactPieceIcon","icons","getArtifactSetEffectsObj","sets","getArtifactSlotName","getArtifactSlotIcon","getArtifactSlotNameWithIcon","slotIcon","getRarityArr","getMainStatKeys","main","getSubStatKeys","numberOfSubstatUnlocked","subStatKey","getArtifactSets","getArtifactSetNumStats","getArtifactSetEffectConditional","artifactSetEffect","artArr","parseInt","setNumKeys","getArtifactSetEffectText","charFinalStats","setEffectText","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","hasSetEffect","setEffectObj","getConditionalNum","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","conditionals","srcKeyObj","index","findIndex","splice","newCond","fieldName","selectedConditionalNum","selectedConditional","curConditional","maxStack","getLevelIndex","weaponKey","getWeaponRarity","passiveName","getWeaponPassiveDescription","passiveDescription","getWeaponDescription","description","getWeaponConditional","getWeaponMainStatVal","baseStats","getWeaponSubStatVal","sub","getWeaponsOfType","weaponType","getWeaponTypeName","weaponObj","overrideMainVal","overrideSubVal","StarIcon","faStar","Stars","_"],"mappings":"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uBGzBa,IAA0B,2DH0BvCC,WI1Ba,IAA0B,+CJ2BvCC,cK3Ba,IAA0B,kDL4BvCC,OM5Ba,IAA0B,0CN6BvCC,mBO7Ba,IAA0B,uDP8BvCC,oBQ9Ba,IAA0B,yDR+BvCC,kBS/Ba,IAA0B,sDTgCvCC,mBUhCa,IAA0B,uDViCvCC,YWjCa,IAA0B,gDXkCvCC,gBYlCa,IAA0B,oDZmCvCC,YanCa,IAA0B,+CboCvCC,gBcpCa,IAA0B,oDdqCvCC,aerCa,IAA0B,iDfsCvCC,QgBtCa,IAA0B,4ChBuCvCC,WiBvCa,IAA0B,8CjBwCvCC,sBkBxCa,IAA0B,0DlByCvCC,qBmBzCa,IAA0B,mDnB0CvCC,aoB1Ca,IAA0B,iDpB2CvCC,gBqB3Ca,IAA0B,qDrB4CvCC,YsB5Ca,IAA0B,iDCoC1BC,EAnBE,CACfC,mBClBa,IAA0B,wDDmBvCC,UEnBa,IAA0B,8CFoBvCC,YGpBa,IAA0B,gDHqBvCC,QIrBa,IAA0B,2CJsBvCC,YKtBa,IAA0B,gDLuBvCC,eMvBa,IAA0B,mDNwBvCC,aOxBa,IAA0B,iDPyBvCC,WQzBa,IAA0B,8CR0BvCC,YS1Ba,IAA0B,iDT2BvCC,YU3Ba,IAA0B,gDV4BvCC,gBW5Ba,IAA0B,oDX6BvCC,cY7Ba,IAA0B,kDZ8BvCC,Wa9Ba,IAA0B,+Cb+BvCC,iBc/Ba,IAA0B,8CdgCvCC,iBehCa,IAA0B,qDfiCvCC,0BgBjCa,IAA0B,gEhBkCvCC,aiBlCa,IAA0B,kDC4C1BC,EAvBF,CACXC,WCtBa,IAA0B,gDDuBvCC,mBEvBa,IAA0B,yDFwBvCC,SGxBa,IAA0B,6CHyBvCC,UIzBa,IAA0B,6CJ0BvCC,SK1Ba,IAA0B,6CL2BvCC,WM3Ba,IAA0B,+CN4BvCC,kBO5Ba,IAA0B,uDP6BvCC,UQ7Ba,IAA0B,6CR8BvCC,cS9Ba,IAA0B,kDT+BvCC,YU/Ba,IAA0B,gDVgCvCC,iBWhCa,IAA0B,qDXiCvCC,YYjCa,IAA0B,gDZkCvCC,ealCa,IAA0B,mDbmCvCC,kBcnCa,IAA0B,sDdoCvCC,SepCa,IAA0B,6CfqCvCC,KgBrCa,IAA0B,wChBsCvCC,eiBtCa,IAA0B,mDjBuCvCC,mBkBvCa,IAA0B,wDlBwCvCC,YmBxCa,IAA0B,gDnByCvCC,QoBzCa,IAA0B,6CpB0CvCC,mBqB1Ca,IAA0B,kDC8C1BC,EAxBG,CAChBC,iBCvBa,IAA0B,sDDwBvCC,eExBa,IAA0B,mDFyBvCC,cGzBa,IAA0B,kDH0BvCC,WI1Ba,IAA0B,+CJ2BvCC,WK3Ba,IAA0B,+CL4BvCC,kBM5Ba,IAA0B,sDN6BvCC,8BO7Ba,IAA0B,qEP8BvCC,aQ9Ba,IAA0B,iDR+BvCC,gBS/Ba,IAA0B,qDTgCvCC,cUhCa,IAA0B,kDViCvCC,UWjCa,IAA0B,8CXkCvCC,gBYlCa,IAA0B,oDZmCvCC,canCa,IAA0B,kDboCvCC,qBcpCa,IAA0B,yDdqCvCC,WerCa,IAA0B,+CfsCvCC,WgBtCa,IAA0B,+ChBuCvCC,YiBvCa,IAA0B,iDjBwCvCC,gBkBxCa,IAA0B,qDlByCvCC,YmBzCa,IAA0B,+CnB0CvCC,2BoB1Ca,IAA0B,mEpB2CvCC,aqB3Ca,IAA0B,iDrB4CvCC,asB5Ca,IAA0B,mDCwBrCC,EAAS,CACXC,QCpBW,+DACRC,GACAC,GACAlE,GACAkB,GACAsB,GDgBH2B,SAAU,CAAEC,ME1BC,IAA0B,0CF0BpBC,KG1BN,IAA0B,yCH0BdC,OI1BZ,IAA0B,2CJ0BNC,QK1BpB,IAA0B,4CL0BGC,IM1B7B,IAA0B,wCN0BQC,MO1BlC,IAA0B,0CP0BeC,KQ1BzC,IAA0B,0CR2BvCC,YAAa,CAAElN,IS3BF,IAA0B,kDT2BnBD,SU3BP,IAA0B,uDV2BTD,SW3BjB,IAA0B,uDX2BCG,QY3B3B,IAA0B,sDZ2BUJ,Ma3BpC,IAA0B,qDb4BvCsN,MAAO,CACLC,Qc7BW,IAA0B,+Cd8BrCC,Ue9BW,IAA0B,kDfgCvCC,UAAW,CACTC,OgBjCW,IAA0B,mDhBkCrCC,IiBlCW,IAA0B,4CjBmCrCC,WkBnCW,IAA0B,2DlBsC1BnB,O,iCmBtCf,yDAQIoB,EAAqBC,IAAMC,YAAW,SAAUC,EAAMC,GACxD,IAAIC,EAAWF,EAAKE,SAChBrQ,EAAUmQ,EAAKnQ,QACfsQ,EAAOH,EAAKG,KACZvQ,EAAYoQ,EAAKpQ,UACjBwQ,EAAUJ,EAAKK,GACfC,OAAwB,IAAZF,EAAqB,OAASA,EAC1CG,EAAQC,YAA8BR,EAAM,CAAC,WAAY,UAAW,OAAQ,YAAa,OAEzFS,EAASC,YAAmBR,EAAU,SAC1C,OAAoBJ,IAAMa,cAAcL,EAAWM,YAAS,CAC1DX,IAAKA,GACJM,EAAO,CACR3Q,UAAWiR,IAAWjR,EAAW6Q,EAAQN,GAAQM,EAAS,QAAS5Q,GAAW4Q,EAAS,IAAM5Q,SAGjGgQ,EAAMiB,YAAc,QACpBjB,EAAMkB,aApBa,CACjBZ,MAAM,GAoBON,O,iPCTA,SAASmB,EAAcT,GAAQ,IAAD,IACnBU,sBAAW,SAAAC,GAAC,OAAIA,EAAI,IAAG,GAAtCC,EADkC,oBAE3CC,qBAAU,WACRC,QAAQC,IAAI,CACVrL,IAAUsL,yBACVC,IAAOC,sBACPC,IAASC,0BACRhQ,MAAK,kBAAMwP,SACb,IARwC,IASrCS,EAAkCrB,EAAlCqB,YAAaC,EAAqBtB,EAArBsB,OAAQC,EAAavB,EAAbuB,SACvB9M,EAAYlB,IAAkBS,aAAaqN,GAC/C,IAAK5M,EAAW,OAAO,KACvB,IAAI+M,EAAQ9L,IAAU+L,eAAehN,GAC/BiN,EAAeF,EAAfE,WAEArM,EAA8CZ,EAA9CY,aAAcjN,EAAgCqM,EAAhCrM,KAAMuZ,EAA0BlN,EAA1BkN,OAAQpM,EAAkBd,EAAlBc,cAC9BqM,EAAalM,IAAUmM,gBAAgBxM,GACvCyM,EAAgBpM,IAAUqM,iBAAiB1M,GAC3C2M,EAAaf,IAAOgB,cAAcN,EAAO5S,KACzCmT,EAAgBjB,IAAOkB,iCAAiCR,GACxDS,EAAenB,IAAOoB,oBAAoBV,EAAO5S,KACjDuT,EAAerB,IAAOsB,gCAAgCZ,GACtDa,EAAkBvB,IAAOwB,aAAad,EAAOrM,UAC7CoN,EAAoBzB,IAAO0B,qBAAqBhB,EAAO5S,KAE3D,OAAQ,eAAC,IAAD,CAAMM,UAAW2Q,EAAM4C,cAAeC,GAAI7C,EAAM6C,GAAK7C,EAAM6C,GAAK,cAAeC,KAAK,YAApF,UACN,cAAC,IAAKC,OAAN,CAAa1T,UAAU,OAAvB,SACE,eAAC,IAAD,CAAKA,UAAU,aAAf,UACE,cAAC,IAAD,UACG2Q,EAAMgD,OAAShD,EAAMgD,OAAS,6BAAI,4BAAI5a,QAEzC,cAAC,IAAD,CAAK6a,GAAI,OAAT,SACE,uBAAM5T,UAAU,6BAAhB,UACG2Q,EAAMsB,QAAU,cAAC,IAAD,CAAQhS,QAAQ,UAAU4T,KAAK,KAAK7T,UAAU,OAC7D8T,QAAS7B,EADM,SAEf,cAAC,IAAD,CAAiBjK,KAAM+L,QAExBpD,EAAMuB,UAAY,cAAC,IAAD,CAAQjS,QAAQ,SAAS4T,KAAK,KAC/CC,QAAS5B,EADQ,SAEjB,cAAC,IAAD,CAAiBlK,KAAMgM,kBAMjC,eAAC,IAAKC,KAAN,CAAWH,QAAS7B,EAAQiC,MAAO,CAAEC,OAAQlC,EAAS,UAAY,WAAlE,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAK2B,GAAG,OAAO5T,UAAU,OAAzB,SACE,cAAC,IAAD,CAAOoU,IAAK/N,IAAUgO,SAASrO,GAAehG,UAAS,4BAAuBqG,IAAUiO,QAAQtO,GAAzC,YAAkEuO,WAAS,MAEpI,eAAC,IAAD,WACE,+BAAKlO,IAAUmO,QAAQxO,GAAvB,IAAsC,cAAC,IAAD,CAAOoO,IAAKvF,IAAOI,SAASsD,GAAavS,UAAU,gBAAzF,IAA0G,cAAC,IAAD,CAAOoU,IAAG,UAAEvF,IAAOY,mBAAT,aAAE,EAAqBgD,GAAgBzS,UAAU,mBACrK,6BAAI,cAAC,IAAD,CAAOyU,MAAOpO,IAAUiO,QAAQtO,GAAe0O,SAAO,MAC1D,8CAAerO,IAAUsO,yBAAyBvP,EAAW,cAA7D,aAA+Ec,WAGnF,cAAC,IAAD,CAAKlG,UAAU,OAAf,SACE,eAAC,IAAD,WACE,qBAAIA,UAAU,OAAd,UAAsB2S,EAAYU,GAAiB,WAAQf,EAAOsC,YAAc,EAA7B,KAAnD,IAAuFzB,KACvF,yCAAYN,EAAZ,KAA6BQ,GAAqB,iCAAOwB,IAAKC,YAAY/B,GAAxB,KAAyCE,EAAc4B,IAAKE,YAAYhC,cAG9H,cAAC,IAAD,UACE,cAAC,IAAD,UACGxT,OAAOgB,QAAQuR,IAASkD,sBAAsB3C,IAAa9M,KAAI,YAAiB,IAAD,mBAAd7F,EAAc,KAATuV,EAAS,KAC1EC,EAAkBpD,IAASqD,mBAAmBzV,GAC9C0V,EAAaC,KAAKC,IAAL,MAAAD,KAAI,YAAQJ,IAC7B,OAAO,6BAAc,eAAC,IAAD,CAAOhV,QAAQ,YAAf,UAA4BiV,EAA5B,IAA6C,cAAC,IAAD,CAAOjV,QAAQ,UAAf,SAA0BmV,QAA5E1V,UAItB,cAAC,IAAD,UA/Ca,CAAC,WAAY,YAAa,YAAa,UAAW,YAAa,WAAY,aAgD5E6F,KAAI,SAAAwC,GACZ,IAAI5O,EAAO0b,IAAKE,YAAYhN,GACxBwN,EAAUpD,EAAMqD,WAAWzN,GAC/B,OAAO,eAAC,IAAD,CAAK6L,GAAI,GAAT,UACL,qBAAI5T,UAAU,WAAd,UAA0B8H,YAAYC,GAAtC,IAAiD8M,IAAKC,YAAY/M,MAClE,sBAAM/H,UAAS,cAAf,UACU,OAAPuV,QAAO,IAAPA,OAAA,EAAAA,EAASE,QAAQZ,IAAKa,UAAU3N,KAAY5O,MAHxB4O,WAS9B4I,EAAMgF,QAAU,cAAC,IAAKC,OAAN,UACf,cAAC,IAAD,CAAQnF,GAAIoF,IAAMC,GAAI,CACpBC,SAAU,SACVC,oBAAqBhE,GAFvB,oC,+OC3FAiE,EAA8B,mEAC9BC,EAAuBC,gBAAK,kBAAMF,KAEnBG,E,kDACnB,WAAYzF,GAAQ,IAAD,8BACjB,cAAMA,IASR0F,gBAAkB,SAACC,GACjBjQ,IAAUkQ,gBAAgBD,GAC1B,EAAK/E,eAZY,EAenBiF,cAAgB,SAACF,GAAD,OACd,EAAKG,SAAS,CAAEC,aAAcJ,EAAIK,YAAY,IAC5C,kBAAM,EAAKC,UAAUC,QAAQC,eAAe,CAAEC,SAAU,eAjBzC,EAmBnBC,oBAAsB,kBACpB,EAAKP,SAAS,CAAEC,aAAc,KAAMC,YAAY,KAlBhD5S,cACA,EAAKkT,MAAQ,CACXP,aAAc,GACdC,YAAY,GAEdO,IAAQC,SAAS,cAPA,E,gEAuBjBxV,KAAKiV,UAAY1G,IAAMkH,c,+BAEf,IAAD,OACHC,EAAanT,IAAkBoT,qBACnC,OAAQ,eAAC,IAAD,CAAWjH,IAAK1O,KAAKiV,UAArB,UAELjV,KAAKsV,MAAMN,WAAa,cAAC,IAAD,CAAK3W,UAAU,OAAf,SAAsB,cAAC,IAAD,UAC7C,cAAC,IAAMuX,SAAP,CAAgBC,SAAU,8CAA1B,SACE,cAACtB,EAAD,CAAsBuB,UAAQ,EAC5BzF,YAAarQ,KAAKsV,MAAMP,aACxBgB,QAAS/V,KAAKqV,oBACdrB,OAAQ,cAAC,IAAD,CAAQ1V,QAAQ,SAAS6T,QAASnS,KAAKqV,oBAAvC,2BAGC,KAEf,eAAC,IAAD,CAAKhX,UAAU,OAAf,UACG2B,KAAKsV,MAAMN,WAAa,KAAO,cAAC,IAAD,CAAKgB,GAAI,EAAGC,GAAI,EAAG5X,UAAU,OAA7B,SAC9B,eAAC,IAAD,CAAMA,UAAU,QAAQwT,GAAG,cAAcC,KAAK,YAA9C,UACE,cAAC,IAAKC,OAAN,CAAa1T,UAAU,OAAvB,SACE,uDAEF,cAAC,IAAKiU,KAAN,CAAWjU,UAAU,4CAArB,SACE,cAAC,IAAD,CAAKA,UAAU,yCAAf,SACE,cAAC,IAAD,CAAK4T,GAAG,OAAR,SACE,cAAC,IAAD,CAAQE,QAAS,kBAAM,EAAK0C,cAAc,KAA1C,SACE,6BAAI,cAAC,IAAD,CAAiBxO,KAAM6P,IAAQ7X,UAAU,yBAOxDqX,EAAW9R,KAAI,SAAA+Q,GAAE,OAChB,cAAC,IAAD,CAAcqB,GAAI,EAAGC,GAAI,EAAG5X,UAAU,OAAtC,SACE,cAAC,IAAD,CACEuT,cAAc,QACdvB,YAAasE,EACbpE,SAAU,kBAAM,EAAKmE,gBAAgBC,IACrCrE,OAAQ,kBAAM,EAAKuE,cAAcF,OAL3BA,gB,GA1D0BpG,IAAMQ,Y,wLCJ/BrK,E,WAEnB,aAAgB,GAAD,oBAAK1E,gBAAgB0E,EAAW,MAAMyR,MAAM,0C,iEAqLpC9F,GACrB,IAAI5M,EAAYlB,IAAkBS,aAAaqN,GAC3C5M,EAAUC,mBACZ9F,OAAOgF,OAAOa,EAAUC,mBAAmBvF,SAAQ,SAAA2F,GAAK,OACtDrB,IAAiB2T,kBAAkBtS,EAAO,OAC9CvB,IAAkB8T,oBAAoBhG,O,KA5LrB3L,EAGZsL,uBAAyB,kBAAM5K,KAHnBV,EAIZ4R,iBAAmB,SAAC7S,EAAW2C,GAAyB,IAAhBmQ,EAAe,uDAAN,EAChDlS,EAA2BZ,EAA3BY,aAAcC,EAAab,EAAba,SACpB,GAAgB,uBAAZ8B,EAAkC,OANrB1B,EAMiC8R,sBAAsBnS,GACxE,GAAgB,uBAAZ+B,EAAkC,OAPrB1B,EAOiC+R,sBAAsBpS,EAAcC,GACtF,GAAgB,eAAZ8B,EAA0B,OAAO6J,IAAOkB,iCAAP,OAAwC1N,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAWkN,QACxF,GAAgB,eAAZvK,GAAwC,gBAAZA,EAA2B,OAT1C1B,EASsDgS,SAASpS,GAChF,GAAgB,kBAAZ8B,GAA+BA,EAAQlI,SAAS,iBAAkB,OAAO,GAC7E,GAAIkI,KAAWZ,IAAmB,OAAOA,IAAkBY,GAC3D,IAAIuQ,EAZajS,EAYOkS,YAAYvS,GACpC,OAAIsS,GAAgBvQ,KAAWuQ,EAAaE,SAAiBF,EAAaE,SAASzQ,GAblE1B,EAagFoS,qBAAqBxS,IAC/GiS,GAdU7R,EAiBZkS,YAAc,SAACG,GAAD,OAAa5R,IAAc4R,IAjB7BrS,EAkBZsS,iBAAmB,SAACC,GAAD,MAAeV,EAAf,uDAAwB,GAAxB,MAAgD,aAAjBU,EAA8B,YAA2B,OAAbzY,UAAa,IAAbA,KAAA,UAAAA,IAAgByY,UAAhB,eAA+B7f,OAAQmf,GAlBzH7R,EAmBZwS,oBAAsB,kBAAMtZ,OAAOC,KAAKsH,MAnB5BT,EAqBZmO,QAAU,SAACkE,GAAD,MAAUR,EAAV,uDAAmB,GAAnB,OAA2B,UArBzB7R,EAqB8BkS,YAAYG,UAAjB,eAA2B3f,OAAQmf,GArB5D7R,EAsBZiO,QAAU,SAACoE,GAAD,MAAUR,EAAV,uDAAmB,EAAnB,OAA0B,UAtBxB7R,EAsB6BkS,YAAYG,UAAjB,eAA2BI,OAAQZ,GAtB3D7R,EAuBZmM,gBAAkB,SAACkG,GAAD,MAAUR,EAAV,uDAAmB,GAAnB,OAA2B,UAvBjC7R,EAuBsCkS,YAAYG,UAAjB,eAA2BnG,aAAc2F,GAvB1E7R,EAwBZ0S,iBAAmB,kBAAMxZ,OAAOC,KAAKW,MAxBzBkG,EAyBZqM,iBAAmB,SAACgG,GAAD,MAAUR,EAAV,uDAAmB,GAAnB,OAA2B,UAzBlC7R,EAyBuCkS,YAAYG,UAAjB,eAA2BjG,gBAAiByF,GAzB9E7R,EA0BZ2S,qBAAuB,SAACN,GAAD,MAAUR,EAAV,uDAAmB,GAAnB,OAA2B,UA1BtC7R,EA0B2CkS,YAAYG,UAAjB,eAA2BO,oBAAqBf,GA1BtF7R,EA2BZ6S,UAAY,SAACR,GAAD,MAAUR,EAAV,uDAAmB,GAAnB,OAA2B,UA3B3B7R,EA2BgCkS,YAAYG,UAAjB,eAA2BS,SAAUjB,GA3BhE7R,EA8BZ+S,aAAe,kBAAM7Z,OAAOC,KAAKwH,MA9BrBX,EA+BZgT,cAAgB,SAACpT,GAAD,MAAWiS,EAAX,uDAAoB,GAApB,OAAsC,OAAVlR,UAAU,IAAVA,KAAA,UAAAA,IAAaf,UAAb,eAAwBlN,OAAQmf,GA/BhE7R,EAgCZoS,qBAAuB,SAACxS,GAAD,OAhCXI,EAgC8B+S,eAAeE,QAAQrT,IAhCrDI,EAiCZgS,SAAW,SAACpS,GAAD,MAAWiS,EAAX,uDAAoB,EAApB,OAAqC,OAAVlR,UAAU,IAAVA,KAAA,UAAAA,IAAaf,UAAb,eAAwBgB,QAASiR,GAjC3D7R,EAkCZC,aAAe,SAACL,GAAD,MAAWiS,EAAX,uDAAoB,EAApB,OAAqC,OAAVlR,UAAU,IAAVA,KAAA,UAAAA,IAAaf,UAAb,eAAwBiB,QAASgR,GAlC/D7R,EAqCZkT,mBAAqB,SAACb,GAAD,uBArCTrS,EAqC2BkS,YAAYG,UAA9B,aAAa,EAA2Bc,gBArCjDnT,EAsCZ8R,sBAAwB,SAACO,GAAD,uBAtCZrS,EAsC8BkT,mBAAmBb,UAArC,aAAa,EAAkChZ,KAtC3D2G,EAuCZ+R,sBAAwB,SAACM,EAASzS,GAAV,yBAvCZI,EAuCwCkT,mBAAmBb,UAA/C,iBAAuB,EAAkC7X,aAAzD,aAAuB,EAvCnCwF,EAuCkFoS,qBAAqBxS,KAvCvGI,EAyCZgO,SAAW,SAACqE,GAAD,MAAUR,EAAV,uDAAmB,KAAnB,OAA4B,UAzC3B7R,EAyCgCkS,YAAYG,UAAjB,eAA2Be,WAAYvB,GAzClE7R,EA0CZqT,QAAU,SAAChB,GAAD,MAAUR,EAAV,uDAAmB,KAAnB,OAA4B,UA1C1B7R,EA0C+BkS,YAAYG,UAAjB,eAA2BiB,UAAWzB,GA1ChE7R,EA2CZuT,aAAe,SAAClB,EAASnS,GAAV,UAAqB2R,EAArB,uDAA8B,KAA9B,OAAuC,UA3C1C7R,EA2C+CkS,YAAYG,UAAjB,mBAA2BmB,cAA3B,mBAAoCtT,UAApC,eAAgDuT,MAAO5B,GA3CjG7R,EA4CZ0T,oBAAsB,SAACrB,EAASsB,GAAV,UAAsB9B,EAAtB,uDAA+B,KAA/B,OAAwC,UA5ClD7R,EA4CuDkS,YAAYG,UAAjB,mBAA2BmB,cAA3B,0CAAoDG,EAAa,WAAjE,eAAuEF,MAAO5B,GA5ChI7R,EA+CZ4T,cAAgB,SAACvB,EAASnS,GAAV,UAAqB2R,EAArB,uDAA8B,GAA9B,OAAqC,UA/CzC7R,EA+C8CkS,YAAYG,UAAjB,mBAA2BmB,cAA3B,mBAAoCtT,UAApC,eAAgDxN,OAAQmf,GA/CjG7R,EAiDZ6T,oBAAsB,SAAClU,EAAcO,EAAWL,GAA+B,IAAD,EAAfgS,EAAe,uDAAN,EAE7E,GAAkB,UAAd3R,GAAuC,UAAdA,EAAuB,OAAO2R,EAE3D,IADA,IAAIiC,GAAU,UApDG9T,EAoDEkS,YAAYvS,UAAjB,eAAgC6T,SAAU,GAC/CO,EAAI,EAAGA,GAAKlU,EAAekU,IAAK,CAAC,IAAD,EACnCC,GAAc,UAAAF,EAAQ,gBAAD,OAAiBC,WAAxB,eAA8BC,cAAe,GAC3DC,EAAa/a,OAAOgB,QAAQ8Z,GAAaE,MAAK,mCAAE7a,EAAF,iBAAgBA,IAAQ6G,KAC1E,GAAI+T,EAAY,OAAOA,EAAW,GAEpC,OAAOpC,GA1DU7R,EA4DZK,kBAAoB,SAACtB,EAAWmB,EAAWL,GAAsC,IAAvBsU,EAAsB,wDACrF,GAAkB,SAAdjU,GAAsC,UAAdA,GAAuC,UAAdA,EAAuB,CAAC,IAAD,EACtEE,GAAwB,OAATrB,QAAS,IAATA,GAAA,UAAAA,EAAWqV,uBAAX,eAA6BlU,KAAc,EAC1DmU,EA/DWrU,EA+DO6T,oBAAL,OAAyB9U,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAWY,aAAcO,EAAWL,GAE9E,OADAO,EAAerH,YAAMqH,EAAeiU,EAAY,EAAG,IAC5CF,EAAY,CAAE/T,eAAciU,cAAejU,EAC7C,OAAO+T,EAAY,GAAK,MAlEdnU,EAoEZsU,kBAAoB,SAACjC,EAASnS,GAAV,UAAqB2R,EAArB,uDAA8B,GAA9B,OAAqC,UApE7C7R,EAoEkDkS,YAAYG,UAAjB,mBAA2BmB,cAA3B,mBAAoCtT,UAApC,eAAgDqU,WAAY1C,GApEzG7R,EAqEZwU,gBAAkB,SAACnC,EAASnS,GAAV,UAAqB2R,EAArB,uDAA8B,GAA9B,OAAqC,UArE3C7R,EAqEgDkS,YAAYG,UAAjB,mBAA2BmB,cAA3B,mBAAoCtT,UAApC,eAAgDuU,SAAU5C,GArErG7R,EAsEZ0U,eAAiB,SAACrC,EAASnS,EAAWL,EAAeE,GAA8B,IAAD,MAAlB8R,EAAkB,uDAAT,KAC1ExU,EAAK,UAvEQ2C,EAuEAkS,YAAYG,UAApB,iBAAG,EAA2BmB,cAA9B,iBAAG,EAAoCtT,UAAvC,aAAG,EAAgD7C,MAC5D,MAAqB,oBAAVA,EACFA,EAAMwC,EAAeE,GACvB1C,GAASwU,GA1EC7R,EA4EZ2U,kBAAoB,SAACtC,EAASxS,EAAeE,GAAe,IAAD,EAC5D+T,GAAU,UA7EG9T,EA6EEkS,YAAYG,UAAjB,eAA2BmB,SAAU,GAC/CoB,EAAW,GAKf,OAJA1b,OAAOC,KAAK2a,GAASra,SAAQ,SAAAyG,GAC3B,IAAI7C,EAhFW2C,EAgFE0U,eAAerC,EAASnS,EAAWL,EAAeE,GAC/D1C,GAAOuX,EAASrY,KAAKc,MAEpBuX,GAnFU5U,EAqFZM,qBAAuB,SAAC+R,EAASnS,EAAWC,EAAgBC,EAAcP,EAAeE,GAA8B,IAAD,EAAlB8R,EAAkB,uDAAT,KAC9GgD,EAtFa7U,EAsFFsU,kBAAkBjC,EAASnS,GACtCV,EAAO,KAFgH,cAGrGqV,GAHqG,IAG3H,2BAA2B,CAAC,IAAD,EAAhBC,EAAgB,QACrBC,EAAWD,EAAQE,YAGvB,GAFwB,oBAAbD,IACTA,EAAWA,EAAS3U,EAAcP,EAAeE,KACvC,QAAR,EAAAgV,SAAA,eAAU5U,kBAAmBA,EAAgB,CAC/CX,EAAOuV,EACP,QATuH,8BAY3H,OAAOvV,GAAQqS,GAjGE7R,EAmGZiV,0BAA4B,SAACD,EAAaE,GAAmC,IAAnBrD,EAAkB,uDAAT,KACxE,IAAKqD,IAAmBF,EAAa,OAAOnD,EADqC,MAEtDsD,IAAiBC,mBAAmBJ,EAAa,QAASE,GAFJ,0BAE5E7X,OAF4E,MAEpE,GAFoE,EAEhEgY,EAFgE,KAGjF,OAAKA,EACEnc,OAAO+F,YAAY/F,OAAOgB,QAAQmD,GAAO6B,KAAI,mCAAE7F,EAAF,KAAOgC,EAAP,WAAwB,qBAARhC,EAA6B,CAACA,EAAKgC,GAAO,CAAChC,EAAKgC,EAAMga,OADtGxD,GAtGH7R,EAyGZsV,2BAA6B,SAACN,EAAaE,GAAiC,IAAjBrD,EAAgB,uDAAP,GACzE,IAAKqD,IAAmBF,EAAa,OAAOnD,EAC5C,IAAI4C,EAASU,IAAiBC,mBAAmBJ,EAAa,SAAUE,GAAgB,GACxF,OAAOT,GAAU5C,GA5GA7R,EA8GZuV,iBAAmB,SAACC,EAAUzW,GAAkC,IAAD,MAAtB0W,EAAsB,0DACV1W,EAApDwB,eAD8D,MACpD,GADoD,IACVxB,EAAtC2W,mBADgD,SAC3B/V,EAAiBZ,EAAjBY,aACpC8V,IAAWA,EAhHCzV,EAgHgB2V,gBAAgBhW,IAC5C8V,IAAWA,EAAYC,KAAgB,UAAA1V,EAAUkS,YAAYvS,UAAtB,mBAAqC6T,cAArC,mBAA6CoC,YAA7C,eAAmDC,aAAa,IAC5G,IAAI9b,EAAS,GAKb,OAJiB,QAAbyb,GAAmC,UAAbA,GAAqC,UAAbA,GAAwBC,KACxE1b,EApHeiG,EAoHDmM,gBAAgBxM,IAC5B5F,IAAQA,GAAkB,KAExB,GAAN,OAAUA,GAAV,OAAmByb,EAAnB,YAA+BjV,IAvHdP,EA0HZ2V,gBAAkB,SAACtD,GAAD,IAAUR,EAAV,8DAAgE,aA1HtE7R,EA0HwCqM,iBAAiBgG,IAA2BR,GA1HpF7R,EA2HZ8V,gBAAkB,SAACzD,GAAD,UAAUR,EAAV,+DAA6B,UA3HnC7R,EA2HwCkS,YAAYG,UAAjB,mBAA2BmB,cAA3B,mBAAmCoC,YAAnC,eAAyCC,YAAahE,GA3HzF7R,EA6HZ+V,mBAAqB,SAACpW,GAA+B,IAAjBkS,EAAgB,uDAAP,GAClD,IAAKlS,EAAc,OAAOkS,EAC1B,IAAI1Y,EAAO,CAAC,WAAY,YAAa,YAAa,UAAW,YAAa,WAAY,YAAa,YAAa,iBAC5GY,EAASiG,EAAUmM,gBAAgBxM,GAEnCgW,EAAkB3V,EAAU2V,gBAAgBhW,GAC5CmW,EAAkB9V,EAAU8V,gBAAgBnW,GAgBhD,OAdKgW,GACHxc,EAAKoD,KAAK,iBAEPoZ,GACHxc,EAAKoD,KAAK,mBAAoB,oBAE5BoZ,GAAmBG,EACrB3c,EAAKoD,KAAL,UAAaxC,EAAb,+BAA2CA,EAA3C,sBACoD,QAA7CiG,EAAUqM,iBAAiB1M,IAClCxG,EAAKoD,KAAL,UAAaxC,EAAb,sBAGFZ,EAAKoD,KAAK,gBAAiB,iBAEpBpD,EAAK+F,KAAI,SAAA7F,GAAG,MAAK,CAAC,gBAAiB,gBAAiB,iBAAiBG,SAASH,GAA9D,UAAyEU,EAAzE,YAAmFV,GAAQA,MAnJjG2G,EAsJZgW,YAAc,SAACjX,EAAW2C,GAAZ,SAAwB3C,IAAaA,EAAUkX,oBAAqBvU,KAAW3C,EAAUkX,mBAtJ3FjW,EAwJZsO,yBAA2B,SAACvP,EAAW2C,GAAyB,IAAD,EAAfmQ,EAAe,uDAAN,EAC9D,OAzJiB7R,EAyJRgW,YAAYjX,EAAW2C,GAAU,OAAO3C,QAAP,IAAOA,GAAP,UAAOA,EAAWkX,yBAAlB,aAAO,EAA+BvU,GAzJ/D1B,EA0JA4R,iBAAiB7S,EAAW2C,EAASmQ,IA1JrC7R,EA8JZkW,eAAiB,SAACvK,EAAawK,GACpC,IAAIpX,EAAYlB,IAAkBS,aAAaqN,GAC/C,GAAK5M,EAAL,CACA,IAAIqX,EAAoBrX,EAAUC,kBAC9BqX,EAAuBF,EAG3B1K,IAAS6K,sBAAsB7c,SAAQ,SAAA0F,GACrC,IAAIoX,EAAexY,IAAiBsB,YAAjB,OAA6BgX,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAuBlX,IACvE,GAAIoX,EAAalY,WAAasN,EAA9B,CACA,IAAI6K,EAAYzY,IAAiBsB,YAAjB,OAA6B+W,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAoBjX,IAC7DsX,GAA0B,OAAZF,QAAY,IAAZA,OAAA,EAAAA,EAAclY,WAAY,GAExCmY,GAAWzY,IAAiB2T,kBAAkB8E,EAAUvG,GAAIwG,GAE5DA,GAAY5Y,IAAkB6Y,cAAcD,EAAYD,GAExDD,GAAcxY,IAAiB2T,kBAAkB6E,EAAatG,GAAItE,OAGxE5M,EAAUC,kBAAoB,GAC9B9F,OAAOgB,QAAQic,GAAa1c,SAAQ,mCAAEJ,EAAF,KAAO+F,EAAP,YAClCL,EAAUC,kBAAkB3F,GAAO+F,KACrCvB,IAAkB2C,gBAAgBzB,KArLjBiB,EA+LZ+L,eAAiB,SAAChN,GACvB,IAAI4X,EAAYzd,OAAO+F,YAAY/F,OAAOgB,QAAQ6E,EAAUC,mBAAmBE,KAAI,mCAAE7F,EAAF,KAAO+F,EAAP,WAAkB,CAAC/F,EAAK0E,IAAiBsB,YAAYD,QACpIwX,EAAe5W,EAAU6W,kCAAkC9X,GAC/D,OAlMiBiB,EAkML8W,uBAAuB/X,EAAUQ,qBAAsBqX,EAAcD,IAlMhE3W,EAqMZ8W,uBAAyB,SAACvX,EAAsBqX,EAAcD,GACnE,IAAI3K,EAAaP,IAASO,WAAW2K,GACjCI,EAA0BtL,IAASuL,2BAA2BhL,GAE9D3O,EAAQpD,YAAU2c,GAmBtB,OAjBA1d,OAAOgF,OAAOyY,GAAWld,SAAQ,SAAA0E,GAC1BA,IAELd,EAAMc,EAAIM,cAAgBpB,EAAMc,EAAIM,cAAgB,GAAKgN,IAASwL,iBAAiB9Y,EAAIM,YAAaN,EAAI+Y,SAAU7Z,EAAM8Z,oBAAqC,EAAfhZ,EAAI+Y,SAAe/Y,EAAIyC,OAErKzC,EAAIiZ,SAAS3d,SAAQ,SAAC4d,GAAD,OACnBA,GAAWA,EAAQhe,MAAQgE,EAAMga,EAAQhe,MAAQgE,EAAMga,EAAQhe,MAAQ,GAAKge,EAAQ7c,cAGxFuc,EAAwBtd,SAAQ,SAAA6d,GAAI,OAAIja,EAAMia,EAAKje,MAAQgE,EAAMia,EAAKje,MAAQ,GAAKie,EAAKpI,WAExF3P,GAAwBA,EAAqB9F,SAAQ,SAAAub,GAAgB,IACrDxW,EAA+BwW,EAAvCvV,OAAyB8X,EAAcvC,EAAvBtV,QAClB8X,EAAY/L,IAASgM,4BAA4BjZ,EAAQ+Y,EAAWvC,EAAYE,gBAChFsC,GAAWte,OAAOgB,QAAQsd,GAAW/d,SAAQ,mCAAEiI,EAAF,KAAWrG,EAAX,YAAoBgC,EAAMqE,IAAYrE,EAAMqE,IAAY,GAAKrG,QAEhHP,YAAmBuC,GACZ,CACL8Y,YAAajd,OAAO+F,YAAY/F,OAAOgB,QAAQyc,GAAWzX,KAAI,mCAAE7F,EAAF,KAAOgC,EAAP,WAAgB,CAAChC,EAAD,OAAMgC,QAAN,IAAMA,OAAN,EAAMA,EAAK4U,QACzFjE,aACAmD,WAAY9R,EACZkC,yBAhOeS,EAmOZ6W,kCAAoC,SAAC9X,GAAe,IAAD,YACpD/D,EAAQ,CAAI,UAAW,WAAY,WAAY,aAAc,aAAc,cAAe,gBAAiB,sBAAnG,mBAA4H9B,OAAOC,KAAK2H,OAChJ8V,EAAe1d,OAAO+F,YAAYjE,EAASkE,KAAI,SAAA7F,GAAG,MAAI,CAACA,EArO1C2G,EAqOoDsO,yBAAyBvP,EAAW1F,QAEzGud,EAAa5e,aAvOIgI,EAuOgBmM,gBAAgBpN,EAAUY,cAG3DK,EAAU0S,mBAAmBjZ,SAAQ,SAAAM,GACnC,IAAI2H,EAAO,UAAM3H,EAAN,kBACX6c,EAAalV,GA5OE1B,EA4OcsO,yBAAyBvP,EAAW2C,GACjEA,EAAO,UAAM3H,EAAN,uBACP6c,EAAalV,GA9OE1B,EA8OcsO,yBAAyBvP,EAAW2C,MAInE,IAAIgW,GAAqB,OAAT3Y,QAAS,IAATA,OAAA,EAAAA,EAAWkX,oBAAqB,GAChD/c,OAAOgB,QAAQwd,GAAWje,SAAQ,mCAAEiI,EAAF,KAAWrG,EAAX,YAAqBub,EAAarb,eAAemG,KAAakV,EAAalV,GAAWrG,MAGxH,IAAIsc,EAAiB3X,EAAUsO,yBAAyBvP,EAAW,sBACnE,GAAI4Y,EAAgB,CAClB,IAAIC,EAAqB5X,EAAUsO,yBAAyBvP,EAAW,sBACvE6X,EAAae,IAAmBf,EAAae,IAAmB,GAAKC,EAGvE,IAAIC,EAAc,SAAAxa,GAAK,OAAIA,GAASnE,OAAOgB,QAAQmD,GAAO5D,SAAQ,YAAiB,IAAD,mBAAdJ,EAAc,KAATgC,EAAS,KACpE,qBAARhC,EAIJud,EAAavd,IAAQud,EAAavd,IAAQ,GAAKgC,EAH7Cub,EAAa3b,iBAAb,sBAAqC2b,EAAa3b,kBAAoB,IAAtE,YAA8EI,QAM5EsE,EAAmEZ,EAAnEY,aAAcC,EAAqDb,EAArDa,SAAUC,EAA2Cd,EAA3Cc,cAjC0B,EAiCiBd,EAA5Be,0BAjCW,MAiCU,GAjCV,EAkCpDC,EAAYC,EAAUC,aAAaL,GAEvCE,EAAmBrG,SAAQ,SAAA+F,GAAS,IACpBU,EAAuDV,EAA/DC,OAA4BU,EAAmCX,EAA5CE,QAAyBwV,EAAmB1V,EAAnB0V,eAC9C9U,EAAeJ,EAAUK,kBAAkBtB,EAAWmB,GACtD8U,EAAchV,EAAUM,qBAAqBX,EAAcO,EAAWC,EAAgBC,EAAcP,EAAeE,GACvH8X,EAAY7X,EAAUiV,0BAA0BD,EAAaE,EAAgB,QAI1DlV,EAAU2U,kBAAkBhV,EAAcE,EAAeE,GAC/DtG,QAAQoe,GAGvB,IAAIC,EAAc,CAChBC,OAAQxM,IAAOoB,oBAAP,OAA2B5N,QAA3B,IAA2BA,GAA3B,UAA2BA,EAAWkN,cAAtC,aAA2B,EAAmB5S,KACtD2e,OAAQzM,IAAOsB,gCAAP,OAAuC9N,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAWkN,QAC1DgM,WAAY1M,IAAO2M,mBAAP,OAA0BnZ,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAWkN,cAArC,aAA0B,EAAmB5S,IAA7C,OAAkD0F,QAAlD,IAAkDA,GAAlD,UAAkDA,EAAWkN,cAA7D,aAAkD,EAAmBsC,aACjF4J,iBAAkB5M,IAAO6M,yBAAP,OAAgCrZ,QAAhC,IAAgCA,GAAhC,UAAgCA,EAAWkN,cAA3C,aAAgC,EAAmB5S,IAAnD,OAAwD0F,QAAxD,IAAwDA,GAAxD,UAAwDA,EAAWkN,cAAnE,aAAwD,EAAmBsC,YAA3E,OAAwFxP,QAAxF,IAAwFA,GAAxF,UAAwFA,EAAWkN,cAAnG,aAAwF,EAAmBiJ,iBAO/H,OALI4C,EAAYC,SACdnB,EAAakB,EAAYC,SAAWnB,EAAakB,EAAYC,SAAW,GAAKD,EAAYE,QACvFF,EAAYG,YAAYJ,EAAYC,EAAYG,YAChDH,EAAYK,kBAAkBN,EAAYC,EAAYK,kBAEnDvB,I,gCCxSX,0XAAMyB,EAA4B,SAACC,GAAD,OAAWA,EAAMtJ,KAAKuJ,MAAMvJ,KAAKwJ,SAAWF,EAAMG,UAMpF,SAASC,EAAsBC,EAAK1J,GAGlC,OAFA0J,EAAM3J,KAAK4J,KAAKD,GAChB1J,EAAMD,KAAKuJ,MAAMtJ,GACVD,KAAKuJ,MAAMvJ,KAAKwJ,UAAYvJ,EAAM0J,EAAM,GAAKA,GAKtD,IAAME,EAAuB,SAACxf,GAC5B,IAAIyf,EAAOnb,aAAaob,QAAQ1f,GAChC,OAAKyf,EACEE,KAAKC,MAAMH,GADA,MAGdI,EAAqB,SAAC7f,EAAKQ,GAAN,OACzB8D,aAAawb,QAAQ9f,EAAK2f,KAAKI,UAAUvf,KACrCI,EAAY,SAACJ,GAAD,OAChBmf,KAAKC,MAAMD,KAAKI,UAAUvf,KAEtBwf,EAAmB,SAACC,EAAGC,GAAJ,OACvBvK,KAAKwK,IAAIF,EAAIC,IAAM,MAEfE,EAAiB,SAACH,EAAGC,GAAJ,OACrBvK,KAAKwK,IAAIF,EAAIC,IAAM,GACfxgB,EAAQ,SAACsC,EAAKqe,EAAKC,GACvB,OAAIte,EAAMqe,EAAYA,EAClBre,EAAMse,EAAaA,EAChBte,GAEHue,EAAoB,SAAChL,GAAD,OACxBA,EAAI6J,OAAS7J,EAAIA,EAAI6J,OAAS,GAAK,MAG/BoB,EAAe,SAACxe,GAAD,OAAStC,EAAMsC,EAAK,EAAG,MAG5C,SAASye,EAAWC,EAAQC,EAAKvB,GAC/B,OAAQ,IAAIwB,MAAMxB,EAAS,GAAGyB,KAAKF,GAAOD,GAAQI,OAAO1B,K,wJCvCtCjK,EAEnB,aACE,GADa,oBACTlT,gBAAgBkT,EAClB,MAAMiD,MAAM,2CAwClB,SAAS2I,EAAExf,EAAS8G,GAAU,IAAD,IACrBrE,EAAyBzC,EAAzByC,MADqB,EACIzC,EAAlByf,OACb,SAF2B,YAEjB,OAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAc5Y,IAC1B,OAAO,sCAAS4Y,EAAY5Y,GAAS9G,GAA9B,QACT,IAAI2f,EAAW/L,EAAKgM,kBAAkB9Y,GAClC+Y,EAAWjM,EAAKE,YAAYhN,GAC5B2N,EAAYb,EAAKa,UAAU3N,GAC3BlH,GAAQ,UAAA6C,EAAMqE,UAAN,mBAAgB0N,eAAhB,sBAA0BC,KAAchS,EAAMqE,GAC1D,OAAO,uBAAM/H,UAAU,cAAhB,UAA8B,4BAAI4gB,IAAlC,IAAgD,uBAAM5gB,UAAU,YAAhB,UAA6Ba,EAAOigB,QApDxEjM,EAMZC,YAAc,SAACpV,GAAD,QAAMwY,EAAN,uDAAe,GAAf,OAClB,UAAArf,IAAS6G,UAAT,eAAeK,QAAf,UAAuBlH,IAAS6G,UAAhC,aAAuB,EAAe3G,OAASmf,GAP/BrD,EAQZgM,kBAAoB,SAACnhB,GAAD,UAAMwY,EAAN,uDAAe,GAAf,OACxB,UAAArf,IAAS6G,UAAT,eAAeK,QAAf,UAAuBlH,IAAS6G,UAAhC,aAAuB,EAAe1G,UAAtC,UAAgDH,IAAS6G,UAAzD,aAAgD,EAAe3G,OAASmf,GATxDrD,EAUZkM,eAAiB,SAACrhB,GAAD,MAAMwY,EAAN,uDAAe,GAAf,OACtB,UAAArf,IAAS6G,UAAT,eAAe3G,OAAQmf,GAXNrD,EAYZmM,uBAAyB,SAACthB,GAAsB,IAAjBwY,EAAgB,uDAAP,GACzCnf,EAba8b,EAaDC,YAAYpV,EAAKwY,GAGjC,OAFInf,IAASmf,GAAmB,QAARxY,GAAyB,SAARA,GAA0B,SAARA,IACzD3G,GAAQ,KACHA,GAhBU8b,EAkBZoM,eAAiB,SAACvhB,GAAD,MAAMwY,EAAN,uDAAe,GAAf,OACtB,UAAArf,IAAS6G,UAAT,eAAeO,UAAWiY,GAnBTrD,EAoBZE,YAAc,SAACrV,GAAD,QAAMwY,EAAN,uDAAe,GAAf,MACK,WAAxB,UAAArf,IAAS6G,UAAT,eAAevG,MAAmB+e,GAAU,UAAArf,IAAS6G,UAAT,eAAevG,OAAQ+e,GArBlDrD,EAuBZa,UAAY,SAAChW,GAAS,IAAD,EAC1B,MAA4B,WAAxB,UAAA7G,IAAS6G,UAAT,eAAevG,MAAyB,EAE5B,MADL0b,EAAKE,YAAYrV,GACN,EAAI,GA1BTmV,EA4BZqM,UAAY,SAACnZ,EAASrE,GAAV,OACjB+c,EAAE,CAAE/c,QAAOgd,QAAQ,GAAS3Y,IA7BX8M,EA+BZsM,aAAe,SAACpZ,EAASrE,GAAiD,IAAD,EAAzCpC,EAAyC,uDAAtB,GAAIof,IAAkB,uEAChDpf,GADgD,IAC9E,kCAAWC,EAAX,QACE,IAAI,UAAAT,IAAgB,OAACS,QAAD,IAACA,OAAD,EAACA,EAAiB7B,YAAlC,eAAwCA,OAAQqI,EAClD,OAAO8M,EAAKuM,qBAAqB1d,EAAOnC,EAAgB7B,IAAK6B,EAAgBN,SAAS,IAHZ,8BAI9E,OAAkB,OAAX0f,QAAW,IAAXA,OAAA,EAAAA,EAAc5Y,KAA8C,oBAAlC,OAAO4Y,QAAP,IAAOA,OAAP,EAAOA,EAAc5Y,KACnD,+BAAO4Y,EAAY5Y,GAAS,CAAErE,QAAOgd,cApCvB7L,EAuCZuM,qBAAuB,SAAC1d,EAAO2d,EAAapgB,GAArB,IAA8Byf,IAA9B,gEACR,OAApBY,QAAoB,IAApBA,OAAA,EAAAA,EAAuBD,KAA2E,oBAA3D,OAAOC,QAAP,IAAOA,OAAP,EAAOA,EAAuBD,GAAaE,cACjF,+BAAOD,EAAqBD,GAAaE,YAAYtgB,EAA9CqgB,CAAuD,CAAE5d,QAAOgd,cAc5E,IAAMC,EAAc,CAElBvnB,SAAU,SAACooB,GAAD,OAAO,iCAAOf,EAAEe,EAAG,WAAZ,YAAiCf,EAAEe,EAAG,OAAtC,QAAmDf,EAAEe,EAAG,UAEzEhoB,UAAW,SAACgoB,GAAD,OAAO,sCAASf,EAAEe,EAAG,YAAd,MAA8Bf,EAAEe,EAAG,cAAnC,cAA6Df,EAAEe,EAAG,QAAlE,QAAgFf,EAAEe,EAAG,WAEvG3nB,UAAW,SAAC2nB,GAAD,OAAO,iCAAOf,EAAEe,EAAG,YAAZ,YAAkCf,EAAEe,EAAG,QAAvC,QAAqDf,EAAEe,EAAG,WAG5E7mB,aAAc,SAAC6mB,GAAD,OAAO,iCAAOf,EAAEe,EAAG,aAAZ,MAA6Bf,EAAEe,EAAG,wBAAlC,MAA8Df,EAAEe,EAAG,qBAAnE,MAA4Ff,EAAEe,EAAG,2BACtH1mB,kBAAmB,SAAC0mB,GAAD,OAAO,iCAAOf,EAAEe,EAAG,gBAAZ,MAAgCf,EAAEe,EAAG,sBAC/DvmB,iBAAkB,SAACumB,GAAD,OAAO,iCAAOf,EAAEe,EAAG,gBAAZ,MAAgCf,EAAEe,EAAG,2BAC9DhmB,oBAAqB,SAACgmB,GAAD,OAAO,gDAAmBf,EAAEe,EAAG,aAAxB,MAAyCf,EAAEe,EAAG,sBAA9C,eAAiFf,EAAEe,EAAG,YAAtF,SAC5B9lB,qBAAsB,SAAC8lB,GAAD,OAAO,0CAAaf,EAAEe,EAAG,iBAAlB,MAAuCf,EAAEe,EAAG,sBAA5C,MAAsEf,EAAEe,EAAG,OAA3E,SAG7B5mB,aAAc,SAAC4mB,GAAD,OAAO,iCAAOf,EAAEe,EAAG,aAAZ,MAA6Bf,EAAEe,EAAG,wBAAlC,MAA8Df,EAAEe,EAAG,qBAAnE,MAA4Ff,EAAEe,EAAG,2BACtHzmB,kBAAmB,SAACymB,GAAD,OAAO,iCAAOf,EAAEe,EAAG,gBAAZ,MAAgCf,EAAEe,EAAG,sBAC/DtmB,iBAAkB,SAACsmB,GAAD,OAAO,iCAAOf,EAAEe,EAAG,gBAAZ,MAAgCf,EAAEe,EAAG,2BAC9D/lB,oBAAqB,SAAC+lB,GAAD,OAAO,gDAAmBf,EAAEe,EAAG,aAAxB,MAAyCf,EAAEe,EAAG,sBAA9C,eAAiFf,EAAEe,EAAG,YAAtF,SAC5B7lB,qBAAsB,SAAC6lB,GAAD,OAAO,0CAAaf,EAAEe,EAAG,iBAAlB,MAAuCf,EAAEe,EAAG,sBAA5C,MAAsEf,EAAEe,EAAG,OAA3E,SAG7B3mB,WAAY,SAAC2mB,GAAD,OAAO,+BAAOf,EAAEe,EAAG,cAC/BxmB,gBAAiB,SAACwmB,GAAD,OAAO,+BAAOf,EAAEe,EAAG,mBACpCrmB,eAAgB,SAACqmB,GAAD,OAAO,+BAAOf,EAAEe,EAAG,kBACnC5lB,mBAAoB,SAAC4lB,GAAD,OAAO,+BAAOf,EAAEe,EAAG,sBAEvC3kB,QAAS,SAAC2kB,GAAD,OAAO,iCAAOf,EAAEe,EAAG,aAAZ,MAA6Bf,EAAEe,EAAG,mBAAlC,MAAyDf,EAAEe,EAAG,qBAA9D,MAAuFf,EAAEe,EAAG,2BAC5G1kB,aAAc,SAAC0kB,GAAD,OAAO,iCAAOf,EAAEe,EAAG,WAAZ,MAA2Bf,EAAEe,EAAG,sBACrDzkB,YAAa,SAACykB,GAAD,OAAO,iCAAOf,EAAEe,EAAG,WAAZ,MAA2Bf,EAAEe,EAAG,kBACpDxkB,gBAAiB,SAACwkB,GAAD,OAAO,0CAAaf,EAAEe,EAAG,iBAAlB,MAAuCf,EAAEe,EAAG,OAA5C,SAExBnkB,eAAgB,SAACmkB,GAAD,OAAO,0CAAaf,EAAEe,EAAG,YAAlB,SACvBlkB,WAAY,SAACkkB,GAAD,OAAO,+CAAkBf,EAAEe,EAAG,aAAvB,cAAgDf,EAAEe,EAAG,YAArD,SAEnBjlB,iBAAkB,SAACilB,GAAD,OAAO,gDAAmBf,EAAEe,EAAG,aAAxB,MAAyCf,EAAEe,EAAG,mBAA9C,eAA8Ef,EAAEe,EAAG,YAAnF,SACzBhlB,iBAAkB,SAACglB,GAAD,OAAO,gDAAmBf,EAAEe,EAAG,aAAxB,MAAyCf,EAAEe,EAAG,mBAA9C,eAA8Ef,EAAEe,EAAG,YAAnF,SAEzB/iB,kBAAmB,SAAC+iB,GAAD,OAAO,4CAAef,EAAEe,EAAG,cAApB,eAA+Cf,EAAEe,EAAG,eAApD,YAA6Ef,EAAEe,EAAG,cAAlF,QAE1B7iB,oBAAqB,SAAC6iB,GAEpB,GADSA,EAAE9d,MAAM9E,mBAEf,OAAO,qDACT,IAAIK,GAAOuiB,EAAE9d,MAAMhF,eAAiB,GAAK,IACzC,OAAIO,EAAM,EAAU,yCAAYwhB,EAAEe,EAAG,iBAAjB,UACXviB,GAAO,IAAa,2CAAcwhB,EAAEe,EAAG,iBAAnB,eACtB,yCAAYf,EAAEe,EAAG,iBAAjB,SAGLC,EAAiB,CACrB9mB,aAAc,SAAC6mB,EAAGliB,GAAJ,OAAY,iCAAOmhB,EAAEe,EAAD,aAAR,MAA6Bf,EAAEe,EAAD,UAAOliB,EAAP,0BAA9B,MAAqEmhB,EAAEe,EAAD,qBAAtE,MAAmGf,EAAEe,EAAD,UAAOliB,EAAP,6BAC9HxE,kBAAmB,SAAC0mB,EAAGliB,GAAJ,OAAY,iCAAOmhB,EAAEe,EAAD,UAAOliB,EAAP,kBAAR,MAAuCmhB,EAAEe,EAAD,sBACvEvmB,iBAAkB,SAACumB,EAAGliB,GAAJ,OAAY,iCAAOmhB,EAAEe,EAAD,UAAOliB,EAAP,kBAAR,MAAuCmhB,EAAEe,EAAD,2BACtE9lB,qBAAsB,SAAC8lB,EAAGliB,GAAJ,OAAY,0CAAamhB,EAAEe,EAAD,UAAOliB,EAAP,mBAAd,MAA8CmhB,EAAEe,EAAD,sBAA/C,MAA6Ef,EAAEe,EAAD,OAA9E,SAElC5mB,aAAc,SAAC4mB,EAAGliB,GAAJ,OAAY,iCAAOmhB,EAAEe,EAAD,aAAR,MAA6Bf,EAAEe,EAAD,UAAOliB,EAAP,0BAA9B,MAAqEmhB,EAAEe,EAAD,qBAAtE,MAAmGf,EAAEe,EAAD,UAAOliB,EAAP,6BAC9HvE,kBAAmB,SAACymB,EAAGliB,GAAJ,OAAY,iCAAOmhB,EAAEe,EAAD,UAAOliB,EAAP,kBAAR,MAAuCmhB,EAAEe,EAAD,sBACvEtmB,iBAAkB,SAACsmB,EAAGliB,GAAJ,OAAY,iCAAOmhB,EAAEe,EAAD,UAAOliB,EAAP,kBAAR,MAAuCmhB,EAAEe,EAAD,2BACtE7lB,qBAAsB,SAAC6lB,EAAGliB,GAAJ,OAAY,0CAAamhB,EAAEe,EAAD,UAAOliB,EAAP,mBAAd,MAA8CmhB,EAAEe,EAAD,sBAA/C,MAA6Ef,EAAEe,EAAD,OAA9E,SAElC3mB,WAAY,SAAC2mB,EAAGliB,GAAJ,OAAY,+BAAOmhB,EAAEe,EAAD,UAAOliB,EAAP,gBAChCtE,gBAAiB,SAACwmB,EAAGliB,GAAJ,OAAY,+BAAOmhB,EAAEe,EAAD,UAAOliB,EAAP,qBACrCnE,eAAgB,SAACqmB,EAAGliB,GAAJ,OAAY,+BAAOmhB,EAAEe,EAAD,UAAOliB,EAAP,oBACpC1D,mBAAoB,SAAC4lB,EAAGliB,GAAJ,OAAY,+BAAOmhB,EAAEe,EAAD,UAAOliB,EAAP,wBAExCrC,QAAS,SAACukB,EAAGliB,GAAJ,OAAY,iCAAOmhB,EAAEe,EAAD,aAAR,MAA6Bf,EAAEe,EAAD,UAAOliB,EAAP,qBAA9B,MAAgEmhB,EAAEe,EAAD,qBAAjE,MAA8Ff,EAAEe,EAAD,UAAOliB,EAAP,6BACpHpC,aAAc,SAACskB,EAAGliB,GAAJ,OAAY,iCAAOmhB,EAAEe,EAAD,UAAOliB,EAAP,aAAR,MAAkCmhB,EAAEe,EAAD,sBAC7DrkB,YAAa,SAACqkB,EAAGliB,GAAJ,OAAY,iCAAOmhB,EAAEe,EAAD,UAAOliB,EAAP,aAAR,MAAkCmhB,EAAEe,EAAD,kBAC5DpkB,gBAAiB,SAACokB,EAAGliB,GAAJ,OAAY,0CAAamhB,EAAEe,EAAD,UAAOliB,EAAP,mBAAd,MAA8CmhB,EAAEe,EAAD,OAA/C,SAE7B3lB,UAAW,SAAC2lB,EAAGliB,GAAJ,OAAY,iCAAOmhB,EAAEe,EAAD,aAAR,MAA6Bf,EAAEe,EAAD,UAAOliB,EAAP,uBAA9B,MAAkEmhB,EAAEe,EAAD,qBAAnE,MAAgGf,EAAEe,EAAD,UAAOliB,EAAP,6BACxHvD,eAAgB,SAACylB,EAAGliB,GAAJ,OAAY,iCAAOmhB,EAAEe,EAAD,UAAOliB,EAAP,eAAR,MAAoCmhB,EAAEe,EAAD,sBACjEvlB,cAAe,SAACulB,EAAGliB,GAAJ,OAAY,iCAAOmhB,EAAEe,EAAD,UAAOliB,EAAP,eAAR,MAAoCmhB,EAAEe,EAAD,wBAChE/kB,kBAAmB,SAAC+kB,EAAGliB,GAAJ,OAAY,0CAAamhB,EAAEe,EAAD,UAAOliB,EAAP,mBAAd,MAA8CmhB,EAAEe,EAAD,mBAA/C,MAA0Ef,EAAEe,EAAD,OAA3E,SAE/B1lB,UAAW,SAAC0lB,EAAGliB,GAAJ,OAAY,iCAAOmhB,EAAEe,EAAD,aAAR,MAA6Bf,EAAEe,EAAD,UAAOliB,EAAP,uBAA9B,MAAkEmhB,EAAEe,EAAD,qBAAnE,MAAgGf,EAAEe,EAAD,UAAOliB,EAAP,6BACxHtD,eAAgB,SAACwlB,EAAGliB,GAAJ,OAAY,iCAAOmhB,EAAEe,EAAD,UAAOliB,EAAP,eAAR,MAAoCmhB,EAAEe,EAAD,sBACjEtlB,cAAe,SAACslB,EAAGliB,GAAJ,OAAY,iCAAOmhB,EAAEe,EAAD,UAAOliB,EAAP,eAAR,MAAoCmhB,EAAEe,EAAD,wBAChE9kB,kBAAmB,SAAC8kB,EAAGliB,GAAJ,OAAY,0CAAamhB,EAAEe,EAAD,UAAOliB,EAAP,mBAAd,MAA8CmhB,EAAEe,EAAD,mBAA/C,MAA0Ef,EAAEe,EAAD,OAA3E,SAE/B1iB,oBAAqB,SAAC0iB,EAAGliB,GAEvB,GADSkiB,EAAE9d,MAAF,UAAWpE,EAAX,wBAEP,OAAO,qDACT,IAAIL,GAAOuiB,EAAE9d,MAAF,UAAWpE,EAAX,oBAAmC,GAAK,IACnD,OAAIL,EAAM,EAAU,yCAAYwhB,EAAEe,EAAD,UAAOliB,EAAP,mBAAb,UACXL,GAAO,IAAa,2CAAcwhB,EAAEe,EAAD,UAAOliB,EAAP,mBAAf,eACtB,yCAAYmhB,EAAEe,EAAD,UAAOliB,EAAP,mBAAb,SAIXC,OAAOC,KAAKW,KAAeL,SAAQ,SAAAM,GAAM,OACvCb,OAAOgB,QAAQkhB,GAAgB3hB,SAAQ,mCAAEJ,EAAF,KAAOc,EAAP,YACrCjB,OAAOkB,eAAekgB,EAAtB,UAAsCvgB,EAAtC,YAAgDV,GAAO,CACrDgB,cAAc,EACdC,YAAY,EACZC,UAAU,EACVC,MAAO,SAACX,GAAD,OAAUM,EAAMN,EAAKE,YAGlC,IAAMkhB,EAAuB,CAC3BvgB,iBAAkB,CAChBwgB,YAAa,SAACtgB,GAAD,OAAa,SAACugB,GAAD,OAAO,sCAASf,EAAEe,EAAG,YAAd,MAA8Bf,EAAEe,EAAG,cAAnC,cAA6Df,EAAEe,EAAG,QAAlE,QAAgFf,EAAEe,EAAG,OAArF,MAAgGf,EAAEe,EAAG,aAArG,MAAsHvgB,EAAQJ,MAA9H,Y,4FC9JtB,SAAS6gB,EAAmBzM,GACzC,OCJa,SAA4BA,GACzC,GAAIqL,MAAMqB,QAAQ1M,GAAM,OAAO,OAAA2M,EAAA,GAAiB3M,GDGzC,CAAkBA,IELZ,SAA0B4M,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYxiB,OAAOsiB,GAAO,OAAOvB,MAAM0B,KAAKH,GFIvD,CAAgB5M,IAAQ,OAAAgN,EAAA,GAA2BhN,IGLvE,WACb,MAAM,IAAIiN,UAAU,wIHIwE,K,gCIL9F,+CACe,SAASC,EAA2BX,EAAGY,GACpD,IAAIC,EAEJ,GAAsB,qBAAXP,QAAgD,MAAtBN,EAAEM,OAAOC,UAAmB,CAC/D,GAAIzB,MAAMqB,QAAQH,KAAOa,EAAK,YAA2Bb,KAAOY,GAAkBZ,GAAyB,kBAAbA,EAAE1C,OAAqB,CAC/GuD,IAAIb,EAAIa,GACZ,IAAIjI,EAAI,EAEJkI,EAAI,aAER,MAAO,CACLnjB,EAAGmjB,EACHC,EAAG,WACD,OAAInI,GAAKoH,EAAE1C,OAAe,CACxB0D,MAAM,GAED,CACLA,MAAM,EACN3hB,MAAO2gB,EAAEpH,OAGbqI,EAAG,SAAWC,GACZ,MAAMA,GAERjC,EAAG6B,GAIP,MAAM,IAAIJ,UAAU,yIAGtB,IAEIS,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACL1jB,EAAG,WACDkjB,EAAKb,EAAEM,OAAOC,aAEhBQ,EAAG,WACD,IAAIO,EAAOT,EAAGU,OAEd,OADAH,EAAmBE,EAAKN,KACjBM,GAETL,EAAG,SAAWO,GACZH,GAAS,EACTF,EAAMK,GAERvC,EAAG,WACD,IACOmC,GAAoC,MAAhBP,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIQ,EAAQ,MAAMF,O,8FCnDtBM,GAAY,EACZC,EAAoB,GACpBC,EAAc,EAEGjf,EAEnB,aACE,GADa,oBACTvC,gBAAgBuC,EAClB,MAAM4T,MAAM,2CAJG5T,EAOZkf,UAAY,SAACC,GAAD,OAAWA,IAASA,EAAKtqB,OAASsqB,EAAKrd,eAAiBqd,EAAKpd,UAP7D/B,EAQZiB,qBAAuB,kBAAM7E,YAAU4iB,IAR3Bhf,EASZoT,mBAAqB,kBAAM/X,OAAOC,KAAK0jB,IAT3Bhf,EAUZC,iCAAmC,WACxC,IAAI8e,EAiBJ,OAhBA1jB,OAAOC,KAAKwE,cAAcvE,QAAO,SAAAC,GAAG,OAAIA,EAAIG,SAAS,iBAAeC,SAAQ,SAAAwW,GAC1E,IAAK4M,EAAkB5M,GAAK,CAC1B,IAAIlR,EAAY8Z,YAAqB5I,GACrC,IAAKlR,EAAW,OAChB,GAhBalB,EAgBJkf,UAAUhe,GAEjB,YAlBWlB,EAiBN8T,oBAAoB1B,GAGtBlR,EAAUC,oBACbD,EAAUC,kBAAoB,GAC9Bka,YAAmBjJ,EAAIlR,IAEzB8d,EAAkB5M,GAAMlR,MAG5B6d,GAAY,GACL,GA5BU/e,EA8BZof,aAAe,SAACD,GACrB,IA/BiBnf,EA+BRkf,UAAUC,GAAnB,CAGA,IADA,IAAI/M,EAAE,oBAAgB6M,KACc,OAA7Bnf,aAAaob,QAAQ9I,IAC1BA,EAAE,oBAAgB6M,KACpB,IAAII,EAAQjjB,YAAU+iB,GAItB,OAHAE,EAAMjN,GAAKA,EACXiJ,YAAmBjJ,EAAIiN,GACvBL,EAAkB5M,GAAMiN,EACjBjN,IAxCUpS,EA0CZ2C,gBAAkB,SAACwc,GACxB,IA3CiBnf,EA2CRkf,UAAUC,GAAnB,CACA,IAAI/M,EAAK+M,EAAK/M,GACViN,EAAQjjB,YAAU+iB,GACtB9D,YAAmBjJ,EAAIiN,GACvBL,EAAkB5M,GAAMiN,IA/CPrf,EAiDZS,aAAe,SAAC2R,GAAD,OAAQA,EAAK4M,EAAkB5M,GAAM,MAjDxCpS,EAmDZ8T,oBAAsB,SAAC1B,UACrB4M,EAAkB5M,GACzBtS,aAAaC,WAAWqS,IArDPpS,EAuDZsf,sBAAwB,SAACC,EAAQje,GACtC,IAAKie,IAAWje,EAAS,OAAO,KAChC,IAAI6d,EAzDanf,EAyDDS,aAAa8e,GAC7B,OAAIJ,EAAKhe,kBACAge,EAAKhe,kBAAkBG,QADhC,GA1DiBtB,EA6DZ6Y,cAAgB,SAAC0G,EAAQjf,GAC9B,IAAI6e,EA9Danf,EA8DDS,aAAa8e,GACxBJ,GAAS7e,GAAQA,EAAIgB,UACrB6d,EAAKhe,oBACRge,EAAKhe,kBAAoB,IAC3Bge,EAAKhe,kBAAkBb,EAAIgB,SAAWhB,EAAI8R,GAlEzBpS,EAmEZ2C,gBAAgBwc,KAnEJnf,EAqEZwf,sBAAwB,SAACD,EAAQje,GACtC,IAAI6d,EAtEanf,EAsEDS,aAAa8e,GACxBJ,GAAS7d,GACT6d,EAAKhe,mBAAsBge,EAAKhe,kBAAkBG,KACvD6d,EAAKhe,kBAAkBG,GAAW,GAzEjBtB,EA0EZ2C,gBAAgBwc,KA1EJnf,EA4EZyf,mBAAqB,SAAC3R,EAAawK,GACxC,IAAIpX,EA7EalB,EA6EIS,aAAaqN,GAC7B5M,IACLA,EAAUC,kBAAoB,GAC9B9F,OAAOgB,QAAQic,GAAa1c,SAAQ,mCAAEJ,EAAF,KAAO+F,EAAP,YAClCL,EAAUC,kBAAkB3F,GAAO+F,KACrCvB,EAAkB2C,gBAAgBzB,M,6IC9EvBwe,EAPE,CACfngB,OAAQogB,IACRlgB,MAAOmgB,IACPlgB,MAAOmgB,IACPlgB,OAAQmgB,IACRlgB,QAASmgB,K,iCCPUC,EAEnB,aAAgB,GAAD,oBAAKviB,gBAAgBuiB,EAAc,MAAMpM,MAAM,2CAF3CoM,EAKZ7R,WAAa,SAAC2K,GACnB,IAAI3K,EAAa,GAMjB,OALA9S,OAAOgB,QAAQyc,GAAWld,SAAQ,YAAiB,IAAD,mBAAdJ,EAAc,KAAT8E,EAAS,KAC3CA,IACD6N,EAAW7N,EAAIK,QAASwN,EAAW7N,EAAIK,QAAQjC,KAAKlD,GACnD2S,EAAW7N,EAAIK,QAAU,CAACnF,OAE1B2S,G,YCFUP,E,WAEnB,aAAgB,GAAD,oBAAKnQ,gBAAgBmQ,EAAU,MAAMgG,MAAM,0C,0DAkD1CjX,EAAOsjB,GAA0B,IAAhBC,EAAe,wDAC1CC,EAAO,KACPC,EAAajP,KAAKkP,MAAM1jB,EAAQsjB,EAAS,IAC7C,IAAKG,EAAY,OAAO,KACxB,IAAIE,EAAa,SAAbA,EAAc9iB,EAAKuT,GACrB,IAAIoP,EAAJ,CACA,GAAIpP,EAAI6J,OAAQ,CACd,GAAI7J,EAAI6J,OAASwF,EAAY,OAC7B,IAAIG,EAAMxP,EAAIyP,QAAO,SAACC,EAAMC,GAAP,OAAaD,EAAOC,IAAG,GAC5C,GAAIR,EAAO,CACT,GAAIK,EAAM/iB,GAAO,KAAO,OACxB,GAAIge,YAAiB+E,EAAK/iB,GAExB,YADA2iB,EAAOpP,OAGJ,CACL,GAAIwP,EAAM/iB,EAAM,EAAG,OACnB,GAAIoe,YAAe2E,EAAK/iB,GAEtB,YADA2iB,EAAOpP,IAKbkP,EAAS3D,QAAQqE,UAAU/kB,SAAQ,SAAAukB,GACjCG,EAAW3jB,EAAD,sBAAYoU,GAAZ,CAAiBoP,UAI/B,OADAG,EAAW3jB,EAAO,IACXwjB,I,sCAEcpN,EAAOyG,GAAU,IAAD,IACrC,IAAKA,IAAYA,EAAQ7c,MAAO,MAAO,CAAE4D,OAAO,GAChD,IAAI5D,EAAQikB,WAAWpH,EAAQ7c,OAC/B,GAAIkkB,MAAMlkB,GAAQ,MAAO,CAAE4D,OAAO,EAAOugB,IAAI,iBAC7C,IAAIzH,EAAWtG,EAAMsG,SACrB,IAAKA,EAAU,MAAO,CAAE9Y,OAAO,EAAOugB,IAAI,2BAC1C,IAAIC,EAA4C,MAAlCpQ,IAAKE,YAAY2I,EAAQhe,KACnCykB,EAAWxiB,KAAKujB,mBAAmBxH,EAAQhe,IAAK6d,GAChD4H,EAAQxjB,KAAKyjB,SAASvkB,EAAOsjB,EAAUc,GAE3C,IAAKE,GAA0B,IAAjBA,EAAMrG,OAAc,MAAO,CAAEra,OAAO,EAAOugB,IAAI,qCAC7D,IAAIK,GAAsB,UAAAxiB,IAAkB0a,UAAlB,eAA6Bta,uBAAwB,aAAIJ,IAAkB0a,UAAtB,aAAI,EAA6Bva,cAAe,EAC/H,GAAImiB,EAAMrG,OAASuG,EAAqB,MAAO,CAAE5gB,OAAO,EAAOugB,IAAI,sCAAD,OAAwCK,EAAxC,YAElE,IAAIrG,EAAMmF,EAAS,GAAKgB,EAAMrG,OAC1BxJ,EAAM6O,EAASA,EAASrF,OAAS,GAAKqG,EAAMrG,OAChD,MAAO,CAAEra,OAAO,EAAM6gB,WAAYpF,aAAerf,EAAQme,IAAQ1J,EAAM0J,GAAQ,KAAMgG,IAAI,2BAAD,OAA6BG,EAAMrG,OAAnC,8BAA+DqG,EAAM5E,KAAK,MAA1E,KAAoF4E,W,yCAIpJlO,GACxB,IAD+B,EAC3BsO,EAAoB,EAAGC,EAAoB,EAC3CC,EAAqBxO,EAAMwG,SAASlY,KAAI,SAAAmY,GAAO,OAAI5L,EAAS4T,gBAAgBzO,EAAOyG,MAFxD,cAGT+H,GAHS,IAG/B,4BACE,IADF,QACehhB,MACX,MAAO,CAAEghB,qBAAoBhhB,OAAO,EAAOugB,IAAK,iCAAkCO,oBAAmBC,sBAL1E,8BAQ/B,GAAIC,EAAmB9lB,MAAK,SAAA+d,GAAO,aAAW,OAAPA,QAAO,IAAPA,GAAA,UAAAA,EAASyH,aAAT,eAAgBrG,QAAS,MAAM2G,EAAmB9lB,MAAK,SAAC+d,GAAD,OAAcA,EAAQyH,SAClH,MAAO,CAAEM,qBAAoBhhB,OAAO,EAAOugB,IAAK,uEAAwEO,oBAAmBC,qBAC7I,IAAIG,EAAoBF,EAAmBf,QAAO,SAACD,EAAKmB,GAAN,OAAcnB,GAAOmB,EAAInhB,OAASmhB,EAAIT,MAAQS,EAAIT,MAAMrG,OAAS,KAAI,GACnH+G,EAAiB/T,EAAS+T,eAAe5O,EAAMhQ,MAAOgQ,EAAMsG,UAC5DuI,EAAoBhU,EAASiU,mBAAmB9O,EAAMsG,UAE1D,GAAKoI,EAAoBE,EAAkBC,EACzC,MAAO,CAAEL,qBAAoBhhB,OAAO,EAAOugB,IAAI,oCAAD,OAAsCW,EAAtC,8CAA6FE,EAA7F,uEAA0KC,EAA1K,MAAiMP,oBAAmBC,qBAEpQ,IAAIQ,EAAyBP,EAAmBf,QAAO,SAACD,EAAKmB,GAAN,OAAcnB,GAAOmB,EAAInhB,OAASmhB,EAAIT,OAASS,EAAIN,WAAcM,EAAIN,WAAaM,EAAIT,MAAMrG,OAAU,KAAI,GAGjK,MAAO,CAAEra,OAAO,EAAMghB,qBAAoBE,oBAAmBE,iBAAgBI,oBAAqBH,EAAmBP,kBAFrHA,EAAoBrF,YAAa8F,EAAyBF,GAE8EN,kBADxIA,EAAoBtF,aAAc8F,EAA0C,IAAjBH,GAAwBC,M,0CAiF1DI,EAAYlU,GACrC,IAAIxN,EAAMJ,IAAiBsB,YAAYwgB,GACvC,GAAK1hB,EAAL,CACA,IAAI2hB,EAAkB3hB,EAAIE,SACtB0hB,EAAoBpU,GAAe,GACvC,GAAImU,IAAoBC,EAAxB,CACA,IAAI5gB,EAAUhB,EAAIgB,QACd6gB,EAAuBniB,IAAkBsf,sBAAsB4C,EAAkB5gB,GACjF8gB,EAAqBliB,IAAiBsB,YAAY2gB,GAGlDC,EAAoBliB,IAAiBmiB,cAAc/hB,EAAK8hB,GACvDliB,IAAiB2T,kBAAkBvT,EAAI8R,GAAI8P,GAG5CA,GACFliB,IAAkB6Y,cAAcqJ,EAAkB5hB,GAEhD2hB,IACEG,EACFpiB,IAAkB6Y,cAAcoJ,EAAiBG,GAEjDpiB,IAAkBwf,sBAAsByC,EAAiB3gB,U,KAhO5CsM,EAKZC,sBAAwB,kBAAMrP,KALlBoP,EAMZqD,mBAAqB,SAACzV,GAAD,MAAMwY,EAAN,uDAAe,GAAf,OAAkC,OAAZzV,UAAY,IAAZA,KAAA,UAAAA,IAAe/C,UAAf,eAAqB3G,OAAQmf,GAN5DpG,EAOZ0U,gCAAkC,SAAC1N,GAAD,OACvCvZ,OAAOgB,QAAQkC,KAAchD,QAAO,mCAAOgnB,GAAP,kBAAmBA,EAAOC,OAAQD,EAAOC,OAAO5H,OAAU,KAAOhG,MARpFhH,EASZ6U,qBAAuB,SAAC9hB,EAAQW,GAAT,QAAkB0S,EAAlB,uDAA2B,GAA3B,OAA8C,OAAZzV,UAAY,IAAZA,KAAA,UAAAA,IAAeoC,UAAf,mBAAwB+hB,cAAxB,eAAiCphB,KAAY0S,GAT1FpG,EAUZ+U,qBAAuB,SAAChiB,EAAQW,GAAT,QAAkB0S,EAAlB,uDAA2B,KAA3B,OAAgD,OAAZzV,UAAY,IAAZA,KAAA,UAAAA,IAAeoC,UAAf,mBAAwBiiB,aAAxB,eAAgCthB,KAAY0S,GAV3FpG,EAWZiV,yBAA2B,SAACliB,GAAD,MAASqT,EAAT,uDAAkB,KAAlB,OAAuC,OAAZzV,UAAY,IAAZA,KAAA,UAAAA,IAAeoC,UAAf,eAAwBmiB,OAAQ9O,GAX1EpG,EAaZ6K,oBAAsB,kBAAMpd,OAAOC,KAAKgE,MAb5BsO,EAcZmV,oBAAsB,SAACzhB,GAAD,IAAU0S,EAAV,uDAAmB,GAAnB,OAC3B1U,IAAkBgC,GAAWhC,IAAkBgC,GAASzM,KAAOmf,GAf9CpG,EAgBZoV,oBAAsB,SAAC1hB,GAAD,IAAU0S,EAAV,uDAAmB,GAAnB,OAC1B1S,GAAWoe,EAASpe,GAAY,cAAC,IAAD,CAAiBwC,KAAM4b,EAASpe,GAAwBxF,UAAU,SAAnBwF,GAAgC0S,GAjB/FpG,EAmBZqV,4BAA8B,SAAC3hB,GAA0B,IAAjB0S,EAAgB,uDAAP,GACtD,IAAK1S,EAAS,OAAO0S,EACrB,IAAInf,EArBa+Y,EAqBDmV,oBAAoBzhB,GACpC,IAAKzM,EAAM,OAAOmf,EAClB,IAAIkP,EAvBatV,EAuBGoV,oBAAoB1hB,GACxC,OAAK4hB,EACG,iCAAOA,EAAP,IAAkBruB,KADJmf,GAxBLpG,EA6BZuV,aAAe,SAACxiB,GAAD,OAAYpC,IAAaoC,GAAUpC,IAAaoC,GAAQ6hB,OAAS,IA7BpE5U,EAgCZwV,gBAAkB,kBAAM3kB,KAhCZmP,EAiCZwL,iBAAmB,SAAC5d,EAAK6d,EAAUtW,GAAuB,IAAD,IAAfiR,EAAe,uDAAN,EACpDqP,EAAI,UAAGnkB,IAAsBma,UAAzB,iBAAG,EAAkC7d,UAArC,aAAG,EAAyCuH,GACpD,OAAIsgB,KACC,OAAI7nB,QAAJ,IAAIA,OAAJ,EAAIA,EAAKG,SAAS,mBApCNiS,EAqCHwL,iBAAiB,gBAAiBC,EAAUtW,EAAOiR,GAC1DA,IAtCUpG,EA0CZ0V,eAAiB,kBAAMjoB,OAAOC,KAAK+D,MA1CvBuO,EA2CZiU,mBAAqB,SAACxI,GAAD,OAAc1a,IAAkB0a,GACzD1a,IAAkB0a,GAAUva,YAAcH,IAAkB0a,GAAUta,qBAAwB,GA5C9E6O,EA6CZ+T,eAAiB,SAAC5e,EAAOsW,GAAR,OACtBlI,KAAK4J,MAAiB,EAAX1B,EAAetW,GAAS,IA9ClB6K,EA+CZ2V,wBAA0B,SAACxQ,GAAD,OAC/BA,EAAMwG,SAASiH,QAAO,SAACD,EAAKmB,GAAN,OACpBnB,GAAOmB,GAAOA,EAAI/kB,MAAQ,EAAI,KAAI,IAjDnBiR,EAkDZoT,mBAAqB,SAACwC,EAAYnK,GAAb,OAA2BmK,GAAcnK,EACnEha,IAAqBmkB,GAAYnK,GAAY,IAnD5BzL,EA6HZO,WAAa6R,EAAa7R,WA7HdP,EA+HZ6V,gBAAkB,SAAC9iB,GAAD,MAASqT,EAAT,uDAAkB,KAAlB,OACX,OAAZzV,UAAY,IAAZA,KAAA,UAAAA,IAAeoC,UAAf,eAAwBmiB,OAAQ9O,GAhIfpG,EAiIZ8V,uBAAyB,SAAC/iB,EAAQ+Y,GAAT,QAAoB1F,EAApB,uDAA6B,KAA7B,OAC9B5X,aAAU,UAlIOwR,EAkIF6V,gBAAgB9iB,UAArB,mBAA+B+Y,UAA/B,eAA2Cla,QAASwU,IAlI7CpG,EAoIZgM,4BAA8B,SAACjZ,EAAQ+Y,EAAWrC,GAAmC,IAAnBrD,EAAkB,uDAAT,KAChF,IAAKqD,EAAgB,OAAOrD,EAC5B,IAAImD,EAtIavJ,EAsIM+V,gCAAgChjB,EAAQ+Y,GAC/D,IAAKvC,EAAa,OAAOnD,EAHgE,MAInEsD,IAAiBC,mBAAmBJ,EAAa,QAASE,GAJS,mBAIpF7X,EAJoF,KAI7EgY,EAJ6E,KAKzF,OAAKA,EACEnc,OAAO+F,YAAY/F,OAAOgB,QAAQmD,GAAO6B,KAAI,yCAAgB,CAAhB,UAA4BmW,OAD5DxD,GAzIHpG,EA4IZuL,2BAA6B,SAAChL,GACnC,IAAIyV,EAAoB,GAMxB,OALAvoB,OAAOgB,QAAQ8R,GAAYvS,SAAQ,qCAAE+E,EAAF,KAAUkjB,EAAV,YACrB,OAAZtlB,UAAY,IAAZA,KAAA,UAAAA,IAAeoC,UAAf,eAAwBmiB,OAAQznB,OAAOgB,QAAQkC,IAAaoC,GAAQmiB,MAAMlnB,SAAQ,mCAAE8d,EAAF,KAAa/c,EAAb,YAChFmnB,SAASpK,IAAcmK,EAAOjJ,QAAUje,EAAM6C,OAASnE,OAAOC,KAAKqB,EAAM6C,OAAOob,QAChFvf,OAAOgB,QAAQM,EAAM6C,OAAO5D,SAAQ,mCAAEJ,EAAF,KAAO6V,EAAP,YAClCuS,EAAkBllB,KAAK,CAAElD,MAAK6V,qBAC7BuS,GAnJUhW,EAqJZkD,sBAAwB,SAAC3C,GAC9B,IAAIyV,EAAoB,GAQxB,OAPAvoB,OAAOgB,QAAQ8R,GAAYvS,SAAQ,YAAuB,IAAD,qBAApB+E,EAAoB,KAAZkjB,EAAY,KACvD,UAAItlB,UAAJ,IAAIA,KAAJ,UAAIA,IAAeoC,UAAnB,aAAI,EAAwBmiB,KAAM,CAChC,IAAIiB,EAAa1oB,OAAOC,KAAKiD,IAAaoC,GAAQmiB,MAAMvnB,QAAO,SAAAme,GAAS,OAAIoK,SAASpK,IAAcmK,EAAOjJ,UACtGmJ,EAAWnJ,SACbgJ,EAAkBjjB,GAAUojB,OAG3BH,GA9JUhW,EAiKZoW,yBAA2B,SAACrjB,EAAQ+Y,EAAWuK,GAAiC,IAAD,MAAhBjQ,EAAgB,uDAAP,GACzEkQ,EAAa,OAAG3lB,UAAH,IAAGA,KAAH,UAAGA,IAAeoC,UAAlB,iBAAG,EAAwBmiB,YAA3B,iBAAG,EAA+BpJ,UAAlC,aAAG,EAA2CnK,KAC/D,OAAK2U,EACwB,oBAAlBA,EACFA,EAAcD,GACdC,GAEFlQ,EALoBA,GAnKVpG,EA0KZ+V,gCAAkC,SAAChjB,EAAQ+Y,GAAT,UAAoB1F,EAApB,uDAA6B,KAA7B,OAC3B,OAAZzV,UAAY,IAAZA,KAAA,UAAAA,IAAeoC,UAAf,mBAAwBmiB,YAAxB,mBAA+BpJ,UAA/B,eAA2CvC,cAAenD,GA3KzCpG,EA6KZuW,4BAA8B,SAACziB,GACpC,IAAI0iB,EAAwB,GAwB5B,OAvBA/oB,OAAOgB,QAAQkC,KAAc3C,SAAQ,YAAuB,IAAD,mBAApB+E,EAAoB,KAAZ0jB,EAAY,KACrDC,EAAY,GACZC,GAAe,EACfF,EAAOvB,MACTznB,OAAOgB,QAAQgoB,EAAOvB,MAAMlnB,SAAQ,YAAgC,IAAD,mBAA7B8d,EAA6B,KAAlB8K,EAAkB,KAKjE,GAJIA,EAAahlB,OAASnE,OAAOC,KAAKkpB,EAAahlB,OAAOob,OAAS,IACjE0J,EAAU5K,GAAatd,YAAUooB,EAAahlB,OAC9C+kB,GAAe,GAEbC,EAAarN,YAAa,CAC5B,IAAIE,EAAiBC,IAAiBmN,kBAAkB/iB,EAAsB,CAAEE,OAAQjB,EAAQkB,QAAS6X,IACzG,GAAIrC,EAAgB,CAClB,IAAIsC,EA3LG/L,EA2LcgM,4BAA4BjZ,EAAQ+Y,EAAWrC,GAChEsC,IACF2K,EAAU5K,GAAatd,YAAUud,GACjC4K,GAAe,QAKrBA,IACFH,EAAsBzjB,GAAU2jB,MAE7BF,I,sFC/MPrF,GAAY,EACZ2F,EAAmB,GACnBC,EAAa,EACIzkB,EAEnB,aACE,GADa,oBACTzC,gBAAgByC,EAClB,MAAM0T,MAAM,2CAJG1T,EAOZgf,UAAY,SAAC5e,GAAD,OAChBA,IAAQA,EAAIK,SAAWL,EAAI+Y,WAAa/Y,EAAIgB,UAAYhB,EAAIM,aAR5CV,EASZE,oBAAsB,kBAAMhE,YAAUsoB,IAT1BxkB,EAUZ0kB,kBAAoB,kBAAMvpB,OAAOC,KAAKopB,IAV1BxkB,EAWZD,iCAAmC,WACxC,IAAI8e,EAaJ,OAZA1jB,OAAOC,KAAKwE,cAAcvE,QAAO,SAAAC,GAAG,OAAIA,EAAIG,SAAS,gBAAcC,SAAQ,SAAAwW,GACzE,IAAKsS,EAAiBtS,GAAK,CACzB,IAAI9R,EAAM0a,YAAqB5I,GAC/B,IAAK9R,EAAK,OACV,GAjBaJ,EAiBJgf,UAAU5e,GAEjB,YAnBWJ,EAkBN2kB,mBAAmBzS,GAG1BsS,EAAiBtS,GAAM9R,MAG3Bye,GAAY,GACL,GAzBU7e,EA2BZsB,YAAc,SAAC4Q,GAAD,OAAQA,EAAKsS,EAAiBtS,GAAM,MA3BtClS,EA4BZ4kB,eAAiB,SAACxkB,GA5BNJ,EA6BZ2kB,mBAAmBvkB,EAAI8R,KA7BXlS,EA+BZ6kB,YAAc,SAACzkB,GACpB,GAhCiBJ,EAgCRgf,UAAU5e,GAAM,OAAO,KAGhC,IADA,IAAI8R,EAAE,mBAAeuS,KACe,OAA7B7kB,aAAaob,QAAQ9I,IAC1BA,EAAE,mBAAeuS,KACnB,IAAIK,EAAO5oB,YAAUkE,GAIrB,OAHA0kB,EAAK5S,GAAKA,EACViJ,YAAmBjJ,EAAI4S,GACvBN,EAAiBtS,GAAM4S,EAChB5S,GAzCUlS,EA2CZa,eAAiB,SAACT,GACvB,IA5CiBJ,EA4CRgf,UAAU5e,GAAnB,CACA,IAAI8R,EAAK9R,EAAI8R,GACT4S,EAAO5oB,YAAUkE,GACrB+a,YAAmBjJ,EAAI4S,GACvBN,EAAiBtS,GAAM4S,IAhDN9kB,EAkDZ2kB,mBAAqB,SAACI,UACpBP,EAAiBO,GACxBnlB,aAAaC,WAAWklB,IApDP/kB,EAuDZ2T,kBAAoB,SAACtS,EAAOf,GACjC,GAAKe,EAAL,CACA,IAAIjB,EAzDaJ,EAyDFsB,YAAYD,GACtBjB,GAAOA,EAAIE,WAAaA,IAC7BF,EAAIE,SAAWA,EA3DEN,EA4DZa,eAAeT,MA5DHJ,EA8DZmiB,cAAgB,SAAC6C,EAAMC,GAC5B,IAAIC,EAAOF,EAAK1kB,SACZ6kB,EAAOF,EAAK3kB,SAhECN,EAiEZ2T,kBAAkBqR,EAAK9S,GAAIiT,GAjEfnlB,EAkEZ2T,kBAAkBsR,EAAK/S,GAAIgT,IAlEfllB,EAoEZolB,kBAAoB,SAACC,EAAQC,GAAT,OApERtlB,EAqEZmiB,cArEYniB,EAqEOsB,YAAY+jB,GArEnBrlB,EAqEiCsB,YAAYgkB,M,sGCvE7ClO,E,WACnB,aAAgB,GAAD,oBAAK7Z,gBAAgB6Z,EAAkB,MAAM1D,MAAM,0C,mEACzC6R,EAAcC,GAAY,IAAD,EAC1C9jB,EAAoB8jB,EAApB9jB,OAAQC,EAAY6jB,EAAZ7jB,QACd,GAAI4jB,EACF,OAAO,UAAAA,EAAapP,MAAK,SAAA1U,GAAI,OAAIA,EAAKC,SAAWA,KAAYC,GAAYA,GAAWF,EAAKE,UAAYA,aAA9F,eAA0GwV,iBAAkB,I,qCAEjHoO,EAAcC,EAAWrO,GAAiB,IACxDzV,EAAoB8jB,EAApB9jB,OAAQC,EAAY6jB,EAAZ7jB,QACT4jB,IAAcA,EAAe,IAClC,IAAIE,EAAQF,EAAaG,WAAU,SAAAjkB,GAAI,OAAIA,EAAKC,SAAWA,KAAYC,GAAYA,GAAWF,EAAKE,UAAYA,MAC/G,IAAKwV,GAAkBsO,GAAS,EAE9BF,EAAaI,OAAOF,EAAO,OACtB,CACL,IAAIG,EAAU,CAAElkB,SAAQyV,kBACpBxV,IAASikB,EAAQjkB,QAAUA,GAC3B8jB,GAAS,EACXF,EAAaE,GAASG,EAEtBL,EAAa/mB,KAAKonB,GAEtB,OAAOL,I,yCAEiBtO,EAAa4O,EAAW1O,GAAmC,IAAnBrD,EAAkB,uDAAT,CAAC,GAAI,GAC9E,GAAIoI,MAAMqB,QAAQtG,GAAc,CAE9B,IAF8B,EAE1B6O,EAAyB3O,EACzB4O,EAAsB,KAHI,cAID9O,GAJC,IAI9B,2BAA0C,CAAC,IAAhC+O,EAA+B,QACxC,KAAIF,EAAyBE,EAAeC,UACvC,CACHF,EAAsBC,EACtB,MAHoDF,GAA0BE,EAAeC,UALnE,8BAW9B,IAAKF,EAAqB,OAAOjS,EACjC,IAAIwD,EAAStc,YAAM8qB,EAAwB,EAAGC,EAAoBE,UAClE,MAAO,CAACF,EAAoBF,GAAYvO,GAGxC,IAAIA,EAAStc,YAAMmc,EAAgB,EAAGF,EAAYgP,UAClD,MAAO,CAAChP,EAAY4O,GAAYvO,O,sCCnCvBvb,IATO,CACpB+O,MAAO,CAAEnW,KAAM,SACfuW,IAAK,CAAEvW,KAAM,OACbsW,QAAS,CAAEtW,KAAM,WACjBwW,MAAO,CAAExW,KAAM,SACfyW,KAAM,CAAEzW,KAAM,QACdoW,KAAM,CAAEpW,KAAM,U,uGCJK6Y,EAEnB,aAAgB,GAAD,oBAAKjQ,gBAAgBiQ,EAAQ,MAAMkG,MAAM,2CAFrClG,EAIZC,oBAAsB,kBAAM/P,KAJhB8P,EAKZwB,aAAe,SAACnN,GAAD,IAAWiS,EAAX,uDAAoB,GAApB,OAA4BhW,IAAc+D,IAAaiS,GAL1DtG,EAMZ0Y,cAAgB,SAACrkB,GAAD,OAAchE,IAAgBqX,QAAQrT,IAN1C2L,EAQZgB,cAAgB,SAAC2X,GAAD,MAAYrS,EAAZ,uDAAqB,GAArB,OAA6B,UAAArW,IAAW0oB,UAAX,eAAuBxxB,OAAQmf,GARhEtG,EASZ4Y,gBAAkB,SAACD,GAAD,MAAYrS,EAAZ,uDAAqB,EAArB,OAA4B,UAAArW,IAAW0oB,UAAX,eAAuB7D,SAAUxO,GATnEtG,EAUZ0B,qBAAuB,SAACiX,GAAD,MAAYrS,EAAZ,uDAAqB,GAArB,OAA6B,UAAArW,IAAW0oB,UAAX,eAAuBE,cAAevS,GAV9EtG,EAWZ8Y,4BAA8B,SAACH,EAAW3V,EAAauT,EAAgB/iB,GAAzC,QAAoD8S,EAApD,uDAA6D,GAA7D,OAAqE,UAAArW,IAAW0oB,UAAX,mBAAuBI,0BAAvB,sBAA4C/V,EAAauT,EAAgB/iB,KAAc8S,GAX9KtG,EAYZgZ,qBAAuB,SAACL,GAAD,MAAYrS,EAAZ,uDAAqB,GAArB,OAA6B,UAAArW,IAAW0oB,UAAX,eAAuBM,cAAe3S,GAZ9EtG,EAaZkZ,qBAAuB,SAACP,GAAD,MAAYrS,EAAZ,uDAAqB,KAArB,OAA+B,UAAArW,IAAW0oB,UAAX,eAAuBlP,cAAenD,GAbhFtG,EAgBZmZ,qBAAuB,SAACR,EAAWtkB,GAAZ,UAAsBiS,EAAtB,uDAA+B,EAA/B,OAAsC,UAAArW,IAAW0oB,UAAX,mBAAuBS,iBAAvB,mBAAkCzD,YAAlC,eAhBjD3V,EAgB+F0Y,cAAcrkB,MAAciS,GAhB3HtG,EAiBZqZ,oBAAsB,SAACV,EAAWtkB,GAAZ,UAAsBiS,EAAtB,uDAA+B,EAA/B,OAAsC,UAAArW,IAAW0oB,UAAX,mBAAuBS,iBAAvB,mBAAkCE,WAAlC,eAjBhDtZ,EAiB6F0Y,cAAcrkB,MAAciS,GAjBzHtG,EAkBZoB,oBAAsB,SAACuX,GAAD,QAAYrS,EAAZ,uDAAqB,GAArB,OAA6B,UAAArW,IAAW0oB,UAAX,mBAAuBS,iBAAvB,eAAkCtD,aAAcxP,GAlBvFtG,EAmBZ2M,mBAAqB,SAACgM,EAAW3V,GAAZ,yBAA4B/S,IAAW0oB,UAAvC,iBAA4B,EAAuB7mB,aAAnD,aAA4B,SAA+BkR,IAnBpEhD,EAqBZuZ,iBAAmB,SAACC,GAAD,OAAgB7rB,OAAO+F,YAAY/F,OAAOgB,QAAQsB,KAAYpC,QAAO,oDAAgC2rB,aAAeA,OArB3HxZ,EAsBZyZ,kBAAoB,SAACD,GAAD,IAAalT,EAAb,uDAAsB,GAAtB,OAA8B/V,IAAeipB,IAAelT,GAtBpEtG,EAwBZkB,iCAAmC,SAACwY,GAAD,IAAYpT,EAAZ,uDAAqB,EAArB,OAC/B,OAAToT,QAAS,IAATA,OAAA,EAAAA,EAAWC,kBAzBM3Z,EAyBkBmZ,qBAAL,OAA0BO,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAW5rB,IAArC,OAA0C4rB,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAWrlB,SAAUiS,IAzB5EtG,EA0BZsB,gCAAkC,SAACoY,GAAD,IAAYpT,EAAZ,uDAAqB,EAArB,OAC9B,OAAToT,QAAS,IAATA,OAAA,EAAAA,EAAWE,iBA3BM5Z,EA2BiBqZ,oBAAL,OAAyBK,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAW5rB,IAApC,OAAyC4rB,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAWrlB,SAAUiS,IA3B1EtG,EA6BZ6M,yBAA2B,SAAC8L,EAAW3V,EAAa2G,GAAmC,IAAnBrD,EAAkB,uDAAT,KAC9EmD,EA9BazJ,EA8BMkZ,qBAAqBP,GAC5C,IAAKlP,IAAgBE,EAAgB,OAAOrD,EAF+C,MAGrEsD,IAAiBC,mBAAmBJ,EAAa,QAASE,GAHW,mBAGtF7X,EAHsF,KAG/EgY,EAH+E,KAI3F,OAAKA,EACEnc,OAAO+F,YAAY/F,OAAOgB,QAAQmD,EAAMkR,IAAcrP,KAAI,yCAAgB,CAAhB,UAA4BmW,OADzExD,I,qGChClBuT,EAAW,kBAAM,cAAC,IAAD,CAAiBzjB,KAAM0jB,OACxCC,EAAQ,SAAChb,GAAD,OAAW,sBAAM3Q,UAAW2Q,EAAM+D,QAAU,aAAe,GAAhD,SACtB/D,EAAM8D,MAAQ,YAAI6L,MAAM3P,EAAM8D,OAAOjV,QAAQ+F,KAAI,SAACqmB,EAAGxR,GAAJ,OAAU,cAACqR,EAAD,GAAerR,MAAS","file":"static/js/9.365b9af7.chunk.js","sourcesContent":["import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  dmg: { name: \"All DMG\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n  //elemental\r\n  overloaded_dmg: { name: \"Overloaded DMG\", unit: \"%\" },\r\n  electro_charged_dmg: { name: \"Electro-Charged DMG\", unit: \"%\" },\r\n  superconduct_dmg: { name: \"Superconduct DMG\", unit: \"%\" },\r\n  burning_dmg: { name: \"Overloaded DMG\", unit: \"%\" },\r\n  vaporize_dmg: { name: \"Vaporize DMG\", unit: \"%\" },\r\n  melt_dmg: { name: \"Melt DMG\", unit: \"%\" },\r\n  swirl_dmg: { name: \"Swirl DMG\", unit: \"%\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_final: (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.phy_dmg,\r\n  plunge_crit_dmg: (s) => s.phy_crit_dmg,\r\n  plunge_avg_dmg: (s) => s.phy_avg_dmg,\r\n  plunge_bonus_multi: (s) => s.phy_bonus_multi,\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.dmg) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s[`${ele}_ele_dmg`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_ele_crit_dmg`],\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_ele_avg_dmg`],\r\n  plunge_bonus_multi: (s, ele) => s[`${ele}_ele_bonus_multi`],\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.dmg) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.dmg) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.dmg) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//add html text to physical related stuff with html elements.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].html = <span className=\"text-physical text-nowrap\">{StatData[key].name}</span>\r\n  StatData[key].variant = \"physical\"\r\n});\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].html = <span className={`text-${eleKey} text-nowrap`}>{StatData[ele_key].name}</span>\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulas = {\r\n  noelle_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk + s.def_final * (options.value / 100),\r\n    dependency: [\"atk_base\", \"atk_weapon\", \"atk_\", \"atk\", \"def_final\", \"def_base\", \"def_\", \"def\"],\r\n  }\r\n}\r\n\r\n//the keyfilters are used by build generator to reduce the amount of calculations required\r\nfunction AttachLazyFormulas(obj, options = {}) {\r\n  let { formulaKeys = Object.keys(Formulas), statKeys = Object.keys(StatData) } = options;\r\n  let { formulaOverrides = [] } = obj;\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key: overrideFormulaKey, options } = formulaOverride\r\n    let { key, formula } = OverrideFormulas[overrideFormulaKey] || {}\r\n    if (!formulaKeys.includes(key)) return\r\n    formula = formula(options)\r\n    Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => formula(obj) : function () {\r\n        let val = formula(obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n\r\n  formulaKeys.forEach(key => {\r\n    !obj.hasOwnProperty(key) && Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => Formulas[key](obj) : function () {\r\n        let val = Formulas[key](obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  //assign zeros or default values to the other stats that are not part of the calculations\r\n  statKeys.forEach(key => !obj.hasOwnProperty(key) && (obj[key] = StatData[key].default || 0))\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  OverrideFormulas,\r\n  StatData,\r\n  AttachLazyFormulas,\r\n}","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport Character from \"./Character/Character\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //remove the old error/prone id lists, if it still exists\r\n  localStorage.removeItem(\"artifact_id_list\")\r\n  localStorage.removeItem(\"character_id_list\")\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  if (CharacterDatabase.populateDatebaseFromLocalStorage() |\r\n    ArtifactDatabase.populateDatebaseFromLocalStorage()) {\r\n    //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n    let arts = ArtifactDatabase.getArtifactDatabase();\r\n    Object.values(arts).forEach(art => {\r\n      let valid = true\r\n      if (art.location && !CharacterDatabase.getCharacter(art.location)) {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n      if (!valid)\r\n        ArtifactDatabase.updateArtifact(art)\r\n    })\r\n\r\n    let chars = CharacterDatabase.getCharacterDatabase();\r\n    Object.values(chars).forEach(character => {\r\n      let valid = true;\r\n      //verify character database equipment validity\r\n      let equippedArtifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([slotKey, artid]) => {\r\n        if (!ArtifactDatabase.getArtifact(artid)) {\r\n          valid = false\r\n          return [slotKey, undefined]\r\n        }\r\n        return [slotKey, artid]\r\n      }))\r\n      if (!valid)\r\n        character.equippedArtifacts = equippedArtifacts\r\n\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      if (character.artifactConditionals) character.artifactConditionals = character.artifactConditionals.filter(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for invalid conditionals from previous iterations where srcKey2 was not used.\r\n      let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n      let ascension = Character.getAscension(levelKey)\r\n      character.talentConditionals = talentConditionals.filter(cond => {\r\n        let { srcKey: talentKey, srcKey2: conditionalKey } = cond\r\n        let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n        let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n        if (!conditional) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n      if (!valid) {\r\n        CharacterDatabase.updateCharacter(character)\r\n      }\r\n    })\r\n  }\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import DullBlade from './Weapon_Dull_Blade.png'\r\nimport SilverSword from './Weapon_Silver_Sword.png'\r\nimport CoolSteel from './Weapon_Cool_Steel.png'\r\nimport DarkIronSword from './Weapon_Dark_Iron_Sword.png'\r\nimport FilletBlade from './Weapon_Fillet_Blade.png'\r\nimport HarbingerOfDawn from './Weapon_Harbinger_of_Dawn.png'\r\nimport SkyriderSword from './Weapon_Skyrider_Sword.png'\r\nimport TravelersHandySword from './Weapon_Traveler\\'s_Handy_Sword.png'\r\nimport BlackcliffLongsword from './Weapon_Blackcliff_Longsword.png'\r\nimport FavoniusSword from './Weapon_Favonius_Sword.png'\r\nimport IronSting from './Weapon_Iron_Sting.png'\r\nimport LionsRoar from './Weapon_Lion\\'s_Roar.png'\r\nimport PrototypeRancour from './Weapon_Prototype_Rancour.png'\r\nimport RoyalLongsword from './Weapon_Royal_Longsword.png'\r\nimport SacrificialSword from './Weapon_Sacrificial_Sword.png'\r\nimport TheAlleyFlash from './Weapon_The_Alley_Flash.png'\r\nimport TheBlackSword from './Weapon_The_Black_Sword.png'\r\nimport TheFlute from './Weapon_The_Flute.png'\r\nimport SwordOfDescension from './Weapon_Sword_of_Descension.png'\r\nimport FesteringDesire from './festering_fang.png'\r\nimport AquilaFavonia from './Weapon_Aquila_Favonia.png'\r\nimport SkywardBlade from './Weapon_Skyward_Blade.png'\r\nimport SummitShaper from './summit_shaper.png'\r\nconst sword = {\r\n  DullBlade,\r\n  SilverSword,\r\n  CoolSteel,\r\n  DarkIronSword,\r\n  FilletBlade,\r\n  HarbingerOfDawn,\r\n  SkyriderSword,\r\n  TravelersHandySword,\r\n  BlackcliffLongsword,\r\n  FavoniusSword,\r\n  IronSting,\r\n  LionsRoar,\r\n  PrototypeRancour,\r\n  RoyalLongsword,\r\n  SacrificialSword,\r\n  TheAlleyFlash,\r\n  TheBlackSword,\r\n  TheFlute,\r\n  SwordOfDescension,\r\n  FesteringDesire,\r\n  AquilaFavonia,\r\n  SkywardBlade,\r\n  SummitShaper,\r\n}\r\nexport default sword","export default __webpack_public_path__ + \"static/media/Weapon_Dull_Blade.f5de06e8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Silver_Sword.e2462179.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Cool_Steel.0c6a9897.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dark_Iron_Sword.8dce5b63.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Fillet_Blade.c8e8ab5f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Harbinger_of_Dawn.26da0d78.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Sword.80e60c22.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Traveler's_Handy_Sword.168a7842.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Longsword.522f4d19.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Sword.cb5df26b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Sting.9f4b4b01.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lion's_Roar.b0e78fa9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Rancour.64965f56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Longsword.5a57f015.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Sword.048703ab.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Alley_Flash.7528f5ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Black_Sword.3987a991.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Flute.82af0cbf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sword_of_Descension.eb67a1df.png\";","export default __webpack_public_path__ + \"static/media/festering_fang.38aa5200.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Aquila_Favonia.7c014114.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Blade.af22a740.png\";","export default __webpack_public_path__ + \"static/media/summit_shaper.5245335d.png\";","import WasterGreatsword from './Weapon_Waster_Greatsword.png'\r\nimport OldMercsPal from './Weapon_Old_Merc\\'s_Pal.png'\r\nimport BloodtaintedGreatsword from './Weapon_Bloodtainted_Greatsword.png'\r\nimport DebateClub from './Weapon_Debate_Club.png'\r\nimport FerrousShadow from './Weapon_Ferrous_Shadow.png'\r\nimport Quartz from './Weapon_Quartz.png'\r\nimport SkyriderGreatsword from './Weapon_Skyrider_Greatsword.png'\r\nimport WhiteIronGreatsword from './Weapon_White_Iron_Greatsword.png'\r\nimport BlackcliffSlasher from './Weapon_Blackcliff_Slasher.png'\r\nimport FavoniusGreatsword from './Weapon_Favonius_Greatsword.png'\r\nimport LithicBlade from './Weapon_Lithic_Blade.png'\r\nimport PrototypeAminus from './Weapon_Prototype_Aminus.png'\r\nimport Rainslasher from './Weapon_Rainslasher.png'\r\nimport RoyalGreatsword from './Weapon_Royal_Greatsword.png'\r\nimport SerpentSpine from './Weapon_Serpent_Spine.png'\r\nimport TheBell from './Weapon_The_Bell.png'\r\nimport Whiteblind from './Weapon_Whiteblind.png'\r\nimport SacrificialGreatsword from './Weapon_Sacrificial_Greatsword.png'\r\nimport SnowTombedStarsilver from './snow_tombed_starsilver.png'\r\nimport SkywardPride from './Weapon_Skyward_Pride.png'\r\nimport WolfsGravestone from './Weapon_Wolf\\'s_Gravestone.png'\r\nimport TheUnforged from './Weapon_The_Unforged.png'\r\nconst claymore = {\r\n  WasterGreatsword,\r\n  OldMercsPal,\r\n  BloodtaintedGreatsword,\r\n  DebateClub,\r\n  FerrousShadow,\r\n  Quartz,\r\n  SkyriderGreatsword,\r\n  WhiteIronGreatsword,\r\n  BlackcliffSlasher,\r\n  FavoniusGreatsword,\r\n  LithicBlade,\r\n  PrototypeAminus,\r\n  Rainslasher,\r\n  RoyalGreatsword,\r\n  SerpentSpine,\r\n  TheBell,\r\n  Whiteblind,\r\n  SacrificialGreatsword,\r\n  SnowTombedStarsilver,\r\n  SkywardPride,\r\n  WolfsGravestone,\r\n  TheUnforged,\r\n}\r\nexport default claymore","export default __webpack_public_path__ + \"static/media/Weapon_Waster_Greatsword.a411f34b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Old_Merc's_Pal.67aa1930.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Bloodtainted_Greatsword.eb68a62c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Debate_Club.be908652.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ferrous_Shadow.ef586057.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Quartz.d41c58b9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Greatsword.46e935cb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Iron_Greatsword.eda6295d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Slasher.4693af54.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Greatsword.bfd288be.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Blade.ab4d4f4f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Aminus.d2bf526a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rainslasher.664c61ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Greatsword.fbc5184a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Serpent_Spine.bb2831b5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Bell.3670f330.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Whiteblind.9c37b7dd.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Greatsword.1b0f0225.png\";","export default __webpack_public_path__ + \"static/media/snow_tombed_starsilver.23f56359.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Pride.66a1b3f7.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wolf's_Gravestone.032b607c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Unforged.f7762a2f.png\";","import BeginnersProtector from './Weapon_Beginner\\'s_Protector.png'\r\nimport IronPoint from './Weapon_Iron_Point.png'\r\nimport BlackTassel from './Weapon_Black_Tassel.png'\r\nimport Halberd from './Weapon_Halberd.png'\r\nimport WhiteTassel from './Weapon_White_Tassel.png'\r\nimport BlackcliffPole from './Weapon_Blackcliff_Pole.png'\r\nimport CrescentPike from './Weapon_Crescent_Pike.png'\r\nimport Deathmatch from './Weapon_Deathmatch.png'\r\nimport DragonsBane from './Weapon_Dragon\\'s_Bane.png'\r\nimport LithicSpear from './Weapon_Lithic_Spear.png'\r\nimport PrototypeGrudge from './Weapon_Prototype_Grudge.png'\r\nimport FavoniusLance from './Weapon_Favonius_Lance.png'\r\nimport RoyalSpear from './Weapon_Royal_Spear.png'\r\nimport DragonspineSpear from './dragonspine_spear.png'\r\nimport VortexVanquisher from './Weapon_Vortex_Vanquisher.png'\r\nimport PrimordialJadeWingedSpear from './Weapon_Primordial_Jade_Winged-Spear.png'\r\nimport SkywardSpine from './Weapon_Skyward_Spine.png'\r\nconst polearms = {\r\n  BeginnersProtector,\r\n  IronPoint,\r\n  BlackTassel,\r\n  Halberd,\r\n  WhiteTassel,\r\n  BlackcliffPole,\r\n  CrescentPike,\r\n  Deathmatch,\r\n  DragonsBane,\r\n  LithicSpear,\r\n  PrototypeGrudge,\r\n  FavoniusLance,\r\n  RoyalSpear,\r\n  DragonspineSpear,\r\n  VortexVanquisher,\r\n  PrimordialJadeWingedSpear,\r\n  SkywardSpine,\r\n}\r\nexport default polearms","export default __webpack_public_path__ + \"static/media/Weapon_Beginner's_Protector.19165915.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Point.8263916c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Black_Tassel.c3103e46.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Halberd.0044e214.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Tassel.a3cc9099.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Pole.1e15a879.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Crescent_Pike.9e473ddb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Deathmatch.9b0e6d8e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dragon's_Bane.7437cf28.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Spear.cfb11b6c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Grudge.64b3a263.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Lance.693335d4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Spear.99058465.png\";","export default __webpack_public_path__ + \"static/media/dragonspine_spear.bb785669.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Vortex_Vanquisher.efad8956.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Primordial_Jade_Winged-Spear.ea10bc42.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Spine.e81931a5.png\";","import HuntersBow from './Weapon_Hunter\\'s_Bow.png'\r\nimport SeasonedHuntersBow from './Weapon_Seasoned_Hunter\\'s_Bow.png'\r\nimport EbonyBow from './Weapon_Ebony_Bow.png'\r\nimport Messenger from './Weapon_Messenger.png'\r\nimport RavenBow from './Weapon_Raven_Bow.png'\r\nimport RecurveBow from './Weapon_Recurve_Bow.png'\r\nimport SharpshootersOath from './Weapon_Sharpshooter\\'s_Oath.png'\r\nimport Slingshot from './Weapon_Slingshot.png'\r\nimport TheStringless from './Weapon_The_Stringless.png'\r\nimport AlleyHunter from './Weapon_Alley_Hunter.png'\r\nimport BlackcliffWarbow from './Weapon_Blackcliff_Warbow.png'\r\nimport CompoundBow from './Weapon_Compound_Bow.png'\r\nimport FavoniusWarbow from './Weapon_Favonius_Warbow.png'\r\nimport PrototypeCrescent from './Weapon_Prototype_Crescent.png'\r\nimport RoyalBow from './Weapon_Royal_Bow.png'\r\nimport Rust from './Weapon_Rust.png'\r\nimport SacrificialBow from './Weapon_Sacrificial_Bow.png'\r\nimport TheViridescentHunt from './Weapon_The_Viridescent_Hunt.png'\r\nimport SkywardHarp from './Weapon_Skyward_Harp.png'\r\nimport AmosBow from './Weapon_Amos\\'_Bow.png'\r\nimport DreamsOfDragonfell from './dreams_of_dragonfell.png'\r\nconst bows = {\r\n  HuntersBow,\r\n  SeasonedHuntersBow,\r\n  EbonyBow,\r\n  Messenger,\r\n  RavenBow,\r\n  RecurveBow,\r\n  SharpshootersOath,\r\n  Slingshot,\r\n  TheStringless,\r\n  AlleyHunter,\r\n  BlackcliffWarbow,\r\n  CompoundBow,\r\n  FavoniusWarbow,\r\n  PrototypeCrescent,\r\n  RoyalBow,\r\n  Rust,\r\n  SacrificialBow,\r\n  TheViridescentHunt,\r\n  SkywardHarp,\r\n  AmosBow,\r\n  DreamsOfDragonfell,\r\n}\r\nexport default bows","export default __webpack_public_path__ + \"static/media/Weapon_Hunter's_Bow.2e941c96.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Seasoned_Hunter's_Bow.bc6a42aa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ebony_Bow.f89cc3cc.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Messenger.939170eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Raven_Bow.b88fe5c0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Recurve_Bow.bafcde86.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sharpshooter's_Oath.1d149cf5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Slingshot.d2eeb3eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Stringless.b718aa93.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Alley_Hunter.8cc323c2.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Warbow.098f24da.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Compound_Bow.a8457f4e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Warbow.19e98358.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Crescent.50a174b0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Bow.06fbac8b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rust.65b7af56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Bow.804b7a38.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Viridescent_Hunt.904062bf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Harp.6961093e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amos'_Bow.e97cd305.png\";","export default __webpack_public_path__ + \"static/media/dreams_of_dragonfell.8aaebb39.png\";","import ApprenticesNotes from './Weapon_Apprentice\\'s_Notes.png'\r\nimport PocketGrimoire from './Weapon_Pocket_Grimoire.png'\r\nimport AmberCatalyst from './Weapon_Amber_Catalyst.png'\r\nimport EmeraldOrb from './Weapon_Emerald_Orb.png'\r\nimport MagicGuide from './Weapon_Magic_Guide.png'\r\nimport OtherworldlyStory from './Weapon_Otherworldly_Story.png'\r\nimport ThrillingTalesOfDragonSlayers from './Weapon_Thrilling_Tales_of_Dragon_Slayers.png'\r\nimport TwinNephrite from './Weapon_Twin_Nephrite.png'\r\nimport BlackcliffAgate from './Weapon_Blackcliff_Amulet.png'\r\nimport FavoniusCodex from './Weapon_Favonius_Codex.png'\r\nimport MappaMare from './Weapon_Mappa_Mare.png'\r\nimport PrototypeMalice from './Weapon_Prototype_Malice.png'\r\nimport RoyalGrimoire from './Weapon_Royal_Grimoire.png'\r\nimport SacrificialFragments from './Weapon_Sacrificial_Fragments.png'\r\nimport SolarPearl from './Weapon_Solar_Pearl.png'\r\nimport TheWidsith from './Weapon_The_Widsith.png'\r\nimport WineAndSong from './Weapon_Wine_and_Song.png'\r\nimport EyeOfPerception from './Weapon_Eye_of_Perception.png'\r\nimport Frostbearer from './Weapon_Frostbearer.png'\r\nimport LostPrayerToTheSacredWinds from './Weapon_Lost_Prayer_to_the_Sacred_Winds.png'\r\nimport SkywardAtlas from './Weapon_Skyward_Atlas.png'\r\nimport MemoryOfDust from './Weapon_Memory_of_Dust.png'\r\nconst catalysts = {\r\n  ApprenticesNotes,\r\n  PocketGrimoire,\r\n  AmberCatalyst,\r\n  EmeraldOrb,\r\n  MagicGuide,\r\n  OtherworldlyStory,\r\n  ThrillingTalesOfDragonSlayers,\r\n  TwinNephrite,\r\n  BlackcliffAgate,\r\n  FavoniusCodex,\r\n  MappaMare,\r\n  PrototypeMalice,\r\n  RoyalGrimoire,\r\n  SacrificialFragments,\r\n  SolarPearl,\r\n  TheWidsith,\r\n  WineAndSong,\r\n  EyeOfPerception,\r\n  Frostbearer,\r\n  LostPrayerToTheSacredWinds,\r\n  SkywardAtlas,\r\n  MemoryOfDust\r\n}\r\nexport default catalysts","export default __webpack_public_path__ + \"static/media/Weapon_Apprentice's_Notes.0b7fb81e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Pocket_Grimoire.536179c5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amber_Catalyst.01ede681.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Emerald_Orb.4008f986.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Magic_Guide.64c777ec.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Otherworldly_Story.48b54293.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Thrilling_Tales_of_Dragon_Slayers.692d45b8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Twin_Nephrite.b0c2488b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Amulet.b97d01eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Codex.6e201cfa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Mappa_Mare.bc35dc35.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Malice.4ab08cb6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Grimoire.2f67eac4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Fragments.4dd54e2d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Solar_Pearl.d629ae58.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Widsith.a6fe1227.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wine_and_Song.0aa416e6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Eye_of_Perception.907a0288.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Frostbearer.bde00061.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lost_Prayer_to_the_Sacred_Winds.45f8ca2a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Atlas.8b4f86fa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Memory_of_Dust.4e45ccbb.png\";","import weapons from './Weapons/Weapons'\r\n\r\nimport anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  weapons,\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","import swords from './Swords/Swords'\r\nimport claymores from './Claymores/Claymores'\r\nimport polearms from './Polearms//Polearms'\r\nimport bows from './Bows/Bows'\r\nimport catalysts from './Catalysts/Catalysts'\r\nconst weapons = {\r\n  ...swords,\r\n  ...claymores,\r\n  ...polearms,\r\n  ...bows,\r\n  ...catalysts,\r\n}\r\nexport default weapons","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport Stat from '../Stat';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nexport default function CharacterCard(props) {\r\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getArtifactDataImport(),\r\n    ]).then(() => forceUpdate())\r\n  }, [])\r\n  let { characterId, onEdit, onDelete } = props\r\n  let character = CharacterDatabase.getCharacter(characterId)\r\n  if (!character) return null;\r\n  let build = Character.calculateBuild(character)\r\n  let { setToSlots } = build\r\n\r\n  let { characterKey, name, weapon, constellation } = character\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponName = Weapon.getWeaponName(weapon.key)\r\n  let weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\r\n  let weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\r\n  let weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const statkeys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\",]\r\n  return (<Card className={props.cardClassName} bg={props.bg ? props.bg : \"darkcontent\"} text=\"lightfont\">\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {props.header ? props.header : <h6><b>{name}</b></h6>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {props.onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {props.onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={onEdit} style={{ cursor: onEdit ? \"pointer\" : \"default\" }}>\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={Character.getThumb(characterKey)} className={`w-100 h-auto grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h4>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h4>\r\n          <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n          <span>{`Lvl. ${Character.getStatValueWithOverride(character, \"char_level\")} C${constellation}`}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {Object.entries(Artifact.getArtifactSetEffects(setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = Artifact.getArtifactSetName(key)\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = build.finalStats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {props.footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        selectedCharacterId: characterId\r\n      }}>\r\n        Generate Builds\r\n        </Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy } from 'react';\r\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport Character from './Character';\r\nimport CharacterCard from './CharacterCard';\r\nimport CharacterDatabase from './CharacterDatabase';\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCardPromise = import('../Character/CharacterDisplayCard');\r\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\r\n\r\nexport default class CharacterDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = {\r\n      charIdToEdit: \"\",\r\n      showEditor: false,\r\n    }\r\n    ReactGA.pageview('/character')\r\n  }\r\n\r\n  deleteCharacter = (id) => {\r\n    Character.removeCharacter(id)\r\n    this.forceUpdate()\r\n  }\r\n\r\n  editCharacter = (id) =>\r\n    this.setState({ charIdToEdit: id, showEditor: true },\r\n      () => this.scrollRef.current.scrollIntoView({ behavior: \"smooth\" }))\r\n\r\n  cancelEditCharacter = () =>\r\n    this.setState({ charIdToEdit: null, showEditor: false })\r\n\r\n  componentDidMount() {\r\n    this.scrollRef = React.createRef()\r\n  }\r\n  render() {\r\n    let charIdList = CharacterDatabase.getCharacterIdList()\r\n    return (<Container ref={this.scrollRef}>\r\n      {/* editor/character detail display */}\r\n      {this.state.showEditor ? <Row className=\"mt-2\"><Col>\r\n        <React.Suspense fallback={<span>Loading...</span>}>\r\n          <CharacterDisplayCard editable\r\n            characterId={this.state.charIdToEdit}\r\n            onClose={this.cancelEditCharacter}\r\n            footer={<Button variant=\"danger\" onClick={this.cancelEditCharacter}>Close</Button>}\r\n          />\r\n        </React.Suspense>\r\n      </Col></Row> : null}\r\n\r\n      <Row className=\"mt-2\">\r\n        {this.state.showEditor ? null : <Col lg={4} md={6} className=\"mb-2\">\r\n          <Card className=\"h-100\" bg=\"darkcontent\" text=\"lightfont\">\r\n            <Card.Header className=\"pr-2\">\r\n              <span>Add New Character</span>\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex flex-column justify-content-center\">\r\n              <Row className=\"d-flex flex-row justify-content-center\">\r\n                <Col xs=\"auto\">\r\n                  <Button onClick={() => this.editCharacter(\"\")}>\r\n                    <h1><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></h1>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>}\r\n        {charIdList.map(id =>\r\n          <Col key={id} lg={4} md={6} className=\"mb-2\">\r\n            <CharacterCard\r\n              cardClassName=\"h-100\"\r\n              characterId={id}\r\n              onDelete={() => this.deleteCharacter(id)}\r\n              onEdit={() => this.editCharacter(id)}\r\n            />\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Container>)\r\n\r\n  }\r\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { AttachLazyFormulas } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getCDataObj(charKey)?.talent?.[talentKey]?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getCDataObj(charKey)?.talent?.[talentKey]?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getCDataObj(charKey)?.talent?.[talentKey]?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"formulaOverrides\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey } = character\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey)\r\n    if (!elemental) elemental = autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false)\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = this.getElementalKey(characterKey)\r\n    if (eleKey) eleKey = eleKey + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", \"ele_dmg_bonus\"]\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n\r\n    if (!isAutoElemental)\r\n      keys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      keys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      keys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(`${eleKey}_char_atk_avg_dmg`)\r\n\r\n    //show skill/burst at the end\r\n    keys.push(\"skill_avg_dmg\", \"burst_avg_dmg\")\r\n\r\n    return keys.map(key => ([\"ele_dmg_bonus\", \"skill_avg_dmg\", \"burst_avg_dmg\"].includes(key)) ? `${eleKey}_${key}` : key)\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getArtifactSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals, initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals && artifactConditionals.forEach(conditional => {\r\n      let { srcKey: setKey, srcKey2: setNumKey } = conditional\r\n      let condStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditional.conditionalNum)\r\n      if (condStats) Object.entries(condStats).forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n    AttachLazyFormulas(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"formulaOverrides\") {\r\n        initialStats.formulaOverrides = [...(initialStats.formulaOverrides || []), ...val]\r\n        return\r\n      }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { Formulas, OverrideFormulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (StatData[key]?.html || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (StatData[key]?.html || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static printFormula = (statKey, stats, formulaOverrides = [], expand = true) => {\r\n    for (const formulaOverride of formulaOverrides)\r\n      if (OverrideFormulas[formulaOverride?.key]?.key === statKey)\r\n        return Stat.printOverrideFormula(stats, formulaOverride.key, formulaOverride.options, false)\r\n    return FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n      (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n  }\r\n\r\n  static printOverrideFormula = (stats, overrideKey, options, expand = true) =>\r\n    OverrideFormulasText?.[overrideKey] && typeof OverrideFormulasText?.[overrideKey].formulaText === \"function\" &&\r\n    (<span>{OverrideFormulasText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats[statKey]?.toFixed?.(fixedUnit) || stats[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n}\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulasText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.value}%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getArtifactDataImport = () => ArtifactDataImport\r\n  static getArtifactSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getArtifactSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData).filter(([key, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getArtifactPieceName = (setKey, slotKey, defVal = \"\") => ArtifactData?.[setKey]?.pieces?.[slotKey] || defVal;\r\n  static getArtifactPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n  static getArtifactSetEffectsObj = (setKey, defVal = null) => ArtifactData?.[setKey]?.sets || defVal\r\n  //SLOT\r\n  static getArtifactSlotKeys = () => Object.keys(ArtifactSlotsData)\r\n  static getArtifactSlotName = (slotKey, defVal = \"\") =>\r\n    ArtifactSlotsData[slotKey] ? ArtifactSlotsData[slotKey].name : defVal\r\n  static getArtifactSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n\r\n  static getArtifactSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getArtifactSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getArtifactSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n\r\n  //STARS\r\n  static getRarityArr = (setKey) => ArtifactData[setKey] ? ArtifactData[setKey].rarity : []\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => ArtifactMainSlotKeys\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = ArtifactMainStatsData[numStars]?.[key]?.[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData)\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getRolls(value, rollData, float = false) {\r\n    let roll = null;\r\n    let maxNumRoll = Math.round(value / rollData[0])\r\n    if (!maxNumRoll) return null;\r\n    let rollOption = (val, arr) => {\r\n      if (roll) return;\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (float) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val)) {\r\n            roll = arr;\r\n            return;\r\n          }\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val)) {\r\n            roll = arr;\r\n            return\r\n          }\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        rollOption(value, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(value, [])\r\n    return roll;\r\n  }\r\n  static validateSubStat(state, substat) {\r\n    if (!substat || !substat.value) return { valid: true }\r\n    let value = parseFloat(substat.value);\r\n    if (isNaN(value)) return { valid: false, msg: `Invalid Input` }\r\n    let numStars = state.numStars\r\n    if (!numStars) return { valid: false, msg: `Artifact Stars not set.` }\r\n    let isFloat = Stat.getStatUnit(substat.key) === \"%\"\r\n    let rollData = this.getSubstatRollData(substat.key, numStars);\r\n    let rolls = this.getRolls(value, rollData, isFloat)\r\n\r\n    if (!rolls || rolls.length === 0) return { valid: false, msg: `Substat cannot be rolled 0 times.` };\r\n    let totalAllowableRolls = ArtifactStarsData[numStars]?.numUpgradesOrUnlocks - (4 - ArtifactStarsData[numStars]?.subBaseHigh) + 1;//+1 for its base roll\r\n    if (rolls.length > totalAllowableRolls) return { valid: false, msg: `Substat cannot be rolled more than ${totalAllowableRolls} times.` };\r\n\r\n    let min = rollData[0] * rolls.length;\r\n    let max = rollData[rollData.length - 1] * rolls.length;\r\n    return { valid: true, efficiency: clampPercent(((value - min) / (max - min)) * 100), msg: `This substat was rolled ${rolls.length} time(s). Values: [${rolls.join(\", \")}]`, rolls }\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static artifactValidation(state) {\r\n    let currentEfficiency = 0, maximumEfficiency = 0;\r\n    let subStatValidations = state.substats.map(substat => Artifact.validateSubStat(state, substat));\r\n    for (const substat of subStatValidations)\r\n      if (!substat.valid)\r\n        return { subStatValidations, valid: false, msg: \"One of the substat is invalid.\", currentEfficiency, maximumEfficiency }\r\n\r\n    //if a substat has >=2 rolls, when not all of them have been unlocked//if a substat has >=2 rolls, when not all of them have been unlocked\r\n    if (subStatValidations.some(substat => substat?.rolls?.length > 1) && subStatValidations.some((substat) => !substat.rolls))\r\n      return { subStatValidations, valid: false, msg: \"One of the substat have >1 rolls, but not all substats are unlocked.\", currentEfficiency, maximumEfficiency }\r\n    let currentNumOfRolls = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls ? cur.rolls.length : 0), 0);\r\n    let rollsRemaining = Artifact.rollsRemaining(state.level, state.numStars);\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(state.numStars);\r\n\r\n    if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n      return { subStatValidations, valid: false, msg: `Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `, currentEfficiency, maximumEfficiency }\r\n\r\n    let totalCurrentEfficiency = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls && cur.efficiency ? (cur.efficiency * cur.rolls.length) : 0), 0);\r\n    currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { valid: true, subStatValidations, currentNumOfRolls, rollsRemaining, totalPossbleUpgrade: totalPossbleRolls, currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getArtifactSets = (setKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = null) =>\r\n    deepClone(this.getArtifactSets(setKey)?.[setNumKey]?.stats || defVal)\r\n\r\n  static getArtifactConditionalStats = (setKey, setNumKey, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getArtifactSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      ArtifactData?.[setKey]?.sets && Object.entries(ArtifactData[setKey].sets).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getArtifactSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      if (ArtifactData?.[setKey]?.sets) {\r\n        let setNumKeys = Object.keys(ArtifactData[setKey].sets).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n        if (setNumKeys.length)\r\n          artifactSetEffect[setKey] = setNumKeys\r\n      }\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getArtifactSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = ArtifactData?.[setKey]?.sets?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getArtifactSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets?.[setNumKey]?.conditional || defVal\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      let hasSetEffect = false\r\n      if (setObj.sets)\r\n        Object.entries(setObj.sets).forEach(([setNumKey, setEffectObj]) => {\r\n          if (setEffectObj.stats && Object.keys(setEffectObj.stats).length > 0) {\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n            hasSetEffect = true\r\n          }\r\n          if (setEffectObj.conditional) {\r\n            let conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n            if (conditionalNum) {\r\n              let condStats = this.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n              if (condStats) {\r\n                setEffect[setNumKey] = deepClone(condStats)\r\n                hasSetEffect = true\r\n              }\r\n            }\r\n          }\r\n        })\r\n      if (hasSetEffect)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => id ? artifactDatabase[id] : null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null) \r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = (props) => <span className={props.colored ? \"text-5star\" : \"\"}>\r\n  {props.stars ? [...Array(props.stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n"],"sourceRoot":""}