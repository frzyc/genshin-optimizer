{"version":3,"sources":["Components/StarDisplay.js","Components/CustomFormControl.js","Data/WeaponData.js","Components/ConditionalSelector.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Data/CharacterData.js","DatabaseUtil.js","Components/StatIcon.js","Components/CharacterSelection.js","Character/CharacterCard.js","Util/TimeUtil.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","Build/BuildWorker.js","Build/Build.js","Build/BuildDisplay.js","Character/Character.js","Util/Util.js","Stat.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Util/ConditionalsUtil.js","Artifact/ArtifactDatabase.js","Data/ElementalData.js","StatData.js","Weapon/Weapon.js","StatDependency.js"],"names":["StarIcon","icon","faStar","Stars","stars","colored","className","Array","keys","map","_","i","CustomFormControl","float","placeholder","value","onValueChange","disabled","allowEmpty","useState","focus","setFocus","props","type","toString","onChange","e","target","parseFloat","parseInt","onFocus","onBlur","aria-label","WeaponData","WeaponDataImport","then","imp","default","WeaponLevelKeys","LevelNameData","WeaponTypeData","sword","claymore","catalyst","bow","polearm","ConditionalSelector","conditional","conditionalNum","setConditional","defEle","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","resin","fragile","condensed","exp_books","advice","wit","experience","CharacterData","CharacterDataImport","LevelsData","name","level","asend","characterStatBase","crit_rate","crit_dmg","ener_rech","stam","CharacterSpecializedStatKey","DatabaseInitAndVerify","charDBJustPopualted","CharacterDatabase","populateDatebaseFromLocalStorage","artDBJustPopualted","ArtifactDatabase","dbVersion","getDatabaseVersion","arts","getArtifactDatabase","Object","values","forEach","art","valid","location","getCharacter","artInSlotId","getArtifactIDFromSlot","slotKey","id","equipArtifact","Artifact","substatsValidation","numStars","keyMapping","setKey","mainStatKey","endsWith","replace","updateArtifact","chars","getCharacterDatabase","character","entries","equippedArtifacts","artid","equippedArt","getArtifact","moveToNewLocation","artifactConditionals","filter","cond","srcKey","srcKey2","dmgMode","updateCharacter","setDatabaseVersion","defVal","loadFromLocalStorage","version","saveToLocalStorage","StatIcon","hp_base","faTint","hp_final","hp_","hp","atk_base","faFistRaised","atk_character_base","atk_final","atk_","atk","def_base","faShieldAlt","def_final","def_","def","ele_mas","faMagic","faDice","faDiceD20","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","CharacterSelectionDropdownList","onSelect","char","Character","getName","characterKey","CharacterNameDisplay","flat","locationChar","CharacterCard","useReducer","x","forceUpdate","useEffect","Promise","all","getCharacterDataImport","Weapon","getWeaponDataImport","getDataImport","characterId","onEdit","onDelete","build","calculateBuild","setToSlots","weapon","constellation","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","weaponName","getWeaponName","key","weaponMainVal","getWeaponMainStatValWithOverride","weaponSubKey","getWeaponSubStatKey","weaponSubVal","getWeaponSubStatValWithOverride","weaponLevelName","getLevelName","levelKey","weaponPassiveName","getWeaponPassiveName","cardClassName","bg","Header","header","xs","faEdit","faTrashAlt","Body","style","cursor","src","getThumb","getStar","thumbnail","getStatValueWithOverride","refineIndex","Stat","getStatName","getStatUnit","getSetEffects","arr","artifactSetName","getSetName","highestNum","Math","max","unit","statVal","finalStats","toFixed","fixedUnit","footer","Footer","as","Link","to","pathname","selectedCharacterId","msToUnits","ms","milliseconds","seconds","floor","minutes","hours","timeString","timeText","strPadLeft","timeStringMs","defaultProps","undefined","active","ListGroupItem","React","forwardRef","_ref","ref","bsPrefix","action","eventKey","_objectWithoutPropertiesLoose","useBootstrapPrefix","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","createElement","AbstractNavItem","_extends","makeEventKey","href","classNames","displayName","horizontal","ListGroup","horizontalVariant","_useUncontrolled","useUncontrolled","activeKey","initialBsPrefix","_useUncontrolled$as","controlledProps","AbstractNav","Worker_fn","Worker","calculateTotalBuildNumber","artifactsBySlot","setFilters","setKeys","Set","filteredArtifactsBySlot","slotKeys","artifactsBySet","artifact","has","push","freeze","setCount","accu","result","slotPerm","index","length","num","artifactSetPermutations","reduce","artifacts","CharacterDisplayCardPromise","CharacterDisplayCard","lazy","warningBuildNumber","BuildDisplay","forceUpdateBuildDisplay","selectCharacter","charid","setState","getInitialState","buildSetting","splitArtifacts","state","fromEntries","getSlotKeys","artifactDatabase","useLockedArts","val","lock","split","splitArtifactsBySlot","artifactsSlotsToSelectMainStats","mainStat","changeMainStat","autoGenerateBuilds","changeSetFilterKey","newkey","setsNumArr","dropdownitemsForStar","star","getSetsByMaxStarEntries","setobj","some","getSetEffectsObj","artsAccountedOther","cur","ind","every","Dropdown","totBuildNumber","maxBuildsToShow","generateBuilds","builds","generationProgress","generationDuration","generatingBuilds","statFilters","ascending","buildFilterKey","artifactsAssumeFull","initialStats","calculateCharacterWithWeaponStats","artifactSetEffects","getAllArtifactSetEffectsObj","deepClone","artArr","mainStatVal","getMainStatValue","minFilters","min","maxFilters","dependencies","GetDependencies","modifiers","data","worker","terminate","onmessage","progress","timing","ReactGA","category","variable","label","obj","calculateBuildWithObjs","postMessage","BuildGeneratorEditorCard","statsDisplayKeys","selectedCharacter","characterName","artsAccounted","totalBuildNumberString","toLocaleString","generationProgressString","buildAlert","progPercent","Alert","ProgressBar","now","characterDropDown","DropdownButton","title","Divider","CharacterSelection","cid","Card","Row","Col","lg","showCharacterModal","Button","getSlotNameWithIcon","getStatNameWithPercent","getSlotMainStatKeys","showArtCondModal","Boolean","Badge","setNum","ButtonGroup","ItemText","setNkey","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","ConditionalsUtil","getConditionalNum","getConditionalStats","conditionalElement","getSetEffectText","StatFilterCard","setStatFilters","sFs","getStatNamePretty","faSortAmountDownAlt","faSortAmountUp","ArtifactDisplayItem","modalBuild","sort","slotarr1","slotarr","getSlotIcon","md","xl","closeModal","BuildModal","characterid","Modal","show","onHide","contentClassName","Suspense","fallback","newBuild","onClose","editable","closeArtCondModal","ArtConditionalModal","artSetKeyList","s","faUndo","faTimes","getPieceIcon","getPieces","getRarityArr","pop","Image","componentDidUpdate","prevProps","prevState","localStorage","pageview","this","getDisplayStatKeys","Container","artifactIds","join","Component","StatFilterItem","statKeys","close","setFilter","isFloat","inputProps","minInputProps","maxInputProps","InputGroup","Prepend","sKey","Append","faTrash","remainingKeys","k","initialState","maxBuildsToShowList","Error","removeCharacterById","getBaseStatValue","getSpecializedStatKey","getSpeicalizedStatVal","getLevel","includes","characterObj","getCDataObj","baseStat","getIndexFromlevelkey","charKey","getElementalName","elementalKey","ElementalData","getAllCharacterKeys","getElementalKeys","getConstellationName","constellationName","getTitles","titles","getlevelKeys","getlevelNames","indexOf","getAscension","getSpecializedStat","specializeStat","thumbImg","getCard","cardImg","getTalentImg","talentKey","getTalent","img","getConstellationImg","constIndex","talent","getTalentName","getTalentLevelBoost","talents","talentBoost","boostEntry","find","getTalentLevelKey","withBoost","talentLvlKey","talentLevelKeys","levelBoost","clamp","getTalentDocument","document","getTalentFields","fields","getTalentStats","ascension","stats","getTalentStatsAll","statsArr","getTalentConditional","conditionalKey","doc","section","tempCond","getTalentConditionalStats","getConditionalProp","stacks","getTalentConditionalFields","getTalentStatKey","skillKey","elemental","autoInfused","reactionMode","charEleKey","isAutoElemental","auto","infusable","eleKey","getTalentStatKeyVariant","isAutoInfusable","atkKeys","startsWith","ElementToReactionKeys","hasOverride","baseStatOverrides","equipArtifacts","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","artifactSetEffectsStats","getArtifactSetEffectsStats","substats","substat","stat","PreprocessFormulas","mergeStats","modifier","mkey","multiplier","char_ele_key","overrides","hasOwnProperty","specializedStatVal","specialStatKey","talentConditionals","getWeaponBonusStat","getWeaponConditionalStat","getRandomElementFromArray","array","random","getRandomIntInclusive","ceil","getItem","JSON","parse","setItem","stringify","closeEnoughFloat","a","b","abs","closeEnoughInt","low","high","getArrLastElement","clampPercent","string","pad","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","objMultiplication","multi","prop","htmlStatsData","StatData","pretty","getStatNameRaw","getStatVariant","printStat","f","expand","getPrintableFormulaStatKeyList","statList","formulaKeys","FormulaText","modifiersKeys","printFormula","modifierText","options","statName","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_dmg","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_dmg","electrocharged_multi","electrocharged","superconduct_dmg","superconduct_multi","superconduct","swirl_dmg","swirl_multi","swirl","shatter_dmg","shatter_multi","shattered","crystalize_dmg","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","amp_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","defineProperty","configurable","enumerable","writable","initiated","characterDatabase","charIdIndex","isInvalid","getCharacterIdList","getIdNameList","addCharacter","dchar","removeItem","unequipArtifactOnSlot","equipArtifactBuild","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","phy_dmg_bonus","ele_dmg_bonus","2","ArtifactSubStatsData","ArtifactSubstatsMinMax","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","rolls","efficiency","getSubstatEfficiency","getArtifactEfficiency","currentEfficiency","maximumEfficiency","errMsgs","currentNumOfRolls","sum","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","maxPerRoll","getSubstatAllMax","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getSetKeys","rarity","pieces","getPieceName","icons","setEffects","artifactSetEffect","setNumKeys","charFinalStats","setEffectText","getSlotName","slotIcon","databaseObj","getStars","getMainStatKeys","getMainStatValues","numStar","main","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatKey","subStatValue","rollData","maxNumRoll","round","rollOption","reverse","roll","len","c","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","Formulas","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","dependencyKeys","preFormulas","modifierFunc","initial","formula","reactionName","dmgKey","dmgName","str","atkTypeName","dmgModeName","ele_key","getLevelIndex","weaponKey","getWeaponRarity","passiveName","getWeaponPassiveDescription","passiveDescription","getWeaponDescription","description","getWeaponConditional","getWeaponImg","getWeaponMainStatVal","baseStats","getWeaponSubStatVal","sub","getWeaponsOfType","weaponType","getWeaponTypeName","weaponObj","overrideMainVal","overrideSubVal","GetFormulaDependency","dependency","Proxy","get","receiver","add","formulaKeyDependency","InsertDependencies"],"mappings":"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","file":"static/js/10.7d4f1a04.chunk.js","sourcesContent":["import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst CustomFormControl = ({ float = false, placeholder, value, onValueChange, disabled, allowEmpty = false }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  let displayValue = value\r\n  if (allowEmpty) displayValue = typeof value === \"number\" ? value : \"\"\r\n  else displayValue = !value && focus ? \"\" : (value?.toString?.() || value)\r\n  const props = {\r\n    type: \"number\",\r\n    className: \"hide-appearance\",\r\n    placeholder,\r\n    value: displayValue,\r\n    disabled,\r\n    onChange: (e) => {\r\n      let value = e.target.value;\r\n      if (float) {\r\n        if (allowEmpty) value = value === \"\" ? null : (parseFloat(value) || 0)\r\n        else value = parseFloat(value) || 0\r\n      } else {\r\n        if (allowEmpty) value = value === \"\" ? null : (parseInt(value) || 0)\r\n        else value = parseInt(value) || 0\r\n      }\r\n      onValueChange?.(value);\r\n    },\r\n    onFocus: () => setFocus(true),\r\n    onBlur: () => setFocus(false),\r\n  }\r\n  return <FormControl {...props} aria-label=\"custom-input\" />\r\n}\r\nexport default CustomFormControl;","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\nimport { loadFromLocalStorage, saveToLocalStorage } from \"./Util/Util\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //this will only run if neither of the database has been initated.\r\n  const charDBJustPopualted = CharacterDatabase.populateDatebaseFromLocalStorage(),\r\n    artDBJustPopualted = ArtifactDatabase.populateDatebaseFromLocalStorage()\r\n  if (!charDBJustPopualted && !artDBJustPopualted) return\r\n  const dbVersion = getDatabaseVersion()\r\n  //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n  let arts = ArtifactDatabase.getArtifactDatabase();\r\n  Object.values(arts).forEach(art => {\r\n    let valid = true\r\n    if (art.location) {\r\n      const locationChar = CharacterDatabase.getCharacter(art.location)\r\n      if (locationChar) {\r\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\r\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\r\n          CharacterDatabase.equipArtifact(art.location, art)\r\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\r\n          art.location = \"\"\r\n          valid = false\r\n        }\r\n      } else {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (dbVersion < 1) {\r\n      //generate artifact efficiency again for artifacts\r\n      Artifact.substatsValidation(art)\r\n      valid = false\r\n\r\n      //there was a bug that saved the numStars as strings. convert to number.\r\n      if (typeof art.numStars === \"string\") {\r\n        art.numStars = parseInt(art.numStars)\r\n        valid = false\r\n      }\r\n\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (!valid)\r\n      ArtifactDatabase.updateArtifact(art)\r\n  })\r\n\r\n  let chars = CharacterDatabase.getCharacterDatabase();\r\n  Object.values(chars).forEach(character => {\r\n    let valid = true;\r\n    //verify character database equipment validity\r\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\r\n      const equippedArt = ArtifactDatabase.getArtifact(artid)\r\n      if (equippedArt && equippedArt.location !== character.id) //the artifact doesnt have the right location...\r\n        ArtifactDatabase.moveToNewLocation(artid, character.id)\r\n      if (!equippedArt) {\r\n        valid = false\r\n        character.equippedArtifacts[slotKey] = \"\"\r\n      }\r\n    })\r\n\r\n    if (dbVersion < 1) {\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      }) ?? []\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n    }\r\n    if (!valid) {\r\n      CharacterDatabase.updateCharacter(character)\r\n    }\r\n  })\r\n  setDatabaseVersion(1)\r\n}\r\nconst getDatabaseVersion = (defVal = 0) =>\r\n  parseInt(loadFromLocalStorage(\"db_ver\") ?? defVal)\r\n\r\nconst setDatabaseVersion = (version) =>\r\n  saveToLocalStorage(\"db_ver\", version)\r\n\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_character_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Character from \"../Character/Character\";\r\nimport CharacterDatabase from \"../Character/CharacterDatabase\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n    <Dropdown.Item key={id} onClick={() => onSelect(id)}>\r\n      <span>\r\n        <div className=\"mb-n2\"><b>{Character.getName(char.characterKey)}</b></div>\r\n        <small>{char.name}</small>\r\n      </span>\r\n    </Dropdown.Item>)\r\n}\r\nfunction CharacterNameDisplay({ id, flat = false }) {\r\n  let locationChar = CharacterDatabase.getCharacter(id)\r\n  if (locationChar) {\r\n    if (flat) {\r\n      return <span><b>{Character.getName(locationChar.characterKey)}</b> <small>{locationChar?.name}</small></span>\r\n    } else {\r\n      return <span>\r\n        <div className=\"mb-n2\"><b>{Character.getName(locationChar.characterKey)}</b></div>\r\n        <small>{locationChar.name}</small>\r\n      </span>\r\n    }\r\n\r\n  } else {\r\n    return <b>Inventory</b>\r\n  }\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n  CharacterNameDisplay\r\n};\r\n\r\n","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport Stat from '../Stat';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nexport default function CharacterCard(props) {\r\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => forceUpdate())\r\n  }, [])\r\n  let { characterId, onEdit, onDelete } = props\r\n  let character = CharacterDatabase.getCharacter(characterId)\r\n  if (!character) return null;\r\n  let build = Character.calculateBuild(character)\r\n  let { setToSlots } = build\r\n\r\n  let { characterKey, name, weapon = {}, constellation } = character\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponName = Weapon.getWeaponName(weapon.key)\r\n  let weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\r\n  let weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\r\n  let weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const statkeys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\",]\r\n  return (<Card className={props.cardClassName} bg={props.bg ? props.bg : \"darkcontent\"} text=\"lightfont\">\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {props.header ? props.header : <h6><b>{name}</b></h6>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {props.onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {props.onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={onEdit} style={{ cursor: onEdit ? \"pointer\" : \"default\" }}>\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={Character.getThumb(characterKey)} className={`thumb-big grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h4>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h4>\r\n          <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n          <span>{`Lvl. ${Character.getStatValueWithOverride(character, \"char_level\")} C${constellation}`}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {Object.entries(Artifact.getSetEffects(setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = Artifact.getSetName(key)\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = build.finalStats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {props.footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        selectedCharacterId: characterId\r\n      }}>\r\n        Generate Builds\r\n        </Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { strPadLeft } from \"./Util\"\r\n\r\nfunction msToUnits(ms) {\r\n  let milliseconds = ms % 1000\r\n  let seconds = Math.floor((ms / 1000) % 60)\r\n  let minutes = Math.floor((ms / (1000 * 60)) % 60)\r\n  let hours = Math.floor((ms / (1000 * 60 * 60)))\r\n  return { hours, minutes, seconds, milliseconds }\r\n}\r\nfunction timeString(ms) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds } = msToUnits(ms, \"hours\")\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)} ${timeText}`;\r\n}\r\nfunction timeStringMs(ms) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds, milliseconds } = msToUnits(ms, \"hours\")\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)}.${strPadLeft(milliseconds, '0', 3)} ${timeText}`;\r\n}\r\nexport {\r\n  msToUnits,\r\n  timeString,\r\n  timeStringMs\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/BuildWorker.f5878e59.worker.js\");\n}\n","/**\r\n * Generate all set of artifacts-by-slots based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n *\r\n */\r\nexport function artifactSetPermutations(artifactsBySlot, setFilters) {\r\n  const setKeys = new Set(setFilters.map(i => i.key)), filteredArtifactsBySlot = {}\r\n  const slotKeys = Object.keys(artifactsBySlot)\r\n\r\n  for (const slotKey of slotKeys) {\r\n    let artifactsBySet = {}\r\n    for (const artifact of artifactsBySlot[slotKey]) {\r\n      if (setKeys.has(artifact.setKey)) {\r\n        if (artifactsBySet[artifact.setKey]) artifactsBySet[artifact.setKey].push(artifact)\r\n        else artifactsBySet[artifact.setKey] = [artifact]\r\n      } else {\r\n        if (artifactsBySet[null]) artifactsBySet[null].push(artifact)\r\n        else artifactsBySet[null] = [artifact]\r\n      }\r\n    }\r\n    filteredArtifactsBySlot[slotKey] = Object.freeze(artifactsBySet)\r\n  }\r\n\r\n  const setCount = {}, accu = {}, result = []\r\n\r\n  function slotPerm(index) {\r\n    if (index >= slotKeys.length) {\r\n      for (const { key, num } of setFilters)\r\n        if ((setCount[key] ?? 0) < num)\r\n          return\r\n      result.push({ ...accu })\r\n      return\r\n    }\r\n\r\n    const slotKey = slotKeys[index]\r\n    let artifactsBySet = filteredArtifactsBySlot[slotKey]\r\n    for (const setKey in artifactsBySet) {\r\n      setCount[setKey] = (setCount[setKey] ?? 0) + 1\r\n      accu[slotKey] = artifactsBySet[setKey]\r\n      slotPerm(index + 1)\r\n      setCount[setKey] -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0)\r\n  return result\r\n}\r\n\r\n/**\r\n * Compute number of all artifact permutations based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n */\r\nexport function calculateTotalBuildNumber(artifactsBySlot, setFilters) {\r\n  return artifactSetPermutations(artifactsBySlot, setFilters).reduce((accu, artifactsBySlot) =>\r\n    accu + Object.entries(artifactsBySlot).reduce((accu, artifacts) => accu * artifacts[1].length, 1)\r\n  , 0)\r\n}\r\n\r\n/**\r\n * @callback artifactCallback\r\n * @param {Object.<artifactKey, artifact>} artifacts - the list of artifacts\r\n * @param {stats} stats - the total stats for the artifacts\r\n */\r\n\r\n/**\r\n * Generate all artifact permutations and accumulate the stats\r\n * @param {stats} initialStats - initial stats before any artifact is added\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - the list of the set effects\r\n * @param {artifactCallback} callback - the functions called with each permutation\r\n */\r\nexport function artifactPermutations(initialStats, artifactsBySlot, artifactSetEffects, callback) {\r\n  const slotKeys = Object.keys(artifactsBySlot), setCount = {}, accu = {}\r\n  function slotPerm(index, stats) {\r\n    if (index >= slotKeys.length) {\r\n      callback(accu, stats)\r\n      return\r\n    }\r\n\r\n    let slotKey = slotKeys[index]\r\n    for (const artifact of artifactsBySlot[slotKey]) {\r\n      let newStats = { ...stats }\r\n      accumulate(slotKey, artifact, setCount, accu, newStats, artifactSetEffects)\r\n      slotPerm(index + 1, newStats)\r\n      setCount[artifact.setKey] -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0, initialStats)\r\n}\r\n\r\nfunction accumulate(slotKey, art, setCount, accu, stats, artifactSetEffects) {\r\n  let setKey = art.setKey\r\n  accu[slotKey] = art\r\n  setCount[setKey] = (setCount[setKey] ?? 0) + 1\r\n\r\n  // Add artifact stats\r\n  stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + art.mainStatVal\r\n  art.substats.forEach((substat) =>\r\n    substat?.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n\r\n  // Add set effects\r\n  let setEffect = artifactSetEffects[setKey]?.[setCount[setKey]]\r\n  setEffect && Object.entries(setEffect).forEach(([statKey, val]) =>\r\n    stats[statKey] = (stats[statKey] || 0) + val)\r\n}\r\n","import { faCheckSquare, faSortAmountDownAlt, faSortAmountUp, faSquare, faTimes, faTrash, faUndo } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy } from 'react';\r\nimport { Alert, Badge, Button, ButtonGroup, Card, Col, Container, Dropdown, DropdownButton, Image, InputGroup, ListGroup, Modal, ProgressBar, Row } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\n// eslint-disable-next-line\r\nimport Worker from \"worker-loader!./BuildWorker.js\";\r\nimport Artifact from '../Artifact/Artifact';\r\nimport ArtifactDatabase from '../Artifact/ArtifactDatabase';\r\nimport Character from '../Character/Character';\r\nimport CharacterCard from '../Character/CharacterCard';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport { CharacterNameDisplay, CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport ConditionalSelector from '../Components/ConditionalSelector';\r\nimport CustomFormControl from '../Components/CustomFormControl';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport Stat from '../Stat';\r\nimport { GetDependencies } from '../StatDependency';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { timeStringMs } from '../Util/TimeUtil';\r\nimport { deepClone, loadFromLocalStorage, saveToLocalStorage } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport { calculateTotalBuildNumber } from './Build';\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCardPromise = import('../Character/CharacterDisplayCard');\r\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\r\n\r\nconst warningBuildNumber = 10000000\r\nexport default class BuildDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = BuildDisplay.getInitialState();\r\n    if (\"BuildsDisplay.state\" in localStorage) {\r\n      const { selectedCharacterId } = loadFromLocalStorage(\"BuildsDisplay.state\")\r\n      this.state = { ...this.state, selectedCharacterId }\r\n    }\r\n    if (props.location.selectedCharacterId) //override the one stored in BuildsDisplay.state\r\n      this.state.selectedCharacterId = props.location.selectedCharacterId\r\n\r\n    if (this.state.selectedCharacterId) {\r\n      const character = CharacterDatabase.getCharacter(this.state.selectedCharacterId)\r\n      if (character)\r\n        this.state = { ...this.state, ...(character?.buildSetting ?? {}) }\r\n      else\r\n        this.state.selectedCharacterId = \"\"\r\n    }\r\n    ReactGA.pageview('/build')\r\n  }\r\n  static initialState = {\r\n    builds: [],\r\n    generatingBuilds: false,\r\n    selectedCharacterId: \"\",\r\n    setFilters: [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }],\r\n    statFilters: {},\r\n    artifactConditionals: [],//{ setKey: \"\", setNumKey: \"\", conditionalNum: 0 }\r\n    mainStat: [\"\", \"\", \"\"],\r\n    buildFilterKey: \"atk_final\",\r\n    artifactsAssumeFull: false,\r\n    useLockedArts: false,\r\n    ascending: false,\r\n    modalBuild: null,\r\n    showArtCondModal: false,\r\n    showCharacterModal: false,\r\n    maxBuildsToShow: 100,\r\n    generationProgress: 0,\r\n    generationDuration: 0,//in ms\r\n  }\r\n  static maxBuildsToShowList = [100, 50, 25, 5]\r\n  static getInitialState = () => deepClone(BuildDisplay.initialState)\r\n  static artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"]\r\n  forceUpdateBuildDisplay = () => this.forceUpdate()\r\n\r\n  selectCharacter = (charid = \"\") => {\r\n    if (!charid)\r\n      return this.setState({ ...BuildDisplay.getInitialState(), selectedCharacterId: \"\" })\r\n    const character = CharacterDatabase.getCharacter(charid)\r\n    if (character)\r\n      return this.setState({ ...BuildDisplay.getInitialState(), selectedCharacterId: charid, ...(character?.buildSetting ?? {}) })\r\n  }\r\n  splitArtifacts = () => {\r\n    if (!this.state.selectedCharacterId) // Make sure we have all slotKeys\r\n      return Object.fromEntries(Artifact.getSlotKeys().map(slotKey => [slotKey, []]))\r\n    let artifactDatabase = ArtifactDatabase.getArtifactDatabase();\r\n    //do not use artifacts that are locked.\r\n    if (!this.state.useLockedArts)\r\n      Object.entries(artifactDatabase).forEach(([key, val]) => {\r\n        //if its equipped on the selected character, bypass the lock check\r\n        if (this.state.selectedCharacterId && val.location === this.state.selectedCharacterId) return\r\n        //if its locked, or equipped, remove from consideration\r\n        if (val.lock || val.location)\r\n          delete artifactDatabase[key]\r\n      })\r\n    let split = Artifact.splitArtifactsBySlot(artifactDatabase);\r\n    //filter the split slots on the mainstats selected.\r\n    BuildDisplay.artifactsSlotsToSelectMainStats.forEach((slotKey, index) =>\r\n      this.state.mainStat[index] && (split[slotKey] = split[slotKey].filter((art) => art.mainStatKey === this.state.mainStat[index])))\r\n    return split\r\n  }\r\n  changeMainStat = (index, mainStatKey) => {\r\n    this.setState(state => {\r\n      let mainStat = state.mainStat;\r\n      mainStat[index] = mainStatKey;\r\n      return { mainStat }\r\n    }, this.autoGenerateBuilds)\r\n  }\r\n  changeSetFilterKey = (index, newkey, setsNumArr) => this.setState(state => {\r\n    let oldKey = state.setFilters[index].key\r\n    if (oldKey === newkey) return\r\n    let setFilters = state.setFilters;\r\n    let num = 0\r\n    //automatically select the 1st element from setsNumArr\r\n    if (setsNumArr && setsNumArr[0])\r\n      num = parseInt(setsNumArr[0])\r\n    setFilters[index] = { key: newkey, num }\r\n    return { setFilters }\r\n  }, this.autoGenerateBuilds)\r\n\r\n  dropdownitemsForStar = (star, index) =>\r\n    Artifact.getSetsByMaxStarEntries(star).map(([setKey, setobj]) => {\r\n      if (this.state.setFilters.some(filter => filter.key === setKey)) return false;\r\n      let setsNumArr = Object.keys(Artifact.getSetEffectsObj(setKey))\r\n      let artsAccountedOther = this.state.setFilters.reduce((accu, cur, ind) => (cur.key && ind !== index) ? accu + cur.num : accu, 0)\r\n      if (setsNumArr.every(num => parseInt(num) + artsAccountedOther > 5)) return false;\r\n      return (<Dropdown.Item key={setKey}\r\n        onClick={() => this.changeSetFilterKey(index, setKey, setsNumArr)}\r\n      >\r\n        {setobj.name}\r\n      </Dropdown.Item>)\r\n    })\r\n  autoGenerateBuilds = () => {\r\n    if (typeof this.totBuildNumber === \"number\" && this.totBuildNumber <= this.state.maxBuildsToShow)\r\n      this.generateBuilds()\r\n    else if (this.state.builds.length) this.setState({ builds: [], generationProgress: 0, generationDuration: 0 })\r\n  }\r\n\r\n  generateBuilds = () => {\r\n    let { split, totBuildNumber } = this\r\n    if (!totBuildNumber) return this.setState({ builds: [] })\r\n    this.setState({ generatingBuilds: true, builds: [], generationDuration: 0, generationProgress: 0 })\r\n    let { setFilters, statFilters = {}, ascending, buildFilterKey, maxBuildsToShow, artifactConditionals, artifactsAssumeFull } = this.state\r\n    let character = CharacterDatabase.getCharacter(this.state.selectedCharacterId)\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    initialStats.artifactsAssumeFull = artifactsAssumeFull\r\n\r\n    let artifactSetEffects = Artifact.getAllArtifactSetEffectsObj(artifactConditionals)\r\n    let splitArtifacts = deepClone(split)\r\n    //add mainStatVal to each artifact\r\n    Object.values(splitArtifacts).forEach(artArr => {\r\n      artArr.forEach(art => {\r\n        art.mainStatVal = Artifact.getMainStatValue(art.mainStatKey, art.numStars, artifactsAssumeFull ? art.numStars * 4 : art.level);\r\n      })\r\n    })\r\n    //generate the key dependencies for the formula\r\n    const minFilters = Object.fromEntries(Object.entries(statFilters).map(([statKey, { min }]) => [statKey, min]).filter(([, min]) => typeof min === \"number\"))\r\n    const maxFilters = Object.fromEntries(Object.entries(statFilters).map(([statKey, { max }]) => [statKey, max]).filter(([, max]) => typeof max === \"number\"))\r\n    let dependencies = GetDependencies(initialStats?.modifiers, [buildFilterKey, ...Object.keys(minFilters), ...Object.keys(maxFilters)])\r\n\r\n    //create an obj with app the artifact set effects to pass to buildworker.\r\n    let data = {\r\n      splitArtifacts, initialStats, artifactSetEffects, dependencies,\r\n      setFilters, minFilters, maxFilters, maxBuildsToShow, buildFilterKey, ascending,\r\n    }\r\n    if (this.worker) this.worker.terminate()\r\n    this.worker = new Worker();\r\n    this.worker.onmessage = (e) => {\r\n      if (typeof e.data.progress === \"number\") {\r\n        const { progress = 0, timing = 0 } = e.data\r\n        return this.setState({ generationProgress: progress, generationDuration: timing })\r\n      }\r\n      ReactGA.timing({\r\n        category: \"Build Generation\",\r\n        variable: \"timing\",\r\n        value: e.data.timing,\r\n        label: this.totBuildNumber\r\n      })\r\n      let builds = e.data.builds.map(obj =>\r\n        Character.calculateBuildWithObjs(artifactConditionals, initialStats, obj.artifacts))\r\n      if (process.env.NODE_ENV === \"development\") console.log(builds.map(build => build?.finalStats?.[this.state.buildFilterKey]))\r\n      this.setState({ builds, generatingBuilds: false })\r\n      // worker.terminate()\r\n      this.worker.terminate()\r\n      delete this.worker\r\n    }\r\n\r\n    this.worker.postMessage(data)\r\n  }\r\n\r\n  BuildGeneratorEditorCard = (props) => {\r\n    let { setFilters, statFilters = {}, selectedCharacterId, artifactsAssumeFull, artifactConditionals, useLockedArts, generatingBuilds, generationProgress, generationDuration } = this.state\r\n    let { statsDisplayKeys } = props\r\n    let selectedCharacter = CharacterDatabase.getCharacter(selectedCharacterId)\r\n    let characterName = selectedCharacter ? selectedCharacter.name : \"Character Name\"\r\n    let artsAccounted = setFilters.reduce((accu, cur) => cur.key ? accu + cur.num : accu, 0)\r\n    //these variables are used for build generator.\r\n    this.split = this.splitArtifacts();\r\n    this.totBuildNumber = calculateTotalBuildNumber(this.split, setFilters)\r\n    let { totBuildNumber } = this\r\n    let totalBuildNumberString = totBuildNumber?.toLocaleString() ?? totBuildNumber\r\n    let generationProgressString = generationProgress?.toLocaleString() ?? generationProgress\r\n    let buildAlert = null\r\n    if (generatingBuilds) {\r\n      let progPercent = generationProgress * 100 / totBuildNumber\r\n      buildAlert = <Alert variant=\"success\">\r\n        <span>Generating and testing <b>{generationProgressString}/{totalBuildNumberString}</b> Build configurations against the criterias for <b>{characterName}</b></span>\r\n        <h6>Time elapsed: {timeStringMs(generationDuration)}</h6>\r\n        <ProgressBar now={progPercent} label={`${progPercent.toFixed(1)}%`} />\r\n      </Alert>\r\n    } else if (!generatingBuilds && generationProgress) {//done\r\n      buildAlert = <Alert variant=\"success\">\r\n        <span>Generated and tested <b>{totalBuildNumberString}</b> Build configurations against the criterias for <b>{characterName}</b></span>\r\n        <h6>Time elapsed: {timeStringMs(generationDuration)}</h6>\r\n        <ProgressBar now={100} variant=\"success\" label=\"100%\" />\r\n      </Alert>\r\n    } else {\r\n      buildAlert = totBuildNumber === 0 ?\r\n        <Alert variant=\"warning\" className=\"mb-0\"><span>Current configuration will not generate any builds for <b>{characterName}</b>. Please change your Artifact configurations, or add/unlock more Artifacts.</span></Alert>\r\n        : (totBuildNumber > warningBuildNumber ?\r\n          <Alert variant=\"warning\" className=\"mb-0\"><span>Current configuration will generate <b>{totalBuildNumberString}</b> builds for <b>{characterName}</b>. This might take quite awhile to generate...</span></Alert> :\r\n          <Alert variant=\"success\" className=\"mb-0\"><span>Current configuration {totBuildNumber <= this.state.maxBuildsToShow ? \"generated\" : \"will generate\"} <b>{totalBuildNumberString}</b> builds for <b>{characterName}</b>.</span></Alert>)\r\n    }\r\n    let characterDropDown = <DropdownButton title={selectedCharacterId ? <CharacterNameDisplay id={selectedCharacterId} flat /> : \"Select Character\"} disabled={generatingBuilds}>\r\n      <Dropdown.Item onClick={() => this.selectCharacter(\"\")}>Unselect Character</Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <CharacterSelectionDropdownList onSelect={cid => this.selectCharacter(cid)} />\r\n    </DropdownButton>\r\n    const toggleArtifactsAssumeFull = () => this.setState(state => ({ artifactsAssumeFull: !state.artifactsAssumeFull }), this.autoGenerateBuilds)\r\n    return <Card bg=\"darkcontent\" text=\"lightfont\">\r\n      <Card.Header>Build Generator</Card.Header>\r\n      <Card.Body>\r\n        <Row >\r\n          <Col xs={12} lg={6} className=\"mb-2\">\r\n            {/* character selection */}\r\n            {selectedCharacterId ?\r\n              <CharacterCard header={characterDropDown} characterId={selectedCharacterId} bg={\"lightcontent\"} footer={false} cardClassName=\"mb-2\" onEdit={!generatingBuilds ? () => this.setState({ showCharacterModal: true }) : null} /> :\r\n              <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                <Card.Header>\r\n                  {characterDropDown}\r\n                </Card.Header>\r\n              </Card>}\r\n            {/* main stat selector */}\r\n            <Card bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>\r\n                <span>Artifact Main Stat</span>\r\n                <Button className=\"float-right text-right\" variant={artifactsAssumeFull ? \"orange\" : \"primary\"} onClick={toggleArtifactsAssumeFull} disabled={generatingBuilds}>\r\n                  <span><FontAwesomeIcon icon={artifactsAssumeFull ? faCheckSquare : faSquare} className=\"fa-fw\" /> Assume Fully Leveled</span>\r\n                </Button>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                {BuildDisplay.artifactsSlotsToSelectMainStats.map((slotKey, index) =>\r\n                (<div className=\"text-inline mb-1 d-flex justify-content-between\" key={slotKey}>\r\n                  <h6 className=\"d-inline mr-2\">\r\n                    {Artifact.getSlotNameWithIcon(slotKey)}\r\n                  </h6>\r\n                  <DropdownButton disabled={generatingBuilds}\r\n                    title={this.state.mainStat[index] ? Stat.getStatNameWithPercent(this.state.mainStat[index]) : \"Select a mainstat\"}\r\n                    className=\"d-inline\">\r\n                    <Dropdown.Item onClick={() => this.changeMainStat(index, \"\")} >No MainStat</Dropdown.Item>\r\n                    {Artifact.getSlotMainStatKeys(slotKey).map(mainStatKey =>\r\n                      <Dropdown.Item onClick={() => this.changeMainStat(index, mainStatKey)} key={mainStatKey}>\r\n                        {Stat.getStatNameWithPercent(mainStatKey)}\r\n                      </Dropdown.Item>\r\n                    )}\r\n                  </DropdownButton>\r\n                </div>))}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col xs={12} lg={6} className=\"mb-2\"><Row>\r\n            <Col className=\"mb-2\" xs={12}>\r\n              <Card bg=\"lightcontent\" text=\"lightfont\"><Card.Body>\r\n                <Button className=\"w-100\" onClick={() => this.setState({ showArtCondModal: true })} disabled={generatingBuilds}>\r\n                  <span>Default Artifact Set Effects {Boolean(artifactConditionals.length) && <Badge variant=\"success\">{artifactConditionals.length} Selected</Badge>}</span>\r\n                </Button>\r\n              </Card.Body></Card>\r\n            </Col>\r\n            {/* Artifact set picker */}\r\n            {setFilters.map(({ key: setKey, num: setNum }, index) => <Col className=\"mb-2\" key={index} xs={12}>\r\n              <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n                <Card.Header>\r\n                  <ButtonGroup>\r\n                    {/* Artifact set */}\r\n                    <DropdownButton as={ButtonGroup} title={Artifact.getSetName(setKey, \"Artifact Set Filter\")} disabled={generatingBuilds}>\r\n                      <Dropdown.Item onClick={() => this.changeSetFilterKey(index, \"\")}>Unselect Artifact</Dropdown.Item>\r\n                      <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊🟊</Dropdown.ItemText>\r\n                      {this.dropdownitemsForStar(5, index)}\r\n                      <Dropdown.Divider />\r\n                      <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊</Dropdown.ItemText>\r\n                      {this.dropdownitemsForStar(4, index)}\r\n                      <Dropdown.Divider />\r\n                      <Dropdown.ItemText>Max Rarity 🟊🟊🟊</Dropdown.ItemText>\r\n                      {this.dropdownitemsForStar(3, index)}\r\n                    </DropdownButton>\r\n                    {/* set number */}\r\n                    <DropdownButton as={ButtonGroup} title={`${setNum}-set`}\r\n                      disabled={generatingBuilds || !setKey || artsAccounted >= 5}\r\n                    >\r\n                      {Object.keys(Artifact.getSetEffectsObj(setKey)).map(num => {\r\n                        let artsAccountedOther = setFilters.reduce((accu, cur) => (cur.key && cur.key !== setKey) ? accu + cur.num : accu, 0)\r\n                        return (parseInt(num) + artsAccountedOther <= 5) &&\r\n                          (<Dropdown.Item key={num}\r\n                            onClick={() => this.setState((state) => {\r\n                              let setFilters = state.setFilters;\r\n                              setFilters[index].num = parseInt(num)\r\n                              return { setFilters }\r\n                            }, this.autoGenerateBuilds)}\r\n                          >\r\n                            {`${num}-set`}\r\n                          </Dropdown.Item>)\r\n                      })}\r\n                    </DropdownButton>\r\n                  </ButtonGroup>\r\n                </Card.Header>\r\n                {setKey ? <Card.Body><Row>\r\n                  {Object.keys(Artifact.getSetEffectsObj(setKey)).filter(setNkey => parseInt(setNkey) <= setNum).map(setNumKey => {\r\n                    let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                    let conditionalNum = 0;\r\n                    let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                    if (conditional) {\r\n                      conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                        setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                    }\r\n                    let setStateArtifactConditional = (conditionalNum) => this.setState(state =>\r\n                      ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }), this.autoGenerateBuilds)\r\n                    let conditionalElement = <ConditionalSelector\r\n                      conditional={conditional}\r\n                      conditionalNum={conditionalNum}\r\n                      setConditional={setStateArtifactConditional}\r\n                      defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                    />\r\n                    return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                      <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey)}</h6>\r\n                      {setStats ? <Row>\r\n                        {Object.entries(setStats).map(([statKey, val]) =>\r\n                          <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                      </Row> : null}\r\n                    </Col>\r\n                  })}\r\n                </Row></Card.Body> : null}\r\n              </Card>\r\n            </Col>)}\r\n            <Col className=\"mb-2\" xs={12}>\r\n              <Card bg=\"lightcontent\" text=\"lightfont\"><Card.Body>\r\n                <Button className=\"w-100\" onClick={() => this.setState(state => ({ useLockedArts: !state.useLockedArts }), this.autoGenerateBuilds)} disabled={generatingBuilds}>\r\n                  <span><FontAwesomeIcon icon={useLockedArts ? faCheckSquare : faSquare} /> {useLockedArts ? \"Use Locked & Equipped Artifacts\" : \"Do not use Locked & Equipped Artifacts\"}</span>\r\n                </Button>\r\n              </Card.Body></Card>\r\n            </Col>\r\n            <Col className=\"mb-2\" xs={12}>\r\n              <StatFilterCard statFilters={statFilters} statsDisplayKeys={statsDisplayKeys} setStatFilters={sFs => this.setState({ statFilters: sFs })} />\r\n            </Col>\r\n          </Row></Col>\r\n        </Row>\r\n        <Row className=\"mb-2\">\r\n          <Col>{selectedCharacterId && buildAlert}</Col>\r\n        </Row>\r\n        <Row className=\"d-flex justify-content-between\">\r\n          <Col xs=\"auto\" >\r\n            <ButtonGroup>\r\n              <Button\r\n                className=\"h-100\"\r\n                disabled={!selectedCharacterId || generatingBuilds}\r\n                variant={(selectedCharacterId && totBuildNumber <= warningBuildNumber) ? \"success\" : \"warning\"}\r\n                onClick={this.generateBuilds}\r\n              ><span>Generate Builds</span></Button>\r\n              <Button\r\n                className=\"h-100\"\r\n                disabled={!generatingBuilds}\r\n                variant=\"danger\"\r\n                onClick={() => {\r\n                  if (this.worker) {\r\n                    this.worker.terminate()\r\n                    delete this.worker\r\n                    this.setState({ generatingBuilds: false, builds: [], generationDuration: 0, generationProgress: 0 })\r\n                  }\r\n                }}\r\n              ><span>Cancel</span></Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {/* Dropdown to select sorting value */}\r\n            <ButtonGroup>\r\n              <DropdownButton disabled={generatingBuilds || !selectedCharacterId} title={<span>Sort by <b>{Stat.getStatNameWithPercent(this.state.buildFilterKey)}</b></span>} as={ButtonGroup}>\r\n                {selectedCharacterId && statsDisplayKeys.map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => this.setState({ buildFilterKey: key }, this.autoGenerateBuilds)}>\r\n                    {Stat.getStatNamePretty(key)}\r\n                  </Dropdown.Item>\r\n                )}\r\n              </DropdownButton>\r\n              <Button onClick={() => this.setState(state => ({ ascending: !state.ascending }), this.autoGenerateBuilds)} disabled={generatingBuilds}>\r\n                <FontAwesomeIcon icon={this.state.ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  }\r\n  ArtifactDisplayItem = (props) => {\r\n    let { build, statsDisplayKeys } = props\r\n    return (<div>\r\n      <ListGroup.Item\r\n        variant={props.index % 2 ? \"customdark\" : \"customdarker\"} className=\"text-white\" action\r\n        onClick={() => this.setState({ modalBuild: build })}\r\n      >\r\n        <Row>\r\n          <Col>{Object.entries(build.setToSlots).sort(([key1, slotarr1], [key2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\r\n            <Badge key={key} variant=\"primary\" className=\"mr-2\">\r\n              {slotarr.map(slotKey => Artifact.getSlotIcon(slotKey))} {Artifact.getSetName(key)}\r\n            </Badge>\r\n          )}</Col>\r\n        </Row>\r\n        <Row>\r\n          {statsDisplayKeys.map(key =>\r\n            <Col className=\"text-nowrap\" key={key} xs={12} md={6} xl={4}>\r\n              <span>{Stat.getStatName(key)}: <span className=\"text-warning\">{build.finalStats[key]?.toFixed?.(Stat.fixedUnit(key)) || build.finalStats[key]}{Stat.getStatUnit(key)}</span></span>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </ListGroup.Item>\r\n    </div>)\r\n  }\r\n  closeModal = () => this.setState({ modalBuild: null, showCharacterModal: false })\r\n  BuildModal = ({ build, characterid }) => {\r\n    let { showCharacterModal } = this.state\r\n    return <Modal show={Boolean(showCharacterModal || build)} onHide={this.closeModal} size=\"xl\" contentClassName=\"bg-transparent\">\r\n      <React.Suspense fallback={<span>Loading...</span>}>\r\n        <CharacterDisplayCard characterId={characterid} newBuild={build}\r\n          onClose={this.closeModal}\r\n          forceUpdate={this.forceUpdateBuildDisplay}\r\n          editable={showCharacterModal}\r\n          footer={<Button variant=\"danger\" onClick={this.closeModal}>Close</Button>} />\r\n      </React.Suspense>\r\n    </Modal>\r\n  }\r\n  closeArtCondModal = () => this.setState({ showArtCondModal: false })\r\n  ArtConditionalModal = () => {\r\n    let { showArtCondModal, artifactConditionals } = this.state\r\n    let artSetKeyList = [5, 4, 3].map(s => Artifact.getSetsByMaxStarEntries(s).map(([key]) => key)).flat()\r\n    return <Modal show={showArtCondModal} onHide={this.closeArtCondModal} size=\"xl\" contentClassName=\"bg-transparent\">\r\n      <Card bg=\"darkcontent\" text=\"lightfont\" >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <h5>Default Artifact Set Effects  {Boolean(artifactConditionals.length) && <Badge variant=\"success\">{artifactConditionals.length} Selected</Badge>}</h5>\r\n            </Col>\r\n            <Col xs=\"auto\" >\r\n              <Button onClick={() => this.setState({ artifactConditionals: [] })}><span><FontAwesomeIcon icon={faUndo} /> Reset All</span></Button>\r\n            </Col>\r\n            <Col xs=\"auto\" >\r\n              <Button variant=\"danger\" onClick={this.closeArtCondModal}>\r\n                <FontAwesomeIcon icon={faTimes} /></Button>\r\n            </Col>\r\n          </Row>\r\n\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Row>\r\n            {artSetKeyList.map(setKey => {\r\n              let icon = Artifact.getPieceIcon(setKey, Object.keys(Artifact.getPieces(setKey))?.[0])\r\n              let numStars = [...Artifact.getRarityArr(setKey)].pop() || 1\r\n              return <Col className=\"mb-2\" key={setKey} xs={12} lg={6} xl={4}>\r\n                <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n                  <Card.Header >\r\n                    <Row>\r\n                      <Col xs=\"auto\" className=\"ml-n3 my-n2\">\r\n                        <Image src={icon} className={`thumb-mid grad-${numStars}star m-1`} thumbnail />\r\n                      </Col>\r\n                      <Col >\r\n                        <h6><b>{Artifact.getSetName(setKey)}</b></h6>\r\n                        <span><Stars stars={numStars} /></span>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Header>\r\n                  <Card.Body><Row>\r\n                    {Object.keys(Artifact.getSetEffectsObj(setKey)).map(setNumKey => {\r\n                      let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                      let conditionalNum = 0;\r\n                      let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                      if (conditional) {\r\n                        conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                        Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                          setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                      }\r\n                      let setStateArtifactConditional = (conditionalNum) => this.setState(state =>\r\n                        ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }),\r\n                        this.autoGenerateBuilds())\r\n                      let conditionalElement = <ConditionalSelector\r\n                        conditional={conditional}\r\n                        conditionalNum={conditionalNum}\r\n                        setConditional={setStateArtifactConditional}\r\n                        defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                      />\r\n                      return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                        <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey)}</h6>\r\n                        {setStats ? <Row>\r\n                          {Object.entries(setStats).map(([statKey, val]) =>\r\n                            <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                        </Row> : null}\r\n                      </Col>\r\n                    })}\r\n                  </Row></Card.Body>\r\n                </Card>\r\n              </Col>\r\n            })}\r\n          </Row>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Button variant=\"danger\" onClick={this.closeArtCondModal}>\r\n            <FontAwesomeIcon icon={faTimes} /> CLOSE</Button>\r\n        </Card.Footer>\r\n      </Card>\r\n    </Modal>\r\n  }\r\n\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport()\r\n    ]).then(() => {\r\n      this.forceUpdate()\r\n      //try to generate a build at the beginning after mount.\r\n      this.autoGenerateBuilds()\r\n    })\r\n  }\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if (prevState.selectedCharacterId !== this.state.selectedCharacterId) {\r\n      let { selectedCharacterId } = this.state\r\n      saveToLocalStorage(\"BuildsDisplay.state\", { selectedCharacterId })\r\n    }\r\n\r\n    if (this.state.selectedCharacterId) {\r\n      let character = CharacterDatabase.getCharacter(this.state.selectedCharacterId)\r\n      if (!character) return\r\n      const { setFilters, statFilters, artifactConditionals, mainStat, buildFilterKey, artifactsAssumeFull, useLockedArts, ascending } = deepClone(this.state)\r\n      character.buildSetting = { setFilters, statFilters, artifactConditionals, mainStat, buildFilterKey, artifactsAssumeFull, useLockedArts, ascending }\r\n      CharacterDatabase.updateCharacter(character)\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.worker?.terminate()\r\n    delete this.worker\r\n  }\r\n  render() {\r\n    let { selectedCharacterId, modalBuild, maxBuildsToShow, builds = [] } = this.state\r\n    let selectedCharacter = CharacterDatabase.getCharacter(selectedCharacterId)\r\n    let characterKey = selectedCharacter?.characterKey\r\n    let characterName = Character.getName(characterKey, \"Character Name\")\r\n    let statsDisplayKeys = Character.getDisplayStatKeys(characterKey)\r\n    return (<Container>\r\n      <this.BuildModal build={modalBuild} characterid={selectedCharacterId} />\r\n      <this.ArtConditionalModal />\r\n      <Row className=\"mt-2 mb-2\">\r\n        <Col>\r\n          {/* Build Generator Editor */}\r\n          <this.BuildGeneratorEditorCard statsDisplayKeys={statsDisplayKeys} />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <Card bg=\"darkcontent\" text=\"lightfont\">\r\n            <Card.Header>{selectedCharacterId ? `Showing ${builds.length} Builds generated for ${characterName}` : \"Select a character to generate builds.\"}</Card.Header>\r\n            {/* Build List */}\r\n            <ListGroup>\r\n              {builds.map((build, index) =>\r\n                (index < maxBuildsToShow) && <this.ArtifactDisplayItem build={build} character={selectedCharacter} index={index} key={Object.values(build.artifactIds).join(\"_\")} statsDisplayKeys={statsDisplayKeys} />\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>)\r\n  }\r\n}\r\n\r\nfunction StatFilterItem({ statKey, statKeys = [], min, max, close, setFilter }) {\r\n  const isFloat = Stat.getStatUnit(statKey) === \"%\"\r\n  const inputProps = {\r\n    disabled: !statKey,\r\n    allowEmpty: true,\r\n    float: isFloat,\r\n  }\r\n  const minInputProps = {\r\n    ...inputProps,\r\n    placeholder: \"MIN\",\r\n    value: min,\r\n    onValueChange: (s) => setFilter(statKey, s, max)\r\n  }\r\n  const maxInputProps = {\r\n    ...inputProps,\r\n    placeholder: \"MAX\",\r\n    value: max,\r\n    onValueChange: (s) => setFilter(statKey, min, s)\r\n  }\r\n  return <InputGroup className=\"mb-3\">\r\n    <DropdownButton\r\n      as={InputGroup.Prepend}\r\n      title={Stat.getStatNamePretty(statKey, \"New Stat\")}\r\n      id=\"input-group-dropdown-1\"\r\n    >\r\n      {statKeys.map(sKey => <Dropdown.Item key={sKey} onClick={() => { close?.(); setFilter(sKey, min, max) }}>{Stat.getStatNamePretty(sKey)}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <CustomFormControl {...minInputProps} />\r\n    <CustomFormControl {...maxInputProps} />\r\n    {Boolean(close) && <InputGroup.Append>\r\n      <Button variant=\"danger\" onClick={close}><FontAwesomeIcon icon={faTrash} /></Button>\r\n    </InputGroup.Append>}\r\n  </InputGroup>\r\n}\r\n\r\nfunction StatFilterCard({ statsDisplayKeys = [], statFilters = {}, setStatFilters }) {\r\n  const remainingKeys = statsDisplayKeys.filter(key => !Object.keys(statFilters).some(k => k === key))\r\n  const setFilter = (sKey, min, max) => setStatFilters({ ...statFilters, [sKey]: { min, max } })\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header>Final Stat Filter</Card.Header>\r\n    <Card.Body>\r\n      <Row>\r\n        {Object.entries(statFilters).map(([statKey, { min, max }]) => {\r\n          return <Col xs={12} key={statKey} ><StatFilterItem statKey={statKey} statKeys={remainingKeys} setFilter={setFilter} min={min} max={max} close={() => {\r\n            delete statFilters[statKey]\r\n            setStatFilters({ ...statFilters })\r\n          }} /></Col>\r\n        })}\r\n        <Col xs={12}>\r\n          <StatFilterItem statKeys={remainingKeys} setFilter={setFilter} />\r\n        </Col>\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\nimport { GetDependencies } from \"../StatDependency\"\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    if (skillKey === \"phy\") return `phy_${dmgMode}`\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    if (skillKey === \"phy\") return \"physical\"\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_character_base\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats.modifiers)(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of Object.entries(val)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of Object.entries(modifier))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\r\n  })\r\n\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_character_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey, constellation)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    Character.getTalentStatsAll(characterKey, constellation, ascension).forEach(s => this.mergeStats(initialStats, s))\r\n    \r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\r\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\r\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\r\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\n\r\n//multiplies every numberical value in the obj by a multiplier.\r\nfunction objMultiplication(obj, multi) {\r\n  Object.keys(obj).forEach(prop => {\r\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\r\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\r\n  })\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance,\r\n  objMultiplication\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\r\n    let formulaKeys = Object.keys(FormulaText)\r\n    let modifiersKeys = Object.keys(modifiers)\r\n    return statList.filter(statKey => formulaKeys.includes(statKey) || modifiersKeys.includes(statKey))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_base: (o) => <span>{f(o, \"atk_character_base\")} + {f(o, \"atk_weapon\")} </span>,\r\n  atk_final: (o) => <span>{f(o, \"atk_base\")} * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"plunge_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"plunge_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"plunge_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"plunge_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  amp_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(o, \"ele_mas\")} * exp^(-0.000505 * {f(o, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_plunge_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_plunge_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_plunge_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `plunge_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};\r\n","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\r\nimport ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 1: [24, 30], 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 1: [2], 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 1: [2], 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 1: [1.5, 1.8], 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 1: [5, 6], 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 1: [1.3, 1.6], 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 1: [0.8, 1], 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 1: [1.6, 1.9], 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubStatsData).map(([key, obj]) =>\r\n  [key, {\r\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\r\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\r\n  }]))\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactSubstatsMinMax,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nconst maxStar = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubstatAllMax = (statKey, numStars = maxStar, defVal = 0) => ArtifactSubstatsMinMax?.[statKey]?.max[numStars] ?? defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, rolls = []) => {\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let max = this.getSubstatAllMax(subStatKey) * len\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      if (rollArr.length > 1) substat.rollArr = rollArr\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(maxStar);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let statKeys = substats.filter(({ key }) => key).map(({ key }) => key)\r\n    let maxPerRoll = 100 * Math.max(...(statKeys.length === 4 ? statKeys : Object.keys(ArtifactSubstatsMinMax)).map(\r\n      key => Artifact.getSubstatAllMax(key, numStars) / Artifact.getSubstatAllMax(key)\r\n    ))\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * maxPerRoll) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect).length > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n      if (Object.keys(condStats).length > 0) {\r\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n        Object.entries(condStats).forEach(([statKey, value]) =>\r\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\r\n      }\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else if (!conditionalNum && index < 0) { //nothing to change\r\n      return conditionals\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => artifactDatabase[id] || null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_character_base: { name: \"ATK\", pretty: \"ATK Character Base\" },\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  plunge_atk_dmg_bonus: { name: \"Plunging Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  all_dmg_bonus: { name: \"All DMG Bonus\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elemental Mastery Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elemental Mastery Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elemental Mastery Multiplier Z\", unit: \"multi\" },\r\n  amp_reaction_base_multi: { name: \"Amplifying Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_base: (s) => s.atk_character_base + s.atk_weapon,\r\n  atk_final: (s) => s.atk_base * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.atk_final * s.plunge_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  plunge_crit_dmg: (s) => s.plunge_dmg * s.crit_dmg_multi,\r\n  plunge_avg_dmg: (s) => s.plunge_dmg * s.crit_multi,\r\n  plunge_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.plunge_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  amp_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s.atk_final * s[`${ele}_plunge_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_plunge_dmg`] * s.crit_dmg_multi,\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_plunge_dmg`] * s.crit_multi,\r\n  plunge_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.plunge_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.all_dmg_bonus) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, modifiers = {}) {\r\n  const preFormulas = dependencyKeys.map(key => {\r\n    if (modifiers[key]) {\r\n      const modifierFunc = (stat, initial) => Object.entries(modifiers[key]).reduce((accu, [mkey, multiplier]) =>\r\n        accu + stat[mkey] * multiplier, initial)\r\n      if (key in Formulas) return [key, (s) => modifierFunc(s, Formulas[key](s))]\r\n      return [key, (s) => modifierFunc(s, s[key] ?? StatData?.[key]?.default ?? 0)]\r\n    } else {\r\n      if (key in Formulas) return [key, Formulas[key]]\r\n      return [key, (s) => (s[key] ?? StatData?.[key]?.default ?? 0)]\r\n    }\r\n  })\r\n  return stat => preFormulas.forEach(([key, formula]) => stat[key] = formula(stat))\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  PreprocessFormulas,\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nimport { objMultiplication } from '../Util/Util.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    stats = stats(refineIndex)\r\n    if (stacks !== 1) objMultiplication(stats, stacks)\r\n    return stats\r\n  }\r\n}","import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  console.log(formulaKeyDependency)\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key) &&\r\n      console.error(\"Formula\", `\"${formulaKey}\"`, \"has dependency with key\", `\"${key}\"`, \"that does not Exist in StatData.\"))\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n}\r\n"],"sourceRoot":""}