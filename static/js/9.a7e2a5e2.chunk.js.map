{"version":3,"sources":["Weapon/Weapon.js","StatDependency.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","../node_modules/react-bootstrap/esm/Badge.js","Data/WeaponData.js","DatabaseUtil.js","Components/StatIcon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","Data/CharacterData.js","Character/CharacterCard.js","Character/CharacterDisplay.js","Character/Character.js","Stat.js","Util/Util.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Character/CharacterDatabase.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Util/ConditionalsUtil.js","Artifact/ArtifactDatabase.js","Data/ElementalData.js","StatData.js","Components/StarDisplay.js"],"names":["Weapon","this","Error","getWeaponDataImport","WeaponDataImport","getLevelName","levelKey","defVal","LevelNameData","getLevelIndex","WeaponLevelKeys","indexOf","getWeaponName","weaponKey","WeaponData","name","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","refineIndex","charFinalStats","character","passiveDescription","getWeaponDescription","description","getWeaponConditional","conditional","getWeaponImg","img","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","getWeaponSubStatKey","subStatKey","getWeaponBonusStat","stats","getWeaponsOfType","weaponType","Object","fromEntries","entries","filter","getWeaponTypeName","WeaponTypeData","getWeaponMainStatValWithOverride","weaponObj","overrideMainVal","key","getWeaponSubStatValWithOverride","overrideSubVal","getWeaponConditionalStat","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","map","formulaKeyDependency","registerDependency","operation","testObj","dependency","Set","keys","StatData","forEach","k","defineProperty","get","add","GetDependencies","initialStats","Formulas","dependencies","modifiers","InsertDependencies","has","Modifiers","s","formula","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","Badge","React","forwardRef","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","then","imp","default","DatabaseInitAndVerify","localStorage","removeItem","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","values","art","valid","location","getCharacter","artInSlotId","getArtifactIDFromSlot","slotKey","id","equipArtifact","keyMapping","setKey","mainStatKey","endsWith","replace","maximumEfficiency","Artifact","substatsValidation","updateArtifact","chars","getCharacterDatabase","equippedArtifacts","artid","equippedArt","getArtifact","moveToNewLocation","artifactConditionals","cond","srcKey","srcKey2","dmgMode","updateCharacter","StatIcon","hp_base","faTint","hp_final","hp_","hp","atk_base","faFistRaised","atk_final","atk_","atk","def_base","faShieldAlt","def_final","def_","def","ele_mas","faMagic","crit_rate","faDice","crit_dmg","faDiceD20","ener_rech","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","icon","_defineProperty","obj","value","enumerable","configurable","writable","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","stam","CharacterSpecializedStatKey","CharacterCard","useReducer","x","forceUpdate","useEffect","Promise","all","Character","getCharacterDataImport","getDataImport","characterId","onEdit","onDelete","build","calculateBuild","setToSlots","characterKey","weapon","constellation","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","weaponName","weaponMainVal","weaponSubKey","weaponSubVal","weaponLevelName","weaponPassiveName","cardClassName","bg","text","Header","header","xs","size","onClick","faEdit","faTrashAlt","Body","style","cursor","src","getThumb","getStar","thumbnail","getName","stars","colored","getStatValueWithOverride","Stat","getStatName","getStatUnit","getSetEffects","arr","artifactSetName","getSetName","highestNum","Math","max","unit","statVal","finalStats","toFixed","fixedUnit","footer","Footer","Link","to","pathname","selectedCharacterId","CharacterDisplayCardPromise","CharacterDisplayCard","lazy","CharacterDisplay","deleteCharacter","removeCharacter","editCharacter","setState","charIdToEdit","showEditor","scrollRef","current","scrollIntoView","behavior","cancelEditCharacter","state","ReactGA","pageview","createRef","charIdList","getCharacterIdList","Suspense","fallback","editable","onClose","lg","md","faPlus","removeCharacterById","getBaseStatValue","getSpecializedStatKey","getSpeicalizedStatVal","getLevel","includes","characterObj","getCDataObj","baseStat","getIndexFromlevelkey","charKey","getElementalName","elementalKey","ElementalData","getAllCharacterKeys","star","getElementalKeys","getConstellationName","constellationName","getTitles","titles","getlevelKeys","getlevelNames","getAscension","getSpecializedStat","specializeStat","thumbImg","getCard","cardImg","getTalentImg","talentKey","getTalent","getConstellationImg","constIndex","talent","getTalentName","getTalentLevelBoost","talents","i","talentBoost","boostEntry","find","getTalentLevelKey","withBoost","talentLvlKey","talentLevelKeys","levelBoost","clamp","getTalentDocument","document","getTalentFields","fields","getTalentStats","ascension","getTalentStatsAll","statsArr","push","getTalentConditional","conditionalKey","doc","section","tempCond","getTalentConditionalStats","val","getTalentConditionalFields","getTalentStatKey","skillKey","elemental","autoInfused","reactionMode","charEleKey","isAutoElemental","auto","infusable","eleKey","getTalentStatKeyVariant","isAutoInfusable","getDisplayStatKeys","atkKeys","startsWith","ElementToReactionKeys","hasOverride","baseStatOverrides","equipArtifacts","artifactIds","artIdsOnCharacter","artIdsNotOnCharacter","getSlotKeys","artNotOnChar","artOnChar","notCharLoc","artifacts","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","deepClone","getMainStatValue","numStars","artifactsAssumeFull","substats","substat","stat","setNumKey","length","parseInt","getConditionalStats","PreprocessFormulas","statKeys","char_ele_key","overrides","hasOwnProperty","specialStatKey","specializedStatVal","addStatsObj","talentConditionals","weaponStats","subKey","subVal","bonusStats","conditionalStats","htmlStatsData","getStatNamePretty","pretty","getStatNameRaw","getStatNameWithPercent","getStatVariant","printStat","f","expand","getPrintableFormulaStatKeyList","statList","ModifiersText","skey","formulaKeys","FormulaText","modifiersTextKeys","printFormula","printModifier","overrideKey","options","formulaText","statName","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_dmg","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_dmg","electrocharged_multi","electrocharged","superconduct_dmg","superconduct_multi","superconduct","swirl_dmg","swirl_multi","swirl","shatter_dmg","shatter_multi","shattered","crystalize_dmg","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","amp_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","abs","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","noelle_burst_atk","sweep_multiplier","mona_passive2_hydro_ele_dmg_bonus","getRandomElementFromArray","array","floor","random","getRandomIntInclusive","min","ceil","loadFromLocalStorage","data","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","closeEnoughFloat","a","b","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","Array","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","arguments","source","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","phy_dmg_bonus","ele_dmg_bonus","2","ArtifactSubStatsData","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","rolls","efficiency","getSubstatEfficiency","getArtifactEfficiency","currentEfficiency","errMsgs","some","currentNumOfRolls","reduce","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","unequipArtifactOnSlot","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","getPieceName","getPieceIcon","icons","getSetEffectsObj","setEffects","getArtifactSetNumStats","artifactSetEffect","artArr","setNumKeys","getSetEffectText","setEffectText","getSetEffectConditional","getSlotName","getSlotIcon","getSlotMainStatKeys","getSlotNameWithIcon","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","accu","v","reverse","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","initiated","characterDatabase","charIdIndex","isInvalid","char","getIdNameList","addCharacter","dchar","charid","equipArtifactBuild","_createForOfIteratorHelper","allowArrayLike","it","F","n","done","e","_e","err","normalCompletion","didErr","step","next","_e2","conditionals","srcKeyObj","index","findIndex","splice","newCond","fieldName","selectedConditionalNum","selectedConditional","curConditional","maxStack","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","reactionName","dmgKey","dmgName","str","atkTypeName","dmgModeName","ele_key","hydro_ele_dmg_bonus","formulas","StarIcon","faStar","Stars","_"],"mappings":"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","file":"static/js/9.a7e2a5e2.chunk.js","sourcesContent":["import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","import { Formulas, Modifiers, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nconst formulaKeyDependency = {}\r\nconst registerDependency = (name, operation) => {\r\n  let testObj = {}\r\n  let dependency = new Set()\r\n  Object.keys(StatData).forEach(k => {\r\n    Object.defineProperty(testObj, k, {\r\n      get: () => {\r\n        dependency.add(k)\r\n        return 0\r\n      }\r\n    })\r\n  })\r\n  operation(testObj)\r\n  formulaKeyDependency[name] = [...dependency]\r\n}\r\nObject.keys(Formulas).forEach(key => registerDependency(key, s => Formulas[key](s)))\r\nObject.keys(Modifiers).forEach(name => registerDependency(name, s => Modifiers[name].formula({})(s)))\r\n\r\nif (process.env.NODE_ENV === \"development\") console.log(formulaKeyDependency)\r\n\r\nfunction GetDependencies(initialStats, keys = Object.keys(Formulas)) {\r\n  let dependencies = new Set(), { modifiers = {} } = initialStats\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n\r\n  for (const name in modifiers) {\r\n    if (Modifiers[name].key === key) {\r\n      formulaKeyDependency[name].forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n      dependencies.add(name)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  GetDependencies,\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //remove the old error/prone id lists, if it still exists\r\n  localStorage.removeItem(\"artifact_id_list\")\r\n  localStorage.removeItem(\"character_id_list\")\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  if (CharacterDatabase.populateDatebaseFromLocalStorage() |\r\n    ArtifactDatabase.populateDatebaseFromLocalStorage()) {\r\n    //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n    let arts = ArtifactDatabase.getArtifactDatabase();\r\n    Object.values(arts).forEach(art => {\r\n      let valid = true\r\n      if (art.location) {\r\n        const locationChar = CharacterDatabase.getCharacter(art.location)\r\n        if (locationChar) {\r\n          let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\r\n          if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\r\n            CharacterDatabase.equipArtifact(art.location, art)\r\n          } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\r\n            art.location = \"\"\r\n            valid = false\r\n          }\r\n        } else {\r\n          art.location = \"\"\r\n          valid = false\r\n        }\r\n      }\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n      if (!art.maximumEfficiency) {\r\n        Artifact.substatsValidation(art)\r\n        valid = false\r\n      }\r\n      if (!valid)\r\n        ArtifactDatabase.updateArtifact(art)\r\n    })\r\n\r\n    let chars = CharacterDatabase.getCharacterDatabase();\r\n    Object.values(chars).forEach(character => {\r\n      let valid = true;\r\n      //verify character database equipment validity\r\n      Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\r\n        const equippedArt = ArtifactDatabase.getArtifact(artid)\r\n        if (equippedArt && equippedArt.location !== character.id) //the artifact doesnt have the right location...\r\n          ArtifactDatabase.moveToNewLocation(artid, character.id)\r\n        if (!equippedArt) {\r\n          valid = false\r\n          character.equippedArtifacts[slotKey] = \"\"\r\n        }\r\n      })\r\n\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      }) ?? []\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n      if (!valid) {\r\n        CharacterDatabase.updateCharacter(character)\r\n      }\r\n    })\r\n  }\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport Stat from '../Stat';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nexport default function CharacterCard(props) {\r\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => forceUpdate())\r\n  }, [])\r\n  let { characterId, onEdit, onDelete } = props\r\n  let character = CharacterDatabase.getCharacter(characterId)\r\n  if (!character) return null;\r\n  let build = Character.calculateBuild(character)\r\n  let { setToSlots } = build\r\n\r\n  let { characterKey, name, weapon = {}, constellation } = character\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponName = Weapon.getWeaponName(weapon.key)\r\n  let weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\r\n  let weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\r\n  let weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const statkeys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\",]\r\n  return (<Card className={props.cardClassName} bg={props.bg ? props.bg : \"darkcontent\"} text=\"lightfont\">\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {props.header ? props.header : <h6><b>{name}</b></h6>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {props.onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {props.onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={onEdit} style={{ cursor: onEdit ? \"pointer\" : \"default\" }}>\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={Character.getThumb(characterKey)} className={`w-100 h-auto grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h4>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h4>\r\n          <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n          <span>{`Lvl. ${Character.getStatValueWithOverride(character, \"char_level\")} C${constellation}`}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {Object.entries(Artifact.getSetEffects(setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = Artifact.getSetName(key)\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = build.finalStats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {props.footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        selectedCharacterId: characterId\r\n      }}>\r\n        Generate Builds\r\n        </Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy } from 'react';\r\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport Character from './Character';\r\nimport CharacterCard from './CharacterCard';\r\nimport CharacterDatabase from './CharacterDatabase';\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCardPromise = import('../Character/CharacterDisplayCard');\r\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\r\n\r\nexport default class CharacterDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = {\r\n      charIdToEdit: \"\",\r\n      showEditor: false,\r\n    }\r\n    ReactGA.pageview('/character')\r\n  }\r\n\r\n  deleteCharacter = (id) => {\r\n    Character.removeCharacter(id)\r\n    this.forceUpdate()\r\n  }\r\n\r\n  editCharacter = (id) =>\r\n    this.setState({ charIdToEdit: id, showEditor: true },\r\n      () => this.scrollRef.current.scrollIntoView({ behavior: \"smooth\" }))\r\n\r\n  cancelEditCharacter = () =>\r\n    this.setState({ charIdToEdit: null, showEditor: false })\r\n\r\n  componentDidMount() {\r\n    this.scrollRef = React.createRef()\r\n  }\r\n  render() {\r\n    let charIdList = CharacterDatabase.getCharacterIdList()\r\n    return (<Container ref={this.scrollRef}>\r\n      {/* editor/character detail display */}\r\n      {this.state.showEditor ? <Row className=\"mt-2\"><Col>\r\n        <React.Suspense fallback={<span>Loading...</span>}>\r\n          <CharacterDisplayCard editable\r\n            characterId={this.state.charIdToEdit}\r\n            onClose={this.cancelEditCharacter}\r\n            footer={<Button variant=\"danger\" onClick={this.cancelEditCharacter}>Close</Button>}\r\n          />\r\n        </React.Suspense>\r\n      </Col></Row> : null}\r\n\r\n      <Row className=\"mt-2\">\r\n        {this.state.showEditor ? null : <Col lg={4} md={6} className=\"mb-2\">\r\n          <Card className=\"h-100\" bg=\"darkcontent\" text=\"lightfont\">\r\n            <Card.Header className=\"pr-2\">\r\n              <span>Add New Character</span>\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex flex-column justify-content-center\">\r\n              <Row className=\"d-flex flex-row justify-content-center\">\r\n                <Col xs=\"auto\">\r\n                  <Button onClick={() => this.editCharacter(\"\")}>\r\n                    <h1><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></h1>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>}\r\n        {charIdList.map(id =>\r\n          <Col key={id} lg={4} md={6} className=\"mb-2\">\r\n            <CharacterCard\r\n              cardClassName=\"h-100\"\r\n              characterId={id}\r\n              onDelete={() => this.deleteCharacter(id)}\r\n              onEdit={() => this.editCharacter(id)}\r\n            />\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Container>)\r\n\r\n  }\r\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\nimport { GetDependencies } from \"../StatDependency\"\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    if (skillKey === \"phy\") return `phy_${dmgMode}`\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    if (skillKey === \"phy\") return \"physical\"\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_base\") || false\r\n    return character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats)\r\n    PreprocessFormulas(dependencies, stats.modifiers)(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"modifiers\")\r\n        return initialStats.modifiers = { ...(initialStats.modifiers || {}), ...val }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey, constellation)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, Modifiers, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = []) => {\r\n    //remove keys that will be overriden by the modifier\r\n    for (const statKey of statList)\r\n      if (Object.keys(ModifiersText).includes(statKey))\r\n        statList = statList.filter(skey => skey !== Modifiers[statKey].key)\r\n    let formulaKeys = Object.keys(FormulaText)\r\n    let modifiersTextKeys = Object.keys(ModifiersText)\r\n    return statList.filter(statKey => formulaKeys.includes(statKey) || modifiersTextKeys.includes(statKey))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    if (statKey in ModifiersText)\r\n      return Stat.printModifier(stats, statKey, modifiers[statKey], false)\r\n    return FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n      (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n  }\r\n\r\n  static printModifier = (stats, overrideKey, options, expand = true) =>\r\n    typeof ModifiersText?.[overrideKey]?.formulaText === \"function\" &&\r\n    (<span>{ModifiersText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (Modifiers[statKey]) statKey = Modifiers[statKey].key\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  amp_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(o, \"ele_mas\")} * exp^(-0.000505 * {f(o, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst ModifiersText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.sweep_multiplier * 100}%</span>,\r\n  },\r\n  mona_passive2_hydro_ele_dmg_bonus: {\r\n    formulaText: () => (o) => <span>{f(o, \"hydro_ele_dmg_bonus\")} + {f(o, \"ener_rech\")} * 20%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n  ModifiersText,\r\n};\r\n","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance\r\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {})\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, numStars, rolls) => {\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars);\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let min = rollData[0] * len;\r\n    let max = rollData[rollData.length - 1] * len;\r\n    return clampPercent(((sum - min) / (max - min)) * 100)\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      if (rollArr.length > 1) substat.rollArr = rollArr\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, numStars, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, numStars, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect).length > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n      if (Object.keys(condStats).length > 0) {\r\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n        Object.entries(condStats).forEach(([statKey, value]) =>\r\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\r\n      }\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else if (!conditionalNum && index < 0) { //nothing to change\r\n      return conditionals\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => artifactDatabase[id] || null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  all_dmg_bonus: { name: \"All DMG Bonus\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elemental Mastery Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elemental Mastery Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elemental Mastery Multiplier Z\", unit: \"multi\" },\r\n  amp_reaction_base_multi: { name: \"Amplifying Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_final: (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.phy_dmg,\r\n  plunge_crit_dmg: (s) => s.phy_crit_dmg,\r\n  plunge_avg_dmg: (s) => s.phy_avg_dmg,\r\n  plunge_bonus_multi: (s) => s.phy_bonus_multi,\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  amp_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s[`${ele}_ele_dmg`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_ele_crit_dmg`],\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_ele_avg_dmg`],\r\n  plunge_bonus_multi: (s, ele) => s[`${ele}_ele_bonus_multi`],\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.all_dmg_bonus) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst Modifiers = {\r\n  noelle_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => s.atk_final + s.def_final * options.sweep_multiplier\r\n  },\r\n  mona_passive2_hydro_ele_dmg_bonus: {\r\n    key: \"hydro_ele_dmg_bonus\",\r\n    formula: () => (s) => s.hydro_ele_dmg_bonus + s.ener_rech * 0.2\r\n  }\r\n}\r\n\r\nfunction PreprocessFormulas(formulaKeys, modifiers) {\r\n  let formulas = formulaKeys.map(key => {\r\n    if (key in Modifiers) return [Modifiers[key].key, Modifiers[key].formula(modifiers[key])]\r\n    if (key in Formulas) return [key, Formulas[key]]\r\n    let value = StatData[key][\"default\"] ?? 0\r\n    return [key, (s) => (s[key] ?? value)]\r\n  })\r\n\r\n  return stat => formulas.forEach(([key, formula]) => {\r\n    stat[key] = formula(stat)\r\n  })\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  Modifiers,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  PreprocessFormulas,\r\n}\r\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n"],"sourceRoot":""}