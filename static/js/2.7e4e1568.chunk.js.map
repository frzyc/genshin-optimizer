{"version":3,"sources":["../node_modules/react-bootstrap/esm/DropdownToggle.js","../node_modules/dom-helpers/esm/matches.js","../node_modules/react-overlays/esm/Dropdown.js","../node_modules/react-bootstrap/esm/DropdownItem.js","../node_modules/react-bootstrap/esm/Dropdown.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/react-overlays/esm/DropdownContext.js","../node_modules/react-overlays/esm/DropdownMenu.js","../node_modules/react-overlays/esm/DropdownToggle.js","../node_modules/react-bootstrap/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../node_modules/react-bootstrap/esm/ButtonGroup.js","../node_modules/react-bootstrap/esm/DropdownButton.js"],"names":["DropdownToggle","React","forwardRef","_ref","ref","bsPrefix","split","className","childBsPrefix","_ref$as","as","Component","Button","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","undefined","_useDropdownToggle","useDropdownToggle","toggleProps","toggle","useMergedRefs","useWrappedRefWithWarning","createElement","_extends","onClick","classNames","displayName","matchesImpl","propTypes","children","PropTypes","func","isRequired","drop","oneOf","focusFirstItemOnShow","itemSelector","string","alignEnd","bool","show","defaultShow","onToggle","Dropdown","rawShow","rawOnToggle","_ref$itemSelector","forceUpdate","useForceUpdate","_useUncontrolledProp","useUncontrolledProp","_useCallbackRef","useCallbackRef","toggleElement","setToggle","menuRef","useRef","menuElement","current","setMenu","useCallback","lastShow","usePrevious","lastSourceEvent","focusInDropdown","event","context","useMemo","contains","document","activeElement","focusToggle","useEventCallback","focus","maybeFocusFirst","type","focusType","node","selector","body","nativeMatch","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","n","s","call","test","first","qsa","useEffect","getNextFocusedChild","offset","items","index","indexOf","Math","max","min","length","DropdownContext","Provider","value","onKeyDown","key","target","tagName","next","preventDefault","_next","Menu","DropdownMenu","Toggle","defaultProps","SafeAnchor","disabled","DropdownItem","eventKey","href","onSelect","propActive","active","onSelectCtx","useContext","SelectableContext","activeKey","NavContext","makeEventKey","handleClick","DropdownHeader","createWithBsPrefix","role","DropdownDivider","DropdownItemText","pProps","_useUncontrolled","useUncontrolled","alignRight","_useUncontrolled$as","navbar","handleToggle","nextShow","source","currentTarget","handleSelect","BaseDropdown","dropdownProps","Divider","Header","Item","ItemText","createContext","noop","useDropdownMenu","options","arrowElement","attachArrowRef","hasShownRef","_options","flip","rootCloseEvent","_options$popperConfig","popperConfig","_options$usePopper","usePopper","shouldUsePopper","handleClose","e","placement","menu","_usePopper","mergeOptionsWithPopperConfig","enabled","enableEvents","styles","attributes","popper","menuProps","id","childArgs","hasShown","close","style","arrowProps","arrow","useRootClose","clickTrigger","object","_ref2","args","Fragment","_ref$show","_ref$toggle","_useDropdownToggle$","alignDirection","alignPropType","oneOfType","shape","sm","md","lg","xl","align","showProps","renderOnMount","isNavbar","NavbarContext","_usePopperMarginModif","usePopperMarginModifiers","popperRef","marginModifiers","alignClasses","keys","Object","brkPoint","direction","push","modifiers","concat","apply","componentName","ButtonGroup","size","vertical","rest","baseClass","any","title","menuAlign","menuRole","renderMenuOnMount","variant","DropdownButton"],"mappings":"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","file":"static/js/2.7e4e1568.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport React from 'react';\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar DropdownToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"split\", \"className\", \"childBsPrefix\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      toggleProps = _useDropdownToggle[0],\n      toggle = _useDropdownToggle[1].toggle;\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    onClick: toggle,\n    className: classNames(className, prefix, split && prefix + \"-split\")\n  }, toggleProps, props));\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","var matchesImpl;\nexport default function matches(node, selector) {\n  if (!matchesImpl) {\n    var body = document.body;\n    var nativeMatch = body.matches || body.matchesSelector || body.webkitMatchesSelector || body.mozMatchesSelector || body.msMatchesSelector;\n\n    matchesImpl = function matchesImpl(n, s) {\n      return nativeMatch.call(n, s);\n    };\n  }\n\n  return matchesImpl(node, selector);\n}","import matches from 'dom-helpers/matches';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport React, { useCallback, useRef, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nvar propTypes = {\n  /**\n   * A render prop that returns the root dropdown element. The `props`\n   * argument should spread through to an element containing _both_ the\n   * menu and toggle in order to handle keyboard events for focus management.\n   *\n   * @type {Function ({\n   *   props: {\n   *     onKeyDown: (SyntheticEvent) => void,\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Determines the direction and location of the Menu in relation to it's Toggle.\n   */\n  drop: PropTypes.oneOf(['up', 'left', 'right', 'down']),\n\n  /**\n   * Controls the focus behavior for when the Dropdown is opened. Set to\n   * `true` to always focus the first menu item, `keyboard` to focus only when\n   * navigating via the keyboard, or `false` to disable completely\n   *\n   * The Default behavior is `false` **unless** the Menu has a `role=\"menu\"`\n   * where it will default to `keyboard` to match the recommended [ARIA Authoring practices](https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton).\n   */\n  focusFirstItemOnShow: PropTypes.oneOf([false, true, 'keyboard']),\n\n  /**\n   * A css slector string that will return __focusable__ menu items.\n   * Selectors should be relative to the menu component:\n   * e.g. ` > li:not('.disabled')`\n   */\n  itemSelector: PropTypes.string,\n\n  /**\n   * Align the menu to the 'end' side of the placement side of the Dropdown toggle. The default placement is `top-start` or `bottom-start`.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Whether or not the Dropdown is visible.\n   *\n   * @controllable onToggle\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Sets the initial show position of the Dropdown.\n   */\n  defaultShow: PropTypes.bool,\n\n  /**\n   * A callback fired when the Dropdown wishes to change visibility. Called with the requested\n   * `show` value, the DOM event, and the source that fired it: `'click'`,`'keydown'`,`'rootClose'`, or `'select'`.\n   *\n   * ```ts static\n   * function(\n   *   isOpen: boolean,\n   *   event: SyntheticEvent,\n   * ): void\n   * ```\n   *\n   * @controllable show\n   */\n  onToggle: PropTypes.func\n};\n\n/**\n * @displayName Dropdown\n */\nfunction Dropdown(_ref) {\n  var drop = _ref.drop,\n      alignEnd = _ref.alignEnd,\n      defaultShow = _ref.defaultShow,\n      rawShow = _ref.show,\n      rawOnToggle = _ref.onToggle,\n      _ref$itemSelector = _ref.itemSelector,\n      itemSelector = _ref$itemSelector === void 0 ? '* > *' : _ref$itemSelector,\n      focusFirstItemOnShow = _ref.focusFirstItemOnShow,\n      children = _ref.children;\n  var forceUpdate = useForceUpdate();\n\n  var _useUncontrolledProp = useUncontrolledProp(rawShow, defaultShow, rawOnToggle),\n      show = _useUncontrolledProp[0],\n      onToggle = _useUncontrolledProp[1];\n\n  var _useCallbackRef = useCallbackRef(),\n      toggleElement = _useCallbackRef[0],\n      setToggle = _useCallbackRef[1]; // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n\n  var menuRef = useRef(null);\n  var menuElement = menuRef.current;\n  var setMenu = useCallback(function (ref) {\n    menuRef.current = ref; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  var lastShow = usePrevious(show);\n  var lastSourceEvent = useRef(null);\n  var focusInDropdown = useRef(false);\n  var toggle = useCallback(function (event) {\n    onToggle(!show, event);\n  }, [onToggle, show]);\n  var context = useMemo(function () {\n    return {\n      toggle: toggle,\n      drop: drop,\n      show: show,\n      alignEnd: alignEnd,\n      menuElement: menuElement,\n      toggleElement: toggleElement,\n      setMenu: setMenu,\n      setToggle: setToggle\n    };\n  }, [toggle, drop, show, alignEnd, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(document.activeElement);\n  }\n\n  var focusToggle = useEventCallback(function () {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  var maybeFocusFirst = useEventCallback(function () {\n    var type = lastSourceEvent.current;\n    var focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && matches(menuRef.current, '[role=menu]') ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    var first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(function () {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(function () {\n    lastSourceEvent.current = null;\n  });\n\n  var getNextFocusedChild = function getNextFocusedChild(current, offset) {\n    if (!menuRef.current) return null;\n    var items = qsa(menuRef.current, itemSelector);\n    var index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var key = event.key;\n    var target = event.target; // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    var isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && menuRef.current && menuRef.current.contains(target))) {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          var next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          toggle(event);\n        } else {\n          var _next = getNextFocusedChild(target, 1);\n\n          if (_next && _next.focus) _next.focus();\n        }\n\n        return;\n\n      case 'Escape':\n      case 'Tab':\n        onToggle(false, event);\n        break;\n\n      default:\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(DropdownContext.Provider, {\n    value: context\n  }, children({\n    props: {\n      onKeyDown: handleKeyDown\n    }\n  }));\n}\n\nDropdown.displayName = 'ReactOverlaysDropdown';\nDropdown.propTypes = propTypes;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavContext from './NavContext';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  as: SafeAnchor,\n  disabled: false\n};\nvar DropdownItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      onClick = _ref.onClick,\n      onSelect = _ref.onSelect,\n      propActive = _ref.active,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"eventKey\", \"disabled\", \"href\", \"onClick\", \"onSelect\", \"active\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  var onSelectCtx = useContext(SelectableContext);\n  var navContext = useContext(NavContext);\n\n  var _ref2 = navContext || {},\n      activeKey = _ref2.activeKey; // TODO: Restrict eventKey to string in v5?\n\n\n  var key = makeEventKey(eventKey, href);\n  var active = propActive == null && key != null ? makeEventKey(activeKey) === key : propActive;\n  var handleClick = useEventCallback(function (event) {\n    // SafeAnchor handles the disabled case, but we handle it here\n    // for other components\n    if (disabled) return;\n    if (onClick) onClick(event);\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n  });\n  return (\n    /*#__PURE__*/\n    // \"TS2604: JSX element type 'Component' does not have any construct or call signatures.\"\n    // @ts-ignore\n    React.createElement(Component, _extends({}, props, {\n      ref: ref,\n      href: href,\n      disabled: disabled,\n      className: classNames(className, prefix, active && 'active', disabled && 'disabled'),\n      onClick: handleClick\n    }), children)\n  );\n});\nDropdownItem.displayName = 'DropdownItem';\nDropdownItem.defaultProps = defaultProps;\nexport default DropdownItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport BaseDropdown from 'react-overlays/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport SelectableContext from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nvar DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nvar DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  defaultProps: {\n    role: 'separator'\n  }\n});\nvar DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nvar defaultProps = {\n  navbar: false\n};\nvar Dropdown = /*#__PURE__*/React.forwardRef(function (pProps, ref) {\n  var _useUncontrolled = useUncontrolled(pProps, {\n    show: 'onToggle'\n  }),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      drop = _useUncontrolled.drop,\n      show = _useUncontrolled.show,\n      className = _useUncontrolled.className,\n      alignRight = _useUncontrolled.alignRight,\n      onSelect = _useUncontrolled.onSelect,\n      onToggle = _useUncontrolled.onToggle,\n      focusFirstItemOnShow = _useUncontrolled.focusFirstItemOnShow,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      _4 = _useUncontrolled.navbar,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, [\"bsPrefix\", \"drop\", \"show\", \"className\", \"alignRight\", \"onSelect\", \"onToggle\", \"focusFirstItemOnShow\", \"as\", \"navbar\"]);\n\n  var onSelectCtx = useContext(SelectableContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  var handleToggle = useEventCallback(function (nextShow, event, source) {\n    if (source === void 0) {\n      source = event.type;\n    }\n\n    if (event.currentTarget === document) source = 'rootClose';\n\n    if (onToggle) {\n      onToggle(nextShow, event, {\n        source: source\n      });\n    }\n  });\n  var handleSelect = useEventCallback(function (key, event) {\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n    handleToggle(false, event, 'select');\n  });\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: handleSelect\n  }, /*#__PURE__*/React.createElement(BaseDropdown, {\n    drop: drop,\n    show: show,\n    alignEnd: alignRight,\n    onToggle: handleToggle,\n    focusFirstItemOnShow: focusFirstItemOnShow,\n    itemSelector: \".\" + prefix + \"-item:not(.disabled):not(:disabled)\"\n  }, function (_ref) {\n    var dropdownProps = _ref.props;\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, dropdownProps, {\n      ref: ref,\n      className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'right' && 'dropright', drop === 'left' && 'dropleft')\n    }));\n  }));\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nDropdown.Divider = DropdownDivider;\nDropdown.Header = DropdownHeader;\nDropdown.Item = DropdownItem;\nDropdown.ItemText = DropdownItemText;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import React from 'react';\nvar DropdownContext = /*#__PURE__*/React.createContext(null);\nexport default DropdownContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport PropTypes from 'prop-types';\nimport React, { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\n\nvar noop = function noop() {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      offset = _options.offset,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? !!context : _options$usePopper;\n  var show = (context == null ? void 0 : context.show) == null ? options.show : context.show;\n  var alignEnd = (context == null ? void 0 : context.alignEnd) == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  var _ref = context || {},\n      drop = _ref.drop,\n      setMenu = _ref.setMenu,\n      menuElement = _ref.menuElement,\n      toggleElement = _ref.toggleElement;\n\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n\n  var _usePopper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    enableEvents: show,\n    offset: offset,\n    flip: flip,\n    arrowElement: arrowElement,\n    popperConfig: popperConfig\n  })),\n      styles = _usePopper.styles,\n      attributes = _usePopper.attributes,\n      popper = _objectWithoutPropertiesLoose(_usePopper, [\"styles\", \"attributes\"]);\n\n  var menu;\n  var menuProps = {\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  };\n  var childArgs = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    close: handleClose\n  };\n\n  if (!shouldUsePopper) {\n    menu = _extends({}, childArgs, {\n      props: menuProps\n    });\n  } else {\n    menu = _extends({}, popper, childArgs, {\n      props: _extends({}, menuProps, attributes.popper, {\n        style: styles.popper\n      }),\n      arrowProps: _extends({\n        ref: attachArrowRef\n      }, attributes.arrow, {\n        style: styles.arrow\n      })\n    });\n  }\n\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !(menu && show)\n  });\n  return menu;\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Menu element. The `props`\n   * argument should spread through to **a component that can accept a ref**.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   alignEnd: boolean,\n   *   close: (?SyntheticEvent) => void,\n   *   placement: Placement,\n   *   update: () => void,\n   *   forceUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Controls the visible state of the menu, generally this is\n   * provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu to the 'end' of it's placement position.\n   * Generally this is provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Override the default event used by RootCloseWrapper.\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref2) {\n  var children = _ref2.children,\n      options = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n  var args = useDropdownMenu(options);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, args.hasShown ? children(args) : null);\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","import PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport DropdownContext from './DropdownContext';\n\nvar noop = function noop() {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\n\nexport function useDropdownToggle() {\n  var _ref = useContext(DropdownContext) || {},\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? false : _ref$show,\n      _ref$toggle = _ref.toggle,\n      toggle = _ref$toggle === void 0 ? noop : _ref$toggle,\n      setToggle = _ref.setToggle;\n\n  return [{\n    ref: setToggle || noop,\n    'aria-haspopup': true,\n    'aria-expanded': !!show\n  }, {\n    show: show,\n    toggle: toggle\n  }];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Toggle element. The `props`\n   * argument should spread through to **a component that can accept a ref**. Use\n   * the `onToggle` argument to toggle the menu open or closed\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   toggle: (show: boolean) => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     aria-haspopup: true\n   *     aria-expanded: boolean\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired\n};\n\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle(_ref2) {\n  var children = _ref2.children;\n\n  var _useDropdownToggle = useDropdownToggle(),\n      props = _useDropdownToggle[0],\n      _useDropdownToggle$ = _useDropdownToggle[1],\n      show = _useDropdownToggle$.show,\n      toggle = _useDropdownToggle$.toggle;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children({\n    show: show,\n    toggle: toggle,\n    props: props\n  }));\n}\n\nDropdownToggle.displayName = 'ReactOverlaysDropdownToggle';\nDropdownToggle.propTypes = propTypes;\n/** @component */\n\nexport default DropdownToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport { useDropdownMenu } from 'react-overlays/DropdownMenu';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport usePopperMarginModifiers from './usePopperMarginModifiers';\nvar alignDirection = PropTypes.oneOf(['left', 'right']);\nexport var alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n})]);\nvar defaultProps = {\n  align: 'left',\n  alignRight: false,\n  flip: true\n}; // TODO: remove this hack\n\nvar DropdownMenu = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      align = _ref.align,\n      alignRight = _ref.alignRight,\n      rootCloseEvent = _ref.rootCloseEvent,\n      flip = _ref.flip,\n      showProps = _ref.show,\n      renderOnMount = _ref.renderOnMount,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      popperConfig = _ref.popperConfig,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"align\", \"alignRight\", \"rootCloseEvent\", \"flip\", \"show\", \"renderOnMount\", \"as\", \"popperConfig\"]);\n\n  var isNavbar = useContext(NavbarContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n\n  var _usePopperMarginModif = usePopperMarginModifiers(),\n      popperRef = _usePopperMarginModif[0],\n      marginModifiers = _usePopperMarginModif[1];\n\n  var alignClasses = [];\n\n  if (align) {\n    if (typeof align === 'object') {\n      var keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n\n      if (keys.length) {\n        var brkPoint = keys[0];\n        var direction = align[brkPoint]; // .dropdown-menu-right is required for responsively aligning\n        // left in addition to align left classes.\n        // Reuse alignRight to toggle the class below.\n\n        alignRight = direction === 'left';\n        alignClasses.push(prefix + \"-\" + brkPoint + \"-\" + direction);\n      }\n    } else if (align === 'right') {\n      alignRight = true;\n    }\n  }\n\n  var _ref2 = useDropdownMenu({\n    flip: flip,\n    rootCloseEvent: rootCloseEvent,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    popperConfig: _extends({}, popperConfig, {\n      modifiers: marginModifiers.concat((popperConfig == null ? void 0 : popperConfig.modifiers) || [])\n    })\n  }),\n      hasShown = _ref2.hasShown,\n      placement = _ref2.placement,\n      show = _ref2.show,\n      alignEnd = _ref2.alignEnd,\n      close = _ref2.close,\n      menuProps = _ref2.props;\n\n  menuProps.ref = useMergedRefs(popperRef, useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref));\n  if (!hasShown && !renderOnMount) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n    menuProps.close = close;\n    menuProps.alignRight = alignEnd;\n  }\n\n  var style = props.style;\n\n  if (placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = _extends({}, props.style, menuProps.style);\n    props['x-placement'] = placement;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, menuProps, {\n    style: style,\n    className: classNames.apply(void 0, [className, prefix, show && 'show', alignEnd && prefix + \"-right\"].concat(alignClasses))\n  }));\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  // @ts-ignore\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  var warningRef = useCallback(function (refValue) {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, componentName + \" injected a ref to a provided `as` component that resolved to a component instance instead of a DOM element. \" + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      toggle = _ref.toggle,\n      vertical = _ref.vertical,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu, { alignPropType } from './DropdownMenu';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu responsively.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"left\"|\"right\"|{ sm: \"left\"|\"right\" }|{ md: \"left\"|\"right\" }|{ lg: \"left\"|\"right\" }|{ xl: \"left\"|\"right\"} }\n   */\n  menuAlign: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nvar DropdownButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      rootCloseEvent = _ref.rootCloseEvent,\n      variant = _ref.variant,\n      size = _ref.size,\n      menuAlign = _ref.menuAlign,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      id = _ref.id,\n      props = _objectWithoutPropertiesLoose(_ref, [\"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"variant\", \"size\", \"menuAlign\", \"menuRole\", \"renderMenuOnMount\", \"disabled\", \"href\", \"id\"]);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix\n  }, title), /*#__PURE__*/React.createElement(DropdownMenu, {\n    align: menuAlign,\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;"],"sourceRoot":""}