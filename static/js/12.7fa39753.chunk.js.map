{"version":3,"sources":["../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","Components/CustomFormControl.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","Components/ConditionalSelector.js","Components/CharacterSelection.js","Artifact/ArtifactCard.js","Artifact/PercentBadge.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/StatDisplay.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js"],"names":["useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","FloatFormControl","placeholder","onValueChange","disabled","useState","focus","setFocus","type","className","toString","onChange","e","target","parseFloat","onFocus","onBlur","IntFormControl","parseInt","resolveContainerRef","ref","_ref","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","ConditionalSelector","props","conditional","conditionalNum","setConditional","defEle","Array","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","map","condial","i","Fragment","keys","v","stack","tempcount","icon","faCheckSquare","faSquare","CharacterSelectionDropdownList","onSelect","Object","entries","CharacterDatabase","getCharacterDatabase","id","char","Character","getName","characterKey","name","CharacterNameDisplay","flat","locationChar","getCharacter","ArtifactCard","artifactId","artifactObj","forceUpdate","onEdit","onDelete","assumeFull","art","ArtifactDatabase","getArtifact","setKey","slotKey","numStars","level","mainStatKey","substats","location","lock","currentEfficiency","maximumEfficiency","mainStatLevel","assFullColor","mainStatVal","Artifact","getMainStatValue","Stat","getStatUnit","artifactValid","every","sstat","key","rolls","length","equipOnChar","charId","equipArtifactOnChar","border","bg","Header","xs","md","src","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Body","Title","getSetName","stars","getStatName","stat","numRolls","efficiency","effOpacity","statName","toFixed","style","opacity","percent","valid","Footer","Divider","cid","placement","overlay","pointerEvents","updateArtifact","faLock","faLockOpen","Boolean","faEdit","faTrashAlt","PercentBadge","children","badgeColor","isNaN","Math","floor","func","index","React","Children","child","isValidElement","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","createElement","TabContext","Provider","SelectableContext","TabContent","forwardRef","bsPrefix","_ref$as","as","Component","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","_extends","classNames","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","in","displayName","Tab","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","Error","Container","Content","Pane","createContext","useAccordionToggle","contextEventKey","AccordionContext","AccordionToggle","accordionOnClick","AccordionCollapse","Collapse","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","_objectWithoutProperties","source","excluded","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","DisplayStats","statVal","statKey","character","build","editable","otherProps","buildVal","finalStats","buildDiff","originalVal","getStatValueWithOverride","diff","diffText","fixedUnit","hasOverride","Col","StatIconEle","DisplayNewBuildDiff","equippedBuild","newBuild","unit","CharacterArtifactPane","compareAgainstEquipped","artifactConditionals","setState","showOther","setShowOther","artifactsAssumeFull","statKeys","getDisplayStatKeys","displayStatProps","displayNewBuildProps","formulaKeys","getPrintableFormulaStatKeyList","GetDependencies","modifiers","Row","Card","Button","xl","printStat","printFormula","equipArtifacts","artifactIds","Alert","sm","lg","getSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","ConditionalsUtil","getConditionalNum","srcKey","srcKey2","getConditionalStats","forEach","val","conditionalElement","cnum","state","setStateArtifactConditional","Badge","getSetEffectText","getSlotKeys","StatInput","prependEle","defaultValue","restProps","InputGroup","Prepend","Text","Append","undefined","OverlayTrigger","Tooltip","faUndo","CharacterOverviewPane","constellation","setOverride","setConstellation","editLevel","setEditLevel","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","Image","Assets","elements","weaponTypes","getStar","colored","clamp","getLevel","levelKey","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","StatItem","getStatVariant","WeaponStatsCard","title","stats","mkey","modifier","reduce","accu","multiplier","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","refineIndex","conditionalStats","getWeaponConditionalStat","getWeaponConditional","conditionalEle","faQuoteLeft","getWeaponImg","getWeaponRarity","DropdownButton","getWeaponName","reverse","star","arr","Dropdown","ItemText","getWeaponsOfType","filter","rarity","weaponObj","getLevelName","LevelNameData","faGavel","getWeaponPassiveDescription","atk","getWeaponDescription","editingOther","SetEditingOther","additionalKeys","displayStatKeys","push","editStatKeys","otherStatKeys","getElementalKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","CharacterSpecializedStatKey","getStatNameRaw","CharacterTalentPane","dmgMode","ascension","getAscension","skillDisplayProps","ContextAwareToggle","callback","currentEventKey","decoratedOnClick","expanded","faWindowMinimize","faWindowMaximize","ToggleButtonGroup","ToggleButton","href","rel","eleKey","immunityStatKey","elementImmunity","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","autoInfused","ElementToReactionKeys","includes","statsDisplayKeys","ReactionDisplay","tKey","tText","SkillDisplayCard","talentKey","subtitle","getTalent","asc","enabled","onClickTitle","ReactionComponents","superconduct_dmg","electro","cryo","electrocharged_dmg","hydro","overloaded_dmg","pyro","swirl_dmg","anemo","shatter_dmg","information","faQuestionCircle","crystalize_dmg","geo","reactionMode","charEleKey","eleInterArr","Ele","modifiersToFields","mStatKey","basicVal","fixed","statsToFields","talentLimits","header","getTalentLevelKey","talentLvlKey","levelBoost","infuseBtn","getElementalName","tLvl","talentLevelKeys","talentStats","getTalentStats","statsEle","ListGroup","field","FieldDisplay","getTalentImg","getTalentName","Subtitle","getTalentDocument","section","talentText","fields","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","fieldText","fieldVariant","fieldBasic","fieldVal","finalVal","fixedVal","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","CharacterDisplayCard","forceUpdateComponent","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","DatabaseInitAndVerify","characterId","getInitialState","Promise","all","getCharacterDataImport","getWeaponDataImport","getDataImport","then","deepClone","updateCharacter","addCharacter","footer","onClose","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","faTimes","defaultActiveKey","Nav","Link","getCDataObj","talent","skill","initialState","equippedArtifacts","WeaponLevelKeys","auto","burst","defaultProps","ListGroupItem","action","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","horizontal","horizontalVariant","initialBsPrefix","AbstractNav"],"mappings":"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","file":"static/js/12.7fa39753.chunk.js","sourcesContent":["import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst FloatFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseFloat(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\n\r\nconst IntFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseInt(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\nexport {\r\n  FloatFormControl,\r\n  IntFormControl\r\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Character from \"../Character/Character\";\r\nimport CharacterDatabase from \"../Character/CharacterDatabase\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n    <Dropdown.Item key={id} onClick={() => onSelect(id)}>\r\n      <span>\r\n        <div className=\"mb-n2\"><b>{Character.getName(char.characterKey)}</b></div>\r\n        <small>{char.name}</small>\r\n      </span>\r\n    </Dropdown.Item>)\r\n}\r\nfunction CharacterNameDisplay({ id, flat = false }) {\r\n  let locationChar = CharacterDatabase.getCharacter(id)\r\n  if (locationChar) {\r\n    if (flat) {\r\n      return <span><b>{Character.getName(locationChar.characterKey)}</b> <small>{locationChar?.name}</small></span>\r\n    } else {\r\n      return <span>\r\n        <div className=\"mb-n2\"><b>{Character.getName(locationChar.characterKey)}</b></div>\r\n        <small>{locationChar.name}</small>\r\n      </span>\r\n    }\r\n\r\n  } else {\r\n    return <b>Inventory</b>\r\n  }\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n  CharacterNameDisplay\r\n};\r\n\r\n","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport { CharacterNameDisplay, CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, artifactObj, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId && !artifactObj) return null;\r\n  let art = artifactObj ? artifactObj : ArtifactDatabase.getArtifact(artifactId);\r\n  if (!art) return null;\r\n  let { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location = \"\", lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  let mainStatLevel = assumeFull ? numStars * 4 : level\r\n  let assFullColor = assumeFull && level !== numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\r\n  let artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\r\n  const equipOnChar = (charId) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charId)\r\n    forceUpdate?.()\r\n  }\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\r\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let numRolls = stat?.rolls?.length || 0\r\n          let efficiency = stat?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge percent={currentEfficiency} valid={artifactValid}>\r\n          {currentEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge percent={maximumEfficiency} valid={artifactValid}>\r\n          {maximumEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\"><CharacterNameDisplay id={location} /></Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar()}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={cid => equipOnChar(cid)} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><span><CharacterNameDisplay id={location} /></span></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={location}\r\n                  style={location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    art.lock = !lock\r\n                    ArtifactDatabase.updateArtifact(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(lock || location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Col } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\nfunction DisplayStats({ statKey, character, build, editable, ...otherProps }) {\r\n  let buildVal = build?.finalStats?.[statKey] || 0\r\n  let statVal, buildDiff = null\r\n  if (typeof buildVal === \"string\") {\r\n    statVal = <span>{buildVal}</span>\r\n  } else {\r\n    let originalVal = Character.getStatValueWithOverride(character, statKey)\r\n    if (statKey === \"hp_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"hp_base\")\r\n    else if (statKey === \"def_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"def_base\")\r\n    else if (statKey === \"atk_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"atk_character_base\") + Character.getStatValueWithOverride(character, \"atk_weapon\")\r\n\r\n    let diff = buildVal - originalVal\r\n    let diffText = (diff?.toFixed?.(Stat.fixedUnit(statKey)) || diff) + Stat.getStatUnit(statKey)\r\n    if (diff < 0) buildDiff = <span className=\"text-success\">{diffText}</span>\r\n    else if (diff > 0) buildDiff = <span className=\"text-success\"> +{diffText}</span>\r\n\r\n    if (originalVal || !diff) statVal = <span className={editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}>{(originalVal?.toFixed?.(Stat.fixedUnit(statKey)) || originalVal) + Stat.getStatUnit(statKey)}</span>\r\n  }\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className=\"float-right text-right\">{statVal}{buildDiff}</span>\r\n  </Col>\r\n}\r\nconst DisplayNewBuildDiff = ({ statKey, character, equippedBuild, newBuild, editable, ...otherProps }) => {\r\n  let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right ${editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed?.(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed?.(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nexport {\r\n  DisplayStats,\r\n  DisplayNewBuildDiff,\r\n}","import React, { useState } from 'react';\r\nimport { Accordion, Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { DisplayNewBuildDiff, DisplayStats } from '../../Components/StatDisplay';\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from '../../StatDependency';\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState }) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(characterKey)\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  const formulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, statKeys), build?.finalStats?.modifiers)\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Calculations`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ?\r\n                  statKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                  statKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {formulaKeys.map(key => <Col key={key} xs={12} className=\"mt-2\">\r\n                    <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                      <Card.Header className=\"p-2\">\r\n                        {Stat.printStat(key, build.finalStats)}\r\n                      </Card.Header>\r\n                      <Card.Body className=\"p-2\">\r\n                        <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  )}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n              {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Artifact.getSlotKeys().map(slotKey =>\r\n            build.artifactIds[slotKey] ? <Col sm={6} lg={4} key={build.artifactIds[slotKey]} className=\"mb-2\">\r\n              <ArtifactCard artifactId={build.artifactIds[slotKey]} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport { DisplayNewBuildDiff, DisplayStats } from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"char_level\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={(val) => setOverride(\"char_level\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"char_level\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction StatItem({ statKey, val }) {\r\n  if (!statKey) return null\r\n  return <Col xs={12} lg={6} className=\"px-3\">\r\n    <span><b>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</b></span>\r\n    <span className={`float-right text-right text-${Stat.getStatVariant(statKey)}`} >{val?.toFixed?.(Stat.fixedUnit(statKey)) || val}{Stat.getStatUnit(statKey)}</span>\r\n  </Col>\r\n}\r\nfunction WeaponStatsCard({ title, stats = {}, finalStats = {} }) {\r\n  if (Object.keys(stats ?? {}).length === 0) return null\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <Card.Body className=\"py-2 px-0\"><Row>\r\n      {Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? <React.Fragment key={key} >{Object.entries(val ?? {}).map(([mkey, modifier]) =>\r\n        <StatItem key={mkey} statKey={mkey} val={Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0)} />)}</React.Fragment>\r\n        : <StatItem key={key} statKey={key} val={val} />)}\r\n    </Row></Card.Body>\r\n  </Card>\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon = {} }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex, undefined)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum, undefined)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats, character)}</p>\r\n            <WeaponStatsCard title={\"Main Stats\"} stats={{ atk: weaponDisplayMainVal, [subStatKey]: weaponDisplaySubVal }} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Bonus Stats\"} stats={weaponBonusStats} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Conditional Stats\"} stats={conditionalStats} finalStats={build?.finalStats} />\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  let { editable, character, character: { compareAgainstEquipped }, setOverride, equippedBuild, newBuild } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  let additionalKeys = [\"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const displayStatKeys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp_base\", \"hp\", \"hp_\", \"atk_character_base\", \"atk\", \"atk_\", \"def_base\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\", \"skill_crit_rate\", \"burst_crit_rate\", \"all_dmg_bonus\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              displayStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              displayStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              otherStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ?\r\n            miscStatkeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n            miscStatkeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n","import { faCheckSquare, faQuestionCircle, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, ToggleButton, ToggleButtonGroup, Tooltip } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation, dmgMode }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  //choose which one to display stats for\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button\r\n        // style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"norm_atk\", \"char_atk\", \"plunge\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(Character.getTalentStatKey(\"char_atk\", character, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    //show elemental interactions\r\n    keys.push(...(ElementToReactionKeys[Character.getElementalKey(characterKey)] || []))\r\n    let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n\r\n    //search for dependency\r\n    return Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, keys), build?.finalStats?.modifiers)\r\n  }\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <Accordion>\r\n        <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Options</span>\r\n                <small>Expand below to edit enemy details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ToggleButtonGroup type=\"radio\" value={dmgMode} name=\"dmgOptions\" onChange={(dmgMode) => setState({ dmgMode })}>\r\n                  <ToggleButton value=\"avg_dmg\">Avg. DMG</ToggleButton>\r\n                  <ToggleButton value=\"dmg\">Normal Hit, No Crit</ToggleButton>\r\n                  <ToggleButton value=\"crit_dmg\">Crit Hit DMG</ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Row className=\"mb-2\"><Col>\r\n                <Button variant=\"warning\" >\r\n                  <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                    To get the specific resistance values of enemies, please visit the wiki.\r\n                  </a>\r\n                </Button >\r\n              </Col></Row>\r\n              <Row>\r\n                <Col xs={12} xl={6} className=\"mb-2\">\r\n                  <StatInput\r\n                    name={<b>Enemy Level</b>}\r\n                    value={Character.getStatValueWithOverride(character, \"enemy_level\")}\r\n                    placeholder={Stat.getStatNameRaw(\"enemy_level\")}\r\n                    defaultValue={Character.getBaseStatValue(character, \"enemy_level\")}\r\n                    onValueChange={(val) => setOverride(\"enemy_level\", val)}\r\n                  />\r\n                </Col>\r\n                {[\"physical\", ...Character.getElementalKeys()].map(eleKey => {\r\n                  let statKey = eleKey === \"physical\" ? \"enemy_phy_res\" : `${eleKey}_enemy_ele_res`\r\n                  let immunityStatKey = eleKey === \"physical\" ? \"enemy_phy_immunity\" : `${eleKey}_enemy_ele_immunity`\r\n                  let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                  return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                        <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                      name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                      value={Character.getStatValueWithOverride(character, statKey)}\r\n                      placeholder={Stat.getStatNameRaw(statKey)}\r\n                      defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                      onValueChange={(val) => setOverride(statKey, val)}\r\n                      disabled={elementImmunity}\r\n                    />\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Formulas</span>\r\n                <small>Expand below to see calculation details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n              <Row>\r\n                {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\r\n                  <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                    <Card.Header className=\"p-2\">\r\n                      {Stat.printStat(key, build.finalStats)}\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-2\">\r\n                      <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                )}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {Character.getTalent(characterKey, \"sprint\", false) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_dmg: SuperConductCard,\r\n  electrocharged_dmg: ElectroChargedCard,\r\n  overloaded_dmg: OverloadedCard,\r\n  swirl_dmg: SwirlCard,\r\n  shatter_dmg: ShatteredCard,\r\n  crystalize_dmg: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey, reactionMode = \"none\" }, newBuild, equippedBuild, setState }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let charEleKey = Character.getElementalKey(characterKey)\r\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shatter_dmg\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shatter_dmg\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row>\r\n        <Col ><Row className=\"mb-n2\">\r\n          {eleInterArr.map(key => {\r\n            let Ele = ReactionComponents[key]\r\n            if (!Ele) return null\r\n            let val = build?.finalStats?.[key]\r\n            val = val?.toFixed?.(Stat.fixedUnit(key)) || val\r\n            return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele value={val} /></Col>\r\n          })}\r\n        </Row></Col>\r\n        <Col xs=\"auto\">\r\n          {[\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup\r\n            type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setState({ reactionMode: val === \"none\" ? null : val })}>\r\n            <ToggleButton className=\"p-2\" value={\"none\"}> <h6>No Elemental</h6> <h6>Interactions</h6></ToggleButton >\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Vaporize(Pyro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Pyro)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"hydro\" && <ToggleButton className=\"p-2\" value={\"hydro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Vaporize(Hydro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"cryo\" && <ToggleButton className=\"p-2\" value={\"cryo_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Cryo)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n          </ToggleButtonGroup>}\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"superconduct_dmg\")}</h5>\r\n    <h4 className=\"text-superconduct mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"electrocharged_dmg\")}</h5>\r\n    <h4 className=\"text-electrocharged mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"overloaded_dmg\")}</h5>\r\n    <h4 className=\"text-overloaded mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction SwirlCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"swirl_dmg\")}</h5>\r\n    <h4 className=\"text-swirl mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ value }) {\r\n  let information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"shatter_dmg\")}</h5>\r\n    <h4 className=\"text-shatter mb-0\">\r\n      <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"crystalize_dmg\")}</h5>\r\n    <h4 className=\"text-crystalize mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\n\r\nfunction modifiersToFields(modifiers, finalStats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    value: Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0),\r\n    basicVal: <span>{Object.entries(modifier ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, finalStats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey)\r\n  }))\r\n}\r\nfunction statsToFields(stats, finalStats = {}) {\r\n  return Object.entries(stats).map(([statKey, statVal]) =>\r\n    statKey === \"modifiers\" ? modifiersToFields(statVal, finalStats) : { text: Stat.getStatName(statKey), variant: Stat.getStatVariant(statKey), value: statVal, fixed: Stat.fixedUnit(statKey) }\r\n  ).flat()\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let { talentLvlKey = undefined, levelBoost = 0 } = Character.getTalentLevelKey(character, talentKey, constellation, true)\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n  if (typeof talentLvlKey === \"number\") {\r\n    if (editable) {\r\n      let setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        let talentLevelKeys = state.talentLevelKeys || {}\r\n        talentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  const statsEle = talentStats && <Row><Col>\r\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {statsToFields(talentStats, build?.finalStats).map((field, i) =>\r\n          <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            let conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            conditionalFields = [...Character.getTalentConditionalFields(conditional, conditionalNum, []), ...statsToFields(conditionalStats, build?.finalStats)]\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Col xs={12}>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i} index={i} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        }\r\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\r\n          <div className=\"mb-2\">{talentText}</div>\r\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n        </Col>{conditionalEle}</Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay({ character, character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldVariant = field.variant || \"\"\r\n  if (typeof fieldVariant === \"function\")\r\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldBasic = field.basicVal\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats, character)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = field.value ? field.value : field.finalVal\r\n  if (typeof fieldVal === \"function\")\r\n    fieldVal = fieldVal?.(talentLvlKey, build.finalStats, character)\r\n  let fixedVal = field.fixed || 0\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.finalVal\r\n\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats, character)?.toFixed?.(fixedVal))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) || fieldVal}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}\r\n","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterId)\r\n      this.state = CharacterDatabase.getCharacter(props.characterId)\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    dmgMode: \"dmg\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey), reactionMode: null, autoInfused: false })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.characterId && this.state.id !== this.props.characterId)\r\n      this.setState(CharacterDatabase.getCharacter(this.props.characterId))\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"char_level\")}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && (Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\"}>Talents {(Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\" && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} setState={this.setSetState} setOverride={this.setOverride} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;"],"sourceRoot":""}