{"version":3,"sources":["../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/Alert.js","Util/TimeUtil.js","Planner/PlannerDisplay.js"],"names":["propTypes","label","PropTypes","string","isRequired","onClick","func","CloseButton","React","forwardRef","_ref","ref","className","props","_objectWithoutPropertiesLoose","createElement","_extends","type","classNames","displayName","defaultProps","DivStyledAsH4","divWithClassName","AlertHeading","createWithBsPrefix","Component","AlertLink","SafeAnchor","show","transition","Fade","closeLabel","Alert","uncontrolledProps","_useUncontrolled","useUncontrolled","bsPrefix","children","variant","onClose","dismissible","prefix","useBootstrapPrefix","handleClose","useEventCallback","e","Transition","alert","role","undefined","unmountOnExit","in","Link","Heading","timeString","ms","milliseconds","seconds","Math","floor","minutes","hours","msToUnits","timeText","strPadLeft","SECOND_MS","HOUR_MS","PlannerDisplay","Container","TeyvatTime","EXPCalc","RESIN_MAX","RESIN_RECH_MS","ResinCounter","setResin","resin","setState","state","newState","parseInt","resinIncrement","clearTimeout","date","Date","getTime","setInterval","savedState","loadFromLocalStorage","now","resinToMax","resinSinceLastDate","min","this","nextDelta","setTimeout","updateTimer","forceUpdate","clearInterval","deepClone","saveToLocalStorage","nextResinDateNum","resinFullDate","nextDeltaString","abs","Card","bg","text","Header","Image","src","Assets","fragile","Body","Row","Col","xs","style","fontSize","height","size","value","max","width","onChange","target","ButtonGroup","Button","disabled","toLocaleTimeString","toLocaleDateString","timeZones","useState","Object","keys","timeZoneKey","setTimeZoneKey","time","setTime","useEffect","interval","setSecondTimeout","resetTime","getUTCHours","setUTCHours","remaningTimeMs","remainingResetString","icon","faClock","DropdownButton","title","map","zoneKey","Dropdown","Item","timeZone","toDateString","books","advice","name","exp","cost","img","exp_books","experience","wit","levelExp","milestone","setAdvice","setExperience","setWit","bookState","setBookState","goUnder","setGoUnder","level","setLevel","curExp","setCurExp","mora","setMora","lsBookState","setBookStates","entries","forEach","key","val","milestoneLvl","find","lvl","expReq","i","length","bookResult","c20000","c5000","c1000","required","current","ceil","r20000","r5000","r1000","calculateBooks","numWit","numExperience","numAdvice","bookResultObj","expFromBooks","moraCost","expDiff","finalMora","finalExp","finalLvl","invalidText","md","InputGroup","Prepend","Text","onValueChange","clamp","Append","bookKey","bookObj","lg","BookDisplay","setValue","Footer","Boolean","rounded"],"mappings":"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","file":"static/js/12.36b6ecc2.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nvar propTypes = {\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n};\nvar defaultProps = {\n  label: 'Close'\n};\nvar CloseButton = React.forwardRef(function (_ref, ref) {\n  var label = _ref.label,\n      onClick = _ref.onClick,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"label\", \"onClick\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"button\", _extends({\n    ref: ref,\n    type: \"button\",\n    className: classNames('close', className),\n    onClick: onClick\n  }, props), /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, label));\n});\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport SafeAnchor from './SafeAnchor';\nvar DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nvar AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nvar AlertLink = createWithBsPrefix('alert-link', {\n  Component: SafeAnchor\n});\nvar defaultProps = {\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nvar Alert = React.forwardRef(function (uncontrolledProps, ref) {\n  var _useUncontrolled = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  }),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      show = _useUncontrolled.show,\n      closeLabel = _useUncontrolled.closeLabel,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      variant = _useUncontrolled.variant,\n      onClose = _useUncontrolled.onClose,\n      dismissible = _useUncontrolled.dismissible,\n      transition = _useUncontrolled.transition,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, [\"bsPrefix\", \"show\", \"closeLabel\", \"className\", \"children\", \"variant\", \"onClose\", \"dismissible\", \"transition\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  var handleClose = useEventCallback(function (e) {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  var Transition = transition === true ? Fade : transition;\n  var alert = /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: \"alert\"\n  }, Transition ? props : undefined, {\n    ref: ref,\n    className: classNames(className, prefix, variant && prefix + \"-\" + variant, dismissible && prefix + \"-dismissible\")\n  }), dismissible && /*#__PURE__*/React.createElement(CloseButton, {\n    onClick: handleClose,\n    label: closeLabel\n  }), children);\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/React.createElement(Transition, _extends({\n    unmountOnExit: true\n  }, props, {\n    ref: undefined,\n    in: show\n  }), alert);\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nAlert.Link = AlertLink;\nAlert.Heading = AlertHeading;\nexport default Alert;","import { strPadLeft } from \"./Util\"\r\n\r\nfunction msToUnits(ms) {\r\n  let milliseconds = ms % 1000\r\n  let seconds = Math.floor((ms / 1000) % 60)\r\n  let minutes = Math.floor((ms / (1000 * 60)) % 60)\r\n  let hours = Math.floor((ms / (1000 * 60 * 60)))\r\n  return { hours, minutes, seconds, milliseconds }\r\n}\r\nfunction timeString(ms) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds } = msToUnits(ms, \"hours\")\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)} ${timeText}`;\r\n\r\n}\r\nexport {\r\n  msToUnits,\r\n  timeString\r\n}","import { faClock } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Alert, Button, ButtonGroup, Card, Col, Container, Dropdown, DropdownButton, Image, InputGroup, Row } from \"react-bootstrap\";\r\nimport Assets from '../Assets/Assets';\r\nimport { IntFormControl } from '../Components/CustomFormControl';\r\nimport { timeString } from '../Util/TimeUtil';\r\nimport { clamp, deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\n\r\nconst SECOND_MS = 1000\r\nconst MINUTE_MS = 60 * SECOND_MS\r\nconst HOUR_MS = 60 * MINUTE_MS\r\nconst DAY_MS = 24 * HOUR_MS\r\n\r\nexport default function PlannerDisplay(props) {\r\n  return <Container className=\"mb-2\">\r\n    <TeyvatTime />\r\n    <ResinCounter />\r\n    <EXPCalc />\r\n  </Container>\r\n}\r\n\r\nconst RESIN_MAX = 160\r\nconst RESIN_RECH_MS = 8 * MINUTE_MS\r\nclass ResinCounter extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    let savedState = loadFromLocalStorage(\"resinInfo\")\r\n    if (savedState) this.state = savedState\r\n    else {\r\n      this.state = {\r\n        resin: 100,\r\n        date: new Date().getTime(),\r\n      }\r\n    }\r\n    let { resin, date } = this.state\r\n    //catch up date.\r\n    if (resin < RESIN_MAX && (Date.now() - date) > RESIN_RECH_MS) {\r\n      let resinToMax = RESIN_MAX - resin\r\n      let resinSinceLastDate = Math.min(Math.floor((Date.now() - date) / (RESIN_RECH_MS)), resinToMax)\r\n      resin += resinSinceLastDate\r\n      date += resinSinceLastDate * RESIN_RECH_MS\r\n      this.state.resin = resin\r\n      this.state.date = date\r\n    }\r\n  }\r\n  setResin = (resin) => this.setState(state => {\r\n    resin = parseInt(resin) || 0\r\n    // resin = clamp(resin, 0, RESIN_MAX)//allow for resin over the cap, \r\n    let newState = { resin }\r\n    if (resin >= RESIN_MAX) {\r\n      this.resinIncrement && clearTimeout(this.resinIncrement)\r\n      this.resinIncrement = 0\r\n      if (state.resin < RESIN_MAX) newState.date = new Date().getTime()//store the date as the full resin time\r\n    } else {\r\n      this.resinIncrement && clearTimeout(this.resinIncrement)\r\n      this.resinIncrement = setInterval(() => this.setResin(this.state.resin + 1), RESIN_RECH_MS);\r\n      newState.date = new Date().getTime()\r\n    }\r\n    return newState\r\n  });\r\n  componentDidMount() {\r\n    let { resin, date } = this.state\r\n    if (resin < RESIN_MAX) {\r\n      let nextResinDateNum = date + RESIN_RECH_MS;\r\n      let nextDelta = nextResinDateNum - new Date();\r\n      this.resinIncrement = setTimeout(() => {\r\n        this.setResin(this.state.resin + 1)\r\n      }, nextDelta);\r\n    }\r\n    this.updateTimer = setInterval(() => this.forceUpdate(), SECOND_MS)\r\n  }\r\n  componentWillUnmount() {\r\n    this.updateTimer && clearInterval(this.updateTimer)\r\n    this.resinIncrement && clearTimeout(this.resinIncrement)\r\n  }\r\n  componentDidUpdate() {\r\n    let state = deepClone(this.state)\r\n    saveToLocalStorage(\"resinInfo\", state)\r\n  }\r\n  render() {\r\n    let { resin, date } = this.state\r\n    let nextResinDateNum = resin >= RESIN_MAX ? date : date + RESIN_RECH_MS;\r\n\r\n    let resinFullDateNum = resin >= RESIN_MAX ? date : (date + (RESIN_MAX - resin) * RESIN_RECH_MS)\r\n    let resinFullDate = new Date(resinFullDateNum)\r\n\r\n    let nextDeltaString = timeString(Math.abs(nextResinDateNum - Date.now()))\r\n\r\n    return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2\">\r\n      <Card.Header>\r\n        <Image src={Assets.resin.fragile} className=\"thumb-small d-inline my-n1 ml-n2\" /><span>Resin Counter</span>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row>\r\n          <Col xs=\"auto\" className=\"px-3\">\r\n            <span style={{ fontSize: \"4em\" }}>\r\n              <Image src={Assets.resin.fragile} className=\"d-inline w-auto mt-n3 ml-n3 mr-n4\" style={{ height: \"1.5em\" }} />\r\n              <input type=\"number\" className=\"invisible-input hide-appearance text-white mb-0 text-right\" size=\"4\" value={resin} min={0} max={999} style={{ width: \"2.1em\" }} onChange={(e => this.setResin(e.target.value))} />/{RESIN_MAX}\r\n            </span>\r\n          </Col>\r\n          <Col>\r\n            <ButtonGroup className=\"w-100 d-flex mb-2\">\r\n              <Button onClick={() => this.setResin(0)} disabled={resin === 0}>0</Button>\r\n              <Button onClick={() => this.setResin(resin - 1)} disabled={resin === 0}>-1</Button>\r\n              <Button onClick={() => this.setResin(resin - 20)} disabled={resin < 20}>-20</Button>\r\n              <Button onClick={() => this.setResin(resin - 40)} disabled={resin < 40}>-40</Button>\r\n              <Button onClick={() => this.setResin(resin - 60)} disabled={resin < 60}>-60</Button>\r\n              <Button onClick={() => this.setResin(resin + 1)}>+1</Button>\r\n              <Button onClick={() => this.setResin(resin + 60)}>+60</Button>\r\n              <Button onClick={() => this.setResin(RESIN_MAX)} disabled={resin === RESIN_MAX}>MAX {RESIN_MAX}</Button>\r\n            </ButtonGroup>\r\n            <h5>{resin < RESIN_MAX ? <span>Next resin in {nextDeltaString}, full Resin at {resinFullDate.toLocaleTimeString()} {resinFullDate.toLocaleDateString()}</span> :\r\n              <span>Resin has been full for at least {nextDeltaString}, since {resinFullDate.toLocaleTimeString()} {resinFullDate.toLocaleDateString()}</span>}</h5>\r\n          </Col>\r\n          <small>Because we do not provide a mechanism to synchronize resin time, actual resin recharge time might be as much as 8 minutes earlier than predicted.</small>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  }\r\n}\r\n\r\nconst timeZones = {\r\n  \"America\": - 5 * HOUR_MS,\r\n  \"Europe\": HOUR_MS,\r\n  \"Asia\": 8 * HOUR_MS,\r\n  \"TW, HK, MO\": 8 * HOUR_MS,\r\n}\r\nfunction TeyvatTime(props) {\r\n  let [timeZoneKey, setTimeZoneKey] = useState(Object.keys(timeZones)[0])\r\n  let [time, setTime] = useState(new Date(Date.now() + timeZones[timeZoneKey]))\r\n  //load from localstorage\r\n  useEffect(() => setTimeZoneKey(loadFromLocalStorage(\"server_timezone\") || Object.keys(timeZones)[0]), [])\r\n  //set a timer. timer resets when timezone is changed.\r\n  useEffect(() => {\r\n    let setSecondTimeout = () => {\r\n      setTime(new Date(Date.now() + timeZones[timeZoneKey]))\r\n      return setTimeout(() => {\r\n        interval = setSecondTimeout()\r\n      }, SECOND_MS - (Date.now() % SECOND_MS));\r\n    }\r\n    let interval = setSecondTimeout()\r\n    saveToLocalStorage(\"server_timezone\", timeZoneKey)\r\n    return () => clearTimeout(interval)\r\n  }, [timeZoneKey])\r\n\r\n  let resetTime = new Date(time)\r\n  if (resetTime.getUTCHours() < 4) {\r\n    resetTime.setUTCHours(4, 0, 0, 0)\r\n  } else {\r\n    resetTime = new Date(resetTime.getTime() + DAY_MS)\r\n    resetTime.setUTCHours(4, 0, 0, 0)\r\n  }\r\n  let remaningTimeMs = resetTime.getTime() - time.getTime()\r\n  let remainingResetString = timeString(remaningTimeMs)\r\n\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col xs=\"auto\">\r\n          <h5 className=\"d-inline\"><FontAwesomeIcon icon={faClock} className=\"fa-fw mr-2\" /></h5><span>Teyvat Time</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <DropdownButton title={timeZoneKey}>\r\n            {Object.keys(timeZones).map(zoneKey =>\r\n              <Dropdown.Item key={zoneKey} onClick={() => setTimeZoneKey(zoneKey)} >{zoneKey}</Dropdown.Item>)}\r\n          </DropdownButton>\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"d-flex justify-content-center\">\r\n        <Col xs=\"auto\" className=\"px-3\">\r\n          <span style={{ fontSize: \"4em\" }} className=\"d-block\">\r\n            {time.toLocaleTimeString([], { timeZone: \"UTC\" })}\r\n          </span>\r\n\r\n        </Col>\r\n        <Col xs=\"auto \">\r\n          <div className=\"h-100 d-flex flex-column\">\r\n            <div xs={12} className=\"flex-grow-1\">Server Date: <b>{time.toDateString()}</b></div>\r\n            <div xs={12} className=\"flex-grow-1\">Time until reset: <b>{remainingResetString}</b></div>\r\n            <div xs={12} className=\"flex-grow-1\">Resin until reset: <b>{Math.floor(remaningTimeMs / (8 * MINUTE_MS))}</b></div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nconst books = {\r\n  advice: {\r\n    name: \"Wanderer's Advice\",\r\n    exp: 1000,\r\n    cost: 200,\r\n    img: Assets.exp_books.advice\r\n  },\r\n  experience: {\r\n    name: \"Adventurer's Experience\",\r\n    exp: 5000,\r\n    cost: 1000,\r\n    img: Assets.exp_books.experience\r\n  },\r\n  wit: {\r\n    name: \"Hero's Wit\",\r\n    exp: 20000,\r\n    cost: 4000,\r\n    img: Assets.exp_books.wit\r\n  },\r\n}\r\n\r\n\r\nconst levelExp = [0, 1000, 1325, 1700, 2150, 2625, 3150, 3725, 4350, 5000, 5700, 6450, 7225, 8050, 8925, 9825, 10750, 11725, 12725, 13775, 14875, 16800, 18000, 19250, 20550, 21875, 23250, 24650, 26100, 27575, 29100, 30650, 32250, 33875, 35550, 37250, 38975, 40750, 42575, 44425, 46300, 50625, 52700, 54775, 56900, 59075, 61275, 63525, 65800, 68125, 70475, 76500, 79050, 81650, 84275, 86950, 89650, 92400, 95175, 98000, 100875, 108950, 112050, 115175, 118325, 121525, 124775, 128075, 131400, 134775, 138175, 148700, 152375, 156075, 159825, 163600, 167425, 171300, 175225, 179175, 183175, 216225, 243025, 273100, 306800, 344600, 386950, 434425, 487625, 547200]\r\nconst milestone = [20, 40, 50, 60, 70, 80, 90]\r\nfunction EXPCalc(props) {\r\n  let [advice, setAdvice] = useState(0)\r\n  let [experience, setExperience] = useState(0)\r\n  let [wit, setWit] = useState(0)\r\n  let bookState = { advice, experience, wit }\r\n  let setBookState = { advice: setAdvice, experience: setExperience, wit: setWit }\r\n  let [goUnder, setGoUnder] = useState(false)\r\n  let [level, setLevel] = useState(1)\r\n  let [curExp, setCurExp] = useState(0)\r\n  let [mora, setMora] = useState(0)\r\n\r\n  //load mora from localStorage\r\n  useEffect(() => setMora(loadFromLocalStorage(\"mora\") || 0), [])\r\n  //save mora to localStorage\r\n  useEffect(() => {\r\n    saveToLocalStorage(\"mora\", mora)\r\n  }, [mora])\r\n\r\n  //load mora from localStorage\r\n  useEffect(() => setLevel(loadFromLocalStorage(\"exp_calc_level\") || 1), [])\r\n  //save mora to localStorage\r\n  useEffect(() => {\r\n    saveToLocalStorage(\"exp_calc_level\", level)\r\n  }, [level])\r\n\r\n  //load mora from localStorage\r\n  useEffect(() => setCurExp(loadFromLocalStorage(\"exp_calc_cur_exp\") || 0), [])\r\n  //save mora to localStorage\r\n  useEffect(() => {\r\n    saveToLocalStorage(\"exp_calc_cur_exp\", curExp)\r\n  }, [curExp])\r\n\r\n  //load exp_books from localStorage\r\n  useEffect(() => {\r\n    let lsBookState = loadFromLocalStorage(\"exp_books\") || {}\r\n    let setBookStates = { advice: setAdvice, experience: setExperience, wit: setWit }\r\n    Object.entries(lsBookState).forEach(([key, val]) => setBookStates[key]?.(val))\r\n  }, [])\r\n  //save exp_books to localStorage\r\n  useEffect(() =>\r\n    saveToLocalStorage(\"exp_books\", { advice, experience, wit }), [advice, experience, wit])\r\n\r\n  let milestoneLvl = milestone.find(lvl => lvl > level)\r\n  let expReq = -curExp\r\n  for (let i = level; i < Math.min(milestoneLvl, levelExp.length); i++)  expReq += levelExp[i]\r\n  let bookResult = calculateBooks(wit, experience, advice, expReq, goUnder) || []\r\n  let [numWit = 0, numExperience = 0, numAdvice = 0] = bookResult\r\n  let bookResultObj = { advice: numAdvice, experience: numExperience, wit: numWit }\r\n  let expFromBooks = numWit * 20000 + numExperience * 5000 + numAdvice * 1000\r\n  let moraCost = expFromBooks / 5\r\n  let expDiff = expReq - expFromBooks\r\n  let finalMora = mora - moraCost\r\n  let finalExp = expFromBooks + curExp\r\n  let finalLvl = level\r\n  for (; finalLvl < Math.min(milestoneLvl, levelExp.length); finalLvl++) {\r\n    if (levelExp[finalLvl] <= finalExp) finalExp -= levelExp[finalLvl]\r\n    else break;\r\n  }\r\n  if (finalLvl === milestoneLvl) finalExp = 0\r\n\r\n  let invalidText = \"\"\r\n\r\n  if (finalMora < 0)\r\n    invalidText = <span>You don't have enough <b>Mora</b> for this operation.</span>\r\n  else if (bookResult.length === 0)\r\n    invalidText = <span>You don't have enough <b>EXP. books</b> to level to the next milestone.</span>\r\n  else if (level === 90)\r\n    invalidText = \"You are at the maximum level.\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col xs=\"auto\">\r\n          <Image src={books.wit.img} className=\"thumb-small d-inline my-n1 ml-n2\" /><span>Experience Calculator</span>\r\n        </Col>\r\n        <Col>\r\n          <ButtonGroup>\r\n            <Button variant={goUnder ? \"primary\" : \"success\"} disabled={!goUnder} onClick={() => setGoUnder(false)}>Full Level</Button>\r\n            <Button variant={!goUnder ? \"primary\" : \"success\"} disabled={goUnder} onClick={() => setGoUnder(true)}>Don't fully level</Button>\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <span>This calcualtor tries to calculate the amount of exp books required to get to the next milestone level. </span>\r\n          {goUnder ? \"It will try to get as close to the milestone level as possible, so you can grind the rest of the exp without any waste.\" :\r\n            \"It will try to calculate the amount of books needed to minize as much exp loss as possible.\"}\r\n        </Col>\r\n      </Row>\r\n      <Row >\r\n        <Col xs={12} md={4} className=\"mb-2\">\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Current Level</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <IntFormControl\r\n              value={level}\r\n              onValueChange={(val) => setLevel(clamp(val, 0, 90))}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col xs={12} md={8} className=\"mb-2\">\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Current EXP.</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <IntFormControl\r\n              value={curExp}\r\n              onValueChange={(val) => setCurExp(clamp(val, 0, (levelExp[level] || 1) - 1))}\r\n            />\r\n            <InputGroup.Append>\r\n              <InputGroup.Text>/{levelExp[level] || 0}</InputGroup.Text>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n        </Col>\r\n        <Col xs={12} md={4} className=\"mb-2\"><Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Body className=\"py-2\">\r\n            <span>Next Milestone: </span><span className=\"float-right text-right\"><b>{milestoneLvl}</b></span>\r\n          </Card.Body>\r\n        </Card></Col>\r\n        <Col xs={12} md={8} className=\"mb-2\"><Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Body className=\"py-2\">\r\n            <span>EXP. needed to milestone: </span><span className=\"float-right text-right\"><strong>{expFromBooks}</strong> / <b>{expReq}</b></span>\r\n          </Card.Body>\r\n        </Card></Col>\r\n      </Row>\r\n      <Row>\r\n        {Object.entries(books).map(([bookKey, bookObj]) => {\r\n          return <Col xs={12} lg={4} key={bookKey}>\r\n            <BookDisplay bookObj={bookObj} value={bookState[bookKey]} setValue={setBookState[bookKey]} required={bookResultObj[bookKey]} />\r\n          </Col>\r\n        })}\r\n        <Col xs={12} lg={4} className=\"mb-2\">\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Current Mora</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <IntFormControl\r\n              value={mora}\r\n              onValueChange={(val) => setMora(Math.max(val, 0))}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col xs={12} md={4} className=\"mb-2\"><Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Body className=\"py-2\">\r\n            <span>Mora Cost: </span><span className=\"float-right text-right\"><b>{moraCost}</b></span>\r\n          </Card.Body>\r\n        </Card></Col>\r\n        <Col xs={12} md={4} className=\"mb-2\"><Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Body className=\"py-2\">\r\n            <span>EXP {!goUnder ? \"Waste\" : \"Diff\"}: </span><span className=\"float-right text-right\"><b className={expDiff < 0 ? `text-danger` : `text-success`}>{expDiff}</b></span>\r\n          </Card.Body>\r\n        </Card></Col>\r\n        <Col xs={12} md={4} className=\"mb-2\"><Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Body className=\"py-2\">\r\n            <span>Final Mora: </span><span className=\"float-right text-right\"><b className={finalMora < 0 ? `text-danger` : `text-success`}>{finalMora}</b></span>\r\n          </Card.Body>\r\n        </Card></Col>\r\n        <Col xs={12} md={4} className=\"mb-2\"><Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Body className=\"py-2\">\r\n            <span>Final Level: </span><span className=\"float-right text-right\"><b className=\"text-success\">{finalLvl}</b></span>\r\n          </Card.Body>\r\n        </Card></Col>\r\n        <Col xs={12} md={4} className=\"mb-2\"><Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Body className=\"py-2\">\r\n            <span>Final EXP: </span><span className=\"float-right text-right\"><b className={finalExp < 0 ? `text-danger` : `text-success`}>{finalExp}</b></span>\r\n          </Card.Body>\r\n        </Card></Col>\r\n      </Row>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <Row>\r\n        <Col>\r\n          {Boolean(invalidText) && <Alert variant=\"danger\" className=\"mb-0 py-2\">{invalidText}</Alert>}\r\n        </Col>\r\n        <Col xs=\"auto\"><Button disabled={invalidText}\r\n          onClick={() => {\r\n            setLevel(finalLvl)\r\n            setCurExp(finalExp)\r\n            Object.entries(bookResultObj).forEach(([bookKey, val]) => setBookState[bookKey]?.(bookState[bookKey] - val))\r\n            setMora(finalMora)\r\n          }}\r\n          variant=\"success\">Apply</Button></Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>\r\n}\r\nfunction BookDisplay(props) {\r\n  let { bookObj: { name, img }, value = 0, setValue, required = 0 } = props\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>{name}</Card.Header>\r\n    <Card.Body>\r\n      <Row>\r\n        <Col xs={3}><Image src={img} className=\"w-100 h-auto\" rounded /></Col>\r\n        <Col >\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text >Amount</InputGroup.Text >\r\n            </InputGroup.Prepend>\r\n            <IntFormControl\r\n              value={value}\r\n              onValueChange={(val) => setValue(Math.max(val, 0))}\r\n            />\r\n          </InputGroup>\r\n          <div className=\"mt-2\"><span>Required: </span><span className=\"float-right text-right\"><b className={required ? \"text-success\" : \"\"}>{required}</b></span></div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction calculateBooks(c20000, c5000, c1000, required, goUnder) {\r\n  let current = goUnder ? Math.floor(required / 1000) : Math.ceil(required / 1000)\r\n\r\n  let r20000 = Math.min(Math.floor(current / 20), c20000)\r\n  current -= r20000 * 20\r\n  let r5000 = Math.min(Math.floor(current / 5), c5000)\r\n  current -= r5000 * 5\r\n  let r1000 = Math.min(current, c1000)\r\n  current -= r1000\r\n  if (goUnder || current === 0)\r\n    return [r20000, r5000, r1000]\r\n  else if (r5000 === 3 && r20000 !== c20000)\r\n    return [r20000 + 1, 0, 0]\r\n  else if (r5000 !== c5000)\r\n    return [r20000, r5000 + 1, 0]\r\n  else if (r20000 !== c20000)\r\n    return [r20000 + 1, 0, 0]\r\n  return null\r\n}"],"sourceRoot":""}