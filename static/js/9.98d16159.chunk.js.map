{"version":3,"sources":["Weapon/Weapon.js","Data/ArtifactData.js","Assets/Weapons/Swords/Swords.js","Assets/Weapons/Swords/Weapon_Dull_Blade.png","Assets/Weapons/Swords/Weapon_Silver_Sword.png","Assets/Weapons/Swords/Weapon_Cool_Steel.png","Assets/Weapons/Swords/Weapon_Dark_Iron_Sword.png","Assets/Weapons/Swords/Weapon_Fillet_Blade.png","Assets/Weapons/Swords/Weapon_Harbinger_of_Dawn.png","Assets/Weapons/Swords/Weapon_Skyrider_Sword.png","Assets/Weapons/Swords/Weapon_Traveler's_Handy_Sword.png","Assets/Weapons/Swords/Weapon_Blackcliff_Longsword.png","Assets/Weapons/Swords/Weapon_Favonius_Sword.png","Assets/Weapons/Swords/Weapon_Iron_Sting.png","Assets/Weapons/Swords/Weapon_Lion's_Roar.png","Assets/Weapons/Swords/Weapon_Prototype_Rancour.png","Assets/Weapons/Swords/Weapon_Royal_Longsword.png","Assets/Weapons/Swords/Weapon_Sacrificial_Sword.png","Assets/Weapons/Swords/Weapon_The_Alley_Flash.png","Assets/Weapons/Swords/Weapon_The_Black_Sword.png","Assets/Weapons/Swords/Weapon_The_Flute.png","Assets/Weapons/Swords/Weapon_Sword_of_Descension.png","Assets/Weapons/Swords/festering_fang.png","Assets/Weapons/Swords/Weapon_Aquila_Favonia.png","Assets/Weapons/Swords/Weapon_Skyward_Blade.png","Assets/Weapons/Swords/summit_shaper.png","Assets/Weapons/Claymores/Claymores.js","Assets/Weapons/Claymores/Weapon_Waster_Greatsword.png","Assets/Weapons/Claymores/Weapon_Old_Merc's_Pal.png","Assets/Weapons/Claymores/Weapon_Bloodtainted_Greatsword.png","Assets/Weapons/Claymores/Weapon_Debate_Club.png","Assets/Weapons/Claymores/Weapon_Ferrous_Shadow.png","Assets/Weapons/Claymores/Weapon_Quartz.png","Assets/Weapons/Claymores/Weapon_Skyrider_Greatsword.png","Assets/Weapons/Claymores/Weapon_White_Iron_Greatsword.png","Assets/Weapons/Claymores/Weapon_Blackcliff_Slasher.png","Assets/Weapons/Claymores/Weapon_Favonius_Greatsword.png","Assets/Weapons/Claymores/Weapon_Lithic_Blade.png","Assets/Weapons/Claymores/Weapon_Prototype_Aminus.png","Assets/Weapons/Claymores/Weapon_Rainslasher.png","Assets/Weapons/Claymores/Weapon_Royal_Greatsword.png","Assets/Weapons/Claymores/Weapon_Serpent_Spine.png","Assets/Weapons/Claymores/Weapon_The_Bell.png","Assets/Weapons/Claymores/Weapon_Whiteblind.png","Assets/Weapons/Claymores/Weapon_Sacrificial_Greatsword.png","Assets/Weapons/Claymores/snow_tombed_starsilver.png","Assets/Weapons/Claymores/Weapon_Skyward_Pride.png","Assets/Weapons/Claymores/Weapon_Wolf's_Gravestone.png","Assets/Weapons/Claymores/Weapon_The_Unforged.png","Assets/Weapons/Polearms/Polearms.js","Assets/Weapons/Polearms/Weapon_Beginner's_Protector.png","Assets/Weapons/Polearms/Weapon_Iron_Point.png","Assets/Weapons/Polearms/Weapon_Black_Tassel.png","Assets/Weapons/Polearms/Weapon_Halberd.png","Assets/Weapons/Polearms/Weapon_White_Tassel.png","Assets/Weapons/Polearms/Weapon_Blackcliff_Pole.png","Assets/Weapons/Polearms/Weapon_Crescent_Pike.png","Assets/Weapons/Polearms/Weapon_Deathmatch.png","Assets/Weapons/Polearms/Weapon_Dragon's_Bane.png","Assets/Weapons/Polearms/Weapon_Lithic_Spear.png","Assets/Weapons/Polearms/Weapon_Prototype_Grudge.png","Assets/Weapons/Polearms/Weapon_Favonius_Lance.png","Assets/Weapons/Polearms/Weapon_Royal_Spear.png","Assets/Weapons/Polearms/dragonspine_spear.png","Assets/Weapons/Polearms/Weapon_Vortex_Vanquisher.png","Assets/Weapons/Polearms/Weapon_Primordial_Jade_Winged-Spear.png","Assets/Weapons/Polearms/Weapon_Skyward_Spine.png","Assets/Weapons/Bows/Bows.js","Assets/Weapons/Bows/Weapon_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Seasoned_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Ebony_Bow.png","Assets/Weapons/Bows/Weapon_Messenger.png","Assets/Weapons/Bows/Weapon_Raven_Bow.png","Assets/Weapons/Bows/Weapon_Recurve_Bow.png","Assets/Weapons/Bows/Weapon_Sharpshooter's_Oath.png","Assets/Weapons/Bows/Weapon_Slingshot.png","Assets/Weapons/Bows/Weapon_The_Stringless.png","Assets/Weapons/Bows/Weapon_Alley_Hunter.png","Assets/Weapons/Bows/Weapon_Blackcliff_Warbow.png","Assets/Weapons/Bows/Weapon_Compound_Bow.png","Assets/Weapons/Bows/Weapon_Favonius_Warbow.png","Assets/Weapons/Bows/Weapon_Prototype_Crescent.png","Assets/Weapons/Bows/Weapon_Royal_Bow.png","Assets/Weapons/Bows/Weapon_Rust.png","Assets/Weapons/Bows/Weapon_Sacrificial_Bow.png","Assets/Weapons/Bows/Weapon_The_Viridescent_Hunt.png","Assets/Weapons/Bows/Weapon_Skyward_Harp.png","Assets/Weapons/Bows/Weapon_Amos'_Bow.png","Assets/Weapons/Bows/dreams_of_dragonfell.png","Assets/Weapons/Catalysts/Catalysts.js","Assets/Weapons/Catalysts/Weapon_Apprentice's_Notes.png","Assets/Weapons/Catalysts/Weapon_Pocket_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Amber_Catalyst.png","Assets/Weapons/Catalysts/Weapon_Emerald_Orb.png","Assets/Weapons/Catalysts/Weapon_Magic_Guide.png","Assets/Weapons/Catalysts/Weapon_Otherworldly_Story.png","Assets/Weapons/Catalysts/Weapon_Thrilling_Tales_of_Dragon_Slayers.png","Assets/Weapons/Catalysts/Weapon_Twin_Nephrite.png","Assets/Weapons/Catalysts/Weapon_Blackcliff_Amulet.png","Assets/Weapons/Catalysts/Weapon_Favonius_Codex.png","Assets/Weapons/Catalysts/Weapon_Mappa_Mare.png","Assets/Weapons/Catalysts/Weapon_Prototype_Malice.png","Assets/Weapons/Catalysts/Weapon_Royal_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Sacrificial_Fragments.png","Assets/Weapons/Catalysts/Weapon_Solar_Pearl.png","Assets/Weapons/Catalysts/Weapon_The_Widsith.png","Assets/Weapons/Catalysts/Weapon_Wine_and_Song.png","Assets/Weapons/Catalysts/Weapon_Eye_of_Perception.png","Assets/Weapons/Catalysts/Weapon_Frostbearer.png","Assets/Weapons/Catalysts/Weapon_Lost_Prayer_to_the_Sacred_Winds.png","Assets/Weapons/Catalysts/Weapon_Skyward_Atlas.png","Assets/Weapons/Catalysts/Weapon_Memory_of_Dust.png","Assets/Assets.js","Assets/Weapons/Weapons.js","Assets/Element_Anemo.png","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Data/WeaponData.js","DatabaseUtil.js","Components/StatIcon.js","Data/CharacterData.js","../node_modules/react-bootstrap/esm/Badge.js","Character/CharacterCard.js","Character/CharacterDisplay.js","Character/Character.js","Stat.js","Util/Util.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Artifact/ArtifactDatabase.js","Util/ConditionalsUtil.js","Data/ElementalData.js","StatData.js","Components/StarDisplay.js"],"names":["Weapon","this","Error","getWeaponDataImport","WeaponDataImport","getLevelName","levelKey","defVal","LevelNameData","getLevelIndex","WeaponLevelKeys","indexOf","getWeaponName","weaponKey","WeaponData","name","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","refineIndex","charFinalStats","character","passiveDescription","getWeaponDescription","description","getWeaponConditional","conditional","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","getWeaponSubStatKey","subStatKey","getWeaponBonusStat","stats","getWeaponsOfType","weaponType","Object","fromEntries","entries","filter","getWeaponTypeName","WeaponTypeData","getWeaponMainStatValWithOverride","weaponObj","overrideMainVal","key","getWeaponSubStatValWithOverride","overrideSubVal","getWeaponConditionalStat","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","map","ArtifactData","ArtifactDataImport","then","imp","default","ArtifactMainSlotKeys","keys","ElementalData","forEach","push","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","hp","atk","hp_","atk_","def_","phy_dmg_bonus","ele_dmg_bonus","ele_mas","ener_rech","crit_rate","crit_dmg","heal_bonu","2","ArtifactSubStatsData","def","ArtifactSlotsData","flower","plume","sands","goblet","circlet","sword","DullBlade","SilverSword","CoolSteel","DarkIronSword","FilletBlade","HarbingerOfDawn","SkyriderSword","TravelersHandySword","BlackcliffLongsword","FavoniusSword","IronSting","LionsRoar","PrototypeRancour","RoyalLongsword","SacrificialSword","TheAlleyFlash","TheBlackSword","TheFlute","SwordOfDescension","FesteringDesire","AquilaFavonia","SkywardBlade","SummitShaper","claymore","WasterGreatsword","OldMercsPal","BloodtaintedGreatsword","DebateClub","FerrousShadow","Quartz","SkyriderGreatsword","WhiteIronGreatsword","BlackcliffSlasher","FavoniusGreatsword","LithicBlade","PrototypeAminus","Rainslasher","RoyalGreatsword","SerpentSpine","TheBell","Whiteblind","SacrificialGreatsword","SnowTombedStarsilver","SkywardPride","WolfsGravestone","TheUnforged","polearms","BeginnersProtector","IronPoint","BlackTassel","Halberd","WhiteTassel","BlackcliffPole","CrescentPike","Deathmatch","DragonsBane","LithicSpear","PrototypeGrudge","FavoniusLance","RoyalSpear","DragonspineSpear","VortexVanquisher","PrimordialJadeWingedSpear","SkywardSpine","bows","HuntersBow","SeasonedHuntersBow","EbonyBow","Messenger","RavenBow","RecurveBow","SharpshootersOath","Slingshot","TheStringless","AlleyHunter","BlackcliffWarbow","CompoundBow","FavoniusWarbow","PrototypeCrescent","RoyalBow","Rust","SacrificialBow","TheViridescentHunt","SkywardHarp","AmosBow","DreamsOfDragonfell","catalysts","ApprenticesNotes","PocketGrimoire","AmberCatalyst","EmeraldOrb","MagicGuide","OtherworldlyStory","ThrillingTalesOfDragonSlayers","TwinNephrite","BlackcliffAgate","FavoniusCodex","MappaMare","PrototypeMalice","RoyalGrimoire","SacrificialFragments","SolarPearl","TheWidsith","WineAndSong","EyeOfPerception","Frostbearer","LostPrayerToTheSacredWinds","SkywardAtlas","MemoryOfDust","Assets","weapons","swords","claymores","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","polearm","resin","fragile","condensed","exp_books","advice","wit","experience","DatabaseInitAndVerify","localStorage","removeItem","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","values","art","valid","location","getCharacter","keyMapping","setKey","mainStatKey","endsWith","replace","updateArtifact","chars","getCharacterDatabase","equippedArtifacts","slotKey","artid","getArtifact","undefined","artifactConditionals","cond","srcKey","srcKey2","dmgMode","updateCharacter","StatIcon","hp_base","faTint","hp_final","atk_base","faFistRaised","atk_final","def_base","faShieldAlt","def_final","faMagic","faDice","faDiceD20","faSync","faFirstAid","StatIconEle","statKey","icon","className","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","stam","CharacterSpecializedStatKey","Badge","React","forwardRef","_ref","ref","bsPrefix","variant","pill","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","CharacterCard","useReducer","x","forceUpdate","useEffect","Promise","all","Character","getCharacterDataImport","Artifact","getArtifactDataImport","characterId","onEdit","onDelete","build","calculateBuild","setToSlots","characterKey","weapon","constellation","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","weaponName","weaponMainVal","weaponSubKey","weaponSubVal","weaponLevelName","weaponPassiveName","cardClassName","bg","text","Header","header","xs","size","onClick","faEdit","faTrashAlt","Body","style","cursor","src","getThumb","getStar","thumbnail","getName","stars","colored","getStatValueWithOverride","Stat","getStatName","getStatUnit","getArtifactSetEffects","arr","artifactSetName","getArtifactSetName","highestNum","Math","max","unit","statVal","finalStats","toFixed","fixedUnit","footer","Footer","Link","to","pathname","selectedCharacterId","CharacterDisplayCardPromise","CharacterDisplayCard","lazy","CharacterDisplay","deleteCharacter","id","removeCharacter","editCharacter","setState","charIdToEdit","showEditor","scrollRef","current","scrollIntoView","behavior","cancelEditCharacter","state","ReactGA","pageview","createRef","charIdList","getCharacterIdList","Suspense","fallback","editable","onClose","lg","md","faPlus","moveToNewLocation","removeCharacterById","getBaseStatValue","getSpecializedStatKey","getSpeicalizedStatVal","getLevel","includes","characterObj","getCDataObj","baseStat","getIndexFromlevelkey","charKey","getElementalName","elementalKey","getAllCharacterKeys","star","getElementalKeys","getConstellationName","constellationName","getTitles","titles","getlevelKeys","getlevelNames","getAscension","getSpecializedStat","specializeStat","value","thumbImg","getCard","cardImg","getTalentImg","talentKey","talent","img","getConstellationImg","constIndex","getTalentName","getTalentLevelBoost","talents","i","talentBoost","boostEntry","find","getTalentLevelKey","withBoost","talentLvlKey","talentLevelKeys","levelBoost","clamp","getTalentDocument","document","getTalentFields","fields","getTalentStats","ascension","getTalentStatsAll","statsArr","getTalentConditional","conditionalKey","doc","section","tempCond","getTalentConditionalStats","val","getTalentConditionalFields","getTalentStatKey","skillKey","elemental","autoInfused","reactionMode","charEleKey","isAutoElemental","auto","infusable","eleKey","getTalentStatKeyVariant","isAutoInfusable","getDisplayStatKeys","atkKeys","startsWith","ElementToReactionKeys","hasOverride","baseStatOverrides","equipArtifacts","artifactIds","artIdsOnCharacter","artIdsNotOnCharacter","getArtifactSlotKeys","artNotOnChar","artOnChar","notCharLoc","equipArtifact","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","deepClone","getMainStatValue","numStars","artifactsAssumeFull","substats","substat","stat","setNumKey","condStats","getArtifactConditionalStats","AttachLazyFormulas","statKeys","char_ele_key","overrides","hasOwnProperty","specialStatKey","specializedStatVal","addStatsObj","formulaOverrides","talentConditionals","weaponStats","subKey","subVal","bonusStats","conditionalStats","htmlStatsData","StatData","getStatNamePretty","pretty","getStatNameRaw","getStatNameWithPercent","getStatVariant","printStat","f","expand","printFormula","formulaOverride","OverrideFormulas","printOverrideFormula","options","FormulaText","overrideKey","OverrideFormulasText","formulaText","obj","statName","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_dmg","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_dmg","electrocharged_multi","electrocharged","superconduct_dmg","superconduct_multi","superconduct","swirl_dmg","swirl_multi","swirl","shatter_dmg","shatter_multi","shattered","crystalize_dmg","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","trans_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","abs","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","defineProperty","configurable","enumerable","writable","noelle_burst_atk","getRandomElementFromArray","array","floor","random","length","getRandomIntInclusive","min","ceil","loadFromLocalStorage","data","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","closeEnoughFloat","a","b","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","Array","join","slice","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","_createForOfIteratorHelper","allowArrayLike","it","F","s","n","done","e","_e","err","normalCompletion","didErr","step","next","_e2","initiated","characterDatabase","charIdIndex","isInvalid","char","addCharacter","dchar","getArtifactIDFromSlot","charid","unequipArtifactOnSlot","equipArtifactBuild","SlotIcon","faBahai","faFeatherAlt","faHourglass","faWineGlass","faCrown","ArtifactBase","rollData","float","roll","maxNumRoll","round","rollOption","sum","reduce","accu","v","reverse","parseFloat","isNaN","msg","isFloat","getSubstatRollData","rolls","getRolls","totalAllowableRolls","efficiency","currentEfficiency","maximumEfficiency","subStatValidations","validateSubStat","some","currentNumOfRolls","cur","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","totalPossbleUpgrade","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getArtifactSetsByMaxStarEntries","setobj","getArtifactPieceName","pieces","getArtifactPieceIcon","icons","getArtifactSetEffectsObj","sets","getArtifactSlotName","getArtifactSlotIcon","getArtifactSlotNameWithIcon","slotIcon","getRarityArr","getMainStatKeys","getSubStatKeys","numberOfSubstatUnlocked","getArtifactSets","getArtifactSetNumStats","getArtifactSetEffectConditional","artifactSetEffect","artArr","parseInt","setNumKeys","getArtifactSetEffectText","setEffectText","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","hasSetEffect","setEffectObj","getConditionalNum","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","conditionals","srcKeyObj","index","findIndex","splice","newCond","fieldName","selectedConditionalNum","selectedConditional","curConditional","maxStack","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","Formulas","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","reactionName","dmgKey","dmgName","str","atkTypeName","dmgModeName","ele_key","formula","dependency","formulaKeys","overrideFormulaKey","get","StarIcon","faStar","Stars","_"],"mappings":"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,WI1Ba,IAA0B,+CJ2BvCC,cK3Ba,IAA0B,kDL4BvCC,OM5Ba,IAA0B,0CN6BvCC,mBO7Ba,IAA0B,uDP8BvCC,oBQ9Ba,IAA0B,yDR+BvCC,kBS/Ba,IAA0B,sDTgCvCC,mBUhCa,IAA0B,uDViCvCC,YWjCa,IAA0B,gDXkCvCC,gBYlCa,IAA0B,oDZmCvCC,YanCa,IAA0B,+CboCvCC,gBcpCa,IAA0B,oDdqCvCC,aerCa,IAA0B,iDfsCvCC,QgBtCa,IAA0B,4ChBuCvCC,WiBvCa,IAA0B,8CjBwCvCC,sBkBxCa,IAA0B,0DlByCvCC,qBmBzCa,IAA0B,mDnB0CvCC,aoB1Ca,IAA0B,iDpB2CvCC,gBqB3Ca,IAA0B,qDrB4CvCC,YsB5Ca,IAA0B,iDCoC1BC,EAnBE,CACfC,mBClBa,IAA0B,wDDmBvCC,UEnBa,IAA0B,8CFoBvCC,YGpBa,IAA0B,gDHqBvCC,QIrBa,IAA0B,2CJsBvCC,YKtBa,IAA0B,gDLuBvCC,eMvBa,IAA0B,mDNwBvCC,aOxBa,IAA0B,iDPyBvCC,WQzBa,IAA0B,8CR0BvCC,YS1Ba,IAA0B,iDT2BvCC,YU3Ba,IAA0B,gDV4BvCC,gBW5Ba,IAA0B,oDX6BvCC,cY7Ba,IAA0B,kDZ8BvCC,Wa9Ba,IAA0B,+Cb+BvCC,iBc/Ba,IAA0B,8CdgCvCC,iBehCa,IAA0B,qDfiCvCC,0BgBjCa,IAA0B,gEhBkCvCC,aiBlCa,IAA0B,kDC4C1BC,EAvBF,CACXC,WCtBa,IAA0B,gDDuBvCC,mBEvBa,IAA0B,yDFwBvCC,SGxBa,IAA0B,6CHyBvCC,UIzBa,IAA0B,6CJ0BvCC,SK1Ba,IAA0B,6CL2BvCC,WM3Ba,IAA0B,+CN4BvCC,kBO5Ba,IAA0B,uDP6BvCC,UQ7Ba,IAA0B,6CR8BvCC,cS9Ba,IAA0B,kDT+BvCC,YU/Ba,IAA0B,gDVgCvCC,iBWhCa,IAA0B,qDXiCvCC,YYjCa,IAA0B,gDZkCvCC,ealCa,IAA0B,mDbmCvCC,kBcnCa,IAA0B,sDdoCvCC,SepCa,IAA0B,6CfqCvCC,KgBrCa,IAA0B,wChBsCvCC,eiBtCa,IAA0B,mDjBuCvCC,mBkBvCa,IAA0B,wDlBwCvCC,YmBxCa,IAA0B,gDnByCvCC,QoBzCa,IAA0B,6CpB0CvCC,mBqB1Ca,IAA0B,kDC8C1BC,EAxBG,CAChBC,iBCvBa,IAA0B,sDDwBvCC,eExBa,IAA0B,mDFyBvCC,cGzBa,IAA0B,kDH0BvCC,WI1Ba,IAA0B,+CJ2BvCC,WK3Ba,IAA0B,+CL4BvCC,kBM5Ba,IAA0B,sDN6BvCC,8BO7Ba,IAA0B,qEP8BvCC,aQ9Ba,IAA0B,iDR+BvCC,gBS/Ba,IAA0B,qDTgCvCC,cUhCa,IAA0B,kDViCvCC,UWjCa,IAA0B,8CXkCvCC,gBYlCa,IAA0B,oDZmCvCC,canCa,IAA0B,kDboCvCC,qBcpCa,IAA0B,yDdqCvCC,WerCa,IAA0B,+CfsCvCC,WgBtCa,IAA0B,+ChBuCvCC,YiBvCa,IAA0B,iDjBwCvCC,gBkBxCa,IAA0B,qDlByCvCC,YmBzCa,IAA0B,+CnB0CvCC,2BoB1Ca,IAA0B,mEpB2CvCC,aqB3Ca,IAA0B,iDrB4CvCC,asB5Ca,IAA0B,mDCwBrCC,EAAS,CACXC,QCpBW,+DACRC,GACAC,GACAlE,GACAkB,GACAsB,GDgBH2B,SAAU,CAAEC,ME1BC,IAA0B,0CF0BpBC,KG1BN,IAA0B,yCH0BdC,OI1BZ,IAA0B,2CJ0BNC,QK1BpB,IAA0B,4CL0BGC,IM1B7B,IAA0B,wCN0BQC,MO1BlC,IAA0B,0CP0BeC,KQ1BzC,IAA0B,0CR2BvCC,YAAa,CAAEC,IS3BF,IAA0B,kDT2BnBC,SU3BP,IAA0B,uDV2BTpG,SW3BjB,IAA0B,uDX2BCqG,QY3B3B,IAA0B,sDZ2BU7H,Ma3BpC,IAA0B,qDb4BvC8H,MAAO,CACLC,Qc7BW,IAA0B,+Cd8BrCC,Ue9BW,IAA0B,kDfgCvCC,UAAW,CACTC,OgBjCW,IAA0B,mDhBkCrCC,IiBlCW,IAA0B,4CjBmCrCC,WkBnCW,IAA0B,2DlBsC1BtB,O,iCmBtCf,8KAAIlM,EAAa,GACbV,EAAmB,qDACvBA,EAAiBwD,MAAK,SAAAC,GACpB/C,EAAa+C,EAAIC,QACjB1D,EAAmB,QAGrB,IAAMM,EAAkB,CAAC,KAAM,KAAM,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,OAC/LF,EAAgB,CAAE,GAAM,SAAU,GAAM,SAAU,IAAO,UAAW,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,WACjdqC,EAAiB,CACrBqD,MAAO,QACPwB,SAAU,WACVoG,SAAU,WACVD,IAAK,MACLE,QAAS,Y,+FCXX,SAASQ,IAMP,GAJAC,aAAaC,WAAW,oBACxBD,aAAaC,WAAW,qBAGpBC,IAAkBC,mCACpBC,IAAiBD,mCAAoC,CAErD,IAAIE,EAAOD,IAAiBE,sBAC5BtM,OAAOuM,OAAOF,GAAM3K,SAAQ,SAAA8K,GAAQ,IAAD,IAC7BC,GAAQ,EACRD,EAAIE,WAAaR,IAAkBS,aAAaH,EAAIE,YACtDF,EAAIE,SAAW,GACfD,GAAQ,GAGV,IAAIG,EAAa,CACf,oBAAqB,kBACrB,sBAAuB,qBACvB,kBAAmB,iBACnB,mBAAoB,kBACpB,kBAAmB,iBACnB,iBAAkB,gBAClB,qBAAsB,mBACtB,0BAA2B,uBAC3B,wBAAyB,uBACzB,gBAAiB,eACjB,cAAe,aACf,eAAgB,cAChB,kBAAmB,gBACnB,iBAAkB,gBAClB,0BAA2B,wBAC3B,YAAa,WACb,mBAAoB,kBACpB,YAAa,WACb,oBAAqB,mBACrB,wBAAyB,sBACzB,0BAA2B,yBAC3B,qBAAsB,qBAEpBA,EAAWJ,EAAIK,UACjBL,EAAIK,OAASD,EAAWJ,EAAIK,QAC5BJ,GAAQ,IAGV,OAAID,QAAJ,IAAIA,GAAJ,UAAIA,EAAKM,mBAAT,iBAAI,EAAkBC,gBAAtB,aAAI,SAA6B,cAC/BP,EAAIM,YAAcN,EAAIM,YAAYE,QAAQ,UAAW,iBACrDP,GAAQ,GAGe,aAAlB,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKM,eACPN,EAAIM,YAAc,gBAClBL,GAAQ,GAELA,GACHL,IAAiBa,eAAeT,MAGpC,IAAIU,EAAQhB,IAAkBiB,uBAC9BnN,OAAOuM,OAAOW,GAAOxL,SAAQ,SAAA3C,GAC3B,IAAI0N,GAAQ,EAERW,EAAoBpN,OAAOC,YAAYD,OAAOE,QAAQnB,EAAUqO,mBAAmBnM,KAAI,YAAuB,IAAD,mBAApBoM,EAAoB,KAAXC,EAAW,KAC/G,OAAKlB,IAAiBmB,YAAYD,GAI3B,CAACD,EAASC,IAHfb,GAAQ,EACD,CAACY,OAASG,QAIhBf,IACH1N,EAAUqO,kBAAoBA,GAG5BrO,EAAU0O,uBAAsB1O,EAAU0O,qBAAuB1O,EAAU0O,qBAAqBtN,QAAO,SAAAuN,GACzG,SAAKA,EAAKC,SAAWD,EAAKE,WACxBnB,GAAQ,GACD,OAMN1N,EAAU8O,UACb9O,EAAU8O,QAAU,MACpBpB,GAAQ,GAELA,GACHP,IAAkB4B,gBAAgB/O,S,8FCxFpCgP,EAAW,CACfC,QAASC,IACTC,SAAUD,IACV1L,IAAK0L,IACL5L,GAAI4L,IAEJE,SAAUC,IACVC,UAAWD,IACX5L,KAAM4L,IACN9L,IAAK8L,IAELE,SAAUC,IACVC,UAAWD,IACX9L,KAAM8L,IACNpL,IAAKoL,IAEL3L,QAAS6L,IACT3L,UAAW4L,IACX3L,SAAU4L,IACV9L,UAAW+L,IACX5L,UAAW6L,KAGPC,EAAc,SAACC,GAAD,OAClBhB,EAASgB,GAAW,cAAC,IAAD,CAAiBC,KAAMjB,EAASgB,GAAUE,UAAU,UAAa,O,iCC3BvF,8KAAIC,EAAgB,GAChBC,EAAsB,qDAC1BA,EAAoB/N,MAAK,SAAAC,GACvB6N,EAAgB7N,EAAIC,QACpB6N,EAAsB,QAGxB,IAAMC,EAAa,CACjB,GAAM,CACJ7Q,KAAM,QACN8Q,MAAO,EACPC,MAAO,GAET,IAAO,CACL/Q,KAAM,SACN8Q,MAAO,GACPC,MAAO,GAET,KAAQ,CACN/Q,KAAM,cACN8Q,MAAO,GACPC,MAAO,GAGT,IAAO,CACL/Q,KAAM,SACN8Q,MAAO,GACPC,MAAO,GAET,KAAQ,CACN/Q,KAAM,cACN8Q,MAAO,GACPC,MAAO,GAGT,IAAO,CACL/Q,KAAM,SACN8Q,MAAO,GACPC,MAAO,GAET,KAAQ,CACN/Q,KAAM,cACN8Q,MAAO,GACPC,MAAO,GAET,IAAO,CACL/Q,KAAM,SACN8Q,MAAO,GACPC,MAAO,GAET,KAAQ,CACN/Q,KAAM,cACN8Q,MAAO,GACPC,MAAO,GAET,IAAO,CACL/Q,KAAM,SACN8Q,MAAO,GACPC,MAAO,GAET,KAAQ,CACN/Q,KAAM,cACN8Q,MAAO,GACPC,MAAO,GAGT,IAAO,CACL/Q,KAAM,SACN8Q,MAAO,GACPC,MAAO,GAET,KAAQ,CACN/Q,KAAM,cACN8Q,MAAO,GACPC,MAAO,GAET,IAAO,CACL/Q,KAAM,SACN8Q,MAAO,GACPC,MAAO,IAILC,EAAoB,CACxBzM,UAAW,EACXC,SAAU,GACVF,UAAW,IACX2M,KAAM,KAEFC,EAA8B,CAAC,MAAO,OAAQ,OAAQ,UAAW,YAAa,YAAa,YAAa,WAAY,gBAAiB,sBAAuB,oBAAqB,wBAAyB,sBAAuB,qBAAsB,uB,iCCzF7P,yDAQIC,EAAqBC,IAAMC,YAAW,SAAUC,EAAMC,GACxD,IAAIC,EAAWF,EAAKE,SAChBC,EAAUH,EAAKG,QACfC,EAAOJ,EAAKI,KACZhB,EAAYY,EAAKZ,UACjBiB,EAAUL,EAAKM,GACfC,OAAwB,IAAZF,EAAqB,OAASA,EAC1CG,EAAQC,YAA8BT,EAAM,CAAC,WAAY,UAAW,OAAQ,YAAa,OAEzFU,EAASC,YAAmBT,EAAU,SAC1C,OAAoBJ,IAAMc,cAAcL,EAAWM,YAAS,CAC1DZ,IAAKA,GACJO,EAAO,CACRpB,UAAW0B,IAAW1B,EAAWsB,EAAQN,GAAQM,EAAS,QAASP,GAAWO,EAAS,IAAMP,SAGjGN,EAAMkB,YAAc,QACpBlB,EAAMmB,aApBa,CACjBZ,MAAM,GAoBOP,O,kPCTA,SAASoB,EAAcT,GAAQ,IAAD,IACnBU,sBAAW,SAAAC,GAAC,OAAIA,EAAI,IAAG,GAAtCC,EADkC,oBAE3CC,qBAAU,WACRC,QAAQC,IAAI,CACVC,IAAUC,yBACV9T,IAAOG,sBACP4T,IAASC,0BACRpQ,MAAK,kBAAM6P,SACb,IARwC,IASrCQ,EAAkCpB,EAAlCoB,YAAaC,EAAqBrB,EAArBqB,OAAQC,EAAatB,EAAbsB,SACvB5S,EAAYmN,IAAkBS,aAAa8E,GAC/C,IAAK1S,EAAW,OAAO,KACvB,IAAI6S,EAAQP,IAAUQ,eAAe9S,GAC/B+S,EAAeF,EAAfE,WAEAC,EAA8ChT,EAA9CgT,aAAcxT,EAAgCQ,EAAhCR,KAAMyT,EAA0BjT,EAA1BiT,OAAQC,EAAkBlT,EAAlBkT,cAC9BC,EAAab,IAAUc,gBAAgBJ,GACvCK,EAAgBf,IAAUgB,iBAAiBN,GAC3CO,EAAa9U,IAAOY,cAAc4T,EAAOvR,KACzC8R,EAAgB/U,IAAO8C,iCAAiC0R,GACxDQ,EAAehV,IAAOkC,oBAAoBsS,EAAOvR,KACjDgS,EAAejV,IAAOkD,gCAAgCsR,GACtDU,EAAkBlV,IAAOK,aAAamU,EAAOlU,UAC7C6U,EAAoBnV,IAAOkB,qBAAqBsT,EAAOvR,KAE3D,OAAQ,eAAC,IAAD,CAAMwO,UAAWoB,EAAMuC,cAAeC,GAAIxC,EAAMwC,GAAKxC,EAAMwC,GAAK,cAAeC,KAAK,YAApF,UACN,cAAC,IAAKC,OAAN,CAAa9D,UAAU,OAAvB,SACE,eAAC,IAAD,CAAKA,UAAU,aAAf,UACE,cAAC,IAAD,UACGoB,EAAM2C,OAAS3C,EAAM2C,OAAS,6BAAI,4BAAIzU,QAEzC,cAAC,IAAD,CAAK0U,GAAI,OAAT,SACE,uBAAMhE,UAAU,6BAAhB,UACGoB,EAAMqB,QAAU,cAAC,IAAD,CAAQ1B,QAAQ,UAAUkD,KAAK,KAAKjE,UAAU,OAC7DkE,QAASzB,EADM,SAEf,cAAC,IAAD,CAAiB1C,KAAMoE,QAExB/C,EAAMsB,UAAY,cAAC,IAAD,CAAQ3B,QAAQ,SAASkD,KAAK,KAC/CC,QAASxB,EADQ,SAEjB,cAAC,IAAD,CAAiB3C,KAAMqE,kBAMjC,eAAC,IAAKC,KAAN,CAAWH,QAASzB,EAAQ6B,MAAO,CAAEC,OAAQ9B,EAAS,UAAY,WAAlE,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKuB,GAAG,OAAOhE,UAAU,OAAzB,SACE,cAAC,IAAD,CAAOwE,IAAKpC,IAAUqC,SAAS3B,GAAe9C,UAAS,4BAAuBoC,IAAUsC,QAAQ5B,GAAzC,YAAkE6B,WAAS,MAEpI,eAAC,IAAD,WACE,+BAAKvC,IAAUwC,QAAQ9B,GAAvB,IAAsC,cAAC,IAAD,CAAO0B,IAAKjJ,IAAOI,SAASsH,GAAajD,UAAU,gBAAzF,IAA0G,cAAC,IAAD,CAAOwE,IAAG,UAAEjJ,IAAOY,mBAAT,aAAE,EAAqBgH,GAAgBnD,UAAU,mBACrK,6BAAI,cAAC,IAAD,CAAO6E,MAAOzC,IAAUsC,QAAQ5B,GAAegC,SAAO,MAC1D,8CAAe1C,IAAU2C,yBAAyBjV,EAAW,cAA7D,aAA+EkT,WAGnF,cAAC,IAAD,CAAKhD,UAAU,OAAf,SACE,eAAC,IAAD,WACE,qBAAIA,UAAU,OAAd,UAAsBqD,EAAYK,GAAiB,WAAQX,EAAOnT,YAAc,EAA7B,KAAnD,IAAuF6T,KACvF,yCAAYH,EAAZ,KAA6BI,GAAqB,iCAAOsB,IAAKC,YAAY1B,GAAxB,KAAyCC,EAAcwB,IAAKE,YAAY3B,cAG9H,cAAC,IAAD,UACE,cAAC,IAAD,UACGxS,OAAOE,QAAQqR,IAAS6C,sBAAsBtC,IAAa7Q,KAAI,YAAiB,IAAD,mBAAdR,EAAc,KAAT4T,EAAS,KAC1EC,EAAkB/C,IAASgD,mBAAmB9T,GAC9C+T,EAAaC,KAAKC,IAAL,MAAAD,KAAI,YAAQJ,IAC7B,OAAO,6BAAc,eAAC,IAAD,CAAOrE,QAAQ,YAAf,UAA4BsE,EAA5B,IAA6C,cAAC,IAAD,CAAOtE,QAAQ,UAAf,SAA0BwE,QAA5E/T,UAItB,cAAC,IAAD,UA/Ca,CAAC,WAAY,YAAa,YAAa,UAAW,YAAa,WAAY,aAgD5EQ,KAAI,SAAA8N,GACZ,IAAI4F,EAAOV,IAAKE,YAAYpF,GACxB6F,EAAUhD,EAAMiD,WAAW9F,GAC/B,OAAO,eAAC,IAAD,CAAKkE,GAAI,GAAT,UACL,qBAAIhE,UAAU,WAAd,UAA0BH,YAAYC,GAAtC,IAAiDkF,IAAKC,YAAYnF,MAClE,sBAAME,UAAS,cAAf,UACU,OAAP2F,QAAO,IAAPA,OAAA,EAAAA,EAASE,QAAQb,IAAKc,UAAUhG,KAAY4F,MAHxB5F,WAS9BsB,EAAM2E,QAAU,cAAC,IAAKC,OAAN,UACf,cAAC,IAAD,CAAQ9E,GAAI+E,IAAMC,GAAI,CACpBC,SAAU,SACVC,oBAAqB5D,GAFvB,oC,+OC3FA6D,EAA8B,mEAC9BC,EAAuBC,gBAAK,kBAAMF,KAEnBG,E,kDACnB,WAAYpF,GAAQ,IAAD,8BACjB,cAAMA,IASRqF,gBAAkB,SAACC,GACjBtE,IAAUuE,gBAAgBD,GAC1B,EAAK1E,eAZY,EAenB4E,cAAgB,SAACF,GAAD,OACd,EAAKG,SAAS,CAAEC,aAAcJ,EAAIK,YAAY,IAC5C,kBAAM,EAAKC,UAAUC,QAAQC,eAAe,CAAEC,SAAU,eAjBzC,EAmBnBC,oBAAsB,kBACpB,EAAKP,SAAS,CAAEC,aAAc,KAAMC,YAAY,KAlBhDjK,cACA,EAAKuK,MAAQ,CACXP,aAAc,GACdC,YAAY,GAEdO,IAAQC,SAAS,cAPA,E,gEAuBjB/Y,KAAKwY,UAAYtG,IAAM8G,c,+BAEf,IAAD,OACHC,EAAaxK,IAAkByK,qBACnC,OAAQ,eAAC,IAAD,CAAW7G,IAAKrS,KAAKwY,UAArB,UAELxY,KAAK6Y,MAAMN,WAAa,cAAC,IAAD,CAAK/G,UAAU,OAAf,SAAsB,cAAC,IAAD,UAC7C,cAAC,IAAM2H,SAAP,CAAgBC,SAAU,8CAA1B,SACE,cAACtB,EAAD,CAAsBuB,UAAQ,EAC5BrF,YAAahU,KAAK6Y,MAAMP,aACxBgB,QAAStZ,KAAK4Y,oBACdrB,OAAQ,cAAC,IAAD,CAAQhF,QAAQ,SAASmD,QAAS1V,KAAK4Y,oBAAvC,2BAGC,KAEf,eAAC,IAAD,CAAKpH,UAAU,OAAf,UACGxR,KAAK6Y,MAAMN,WAAa,KAAO,cAAC,IAAD,CAAKgB,GAAI,EAAGC,GAAI,EAAGhI,UAAU,OAA7B,SAC9B,eAAC,IAAD,CAAMA,UAAU,QAAQ4D,GAAG,cAAcC,KAAK,YAA9C,UACE,cAAC,IAAKC,OAAN,CAAa9D,UAAU,OAAvB,SACE,uDAEF,cAAC,IAAKqE,KAAN,CAAWrE,UAAU,4CAArB,SACE,cAAC,IAAD,CAAKA,UAAU,yCAAf,SACE,cAAC,IAAD,CAAKgE,GAAG,OAAR,SACE,cAAC,IAAD,CAAQE,QAAS,kBAAM,EAAK0C,cAAc,KAA1C,SACE,6BAAI,cAAC,IAAD,CAAiB7G,KAAMkI,IAAQjI,UAAU,yBAOxDyH,EAAWzV,KAAI,SAAA0U,GAAE,OAChB,cAAC,IAAD,CAAcqB,GAAI,EAAGC,GAAI,EAAGhI,UAAU,OAAtC,SACE,cAAC,IAAD,CACE2D,cAAc,QACdnB,YAAakE,EACbhE,SAAU,kBAAM,EAAK+D,gBAAgBC,IACrCjE,OAAQ,kBAAM,EAAKmE,cAAcF,OAL3BA,gB,GA1D0BhG,IAAMS,Y,wLCJ/BiB,E,WAEnB,aAAgB,GAAD,oBAAK5T,gBAAgB4T,EAAW,MAAM3T,MAAM,0C,iEAuNpC+T,GACrB,IAAI1S,EAAYmN,IAAkBS,aAAa8E,GAC3C1S,EAAUqO,mBACZpN,OAAOuM,OAAOxN,EAAUqO,mBAAmB1L,SAAQ,SAAA4L,GAAK,OACtDlB,IAAiB+K,kBAAkB7J,EAAO,OAC9CpB,IAAkBkL,oBAAoB3F,O,KA9NrBJ,EAGZC,uBAAyB,kBAAMnC,KAHnBkC,EAIZgG,iBAAmB,SAACtY,EAAWgQ,GAAyB,IAAhBhR,EAAe,uDAAN,EAChDgU,EAA2BhT,EAA3BgT,aAAcjU,EAAaiB,EAAbjB,SACpB,GAAgB,uBAAZiR,EAAkC,OANrBsC,EAMiCiG,sBAAsBvF,GACxE,GAAgB,uBAAZhD,EAAkC,OAPrBsC,EAOiCkG,sBAAsBxF,EAAcjU,GACtF,GAAgB,eAAZiR,EAA0B,OAAOvR,IAAO8C,iCAAP,OAAwCvB,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAWiT,QACxF,GAAgB,eAAZjD,GAAwC,gBAAZA,EAA2B,OAT1CsC,EASsDmG,SAAS1Z,GAChF,GAAgB,kBAAZiR,GAA+BA,EAAQ0I,SAAS,iBAAkB,OAAO,GAC7E,GAAI1I,KAAWQ,IAAmB,OAAOA,IAAkBR,GAC3D,IAAI2I,EAZarG,EAYOsG,YAAY5F,GACpC,OAAI2F,GAAgB3I,KAAW2I,EAAaE,SAAiBF,EAAaE,SAAS7I,GAblEsC,EAagFwG,qBAAqB/Z,IAC/GC,GAdUsT,EAiBZsG,YAAc,SAACG,GAAD,OAAa5I,IAAc4I,IAjB7BzG,EAkBZ0G,iBAAmB,SAACC,GAAD,MAAeja,EAAf,uDAAwB,GAAxB,MAAgD,aAAjBia,EAA8B,YAA2B,OAAbvW,UAAa,IAAbA,KAAA,UAAAA,IAAgBuW,UAAhB,eAA+BzZ,OAAQR,GAlBzHsT,EAmBZ4G,oBAAsB,kBAAMjY,OAAOwB,KAAK0N,MAnB5BmC,EAqBZwC,QAAU,SAACiE,GAAD,MAAU/Z,EAAV,uDAAmB,GAAnB,OAA2B,UArBzBsT,EAqB8BsG,YAAYG,UAAjB,eAA2BvZ,OAAQR,GArB5DsT,EAsBZsC,QAAU,SAACmE,GAAD,MAAU/Z,EAAV,uDAAmB,EAAnB,OAA0B,UAtBxBsT,EAsB6BsG,YAAYG,UAAjB,eAA2BI,OAAQna,GAtB3DsT,EAuBZc,gBAAkB,SAAC2F,GAAD,MAAU/Z,EAAV,uDAAmB,GAAnB,OAA2B,UAvBjCsT,EAuBsCsG,YAAYG,UAAjB,eAA2B5F,aAAcnU,GAvB1EsT,EAwBZ8G,iBAAmB,kBAAMnY,OAAOwB,KAAKC,MAxBzB4P,EAyBZgB,iBAAmB,SAACyF,GAAD,MAAU/Z,EAAV,uDAAmB,GAAnB,OAA2B,UAzBlCsT,EAyBuCsG,YAAYG,UAAjB,eAA2B1F,gBAAiBrU,GAzB9EsT,EA0BZ+G,qBAAuB,SAACN,GAAD,MAAU/Z,EAAV,uDAAmB,GAAnB,OAA2B,UA1BtCsT,EA0B2CsG,YAAYG,UAAjB,eAA2BO,oBAAqBta,GA1BtFsT,EA2BZiH,UAAY,SAACR,GAAD,MAAU/Z,EAAV,uDAAmB,GAAnB,OAA2B,UA3B3BsT,EA2BgCsG,YAAYG,UAAjB,eAA2BS,SAAUxa,GA3BhEsT,EA8BZmH,aAAe,kBAAMxY,OAAOwB,KAAK4N,MA9BrBiC,EA+BZoH,cAAgB,SAAC3a,GAAD,MAAWC,EAAX,uDAAoB,GAApB,OAAsC,OAAVqR,UAAU,IAAVA,KAAA,UAAAA,IAAatR,UAAb,eAAwBS,OAAQR,GA/BhEsT,EAgCZwG,qBAAuB,SAAC/Z,GAAD,OAhCXuT,EAgC8BmH,eAAera,QAAQL,IAhCrDuT,EAiCZmG,SAAW,SAAC1Z,GAAD,MAAWC,EAAX,uDAAoB,EAApB,OAAqC,OAAVqR,UAAU,IAAVA,KAAA,UAAAA,IAAatR,UAAb,eAAwBuR,QAAStR,GAjC3DsT,EAkCZqH,aAAe,SAAC5a,GAAD,MAAWC,EAAX,uDAAoB,EAApB,OAAqC,OAAVqR,UAAU,IAAVA,KAAA,UAAAA,IAAatR,UAAb,eAAwBwR,QAASvR,GAlC/DsT,EAqCZsH,mBAAqB,SAACb,GAAD,uBArCTzG,EAqC2BsG,YAAYG,UAA9B,aAAa,EAA2Bc,gBArCjDvH,EAsCZiG,sBAAwB,SAACQ,GAAD,uBAtCZzG,EAsC8BsH,mBAAmBb,UAArC,aAAa,EAAkCrX,KAtC3D4Q,EAuCZkG,sBAAwB,SAACO,EAASha,GAAV,yBAvCZuT,EAuCwCsH,mBAAmBb,UAA/C,iBAAuB,EAAkCe,aAAzD,aAAuB,EAvCnCxH,EAuCkFwG,qBAAqB/Z,KAvCvGuT,EAyCZqC,SAAW,SAACoE,GAAD,MAAU/Z,EAAV,uDAAmB,KAAnB,OAA4B,UAzC3BsT,EAyCgCsG,YAAYG,UAAjB,eAA2BgB,WAAY/a,GAzClEsT,EA0CZ0H,QAAU,SAACjB,GAAD,MAAU/Z,EAAV,uDAAmB,KAAnB,OAA4B,UA1C1BsT,EA0C+BsG,YAAYG,UAAjB,eAA2BkB,UAAWjb,GA1ChEsT,EA2CZ4H,aAAe,SAACnB,EAASoB,GAAV,UAAqBnb,EAArB,uDAA8B,KAA9B,OAAuC,UA3C1CsT,EA2C+CsG,YAAYG,UAAjB,mBAA2BqB,cAA3B,mBAAoCD,UAApC,eAAgDE,MAAOrb,GA3CjGsT,EA4CZgI,oBAAsB,SAACvB,EAASwB,GAAV,UAAsBvb,EAAtB,uDAA+B,KAA/B,OAAwC,UA5ClDsT,EA4CuDsG,YAAYG,UAAjB,mBAA2BqB,cAA3B,0CAAoDG,EAAa,WAAjE,eAAuEF,MAAOrb,GA5ChIsT,EA+CZkI,cAAgB,SAACzB,EAASoB,GAAV,UAAqBnb,EAArB,uDAA8B,GAA9B,OAAqC,UA/CzCsT,EA+C8CsG,YAAYG,UAAjB,mBAA2BqB,cAA3B,mBAAoCD,UAApC,eAAgD3a,OAAQR,GA/CjGsT,EAiDZmI,oBAAsB,SAACzH,EAAcmH,EAAWjH,GAA+B,IAAD,EAAflU,EAAe,uDAAN,EAE7E,GAAkB,UAAdmb,GAAuC,UAAdA,EAAuB,OAAOnb,EAE3D,IADA,IAAI0b,GAAU,UApDGpI,EAoDEsG,YAAY5F,UAAjB,eAAgCoH,SAAU,GAC/CO,EAAI,EAAGA,GAAKzH,EAAeyH,IAAK,CAAC,IAAD,EACnCC,GAAc,UAAAF,EAAQ,gBAAD,OAAiBC,WAAxB,eAA8BC,cAAe,GAC3DC,EAAa5Z,OAAOE,QAAQyZ,GAAaE,MAAK,mCAAEpZ,EAAF,iBAAgBA,IAAQyY,KAC1E,GAAIU,EAAY,OAAOA,EAAW,GAEpC,OAAO7b,GA1DUsT,EA4DZyI,kBAAoB,SAAC/a,EAAWma,EAAWjH,GAAsC,IAAvB8H,EAAsB,wDACrF,GAAkB,SAAdb,GAAsC,UAAdA,GAAuC,UAAdA,EAAuB,CAAC,IAAD,EACtEc,GAAwB,OAATjb,QAAS,IAATA,GAAA,UAAAA,EAAWkb,uBAAX,eAA6Bf,KAAc,EAC1DgB,EA/DW7I,EA+DOmI,oBAAL,OAAyBza,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAWgT,aAAcmH,EAAWjH,GAE9E,OADA+H,EAAeG,YAAMH,EAAeE,EAAY,EAAG,IAC5CH,EAAY,CAAEC,eAAcE,cAAeF,EAC7C,OAAOD,EAAY,GAAK,MAlEd1I,EAoEZ+I,kBAAoB,SAACtC,EAASoB,GAAV,UAAqBnb,EAArB,uDAA8B,GAA9B,OAAqC,UApE7CsT,EAoEkDsG,YAAYG,UAAjB,mBAA2BqB,cAA3B,mBAAoCD,UAApC,eAAgDmB,WAAYtc,GApEzGsT,EAqEZiJ,gBAAkB,SAACxC,EAASoB,GAAV,UAAqBnb,EAArB,uDAA8B,GAA9B,OAAqC,UArE3CsT,EAqEgDsG,YAAYG,UAAjB,mBAA2BqB,cAA3B,mBAAoCD,UAApC,eAAgDqB,SAAUxc,GArErGsT,EAsEZmJ,eAAiB,SAAC1C,EAASoB,EAAWjH,EAAewI,GAA8B,IAAD,MAAlB1c,EAAkB,uDAAT,KAC1E8B,EAAK,UAvEQwR,EAuEAsG,YAAYG,UAApB,iBAAG,EAA2BqB,cAA9B,iBAAG,EAAoCD,UAAvC,aAAG,EAAgDrZ,MAC5D,MAAqB,oBAAVA,EACFA,EAAMoS,EAAewI,GACvB5a,GAAS9B,GA1ECsT,EA4EZqJ,kBAAoB,SAAC5C,EAAS7F,EAAewI,GAAe,IAAD,EAC5DhB,GAAU,UA7EGpI,EA6EEsG,YAAYG,UAAjB,eAA2BqB,SAAU,GAC/CwB,EAAW,GAKf,OAJA3a,OAAOwB,KAAKiY,GAAS/X,SAAQ,SAAAwX,GAC3B,IAAIrZ,EAhFWwR,EAgFEmJ,eAAe1C,EAASoB,EAAWjH,EAAewI,GAC/D5a,GAAO8a,EAAShZ,KAAK9B,MAEpB8a,GAnFUtJ,EAqFZuJ,qBAAuB,SAAC9C,EAASoB,EAAW2B,EAAgBb,EAAc/H,EAAewI,GAA8B,IAAD,EAAlB1c,EAAkB,uDAAT,KAC9G+c,EAtFazJ,EAsFF+I,kBAAkBtC,EAASoB,GACtCxL,EAAO,KAFgH,cAGrGoN,GAHqG,IAG3H,2BAA2B,CAAC,IAAD,EAAhBC,EAAgB,QACrBC,EAAWD,EAAQ3b,YAGvB,GAFwB,oBAAb4b,IACTA,EAAWA,EAAShB,EAAc/H,EAAewI,KACvC,QAAR,EAAAO,SAAA,eAAUH,kBAAmBA,EAAgB,CAC/CnN,EAAOsN,EACP,QATuH,8BAY3H,OAAOtN,GAAQ3P,GAjGEsT,EAmGZ4J,0BAA4B,SAAC7b,EAAayB,GAAmC,IAAnB9C,EAAkB,uDAAT,KACxE,IAAK8C,IAAmBzB,EAAa,OAAOrB,EADqC,MAEtD+C,IAAiBC,mBAAmB3B,EAAa,QAASyB,GAFJ,0BAE5EhB,OAF4E,MAEpE,GAFoE,EAEhEmB,EAFgE,KAGjF,OAAKA,EACEhB,OAAOC,YAAYD,OAAOE,QAAQL,GAAOoB,KAAI,mCAAER,EAAF,KAAOya,EAAP,WAAwB,qBAARza,EAA6B,CAACA,EAAKya,GAAO,CAACza,EAAKya,EAAMla,OADtGjD,GAtGHsT,EAyGZ8J,2BAA6B,SAAC/b,EAAayB,GAAiC,IAAjB9C,EAAgB,uDAAP,GACzE,IAAK8C,IAAmBzB,EAAa,OAAOrB,EAC5C,IAAIwc,EAASzZ,IAAiBC,mBAAmB3B,EAAa,SAAUyB,GAAgB,GACxF,OAAO0Z,GAAUxc,GA5GAsT,EA8GZ+J,iBAAmB,SAACC,EAAUtc,GAAkC,IAAD,MAAtBuc,EAAsB,0DACWvc,EAAzE8O,eAD8D,MACpD,GADoD,IACW9O,EAA3Dwc,mBADgD,SAC3BxJ,EAAsChT,EAAtCgT,aAD2B,EACWhT,EAAxByc,oBADa,MACE,KADF,EAEhEC,EAhHapK,EAgHKc,gBAAgBJ,GACjCuJ,IAAWA,EAjHCjK,EAiHgBqK,gBAAgB3J,IAAkBwJ,KAAgB,UAAAlK,EAAUsG,YAAY5F,UAAtB,mBAAqCoH,cAArC,mBAA6CwC,YAA7C,eAAmDC,aAAa,IACnJ,IAAIC,EAAS,GAIb,OAHiB,QAAbR,GAAmC,UAAbA,GAAqC,UAAbA,GAAwBC,KACxEO,GAAUL,GAA8BC,GAAc,KAElD,GAAN,OAAUI,GAAV,OAAmBR,EAAnB,YAA+BxN,IAtHdwD,EAwHZyK,wBAA0B,SAACT,EAAUtc,GAAkC,IAAD,MAAtBuc,EAAsB,0DACVvc,EAA3Dwc,mBADqE,SAChDxJ,EAAsChT,EAAtCgT,aADgD,EACVhT,EAAxByc,oBADkC,MACnB,KADmB,EAEvEC,EA1HapK,EA0HKc,gBAAgBJ,GAElC,CAAC,gBAAiB,kBAAkB0F,SAAS+D,GAC/CA,EAAe,WACR,CAAC,YAAa,aAAa/D,SAAS+D,KAC3CA,EAAe,QACZF,IAAWA,EAhICjK,EAgIgBqK,gBAAgB3J,IAAkBwJ,KAAgB,UAAAlK,EAAUsG,YAAY5F,UAAtB,mBAAqCoH,cAArC,mBAA6CwC,YAA7C,eAAmDC,aAAa,IACnJ,IAAIC,EAAS,WAGb,OAFiB,QAAbR,GAAmC,UAAbA,GAAqC,UAAbA,GAAwBC,KACxEO,EAAUL,GAA8BC,GACnCI,GApIUxK,EAuIZqK,gBAAkB,SAAC5D,GAAD,IAAU/Z,EAAV,8DAAgE,aAvItEsT,EAuIwCgB,iBAAiByF,IAA2B/Z,GAvIpFsT,EAwIZ0K,gBAAkB,SAACjE,GAAD,UAAU/Z,EAAV,+DAA6B,UAxInCsT,EAwIwCsG,YAAYG,UAAjB,mBAA2BqB,cAA3B,mBAAmCwC,YAAnC,eAAyCC,YAAa7d,GAxIzFsT,EA0IZ2K,mBAAqB,SAACjK,GAA+B,IAAjBhU,EAAgB,uDAAP,GAClD,IAAKgU,EAAc,OAAOhU,EAC1B,IAAI8d,EAASxK,EAAUc,gBAAgBJ,GACvC,IAAK8J,EAAQ,OAAO9d,EACpB,IAAIyD,EAAO,CAAC,WAAY,YAAa,YAAa,UAAW,YAAa,WAAY,YAAa,YAAxF,UAAwGqa,EAAxG,mBAEPH,EAAkBrK,EAAUqK,gBAAgB3J,GAC5CgK,EAAkB1K,EAAU0K,gBAAgBhK,GAC5CkK,EAAU,GACTP,GACHO,EAAQta,KAAK,iBAEV+Z,GACHO,EAAQta,KAAK,mBAAoB,oBAE/B+Z,GAAmBK,EACrBE,EAAQta,KAAR,UAAgBka,EAAhB,+BAA8CA,EAA9C,sBACoD,QAA7CxK,EAAUgB,iBAAiBN,IAClCkK,EAAQta,KAAR,UAAgBka,EAAhB,sBAGFI,EAAQta,KAAR,UAAgBka,EAAhB,4BAA2CA,EAA3C,mBACAra,EAAKG,KAAL,MAAAH,EAAaya,GACE,SAAXJ,GACFra,EAAKG,KAAL,MAAAH,EAAI,YAASya,EAAQ9b,QAAO,SAAAM,GAAG,OAAIA,EAAIyb,WAAJ,UAAkBL,EAAlB,SAA8B5a,KAAI,SAAAR,GAAG,OAAIA,EAAIuM,QAAJ,UAAe6O,EAAf,eAA6BA,EAA7B,oBAC5Era,EAAKG,KAAL,MAAAH,EAAI,YAASya,EAAQ9b,QAAO,SAAAM,GAAG,OAAIA,EAAIyb,WAAJ,UAAkBL,EAAlB,SAA8B5a,KAAI,SAAAR,GAAG,OAAIA,EAAIuM,QAAJ,UAAe6O,EAAf,eAA6BA,EAA7B,iBACxD,SAAXA,EACTra,EAAKG,KAAL,MAAAH,EAAI,YAASya,EAAQ9b,QAAO,SAAAM,GAAG,OAAIA,EAAIyb,WAAJ,UAAkBL,EAAlB,SAA8B5a,KAAI,SAAAR,GAAG,OAAIA,EAAIuM,QAAJ,UAAe6O,EAAf,eAA6BA,EAA7B,gBAC1D,UAAXA,GACPra,EAAKG,KAAL,MAAAH,EAAI,YAASya,EAAQ9b,QAAO,SAAAM,GAAG,OAAIA,EAAIyb,WAAJ,UAAkBL,EAAlB,SAA8B5a,KAAI,SAAAR,GAAG,OAAIA,EAAIuM,QAAJ,UAAe6O,EAAf,eAA6BA,EAA7B,oBAG9Era,EAAKG,KAAL,MAAAH,EAAI,YAAS2a,IAAsBN,KACnC,IAAIzJ,EA3Kaf,EA2KQgB,iBAAiBN,GAE1C,MADsB,aAAlBK,GAA8B5Q,EAAKG,KAAK,eACrCH,GA7KU6P,EAgLZ+K,YAAc,SAACrd,EAAWgQ,GAC/B,MAAgB,aAAZA,EACKsC,EAAU+K,YAAYrd,EAAW,OAASsS,EAAU+K,YAAYrd,EAAW,QAAUsS,EAAU+K,YAAYrd,EAAW,aAAc,EACxH,cAAZgQ,EACAsC,EAAU+K,YAAYrd,EAAW,QAAUsS,EAAU+K,YAAYrd,EAAW,SAAWsS,EAAU+K,YAAYrd,EAAW,cAAe,EAC3H,cAAZgQ,EACAsC,EAAU+K,YAAYrd,EAAW,QAAUsS,EAAU+K,YAAYrd,EAAW,SAAWsS,EAAU+K,YAAYrd,EAAW,cAAe,KACzIA,IAAaA,EAAUsd,oBAAqBtN,KAAWhQ,EAAUsd,mBAvLvDhL,EA0LZ2C,yBAA2B,SAACjV,EAAWgQ,GAAyB,IAAD,EAAfhR,EAAe,uDAAN,EAC9D,OA3LiBsT,EA2LR+K,YAAYrd,EAAWgQ,GAAU,OAAOhQ,QAAP,IAAOA,GAAP,UAAOA,EAAWsd,yBAAlB,aAAO,EAA+BtN,GA3L/DsC,EA4LAgG,iBAAiBtY,EAAWgQ,EAAShR,IA5LrCsT,EAgMZiL,eAAiB,SAAC7K,EAAa8K,GACpC,IAAIxd,EAAYmN,IAAkBS,aAAa8E,GAC/C,GAAK1S,EAAL,CACA,IAAIyd,EAAoBzd,EAAUqO,kBAC9BqP,EAAuBF,EAG3BhL,IAASmL,sBAAsBhb,SAAQ,SAAA2L,GACrC,IAAIsP,EAAevQ,IAAiBmB,YAAjB,OAA6BkP,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAuBpP,IACvE,GAAIsP,EAAajQ,WAAa+E,EAA9B,CACA,IAAImL,EAAYxQ,IAAiBmB,YAAjB,OAA6BiP,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAoBnP,IAC7DwP,GAA0B,OAAZF,QAAY,IAAZA,OAAA,EAAAA,EAAcjQ,WAAY,GAExCkQ,GAAWxQ,IAAiB+K,kBAAkByF,EAAUjH,GAAIkH,GAE5DA,GAAY3Q,IAAkB4Q,cAAcD,EAAYD,GAExDD,GAAcvQ,IAAiB+K,kBAAkBwF,EAAahH,GAAIlE,OAGxE1S,EAAUqO,kBAAoB,GAC9BpN,OAAOE,QAAQqc,GAAa7a,SAAQ,mCAAEjB,EAAF,KAAO6M,EAAP,YAClCvO,EAAUqO,kBAAkB3M,GAAO6M,KACrCpB,IAAkB4B,gBAAgB/O,KAvNjBsS,EAiOZQ,eAAiB,SAAC9S,GACvB,IAAIge,EAAY/c,OAAOC,YAAYD,OAAOE,QAAQnB,EAAUqO,mBAAmBnM,KAAI,mCAAER,EAAF,KAAO6M,EAAP,WAAkB,CAAC7M,EAAK2L,IAAiBmB,YAAYD,QACpI0P,EAAe3L,EAAU4L,kCAAkCle,GAC/D,OApOiBsS,EAoOL6L,uBAAuBne,EAAU0O,qBAAsBuP,EAAcD,IApOhE1L,EAuOZ6L,uBAAyB,SAACzP,EAAsBuP,EAAcD,GACnE,IAAIjL,EAAaP,IAASO,WAAWiL,GACjCI,EAA0B5L,IAAS6L,2BAA2BtL,GAE9DjS,EAAQwd,YAAUL,GAmBtB,OAjBAhd,OAAOuM,OAAOwQ,GAAWrb,SAAQ,SAAA8K,GAC1BA,IAEL3M,EAAM2M,EAAIM,cAAgBjN,EAAM2M,EAAIM,cAAgB,GAAKyE,IAAS+L,iBAAiB9Q,EAAIM,YAAaN,EAAI+Q,SAAU1d,EAAM2d,oBAAqC,EAAfhR,EAAI+Q,SAAe/Q,EAAI6C,OAErK7C,EAAIiR,SAAS/b,SAAQ,SAACgc,GAAD,OACnBA,GAAWA,EAAQjd,MAAQZ,EAAM6d,EAAQjd,MAAQZ,EAAM6d,EAAQjd,MAAQ,GAAKid,EAAQ7E,cAGxFsE,EAAwBzb,SAAQ,SAAAic,GAAI,OAAI9d,EAAM8d,EAAKld,MAAQZ,EAAM8d,EAAKld,MAAQ,GAAKkd,EAAK/I,WAExFnH,GAAwBA,EAAqB/L,SAAQ,SAAAtC,GAAgB,IACrDyN,EAA+BzN,EAAvCuO,OAAyBiQ,EAAcxe,EAAvBwO,QAClBiQ,EAAYtM,IAASuM,4BAA4BjR,EAAQ+Q,EAAWxe,EAAYyB,gBAChFgd,GAAW7d,OAAOE,QAAQ2d,GAAWnc,SAAQ,mCAAEqN,EAAF,KAAWmM,EAAX,YAAoBrb,EAAMkP,IAAYlP,EAAMkP,IAAY,GAAKmM,QAEhH6C,YAAmBle,GACZ,CACL0c,YAAavc,OAAOC,YAAYD,OAAOE,QAAQ6c,GAAW9b,KAAI,mCAAER,EAAF,KAAOya,EAAP,WAAgB,CAACza,EAAD,OAAMya,QAAN,IAAMA,OAAN,EAAMA,EAAKvF,QACzF7D,aACA+C,WAAYhV,EACZ4N,yBAlQe4D,EAqQZ4L,kCAAoC,SAACle,GAAe,IAAD,YACpDif,EAAQ,CAAI,UAAW,WAAY,WAAY,aAAc,aAAc,cAAe,gBAAiB,sBAAnG,mBAA4Hhe,OAAOwB,KAAK+N,OAChJyN,EAAehd,OAAOC,YAAY+d,EAAS/c,KAAI,SAAAR,GAAG,MAAI,CAACA,EAvQ1C4Q,EAuQoD2C,yBAAyBjV,EAAW0B,QAEzGuc,EAAaiB,aAzQI5M,EAyQgBc,gBAAgBpT,EAAUgT,cAG3DV,EAAU8G,mBAAmBzW,SAAQ,SAAAma,GACnC,IAAI9M,EAAO,UAAM8M,EAAN,kBACXmB,EAAajO,GA9QEsC,EA8Qc2C,yBAAyBjV,EAAWgQ,GACjEA,EAAO,UAAM8M,EAAN,uBACPmB,EAAajO,GAhREsC,EAgRc2C,yBAAyBjV,EAAWgQ,MAInE,IAAImP,GAAqB,OAATnf,QAAS,IAATA,OAAA,EAAAA,EAAWsd,oBAAqB,GAChDrc,OAAOE,QAAQge,GAAWxc,SAAQ,mCAAEqN,EAAF,KAAWmM,EAAX,YAAqB8B,EAAamB,eAAepP,KAAaiO,EAAajO,GAAWmM,MAGxH,IAAIkD,EAAiB/M,EAAU2C,yBAAyBjV,EAAW,sBACnE,GAAIqf,EAAgB,CAClB,IAAIC,EAAqBhN,EAAU2C,yBAAyBjV,EAAW,sBACvEie,EAAaoB,IAAmBpB,EAAaoB,IAAmB,GAAKC,EAGvE,IAAIC,EAAc,SAAAze,GAAK,OAAIA,GAASG,OAAOE,QAAQL,GAAO6B,SAAQ,YAAiB,IAAD,mBAAdjB,EAAc,KAATya,EAAS,KACpE,qBAARza,EAIJuc,EAAavc,IAAQuc,EAAavc,IAAQ,GAAKya,EAH7C8B,EAAauB,iBAAb,sBAAqCvB,EAAauB,kBAAoB,IAAtE,YAA8ErD,QAM5EnJ,EAAmEhT,EAAnEgT,aAAcjU,EAAqDiB,EAArDjB,SAAUmU,EAA2ClT,EAA3CkT,cAjC0B,EAiCiBlT,EAA5Byf,0BAjCW,MAiCU,GAjCV,EAkCpD/D,EAAYpJ,EAAUqH,aAAa5a,GAEvC0gB,EAAmB9c,SAAQ,SAAAgM,GAAS,IACpBwL,EAAuDxL,EAA/DC,OAA4BkN,EAAmCnN,EAA5CE,QAAyB/M,EAAmB6M,EAAnB7M,eAC9CmZ,EAAe3I,EAAUyI,kBAAkB/a,EAAWma,GACtD9Z,EAAciS,EAAUuJ,qBAAqB7I,EAAcmH,EAAW2B,EAAgBb,EAAc/H,EAAewI,GACvH6D,EAAYjN,EAAU4J,0BAA0B7b,EAAayB,EAAgB,QAI1DwQ,EAAUqJ,kBAAkB3I,EAAcE,EAAewI,GAC/D/Y,QAAQ4c,GAGvB,IAAIG,EAAc,CAChBC,OAAQlhB,IAAOkC,oBAAP,OAA2BX,QAA3B,IAA2BA,GAA3B,UAA2BA,EAAWiT,cAAtC,aAA2B,EAAmBvR,KACtDke,OAAQnhB,IAAOkD,gCAAP,OAAuC3B,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAWiT,QAC1D4M,WAAYphB,IAAOoC,mBAAP,OAA0Bb,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAWiT,cAArC,aAA0B,EAAmBvR,IAA7C,OAAkD1B,QAAlD,IAAkDA,GAAlD,UAAkDA,EAAWiT,cAA7D,aAAkD,EAAmBnT,aACjFggB,iBAAkBrhB,IAAOoD,yBAAP,OAAgC7B,QAAhC,IAAgCA,GAAhC,UAAgCA,EAAWiT,cAA3C,aAAgC,EAAmBvR,IAAnD,OAAwD1B,QAAxD,IAAwDA,GAAxD,UAAwDA,EAAWiT,cAAnE,aAAwD,EAAmBnT,YAA3E,OAAwFE,QAAxF,IAAwFA,GAAxF,UAAwFA,EAAWiT,cAAnG,aAAwF,EAAmBnR,iBAO/H,OALI4d,EAAYC,SACd1B,EAAayB,EAAYC,SAAW1B,EAAayB,EAAYC,SAAW,GAAKD,EAAYE,QACvFF,EAAYG,YAAYN,EAAYG,EAAYG,YAChDH,EAAYI,kBAAkBP,EAAYG,EAAYI,kBAEnD7B,I,uJCvUU/I,EAEnB,aACE,GADa,oBACTxW,gBAAgBwW,EAClB,MAAMvW,MAAM,2CAJGuW,EAMZC,YAAc,SAACzT,GAAD,MAAM1C,EAAN,uDAAe,GAAf,OAClB+gB,EAAcre,KAAd,UAAsBse,IAASte,UAA/B,aAAsB,EAAelC,OAASR,GAP9BkW,EAQZ+K,kBAAoB,SAACve,GAAD,QAAM1C,EAAN,uDAAe,GAAf,OACxB+gB,EAAcre,KAAd,UAAsBse,IAASte,UAA/B,aAAsB,EAAewe,UAArC,UAA+CF,IAASte,UAAxD,aAA+C,EAAelC,OAASR,GATvDkW,EAUZiL,eAAiB,SAACze,GAAD,MAAM1C,EAAN,uDAAe,GAAf,OACtB,UAAAghB,IAASte,UAAT,eAAelC,OAAQR,GAXNkW,EAYZkL,uBAAyB,SAAC1e,GAAsB,IAAjB1C,EAAgB,uDAAP,GACzCQ,EAba0V,EAaDC,YAAYzT,EAAK1C,GAGjC,OAFIQ,IAASR,GAAmB,QAAR0C,GAAyB,SAARA,GAA0B,SAARA,IACzDlC,GAAQ,KACHA,GAhBU0V,EAkBZmL,eAAiB,SAAC3e,GAAD,MAAM1C,EAAN,uDAAe,GAAf,OACtB,UAAAghB,IAASte,UAAT,eAAeuP,UAAWjS,GAnBTkW,EAoBZE,YAAc,SAAC1T,GAAD,QAAM1C,EAAN,uDAAe,GAAf,MACK,WAAxB,UAAAghB,IAASte,UAAT,eAAekU,MAAmB5W,GAAU,UAAAghB,IAASte,UAAT,eAAekU,OAAQ5W,GArBlDkW,EAuBZc,UAAY,SAACtU,GAAS,IAAD,EAC1B,MAA4B,WAAxB,UAAAse,IAASte,UAAT,eAAekU,MAAyB,EAE5B,MADLV,EAAKE,YAAY1T,GACN,EAAI,GA1BTwT,EA4BZoL,UAAY,SAACtQ,EAASlP,GAAV,OACjByf,EAAE,CAAEzf,QAAO0f,QAAQ,GAASxQ,IA7BXkF,EA+BZuL,aAAe,SAACzQ,EAASlP,GAAiD,IAAD,EAAzC0e,EAAyC,uDAAtB,GAAIgB,IAAkB,uEAChDhB,GADgD,IAC9E,kCAAWkB,EAAX,QACE,IAAI,UAAAC,IAAgB,OAACD,QAAD,IAACA,OAAD,EAACA,EAAiBhf,YAAlC,eAAwCA,OAAQsO,EAClD,OAAOkF,EAAK0L,qBAAqB9f,EAAO4f,EAAgBhf,IAAKgf,EAAgBG,SAAS,IAHZ,8BAI9E,OAAkB,OAAXC,QAAW,IAAXA,OAAA,EAAAA,EAAc9Q,KAA8C,oBAAlC,OAAO8Q,QAAP,IAAOA,OAAP,EAAOA,EAAc9Q,KACnD,+BAAO8Q,EAAY9Q,GAAS,CAAElP,QAAO0f,cApCvBtL,EAuCZ0L,qBAAuB,SAAC9f,EAAOigB,EAAaF,GAArB,IAA8BL,IAA9B,gEACR,OAApBQ,QAAoB,IAApBA,OAAA,EAAAA,EAAuBD,KAA2E,oBAA3D,OAAOC,QAAP,IAAOA,OAAP,EAAOA,EAAuBD,GAAaE,cACjF,+BAAOD,EAAqBD,GAAaE,YAAYJ,EAA9CG,CAAuD,CAAElgB,QAAO0f,cAG5E,IAAMT,EAAgB9e,OAAOC,YAAYD,OAAOE,QAAQ6e,KAAU5e,QAAO,oDAAoB6P,WAAS/O,KAAI,mCAAER,EAAF,KAAOwf,EAAP,WAAgB,CAACxf,EAAM,sBAAMwO,UAAS,eAAUgR,EAAIjQ,QAAd,gBAAf,SAAqDiQ,EAAI1hB,YAE1L,SAAS+gB,EAAEM,EAAS7Q,GAAU,IAAD,IACrBlP,EAAyB+f,EAAzB/f,MADqB,EACI+f,EAAlBL,OACb,GAAK1f,EAAL,CACA,SAH2B,YAGjB,OAAIggB,QAAJ,IAAIA,OAAJ,EAAIA,EAAc9Q,IAC1B,OAAO,sCAAS8Q,EAAY9Q,GAAS6Q,GAA9B,QACT,IAAIM,EAAWjM,EAAK+K,kBAAkBjQ,GAClCoR,EAAWlM,EAAKE,YAAYpF,GAC5BgG,EAAYd,EAAKc,UAAUhG,GAC3B8J,GAAa,OAALhZ,QAAK,IAALA,GAAA,UAAAA,EAAQkP,UAAR,mBAAkB+F,eAAlB,sBAA4BC,MAA5B,OAA0ClV,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAQkP,IAC9D,OAAO,uBAAME,UAAU,cAAhB,UAA8B,4BAAIiR,IAAlC,IAAgD,uBAAMjR,UAAU,YAAhB,UAA6B4J,EAAOsH,SAG7F,IAAMN,EAAc,CAElB3R,SAAU,SAACkS,GAAD,OAAO,iCAAOd,EAAEc,EAAG,WAAZ,YAAiCd,EAAEc,EAAG,OAAtC,QAAmDd,EAAEc,EAAG,UAEzE/R,UAAW,SAAC+R,GAAD,OAAO,sCAASd,EAAEc,EAAG,YAAd,MAA8Bd,EAAEc,EAAG,cAAnC,cAA6Dd,EAAEc,EAAG,QAAlE,QAAgFd,EAAEc,EAAG,WAEvG5R,UAAW,SAAC4R,GAAD,OAAO,iCAAOd,EAAEc,EAAG,YAAZ,YAAkCd,EAAEc,EAAG,QAAvC,QAAqDd,EAAEc,EAAG,WAG5EC,aAAc,SAACD,GAAD,OAAO,iCAAOd,EAAEc,EAAG,aAAZ,MAA6Bd,EAAEc,EAAG,wBAAlC,MAA8Dd,EAAEc,EAAG,qBAAnE,MAA4Fd,EAAEc,EAAG,2BACtHE,kBAAmB,SAACF,GAAD,OAAO,iCAAOd,EAAEc,EAAG,gBAAZ,MAAgCd,EAAEc,EAAG,sBAC/DG,iBAAkB,SAACH,GAAD,OAAO,iCAAOd,EAAEc,EAAG,gBAAZ,MAAgCd,EAAEc,EAAG,2BAC9DI,oBAAqB,SAACJ,GAAD,OAAO,gDAAmBd,EAAEc,EAAG,aAAxB,MAAyCd,EAAEc,EAAG,sBAA9C,eAAiFd,EAAEc,EAAG,YAAtF,SAC5BK,qBAAsB,SAACL,GAAD,OAAO,0CAAad,EAAEc,EAAG,iBAAlB,MAAuCd,EAAEc,EAAG,sBAA5C,MAAsEd,EAAEc,EAAG,iBAA3E,SAG7BM,aAAc,SAACN,GAAD,OAAO,iCAAOd,EAAEc,EAAG,aAAZ,MAA6Bd,EAAEc,EAAG,wBAAlC,MAA8Dd,EAAEc,EAAG,qBAAnE,MAA4Fd,EAAEc,EAAG,2BACtHO,kBAAmB,SAACP,GAAD,OAAO,iCAAOd,EAAEc,EAAG,gBAAZ,MAAgCd,EAAEc,EAAG,sBAC/DQ,iBAAkB,SAACR,GAAD,OAAO,iCAAOd,EAAEc,EAAG,gBAAZ,MAAgCd,EAAEc,EAAG,2BAC9DS,oBAAqB,SAACT,GAAD,OAAO,gDAAmBd,EAAEc,EAAG,aAAxB,MAAyCd,EAAEc,EAAG,sBAA9C,eAAiFd,EAAEc,EAAG,YAAtF,SAC5BU,qBAAsB,SAACV,GAAD,OAAO,0CAAad,EAAEc,EAAG,iBAAlB,MAAuCd,EAAEc,EAAG,sBAA5C,MAAsEd,EAAEc,EAAG,iBAA3E,SAG7BW,WAAY,SAACX,GAAD,OAAO,+BAAOd,EAAEc,EAAG,cAC/BY,gBAAiB,SAACZ,GAAD,OAAO,+BAAOd,EAAEc,EAAG,mBACpCa,eAAgB,SAACb,GAAD,OAAO,+BAAOd,EAAEc,EAAG,kBACnCc,mBAAoB,SAACd,GAAD,OAAO,+BAAOd,EAAEc,EAAG,sBAEvCe,QAAS,SAACf,GAAD,OAAO,iCAAOd,EAAEc,EAAG,aAAZ,MAA6Bd,EAAEc,EAAG,mBAAlC,MAAyDd,EAAEc,EAAG,qBAA9D,MAAuFd,EAAEc,EAAG,2BAC5GgB,aAAc,SAAChB,GAAD,OAAO,iCAAOd,EAAEc,EAAG,WAAZ,MAA2Bd,EAAEc,EAAG,sBACrDiB,YAAa,SAACjB,GAAD,OAAO,iCAAOd,EAAEc,EAAG,WAAZ,MAA2Bd,EAAEc,EAAG,kBACpDkB,gBAAiB,SAAClB,GAAD,OAAO,0CAAad,EAAEc,EAAG,iBAAlB,MAAuCd,EAAEc,EAAG,iBAA5C,SAExBmB,eAAgB,SAACnB,GAAD,OAAO,0CAAad,EAAEc,EAAG,YAAlB,SACvBoB,WAAY,SAACpB,GAAD,OAAO,+CAAkBd,EAAEc,EAAG,aAAvB,cAAgDd,EAAEc,EAAG,YAArD,SAEnBqB,iBAAkB,SAACrB,GAAD,OAAO,gDAAmBd,EAAEc,EAAG,aAAxB,MAAyCd,EAAEc,EAAG,mBAA9C,eAA8Ed,EAAEc,EAAG,YAAnF,SACzBsB,iBAAkB,SAACtB,GAAD,OAAO,gDAAmBd,EAAEc,EAAG,aAAxB,MAAyCd,EAAEc,EAAG,mBAA9C,eAA8Ed,EAAEc,EAAG,YAAnF,SAEzBuB,kBAAmB,SAACvB,GAAD,OAAO,4CAAed,EAAEc,EAAG,cAApB,eAA+Cd,EAAEc,EAAG,eAApD,YAA6Ed,EAAEc,EAAG,cAAlF,QAE1BwB,oBAAqB,SAACxB,GAEpB,GADSA,EAAEvgB,MAAMgiB,mBAEf,OAAO,qDACT,IAAIC,GAAO1B,EAAEvgB,MAAMkiB,eAAiB,GAAK,IACzC,OAAID,EAAM,EAAU,yCAAYxC,EAAEc,EAAG,iBAAjB,UACX0B,GAAO,IAAa,2CAAcxC,EAAEc,EAAG,iBAAnB,eACtB,yCAAYd,EAAEc,EAAG,iBAAjB,QAIT4B,eAAgB,SAAC5B,GAAD,OAAO,0CAAad,EAAEc,EAAG,wBAAlB,QAAgDd,EAAEc,EAAG,mBAArD,MAA4Ed,EAAEc,EAAG,oBAAjF,MAAyGd,EAAEc,EAAG,gCACrI6B,iBAAkB,SAAC7B,GAAD,OAAO8B,IAAeC,WAAWlhB,KAAI,SAACia,EAAKxB,GAAN,OAAY0I,EAA8BhC,EAAGlF,EAAKxB,OACzG2I,mBAAoB,SAACjC,GAAD,OAAO,0CAAad,EAAEc,EAAG,4BAAlB,QAAoDd,EAAEc,EAAG,mBAAzD,MAAgFd,EAAEc,EAAG,wBAArF,MAAiHd,EAAEc,EAAG,mCACjJkC,qBAAsB,SAAClC,GAAD,OAAO8B,IAAeK,eAAethB,KAAI,SAACia,EAAKxB,GAAN,OAAY0I,EAA8BhC,EAAGlF,EAAKxB,OACjH8I,iBAAkB,SAACpC,GAAD,OAAO,0CAAad,EAAEc,EAAG,0BAAlB,QAAkDd,EAAEc,EAAG,mBAAvD,MAA8Ed,EAAEc,EAAG,sBAAnF,MAA6Gd,EAAEc,EAAG,gCAC3IqC,mBAAoB,SAACrC,GAAD,OAAO8B,IAAeQ,aAAazhB,KAAI,SAACia,EAAKxB,GAAN,OAAY0I,EAA8BhC,EAAGlF,EAAKxB,OAE7GiJ,UAAW,SAACvC,GAAD,OAAO,0CAAad,EAAEc,EAAG,mBAAlB,QAA2Cd,EAAEc,EAAG,mBAAhD,MAAuEd,EAAEc,EAAG,eAA5E,MAA+Fd,EAAEc,EAAG,iCACtHwC,YAAa,SAACxC,GAAD,OAAO8B,IAAeW,MAAM5hB,KAAI,SAACia,EAAKxB,GAAN,OAAY0I,EAA8BhC,EAAGlF,EAAKxB,OAC/FoJ,YAAa,SAAC1C,GAAD,OAAO,0CAAad,EAAEc,EAAG,qBAAlB,QAA6Cd,EAAEc,EAAG,mBAAlD,MAAyEd,EAAEc,EAAG,iBAA9E,MAAmGd,EAAEc,EAAG,2BAC5H2C,cAAe,SAAC3C,GAAD,OAAO8B,IAAec,UAAU/hB,KAAI,SAACia,EAAKxB,GAAN,OAAY0I,EAA8BhC,EAAGlF,EAAKxB,OACrGuJ,eAAgB,SAAC7C,GAAD,OAAO,0CAAad,EAAEc,EAAG,wBAAlB,QAAgDd,EAAEc,EAAG,mBAArD,MAA4Ed,EAAEc,EAAG,wBACxG8C,iBAAkB,SAAC9C,GAAD,OAAO8B,IAAeiB,WAAWliB,KAAI,SAACia,EAAKxB,GAAN,OAAY0I,EAA8BhC,EAAGlF,EAAKxB,OAEzG0J,oBAAqB,SAAChD,GAAD,OAAO,0CAAad,EAAEc,EAAG,sBAAlB,QAA8Cd,EAAEc,EAAG,mBAAnD,YAAgFd,EAAEc,EAAG,iCACjHiD,qBAAsB,SAACjD,GAAD,OAAO,0CAAad,EAAEc,EAAG,sBAAlB,QAA8Cd,EAAEc,EAAG,mBAAnD,UAA8Ed,EAAEc,EAAG,iCAEhHkD,gBAAiB,SAAClD,GAAD,OAAO,0CAAad,EAAEc,EAAG,kBAAlB,QAA0Cd,EAAEc,EAAG,mBAA/C,UAA0Ed,EAAEc,EAAG,iCACvGmD,gBAAiB,SAACnD,GAAD,OAAO,0CAAad,EAAEc,EAAG,kBAAlB,QAA0Cd,EAAEc,EAAG,mBAA/C,YAA4Ed,EAAEc,EAAG,iCACzGoD,0BAA2B,SAACpD,GAAD,OAAO,sDAAyBd,EAAE,EAAG,WAA9B,uBAA8DA,EAAE,EAAG,WAAnE,eAElCmE,gBAAiB,SAACrD,GAAD,OAAO,mDAAsBd,EAAEc,EAAG,WAA3B,cAAkDd,EAAEc,EAAG,WAAvD,UACxBsD,gBAAiB,SAACtD,GAAD,OAAO,mDAAsBd,EAAEc,EAAG,WAA3B,cAAkDd,EAAEc,EAAG,WAAvD,UACxBuD,gBAAiB,SAACvD,GAAD,OAAO,mDAAsBd,EAAEc,EAAG,WAA3B,cAAkDd,EAAEc,EAAG,WAAvD,WAE1B,SAASgC,EAA8BhC,EAAGlF,EAAKxB,GAC7C,IAAIkK,EAAO1I,EAAM,EAAI,MAAQ,MACzB2I,EAASpP,KAAKqP,IAAI5I,GAClB6I,EAAY,GAGhB,OAFIrK,EAAI,IAAGqK,EAAY,yCAAYzE,EAAEc,EAAG,cAAjB,MAAmC1G,MAChD,IAANA,IAASqK,EAAY,uCAAUzE,EAAEc,EAAG,kBACjC,iCAAewD,EAAMC,EAAQE,IAAlBrK,GAIpB,CAAC,CAAC,gBAAiB,QAAS,CAAC,iBAAkB,SAAU,CAAC,YAAa,QAAS,CAAC,YAAa,SAAShY,SAAQ,YAA6B,IAAD,mBAA1BsiB,EAA0B,KAAbC,EAAa,KACzI,CAAC,CAAC,WAAY,gBAAiB,CAAC,WAAY,kBAAmB,CAAC,SAAU,mBAAoB,CAAC,QAAS,cAAe,CAAC,QAAS,cAAe,CAAC,MAAO,cAAcviB,SAAQ,mCAAEwiB,EAAF,gBAC5K,CAAC,MAAO,UAAW,YAAYxiB,SAAQ,SAAAmM,GACrC,IAAIsW,EAAc,UAAMH,EAAN,YAAqBE,EAArB,YAAgCrW,GAC9CuW,EAAO,UAAMH,EAAN,YAAiBC,EAAjB,YAA4BrW,GACvCgS,EAAYsE,GAAkB,SAAC/D,GAAD,OAAO,iCAAOd,EAAEc,EAAD,UAAO4D,EAAP,WAAR,MAAwC1E,EAAEc,EAAGgE,gBAGxF,IAAMC,EAAiB,CACrBhE,aAAc,SAACD,EAAGkE,GAAJ,OAAY,iCAAOhF,EAAEc,EAAD,aAAR,MAA6Bd,EAAEc,EAAD,UAAOkE,EAAP,0BAA9B,MAAqEhF,EAAEc,EAAD,qBAAtE,MAAmGd,EAAEc,EAAD,UAAOkE,EAAP,6BAC9HhE,kBAAmB,SAACF,EAAGkE,GAAJ,OAAY,iCAAOhF,EAAEc,EAAD,UAAOkE,EAAP,kBAAR,MAAuChF,EAAEc,EAAD,sBACvEG,iBAAkB,SAACH,EAAGkE,GAAJ,OAAY,iCAAOhF,EAAEc,EAAD,UAAOkE,EAAP,kBAAR,MAAuChF,EAAEc,EAAD,2BACtEK,qBAAsB,SAACL,EAAGkE,GAAJ,OAAY,0CAAahF,EAAEc,EAAD,UAAOkE,EAAP,mBAAd,MAA8ChF,EAAEc,EAAD,sBAA/C,MAA6Ed,EAAEc,EAAD,iBAA9E,SAElCM,aAAc,SAACN,EAAGkE,GAAJ,OAAY,iCAAOhF,EAAEc,EAAD,aAAR,MAA6Bd,EAAEc,EAAD,UAAOkE,EAAP,0BAA9B,MAAqEhF,EAAEc,EAAD,qBAAtE,MAAmGd,EAAEc,EAAD,UAAOkE,EAAP,6BAC9H3D,kBAAmB,SAACP,EAAGkE,GAAJ,OAAY,iCAAOhF,EAAEc,EAAD,UAAOkE,EAAP,kBAAR,MAAuChF,EAAEc,EAAD,sBACvEQ,iBAAkB,SAACR,EAAGkE,GAAJ,OAAY,iCAAOhF,EAAEc,EAAD,UAAOkE,EAAP,kBAAR,MAAuChF,EAAEc,EAAD,2BACtEU,qBAAsB,SAACV,EAAGkE,GAAJ,OAAY,0CAAahF,EAAEc,EAAD,UAAOkE,EAAP,mBAAd,MAA8ChF,EAAEc,EAAD,sBAA/C,MAA6Ed,EAAEc,EAAD,iBAA9E,SAElCW,WAAY,SAACX,EAAGkE,GAAJ,OAAY,+BAAOhF,EAAEc,EAAD,UAAOkE,EAAP,gBAChCtD,gBAAiB,SAACZ,EAAGkE,GAAJ,OAAY,+BAAOhF,EAAEc,EAAD,UAAOkE,EAAP,qBACrCrD,eAAgB,SAACb,EAAGkE,GAAJ,OAAY,+BAAOhF,EAAEc,EAAD,UAAOkE,EAAP,oBACpCpD,mBAAoB,SAACd,EAAGkE,GAAJ,OAAY,+BAAOhF,EAAEc,EAAD,UAAOkE,EAAP,wBAExCC,QAAS,SAACnE,EAAGkE,GAAJ,OAAY,iCAAOhF,EAAEc,EAAD,aAAR,MAA6Bd,EAAEc,EAAD,UAAOkE,EAAP,qBAA9B,MAAgEhF,EAAEc,EAAD,qBAAjE,MAA8Fd,EAAEc,EAAD,UAAOkE,EAAP,6BACpHE,aAAc,SAACpE,EAAGkE,GAAJ,OAAY,iCAAOhF,EAAEc,EAAD,UAAOkE,EAAP,aAAR,MAAkChF,EAAEc,EAAD,sBAC7DqE,YAAa,SAACrE,EAAGkE,GAAJ,OAAY,iCAAOhF,EAAEc,EAAD,UAAOkE,EAAP,aAAR,MAAkChF,EAAEc,EAAD,kBAC5DsE,gBAAiB,SAACtE,EAAGkE,GAAJ,OAAY,0CAAahF,EAAEc,EAAD,UAAOkE,EAAP,mBAAd,MAA8ChF,EAAEc,EAAD,iBAA/C,SAE7BuE,UAAW,SAACvE,EAAGkE,GAAJ,OAAY,iCAAOhF,EAAEc,EAAD,aAAR,MAA6Bd,EAAEc,EAAD,UAAOkE,EAAP,uBAA9B,MAAkEhF,EAAEc,EAAD,qBAAnE,MAAgGd,EAAEc,EAAD,UAAOkE,EAAP,6BACxHM,eAAgB,SAACxE,EAAGkE,GAAJ,OAAY,iCAAOhF,EAAEc,EAAD,UAAOkE,EAAP,eAAR,MAAoChF,EAAEc,EAAD,sBACjEyE,cAAe,SAACzE,EAAGkE,GAAJ,OAAY,iCAAOhF,EAAEc,EAAD,UAAOkE,EAAP,eAAR,MAAoChF,EAAEc,EAAD,wBAChE0E,kBAAmB,SAAC1E,EAAGkE,GAAJ,OAAY,0CAAahF,EAAEc,EAAD,UAAOkE,EAAP,mBAAd,MAA8ChF,EAAEc,EAAD,mBAA/C,MAA0Ed,EAAEc,EAAD,iBAA3E,SAE/B2E,UAAW,SAAC3E,EAAGkE,GAAJ,OAAY,iCAAOhF,EAAEc,EAAD,aAAR,MAA6Bd,EAAEc,EAAD,UAAOkE,EAAP,uBAA9B,MAAkEhF,EAAEc,EAAD,qBAAnE,MAAgGd,EAAEc,EAAD,UAAOkE,EAAP,6BACxHU,eAAgB,SAAC5E,EAAGkE,GAAJ,OAAY,iCAAOhF,EAAEc,EAAD,UAAOkE,EAAP,eAAR,MAAoChF,EAAEc,EAAD,sBACjE6E,cAAe,SAAC7E,EAAGkE,GAAJ,OAAY,iCAAOhF,EAAEc,EAAD,UAAOkE,EAAP,eAAR,MAAoChF,EAAEc,EAAD,wBAChE8E,kBAAmB,SAAC9E,EAAGkE,GAAJ,OAAY,0CAAahF,EAAEc,EAAD,UAAOkE,EAAP,mBAAd,MAA8ChF,EAAEc,EAAD,mBAA/C,MAA0Ed,EAAEc,EAAD,iBAA3E,SAE/B+E,oBAAqB,SAAC/E,EAAGkE,GAEvB,GADSlE,EAAEvgB,MAAF,UAAWykB,EAAX,wBAEP,OAAO,qDACT,IAAIxC,GAAO1B,EAAEvgB,MAAF,UAAWykB,EAAX,oBAAmC,GAAK,IACnD,OAAIxC,EAAM,EAAU,yCAAYxC,EAAEc,EAAD,UAAOkE,EAAP,mBAAb,UACXxC,GAAO,IAAa,2CAAcxC,EAAEc,EAAD,UAAOkE,EAAP,mBAAf,eACtB,yCAAYhF,EAAEc,EAAD,UAAOkE,EAAP,mBAAb,SAIXtkB,OAAOwB,KAAKC,KAAeC,SAAQ,SAAAma,GAAM,OACvC7b,OAAOE,QAAQmkB,GAAgB3iB,SAAQ,mCAAEjB,EAAF,KAAO2kB,EAAP,YACrCplB,OAAOqlB,eAAexF,EAAtB,UAAsChE,EAAtC,YAAgDpb,GAAO,CACrD6kB,cAAc,EACdC,YAAY,EACZC,UAAU,EACV3M,MAAO,SAACoH,GAAD,OAAUmF,EAAMnF,EAAKpE,YAGlC,IAAMkE,EAAuB,CAC3B0F,iBAAkB,CAChBzF,YAAa,SAACJ,GAAD,OAAa,SAACQ,GAAD,OAAO,sCAASd,EAAEc,EAAG,YAAd,MAA8Bd,EAAEc,EAAG,cAAnC,cAA6Dd,EAAEc,EAAG,QAAlE,QAAgFd,EAAEc,EAAG,OAArF,MAAgGd,EAAEc,EAAG,aAArG,MAAsHR,EAAQ/G,MAA9H,Y,gCCjNrC,0XAAM6M,EAA4B,SAACC,GAAD,OAAWA,EAAMlR,KAAKmR,MAAMnR,KAAKoR,SAAWF,EAAMG,UAMpF,SAASC,EAAsBC,EAAKtR,GAGlC,OAFAsR,EAAMvR,KAAKwR,KAAKD,GAChBtR,EAAMD,KAAKmR,MAAMlR,GACVD,KAAKmR,MAAMnR,KAAKoR,UAAYnR,EAAMsR,EAAM,GAAKA,GAKtD,IAAME,EAAuB,SAACzlB,GAC5B,IAAI0lB,EAAOna,aAAaoa,QAAQ3lB,GAChC,OAAK0lB,EACEE,KAAKC,MAAMH,GADA,MAGdI,EAAqB,SAAC9lB,EAAKwf,GAAN,OACzBjU,aAAawa,QAAQ/lB,EAAK4lB,KAAKI,UAAUxG,KACrC5C,EAAY,SAAC4C,GAAD,OAChBoG,KAAKC,MAAMD,KAAKI,UAAUxG,KAEtByG,EAAmB,SAACC,EAAGC,GAAJ,OACvBnS,KAAKqP,IAAI6C,EAAIC,IAAM,MAEfC,EAAiB,SAACF,EAAGC,GAAJ,OACrBnS,KAAKqP,IAAI6C,EAAIC,IAAM,GACfzM,EAAQ,SAACe,EAAK4L,EAAKC,GACvB,OAAI7L,EAAM4L,EAAYA,EAClB5L,EAAM6L,EAAaA,EAChB7L,GAEH8L,EAAoB,SAAC3S,GAAD,OACxBA,EAAIyR,OAASzR,EAAIA,EAAIyR,OAAS,GAAK,MAG/BmB,EAAe,SAAC/L,GAAD,OAASf,EAAMe,EAAK,EAAG,MAG5C,SAASgM,EAAWC,EAAQC,EAAKtB,GAC/B,OAAQ,IAAIuB,MAAMvB,EAAS,GAAGwB,KAAKF,GAAOD,GAAQI,OAAOzB,K,4FCtC5C,SAAS0B,EAAmBnT,GACzC,OCJa,SAA4BA,GACzC,GAAIgT,MAAMI,QAAQpT,GAAM,OAAO,OAAAqT,EAAA,GAAiBrT,GDGzC,CAAkBA,IELZ,SAA0BsT,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAY7nB,OAAO2nB,GAAO,OAAON,MAAMS,KAAKH,GFIvD,CAAgBtT,IAAQ,OAAA0T,EAAA,GAA2B1T,IGLvE,WACb,MAAM,IAAI2T,UAAU,wIHIwE,K,gCIL9F,+CACe,SAASC,EAA2B7H,EAAG8H,GACpD,IAAIC,EAEJ,GAAsB,qBAAXP,QAAgD,MAAtBxH,EAAEwH,OAAOC,UAAmB,CAC/D,GAAIR,MAAMI,QAAQrH,KAAO+H,EAAK,YAA2B/H,KAAO8H,GAAkB9H,GAAyB,kBAAbA,EAAE0F,OAAqB,CAC/GqC,IAAI/H,EAAI+H,GACZ,IAAIzO,EAAI,EAEJ0O,EAAI,aAER,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAI5O,GAAK0G,EAAE0F,OAAe,CACxByC,MAAM,GAED,CACLA,MAAM,EACN1P,MAAOuH,EAAE1G,OAGb8O,EAAG,SAAWC,GACZ,MAAMA,GAERnJ,EAAG8I,GAIP,MAAM,IAAIJ,UAAU,yIAGtB,IAEIU,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLP,EAAG,WACDF,EAAK/H,EAAEwH,OAAOC,aAEhBS,EAAG,WACD,IAAIO,EAAOV,EAAGW,OAEd,OADAH,EAAmBE,EAAKN,KACjBM,GAETL,EAAG,SAAWO,GACZH,GAAS,EACTF,EAAMK,GAERzJ,EAAG,WACD,IACOqJ,GAAoC,MAAhBR,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIS,EAAQ,MAAMF,O,8FCnDtBM,GAAY,EACZC,EAAoB,GACpBC,EAAc,EAEGhd,EAEnB,aACE,GADa,oBACTzO,gBAAgByO,EAClB,MAAMxO,MAAM,2CAJGwO,EAOZid,UAAY,SAACC,GAAD,OAAWA,IAASA,EAAK7qB,OAAS6qB,EAAKrX,eAAiBqX,EAAKtrB,UAP7DoO,EAQZiB,qBAAuB,kBAAMkQ,YAAU4L,IAR3B/c,EASZyK,mBAAqB,kBAAM3W,OAAOwB,KAAKynB,IAT3B/c,EAUZC,iCAAmC,WACxC,IAAI6c,EAiBJ,OAhBAhpB,OAAOwB,KAAKwK,cAAc7L,QAAO,SAAAM,GAAG,OAAIA,EAAIgX,SAAS,iBAAe/V,SAAQ,SAAAiU,GAC1E,IAAKsT,EAAkBtT,GAAK,CAC1B,IAAI5W,EAAYmnB,YAAqBvQ,GACrC,IAAK5W,EAAW,OAChB,GAhBamN,EAgBJid,UAAUpqB,GAEjB,YAlBWmN,EAiBNkL,oBAAoBzB,GAGtB5W,EAAUqO,oBACbrO,EAAUqO,kBAAoB,GAC9BmZ,YAAmB5Q,EAAI5W,IAEzBkqB,EAAkBtT,GAAM5W,MAG5BiqB,GAAY,GACL,GA5BU9c,EA8BZmd,aAAe,SAACD,GACrB,IA/BiBld,EA+BRid,UAAUC,GAAnB,CAGA,IADA,IAAIzT,EAAE,oBAAgBuT,KACc,OAA7Bld,aAAaoa,QAAQzQ,IAC1BA,EAAE,oBAAgBuT,KACpB,IAAII,EAAQjM,YAAU+L,GAItB,OAHAE,EAAM3T,GAAKA,EACX4Q,YAAmB5Q,EAAI2T,GACvBL,EAAkBtT,GAAM2T,EACjB3T,IAxCUzJ,EA0CZ4B,gBAAkB,SAACsb,GACxB,IA3CiBld,EA2CRid,UAAUC,GAAnB,CACA,IAAIzT,EAAKyT,EAAKzT,GACV2T,EAAQjM,YAAU+L,GACtB7C,YAAmB5Q,EAAI2T,GACvBL,EAAkBtT,GAAM2T,IA/CPpd,EAiDZS,aAAe,SAACgJ,GAAD,OAAQA,EAAKsT,EAAkBtT,GAAM,MAjDxCzJ,EAmDZkL,oBAAsB,SAACzB,UACrBsT,EAAkBtT,GACzB3J,aAAaC,WAAW0J,IArDPzJ,EAuDZqd,sBAAwB,SAACC,EAAQnc,GACtC,IAAKmc,IAAWnc,EAAS,OAAO,KAChC,IAAI+b,EAzDald,EAyDDS,aAAa6c,GAC7B,OAAIJ,EAAKhc,kBACAgc,EAAKhc,kBAAkBC,QADhC,GA1DiBnB,EA6DZ4Q,cAAgB,SAAC0M,EAAQhd,GAC9B,IAAI4c,EA9Dald,EA8DDS,aAAa6c,GACxBJ,GAAS5c,GAAQA,EAAIa,UACrB+b,EAAKhc,oBACRgc,EAAKhc,kBAAoB,IAC3Bgc,EAAKhc,kBAAkBZ,EAAIa,SAAWb,EAAImJ,GAlEzBzJ,EAmEZ4B,gBAAgBsb,KAnEJld,EAqEZud,sBAAwB,SAACD,EAAQnc,GACtC,IAAI+b,EAtEald,EAsEDS,aAAa6c,GACxBJ,GAAS/b,GACT+b,EAAKhc,mBAAsBgc,EAAKhc,kBAAkBC,KACvD+b,EAAKhc,kBAAkBC,GAAW,GAzEjBnB,EA0EZ4B,gBAAgBsb,KA1EJld,EA4EZwd,mBAAqB,SAACjY,EAAa8K,GACxC,IAAIxd,EA7EamN,EA6EIS,aAAa8E,GAC7B1S,IACLA,EAAUqO,kBAAoB,GAC9BpN,OAAOE,QAAQqc,GAAa7a,SAAQ,mCAAEjB,EAAF,KAAO6M,EAAP,YAClCvO,EAAUqO,kBAAkB3M,GAAO6M,KACrCpB,EAAkB4B,gBAAgB/O,M,6IC9EvB4qB,EAPE,CACftmB,OAAQumB,IACRtmB,MAAOumB,IACPtmB,MAAOumB,IACPtmB,OAAQumB,IACRtmB,QAASumB,K,iCCPUC,EAEnB,aAAgB,GAAD,oBAAKxsB,gBAAgBwsB,EAAc,MAAMvsB,MAAM,2CAF3CusB,EAKZnY,WAAa,SAACiL,GACnB,IAAIjL,EAAa,GAMjB,OALA9R,OAAOE,QAAQ6c,GAAWrb,SAAQ,YAAiB,IAAD,mBAAdjB,EAAc,KAAT+L,EAAS,KAC3CA,IACDsF,EAAWtF,EAAIK,QAASiF,EAAWtF,EAAIK,QAAQlL,KAAKlB,GACnDqR,EAAWtF,EAAIK,QAAU,CAACpM,OAE1BqR,G,YCFUP,E,WAEnB,aAAgB,GAAD,oBAAK9T,gBAAgB8T,EAAU,MAAM7T,MAAM,0C,0DAkD1Cmb,EAAOqR,GAA0B,IAAhBC,EAAe,wDAC1CC,EAAO,KACPC,EAAa5V,KAAK6V,MAAMzR,EAAQqR,EAAS,IAC7C,IAAKG,EAAY,OAAO,KACxB,IAAIE,EAAa,SAAbA,EAAcrP,EAAK7G,GACrB,IAAI+V,EAAJ,CACA,GAAI/V,EAAIyR,OAAQ,CACd,GAAIzR,EAAIyR,OAASuE,EAAY,OAC7B,IAAIG,EAAMnW,EAAIoW,QAAO,SAACC,EAAMC,GAAP,OAAaD,EAAOC,IAAG,GAC5C,GAAIR,EAAO,CACT,GAAIK,EAAMtP,GAAO,KAAO,OACxB,GAAIwL,YAAiB8D,EAAKtP,GAExB,YADAkP,EAAO/V,OAGJ,CACL,GAAImW,EAAMtP,EAAM,EAAG,OACnB,GAAI2L,YAAe2D,EAAKtP,GAEtB,YADAkP,EAAO/V,IAKb6V,EAAS3C,QAAQqD,UAAUlpB,SAAQ,SAAA0oB,GACjCG,EAAW1R,EAAD,sBAAYxE,GAAZ,CAAiB+V,UAI/B,OADAG,EAAW1R,EAAO,IACXuR,I,sCAEc9T,EAAOoH,GAAU,IAAD,IACrC,IAAKA,IAAYA,EAAQ7E,MAAO,MAAO,CAAEpM,OAAO,GAChD,IAAIoM,EAAQgS,WAAWnN,EAAQ7E,OAC/B,GAAIiS,MAAMjS,GAAQ,MAAO,CAAEpM,OAAO,EAAOse,IAAI,iBAC7C,IAAIxN,EAAWjH,EAAMiH,SACrB,IAAKA,EAAU,MAAO,CAAE9Q,OAAO,EAAOse,IAAI,2BAC1C,IAAIC,EAA4C,MAAlC/W,IAAKE,YAAYuJ,EAAQjd,KACnCypB,EAAWzsB,KAAKwtB,mBAAmBvN,EAAQjd,IAAK8c,GAChD2N,EAAQztB,KAAK0tB,SAAStS,EAAOqR,EAAUc,GAE3C,IAAKE,GAA0B,IAAjBA,EAAMpF,OAAc,MAAO,CAAErZ,OAAO,EAAOse,IAAI,qCAC7D,IAAIK,GAAsB,UAAAxpB,IAAkB2b,UAAlB,eAA6Bvb,uBAAwB,aAAIJ,IAAkB2b,UAAtB,aAAI,EAA6Bxb,cAAe,EAC/H,GAAImpB,EAAMpF,OAASsF,EAAqB,MAAO,CAAE3e,OAAO,EAAOse,IAAI,sCAAD,OAAwCK,EAAxC,YAElE,IAAIpF,EAAMkE,EAAS,GAAKgB,EAAMpF,OAC1BpR,EAAMwV,EAASA,EAASpE,OAAS,GAAKoF,EAAMpF,OAChD,MAAO,CAAErZ,OAAO,EAAM4e,WAAYpE,aAAepO,EAAQmN,IAAQtR,EAAMsR,GAAQ,KAAM+E,IAAI,2BAAD,OAA6BG,EAAMpF,OAAnC,8BAA+DoF,EAAM5D,KAAK,MAA1E,KAAoF4D,W,yCAIpJ5U,GACxB,IAD+B,EAC3BgV,EAAoB,EAAGC,EAAoB,EAC3CC,EAAqBlV,EAAMmH,SAASxc,KAAI,SAAAyc,GAAO,OAAInM,EAASka,gBAAgBnV,EAAOoH,MAFxD,cAGT8N,GAHS,IAG/B,4BACE,IADF,QACe/e,MACX,MAAO,CAAE+e,qBAAoB/e,OAAO,EAAOse,IAAK,iCAAkCO,oBAAmBC,sBAL1E,8BAQ/B,GAAIC,EAAmBE,MAAK,SAAAhO,GAAO,aAAW,OAAPA,QAAO,IAAPA,GAAA,UAAAA,EAASwN,aAAT,eAAgBpF,QAAS,MAAM0F,EAAmBE,MAAK,SAAChO,GAAD,OAAcA,EAAQwN,SAClH,MAAO,CAAEM,qBAAoB/e,OAAO,EAAOse,IAAK,uEAAwEO,oBAAmBC,qBAC7I,IAAII,EAAoBH,EAAmBf,QAAO,SAACD,EAAKoB,GAAN,OAAcpB,GAAOoB,EAAInf,OAASmf,EAAIV,MAAQU,EAAIV,MAAMpF,OAAS,KAAI,GACnH+F,EAAiBta,EAASsa,eAAevV,EAAMjH,MAAOiH,EAAMiH,UAC5DuO,EAAoBva,EAASwa,mBAAmBzV,EAAMiH,UAE1D,GAAKoO,EAAoBE,EAAkBC,EACzC,MAAO,CAAEN,qBAAoB/e,OAAO,EAAOse,IAAI,oCAAD,OAAsCY,EAAtC,8CAA6FE,EAA7F,uEAA0KC,EAA1K,MAAiMR,oBAAmBC,qBAEpQ,IAAIS,EAAyBR,EAAmBf,QAAO,SAACD,EAAKoB,GAAN,OAAcpB,GAAOoB,EAAInf,OAASmf,EAAIV,OAASU,EAAIP,WAAcO,EAAIP,WAAaO,EAAIV,MAAMpF,OAAU,KAAI,GAGjK,MAAO,CAAErZ,OAAO,EAAM+e,qBAAoBG,oBAAmBE,iBAAgBI,oBAAqBH,EAAmBR,kBAFrHA,EAAoBrE,YAAa+E,EAAyBF,GAE8EP,kBADxIA,EAAoBtE,aAAc+E,EAA0C,IAAjBH,GAAwBC,M,0CAiF1DI,EAAYza,GACrC,IAAIjF,EAAMJ,IAAiBmB,YAAY2e,GACvC,GAAK1f,EAAL,CACA,IAAI2f,EAAkB3f,EAAIE,SACtB0f,EAAoB3a,GAAe,GACvC,GAAI0a,IAAoBC,EAAxB,CACA,IAAI/e,EAAUb,EAAIa,QACdgf,EAAuBngB,IAAkBqd,sBAAsB6C,EAAkB/e,GACjFif,EAAqBlgB,IAAiBmB,YAAY8e,GAGlDC,EAAoBlgB,IAAiBmgB,cAAc/f,EAAK8f,GACvDlgB,IAAiB+K,kBAAkB3K,EAAImJ,GAAIyW,GAG5CA,GACFlgB,IAAkB4Q,cAAcsP,EAAkB5f,GAEhD2f,IACEG,EACFpgB,IAAkB4Q,cAAcqP,EAAiBG,GAEjDpgB,IAAkBud,sBAAsB0C,EAAiB9e,U,KAhO5CkE,EAKZC,sBAAwB,kBAAMrQ,KALlBoQ,EAMZgD,mBAAqB,SAAC9T,GAAD,MAAM1C,EAAN,uDAAe,GAAf,OAAkC,OAAZmD,UAAY,IAAZA,KAAA,UAAAA,IAAeT,UAAf,eAAqBlC,OAAQR,GAN5DwT,EAOZib,gCAAkC,SAACtU,GAAD,OACvClY,OAAOE,QAAQgB,KAAcf,QAAO,mCAAOssB,GAAP,kBAAmBA,EAAOhuB,OAAQguB,EAAOhuB,OAAOqnB,OAAU,KAAO5N,MARpF3G,EASZmb,qBAAuB,SAAC7f,EAAQQ,GAAT,QAAkBtP,EAAlB,uDAA2B,GAA3B,OAA8C,OAAZmD,UAAY,IAAZA,KAAA,UAAAA,IAAe2L,UAAf,mBAAwB8f,cAAxB,eAAiCtf,KAAYtP,GAT1FwT,EAUZqb,qBAAuB,SAAC/f,EAAQQ,GAAT,QAAkBtP,EAAlB,uDAA2B,KAA3B,OAAgD,OAAZmD,UAAY,IAAZA,KAAA,UAAAA,IAAe2L,UAAf,mBAAwBggB,aAAxB,eAAgCxf,KAAYtP,GAV3FwT,EAWZub,yBAA2B,SAACjgB,GAAD,MAAS9O,EAAT,uDAAkB,KAAlB,OAAuC,OAAZmD,UAAY,IAAZA,KAAA,UAAAA,IAAe2L,UAAf,eAAwBkgB,OAAQhvB,GAX1EwT,EAaZmL,oBAAsB,kBAAM1c,OAAOwB,KAAK4B,MAb5BmO,EAcZyb,oBAAsB,SAAC3f,GAAD,IAAUtP,EAAV,uDAAmB,GAAnB,OAC3BqF,IAAkBiK,GAAWjK,IAAkBiK,GAAS9O,KAAOR,GAf9CwT,EAgBZ0b,oBAAsB,SAAC5f,GAAD,IAAUtP,EAAV,uDAAmB,GAAnB,OAC1BsP,GAAWsc,EAAStc,GAAY,cAAC,IAAD,CAAiB2B,KAAM2a,EAAStc,GAAwB4B,UAAU,SAAnB5B,GAAgCtP,GAjB/FwT,EAmBZ2b,4BAA8B,SAAC7f,GAA0B,IAAjBtP,EAAgB,uDAAP,GACtD,IAAKsP,EAAS,OAAOtP,EACrB,IAAIQ,EArBagT,EAqBDyb,oBAAoB3f,GACpC,IAAK9O,EAAM,OAAOR,EAClB,IAAIovB,EAvBa5b,EAuBG0b,oBAAoB5f,GACxC,OAAK8f,EACG,iCAAOA,EAAP,IAAkB5uB,KADJR,GAxBLwT,EA6BZ6b,aAAe,SAACvgB,GAAD,OAAY3L,IAAa2L,GAAU3L,IAAa2L,GAAQpO,OAAS,IA7BpE8S,EAgCZ8b,gBAAkB,kBAAM9rB,KAhCZgQ,EAiCZ+L,iBAAmB,SAAC7c,EAAK8c,EAAUlO,GAAuB,IAAD,IAAftR,EAAe,uDAAN,EACpDwB,EAAI,UAAG4C,IAAsBob,UAAzB,iBAAG,EAAkC9c,UAArC,aAAG,EAAyC4O,GACpD,OAAI9P,KACC,OAAIkB,QAAJ,IAAIA,OAAJ,EAAIA,EAAKgX,SAAS,mBApCNlG,EAqCH+L,iBAAiB,gBAAiBC,EAAUlO,EAAOtR,GAC1DA,IAtCUwT,EA0CZ+b,eAAiB,kBAAMttB,OAAOwB,KAAK0B,MA1CvBqO,EA2CZwa,mBAAqB,SAACxO,GAAD,OAAc3b,IAAkB2b,GACzD3b,IAAkB2b,GAAUxb,YAAcH,IAAkB2b,GAAUvb,qBAAwB,GA5C9EuP,EA6CZsa,eAAiB,SAACxc,EAAOkO,GAAR,OACtB9I,KAAKwR,MAAiB,EAAX1I,EAAelO,GAAS,IA9ClBkC,EA+CZgc,wBAA0B,SAACjX,GAAD,OAC/BA,EAAMmH,SAASgN,QAAO,SAACD,EAAKoB,GAAN,OACpBpB,GAAOoB,GAAOA,EAAI/S,MAAQ,EAAI,KAAI,IAjDnBtH,EAkDZ0Z,mBAAqB,SAACtrB,EAAY4d,GAAb,OAA2B5d,GAAc4d,EACnEra,IAAqBvD,GAAY4d,GAAY,IAnD5BhM,EA6HZO,WAAamY,EAAanY,WA7HdP,EA+HZic,gBAAkB,SAAC3gB,GAAD,MAAS9O,EAAT,uDAAkB,KAAlB,OACX,OAAZmD,UAAY,IAAZA,KAAA,UAAAA,IAAe2L,UAAf,eAAwBkgB,OAAQhvB,GAhIfwT,EAiIZkc,uBAAyB,SAAC5gB,EAAQ+Q,GAAT,QAAoB7f,EAApB,uDAA6B,KAA7B,OAC9Bsf,aAAU,UAlIO9L,EAkIFic,gBAAgB3gB,UAArB,mBAA+B+Q,UAA/B,eAA2C/d,QAAS9B,IAlI7CwT,EAoIZuM,4BAA8B,SAACjR,EAAQ+Q,EAAW/c,GAAmC,IAAnB9C,EAAkB,uDAAT,KAChF,IAAK8C,EAAgB,OAAO9C,EAC5B,IAAIqB,EAtIamS,EAsIMmc,gCAAgC7gB,EAAQ+Q,GAC/D,IAAKxe,EAAa,OAAOrB,EAHgE,MAInE+C,IAAiBC,mBAAmB3B,EAAa,QAASyB,GAJS,mBAIpFhB,EAJoF,KAI7EmB,EAJ6E,KAKzF,OAAKA,EACEhB,OAAOC,YAAYD,OAAOE,QAAQL,GAAOoB,KAAI,yCAAgB,CAAhB,UAA4BD,OAD5DjD,GAzIHwT,EA4IZ6L,2BAA6B,SAACtL,GACnC,IAAI6b,EAAoB,GAMxB,OALA3tB,OAAOE,QAAQ4R,GAAYpQ,SAAQ,qCAAEmL,EAAF,KAAU+gB,EAAV,YACrB,OAAZ1sB,UAAY,IAAZA,KAAA,UAAAA,IAAe2L,UAAf,eAAwBkgB,OAAQ/sB,OAAOE,QAAQgB,IAAa2L,GAAQkgB,MAAMrrB,SAAQ,mCAAEkc,EAAF,KAAa/E,EAAb,YAChFgV,SAASjQ,IAAcgQ,EAAO9H,QAAUjN,EAAMhZ,OAASG,OAAOwB,KAAKqX,EAAMhZ,OAAOimB,QAChF9lB,OAAOE,QAAQ2Y,EAAMhZ,OAAO6B,SAAQ,mCAAEjB,EAAF,KAAOmU,EAAP,YAClC+Y,EAAkBhsB,KAAK,CAAElB,MAAKmU,qBAC7B+Y,GAnJUpc,EAqJZ6C,sBAAwB,SAACtC,GAC9B,IAAI6b,EAAoB,GAQxB,OAPA3tB,OAAOE,QAAQ4R,GAAYpQ,SAAQ,YAAuB,IAAD,qBAApBmL,EAAoB,KAAZ+gB,EAAY,KACvD,UAAI1sB,UAAJ,IAAIA,KAAJ,UAAIA,IAAe2L,UAAnB,aAAI,EAAwBkgB,KAAM,CAChC,IAAIe,EAAa9tB,OAAOwB,KAAKN,IAAa2L,GAAQkgB,MAAM5sB,QAAO,SAAAyd,GAAS,OAAIiQ,SAASjQ,IAAcgQ,EAAO9H,UACtGgI,EAAWhI,SACb6H,EAAkB9gB,GAAUihB,OAG3BH,GA9JUpc,EAiKZwc,yBAA2B,SAAClhB,EAAQ+Q,EAAW9e,GAAiC,IAAD,MAAhBf,EAAgB,uDAAP,GACzEiwB,EAAa,OAAG9sB,UAAH,IAAGA,KAAH,UAAGA,IAAe2L,UAAlB,iBAAG,EAAwBkgB,YAA3B,iBAAG,EAA+BnP,UAAlC,aAAG,EAA2C9K,KAC/D,OAAKkb,EACwB,oBAAlBA,EACFA,EAAclvB,GACdkvB,GAEFjwB,EALoBA,GAnKVwT,EA0KZmc,gCAAkC,SAAC7gB,EAAQ+Q,GAAT,UAAoB7f,EAApB,uDAA6B,KAA7B,OAC3B,OAAZmD,UAAY,IAAZA,KAAA,UAAAA,IAAe2L,UAAf,mBAAwBkgB,YAAxB,mBAA+BnP,UAA/B,eAA2Cxe,cAAerB,GA3KzCwT,EA6KZ0c,4BAA8B,SAACxgB,GACpC,IAAIygB,EAAwB,GAwB5B,OAvBAluB,OAAOE,QAAQgB,KAAcQ,SAAQ,YAAuB,IAAD,mBAApBmL,EAAoB,KAAZshB,EAAY,KACrDC,EAAY,GACZC,GAAe,EACfF,EAAOpB,MACT/sB,OAAOE,QAAQiuB,EAAOpB,MAAMrrB,SAAQ,YAAgC,IAAD,mBAA7Bkc,EAA6B,KAAlB0Q,EAAkB,KAKjE,GAJIA,EAAazuB,OAASG,OAAOwB,KAAK8sB,EAAazuB,OAAOimB,OAAS,IACjEsI,EAAUxQ,GAAaP,YAAUiR,EAAazuB,OAC9CwuB,GAAe,GAEbC,EAAalvB,YAAa,CAC5B,IAAIyB,EAAiBC,IAAiBytB,kBAAkB9gB,EAAsB,CAAEE,OAAQd,EAAQe,QAASgQ,IACzG,GAAI/c,EAAgB,CAClB,IAAIgd,EA3LGtM,EA2LcuM,4BAA4BjR,EAAQ+Q,EAAW/c,GAChEgd,IACFuQ,EAAUxQ,GAAaP,YAAUQ,GACjCwQ,GAAe,QAKrBA,IACFH,EAAsBrhB,GAAUuhB,MAE7BF,I,sFC/MPlF,GAAY,EACZwF,EAAmB,GACnBC,EAAa,EACIriB,EAEnB,aACE,GADa,oBACT3O,gBAAgB2O,EAClB,MAAM1O,MAAM,2CAJG0O,EAOZ+c,UAAY,SAAC3c,GAAD,OAChBA,IAAQA,EAAIK,SAAWL,EAAI+Q,WAAa/Q,EAAIa,UAAYb,EAAIM,aAR5CV,EASZE,oBAAsB,kBAAM+Q,YAAUmR,IAT1BpiB,EAUZsiB,kBAAoB,kBAAM1uB,OAAOwB,KAAKgtB,IAV1BpiB,EAWZD,iCAAmC,WACxC,IAAI6c,EAaJ,OAZAhpB,OAAOwB,KAAKwK,cAAc7L,QAAO,SAAAM,GAAG,OAAIA,EAAIgX,SAAS,gBAAc/V,SAAQ,SAAAiU,GACzE,IAAK6Y,EAAiB7Y,GAAK,CACzB,IAAInJ,EAAM0Z,YAAqBvQ,GAC/B,IAAKnJ,EAAK,OACV,GAjBaJ,EAiBJ+c,UAAU3c,GAEjB,YAnBWJ,EAkBNuiB,mBAAmBhZ,GAG1B6Y,EAAiB7Y,GAAMnJ,MAG3Bwc,GAAY,GACL,GAzBU5c,EA2BZmB,YAAc,SAACoI,GAAD,OAAQA,EAAK6Y,EAAiB7Y,GAAM,MA3BtCvJ,EA4BZwiB,eAAiB,SAACpiB,GA5BNJ,EA6BZuiB,mBAAmBniB,EAAImJ,KA7BXvJ,EA+BZyiB,YAAc,SAACriB,GACpB,GAhCiBJ,EAgCR+c,UAAU3c,GAAM,OAAO,KAGhC,IADA,IAAImJ,EAAE,mBAAe8Y,KACe,OAA7BziB,aAAaoa,QAAQzQ,IAC1BA,EAAE,mBAAe8Y,KACnB,IAAIK,EAAOzR,YAAU7Q,GAIrB,OAHAsiB,EAAKnZ,GAAKA,EACV4Q,YAAmB5Q,EAAImZ,GACvBN,EAAiB7Y,GAAMmZ,EAChBnZ,GAzCUvJ,EA2CZa,eAAiB,SAACT,GACvB,IA5CiBJ,EA4CR+c,UAAU3c,GAAnB,CACA,IAAImJ,EAAKnJ,EAAImJ,GACTmZ,EAAOzR,YAAU7Q,GACrB+Z,YAAmB5Q,EAAImZ,GACvBN,EAAiB7Y,GAAMmZ,IAhDN1iB,EAkDZuiB,mBAAqB,SAACI,UACpBP,EAAiBO,GACxB/iB,aAAaC,WAAW8iB,IApDP3iB,EAuDZ+K,kBAAoB,SAAC7J,EAAOZ,GACjC,GAAKY,EAAL,CACA,IAAId,EAzDaJ,EAyDFmB,YAAYD,GACtBd,GAAOA,EAAIE,WAAaA,IAC7BF,EAAIE,SAAWA,EA3DEN,EA4DZa,eAAeT,MA5DHJ,EA8DZmgB,cAAgB,SAACyC,EAAMC,GAC5B,IAAIC,EAAOF,EAAKtiB,SACZyiB,EAAOF,EAAKviB,SAhECN,EAiEZ+K,kBAAkB6X,EAAKrZ,GAAIwZ,GAjEf/iB,EAkEZ+K,kBAAkB8X,EAAKtZ,GAAIuZ,IAlEf9iB,EAoEZgjB,kBAAoB,SAACC,EAAQC,GAAT,OApERljB,EAqEZmgB,cArEYngB,EAqEOmB,YAAY8hB,GArEnBjjB,EAqEiCmB,YAAY+hB,M,sGCvE7CxuB,E,WACnB,aAAgB,GAAD,oBAAKrD,gBAAgBqD,EAAkB,MAAMpD,MAAM,0C,mEACzC6xB,EAAcC,GAAY,IAAD,EAC1C7hB,EAAoB6hB,EAApB7hB,OAAQC,EAAY4hB,EAAZ5hB,QACd,GAAI2hB,EACF,OAAO,UAAAA,EAAa1V,MAAK,SAAAnM,GAAI,OAAIA,EAAKC,SAAWA,KAAYC,GAAYA,GAAWF,EAAKE,UAAYA,aAA9F,eAA0G/M,iBAAkB,I,qCAEjH0uB,EAAcC,EAAW3uB,GAAiB,IACxD8M,EAAoB6hB,EAApB7hB,OAAQC,EAAY4hB,EAAZ5hB,QACT2hB,IAAcA,EAAe,IAClC,IAAIE,EAAQF,EAAaG,WAAU,SAAAhiB,GAAI,OAAIA,EAAKC,SAAWA,KAAYC,GAAYA,GAAWF,EAAKE,UAAYA,MAC/G,IAAK/M,GAAkB4uB,GAAS,EAE9BF,EAAaI,OAAOF,EAAO,OACtB,CACL,IAAIG,EAAU,CAAEjiB,SAAQ9M,kBACpB+M,IAASgiB,EAAQhiB,QAAUA,GAC3B6hB,GAAS,EACXF,EAAaE,GAASG,EAEtBL,EAAa5tB,KAAKiuB,GAEtB,OAAOL,I,yCAEiBnwB,EAAaywB,EAAWhvB,GAAmC,IAAnB9C,EAAkB,uDAAT,CAAC,GAAI,GAC9E,GAAIspB,MAAMI,QAAQroB,GAAc,CAE9B,IAF8B,EAE1B0wB,EAAyBjvB,EACzBkvB,EAAsB,KAHI,cAID3wB,GAJC,IAI9B,2BAA0C,CAAC,IAAhC4wB,EAA+B,QACxC,KAAIF,EAAyBE,EAAeC,UACvC,CACHF,EAAsBC,EACtB,MAHoDF,GAA0BE,EAAeC,UALnE,8BAW9B,IAAKF,EAAqB,OAAOhyB,EACjC,IAAIiD,EAASmZ,YAAM2V,EAAwB,EAAGC,EAAoBE,UAClE,MAAO,CAACF,EAAoBF,GAAY7uB,GAGxC,IAAIA,EAASmZ,YAAMtZ,EAAgB,EAAGzB,EAAY6wB,UAClD,MAAO,CAAC7wB,EAAYywB,GAAY7uB,O,sCCnCvBS,IATO,CACpBoJ,MAAO,CAAEtM,KAAM,SACf0M,IAAK,CAAE1M,KAAM,OACbyM,QAAS,CAAEzM,KAAM,WACjB2M,MAAO,CAAE3M,KAAM,SACf4M,KAAM,CAAE5M,KAAM,QACduM,KAAM,CAAEvM,KAAM,U,wRCHVwgB,EAAW,CAEf/Q,QAAS,CAAEzP,KAAM,KAAM0gB,OAAQ,WAC/B5c,GAAI,CAAE9D,KAAM,KAAM0gB,OAAQ,WAC1B1c,IAAK,CAAEhE,KAAM,KAAMoW,KAAM,IAAKsK,OAAQ,cACtC/Q,SAAU,CAAE3P,KAAM,KAAM0gB,OAAQ,YAEhC9Q,SAAU,CAAE5P,KAAM,MAAO0gB,OAAQ,YACjC3c,IAAK,CAAE/D,KAAM,MAAO0gB,OAAQ,YAC5Bzc,KAAM,CAAEjE,KAAM,MAAOoW,KAAM,IAAKsK,OAAQ,eACxC5Q,UAAW,CAAE9P,KAAM,MAAO0gB,OAAQ,aAClCiR,WAAY,CAAE3xB,KAAM,aAAc0gB,OAAQ,cAE1C3Q,SAAU,CAAE/P,KAAM,MAAO0gB,OAAQ,YACjC9b,IAAK,CAAE5E,KAAM,MAAO0gB,OAAQ,YAC5Bxc,KAAM,CAAElE,KAAM,MAAOoW,KAAM,IAAKsK,OAAQ,eACxCzQ,UAAW,CAAEjQ,KAAM,MAAO0gB,OAAQ,aAElCvc,cAAe,CAAEnE,KAAM,qBAAsBoW,KAAM,KACnDwb,QAAS,CAAE5xB,KAAM,eAAgBoW,KAAM,KACvChS,cAAe,CAAEpE,KAAM,YAAaoW,KAAM,KAC1Cyb,QAAS,CAAE7xB,KAAM,UAAWoW,KAAM,KAClC/R,QAAS,CAAErE,KAAM,qBACjBsE,UAAW,CAAEtE,KAAM,kBAAmBoW,KAAM,KAC5C7R,UAAW,CAAEvE,KAAM,YAAaoW,KAAM,KACtC5R,SAAU,CAAExE,KAAM,WAAYoW,KAAM,KACpC3R,UAAW,CAAEzE,KAAM,gBAAiBoW,KAAM,KAC1CnF,KAAM,CAAEjR,KAAM,WACd8xB,SAAU,CAAE9xB,KAAM,yBAA0BoW,KAAM,KAClD2b,WAAY,CAAE/xB,KAAM,kBAAmBoW,KAAM,KAC7C4b,OAAQ,CAAEhyB,KAAM,YAAaoW,KAAM,KAGnC0L,aAAc,CAAE9hB,KAAM,qBACtBmiB,aAAc,CAAEniB,KAAM,sBACtBwiB,WAAY,CAAExiB,KAAM,uBACpB+hB,kBAAmB,CAAE/hB,KAAM,8BAC3BoiB,kBAAmB,CAAEpiB,KAAM,+BAC3ByiB,gBAAiB,CAAEziB,KAAM,gCACzBgiB,iBAAkB,CAAEhiB,KAAM,0BAC1BqiB,iBAAkB,CAAEriB,KAAM,2BAC1B0iB,eAAgB,CAAE1iB,KAAM,4BACxBiyB,mBAAoB,CAAEjyB,KAAM,0BAA2BoW,KAAM,KAC7D8b,mBAAoB,CAAElyB,KAAM,2BAA4BoW,KAAM,KAC9D+b,mBAAoB,CAAEnyB,KAAM,0BAA2BoW,KAAM,KAC7Dgc,mBAAoB,CAAEpyB,KAAM,2BAA4BoW,KAAM,KAC9D6L,oBAAqB,CAAEjiB,KAAM,gCAAiCoW,KAAM,SACpEkM,oBAAqB,CAAEtiB,KAAM,iCAAkCoW,KAAM,SACrE8L,qBAAsB,CAAEliB,KAAM,qCAAsCoW,KAAM,SAC1EmM,qBAAsB,CAAEviB,KAAM,sCAAuCoW,KAAM,SAC3EuM,mBAAoB,CAAE3iB,KAAM,uCAAwCoW,KAAM,SAG1EgQ,UAAW,CAAEpmB,KAAM,kBACnBwmB,UAAW,CAAExmB,KAAM,kBACnBqmB,eAAgB,CAAErmB,KAAM,2BACxBymB,eAAgB,CAAEzmB,KAAM,2BACxBsmB,cAAe,CAAEtmB,KAAM,uBACvB0mB,cAAe,CAAE1mB,KAAM,uBACvBqyB,gBAAiB,CAAEryB,KAAM,uBAAwBoW,KAAM,KACvDkc,gBAAiB,CAAEtyB,KAAM,uBAAwBoW,KAAM,KACvDmc,gBAAiB,CAAEvyB,KAAM,uBAAwBoW,KAAM,KACvDoc,gBAAiB,CAAExyB,KAAM,uBAAwBoW,KAAM,KACvD8M,iBAAkB,CAAEljB,KAAM,6BAA8BoW,KAAM,SAC9D+M,iBAAkB,CAAEnjB,KAAM,6BAA8BoW,KAAM,SAC9DmQ,kBAAmB,CAAEvmB,KAAM,kCAAmCoW,KAAM,SACpEuQ,kBAAmB,CAAE3mB,KAAM,kCAAmCoW,KAAM,SACpEqc,aAAc,CAAEzyB,KAAM,qBAAsBoW,KAAM,KAClDsc,aAAc,CAAE1yB,KAAM,qBAAsBoW,KAAM,KAElDwM,QAAS,CAAE5iB,KAAM,uBACjB6iB,aAAc,CAAE7iB,KAAM,gCACtB8iB,YAAa,CAAE9iB,KAAM,4BACrB+iB,gBAAiB,CAAE/iB,KAAM,uCAAwCoW,KAAM,SAEvE4P,QAAS,CAAEhmB,KAAM,wBACjBimB,aAAc,CAAEjmB,KAAM,iCACtBkmB,YAAa,CAAElmB,KAAM,6BACrBmmB,gBAAiB,CAAEnmB,KAAM,wCAAyCoW,KAAM,SAExE4M,eAAgB,CAAEhjB,KAAM,sBAAuBoW,KAAM,SACrD6M,WAAY,CAAEjjB,KAAM,kBAAmBoW,KAAM,SAC7Cuc,cAAe,CAAE3yB,KAAM,gBAAiBoW,KAAM,KAC9Cwc,SAAU,CAAE5yB,KAAM,eAAgBoW,KAAM,KACxCyc,QAAS,CAAE7yB,KAAM,UAAWoW,KAAM,KAClC0c,aAAc,CAAE9yB,KAAM,eAAgBoW,KAAM,KAC5C2c,YAAa,CAAE/yB,KAAM,2BAA4BoW,KAAM,KACvD4c,oBAAqB,CAAEhzB,KAAM,mCAAoCoW,KAAM,KACvE6c,oBAAqB,CAAEjzB,KAAM,0CAA2CoW,KAAM,KAG9E8c,eAAgB,CAAElzB,KAAM,iBAAkBoW,KAAM,IAAK3E,QAAS,QAC9D0hB,mBAAoB,CAAEnzB,KAAM,qBAAsBoW,KAAM,IAAK3E,QAAS,YAEtEyT,gBAAiB,CAAEllB,KAAM,gCAAiCoW,KAAM,SAChE+O,gBAAiB,CAAEnlB,KAAM,gCAAiCoW,KAAM,SAChEgP,gBAAiB,CAAEplB,KAAM,gCAAiCoW,KAAM,SAChE6O,0BAA2B,CAAEjlB,KAAM,0CAA2CoW,KAAM,SAGpFsJ,aAAc,CAAE1f,KAAM,wBAAyB+C,QAAS,SACxDqwB,WAAY,CAAEpzB,KAAM,kBAAmB+C,QAAS,GAEhDswB,YAAa,CAAErzB,KAAM,eACrBojB,kBAAmB,CAAEpjB,KAAM,yBAA0BoW,KAAM,SAE3DoN,cAAe,CAAExjB,KAAM,qBAAsBoW,KAAM,IAAKrT,QAAS,IACjEsgB,oBAAqB,CAAErjB,KAAM,gCAAiCoW,KAAM,SACpEkN,mBAAoB,CAAEtjB,KAAM,0BAA2B+C,SAAS,GAChEuwB,cAAe,CAAEtzB,KAAM,sBAAuBoW,KAAM,IAAKrT,QAAS,IAClE6jB,oBAAqB,CAAE5mB,KAAM,iCAAkCoW,KAAM,SACrEmd,mBAAoB,CAAEvzB,KAAM,2BAA4B+C,SAAS,IAEnE,SAASywB,EAAcjQ,GAErB,OADAA,GAAY,KACF,EAAU,EAAIA,EAAM,EACrBA,GAAO,IAAa,GAAW,EAANA,EAAU,GACrC,EAAIA,EAEb,IAAM3F,EAAwB,CAC5BtR,MAAO,CAAC,aACRI,IAAK,CAAC,iBAAkB,eACxBD,QAAS,CAAC,iBAAkB,qBAAsB,oBAClDE,MAAO,CAAC,qBAAsB,eAC9BC,KAAM,CAAC,kBACPL,KAAM,CAAC,cAAe,qBAGlBoX,EAAiB,CACrBC,WAAY,CAAC,eAAgB,aAAc,aAAe,YAAc,WAAe,WACvFO,aAAc,CAAC,cAAe,YAAc,aAAe,WAAc,aAAe,UACxFH,eAAgB,CAAC,eAAgB,YAAc,aAAe,YAAc,aAAe,WAC3FS,UAAW,CAAC,eAAgB,aAAc,aAAe,YAAc,aAAe,WACtFH,MAAO,CAAC,eAAgB,aAAc,aAAe,YAAc,aAAe,UAClFM,WAAY,CAAC,UAAW,QAAS,UAAY,UAAY,aAAe,cAM1E,IAAM6O,EAAW,CAEf9jB,SAAU,SAACma,GAAD,OAAOA,EAAEra,SAAW,EAAIqa,EAAE9lB,IAAM,KAAO8lB,EAAEhmB,IAEnDgM,UAAW,SAACga,GAAD,OAAQA,EAAEla,SAAWka,EAAE6H,aAAe,EAAI7H,EAAE7lB,KAAO,KAAO6lB,EAAE/lB,KAEvEkM,UAAW,SAAC6Z,GAAD,OAAOA,EAAE/Z,UAAY,EAAI+Z,EAAE5lB,KAAO,KAAO4lB,EAAEllB,KAGtDkd,aAAc,SAACgI,GAAD,OAAOA,EAAEha,UAAYga,EAAE5H,qBAAuB4H,EAAE1G,kBAAoB0G,EAAEzG,qBACpFtB,kBAAmB,SAAC+H,GAAD,OAAOA,EAAEhI,aAAegI,EAAE9G,gBAC7ChB,iBAAkB,SAAC8H,GAAD,OAAOA,EAAEhI,aAAegI,EAAE7H,qBAC5CA,oBAAqB,SAAC6H,GAAD,OAAQ,EAAKlO,YAAMkO,EAAEvlB,UAAYulB,EAAEqI,mBAAoB,EAAG,KAAO,IAAOrI,EAAEtlB,SAAW,KAC1G0d,qBAAsB,SAAC4H,GAAD,OAAQ,GAAKA,EAAE3lB,cAAgB2lB,EAAEmI,mBAAqBnI,EAAE6I,eAAiB,KAG/FxQ,aAAc,SAAC2H,GAAD,OAAOA,EAAEha,UAAYga,EAAEvH,qBAAuBuH,EAAE1G,kBAAoB0G,EAAEzG,qBACpFjB,kBAAmB,SAAC0H,GAAD,OAAOA,EAAE3H,aAAe2H,EAAE9G,gBAC7CX,iBAAkB,SAACyH,GAAD,OAAOA,EAAE3H,aAAe2H,EAAExH,qBAC5CA,oBAAqB,SAACwH,GAAD,OAAQ,EAAKlO,YAAMkO,EAAEvlB,UAAYulB,EAAEsI,mBAAoB,EAAG,KAAO,IAAOtI,EAAEtlB,SAAW,KAC1G+d,qBAAsB,SAACuH,GAAD,OAAQ,GAAKA,EAAE3lB,cAAgB2lB,EAAEoI,mBAAqBpI,EAAE6I,eAAiB,KAG/FnQ,WAAY,SAACsH,GAAD,OAAOA,EAAElH,SACrBH,gBAAiB,SAACqH,GAAD,OAAOA,EAAEjH,cAC1BH,eAAgB,SAACoH,GAAD,OAAOA,EAAEhH,aACzBH,mBAAoB,SAACmH,GAAD,OAAOA,EAAE/G,iBAE7BH,QAAS,SAACkH,GAAD,OAAOA,EAAEha,UAAYga,EAAE/G,gBAAkB+G,EAAE1G,kBAAoB0G,EAAEzG,qBAC1ER,aAAc,SAACiH,GAAD,OAAOA,EAAElH,QAAUkH,EAAE9G,gBACnCF,YAAa,SAACgH,GAAD,OAAOA,EAAElH,QAAUkH,EAAE7G,YAClCF,gBAAiB,SAAC+G,GAAD,OAAQ,GAAKA,EAAE3lB,cAAgB2lB,EAAE6I,eAAiB,KAEnE3P,eAAgB,SAAC8G,GAAD,OAAQ,EAAIA,EAAEtlB,SAAW,KACzCye,WAAY,SAAC6G,GAAD,OAAQ,EAAKlO,YAAMkO,EAAEvlB,UAAW,EAAG,KAAO,KAAQulB,EAAEtlB,SAAW,MAE3E0e,iBAAkB,SAAC4G,GAAD,OAAQ,EAAKlO,YAAMkO,EAAEvlB,UAAYulB,EAAEyI,gBAAiB,EAAG,KAAO,IAAOzI,EAAEtlB,SAAW,KACpG2e,iBAAkB,SAAC2G,GAAD,OAAQ,EAAKlO,YAAMkO,EAAEvlB,UAAYulB,EAAE0I,gBAAiB,EAAG,KAAO,IAAO1I,EAAEtlB,SAAW,KAEpG4e,kBAAmB,SAAC0G,GAAD,OAAQ,IAAMA,EAAEsJ,aAAe,IAAMtJ,EAAEuJ,YAAc,IAAMvJ,EAAEsJ,aAChF/P,oBAAqB,SAACyG,GAAD,OAAOA,EAAExG,mBAAqB,EAAIkQ,EAAc1J,EAAEtG,gBAGvEC,eAAgB,SAACqG,GAAD,OAAQ,EAAIA,EAAE4J,qBAAuB,KAAO5J,EAAE3E,gBAAkB2E,EAAEpG,iBAAmBoG,EAAE6J,0BACvGjQ,iBAAkB,SAACoG,GAAD,OAAOnG,EAAeC,WAAWsI,QAAO,SAACC,EAAMxP,EAAKxB,GAAZ,OAAkBgR,EAAOxP,EAAMzG,KAAK0d,IAAI9J,EAAEsJ,WAAYjY,KAAI,IACpH2I,mBAAoB,SAACgG,GAAD,OAAQ,EAAIA,EAAE+J,yBAA2B,KAAO/J,EAAE3E,gBAAkB2E,EAAE/F,qBAAuB+F,EAAEgK,6BACnH/P,qBAAsB,SAAC+F,GAAD,OAAOnG,EAAeK,eAAekI,QAAO,SAACC,EAAMxP,EAAKxB,GAAZ,OAAkBgR,EAAOxP,EAAMzG,KAAK0d,IAAI9J,EAAEsJ,WAAYjY,KAAI,IAC5H8I,iBAAkB,SAAC6F,GAAD,OAAQ,EAAIA,EAAEiK,uBAAyB,KAAOjK,EAAE3E,gBAAkB2E,EAAE5F,mBAAqB4F,EAAEkK,0BAC7G9P,mBAAoB,SAAC4F,GAAD,OAAOnG,EAAeQ,aAAa+H,QAAO,SAACC,EAAMxP,EAAKxB,GAAZ,OAAkBgR,EAAOxP,EAAMzG,KAAK0d,IAAI9J,EAAEsJ,WAAYjY,KAAI,IAGxHiJ,UAAW,SAAC0F,GAAD,OAAQ,EAAIA,EAAEmK,gBAAkB,KAAOnK,EAAE3E,gBAAkB2E,EAAEzF,YAAcyF,EAAEoK,2BACxF7P,YAAa,SAACyF,GAAD,OAAOnG,EAAeW,MAAM4H,QAAO,SAACC,EAAMxP,EAAKxB,GAAZ,OAAkBgR,EAAOxP,EAAMzG,KAAK0d,IAAI9J,EAAEsJ,WAAYjY,KAAI,IAC1GoJ,YAAa,SAACuF,GAAD,OAAQ,EAAIA,EAAEqK,kBAAoB,KAAOrK,EAAE3E,gBAAkB2E,EAAEtF,cAAgBsF,EAAEzG,qBAC9FmB,cAAe,SAACsF,GAAD,OAAOnG,EAAec,UAAUyH,QAAO,SAACC,EAAMxP,EAAKxB,GAAZ,OAAkBgR,EAAOxP,EAAMzG,KAAK0d,IAAI9J,EAAEsJ,WAAYjY,KAAI,IAChHuJ,eAAgB,SAACoF,GAAD,OAAQ,EAAIA,EAAEsK,qBAAuB,KAAOtK,EAAE1E,gBAAkB0E,EAAEnF,kBAClFA,iBAAkB,SAACmF,GAAD,OAAOnG,EAAeiB,WAAWsH,QAAO,SAACC,EAAMxP,EAAKxB,GAAZ,OAAkBgR,EAAOxP,EAAMzG,KAAK0d,IAAI9J,EAAEsJ,WAAYjY,KAAI,IAEpH0J,oBAAqB,SAACiF,GAAD,OAAQ,EAAIA,EAAEqJ,mBAAqB,KAAOrJ,EAAE5E,gBAAkB,IAAM4E,EAAE7E,2BAC3FH,qBAAsB,SAACgF,GAAD,OAAQ,EAAIA,EAAEqJ,mBAAqB,KAAOrJ,EAAE5E,gBAAkB,EAAI4E,EAAE7E,2BAE1FF,gBAAiB,SAAC+E,GAAD,OAAQ,EAAIA,EAAEoJ,eAAiB,KAAOpJ,EAAE5E,gBAAkB,EAAI4E,EAAE7E,2BACjFD,gBAAiB,SAAC8E,GAAD,OAAQ,EAAIA,EAAEoJ,eAAiB,KAAOpJ,EAAE5E,gBAAkB,IAAM4E,EAAE7E,2BACnFA,0BAA2B,SAAC6E,GAAD,OAlEpB,EAAI,YADMzlB,EAmE2BylB,EAAEzlB,SAlEX6R,KAAKme,KAAK,OAAWhwB,GAAW,IADrE,IAAmBA,GAqEjB6gB,gBAAiB,SAAC4E,GAAD,OAAQ,EAAK,GAAK,EAAIA,EAAEzlB,SAAW,KAAOylB,EAAEzlB,UAC7D8gB,gBAAiB,SAAC2E,GAAD,OAAQ,EAAK,GAAK,EAAIA,EAAEzlB,SAAW,KAAOylB,EAAEzlB,UAC7D+gB,gBAAiB,SAAC0E,GAAD,OAAQ,EAAK,GAAK,EAAIA,EAAEzlB,SAAW,KAAOylB,EAAEzlB,WAIzDiwB,EAAc,CAClBxS,aAAc,SAACgI,EAAG/D,GAAJ,OAAY+D,EAAEha,UAAYga,EAAE,GAAD,OAAI/D,EAAJ,0BAAkC+D,EAAE1G,kBAAoB0G,EAAE,GAAD,OAAI/D,EAAJ,0BAClGhE,kBAAmB,SAAC+H,EAAG/D,GAAJ,OAAY+D,EAAE,GAAD,OAAI/D,EAAJ,kBAA0B+D,EAAE9G,gBAC5DhB,iBAAkB,SAAC8H,EAAG/D,GAAJ,OAAY+D,EAAE,GAAD,OAAI/D,EAAJ,kBAA0B+D,EAAE7H,qBAC3DC,qBAAsB,SAAC4H,EAAG/D,GAAJ,OAAa,GAAK+D,EAAE,GAAD,OAAI/D,EAAJ,mBAA2B+D,EAAEmI,mBAAqBnI,EAAE6I,eAAiB,KAE9GxQ,aAAc,SAAC2H,EAAG/D,GAAJ,OAAY+D,EAAEha,UAAYga,EAAE,GAAD,OAAI/D,EAAJ,0BAAkC+D,EAAE1G,kBAAoB0G,EAAE,GAAD,OAAI/D,EAAJ,0BAClG3D,kBAAmB,SAAC0H,EAAG/D,GAAJ,OAAY+D,EAAE,GAAD,OAAI/D,EAAJ,kBAA0B+D,EAAE9G,gBAC5DX,iBAAkB,SAACyH,EAAG/D,GAAJ,OAAY+D,EAAE,GAAD,OAAI/D,EAAJ,kBAA0B+D,EAAExH,qBAC3DC,qBAAsB,SAACuH,EAAG/D,GAAJ,OAAa,GAAK+D,EAAE,GAAD,OAAI/D,EAAJ,mBAA2B+D,EAAEoI,mBAAqBpI,EAAE6I,eAAiB,KAE9GnQ,WAAY,SAACsH,EAAG/D,GAAJ,OAAY+D,EAAE,GAAD,OAAI/D,EAAJ,cACzBtD,gBAAiB,SAACqH,EAAG/D,GAAJ,OAAY+D,EAAE,GAAD,OAAI/D,EAAJ,mBAC9BrD,eAAgB,SAACoH,EAAG/D,GAAJ,OAAY+D,EAAE,GAAD,OAAI/D,EAAJ,kBAC7BpD,mBAAoB,SAACmH,EAAG/D,GAAJ,OAAY+D,EAAE,GAAD,OAAI/D,EAAJ,sBAEjCC,QAAS,SAAC8D,EAAG/D,GAAJ,OAAY+D,EAAEha,UAAYga,EAAE,GAAD,OAAI/D,EAAJ,qBAA6B+D,EAAE1G,kBAAoB0G,EAAE,GAAD,OAAI/D,EAAJ,0BACxFE,aAAc,SAAC6D,EAAG/D,GAAJ,OAAY+D,EAAE,GAAD,OAAI/D,EAAJ,aAAqB+D,EAAE9G,gBAClDkD,YAAa,SAAC4D,EAAG/D,GAAJ,OAAY+D,EAAE,GAAD,OAAI/D,EAAJ,aAAqB+D,EAAE7G,YACjDkD,gBAAiB,SAAC2D,EAAG/D,GAAJ,OAAa,GAAK+D,EAAE,GAAD,OAAI/D,EAAJ,mBAA2B+D,EAAE6I,eAAiB,KAElFvM,UAAW,SAAC0D,EAAG/D,GAAJ,OAAY+D,EAAEha,UAAYga,EAAE,GAAD,OAAI/D,EAAJ,uBAA+B+D,EAAE1G,kBAAoB0G,EAAE,GAAD,OAAI/D,EAAJ,0BAC5FM,eAAgB,SAACyD,EAAG/D,GAAJ,OAAY+D,EAAE,GAAD,OAAI/D,EAAJ,eAAuB+D,EAAE9G,gBACtDsD,cAAe,SAACwD,EAAG/D,GAAJ,OAAY+D,EAAE,GAAD,OAAI/D,EAAJ,eAAuB+D,EAAE5G,kBACrDqD,kBAAmB,SAACuD,EAAG/D,GAAJ,OAAa,GAAK+D,EAAE,GAAD,OAAI/D,EAAJ,mBAA2B+D,EAAEuI,gBAAkBvI,EAAE6I,eAAiB,KAExGnM,UAAW,SAACsD,EAAG/D,GAAJ,OAAY+D,EAAEha,UAAYga,EAAE,GAAD,OAAI/D,EAAJ,uBAA+B+D,EAAE1G,kBAAoB0G,EAAE,GAAD,OAAI/D,EAAJ,0BAC5FU,eAAgB,SAACqD,EAAG/D,GAAJ,OAAY+D,EAAE,GAAD,OAAI/D,EAAJ,eAAuB+D,EAAE9G,gBACtD0D,cAAe,SAACoD,EAAG/D,GAAJ,OAAY+D,EAAE,GAAD,OAAI/D,EAAJ,eAAuB+D,EAAE3G,kBACrDwD,kBAAmB,SAACmD,EAAG/D,GAAJ,OAAa,GAAK+D,EAAE,GAAD,OAAI/D,EAAJ,mBAA2B+D,EAAEwI,gBAAkBxI,EAAE6I,eAAiB,KAExG/L,oBAAqB,SAACkD,EAAG/D,GAAJ,OAAY+D,EAAE,GAAD,OAAI/D,EAAJ,wBAAgC,EAAIyN,EAAc1J,EAAE,GAAD,OAAI/D,EAAJ,sBAGvF,CAAC,CAAC,aAAc,cAAe,CAAC,iBAAkB,mBAAoB,CAAC,eAAgB,gBAAiB,CAAC,UAAW,WAAY,CAAC,QAAS,SAAU,CAAC,UAAW,aAAc,CAAC,aAAc,eAAe5iB,SAAQ,mCAAEsiB,EAAF,KAAe8O,EAAf,WAClN,CAAC,CAAC,MAAO,OAAQ,CAAC,YAAa,YAAa,CAAEne,KAAM,MAAQ,CAAC,QAAS,aAAc,CAAEA,KAAM,WAAYjT,SAAQ,YAAoC,IAAD,mBAAjCqxB,EAAiC,KAAzBC,EAAyB,YAAhB3iB,OAAgB,MAAR,GAAQ,EACjJ0O,EAAS,GAAD,OAAIiF,EAAJ,YAAmB+O,IAA3B,aACEx0B,KAAK,GAAD,OAAKu0B,EAAL,YAAqBE,GACzBhjB,QAASgU,GACN3T,SAKT,CACE,gBAAiB,UAAW,gBAAiB,qBAAsB,UAAW,eAAgB,cAAe,mBAD/G,mBAEKrQ,OAAOwB,KAAKud,GAAU5e,QAAO,SAAAM,GAAG,MAAI,CAAC,WAAY,WAAY,UAAUirB,MAAK,SAAAuH,GAAG,OAAIxyB,EAAIgX,SAASwb,WACnGvxB,SAAQ,SAAAjB,GACRse,EAASte,GAAKuP,QAAU,cAI1B,CAAC,CAAC,gBAAiB,iBAAkB,WAAY,QAAS,CAAC,iBAAkB,kBAAmB,WAAY,SAAU,CAAC,YAAa,aAAc,OAAQ,QAAS,CAAC,YAAa,aAAc,OAAQ,SAAStO,SAAQ,YAAoD,IAAD,mBAAjDsiB,EAAiD,KAApC8O,EAAoC,KAAtB9iB,EAAsB,KAAbiU,EAAa,KACzQ,CAAC,CAAC,QAAS,aAAc,CAAEtP,KAAM,WAAYjT,SAAQ,YAAoC,IAAD,mBAAjCqxB,EAAiC,KAAzBC,EAAyB,YAAhB3iB,OAAgB,MAAR,GAAQ,EACtF0O,EAAS,GAAD,OAAIiF,EAAJ,YAAmB+O,IAA3B,aACEx0B,KAAK,GAAD,OAAKu0B,EAAL,YAAqBE,GACzBhjB,WACGK,MAGP,CAAC,CAAC,WAAY,gBAAiB,CAAC,WAAY,kBAAmB,CAAC,SAAU,mBAAoB,CAAC,QAAS,cAAe,CAAC,QAAS,cAAe,CAAC,MAAO,cAAc3O,SAAQ,mCAAEwiB,EAAF,KAAWgP,EAAX,WAC5K,CAAC,CAAC,MAAO,OAAQ,CAAC,UAAW,YAAa,CAAC,WAAY,iBAAiBxxB,SAAQ,YAA6B,IAAD,mBAA1BmM,EAA0B,KAAjBslB,EAAiB,KACtGhP,EAAc,UAAMH,EAAN,YAAqBE,EAArB,YAAgCrW,GAClDkR,EAASoF,GAAkB,CAAE5lB,KAAK,GAAD,OAAKu0B,EAAL,YAAqBI,EAArB,YAAoCC,GAAenjB,WACpF,IAAIoU,EAAO,UAAMH,EAAN,YAAiBC,EAAjB,YAA4BrW,GACvCmkB,EAAS7N,GAAkB,SAACkE,GAAD,OAAOA,EAAE,GAAD,OAAIrE,EAAJ,WAA2BqE,EAAEjE,aAKtE,CAAC,gBAAiB,UAAW,gBAAiB,sBAA9C,mBAAuEpkB,OAAOwB,KAAKqxB,KAAcnxB,SAAQ,SAAAjB,GACvG,IAAIwf,EAAMlB,EAASte,GACnBT,OAAOwB,KAAKC,KAAeC,SAAQ,SAAAma,GACjC,IAAIuX,EAAO,UAAMvX,EAAN,YAAgBpb,GAC3Bse,EAASqU,GAAW/V,YAAU4C,GAE5BlB,EAASqU,GAAS70B,KADR,kBAARkC,EACF,gBAAkCgB,IAAcoa,GAAQtd,KAAxD,QACe,wBAARkC,EACP,gBAAkCgB,IAAcoa,GAAQtd,KAAxD,mBACe,uBAARkC,EACP,gBAAkCgB,IAAcoa,GAAQtd,KAAxD,aAEA,UAA4BkD,IAAcoa,GAAQtd,KAAlD,YAA0D0hB,EAAI1hB,MAChEwgB,EAASqU,GAASpjB,QAAU6L,QAMhC7b,OAAOE,QAAQ2yB,GAAanxB,SAAQ,mCAAEjB,EAAF,KAAO2kB,EAAP,YAClCplB,OAAOwB,KAAKC,KAAeC,SAAQ,SAAAma,GAAM,OACvC7b,OAAOqlB,eAAe2M,EAAtB,UAAmCnW,EAAnC,YAA6Cpb,GAAO,CAClD6kB,cAAc,EACdC,YAAY,EACZC,UAAU,EACV3M,MAAO,SAACoH,GAAD,OAAUmF,EAAMnF,EAAKpE,YAGlC,IAAM6D,EAAmB,CACvB+F,iBAAkB,CAChBhlB,IAAK,YACL4yB,QAAS,SAACzT,GAAD,OAAa,SAACyI,GAAD,OAAQA,EAAEla,SAAWka,EAAE6H,aAAe,EAAI7H,EAAE7lB,KAAO,KAAO6lB,EAAE/lB,IAAM+lB,EAAE7Z,WAAaoR,EAAQ/G,MAAQ,OACvHya,WAAY,CAAC,WAAY,aAAc,OAAQ,MAAO,YAAa,WAAY,OAAQ,SAK3F,SAASvV,EAAmBkC,GAAoB,IAAfL,EAAc,uDAAJ,GAAI,EACmCA,EAA1E2T,mBADuC,MACzBvzB,OAAOwB,KAAKwwB,GADa,IACmCpS,EAArC5B,gBADE,MACShe,OAAOwB,KAAKud,GADrB,IAEbkB,EAA1B1B,wBAFuC,MAEpB,GAFoB,EAG7CA,EAAiB7c,SAAQ,SAAA+d,GAAoB,IAChC+T,EAAgC/T,EAArChf,IAAyBmf,EAAYH,EAAZG,QADW,EAEnBF,EAAiB8T,IAAuB,GAAzD/yB,EAFoC,EAEpCA,IAAK4yB,EAF+B,EAE/BA,QACNE,EAAY9b,SAAShX,KAC1B4yB,EAAUA,EAAQzT,GAClB5f,OAAOqlB,eAAepF,EAAKxf,EAAK,CAC9BgzB,IAAK7T,EAAQ2T,YAAc,kBAAMF,EAAQpT,IAAO,WAC9C,IAAI/E,EAAMmY,EAAQpT,GAElB,OADAjgB,OAAOqlB,eAAe5nB,KAAMgD,EAAK,CAAEoY,MAAOqC,IACnCA,GAEToK,cAAc,QAIlBiO,EAAY7xB,SAAQ,SAAAjB,IACjBwf,EAAI9B,eAAe1d,IAAQT,OAAOqlB,eAAepF,EAAKxf,EAAK,CAC1DgzB,IAAK7T,EAAQ2T,YAAc,kBAAMvB,EAASvxB,GAAKwf,IAAO,WACpD,IAAI/E,EAAM8W,EAASvxB,GAAKwf,GAExB,OADAjgB,OAAOqlB,eAAe5nB,KAAMgD,EAAK,CAAEoY,MAAOqC,IACnCA,GAEToK,cAAc,OAIlBtH,EAAStc,SAAQ,SAAAjB,GAAG,OAAKwf,EAAI9B,eAAe1d,KAASwf,EAAIxf,GAAOse,EAASte,GAAKa,SAAW,Q,qGC3VrFoyB,EAAW,kBAAM,cAAC,IAAD,CAAiB1kB,KAAM2kB,OACxCC,EAAQ,SAACvjB,GAAD,OAAW,sBAAMpB,UAAWoB,EAAM0D,QAAU,aAAe,GAAhD,SACtB1D,EAAMyD,MAAQ,YAAIuT,MAAMhX,EAAMyD,OAAOtS,QAAQP,KAAI,SAAC4yB,EAAGna,GAAJ,OAAU,cAACga,EAAD,GAAeha,MAAS","file":"static/js/9.98d16159.chunk.js","sourcesContent":["import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import DullBlade from './Weapon_Dull_Blade.png'\r\nimport SilverSword from './Weapon_Silver_Sword.png'\r\nimport CoolSteel from './Weapon_Cool_Steel.png'\r\nimport DarkIronSword from './Weapon_Dark_Iron_Sword.png'\r\nimport FilletBlade from './Weapon_Fillet_Blade.png'\r\nimport HarbingerOfDawn from './Weapon_Harbinger_of_Dawn.png'\r\nimport SkyriderSword from './Weapon_Skyrider_Sword.png'\r\nimport TravelersHandySword from './Weapon_Traveler\\'s_Handy_Sword.png'\r\nimport BlackcliffLongsword from './Weapon_Blackcliff_Longsword.png'\r\nimport FavoniusSword from './Weapon_Favonius_Sword.png'\r\nimport IronSting from './Weapon_Iron_Sting.png'\r\nimport LionsRoar from './Weapon_Lion\\'s_Roar.png'\r\nimport PrototypeRancour from './Weapon_Prototype_Rancour.png'\r\nimport RoyalLongsword from './Weapon_Royal_Longsword.png'\r\nimport SacrificialSword from './Weapon_Sacrificial_Sword.png'\r\nimport TheAlleyFlash from './Weapon_The_Alley_Flash.png'\r\nimport TheBlackSword from './Weapon_The_Black_Sword.png'\r\nimport TheFlute from './Weapon_The_Flute.png'\r\nimport SwordOfDescension from './Weapon_Sword_of_Descension.png'\r\nimport FesteringDesire from './festering_fang.png'\r\nimport AquilaFavonia from './Weapon_Aquila_Favonia.png'\r\nimport SkywardBlade from './Weapon_Skyward_Blade.png'\r\nimport SummitShaper from './summit_shaper.png'\r\nconst sword = {\r\n  DullBlade,\r\n  SilverSword,\r\n  CoolSteel,\r\n  DarkIronSword,\r\n  FilletBlade,\r\n  HarbingerOfDawn,\r\n  SkyriderSword,\r\n  TravelersHandySword,\r\n  BlackcliffLongsword,\r\n  FavoniusSword,\r\n  IronSting,\r\n  LionsRoar,\r\n  PrototypeRancour,\r\n  RoyalLongsword,\r\n  SacrificialSword,\r\n  TheAlleyFlash,\r\n  TheBlackSword,\r\n  TheFlute,\r\n  SwordOfDescension,\r\n  FesteringDesire,\r\n  AquilaFavonia,\r\n  SkywardBlade,\r\n  SummitShaper,\r\n}\r\nexport default sword","export default __webpack_public_path__ + \"static/media/Weapon_Dull_Blade.f5de06e8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Silver_Sword.e2462179.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Cool_Steel.0c6a9897.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dark_Iron_Sword.8dce5b63.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Fillet_Blade.c8e8ab5f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Harbinger_of_Dawn.26da0d78.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Sword.80e60c22.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Traveler's_Handy_Sword.168a7842.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Longsword.522f4d19.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Sword.cb5df26b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Sting.9f4b4b01.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lion's_Roar.b0e78fa9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Rancour.64965f56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Longsword.5a57f015.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Sword.048703ab.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Alley_Flash.7528f5ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Black_Sword.3987a991.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Flute.82af0cbf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sword_of_Descension.eb67a1df.png\";","export default __webpack_public_path__ + \"static/media/festering_fang.38aa5200.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Aquila_Favonia.7c014114.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Blade.af22a740.png\";","export default __webpack_public_path__ + \"static/media/summit_shaper.5245335d.png\";","import WasterGreatsword from './Weapon_Waster_Greatsword.png'\r\nimport OldMercsPal from './Weapon_Old_Merc\\'s_Pal.png'\r\nimport BloodtaintedGreatsword from './Weapon_Bloodtainted_Greatsword.png'\r\nimport DebateClub from './Weapon_Debate_Club.png'\r\nimport FerrousShadow from './Weapon_Ferrous_Shadow.png'\r\nimport Quartz from './Weapon_Quartz.png'\r\nimport SkyriderGreatsword from './Weapon_Skyrider_Greatsword.png'\r\nimport WhiteIronGreatsword from './Weapon_White_Iron_Greatsword.png'\r\nimport BlackcliffSlasher from './Weapon_Blackcliff_Slasher.png'\r\nimport FavoniusGreatsword from './Weapon_Favonius_Greatsword.png'\r\nimport LithicBlade from './Weapon_Lithic_Blade.png'\r\nimport PrototypeAminus from './Weapon_Prototype_Aminus.png'\r\nimport Rainslasher from './Weapon_Rainslasher.png'\r\nimport RoyalGreatsword from './Weapon_Royal_Greatsword.png'\r\nimport SerpentSpine from './Weapon_Serpent_Spine.png'\r\nimport TheBell from './Weapon_The_Bell.png'\r\nimport Whiteblind from './Weapon_Whiteblind.png'\r\nimport SacrificialGreatsword from './Weapon_Sacrificial_Greatsword.png'\r\nimport SnowTombedStarsilver from './snow_tombed_starsilver.png'\r\nimport SkywardPride from './Weapon_Skyward_Pride.png'\r\nimport WolfsGravestone from './Weapon_Wolf\\'s_Gravestone.png'\r\nimport TheUnforged from './Weapon_The_Unforged.png'\r\nconst claymore = {\r\n  WasterGreatsword,\r\n  OldMercsPal,\r\n  BloodtaintedGreatsword,\r\n  DebateClub,\r\n  FerrousShadow,\r\n  Quartz,\r\n  SkyriderGreatsword,\r\n  WhiteIronGreatsword,\r\n  BlackcliffSlasher,\r\n  FavoniusGreatsword,\r\n  LithicBlade,\r\n  PrototypeAminus,\r\n  Rainslasher,\r\n  RoyalGreatsword,\r\n  SerpentSpine,\r\n  TheBell,\r\n  Whiteblind,\r\n  SacrificialGreatsword,\r\n  SnowTombedStarsilver,\r\n  SkywardPride,\r\n  WolfsGravestone,\r\n  TheUnforged,\r\n}\r\nexport default claymore","export default __webpack_public_path__ + \"static/media/Weapon_Waster_Greatsword.a411f34b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Old_Merc's_Pal.67aa1930.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Bloodtainted_Greatsword.eb68a62c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Debate_Club.be908652.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ferrous_Shadow.ef586057.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Quartz.d41c58b9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Greatsword.46e935cb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Iron_Greatsword.eda6295d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Slasher.4693af54.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Greatsword.bfd288be.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Blade.ab4d4f4f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Aminus.d2bf526a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rainslasher.664c61ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Greatsword.fbc5184a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Serpent_Spine.bb2831b5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Bell.3670f330.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Whiteblind.9c37b7dd.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Greatsword.1b0f0225.png\";","export default __webpack_public_path__ + \"static/media/snow_tombed_starsilver.23f56359.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Pride.66a1b3f7.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wolf's_Gravestone.032b607c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Unforged.f7762a2f.png\";","import BeginnersProtector from './Weapon_Beginner\\'s_Protector.png'\r\nimport IronPoint from './Weapon_Iron_Point.png'\r\nimport BlackTassel from './Weapon_Black_Tassel.png'\r\nimport Halberd from './Weapon_Halberd.png'\r\nimport WhiteTassel from './Weapon_White_Tassel.png'\r\nimport BlackcliffPole from './Weapon_Blackcliff_Pole.png'\r\nimport CrescentPike from './Weapon_Crescent_Pike.png'\r\nimport Deathmatch from './Weapon_Deathmatch.png'\r\nimport DragonsBane from './Weapon_Dragon\\'s_Bane.png'\r\nimport LithicSpear from './Weapon_Lithic_Spear.png'\r\nimport PrototypeGrudge from './Weapon_Prototype_Grudge.png'\r\nimport FavoniusLance from './Weapon_Favonius_Lance.png'\r\nimport RoyalSpear from './Weapon_Royal_Spear.png'\r\nimport DragonspineSpear from './dragonspine_spear.png'\r\nimport VortexVanquisher from './Weapon_Vortex_Vanquisher.png'\r\nimport PrimordialJadeWingedSpear from './Weapon_Primordial_Jade_Winged-Spear.png'\r\nimport SkywardSpine from './Weapon_Skyward_Spine.png'\r\nconst polearms = {\r\n  BeginnersProtector,\r\n  IronPoint,\r\n  BlackTassel,\r\n  Halberd,\r\n  WhiteTassel,\r\n  BlackcliffPole,\r\n  CrescentPike,\r\n  Deathmatch,\r\n  DragonsBane,\r\n  LithicSpear,\r\n  PrototypeGrudge,\r\n  FavoniusLance,\r\n  RoyalSpear,\r\n  DragonspineSpear,\r\n  VortexVanquisher,\r\n  PrimordialJadeWingedSpear,\r\n  SkywardSpine,\r\n}\r\nexport default polearms","export default __webpack_public_path__ + \"static/media/Weapon_Beginner's_Protector.19165915.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Point.8263916c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Black_Tassel.c3103e46.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Halberd.0044e214.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Tassel.a3cc9099.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Pole.1e15a879.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Crescent_Pike.9e473ddb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Deathmatch.9b0e6d8e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dragon's_Bane.7437cf28.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Spear.cfb11b6c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Grudge.64b3a263.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Lance.693335d4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Spear.99058465.png\";","export default __webpack_public_path__ + \"static/media/dragonspine_spear.bb785669.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Vortex_Vanquisher.efad8956.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Primordial_Jade_Winged-Spear.ea10bc42.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Spine.e81931a5.png\";","import HuntersBow from './Weapon_Hunter\\'s_Bow.png'\r\nimport SeasonedHuntersBow from './Weapon_Seasoned_Hunter\\'s_Bow.png'\r\nimport EbonyBow from './Weapon_Ebony_Bow.png'\r\nimport Messenger from './Weapon_Messenger.png'\r\nimport RavenBow from './Weapon_Raven_Bow.png'\r\nimport RecurveBow from './Weapon_Recurve_Bow.png'\r\nimport SharpshootersOath from './Weapon_Sharpshooter\\'s_Oath.png'\r\nimport Slingshot from './Weapon_Slingshot.png'\r\nimport TheStringless from './Weapon_The_Stringless.png'\r\nimport AlleyHunter from './Weapon_Alley_Hunter.png'\r\nimport BlackcliffWarbow from './Weapon_Blackcliff_Warbow.png'\r\nimport CompoundBow from './Weapon_Compound_Bow.png'\r\nimport FavoniusWarbow from './Weapon_Favonius_Warbow.png'\r\nimport PrototypeCrescent from './Weapon_Prototype_Crescent.png'\r\nimport RoyalBow from './Weapon_Royal_Bow.png'\r\nimport Rust from './Weapon_Rust.png'\r\nimport SacrificialBow from './Weapon_Sacrificial_Bow.png'\r\nimport TheViridescentHunt from './Weapon_The_Viridescent_Hunt.png'\r\nimport SkywardHarp from './Weapon_Skyward_Harp.png'\r\nimport AmosBow from './Weapon_Amos\\'_Bow.png'\r\nimport DreamsOfDragonfell from './dreams_of_dragonfell.png'\r\nconst bows = {\r\n  HuntersBow,\r\n  SeasonedHuntersBow,\r\n  EbonyBow,\r\n  Messenger,\r\n  RavenBow,\r\n  RecurveBow,\r\n  SharpshootersOath,\r\n  Slingshot,\r\n  TheStringless,\r\n  AlleyHunter,\r\n  BlackcliffWarbow,\r\n  CompoundBow,\r\n  FavoniusWarbow,\r\n  PrototypeCrescent,\r\n  RoyalBow,\r\n  Rust,\r\n  SacrificialBow,\r\n  TheViridescentHunt,\r\n  SkywardHarp,\r\n  AmosBow,\r\n  DreamsOfDragonfell,\r\n}\r\nexport default bows","export default __webpack_public_path__ + \"static/media/Weapon_Hunter's_Bow.2e941c96.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Seasoned_Hunter's_Bow.bc6a42aa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ebony_Bow.f89cc3cc.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Messenger.939170eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Raven_Bow.b88fe5c0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Recurve_Bow.bafcde86.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sharpshooter's_Oath.1d149cf5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Slingshot.d2eeb3eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Stringless.b718aa93.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Alley_Hunter.8cc323c2.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Warbow.098f24da.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Compound_Bow.a8457f4e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Warbow.19e98358.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Crescent.50a174b0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Bow.06fbac8b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rust.65b7af56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Bow.804b7a38.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Viridescent_Hunt.904062bf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Harp.6961093e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amos'_Bow.e97cd305.png\";","export default __webpack_public_path__ + \"static/media/dreams_of_dragonfell.8aaebb39.png\";","import ApprenticesNotes from './Weapon_Apprentice\\'s_Notes.png'\r\nimport PocketGrimoire from './Weapon_Pocket_Grimoire.png'\r\nimport AmberCatalyst from './Weapon_Amber_Catalyst.png'\r\nimport EmeraldOrb from './Weapon_Emerald_Orb.png'\r\nimport MagicGuide from './Weapon_Magic_Guide.png'\r\nimport OtherworldlyStory from './Weapon_Otherworldly_Story.png'\r\nimport ThrillingTalesOfDragonSlayers from './Weapon_Thrilling_Tales_of_Dragon_Slayers.png'\r\nimport TwinNephrite from './Weapon_Twin_Nephrite.png'\r\nimport BlackcliffAgate from './Weapon_Blackcliff_Amulet.png'\r\nimport FavoniusCodex from './Weapon_Favonius_Codex.png'\r\nimport MappaMare from './Weapon_Mappa_Mare.png'\r\nimport PrototypeMalice from './Weapon_Prototype_Malice.png'\r\nimport RoyalGrimoire from './Weapon_Royal_Grimoire.png'\r\nimport SacrificialFragments from './Weapon_Sacrificial_Fragments.png'\r\nimport SolarPearl from './Weapon_Solar_Pearl.png'\r\nimport TheWidsith from './Weapon_The_Widsith.png'\r\nimport WineAndSong from './Weapon_Wine_and_Song.png'\r\nimport EyeOfPerception from './Weapon_Eye_of_Perception.png'\r\nimport Frostbearer from './Weapon_Frostbearer.png'\r\nimport LostPrayerToTheSacredWinds from './Weapon_Lost_Prayer_to_the_Sacred_Winds.png'\r\nimport SkywardAtlas from './Weapon_Skyward_Atlas.png'\r\nimport MemoryOfDust from './Weapon_Memory_of_Dust.png'\r\nconst catalysts = {\r\n  ApprenticesNotes,\r\n  PocketGrimoire,\r\n  AmberCatalyst,\r\n  EmeraldOrb,\r\n  MagicGuide,\r\n  OtherworldlyStory,\r\n  ThrillingTalesOfDragonSlayers,\r\n  TwinNephrite,\r\n  BlackcliffAgate,\r\n  FavoniusCodex,\r\n  MappaMare,\r\n  PrototypeMalice,\r\n  RoyalGrimoire,\r\n  SacrificialFragments,\r\n  SolarPearl,\r\n  TheWidsith,\r\n  WineAndSong,\r\n  EyeOfPerception,\r\n  Frostbearer,\r\n  LostPrayerToTheSacredWinds,\r\n  SkywardAtlas,\r\n  MemoryOfDust\r\n}\r\nexport default catalysts","export default __webpack_public_path__ + \"static/media/Weapon_Apprentice's_Notes.0b7fb81e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Pocket_Grimoire.536179c5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amber_Catalyst.01ede681.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Emerald_Orb.4008f986.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Magic_Guide.64c777ec.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Otherworldly_Story.48b54293.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Thrilling_Tales_of_Dragon_Slayers.692d45b8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Twin_Nephrite.b0c2488b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Amulet.b97d01eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Codex.6e201cfa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Mappa_Mare.bc35dc35.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Malice.4ab08cb6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Grimoire.2f67eac4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Fragments.4dd54e2d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Solar_Pearl.d629ae58.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Widsith.a6fe1227.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wine_and_Song.0aa416e6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Eye_of_Perception.907a0288.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Frostbearer.bde00061.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lost_Prayer_to_the_Sacred_Winds.45f8ca2a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Atlas.8b4f86fa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Memory_of_Dust.4e45ccbb.png\";","import weapons from './Weapons/Weapons'\r\n\r\nimport anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  weapons,\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","import swords from './Swords/Swords'\r\nimport claymores from './Claymores/Claymores'\r\nimport polearms from './Polearms//Polearms'\r\nimport bows from './Bows/Bows'\r\nimport catalysts from './Catalysts/Catalysts'\r\nconst weapons = {\r\n  ...swords,\r\n  ...claymores,\r\n  ...polearms,\r\n  ...bows,\r\n  ...catalysts,\r\n}\r\nexport default weapons","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //remove the old error/prone id lists, if it still exists\r\n  localStorage.removeItem(\"artifact_id_list\")\r\n  localStorage.removeItem(\"character_id_list\")\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  if (CharacterDatabase.populateDatebaseFromLocalStorage() |\r\n    ArtifactDatabase.populateDatebaseFromLocalStorage()) {\r\n    //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n    let arts = ArtifactDatabase.getArtifactDatabase();\r\n    Object.values(arts).forEach(art => {\r\n      let valid = true\r\n      if (art.location && !CharacterDatabase.getCharacter(art.location)) {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n      if (!valid)\r\n        ArtifactDatabase.updateArtifact(art)\r\n    })\r\n\r\n    let chars = CharacterDatabase.getCharacterDatabase();\r\n    Object.values(chars).forEach(character => {\r\n      let valid = true;\r\n      //verify character database equipment validity\r\n      let equippedArtifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([slotKey, artid]) => {\r\n        if (!ArtifactDatabase.getArtifact(artid)) {\r\n          valid = false\r\n          return [slotKey, undefined]\r\n        }\r\n        return [slotKey, artid]\r\n      }))\r\n      if (!valid)\r\n        character.equippedArtifacts = equippedArtifacts\r\n\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      if (character.artifactConditionals) character.artifactConditionals = character.artifactConditionals.filter(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n      if (!valid) {\r\n        CharacterDatabase.updateCharacter(character)\r\n      }\r\n    })\r\n  }\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport Stat from '../Stat';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nexport default function CharacterCard(props) {\r\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getArtifactDataImport(),\r\n    ]).then(() => forceUpdate())\r\n  }, [])\r\n  let { characterId, onEdit, onDelete } = props\r\n  let character = CharacterDatabase.getCharacter(characterId)\r\n  if (!character) return null;\r\n  let build = Character.calculateBuild(character)\r\n  let { setToSlots } = build\r\n\r\n  let { characterKey, name, weapon, constellation } = character\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponName = Weapon.getWeaponName(weapon.key)\r\n  let weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\r\n  let weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\r\n  let weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const statkeys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\",]\r\n  return (<Card className={props.cardClassName} bg={props.bg ? props.bg : \"darkcontent\"} text=\"lightfont\">\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {props.header ? props.header : <h6><b>{name}</b></h6>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {props.onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {props.onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={onEdit} style={{ cursor: onEdit ? \"pointer\" : \"default\" }}>\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={Character.getThumb(characterKey)} className={`w-100 h-auto grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h4>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h4>\r\n          <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n          <span>{`Lvl. ${Character.getStatValueWithOverride(character, \"char_level\")} C${constellation}`}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {Object.entries(Artifact.getArtifactSetEffects(setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = Artifact.getArtifactSetName(key)\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = build.finalStats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {props.footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        selectedCharacterId: characterId\r\n      }}>\r\n        Generate Builds\r\n        </Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy } from 'react';\r\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport Character from './Character';\r\nimport CharacterCard from './CharacterCard';\r\nimport CharacterDatabase from './CharacterDatabase';\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCardPromise = import('../Character/CharacterDisplayCard');\r\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\r\n\r\nexport default class CharacterDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = {\r\n      charIdToEdit: \"\",\r\n      showEditor: false,\r\n    }\r\n    ReactGA.pageview('/character')\r\n  }\r\n\r\n  deleteCharacter = (id) => {\r\n    Character.removeCharacter(id)\r\n    this.forceUpdate()\r\n  }\r\n\r\n  editCharacter = (id) =>\r\n    this.setState({ charIdToEdit: id, showEditor: true },\r\n      () => this.scrollRef.current.scrollIntoView({ behavior: \"smooth\" }))\r\n\r\n  cancelEditCharacter = () =>\r\n    this.setState({ charIdToEdit: null, showEditor: false })\r\n\r\n  componentDidMount() {\r\n    this.scrollRef = React.createRef()\r\n  }\r\n  render() {\r\n    let charIdList = CharacterDatabase.getCharacterIdList()\r\n    return (<Container ref={this.scrollRef}>\r\n      {/* editor/character detail display */}\r\n      {this.state.showEditor ? <Row className=\"mt-2\"><Col>\r\n        <React.Suspense fallback={<span>Loading...</span>}>\r\n          <CharacterDisplayCard editable\r\n            characterId={this.state.charIdToEdit}\r\n            onClose={this.cancelEditCharacter}\r\n            footer={<Button variant=\"danger\" onClick={this.cancelEditCharacter}>Close</Button>}\r\n          />\r\n        </React.Suspense>\r\n      </Col></Row> : null}\r\n\r\n      <Row className=\"mt-2\">\r\n        {this.state.showEditor ? null : <Col lg={4} md={6} className=\"mb-2\">\r\n          <Card className=\"h-100\" bg=\"darkcontent\" text=\"lightfont\">\r\n            <Card.Header className=\"pr-2\">\r\n              <span>Add New Character</span>\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex flex-column justify-content-center\">\r\n              <Row className=\"d-flex flex-row justify-content-center\">\r\n                <Col xs=\"auto\">\r\n                  <Button onClick={() => this.editCharacter(\"\")}>\r\n                    <h1><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></h1>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>}\r\n        {charIdList.map(id =>\r\n          <Col key={id} lg={4} md={6} className=\"mb-2\">\r\n            <CharacterCard\r\n              cardClassName=\"h-100\"\r\n              characterId={id}\r\n              onDelete={() => this.deleteCharacter(id)}\r\n              onEdit={() => this.editCharacter(id)}\r\n            />\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Container>)\r\n\r\n  }\r\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { AttachLazyFormulas, ElementToReactionKeys } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getCDataObj(charKey)?.talent?.[talentKey]?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getCDataObj(charKey)?.talent?.[talentKey]?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getCDataObj(charKey)?.talent?.[talentKey]?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"formulaOverrides\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_base\") || false\r\n    return character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getArtifactSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals, initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals && artifactConditionals.forEach(conditional => {\r\n      let { srcKey: setKey, srcKey2: setNumKey } = conditional\r\n      let condStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditional.conditionalNum)\r\n      if (condStats) Object.entries(condStats).forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n    AttachLazyFormulas(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"formulaOverrides\") {\r\n        initialStats.formulaOverrides = [...(initialStats.formulaOverrides || []), ...val]\r\n        return\r\n      }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, OverrideFormulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static printFormula = (statKey, stats, formulaOverrides = [], expand = true) => {\r\n    for (const formulaOverride of formulaOverrides)\r\n      if (OverrideFormulas[formulaOverride?.key]?.key === statKey)\r\n        return Stat.printOverrideFormula(stats, formulaOverride.key, formulaOverride.options, false)\r\n    return FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n      (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n  }\r\n\r\n  static printOverrideFormula = (stats, overrideKey, options, expand = true) =>\r\n    OverrideFormulasText?.[overrideKey] && typeof OverrideFormulasText?.[overrideKey].formulaText === \"function\" &&\r\n    (<span>{OverrideFormulasText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  trans_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(0, \"ele_mas\")} * exp^(-0.000505 * {f(0, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulasText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.value}%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft\r\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getArtifactDataImport = () => ArtifactDataImport\r\n  static getArtifactSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getArtifactSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData).filter(([key, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getArtifactPieceName = (setKey, slotKey, defVal = \"\") => ArtifactData?.[setKey]?.pieces?.[slotKey] || defVal;\r\n  static getArtifactPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n  static getArtifactSetEffectsObj = (setKey, defVal = null) => ArtifactData?.[setKey]?.sets || defVal\r\n  //SLOT\r\n  static getArtifactSlotKeys = () => Object.keys(ArtifactSlotsData)\r\n  static getArtifactSlotName = (slotKey, defVal = \"\") =>\r\n    ArtifactSlotsData[slotKey] ? ArtifactSlotsData[slotKey].name : defVal\r\n  static getArtifactSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n\r\n  static getArtifactSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getArtifactSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getArtifactSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n\r\n  //STARS\r\n  static getRarityArr = (setKey) => ArtifactData[setKey] ? ArtifactData[setKey].rarity : []\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => ArtifactMainSlotKeys\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = ArtifactMainStatsData[numStars]?.[key]?.[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData)\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getRolls(value, rollData, float = false) {\r\n    let roll = null;\r\n    let maxNumRoll = Math.round(value / rollData[0])\r\n    if (!maxNumRoll) return null;\r\n    let rollOption = (val, arr) => {\r\n      if (roll) return;\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (float) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val)) {\r\n            roll = arr;\r\n            return;\r\n          }\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val)) {\r\n            roll = arr;\r\n            return\r\n          }\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        rollOption(value, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(value, [])\r\n    return roll;\r\n  }\r\n  static validateSubStat(state, substat) {\r\n    if (!substat || !substat.value) return { valid: true }\r\n    let value = parseFloat(substat.value);\r\n    if (isNaN(value)) return { valid: false, msg: `Invalid Input` }\r\n    let numStars = state.numStars\r\n    if (!numStars) return { valid: false, msg: `Artifact Stars not set.` }\r\n    let isFloat = Stat.getStatUnit(substat.key) === \"%\"\r\n    let rollData = this.getSubstatRollData(substat.key, numStars);\r\n    let rolls = this.getRolls(value, rollData, isFloat)\r\n\r\n    if (!rolls || rolls.length === 0) return { valid: false, msg: `Substat cannot be rolled 0 times.` };\r\n    let totalAllowableRolls = ArtifactStarsData[numStars]?.numUpgradesOrUnlocks - (4 - ArtifactStarsData[numStars]?.subBaseHigh) + 1;//+1 for its base roll\r\n    if (rolls.length > totalAllowableRolls) return { valid: false, msg: `Substat cannot be rolled more than ${totalAllowableRolls} times.` };\r\n\r\n    let min = rollData[0] * rolls.length;\r\n    let max = rollData[rollData.length - 1] * rolls.length;\r\n    return { valid: true, efficiency: clampPercent(((value - min) / (max - min)) * 100), msg: `This substat was rolled ${rolls.length} time(s). Values: [${rolls.join(\", \")}]`, rolls }\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static artifactValidation(state) {\r\n    let currentEfficiency = 0, maximumEfficiency = 0;\r\n    let subStatValidations = state.substats.map(substat => Artifact.validateSubStat(state, substat));\r\n    for (const substat of subStatValidations)\r\n      if (!substat.valid)\r\n        return { subStatValidations, valid: false, msg: \"One of the substat is invalid.\", currentEfficiency, maximumEfficiency }\r\n\r\n    //if a substat has >=2 rolls, when not all of them have been unlocked//if a substat has >=2 rolls, when not all of them have been unlocked\r\n    if (subStatValidations.some(substat => substat?.rolls?.length > 1) && subStatValidations.some((substat) => !substat.rolls))\r\n      return { subStatValidations, valid: false, msg: \"One of the substat have >1 rolls, but not all substats are unlocked.\", currentEfficiency, maximumEfficiency }\r\n    let currentNumOfRolls = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls ? cur.rolls.length : 0), 0);\r\n    let rollsRemaining = Artifact.rollsRemaining(state.level, state.numStars);\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(state.numStars);\r\n\r\n    if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n      return { subStatValidations, valid: false, msg: `Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `, currentEfficiency, maximumEfficiency }\r\n\r\n    let totalCurrentEfficiency = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls && cur.efficiency ? (cur.efficiency * cur.rolls.length) : 0), 0);\r\n    currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { valid: true, subStatValidations, currentNumOfRolls, rollsRemaining, totalPossbleUpgrade: totalPossbleRolls, currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getArtifactSets = (setKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = null) =>\r\n    deepClone(this.getArtifactSets(setKey)?.[setNumKey]?.stats || defVal)\r\n\r\n  static getArtifactConditionalStats = (setKey, setNumKey, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getArtifactSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      ArtifactData?.[setKey]?.sets && Object.entries(ArtifactData[setKey].sets).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getArtifactSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      if (ArtifactData?.[setKey]?.sets) {\r\n        let setNumKeys = Object.keys(ArtifactData[setKey].sets).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n        if (setNumKeys.length)\r\n          artifactSetEffect[setKey] = setNumKeys\r\n      }\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getArtifactSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = ArtifactData?.[setKey]?.sets?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getArtifactSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets?.[setNumKey]?.conditional || defVal\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      let hasSetEffect = false\r\n      if (setObj.sets)\r\n        Object.entries(setObj.sets).forEach(([setNumKey, setEffectObj]) => {\r\n          if (setEffectObj.stats && Object.keys(setEffectObj.stats).length > 0) {\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n            hasSetEffect = true\r\n          }\r\n          if (setEffectObj.conditional) {\r\n            let conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n            if (conditionalNum) {\r\n              let condStats = this.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n              if (condStats) {\r\n                setEffect[setNumKey] = deepClone(condStats)\r\n                hasSetEffect = true\r\n              }\r\n            }\r\n          }\r\n        })\r\n      if (hasSetEffect)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => id ? artifactDatabase[id] : null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null) \r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  all_dmg_bonus: { name: \"All DMG Bonus\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elementry Mastry Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elementry Mastry Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elementry Mastry Multiplier Z\", unit: \"multi\" },\r\n  trans_reaction_base_multi: { name: \"Transformation Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_final: (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.phy_dmg,\r\n  plunge_crit_dmg: (s) => s.phy_crit_dmg,\r\n  plunge_avg_dmg: (s) => s.phy_avg_dmg,\r\n  plunge_bonus_multi: (s) => s.phy_bonus_multi,\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * s.ele_mas_multi_x * 1.5 * s.trans_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * s.ele_mas_multi_x * 2 * s.trans_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * s.ele_mas_multi_x * 2 * s.trans_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * s.ele_mas_multi_x * 1.5 * s.trans_reaction_base_multi,\r\n  trans_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s[`${ele}_ele_dmg`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_ele_crit_dmg`],\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_ele_avg_dmg`],\r\n  plunge_bonus_multi: (s, ele) => s[`${ele}_ele_bonus_multi`],\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.all_dmg_bonus) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulas = {\r\n  noelle_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk + s.def_final * (options.value / 100),\r\n    dependency: [\"atk_base\", \"atk_weapon\", \"atk_\", \"atk\", \"def_final\", \"def_base\", \"def_\", \"def\"],\r\n  }\r\n}\r\n\r\n//the keyfilters are used by build generator to reduce the amount of calculations required\r\nfunction AttachLazyFormulas(obj, options = {}) {\r\n  let { formulaKeys = Object.keys(Formulas), statKeys = Object.keys(StatData) } = options;\r\n  let { formulaOverrides = [] } = obj;\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key: overrideFormulaKey, options } = formulaOverride\r\n    let { key, formula } = OverrideFormulas[overrideFormulaKey] || {}\r\n    if (!formulaKeys.includes(key)) return\r\n    formula = formula(options)\r\n    Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => formula(obj) : function () {\r\n        let val = formula(obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n\r\n  formulaKeys.forEach(key => {\r\n    !obj.hasOwnProperty(key) && Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => Formulas[key](obj) : function () {\r\n        let val = Formulas[key](obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  //assign zeros or default values to the other stats that are not part of the calculations\r\n  statKeys.forEach(key => !obj.hasOwnProperty(key) && (obj[key] = StatData[key].default || 0))\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  OverrideFormulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  AttachLazyFormulas,\r\n}","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = (props) => <span className={props.colored ? \"text-5star\" : \"\"}>\r\n  {props.stars ? [...Array(props.stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n"],"sourceRoot":""}