{"version":3,"sources":["Components/CustomFormControl.js","Components/ConditionalSelector.js","Components/CharacterSelection.js","Character/CharacterDisplay/DamageOptionsAndCalculation.js","Artifact/ArtifactCard.js","Artifact/PercentBadge.js","Character/StatInput.js","Components/StatDisplay.js","Components/WIPComponent.js","Character/CharacterDisplay/StatDisplayComponent.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js"],"names":["CustomFormControl","float","placeholder","value","onValueChange","disabled","allowEmpty","useState","focus","setFocus","props","type","className","toString","onChange","e","target","parseFloat","parseInt","onFocus","onBlur","aria-label","ConditionalSelector","conditional","conditionalNum","setConditional","defEle","Array","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","map","condial","i","Fragment","keys","v","stack","tempcount","icon","faCheckSquare","faSquare","CharacterSelectionDropdownList","onSelect","CharacterDatabase","getCharacterKeyList","sort","a","b","characterKey","Character","getName","ReactionToggle","character","reactionMode","setReactionMode","charEleKey","getElementalKey","includes","name","defaultValue","val","src","Assets","elements","hydro","pyro","cryo","HitModeToggle","hitMode","setHitMode","CalculationDisplay","build","Object","entries","getDisplayStatKeys","talentKey","fields","header","getTalentName","bg","Header","Body","field","fieldIndex","subFormulaKeys","Stat","getPrintableFormulaStatKeyList","GetDependencies","finalStats","modifiers","reverse","Boolean","length","as","Card","eventKey","printStat","Collapse","subKey","printFormula","talentField","getTalentField","sectionIndex","fieldText","getTalentFieldValue","fieldVariant","fieldFormulaText","fieldFormula","fieldFormulaDependency","fieldValue","toFixed","ContextAwareToggle","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","DamageOptionsAndCalculation","setState","setOverride","newBuild","equippedBuild","xs","r","Button","href","rel","xl","getStatValueWithOverride","getStatNameRaw","getBaseStatValue","getElementalKeys","eleKey","statKey","immunityStatKey","elementImmunity","prependEle","m","ArtifactCard","artifactId","artifactObj","forceUpdate","onEdit","onDelete","assumeFull","art","ArtifactDatabase","get","setKey","slotKey","numStars","level","mainStatKey","substats","location","lock","currentEfficiency","maximumEfficiency","mainStatLevel","assFullColor","mainStatVal","Artifact","getMainStatValue","getStatUnit","artifactValid","every","sstat","key","rolls","equipOnChar","charKey","equipArtifactOnChar","border","md","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Title","getSetName","stars","getStatName","stat","numRolls","efficiency","effOpacity","statName","style","opacity","percent","valid","Footer","Divider","ckey","placement","overlay","pointerEvents","updateArtifact","faLock","faLockOpen","faEdit","faTrashAlt","PercentBadge","children","badgeColor","isNaN","Math","floor","StatInput","restProps","Prepend","Text","Append","undefined","faUndo","DisplayStatDiff","label","oldVal","fixed","unit","diff","oldText","diffText","StatDisplay","editable","invalid","fixedUnit","StatIconEle","labelVariant","hasOverride","WIPComponent","StatDisplayComponent","statsDisplayKeys","cardbg","JSON","stringify","TabContainer","_useUncontrolled","useUncontrolled","activeKey","id","generateCustomChildId","generateChildId","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","React","createElement","TabContext","Provider","SelectableContext","TabContent","forwardRef","_ref","ref","bsPrefix","_ref$as","Component","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","_extends","classNames","TabPane","_useTabContext","context","rest","shouldTransition","makeEventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","in","displayName","Tab","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","Error","Container","Content","Pane","CharacterArtifactPane","artifactConditionals","artifactsAssumeFull","statKeys","hasTalentPage","Row","Col","equipArtifacts","artifactIds","Alert","sm","lg","getSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","ConditionalsUtil","getConditionalNum","srcKey","srcKey2","getConditionalStats","forEach","conditionalElement","cnum","state","setStateArtifactConditional","Badge","getSetEffectText","getSlotKeys","CharacterOverviewPane","constellation","setConstellation","editLevel","setEditLevel","elementKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","Image","weaponTypes","getStar","colored","InputGroup","clamp","getLevel","levelKey","OverlayTrigger","Tooltip","faSave","getConstellationName","getConstellationImg","roundedCircle","WeaponStatsEditorCard","MainStatsCards","StatItem","getStatVariant","WeaponStatsCard","title","stats","mkey","modifier","reduce","accu","multiplier","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","refineIndex","conditionalStats","getWeaponConditionalStat","getWeaponConditional","conditionalEle","faQuoteLeft","getWeaponImg","getWeaponRarity","DropdownButton","getWeaponName","star","arr","Dropdown","ItemText","getWeaponsOfType","filter","rarity","weaponObj","getLevelName","LevelNameData","faGavel","getWeaponPassiveDescription","atk","getWeaponDescription","editingOther","SetEditingOther","editingMisc","SetEditingMisc","additionalKeys","displayStatKeys","push","editStatKeys","otherStatKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","isPercentSpecialStatSelect","displayNewBuildProps","getStatNamePretty","getStatNameWithPercent","CharacterSpecializedStatKey","CharacterTalentPane","ascension","getAscension","skillDisplayProps","ReactionDisplay","tKey","tText","SkillDisplayCard","subtitle","getTalent","asc","enabled","onClickTitle","ReactionComponents","superconduct_hit","sKey","electro","electrocharged_hit","overloaded_hit","pyro_swirl_hit","swirlEleToDisplay","setele","element","shattered_hit","information","faQuestionCircle","cursor","crystalize_hit","geo","eleInterArr","ElementToReactionKeys","Ele","anemo","modifiersToFields","mStatKey","formulaText","statsToFields","statVal","flat","talentLimits","talentLevelKeys","autoInfused","otherProps","infuseBtn","isAutoInfusable","getElementalName","talentLvlKey","talentLvlKeyRaw","levelBoost","getTalentLevelBoost","tLvl","stateTalentLevelKeys","talentStats","getTalentStats","statsEle","ListGroup","FieldDisplay","index","getTalentImg","Subtitle","getTalentDocument","section","talentText","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","compareAgainstEquipped","fieldBasic","fieldVal","formula","fixedVal","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","Children","toArray","child","CharacterDisplayCard","forceUpdateComponent","setCharacterKey","getInitialState","char","getIntialWeapon","updateCharacter","setLevelKey","baseStatOverrides","DatabaseInitAndVerify","Promise","all","getCharacterDataImport","getWeaponDataImport","getDataImport","then","deepClone","prevProps","footer","onClose","tabName","calculateBuild","HeaderIconDisplay","getThumb","commonPaneProps","u","ButtonGroup","DropdownToggle","getAllCharacterKeys","getlevelNames","getlevelKeys","lvlKey","faTimes","defaultActiveKey","Nav","Link","initialState","equippedArtifacts","WeaponLevelKeys","auto","skill","burst"],"mappings":"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","file":"static/js/12.ad081c82.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst CustomFormControl = ({ float = false, placeholder, value, onValueChange, disabled, allowEmpty = false }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  let displayValue = value\r\n  if (allowEmpty) displayValue = typeof value === \"number\" ? value : \"\"\r\n  else displayValue = !value && focus ? \"\" : (value?.toString?.() || value)\r\n  const props = {\r\n    type: \"number\",\r\n    className: \"hide-appearance\",\r\n    placeholder,\r\n    value: displayValue,\r\n    disabled,\r\n    onChange: (e) => {\r\n      let value = e.target.value;\r\n      if (float) {\r\n        if (allowEmpty) value = value === \"\" ? null : (parseFloat(value) || 0)\r\n        else value = parseFloat(value) || 0\r\n      } else {\r\n        if (allowEmpty) value = value === \"\" ? null : (parseInt(value) || 0)\r\n        else value = parseInt(value) || 0\r\n      }\r\n      onValueChange?.(value);\r\n    },\r\n    onFocus: () => setFocus(true),\r\n    onBlur: () => setFocus(false),\r\n  }\r\n  return <FormControl {...props} aria-label=\"custom-input\" />\r\n}\r\nexport default CustomFormControl;","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Character from \"../Character/Character\";\r\nimport CharacterDatabase from \"../Character/CharacterDatabase\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    // names must be equal\r\n    return 0;\r\n  })).map(characterKey =>\r\n    <Dropdown.Item key={characterKey} onClick={() => onSelect(characterKey)}>\r\n      {Character.getName(characterKey)}\r\n    </Dropdown.Item>)\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n};\r\n\r\n","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Image, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nfunction ReactionToggle({ character: { characterKey, reactionMode = \"none\" }, setReactionMode, className }) {\r\n  reactionMode === null && (reactionMode = \"none\")\r\n  const charEleKey = Character.getElementalKey(characterKey)\r\n  return [\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup className={className}\r\n    type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setReactionMode(val === \"none\" ? null : val)}>\r\n    <ToggleButton value={\"none\"} variant={reactionMode === \"none\" ? \"success\" : \"primary\"}>No Reactions</ToggleButton >\r\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_vaporize\"} variant={reactionMode === \"pyro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Pyro) <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_melt\"} variant={reactionMode === \"pyro_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Pyro) <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"hydro\" && <ToggleButton value={\"hydro_vaporize\"} variant={reactionMode === \"hydro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Hydro) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"cryo\" && <ToggleButton value={\"cryo_melt\"} variant={reactionMode === \"cryo_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Cryo) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n  </ToggleButtonGroup>\r\n}\r\nfunction HitModeToggle({ hitMode, setHitMode, className }) {\r\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={setHitMode} className={className}>\r\n    <ToggleButton value=\"avgHit\" variant={hitMode === \"avgHit\" ? \"success\" : \"primary\"}>Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\" variant={hitMode === \"hit\" ? \"success\" : \"primary\"}>Normal Hit, No Crit</ToggleButton>\r\n    <ToggleButton value=\"critHit\" variant={hitMode === \"critHit\" ? \"success\" : \"primary\"}>Crit Hit DMG</ToggleButton>\r\n  </ToggleButtonGroup>\r\n}\r\n\r\nfunction CalculationDisplay({ character, character: { characterKey }, build }) {\r\n  return <div>\r\n    {Object.entries(Character.getDisplayStatKeys(character)).map(([talentKey, fields]) => {\r\n      let header = \"\"\r\n      if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n      else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n      else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n      else header = Character.getTalentName(characterKey, talentKey, talentKey)\r\n      return <Card bg=\"darkcontent\" text=\"lightfont\" key={talentKey} className=\"w-100 mb-2\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body className=\"p-2\">\r\n          <Accordion className=\"mb-n2\">\r\n            {fields.map((field, fieldIndex) => {\r\n              //simple statKey field\r\n              if (typeof field === \"string\") {\r\n                const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, [field]), build?.finalStats?.modifiers).reverse()\r\n                return Boolean(subFormulaKeys.length) && <Card key={fieldIndex} bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                  <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                    {Stat.printStat(field, build.finalStats)}\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                    <Card.Body className=\"p-2\">\r\n                      <div className=\"mb-n2\">\r\n                        {subFormulaKeys.map(subKey =>\r\n                          <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build.finalStats)} = <small>{Stat.printFormula(subKey, build.finalStats, build.finalStats.modifiers, false)}</small></p>\r\n                        )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              }\r\n              //fields\r\n              const talentField = Character.getTalentField(character, field.talentKey, field.sectionIndex, field.fieldIndex)\r\n              const fieldText = Character.getTalentFieldValue(talentField, \"text\", talentKey, build.finalStats)\r\n              const fieldVariant = Character.getTalentFieldValue(talentField, \"variant\", talentKey, build.finalStats)\r\n              const fieldFormulaText = Character.getTalentFieldValue(talentField, \"formulaText\", talentKey, build.finalStats)\r\n              const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(talentField, \"formula\", talentKey, build.finalStats, [])\r\n              if (!fieldFormula || !fieldFormulaDependency) return null\r\n              const fieldValue = fieldFormula?.(build.finalStats)?.toFixed?.()\r\n              const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, fieldFormulaDependency), build?.finalStats?.modifiers).reverse()\r\n              return <Card key={fieldIndex} bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                  <b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                  <Card.Body className=\"p-2\">\r\n                    <div className=\"mb-n2\">\r\n                      <p className=\"mb-2\"><b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span> = <small>{fieldFormulaText}</small></p>\r\n                      {subFormulaKeys.map(subKey =>\r\n                        <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build.finalStats)} = <small>{Stat.printFormula(subKey, build.finalStats, build.finalStats.modifiers, false)}</small></p>\r\n                      )}\r\n                    </div>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            })}\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n    })}\r\n  </div>\r\n}\r\n\r\nconst ContextAwareToggle = ({ eventKey, callback }) => {\r\n  const currentEventKey = useContext(AccordionContext);\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey),\r\n  );\r\n  const expanded = currentEventKey === eventKey;\r\n  return (\r\n    <Button onClick={decoratedOnClick} >\r\n      <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n      <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function DamageOptionsAndCalculation({ character, character: { hitMode }, setState, setOverride, newBuild, equippedBuild }) {\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <Accordion>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span className=\"d-block\">Damage Calculation Options</span>\r\n            <small>Expand below to edit enemy details.</small>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {/* TODO reaction interaction UI */}\r\n            <ReactionToggle {...{ character, setReactionMode: r => setState({ reactionMode: r }) }} />\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"1\">\r\n        <Card.Body>\r\n          <Row className=\"mb-2\"><Col>\r\n            <Button variant=\"warning\" >\r\n              <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                To get the specific resistance values of enemies, please visit the wiki.\r\n          </a>\r\n            </Button >\r\n          </Col></Row>\r\n          <Row>\r\n            <Col xs={12} xl={6} className=\"mb-2\">\r\n              <StatInput\r\n                name={<b>Enemy Level</b>}\r\n                value={Character.getStatValueWithOverride(character, \"enemyLevel\")}\r\n                placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n                defaultValue={Character.getBaseStatValue(character, \"enemyLevel\")}\r\n                onValueChange={(val) => setOverride?.(\"enemyLevel\", val)}\r\n              />\r\n            </Col>\r\n            {Character.getElementalKeys().map(eleKey => {\r\n              let statKey = eleKey === \"physical\" ? \"physical_enemyRes_\" : `${eleKey}_enemyRes_`\r\n              let immunityStatKey = eleKey === \"physical\" ? \"physical_enemyImmunity\" : `${eleKey}_enemyImmunity`\r\n              let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n              return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                <StatInput\r\n                  prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                    <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                </Button>}\r\n                  name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  placeholder={Stat.getStatNameRaw(statKey)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                  onValueChange={(val) => setOverride?.(statKey, val)}\r\n                  disabled={elementImmunity}\r\n                />\r\n              </Col>\r\n            })}\r\n          </Row>\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n\r\n    <Card bg=\"lightcontent\" text=\"lightfont\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span className=\"d-block\">Damage Calculation Formulas</span>\r\n            <small>Expand below to see calculation details.</small>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <HitModeToggle {...{ hitMode, setHitMode: m => setState({ hitMode: m }) }} />\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"2\">\r\n        <Card.Body className=\"p-2\">\r\n          <CalculationDisplay character={character} build={build} />\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n  </Accordion>\r\n}\r\nexport {\r\n  HitModeToggle,\r\n  ReactionToggle,\r\n};\r\n\r\n","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Character from '../Character/Character';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, artifactObj, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId && !artifactObj) return null;\r\n  const art = artifactObj ? artifactObj : ArtifactDatabase.get(artifactId);\r\n  if (!art) return null;\r\n  let { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location = \"\", lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  let mainStatLevel = assumeFull ? numStars * 4 : level\r\n  let assFullColor = assumeFull && level !== numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\r\n  let artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\r\n  const equipOnChar = (charKey) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charKey)\r\n    forceUpdate?.()\r\n  }\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\r\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let numRolls = stat?.rolls?.length || 0\r\n          let efficiency = stat?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge percent={currentEfficiency} valid={artifactValid}>\r\n          {currentEfficiency?.toFixed(2) ?? currentEfficiency + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge percent={maximumEfficiency} valid={artifactValid}>\r\n          {maximumEfficiency?.toFixed(2) ?? maximumEfficiency + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{Character.getName(location, \"Inventory\")}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={ckey => equipOnChar(ckey)} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><b>{Character.getName(location, \"Inventory\")}</b></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={location}\r\n                  style={location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    art.lock = !lock\r\n                    ArtifactDatabase.updateArtifact(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(lock || location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onValueChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { Col, Row } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText = \"\", diffText = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\r\n\r\n  return <Col xs=\"12\"><Row>\r\n    <Col><b>{label}</b></Col>\r\n    <Col xs=\"auto\">{oldText}{diff ? \" \" : \"\"}{diffText}</Col>\r\n  </Row></Col>\r\n}\r\nexport default function StatDisplay({ character, character: { characterKey }, equippedBuild, newBuild, editable, statKey }) {\r\n  let val, oldVal, fixed, unit, variant;\r\n  let label = \"\"\r\n  if (typeof statKey === \"string\") {//basic statKey\r\n    if (newBuild && equippedBuild) {//comparable\r\n      //newbuild -> val\r\n      //equippedbuild ->old\r\n      val = newBuild?.finalStats?.[statKey] ?? 0\r\n      oldVal = equippedBuild?.finalStats?.[statKey] ?? 0\r\n    } else {\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      //build ->val\r\n      val = build?.finalStats?.[statKey] ?? 0\r\n      //statvaluewith override -> old\r\n      const invalid = \"invalid\"//can't use undeinfed as the defVal, since I want undefined for invalid numbers.\r\n      oldVal = Character.getStatValueWithOverride(character, statKey, invalid)\r\n      oldVal === invalid && (oldVal = undefined)\r\n      if (statKey === \"finalHP\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterHP\")\r\n      else if (statKey === \"finalDEF\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterDEF\")\r\n      else if (statKey === \"finalATK\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterATK\") + Character.getStatValueWithOverride(character, \"weaponATK\")\r\n    }\r\n    unit = Stat.getStatUnit(statKey)\r\n    fixed = Stat.fixedUnit(statKey)\r\n    label = <span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>\r\n  } else {//from character sheet\r\n    const build = newBuild ? newBuild : equippedBuild\r\n    const { talentKey, sectionIndex, fieldIndex } = statKey\r\n    const field = Character.getTalentField(character, talentKey, sectionIndex, fieldIndex)\r\n    const labelVariant = Character.getTalentFieldValue(field, \"variant\", talentKey, build.finalStats)\r\n    label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", talentKey, build.finalStats)}</span>\r\n    fixed = Character.getTalentFieldValue(field, \"fixed\", talentKey, build.finalStats, 0)\r\n    val = Character.getTalentFieldValue(field, \"formula\", talentKey, build.finalStats)?.[0]?.(build.finalStats)\r\n    if (newBuild && equippedBuild) {//comparable\r\n      oldVal = Character.getTalentFieldValue(field, \"formula\", talentKey, equippedBuild.finalStats)?.[0]?.(equippedBuild.finalStats)\r\n    }\r\n  }\r\n\r\n  if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label }} />\r\n}","import { OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\n\r\nconst WIPComponent = ({ children }) =>\r\n  <OverlayTrigger\r\n    overlay={<Tooltip>Work In Progress</Tooltip>}\r\n  >\r\n    <span>\r\n      {children}\r\n    </span>\r\n  </OverlayTrigger>\r\n\r\nexport default WIPComponent","\r\n//take the new statsDisplayKeys, and display the stats.\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport Character from \"../Character\"\r\n\r\nexport default function StatDisplayComponent({ character, character: { characterKey }, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }) {\r\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([talentKey, fields]) => {\r\n    let header = \"\"\r\n    if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n    else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n    else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n    else header = Character.getTalentName(characterKey, talentKey, talentKey)\r\n    return <Col key={talentKey} className=\"mb-2\" xs={12} md={6} xl={4}>\r\n      <Card bg={cardbg} text=\"lightfont\" className=\"h-100\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body>\r\n          <Row>{fields.map(field => <StatDisplay key={JSON.stringify(field)} {...{ character, equippedBuild, newBuild, editable, statKey: field }} />)}</Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  })}</Row>\r\n}","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\r\nimport { Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport Stat from \"../../Stat\";\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\nimport DamageOptionsAndCalculation from './DamageOptionsAndCalculation';\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState, setOverride }) {\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(character)\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  return <>\r\n    {Character.hasTalentPage(characterKey) && <Row><Col xs={12} className=\"mb-2\">\r\n      <DamageOptionsAndCalculation {...{ character, setState, setOverride, newBuild, equippedBuild }} />\r\n    </Col></Row>}\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Body>\r\n            <StatDisplayComponent {...{ character, equippedBuild, newBuild, statsDisplayKeys: statKeys, build, forceUpdate, setState, setOverride, editable }} />\r\n          </Card.Body>\r\n          {newBuild ? <Card.Footer>\r\n            <Button onClick={() => {\r\n              Character.equipArtifacts(characterKey, newBuild.artifactIds)\r\n              forceUpdate?.()\r\n            }}>Equip All artifacts to current character</Button>\r\n            {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n          </Card.Footer> : null}\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Artifact.getSlotKeys().map(slotKey =>\r\n            build.artifactIds[slotKey] ? <Col sm={6} lg={4} key={build.artifactIds[slotKey]} className=\"mb-2\">\r\n              <ArtifactCard artifactId={build.artifactIds[slotKey]} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport CustomFormControl from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"characterLevel\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <CustomFormControl onValueChange={(val) => setOverride(\"characterLevel\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"characterLevel\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"} cursor-pointer`}\r\n                          roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction StatItem({ statKey, val }) {\r\n  if (!statKey) return null\r\n  return <Col xs={12} lg={6} className=\"px-3\">\r\n    <span><b>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</b></span>\r\n    <span className={`float-right text-right text-${Stat.getStatVariant(statKey)}`} >{val?.toFixed?.(Stat.fixedUnit(statKey)) || val}{Stat.getStatUnit(statKey)}</span>\r\n  </Col>\r\n}\r\nfunction WeaponStatsCard({ title, stats = {}, finalStats = {} }) {\r\n  if (Object.keys(stats ?? {}).length === 0) return null\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <Card.Body className=\"py-2 px-0\"><Row>\r\n      {Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? <React.Fragment key={key} >{Object.entries(val ?? {}).map(([mkey, modifier]) =>\r\n        <StatItem key={mkey} statKey={mkey} val={Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0)} />)}</React.Fragment>\r\n        : <StatItem key={key} statKey={key} val={val} />)}\r\n    </Row></Card.Body>\r\n  </Card>\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon = {} }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex, undefined)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum, undefined)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinement</span>\r\n                </Dropdown.ItemText>\r\n                <Dropdown.Divider />\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build?.finalStats, character)}</p>\r\n            <WeaponStatsCard title={\"Main Stats\"} stats={{ atk: weaponDisplayMainVal, [subStatKey]: weaponDisplaySubVal }} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Bonus Stats\"} stats={weaponBonusStats} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Conditional Stats\"} stats={conditionalStats} finalStats={build?.finalStats} />\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  const { editable, character, setOverride, equippedBuild, newBuild } = props\r\n\r\n  const [editing, SetEditing] = useState(false)\r\n  const [editingOther, SetEditingOther] = useState(false)\r\n  const [editingMisc, SetEditingMisc] = useState(false)\r\n\r\n  const additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"characterHP\", \"hp\", \"hp_\", \"characterATK\", \"atk\", \"atk_\", \"characterDEF\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = []\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_dmg_`)\r\n    otherStatKeys.push(`${ele}_res_`)\r\n  })\r\n  otherStatKeys.push(\"stamina\", \"incHeal_\", \"powShield_\")\r\n\r\n  const miscStatkeys = [\r\n    \"normal_dmg_\", \"normal_critRate_\",\r\n    \"charged_dmg_\", \"charged_critRate_\",\r\n    \"skill_dmg_\", \"skill_critRate_\",\r\n    \"burst_dmg_\", \"burst_critRate_\",\r\n    \"dmg_\", \"moveSPD_\", \"atkSPD_\", \"weakspotDMG_\"]\r\n\r\n  const specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  const specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const isPercentSpecialStatSelect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                <CustomFormControl float={isPercentSpecialStatSelect}\r\n                  placeholder=\"Character Special Stat\"\r\n                  value={Character.getStatValueWithOverride(character, \"specializedStatVal\")}\r\n                  onValueChange={(value) => setOverride(\"specializedStatVal\", value)} />\r\n                {isPercentSpecialStatSelect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {displayStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{otherStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingMisc ? \"danger\" : \"info\"} onClick={() => SetEditingMisc(!editingMisc)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingMisc ? faSave : faEdit} /> {editingMisc ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingMisc ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {miscStatkeys.map(statKey =>\r\n              <Col xl={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{miscStatkeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n  </>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from 'react';\r\nimport { useState } from \"react\";\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport DamageOptionsAndCalculation from \"./DamageOptionsAndCalculation\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <DamageOptionsAndCalculation {...{ character, setState, setOverride, newBuild, equippedBuild }} />\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {Character.getTalent(characterKey, \"sprint\", false) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey }, newBuild, equippedBuild }) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  const charEleKey = Character.getElementalKey(characterKey)\r\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row className=\"mb-n2\">\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele stats={build?.finalStats} /></Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-superconduct\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-electrocharged\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-overloaded\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>\r\n}\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-0\">\r\n    <DropdownButton size=\"sm\" title={swirlEleToDisplay[ele]} className=\"d-inline-block\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <span className={`text-${ele} p-2`}> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"shattered_hit\"\r\n  const information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-shattered\">{Stat.getStatName(sKey)} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ stats }) {\r\n  const sKey = \"crystalize_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-crystalize\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nfunction modifiersToFields(modifiers, finalStats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    value: Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0),\r\n    formulaText: <span>{Object.entries(modifier ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, finalStats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey),\r\n    unit: Stat.getStatUnit(mStatKey)\r\n  }))\r\n}\r\nfunction statsToFields(stats, finalStats = {}) {\r\n  return Object.entries(stats).map(([statKey, statVal]) =>\r\n    statKey === \"modifiers\" ? modifiersToFields(statVal, finalStats) : {\r\n      text: Stat.getStatName(statKey),\r\n      variant: Stat.getStatVariant(statKey),\r\n      value: statVal,\r\n      fixed: Stat.fixedUnit(statKey),\r\n      unit: Stat.getStatUnit(statKey)\r\n    }\r\n  ).flat()\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, talentLevelKeys, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n\r\n  let talentLvlKey = 0\r\n  if (talentKey in talentLevelKeys) {\r\n    const talentLvlKeyRaw = talentLevelKeys[talentKey]\r\n    const levelBoost = Character.getTalentLevelBoost(characterKey, talentKey, constellation)\r\n    talentLvlKey = talentLvlKeyRaw + levelBoost\r\n    if (editable) {\r\n      const setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        const stateTalentLevelKeys = state.talentLevelKeys || {}\r\n        stateTalentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys: stateTalentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  const statsEle = talentStats && <Row><Col>\r\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {statsToFields(talentStats, build?.finalStats).map((field, i) =>\r\n          <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className={`d-flex flex-row mb-2 ${(editable && onClickTitle) ? \"cursor-pointer\" : \"\"}`} onClick={onClickTitle} >\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            let conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            conditionalFields = [...Character.getTalentConditionalFields(conditional, conditionalNum, []), ...statsToFields(conditionalStats, build?.finalStats)]\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Col xs={12}>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i} index={i} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        }\r\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\r\n          <div className=\"mb-2\">{talentText}</div>\r\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n        </Col>{conditionalEle}</Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay({ character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats)\r\n\r\n  let fieldVariant = field.variant || \"\"\r\n  if (typeof fieldVariant === \"function\")\r\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats)\r\n\r\n  let fieldBasic = field.formulaText\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = null\r\n  if (field.value)\r\n    fieldVal = typeof field.value === \"function\" ? field.value?.(talentLvlKey, build.finalStats) : field.value\r\n  else if (typeof field.formula === \"function\")\r\n    fieldVal = field?.formula?.(talentLvlKey, build.finalStats)?.[0]?.(build.finalStats)\r\n\r\n  let fixedVal = field.fixed || 0\r\n  const unit = typeof field.unit === \"function\" ? field.unit?.(talentLvlKey, build.finalStats) : (field.unit ?? \"\")\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.formula?.(talentLvlKey, equippedBuild.finalStats)?.[0]?.(equippedBuild.finalStats)\r\n\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats)?.toFixed?.(fixedVal))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) || fieldVal}{unit}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}\r\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, Image, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport WIPComponent from '../Components/WIPComponent';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = CharacterDisplayCard.getInitialState()\r\n    const { characterKey } = props\r\n    if (characterKey) {\r\n      const char = CharacterDatabase.get(characterKey) ?? { characterKey, weapon: CharacterDisplayCard.getIntialWeapon(characterKey) }\r\n      this.state = { ...this.state, ...char }\r\n    }\r\n  }\r\n\r\n  static initialState = {\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    hitMode: \"hit\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => deepClone(CharacterDisplayCard.initialState)\r\n  //UI will not update if the character is updated in DB. Components will have to call this to update this UI.\r\n  forceUpdateComponent = () => {\r\n    if (this.state.characterKey)\r\n      this.setState(CharacterDatabase.get(this.state.characterKey))\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setCharacterKey = (characterKey) => {\r\n    let state = CharacterDisplayCard.getInitialState()\r\n    let char = CharacterDatabase.get(characterKey)\r\n    if (char) state = { ...state, ...char }\r\n    else {\r\n      state = { ...state, characterKey, weapon: CharacterDisplayCard.getIntialWeapon(characterKey) }\r\n      this.updateCharacter(this.state)\r\n    }\r\n    this.setState(state)\r\n    this.props?.setCharacterKey?.(characterKey)\r\n  }\r\n\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  updateCharacter(state) {\r\n    state = deepClone(state)\r\n    delete state.compareAgainstEquipped\r\n    CharacterDatabase.updateCharacter(state)\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.characterKey !== this.props.characterKey && this.props.characterKey !== this.state.characterKey)\r\n      this.setCharacterKey(this.props.characterKey)\r\n    if (this.props.editable && this.state.characterKey) {\r\n      //save this.state as character to character db.\r\n      this.updateCharacter(this.state)\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose, tabName } = this.props\r\n    let character = this.state\r\n    //transfer the hitmode/reactions over \r\n    if (newBuild?.finalStats) {\r\n      newBuild = deepClone(newBuild)\r\n      newBuild.finalStats.hitMode = character.hitMode;\r\n      newBuild.finalStats.reactionMode = character.reactionMode;\r\n    }\r\n\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = characterKey ? <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span> : <span>Select a Character</span>\r\n    const commonPaneProps = { character, newBuild, equippedBuild: !newBuild || compareAgainstEquipped ? equippedBuild : undefined, editable, setState: u => this.setState(u), setOverride: this.setOverride, forceUpdate: this.forceUpdateComponent }\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"} className=\"mr-auto\">\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown as={ButtonGroup}>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} disabled={!characterKey} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"characterLevel\")}</span>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      {Boolean(characterKey) && <Card.Body>\r\n        <Tab.Container defaultActiveKey={tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\")} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              {(process.env.NODE_ENV !== \"development\" && !Character.hasTalentPage(characterKey)) ?\r\n                <WIPComponent>\r\n                  <Nav.Link eventKey=\"talent\" disabled>Talents <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n                </WIPComponent> :\r\n                <Nav.Link eventKey=\"talent\">Talents</Nav.Link>\r\n              }\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <WIPComponent>\r\n                <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n              </WIPComponent>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setConstellation={this.setConstellation}\r\n                {...commonPaneProps}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ ...commonPaneProps, newBuild: undefined, equippedBuild, }} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...commonPaneProps} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...commonPaneProps} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>}\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n"],"sourceRoot":""}