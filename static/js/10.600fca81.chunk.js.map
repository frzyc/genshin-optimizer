{"version":3,"sources":["Components/StarDisplay.js","Weapon/Weapon.js","Data/ArtifactData.js","Components/ConditionalSelector.js","Assets/Weapons/Swords/Swords.js","Assets/Weapons/Swords/Weapon_Dull_Blade.png","Assets/Weapons/Swords/Weapon_Silver_Sword.png","Assets/Weapons/Swords/Weapon_Cool_Steel.png","Assets/Weapons/Swords/Weapon_Dark_Iron_Sword.png","Assets/Weapons/Swords/Weapon_Fillet_Blade.png","Assets/Weapons/Swords/Weapon_Harbinger_of_Dawn.png","Assets/Weapons/Swords/Weapon_Skyrider_Sword.png","Assets/Weapons/Swords/Weapon_Traveler's_Handy_Sword.png","Assets/Weapons/Swords/Weapon_Blackcliff_Longsword.png","Assets/Weapons/Swords/Weapon_Favonius_Sword.png","Assets/Weapons/Swords/Weapon_Iron_Sting.png","Assets/Weapons/Swords/Weapon_Lion's_Roar.png","Assets/Weapons/Swords/Weapon_Prototype_Rancour.png","Assets/Weapons/Swords/Weapon_Royal_Longsword.png","Assets/Weapons/Swords/Weapon_Sacrificial_Sword.png","Assets/Weapons/Swords/Weapon_The_Alley_Flash.png","Assets/Weapons/Swords/Weapon_The_Black_Sword.png","Assets/Weapons/Swords/Weapon_The_Flute.png","Assets/Weapons/Swords/Weapon_Sword_of_Descension.png","Assets/Weapons/Swords/festering_fang.png","Assets/Weapons/Swords/Weapon_Aquila_Favonia.png","Assets/Weapons/Swords/Weapon_Skyward_Blade.png","Assets/Weapons/Swords/summit_shaper.png","Assets/Weapons/Claymores/Claymores.js","Assets/Weapons/Claymores/Weapon_Waster_Greatsword.png","Assets/Weapons/Claymores/Weapon_Old_Merc's_Pal.png","Assets/Weapons/Claymores/Weapon_Bloodtainted_Greatsword.png","Assets/Weapons/Claymores/Weapon_Debate_Club.png","Assets/Weapons/Claymores/Weapon_Ferrous_Shadow.png","Assets/Weapons/Claymores/Weapon_Quartz.png","Assets/Weapons/Claymores/Weapon_Skyrider_Greatsword.png","Assets/Weapons/Claymores/Weapon_White_Iron_Greatsword.png","Assets/Weapons/Claymores/Weapon_Blackcliff_Slasher.png","Assets/Weapons/Claymores/Weapon_Favonius_Greatsword.png","Assets/Weapons/Claymores/Weapon_Lithic_Blade.png","Assets/Weapons/Claymores/Weapon_Prototype_Aminus.png","Assets/Weapons/Claymores/Weapon_Rainslasher.png","Assets/Weapons/Claymores/Weapon_Royal_Greatsword.png","Assets/Weapons/Claymores/Weapon_Serpent_Spine.png","Assets/Weapons/Claymores/Weapon_The_Bell.png","Assets/Weapons/Claymores/Weapon_Whiteblind.png","Assets/Weapons/Claymores/Weapon_Sacrificial_Greatsword.png","Assets/Weapons/Claymores/snow_tombed_starsilver.png","Assets/Weapons/Claymores/Weapon_Skyward_Pride.png","Assets/Weapons/Claymores/Weapon_Wolf's_Gravestone.png","Assets/Weapons/Claymores/Weapon_The_Unforged.png","Assets/Weapons/Polearms/Polearms.js","Assets/Weapons/Polearms/Weapon_Beginner's_Protector.png","Assets/Weapons/Polearms/Weapon_Iron_Point.png","Assets/Weapons/Polearms/Weapon_Black_Tassel.png","Assets/Weapons/Polearms/Weapon_Halberd.png","Assets/Weapons/Polearms/Weapon_White_Tassel.png","Assets/Weapons/Polearms/Weapon_Blackcliff_Pole.png","Assets/Weapons/Polearms/Weapon_Crescent_Pike.png","Assets/Weapons/Polearms/Weapon_Deathmatch.png","Assets/Weapons/Polearms/Weapon_Dragon's_Bane.png","Assets/Weapons/Polearms/Weapon_Lithic_Spear.png","Assets/Weapons/Polearms/Weapon_Prototype_Grudge.png","Assets/Weapons/Polearms/Weapon_Favonius_Lance.png","Assets/Weapons/Polearms/Weapon_Royal_Spear.png","Assets/Weapons/Polearms/dragonspine_spear.png","Assets/Weapons/Polearms/Weapon_Vortex_Vanquisher.png","Assets/Weapons/Polearms/Weapon_Primordial_Jade_Winged-Spear.png","Assets/Weapons/Polearms/Weapon_Skyward_Spine.png","Assets/Weapons/Bows/Bows.js","Assets/Weapons/Bows/Weapon_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Seasoned_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Ebony_Bow.png","Assets/Weapons/Bows/Weapon_Messenger.png","Assets/Weapons/Bows/Weapon_Raven_Bow.png","Assets/Weapons/Bows/Weapon_Recurve_Bow.png","Assets/Weapons/Bows/Weapon_Sharpshooter's_Oath.png","Assets/Weapons/Bows/Weapon_Slingshot.png","Assets/Weapons/Bows/Weapon_The_Stringless.png","Assets/Weapons/Bows/Weapon_Alley_Hunter.png","Assets/Weapons/Bows/Weapon_Blackcliff_Warbow.png","Assets/Weapons/Bows/Weapon_Compound_Bow.png","Assets/Weapons/Bows/Weapon_Favonius_Warbow.png","Assets/Weapons/Bows/Weapon_Prototype_Crescent.png","Assets/Weapons/Bows/Weapon_Royal_Bow.png","Assets/Weapons/Bows/Weapon_Rust.png","Assets/Weapons/Bows/Weapon_Sacrificial_Bow.png","Assets/Weapons/Bows/Weapon_The_Viridescent_Hunt.png","Assets/Weapons/Bows/Weapon_Skyward_Harp.png","Assets/Weapons/Bows/Weapon_Amos'_Bow.png","Assets/Weapons/Bows/dreams_of_dragonfell.png","Assets/Weapons/Catalysts/Catalysts.js","Assets/Weapons/Catalysts/Weapon_Apprentice's_Notes.png","Assets/Weapons/Catalysts/Weapon_Pocket_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Amber_Catalyst.png","Assets/Weapons/Catalysts/Weapon_Emerald_Orb.png","Assets/Weapons/Catalysts/Weapon_Magic_Guide.png","Assets/Weapons/Catalysts/Weapon_Otherworldly_Story.png","Assets/Weapons/Catalysts/Weapon_Thrilling_Tales_of_Dragon_Slayers.png","Assets/Weapons/Catalysts/Weapon_Twin_Nephrite.png","Assets/Weapons/Catalysts/Weapon_Blackcliff_Amulet.png","Assets/Weapons/Catalysts/Weapon_Favonius_Codex.png","Assets/Weapons/Catalysts/Weapon_Mappa_Mare.png","Assets/Weapons/Catalysts/Weapon_Prototype_Malice.png","Assets/Weapons/Catalysts/Weapon_Royal_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Sacrificial_Fragments.png","Assets/Weapons/Catalysts/Weapon_Solar_Pearl.png","Assets/Weapons/Catalysts/Weapon_The_Widsith.png","Assets/Weapons/Catalysts/Weapon_Wine_and_Song.png","Assets/Weapons/Catalysts/Weapon_Eye_of_Perception.png","Assets/Weapons/Catalysts/Weapon_Frostbearer.png","Assets/Weapons/Catalysts/Weapon_Lost_Prayer_to_the_Sacred_Winds.png","Assets/Weapons/Catalysts/Weapon_Skyward_Atlas.png","Assets/Weapons/Catalysts/Weapon_Memory_of_Dust.png","Assets/Assets.js","Assets/Weapons/Weapons.js","Assets/Element_Anemo.png","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Data/WeaponData.js","Components/StatIcon.js","StatDependency.js","DatabaseUtil.js","Data/CharacterData.js","Character/CharacterCard.js","Build/BuildWorker.js","Build/Build.js","Build/BuildDisplay.js","Character/Character.js","Stat.js","Util/Util.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Util/ConditionalsUtil.js","Artifact/ArtifactDatabase.js","Data/ElementalData.js","StatData.js"],"names":["StarIcon","icon","faStar","Stars","props","className","colored","stars","Array","keys","map","_","i","Weapon","this","Error","getWeaponDataImport","WeaponDataImport","getLevelName","levelKey","defVal","LevelNameData","getLevelIndex","WeaponLevelKeys","indexOf","getWeaponName","weaponKey","WeaponData","name","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","refineIndex","charFinalStats","character","passiveDescription","getWeaponDescription","description","getWeaponConditional","conditional","getWeaponImg","img","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","getWeaponSubStatKey","subStatKey","getWeaponBonusStat","stats","getWeaponsOfType","weaponType","Object","fromEntries","entries","filter","getWeaponTypeName","WeaponTypeData","getWeaponMainStatValWithOverride","weaponObj","overrideMainVal","key","getWeaponSubStatValWithOverride","overrideSubVal","getWeaponConditionalStat","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","ArtifactData","ArtifactDataImport","then","imp","default","ArtifactMainSlotKeys","ElementalData","forEach","push","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","hp","atk","hp_","atk_","def_","phy_dmg_bonus","ele_dmg_bonus","ele_mas","ener_rech","crit_rate","crit_dmg","heal_bonu","2","ArtifactSubStatsData","def","ArtifactSlotsData","flower","plume","sands","goblet","circlet","ConditionalSelector","setConditional","defEle","disabled","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","sword","DullBlade","SilverSword","CoolSteel","DarkIronSword","FilletBlade","HarbingerOfDawn","SkyriderSword","TravelersHandySword","BlackcliffLongsword","FavoniusSword","IronSting","LionsRoar","PrototypeRancour","RoyalLongsword","SacrificialSword","TheAlleyFlash","TheBlackSword","TheFlute","SwordOfDescension","FesteringDesire","AquilaFavonia","SkywardBlade","SummitShaper","claymore","WasterGreatsword","OldMercsPal","BloodtaintedGreatsword","DebateClub","FerrousShadow","Quartz","SkyriderGreatsword","WhiteIronGreatsword","BlackcliffSlasher","FavoniusGreatsword","LithicBlade","PrototypeAminus","Rainslasher","RoyalGreatsword","SerpentSpine","TheBell","Whiteblind","SacrificialGreatsword","SnowTombedStarsilver","SkywardPride","WolfsGravestone","TheUnforged","polearms","BeginnersProtector","IronPoint","BlackTassel","Halberd","WhiteTassel","BlackcliffPole","CrescentPike","Deathmatch","DragonsBane","LithicSpear","PrototypeGrudge","FavoniusLance","RoyalSpear","DragonspineSpear","VortexVanquisher","PrimordialJadeWingedSpear","SkywardSpine","bows","HuntersBow","SeasonedHuntersBow","EbonyBow","Messenger","RavenBow","RecurveBow","SharpshootersOath","Slingshot","TheStringless","AlleyHunter","BlackcliffWarbow","CompoundBow","FavoniusWarbow","PrototypeCrescent","RoyalBow","Rust","SacrificialBow","TheViridescentHunt","SkywardHarp","AmosBow","DreamsOfDragonfell","catalysts","ApprenticesNotes","PocketGrimoire","AmberCatalyst","EmeraldOrb","MagicGuide","OtherworldlyStory","ThrillingTalesOfDragonSlayers","TwinNephrite","BlackcliffAgate","FavoniusCodex","MappaMare","PrototypeMalice","RoyalGrimoire","SacrificialFragments","SolarPearl","TheWidsith","WineAndSong","EyeOfPerception","Frostbearer","LostPrayerToTheSacredWinds","SkywardAtlas","MemoryOfDust","Assets","weapons","swords","claymores","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","polearm","resin","fragile","condensed","exp_books","advice","wit","experience","StatIcon","hp_base","faTint","hp_final","atk_base","faFistRaised","atk_final","def_base","faShieldAlt","def_final","faMagic","faDice","faDiceD20","faSync","faFirstAid","StatIconEle","statKey","formulaKeyDependency","DependencyStatKeys","formulaOverrides","dependencies","GetDependencyStats","formulaOverride","OverrideFormulas","dependency","includes","Set","formulaKeys","Formulas","k","statkeys","StatData","keyDependencies","subdependencies","testObj","defineProperty","get","configurable","AttachLazyFormulas","getDependency","console","log","DatabaseInitAndVerify","localStorage","removeItem","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","values","art","valid","location","getCharacter","keyMapping","setKey","mainStatKey","endsWith","replace","updateArtifact","chars","getCharacterDatabase","equippedArtifacts","slotKey","artid","getArtifact","undefined","artifactConditionals","cond","srcKey","srcKey2","dmgMode","updateCharacter","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","stam","CharacterSpecializedStatKey","CharacterCard","useReducer","x","forceUpdate","useEffect","Promise","all","Character","getCharacterDataImport","Artifact","getArtifactDataImport","characterId","onEdit","onDelete","build","calculateBuild","setToSlots","characterKey","weapon","constellation","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","weaponName","weaponMainVal","weaponSubKey","weaponSubVal","weaponLevelName","weaponPassiveName","cardClassName","bg","Header","header","xs","faEdit","faTrashAlt","Body","style","cursor","src","getThumb","getStar","thumbnail","getName","getStatValueWithOverride","Stat","getStatName","getStatUnit","getArtifactSetEffects","arr","artifactSetName","getArtifactSetName","highestNum","Math","max","unit","statVal","finalStats","toFixed","fixedUnit","footer","Footer","as","Link","to","pathname","selectedCharacterId","Worker_fn","Worker","Build","databaseObj","ret","slot","setFilters","sets","reduce","accu","num","perm","slotKeys","getArtifactSlotKeys","slotPerm","index","length","numArtsPerSet","setFilter","pieces","splitArtifacts","setPerms","setsInFilter","splitNumArtsPerSet","artArr","setPerm","permaccu","CharacterDisplayCardPromise","CharacterDisplayCard","lazy","BuildDisplay","forceUpdateBuildDisplay","state","artifactDatabase","val","lock","every","filterKeys","split","splitArtifactsBySlot","artifactsSlotsToSelectMainStats","mainStat","changeMainStat","setState","autoGenerateBuilds","changeSetFilterKey","newkey","setsNumArr","oldKey","artifactCond","parseInt","dropdownitemsForStar","star","getArtifactSetsByMaxStarEntries","setobj","some","getArtifactSets","artsAccountedOther","cur","ind","Dropdown","totBuildNumber","maxBuildsToShow","generateBuilds","artifactSetPerms","builds","generatingBuilds","asending","buildFilterKey","artifactsAssumeFull","initialStats","calculateCharacterWithWeaponStats","artifactSetEffects","getAllArtifactSetEffectsObj","deepClone","mainStatVal","getMainStatValue","numStars","depdendencyStatKeys","data","worker","terminate","onmessage","e","ReactGA","timing","category","variable","value","label","calculateTotalBuildNumber","obj","calculateBuildWithObjs","artifacts","postMessage","BuildGeneratorEditorCard","statsDisplayKeys","charlist","selectedCharacter","characterName","artsAccounted","generateAllPossibleArtifactSetPerm","buildAlert","Alert","maxBuildsToGenerate","characterDropDown","DropdownButton","title","char","id","Card","Row","Col","lg","editCharacter","Button","getArtifactSlotNameWithIcon","getStatNameWithPercent","ButtonGroup","ItemText","Divider","getArtifactSetEffectsObj","setNkey","setNumKey","setStats","getArtifactSetNumStats","getArtifactSetEffectConditional","getConditionalNum","conditionalStats","getArtifactConditionalStats","conditionalElement","Badge","getArtifactSetEffectText","faSortAmountDownAlt","faSortAmountUp","ArtifactDisplayItem","ListGroup","action","modalBuild","sort","slotarr1","slotarr","getArtifactSlotIcon","sm","closeModal","BuildModal","characterid","Modal","show","Boolean","onHide","contentClassName","Suspense","fallback","newBuild","onClose","editable","getInitialState","savedState","loadFromLocalStorage","pageview","saveToLocalStorage","getDisplayStatKeys","Container","artifactIds","join","React","Component","initialState","maxBuildsToShowList","maxBuildsToGenerateList","moveToNewLocation","removeCharacterById","getBaseStatValue","getSpecializedStatKey","getSpeicalizedStatVal","getLevel","characterObj","getCDataObj","baseStat","getIndexFromlevelkey","charKey","getElementalName","elementalKey","getAllCharacterKeys","getElementalKeys","getConstellationName","constellationName","getTitles","titles","getlevelKeys","getlevelNames","getAscension","getSpecializedStat","specializeStat","thumbImg","getCard","cardImg","getTalentImg","talentKey","talent","getConstellationImg","constIndex","getTalentName","getTalentLevelBoost","talents","talentBoost","boostEntry","find","getTalentLevelKey","withBoost","talentLvlKey","talentLevelKeys","levelBoost","clamp","getTalentDocument","document","getTalentFields","fields","getTalentStats","ascension","getTalentStatsAll","statsArr","getTalentConditional","conditionalKey","doc","section","tempCond","getTalentConditionalStats","getTalentConditionalFields","getTalentStatKey","skillKey","elemental","autoInfused","reactionMode","charEleKey","isAutoElemental","auto","infusable","eleKey","getTalentStatKeyVariant","isAutoInfusable","atkKeys","startsWith","ElementToReactionKeys","hasOverride","baseStatOverrides","equipArtifacts","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","equipArtifact","artifactSetEffectsStats","getArtifactSetEffectsStats","substats","substat","stat","condStats","statKeys","char_ele_key","overrides","hasOwnProperty","specialStatKey","specializedStatVal","addStatsObj","talentConditionals","weaponStats","subKey","subVal","bonusStats","htmlStatsData","getStatNamePretty","pretty","getStatNameRaw","getStatVariant","printStat","f","expand","printFormula","printOverrideFormula","options","FormulaText","overrideKey","OverrideFormulasText","formulaText","statName","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_dmg","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_dmg","electrocharged_multi","electrocharged","superconduct_dmg","superconduct_multi","superconduct","swirl_dmg","swirl_multi","swirl","shatter_dmg","shatter_multi","shattered","crystalize_dmg","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","trans_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","abs","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","enumerable","writable","noelle_burst_atk","getRandomElementFromArray","array","floor","random","getRandomIntInclusive","min","ceil","getItem","JSON","parse","setItem","stringify","closeEnoughFloat","a","b","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","slice","initiated","characterDatabase","charIdIndex","isInvalid","getCharacterIdList","addCharacter","dchar","getArtifactIDFromSlot","charid","unequipArtifactOnSlot","equipArtifactBuild","SlotIcon","faBahai","faFeatherAlt","faHourglass","faWineGlass","faCrown","ArtifactBase","rollData","float","roll","maxNumRoll","round","rollOption","sum","reverse","parseFloat","isNaN","msg","isFloat","getSubstatRollData","rolls","getRolls","totalAllowableRolls","efficiency","currentEfficiency","maximumEfficiency","subStatValidations","validateSubStat","currentNumOfRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","totalPossbleUpgrade","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getArtifactPieceName","getArtifactPieceIcon","icons","getArtifactSlotName","slotIcon","getRarityArr","getMainStatKeys","getSubStatKeys","numberOfSubstatUnlocked","artifactSetEffect","setNumKeys","setEffectText","ArtifactSetEffectsObj","setObj","setEffect","hasSetEffect","setEffectObj","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","s","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","reactionName","dmgKey","dmgName","str","atkTypeName","dmgModeName","ele_key","formula","overrideFormulaKey"],"mappings":"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0B,iDfsCvCC,QgBtCa,IAA0B,4ChBuCvCC,WiBvCa,IAA0B,8CjBwCvCC,sBkBxCa,IAA0B,0DlByCvCC,qBmBzCa,IAA0B,mDnB0CvCC,aoB1Ca,IAA0B,iDpB2CvCC,gBqB3Ca,IAA0B,qDrB4CvCC,YsB5Ca,IAA0B,iDCoC1BC,EAnBE,CACfC,mBClBa,IAA0B,wDDmBvCC,UEnBa,IAA0B,8CFoBvCC,YGpBa,IAA0B,gDHqBvCC,QIrBa,IAA0B,2CJsBvCC,YKtBa,IAA0B,gDLuBvCC,eMvBa,IAA0B,mDNwBvCC,aOxBa,IAA0B,iDPyBvCC,WQzBa,IAA0B,8CR0BvCC,YS1Ba,IAA0B,iDT2BvCC,YU3Ba,IAA0B,gDV4BvCC,gBW5Ba,IAA0B,oDX6BvCC,cY7Ba,IAA0B,kDZ8BvCC,Wa9Ba,IAA0B,+Cb+BvCC,iBc/Ba,IAA0B,8CdgCvCC,iBehCa,IAA0B,qDfiCvCC,0BgBjCa,IAA0B,gEhBkCvCC,aiBlCa,IAA0B,kDC4C1BC,EAvBF,CACXC,WCtBa,IAA0B,gDDuBvCC,mBEvBa,IAA0B,yDFwBvCC,SGxBa,IAA0B,6CHyBvCC,UIzBa,IAA0B,6CJ0BvCC,SK1Ba,IAA0B,6CL2BvCC,WM3Ba,IAA0B,+CN4BvCC,kBO5Ba,IAA0B,uDP6BvCC,UQ7Ba,IAA0B,6CR8BvCC,cS9Ba,IAA0B,kDT+BvCC,YU/Ba,IAA0B,gDVgCvCC,iBWhCa,IAA0B,qDXiCvCC,YYjCa,IAA0B,gDZkCvCC,ealCa,IAA0B,mDbmCvCC,kBcnCa,IAA0B,sDdoCvCC,SepCa,IAA0B,6CfqCvCC,KgBrCa,IAA0B,wChBsCvCC,eiBtCa,IAA0B,mDjBuCvCC,mBkBvCa,IAA0B,wDlBwCvCC,YmBxCa,IAA0B,gDnByCvCC,QoBzCa,IAA0B,6CpB0CvCC,mBqB1Ca,IAA0B,kDC8C1BC,EAxBG,CAChBC,iBCvBa,IAA0B,sDDwBvCC,eExBa,IAA0B,mDFyBvCC,cGzBa,IAA0B,kDH0BvCC,WI1Ba,IAA0B,+CJ2BvCC,WK3Ba,IAA0B,+CL4BvCC,kBM5Ba,IAA0B,sDN6BvCC,8BO7Ba,IAA0B,qEP8BvCC,aQ9Ba,IAA0B,iDR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","file":"static/js/10.600fca81.chunk.js","sourcesContent":["import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = (props) => <span className={props.colored ? \"text-5star\" : \"\"}>\r\n  {props.stars ? [...Array(props.stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import DullBlade from './Weapon_Dull_Blade.png'\r\nimport SilverSword from './Weapon_Silver_Sword.png'\r\nimport CoolSteel from './Weapon_Cool_Steel.png'\r\nimport DarkIronSword from './Weapon_Dark_Iron_Sword.png'\r\nimport FilletBlade from './Weapon_Fillet_Blade.png'\r\nimport HarbingerOfDawn from './Weapon_Harbinger_of_Dawn.png'\r\nimport SkyriderSword from './Weapon_Skyrider_Sword.png'\r\nimport TravelersHandySword from './Weapon_Traveler\\'s_Handy_Sword.png'\r\nimport BlackcliffLongsword from './Weapon_Blackcliff_Longsword.png'\r\nimport FavoniusSword from './Weapon_Favonius_Sword.png'\r\nimport IronSting from './Weapon_Iron_Sting.png'\r\nimport LionsRoar from './Weapon_Lion\\'s_Roar.png'\r\nimport PrototypeRancour from './Weapon_Prototype_Rancour.png'\r\nimport RoyalLongsword from './Weapon_Royal_Longsword.png'\r\nimport SacrificialSword from './Weapon_Sacrificial_Sword.png'\r\nimport TheAlleyFlash from './Weapon_The_Alley_Flash.png'\r\nimport TheBlackSword from './Weapon_The_Black_Sword.png'\r\nimport TheFlute from './Weapon_The_Flute.png'\r\nimport SwordOfDescension from './Weapon_Sword_of_Descension.png'\r\nimport FesteringDesire from './festering_fang.png'\r\nimport AquilaFavonia from './Weapon_Aquila_Favonia.png'\r\nimport SkywardBlade from './Weapon_Skyward_Blade.png'\r\nimport SummitShaper from './summit_shaper.png'\r\nconst sword = {\r\n  DullBlade,\r\n  SilverSword,\r\n  CoolSteel,\r\n  DarkIronSword,\r\n  FilletBlade,\r\n  HarbingerOfDawn,\r\n  SkyriderSword,\r\n  TravelersHandySword,\r\n  BlackcliffLongsword,\r\n  FavoniusSword,\r\n  IronSting,\r\n  LionsRoar,\r\n  PrototypeRancour,\r\n  RoyalLongsword,\r\n  SacrificialSword,\r\n  TheAlleyFlash,\r\n  TheBlackSword,\r\n  TheFlute,\r\n  SwordOfDescension,\r\n  FesteringDesire,\r\n  AquilaFavonia,\r\n  SkywardBlade,\r\n  SummitShaper,\r\n}\r\nexport default sword","export default __webpack_public_path__ + \"static/media/Weapon_Dull_Blade.f5de06e8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Silver_Sword.e2462179.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Cool_Steel.0c6a9897.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dark_Iron_Sword.8dce5b63.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Fillet_Blade.c8e8ab5f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Harbinger_of_Dawn.26da0d78.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Sword.80e60c22.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Traveler's_Handy_Sword.168a7842.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Longsword.522f4d19.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Sword.cb5df26b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Sting.9f4b4b01.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lion's_Roar.b0e78fa9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Rancour.64965f56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Longsword.5a57f015.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Sword.048703ab.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Alley_Flash.7528f5ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Black_Sword.3987a991.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Flute.82af0cbf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sword_of_Descension.eb67a1df.png\";","export default __webpack_public_path__ + \"static/media/festering_fang.38aa5200.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Aquila_Favonia.7c014114.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Blade.af22a740.png\";","export default __webpack_public_path__ + \"static/media/summit_shaper.5245335d.png\";","import WasterGreatsword from './Weapon_Waster_Greatsword.png'\r\nimport OldMercsPal from './Weapon_Old_Merc\\'s_Pal.png'\r\nimport BloodtaintedGreatsword from './Weapon_Bloodtainted_Greatsword.png'\r\nimport DebateClub from './Weapon_Debate_Club.png'\r\nimport FerrousShadow from './Weapon_Ferrous_Shadow.png'\r\nimport Quartz from './Weapon_Quartz.png'\r\nimport SkyriderGreatsword from './Weapon_Skyrider_Greatsword.png'\r\nimport WhiteIronGreatsword from './Weapon_White_Iron_Greatsword.png'\r\nimport BlackcliffSlasher from './Weapon_Blackcliff_Slasher.png'\r\nimport FavoniusGreatsword from './Weapon_Favonius_Greatsword.png'\r\nimport LithicBlade from './Weapon_Lithic_Blade.png'\r\nimport PrototypeAminus from './Weapon_Prototype_Aminus.png'\r\nimport Rainslasher from './Weapon_Rainslasher.png'\r\nimport RoyalGreatsword from './Weapon_Royal_Greatsword.png'\r\nimport SerpentSpine from './Weapon_Serpent_Spine.png'\r\nimport TheBell from './Weapon_The_Bell.png'\r\nimport Whiteblind from './Weapon_Whiteblind.png'\r\nimport SacrificialGreatsword from './Weapon_Sacrificial_Greatsword.png'\r\nimport SnowTombedStarsilver from './snow_tombed_starsilver.png'\r\nimport SkywardPride from './Weapon_Skyward_Pride.png'\r\nimport WolfsGravestone from './Weapon_Wolf\\'s_Gravestone.png'\r\nimport TheUnforged from './Weapon_The_Unforged.png'\r\nconst claymore = {\r\n  WasterGreatsword,\r\n  OldMercsPal,\r\n  BloodtaintedGreatsword,\r\n  DebateClub,\r\n  FerrousShadow,\r\n  Quartz,\r\n  SkyriderGreatsword,\r\n  WhiteIronGreatsword,\r\n  BlackcliffSlasher,\r\n  FavoniusGreatsword,\r\n  LithicBlade,\r\n  PrototypeAminus,\r\n  Rainslasher,\r\n  RoyalGreatsword,\r\n  SerpentSpine,\r\n  TheBell,\r\n  Whiteblind,\r\n  SacrificialGreatsword,\r\n  SnowTombedStarsilver,\r\n  SkywardPride,\r\n  WolfsGravestone,\r\n  TheUnforged,\r\n}\r\nexport default claymore","export default __webpack_public_path__ + \"static/media/Weapon_Waster_Greatsword.a411f34b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Old_Merc's_Pal.67aa1930.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Bloodtainted_Greatsword.eb68a62c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Debate_Club.be908652.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ferrous_Shadow.ef586057.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Quartz.d41c58b9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Greatsword.46e935cb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Iron_Greatsword.eda6295d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Slasher.4693af54.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Greatsword.bfd288be.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Blade.ab4d4f4f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Aminus.d2bf526a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rainslasher.664c61ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Greatsword.fbc5184a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Serpent_Spine.bb2831b5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Bell.3670f330.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Whiteblind.9c37b7dd.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Greatsword.1b0f0225.png\";","export default __webpack_public_path__ + \"static/media/snow_tombed_starsilver.23f56359.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Pride.66a1b3f7.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wolf's_Gravestone.032b607c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Unforged.f7762a2f.png\";","import BeginnersProtector from './Weapon_Beginner\\'s_Protector.png'\r\nimport IronPoint from './Weapon_Iron_Point.png'\r\nimport BlackTassel from './Weapon_Black_Tassel.png'\r\nimport Halberd from './Weapon_Halberd.png'\r\nimport WhiteTassel from './Weapon_White_Tassel.png'\r\nimport BlackcliffPole from './Weapon_Blackcliff_Pole.png'\r\nimport CrescentPike from './Weapon_Crescent_Pike.png'\r\nimport Deathmatch from './Weapon_Deathmatch.png'\r\nimport DragonsBane from './Weapon_Dragon\\'s_Bane.png'\r\nimport LithicSpear from './Weapon_Lithic_Spear.png'\r\nimport PrototypeGrudge from './Weapon_Prototype_Grudge.png'\r\nimport FavoniusLance from './Weapon_Favonius_Lance.png'\r\nimport RoyalSpear from './Weapon_Royal_Spear.png'\r\nimport DragonspineSpear from './dragonspine_spear.png'\r\nimport VortexVanquisher from './Weapon_Vortex_Vanquisher.png'\r\nimport PrimordialJadeWingedSpear from './Weapon_Primordial_Jade_Winged-Spear.png'\r\nimport SkywardSpine from './Weapon_Skyward_Spine.png'\r\nconst polearms = {\r\n  BeginnersProtector,\r\n  IronPoint,\r\n  BlackTassel,\r\n  Halberd,\r\n  WhiteTassel,\r\n  BlackcliffPole,\r\n  CrescentPike,\r\n  Deathmatch,\r\n  DragonsBane,\r\n  LithicSpear,\r\n  PrototypeGrudge,\r\n  FavoniusLance,\r\n  RoyalSpear,\r\n  DragonspineSpear,\r\n  VortexVanquisher,\r\n  PrimordialJadeWingedSpear,\r\n  SkywardSpine,\r\n}\r\nexport default polearms","export default __webpack_public_path__ + \"static/media/Weapon_Beginner's_Protector.19165915.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Point.8263916c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Black_Tassel.c3103e46.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Halberd.0044e214.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Tassel.a3cc9099.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Pole.1e15a879.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Crescent_Pike.9e473ddb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Deathmatch.9b0e6d8e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dragon's_Bane.7437cf28.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Spear.cfb11b6c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Grudge.64b3a263.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Lance.693335d4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Spear.99058465.png\";","export default __webpack_public_path__ + \"static/media/dragonspine_spear.bb785669.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Vortex_Vanquisher.efad8956.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Primordial_Jade_Winged-Spear.ea10bc42.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Spine.e81931a5.png\";","import HuntersBow from './Weapon_Hunter\\'s_Bow.png'\r\nimport SeasonedHuntersBow from './Weapon_Seasoned_Hunter\\'s_Bow.png'\r\nimport EbonyBow from './Weapon_Ebony_Bow.png'\r\nimport Messenger from './Weapon_Messenger.png'\r\nimport RavenBow from './Weapon_Raven_Bow.png'\r\nimport RecurveBow from './Weapon_Recurve_Bow.png'\r\nimport SharpshootersOath from './Weapon_Sharpshooter\\'s_Oath.png'\r\nimport Slingshot from './Weapon_Slingshot.png'\r\nimport TheStringless from './Weapon_The_Stringless.png'\r\nimport AlleyHunter from './Weapon_Alley_Hunter.png'\r\nimport BlackcliffWarbow from './Weapon_Blackcliff_Warbow.png'\r\nimport CompoundBow from './Weapon_Compound_Bow.png'\r\nimport FavoniusWarbow from './Weapon_Favonius_Warbow.png'\r\nimport PrototypeCrescent from './Weapon_Prototype_Crescent.png'\r\nimport RoyalBow from './Weapon_Royal_Bow.png'\r\nimport Rust from './Weapon_Rust.png'\r\nimport SacrificialBow from './Weapon_Sacrificial_Bow.png'\r\nimport TheViridescentHunt from './Weapon_The_Viridescent_Hunt.png'\r\nimport SkywardHarp from './Weapon_Skyward_Harp.png'\r\nimport AmosBow from './Weapon_Amos\\'_Bow.png'\r\nimport DreamsOfDragonfell from './dreams_of_dragonfell.png'\r\nconst bows = {\r\n  HuntersBow,\r\n  SeasonedHuntersBow,\r\n  EbonyBow,\r\n  Messenger,\r\n  RavenBow,\r\n  RecurveBow,\r\n  SharpshootersOath,\r\n  Slingshot,\r\n  TheStringless,\r\n  AlleyHunter,\r\n  BlackcliffWarbow,\r\n  CompoundBow,\r\n  FavoniusWarbow,\r\n  PrototypeCrescent,\r\n  RoyalBow,\r\n  Rust,\r\n  SacrificialBow,\r\n  TheViridescentHunt,\r\n  SkywardHarp,\r\n  AmosBow,\r\n  DreamsOfDragonfell,\r\n}\r\nexport default bows","export default __webpack_public_path__ + \"static/media/Weapon_Hunter's_Bow.2e941c96.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Seasoned_Hunter's_Bow.bc6a42aa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ebony_Bow.f89cc3cc.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Messenger.939170eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Raven_Bow.b88fe5c0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Recurve_Bow.bafcde86.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sharpshooter's_Oath.1d149cf5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Slingshot.d2eeb3eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Stringless.b718aa93.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Alley_Hunter.8cc323c2.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Warbow.098f24da.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Compound_Bow.a8457f4e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Warbow.19e98358.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Crescent.50a174b0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Bow.06fbac8b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rust.65b7af56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Bow.804b7a38.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Viridescent_Hunt.904062bf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Harp.6961093e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amos'_Bow.e97cd305.png\";","export default __webpack_public_path__ + \"static/media/dreams_of_dragonfell.8aaebb39.png\";","import ApprenticesNotes from './Weapon_Apprentice\\'s_Notes.png'\r\nimport PocketGrimoire from './Weapon_Pocket_Grimoire.png'\r\nimport AmberCatalyst from './Weapon_Amber_Catalyst.png'\r\nimport EmeraldOrb from './Weapon_Emerald_Orb.png'\r\nimport MagicGuide from './Weapon_Magic_Guide.png'\r\nimport OtherworldlyStory from './Weapon_Otherworldly_Story.png'\r\nimport ThrillingTalesOfDragonSlayers from './Weapon_Thrilling_Tales_of_Dragon_Slayers.png'\r\nimport TwinNephrite from './Weapon_Twin_Nephrite.png'\r\nimport BlackcliffAgate from './Weapon_Blackcliff_Amulet.png'\r\nimport FavoniusCodex from './Weapon_Favonius_Codex.png'\r\nimport MappaMare from './Weapon_Mappa_Mare.png'\r\nimport PrototypeMalice from './Weapon_Prototype_Malice.png'\r\nimport RoyalGrimoire from './Weapon_Royal_Grimoire.png'\r\nimport SacrificialFragments from './Weapon_Sacrificial_Fragments.png'\r\nimport SolarPearl from './Weapon_Solar_Pearl.png'\r\nimport TheWidsith from './Weapon_The_Widsith.png'\r\nimport WineAndSong from './Weapon_Wine_and_Song.png'\r\nimport EyeOfPerception from './Weapon_Eye_of_Perception.png'\r\nimport Frostbearer from './Weapon_Frostbearer.png'\r\nimport LostPrayerToTheSacredWinds from './Weapon_Lost_Prayer_to_the_Sacred_Winds.png'\r\nimport SkywardAtlas from './Weapon_Skyward_Atlas.png'\r\nimport MemoryOfDust from './Weapon_Memory_of_Dust.png'\r\nconst catalysts = {\r\n  ApprenticesNotes,\r\n  PocketGrimoire,\r\n  AmberCatalyst,\r\n  EmeraldOrb,\r\n  MagicGuide,\r\n  OtherworldlyStory,\r\n  ThrillingTalesOfDragonSlayers,\r\n  TwinNephrite,\r\n  BlackcliffAgate,\r\n  FavoniusCodex,\r\n  MappaMare,\r\n  PrototypeMalice,\r\n  RoyalGrimoire,\r\n  SacrificialFragments,\r\n  SolarPearl,\r\n  TheWidsith,\r\n  WineAndSong,\r\n  EyeOfPerception,\r\n  Frostbearer,\r\n  LostPrayerToTheSacredWinds,\r\n  SkywardAtlas,\r\n  MemoryOfDust\r\n}\r\nexport default catalysts","export default __webpack_public_path__ + \"static/media/Weapon_Apprentice's_Notes.0b7fb81e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Pocket_Grimoire.536179c5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amber_Catalyst.01ede681.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Emerald_Orb.4008f986.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Magic_Guide.64c777ec.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Otherworldly_Story.48b54293.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Thrilling_Tales_of_Dragon_Slayers.692d45b8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Twin_Nephrite.b0c2488b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Amulet.b97d01eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Codex.6e201cfa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Mappa_Mare.bc35dc35.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Malice.4ab08cb6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Grimoire.2f67eac4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Fragments.4dd54e2d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Solar_Pearl.d629ae58.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Widsith.a6fe1227.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wine_and_Song.0aa416e6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Eye_of_Perception.907a0288.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Frostbearer.bde00061.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lost_Prayer_to_the_Sacred_Winds.45f8ca2a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Atlas.8b4f86fa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Memory_of_Dust.4e45ccbb.png\";","import weapons from './Weapons/Weapons'\r\n\r\nimport anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  weapons,\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","import swords from './Swords/Swords'\r\nimport claymores from './Claymores/Claymores'\r\nimport polearms from './Polearms//Polearms'\r\nimport bows from './Bows/Bows'\r\nimport catalysts from './Catalysts/Catalysts'\r\nconst weapons = {\r\n  ...swords,\r\n  ...claymores,\r\n  ...polearms,\r\n  ...bows,\r\n  ...catalysts,\r\n}\r\nexport default weapons","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import { AttachLazyFormulas, Formulas, OverrideFormulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nconst formulaKeyDependency = {}\r\nconst getDependency = (key) => {\r\n  let testObj = {}\r\n  let dependency = []\r\n  Object.keys(StatData).filter(k => k !== key).forEach(k => {\r\n    Object.defineProperty(testObj, k, {\r\n      get: () => {\r\n        dependency.push(k)\r\n        Object.defineProperty(testObj, k, { get: () => 0 })\r\n        return 0\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  AttachLazyFormulas(testObj)\r\n  //use the getter to generate the dependency\r\n  if (typeof testObj[key] === \"number\")\r\n    formulaKeyDependency[key] = dependency\r\n}\r\nObject.keys(Formulas).forEach(key => getDependency(key))\r\nconsole.log(formulaKeyDependency)\r\n\r\nfunction DependencyStatKeys(key, formulaOverrides = []) {\r\n  let dependencies = GetDependencyStats(key, formulaOverrides) || []\r\n  //add any formula override dependencies\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key, dependency = [] } = OverrideFormulas[formulaOverride.key] || {}\r\n    if (!dependencies.includes(key)) return\r\n    dependencies.push(...dependency)\r\n  })\r\n  dependencies = [...new Set(dependencies)]\r\n  let formulaKeys = Object.keys(Formulas).filter(k => k === key || dependencies.includes(k))\r\n  let statkeys = Object.keys(StatData).filter(k => k === key || dependencies.includes(k))\r\n  return { formulaKeys, statkeys }\r\n}\r\nfunction GetDependencyStats(key, formulaOverrides = []) {\r\n  let dependencies = [key]\r\n  let keyDependencies = null\r\n  for (const formulaOverride of formulaOverrides)\r\n    if (OverrideFormulas[formulaOverride?.key]?.key === key)\r\n      keyDependencies = OverrideFormulas[formulaOverride?.key]?.dependency\r\n  keyDependencies = keyDependencies || formulaKeyDependency[key]\r\n  keyDependencies?.forEach(k => {\r\n    let subdependencies = GetDependencyStats(k, formulaOverrides)\r\n    dependencies.push(...subdependencies)\r\n  })\r\n  return dependencies\r\n}\r\nexport {\r\n  DependencyStatKeys,\r\n  GetDependencyStats,\r\n}\r\n","import ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //remove the old error/prone id lists, if it still exists\r\n  localStorage.removeItem(\"artifact_id_list\")\r\n  localStorage.removeItem(\"character_id_list\")\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  if (CharacterDatabase.populateDatebaseFromLocalStorage() |\r\n    ArtifactDatabase.populateDatebaseFromLocalStorage()) {\r\n    //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n    let arts = ArtifactDatabase.getArtifactDatabase();\r\n    Object.values(arts).forEach(art => {\r\n      let valid = true\r\n      if (art.location && !CharacterDatabase.getCharacter(art.location)) {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n      if (!valid)\r\n        ArtifactDatabase.updateArtifact(art)\r\n    })\r\n\r\n    let chars = CharacterDatabase.getCharacterDatabase();\r\n    Object.values(chars).forEach(character => {\r\n      let valid = true;\r\n      //verify character database equipment validity\r\n      let equippedArtifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([slotKey, artid]) => {\r\n        if (!ArtifactDatabase.getArtifact(artid)) {\r\n          valid = false\r\n          return [slotKey, undefined]\r\n        }\r\n        return [slotKey, artid]\r\n      }))\r\n      if (!valid)\r\n        character.equippedArtifacts = equippedArtifacts\r\n\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      if (character.artifactConditionals) character.artifactConditionals = character.artifactConditionals.filter(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n      if (!valid) {\r\n        CharacterDatabase.updateCharacter(character)\r\n      }\r\n    })\r\n  }\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport Stat from '../Stat';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nexport default function CharacterCard(props) {\r\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getArtifactDataImport(),\r\n    ]).then(() => forceUpdate())\r\n  }, [])\r\n  let { characterId, onEdit, onDelete } = props\r\n  let character = CharacterDatabase.getCharacter(characterId)\r\n  if (!character) return null;\r\n  let build = Character.calculateBuild(character)\r\n  let { setToSlots } = build\r\n\r\n  let { characterKey, name, weapon, constellation } = character\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponName = Weapon.getWeaponName(weapon.key)\r\n  let weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\r\n  let weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\r\n  let weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const statkeys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\",]\r\n  return (<Card className={props.cardClassName} bg={props.bg ? props.bg : \"darkcontent\"} text=\"lightfont\">\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {props.header ? props.header : <h6><b>{name}</b></h6>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {props.onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {props.onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={onEdit} style={{ cursor: onEdit ? \"pointer\" : \"default\" }}>\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={Character.getThumb(characterKey)} className={`w-100 h-auto grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h4>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h4>\r\n          <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n          <span>{`Lvl. ${Character.getStatValueWithOverride(character, \"char_level\")} C${constellation}`}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {Object.entries(Artifact.getArtifactSetEffects(setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = Artifact.getArtifactSetName(key)\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = build.finalStats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {props.footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        selectedCharacterId: characterId\r\n      }}>\r\n        Generate Builds\r\n        </Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/BuildWorker.818fc711.worker.js\");\n}\n","import Artifact from \"../Artifact/Artifact\";\r\nimport { ArtifactData, ArtifactSlotsData } from \"../Data/ArtifactData\";\r\n\r\nexport default class Build {\r\n\r\n  //works with id indexed object for database.\r\n  static splitArtifactsBySlot(databaseObj) {\r\n    let ret = {}\r\n    for (let slot in ArtifactSlotsData)\r\n      ret[slot] = Object.values(databaseObj).filter(art => art.slotKey === slot)\r\n    return ret;\r\n\r\n  }\r\n  /**\r\n   * Calculate all the possible set configuration based on the filters.\r\n   * [{Key:X,num:2},{key:Y,num:2},{key:\"\",num:0}]\r\n   * generates XXYYO,XYXYO,XXOYY..... combinations, where O means other. \r\n   * @param {Object} setFilters From BuildDisplay\r\n   */\r\n  static generateAllPossibleArtifactSetPerm(setFilters) {\r\n    let sets = setFilters.filter(filter => filter.key).map(filter => filter.key);\r\n    let useOther = setFilters.reduce((accu, filter) => filter.key ? accu + filter.num : accu, 0) < 5;\r\n    if (useOther) sets.push(\"Other\");\r\n\r\n    let perm = [];\r\n    let slotKeys = Artifact.getArtifactSlotKeys();\r\n    //recursion function to loop through everything.\r\n    let slotPerm = (index, accu) => {\r\n      if (index >= slotKeys.length) {\r\n        let numArtsPerSet = {}\r\n        Object.values(accu).forEach(setKey => {\r\n          if (numArtsPerSet[setKey]) numArtsPerSet[setKey] += 1\r\n          else numArtsPerSet[setKey] = 1\r\n        })\r\n        let valid = true\r\n        for (const setFilter of setFilters) {\r\n          if (setFilter.key && (!numArtsPerSet[setFilter.key] || numArtsPerSet[setFilter.key] < setFilter.num)) {\r\n            valid = false;\r\n            break;\r\n          }\r\n        }\r\n        if (valid) perm.push(accu)\r\n        return;\r\n      }\r\n      let slotKey = slotKeys[index];\r\n      sets.forEach(setKey => {\r\n        //see if this set is valid at this piece slot. some artifacts dont have artifacts at specific slots.\r\n        if (setKey === \"Other\" || (Object.keys(ArtifactData[setKey]?.pieces || {}).includes(slotKey))) {\r\n          accu[slotKey] = setKey;\r\n          slotPerm(index + 1, { ...accu })\r\n        }\r\n      });\r\n    }\r\n    slotPerm(0, {});\r\n    return perm\r\n  }\r\n  static calculateTotalBuildNumber(splitArtifacts, setPerms, setFilters) {\r\n    let setsInFilter = setFilters.filter(filter => filter.key).map(filter => filter.key)\r\n    let splitNumArtsPerSet = {}\r\n    //count the number of arts in setfilter for each slot\r\n    Object.entries(splitArtifacts).forEach(([key, artArr]) => {\r\n      let numArtsPerSet = {}\r\n      artArr.forEach(art => {\r\n        if (setsInFilter.includes(art.setKey))\r\n          numArtsPerSet[art.setKey] = (numArtsPerSet[art.setKey] || 0) + 1\r\n        else\r\n          numArtsPerSet[\"Other\"] = (numArtsPerSet[\"Other\"] || 0) + 1\r\n      })\r\n      splitNumArtsPerSet[key] = numArtsPerSet\r\n    })\r\n    //calculate!\r\n    return setPerms.reduce((accu, setPerm) =>\r\n      accu + Object.entries(setPerm).reduce((permaccu, [key, setKey]) =>\r\n        (splitNumArtsPerSet[key] && splitNumArtsPerSet[key][setKey]) ? permaccu * splitNumArtsPerSet[key][setKey] : 0\r\n        , 1)\r\n      , 0)\r\n  }\r\n}","import { faCheckSquare, faSortAmountDownAlt, faSortAmountUp, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy } from 'react';\r\nimport { Alert, Badge, Button, ButtonGroup, Card, Col, Container, Dropdown, DropdownButton, ListGroup, Modal, Row } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\n// eslint-disable-next-line\r\nimport Worker from \"worker-loader!./BuildWorker.js\";\r\nimport Artifact from '../Artifact/Artifact';\r\nimport ArtifactDatabase from '../Artifact/ArtifactDatabase';\r\nimport Character from '../Character/Character';\r\nimport CharacterCard from '../Character/CharacterCard';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport ConditionalSelector from '../Components/ConditionalSelector';\r\nimport { ArtifactSlotsData } from '../Data/ArtifactData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport Stat from '../Stat';\r\nimport { DependencyStatKeys } from '../StatDependency';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { deepClone, loadFromLocalStorage, saveToLocalStorage } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Build from './Build';\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCardPromise = import('../Character/CharacterDisplayCard');\r\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\r\n\r\nexport default class BuildDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = BuildDisplay.getInitialState();\r\n    if (props.location.selectedCharacterId) {\r\n      this.state = BuildDisplay.getInitialState();\r\n      props.location.selectedCharacterId && (this.state.selectedCharacterId = props.location.selectedCharacterId)\r\n    } else {\r\n      let savedState = loadFromLocalStorage(\"BuildsDisplay.state\")\r\n      if (savedState) {\r\n        let character = CharacterDatabase.getCharacter(savedState.selectedCharacterId)\r\n        if (savedState && character) this.state = savedState\r\n      }\r\n    }\r\n    ReactGA.pageview('/build')\r\n  }\r\n  static initialState = {\r\n    builds: [],\r\n    generatingBuilds: false,\r\n    selectedCharacterId: \"\",\r\n    setFilters: [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }],\r\n    artifactConditionals: [],//{ setKey: \"\", setNumKey: \"\", conditionalNum: 0 }\r\n    mainStat: [\"\", \"\", \"\"],\r\n    buildFilterKey: \"atk_final\",\r\n    artifactsAssumeFull: false,\r\n    asending: false,\r\n    modalBuild: null,\r\n    editCharacter: false,\r\n    maxBuildsToShow: 100,\r\n    maxBuildsToGenerate: 500000\r\n  }\r\n  static maxBuildsToShowList = [100, 50, 25, 5]\r\n  static maxBuildsToGenerateList = [500000, 100000, 50000, 10000, 5000, 1000]\r\n  static getInitialState = () => deepClone(BuildDisplay.initialState)\r\n  static artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"]\r\n  forceUpdateBuildDisplay = () => this.forceUpdate()\r\n\r\n  splitArtifacts = () => {\r\n    if (!this.state.selectedCharacterId) return {};\r\n    let artifactDatabase = ArtifactDatabase.getArtifactDatabase();\r\n    //do not use artifacts that are locked.\r\n    Object.entries(artifactDatabase).forEach(([key, val]) => {\r\n      if (val.lock) delete artifactDatabase[key]\r\n      if (this.state.selectedCharacterId && val.location && val.location !== this.state.selectedCharacterId)\r\n        delete artifactDatabase[key]\r\n    })\r\n    if (this.state.setFilters.every(filter => filter.key)) {\r\n      let filterKeys = this.state.setFilters.map(filter => filter.key)\r\n      //filter database to only filtered artifacts, if all 3 sets are specified\r\n      Object.entries(artifactDatabase).forEach(([key, val]) => {\r\n        if (filterKeys.includes(val.setKey))\r\n          delete artifactDatabase[key]\r\n      })\r\n    }\r\n    let split = Build.splitArtifactsBySlot(artifactDatabase);\r\n    //filter the split slots on the mainstats selected.\r\n    BuildDisplay.artifactsSlotsToSelectMainStats.forEach((slotKey, index) =>\r\n      this.state.mainStat[index] && (split[slotKey] = split[slotKey].filter((art) => art.mainStatKey === this.state.mainStat[index])))\r\n    return split\r\n  }\r\n  changeMainStat = (index, mainStatKey) => {\r\n    this.setState(state => {\r\n      let mainStat = state.mainStat;\r\n      mainStat[index] = mainStatKey;\r\n      return { mainStat }\r\n    }, this.autoGenerateBuilds)\r\n  }\r\n  changeSetFilterKey = (index, newkey, setsNumArr) => this.setState(state => {\r\n    let oldKey = state.setFilters[index].key\r\n    if (oldKey === newkey) return\r\n    //remove conditionals with that key\r\n    let artifactConditionals = state.artifactConditionals?.filter?.(artifactCond => artifactCond.srcKey !== oldKey) || []\r\n    let setFilters = state.setFilters;\r\n    let num = 0\r\n    //automatically select the 1st element from setsNumArr\r\n    if (setsNumArr && setsNumArr[0])\r\n      num = parseInt(setsNumArr[0])\r\n    setFilters[index] = { key: newkey, num }\r\n    return { setFilters, artifactConditionals }\r\n  }, this.autoGenerateBuilds)\r\n\r\n  dropdownitemsForStar = (star, index) =>\r\n    Artifact.getArtifactSetsByMaxStarEntries(star).map(([setKey, setobj]) => {\r\n      if (this.state.setFilters.some(filter => filter.key === setKey)) return false;\r\n      let setsNumArr = Object.keys(Artifact.getArtifactSets(setKey))\r\n      let artsAccountedOther = this.state.setFilters.reduce((accu, cur, ind) => (cur.key && ind !== index) ? accu + cur.num : accu, 0)\r\n      if (setsNumArr.every(num => parseInt(num) + artsAccountedOther > 5)) return false;\r\n      return (<Dropdown.Item key={setKey}\r\n        onClick={() => this.changeSetFilterKey(index, setKey, setsNumArr)}\r\n      >\r\n        {setobj.name}\r\n      </Dropdown.Item>)\r\n    })\r\n  autoGenerateBuilds = () => typeof this.totBuildNumber === \"number\" && this.totBuildNumber <= this.state.maxBuildsToShow && this.generateBuilds()\r\n\r\n  generateBuilds = () => {\r\n    let { split, artifactSetPerms, totBuildNumber } = this\r\n    if (!totBuildNumber) return this.setState({ builds: [] })\r\n    this.setState({ generatingBuilds: true })\r\n    let { setFilters, asending, buildFilterKey, maxBuildsToShow, artifactConditionals, artifactsAssumeFull } = this.state\r\n    let character = CharacterDatabase.getCharacter(this.state.selectedCharacterId)\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    initialStats.artifactsAssumeFull = artifactsAssumeFull\r\n\r\n    let artifactSetEffects = Artifact.getAllArtifactSetEffectsObj(artifactConditionals)\r\n    let splitArtifacts = deepClone(split)\r\n    //add mainStatVal to each artifact\r\n    Object.values(splitArtifacts).forEach(artArr => {\r\n      artArr.forEach(art => {\r\n        art.mainStatVal = Artifact.getMainStatValue(art.mainStatKey, art.numStars, artifactsAssumeFull ? art.numStars * 4 : art.level);\r\n      })\r\n    })\r\n    //generate the key dependencies for the formula\r\n    let depdendencyStatKeys = DependencyStatKeys(buildFilterKey, initialStats.formulaOverrides)\r\n\r\n    //create an obj with app the artifact set effects to pass to buildworker.\r\n    let data = {\r\n      splitArtifacts, artifactSetPerms, initialStats, artifactSetEffects, depdendencyStatKeys,\r\n      setFilters, maxBuildsToShow, buildFilterKey, asending,\r\n    }\r\n    if (this.worker) this.worker.terminate()\r\n    this.worker = new Worker();\r\n    this.worker.onmessage = (e) => {\r\n      ReactGA.timing({\r\n        category: \"Build Generation\",\r\n        variable: \"timing\",\r\n        value: e.data.timing,\r\n        label: Build.calculateTotalBuildNumber(split, artifactSetPerms, this.state.setFilters)\r\n      })\r\n      let builds = e.data.builds.map(obj =>\r\n        Character.calculateBuildWithObjs(artifactConditionals, initialStats, obj.artifacts))\r\n      console.log(builds.map(build => build?.finalStats?.[this.state.buildFilterKey]))\r\n      this.setState({ builds, generatingBuilds: false })\r\n      // worker.terminate()\r\n      this.worker.terminate()\r\n      delete this.worker\r\n    }\r\n\r\n    this.worker.postMessage(data)\r\n  }\r\n\r\n  BuildGeneratorEditorCard = (props) => {\r\n    let { setFilters, selectedCharacterId, artifactsAssumeFull } = this.state\r\n    let { statsDisplayKeys } = props\r\n    let charlist = CharacterDatabase.getCharacterDatabase();\r\n    let selectedCharacter = CharacterDatabase.getCharacter(selectedCharacterId)\r\n    let characterName = selectedCharacter ? selectedCharacter.name : \"Character Name\"\r\n    let artsAccounted = setFilters.reduce((accu, cur) => cur.key ? accu + cur.num : accu, 0)\r\n    //these variables are used for build generator.\r\n    this.split = this.splitArtifacts();\r\n    this.artifactSetPerms = Build.generateAllPossibleArtifactSetPerm(setFilters)\r\n    this.totBuildNumber = Build.calculateTotalBuildNumber(this.split, this.artifactSetPerms, setFilters)\r\n    let { totBuildNumber } = this\r\n\r\n    let buildAlert = totBuildNumber === 0 ?\r\n      <Alert variant=\"warning\" className=\"mb-0\"><span>Current configuration will not generate any builds for <b>{characterName}</b>. Please change your Artifact configurations, or add/unlock more Artifacts.</span></Alert>\r\n      : (totBuildNumber > this.state.maxBuildsToGenerate ?\r\n        <Alert variant=\"danger\" className=\"mb-0\"><span>Current configuration will generate <b>{totBuildNumber}</b> builds for <b>{characterName}</b>. Please restrict artifact configuration to reduce builds to less than {this.state.maxBuildsToGenerate}, or your browser might crash.</span></Alert> :\r\n        <Alert variant=\"success\" className=\"mb-0\"><span>Current configuration {totBuildNumber <= this.state.maxBuildsToShow ? \"generated\" : \"will generate\"} <b>{totBuildNumber}</b> builds for <b>{characterName}</b>.</span></Alert>)\r\n    let characterDropDown = <DropdownButton title={selectedCharacterId ? characterName : \"Select Character\"}>\r\n      <Dropdown.Item onClick={() => this.setState({ selectedCharacterId: \"\", builds: [], buildFilterKey: \"atk_final\" })}>No Character</Dropdown.Item>\r\n      {Object.values(charlist).map((char, i) =>\r\n        <Dropdown.Item key={char.name + i}\r\n          onClick={() => this.setState({ selectedCharacterId: char.id, builds: [], buildFilterKey: \"atk_final\" })}\r\n        >\r\n          {char.name}\r\n        </Dropdown.Item>)}\r\n    </DropdownButton>\r\n    const toggleArtifactsAssumeFull = () => this.setState(state => ({ artifactsAssumeFull: !state.artifactsAssumeFull }), this.autoGenerateBuilds)\r\n    return <Card bg=\"darkcontent\" text=\"lightfont\">\r\n      <Card.Header>Build Generator</Card.Header>\r\n      <Card.Body>\r\n        <Row >\r\n          <Col xs={12} lg={6} className=\"mb-2\">\r\n            {/* character selection */}\r\n            {selectedCharacterId ?\r\n              <CharacterCard header={characterDropDown} characterId={selectedCharacterId} bg={\"lightcontent\"} footer={false} cardClassName=\"mb-2\" onEdit={() => this.setState({ editCharacter: true })} /> :\r\n              <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                <Card.Header>\r\n                  {characterDropDown}\r\n                </Card.Header>\r\n              </Card>}\r\n            {/* main stat selector */}\r\n            <Card bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>\r\n                <span>Artifact Main Stat</span>\r\n                <Button className=\"float-right text-right\" variant={artifactsAssumeFull ? \"orange\" : \"primary\"} onClick={toggleArtifactsAssumeFull}><FontAwesomeIcon icon={artifactsAssumeFull ? faCheckSquare : faSquare} className=\"fa-fw\" /> Assume Fully Leveled</Button>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                {BuildDisplay.artifactsSlotsToSelectMainStats.map((slotKey, index) =>\r\n                (<div className=\"text-inline mb-1 d-flex justify-content-between\" key={slotKey}>\r\n                  <h6 className=\"d-inline mr-2\">\r\n                    {Artifact.getArtifactSlotNameWithIcon(slotKey)}\r\n                  </h6>\r\n                  <DropdownButton\r\n                    title={this.state.mainStat[index] ? Stat.getStatNameWithPercent(this.state.mainStat[index]) : \"Select a mainstat\"}\r\n                    className=\"d-inline\">\r\n                    <Dropdown.Item onClick={() => this.changeMainStat(index, \"\")} >No MainStat</Dropdown.Item>\r\n                    {ArtifactSlotsData[slotKey].stats.map(mainStatKey =>\r\n                      <Dropdown.Item onClick={() => this.changeMainStat(index, mainStatKey)} key={mainStatKey}>\r\n                        {Stat.getStatNameWithPercent(mainStatKey)}\r\n                      </Dropdown.Item>\r\n                    )}\r\n                  </DropdownButton>\r\n                </div>))}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col xs={12} lg={6} className=\"mb-2\"><Row>\r\n            {/* Artifact set picker */}\r\n            {setFilters.map((setFilter, index) => {\r\n              let { key: setKey, num } = setFilter\r\n              let { artifactConditionals } = this.state\r\n              return (<Col className=\"mb-2\" key={index} xs={12}>\r\n                <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n                  <Card.Header>\r\n                    <ButtonGroup>\r\n                      {/* Artifact set */}\r\n                      <DropdownButton as={ButtonGroup} title={Artifact.getArtifactSetName(setFilter.key, \"Set (Optional)\")} >\r\n                        <Dropdown.Item onClick={() => this.changeSetFilterKey(index, \"\")}>Unselect Artifact</Dropdown.Item>\r\n                        <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊🟊</Dropdown.ItemText>\r\n                        {this.dropdownitemsForStar(5, index)}\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊</Dropdown.ItemText>\r\n                        {this.dropdownitemsForStar(4, index)}\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.ItemText>Max Rarity 🟊🟊🟊</Dropdown.ItemText>\r\n                        {this.dropdownitemsForStar(3, index)}\r\n                      </DropdownButton>\r\n                      {/* set number */}\r\n                      <DropdownButton as={ButtonGroup} title={`${setFilter.num}-set`}\r\n                        disabled={!setFilter.key || artsAccounted >= 5}\r\n                      >\r\n                        {setFilter.key && Artifact.getArtifactSetEffectsObj(setFilter.key) && Object.keys(Artifact.getArtifactSetEffectsObj(setFilter.key)).map(num => {\r\n                          let artsAccountedOther = setFilters.reduce((accu, cur) => (cur.key && cur.key !== setFilter.key) ? accu + cur.num : accu, 0)\r\n                          return (parseInt(num) + artsAccountedOther <= 5) &&\r\n                            (<Dropdown.Item key={num}\r\n                              onClick={() => this.setState((state) => {\r\n                                let setFilters = state.setFilters;\r\n                                setFilters[index].num = parseInt(num)\r\n                                return { setFilters }\r\n                              }, this.autoGenerateBuilds)}\r\n                            >\r\n                              {`${num}-set`}\r\n                            </Dropdown.Item>)\r\n                        })}\r\n                      </DropdownButton>\r\n                    </ButtonGroup>\r\n                  </Card.Header>\r\n                  {setKey ? <Card.Body><Row>\r\n                    {Object.keys(Artifact.getArtifactSets(setKey, {})).filter(setNkey => parseInt(setNkey) <= num).map(setNumKey => {\r\n                      let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                      let conditionalNum = 0;\r\n                      let conditional = Artifact.getArtifactSetEffectConditional(setKey, setNumKey)\r\n                      if (conditional) {\r\n                        conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                        let conditionalStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n                        if (conditionalStats) {\r\n                          if (!setStats) setStats = {}\r\n                          Object.entries(conditionalStats).forEach(([statKey, val]) =>\r\n                            setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                        }\r\n                      }\r\n                      let setStateArtifactConditional = (conditionalNum) => this.setState(state =>\r\n                        ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }), this.autoGenerateBuilds)\r\n                      let conditionalElement = <ConditionalSelector\r\n                        conditional={conditional}\r\n                        conditionalNum={conditionalNum}\r\n                        setConditional={setStateArtifactConditional}\r\n                        defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                      />\r\n                      return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                        <h6>{conditionalElement} {Artifact.getArtifactSetEffectText(setKey, setNumKey)}</h6>\r\n                        {setStats ? <Row>\r\n                          {Object.entries(setStats).map(([statKey, val]) =>\r\n                            <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                        </Row> : null}\r\n                      </Col>\r\n                    })}\r\n                  </Row></Card.Body> : null}\r\n                </Card>\r\n              </Col>)\r\n            })}\r\n          </Row></Col>\r\n        </Row>\r\n        <Row className=\"mb-2\">\r\n          <Col>{selectedCharacterId && buildAlert}</Col>\r\n        </Row>\r\n        <Row className=\"d-flex justify-content-between\">\r\n          <Col xs=\"auto\" >\r\n            <Button\r\n              className=\"h-100\"\r\n              disabled={!selectedCharacterId || totBuildNumber > this.state.maxBuildsToGenerate || this.state.generatingBuilds}\r\n              variant={(selectedCharacterId && totBuildNumber <= this.state.maxBuildsToGenerate) ? \"success\" : \"danger\"}\r\n              onClick={this.generateBuilds}\r\n            ><span>Generate Builds</span></Button>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {/* Dropdown to select sorting value */}\r\n            <ButtonGroup>\r\n              <DropdownButton disabled={!selectedCharacterId} title={<span>Sort by <b>{Stat.getStatNameWithPercent(this.state.buildFilterKey)}</b></span>} as={ButtonGroup}>\r\n                {selectedCharacterId && statsDisplayKeys.map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => this.setState({ buildFilterKey: key }, this.autoGenerateBuilds)}>\r\n                    {Stat.getStatNameWithPercent(key)}\r\n                  </Dropdown.Item>\r\n                )}\r\n              </DropdownButton>\r\n              <Button onClick={() => this.setState(state => ({ asending: !state.asending }), this.autoGenerateBuilds)}>\r\n                <FontAwesomeIcon icon={this.state.asending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  }\r\n  ArtifactDisplayItem = (props) => {\r\n    let { build, statsDisplayKeys } = props\r\n    return (<div>\r\n      <ListGroup.Item\r\n        variant={props.index % 2 ? \"customdark\" : \"customdarker\"} className=\"text-white\" action\r\n        onClick={() => this.setState({ modalBuild: build })}\r\n      >\r\n        <Row>\r\n          <Col>{Object.entries(build.setToSlots).sort(([key1, slotarr1], [key2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\r\n            <Badge key={key} variant=\"primary\" className=\"mr-2\">\r\n              {slotarr.map(slotKey => Artifact.getArtifactSlotIcon(slotKey))} {Artifact.getArtifactSetName(key)}\r\n            </Badge>\r\n          )}</Col>\r\n        </Row>\r\n        <Row>\r\n          {statsDisplayKeys.map(key =>\r\n            <Col className=\"text-nowrap\" key={key} xs={12} sm={6} lg={4}>\r\n              <span>{Stat.getStatName(key)}: <span className=\"text-warning\">{build.finalStats[key]?.toFixed?.(Stat.fixedUnit(key)) || build.finalStats[key]}{Stat.getStatUnit(key)}</span></span>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </ListGroup.Item>\r\n    </div>)\r\n  }\r\n  closeModal = () => this.setState({ modalBuild: null, editCharacter: false })\r\n  BuildModal = (props) => {\r\n    let { build, characterid } = props\r\n    let { editCharacter } = this.state\r\n    return <Modal show={Boolean(editCharacter || build)} onHide={this.closeModal} size=\"xl\" contentClassName=\"bg-transparent\">\r\n      <React.Suspense fallback={<span>Loading...</span>}>\r\n        <CharacterDisplayCard characterId={characterid} newBuild={build}\r\n          onClose={this.closeModal}\r\n          forceUpdate={this.forceUpdateBuildDisplay}\r\n          editable={editCharacter}\r\n          footer={<Button variant=\"danger\" onClick={this.closeModal}>Close</Button>} />\r\n      </React.Suspense>\r\n    </Modal>\r\n  }\r\n\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getArtifactDataImport()\r\n    ]).then(() => {\r\n      this.forceUpdate()\r\n      //try to generate a build at the beginning after mount.\r\n      this.autoGenerateBuilds()\r\n    })\r\n  }\r\n  componentDidUpdate() {\r\n    let state = deepClone(this.state)\r\n    state.builds = [];\r\n    delete state.generatingBuilds\r\n    delete state.modalBuild\r\n    delete state.editCharacter\r\n    saveToLocalStorage(\"BuildsDisplay.state\", state)\r\n  }\r\n  componentWillUnmount() {\r\n    this.worker?.terminate()\r\n    delete this.worker\r\n  }\r\n  render() {\r\n    let { selectedCharacterId, modalBuild, maxBuildsToShow, builds = [] } = this.state\r\n    let selectedCharacter = CharacterDatabase.getCharacter(selectedCharacterId)\r\n    let characterKey = selectedCharacter?.characterKey\r\n    let characterName = Character.getName(characterKey, \"Character Name\")\r\n    let statsDisplayKeys = Character.getDisplayStatKeys(characterKey)\r\n    return (<Container>\r\n      <this.BuildModal build={modalBuild} characterid={selectedCharacterId} />\r\n      <Row className=\"mt-2 mb-2\">\r\n        <Col>\r\n          {/* Build Generator Editor */}\r\n          <this.BuildGeneratorEditorCard statsDisplayKeys={statsDisplayKeys} />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <Card bg=\"darkcontent\" text=\"lightfont\">\r\n            <Card.Header>{selectedCharacterId ? `Showing ${builds.length} Builds generated for ${characterName}` : \"Select a character to generate builds.\"}</Card.Header>\r\n            {/* Build List */}\r\n            <ListGroup>\r\n              {builds.map((build, index) =>\r\n                (index < maxBuildsToShow) && <this.ArtifactDisplayItem build={build} character={selectedCharacter} index={index} key={Object.values(build.artifactIds).join(\"_\")} statsDisplayKeys={statsDisplayKeys} />\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>)\r\n  }\r\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { AttachLazyFormulas, ElementToReactionKeys } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getCDataObj(charKey)?.talent?.[talentKey]?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getCDataObj(charKey)?.talent?.[talentKey]?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getCDataObj(charKey)?.talent?.[talentKey]?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"formulaOverrides\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_base\") || false\r\n    return character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getArtifactSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals, initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals && artifactConditionals.forEach(conditional => {\r\n      let { srcKey: setKey, srcKey2: setNumKey } = conditional\r\n      let condStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditional.conditionalNum)\r\n      if (condStats) Object.entries(condStats).forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n    AttachLazyFormulas(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"formulaOverrides\") {\r\n        initialStats.formulaOverrides = [...(initialStats.formulaOverrides || []), ...val]\r\n        return\r\n      }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, OverrideFormulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static printFormula = (statKey, stats, formulaOverrides = [], expand = true) => {\r\n    for (const formulaOverride of formulaOverrides)\r\n      if (OverrideFormulas[formulaOverride?.key]?.key === statKey)\r\n        return Stat.printOverrideFormula(stats, formulaOverride.key, formulaOverride.options, false)\r\n    return FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n      (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n  }\r\n\r\n  static printOverrideFormula = (stats, overrideKey, options, expand = true) =>\r\n    OverrideFormulasText?.[overrideKey] && typeof OverrideFormulasText?.[overrideKey].formulaText === \"function\" &&\r\n    (<span>{OverrideFormulasText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  trans_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(0, \"ele_mas\")} * exp^(-0.000505 * {f(0, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulasText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.value}%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getArtifactDataImport = () => ArtifactDataImport\r\n  static getArtifactSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getArtifactSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData).filter(([key, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getArtifactPieceName = (setKey, slotKey, defVal = \"\") => ArtifactData?.[setKey]?.pieces?.[slotKey] || defVal;\r\n  static getArtifactPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n  static getArtifactSetEffectsObj = (setKey, defVal = null) => ArtifactData?.[setKey]?.sets || defVal\r\n  //SLOT\r\n  static getArtifactSlotKeys = () => Object.keys(ArtifactSlotsData)\r\n  static getArtifactSlotName = (slotKey, defVal = \"\") =>\r\n    ArtifactSlotsData[slotKey] ? ArtifactSlotsData[slotKey].name : defVal\r\n  static getArtifactSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n\r\n  static getArtifactSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getArtifactSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getArtifactSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n\r\n  //STARS\r\n  static getRarityArr = (setKey) => ArtifactData[setKey] ? ArtifactData[setKey].rarity : []\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => ArtifactMainSlotKeys\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = ArtifactMainStatsData[numStars]?.[key]?.[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData)\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getRolls(value, rollData, float = false) {\r\n    let roll = null;\r\n    let maxNumRoll = Math.round(value / rollData[0])\r\n    if (!maxNumRoll) return null;\r\n    let rollOption = (val, arr) => {\r\n      if (roll) return;\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (float) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val)) {\r\n            roll = arr;\r\n            return;\r\n          }\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val)) {\r\n            roll = arr;\r\n            return\r\n          }\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        rollOption(value, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(value, [])\r\n    return roll;\r\n  }\r\n  static validateSubStat(state, substat) {\r\n    if (!substat || !substat.value) return { valid: true }\r\n    let value = parseFloat(substat.value);\r\n    if (isNaN(value)) return { valid: false, msg: `Invalid Input` }\r\n    let numStars = state.numStars\r\n    if (!numStars) return { valid: false, msg: `Artifact Stars not set.` }\r\n    let isFloat = Stat.getStatUnit(substat.key) === \"%\"\r\n    let rollData = this.getSubstatRollData(substat.key, numStars);\r\n    let rolls = this.getRolls(value, rollData, isFloat)\r\n\r\n    if (!rolls || rolls.length === 0) return { valid: false, msg: `Substat cannot be rolled 0 times.` };\r\n    let totalAllowableRolls = ArtifactStarsData[numStars]?.numUpgradesOrUnlocks - (4 - ArtifactStarsData[numStars]?.subBaseHigh) + 1;//+1 for its base roll\r\n    if (rolls.length > totalAllowableRolls) return { valid: false, msg: `Substat cannot be rolled more than ${totalAllowableRolls} times.` };\r\n\r\n    let min = rollData[0] * rolls.length;\r\n    let max = rollData[rollData.length - 1] * rolls.length;\r\n    return { valid: true, efficiency: clampPercent(((value - min) / (max - min)) * 100), msg: `This substat was rolled ${rolls.length} time(s). Values: [${rolls.join(\", \")}]`, rolls }\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static artifactValidation(state) {\r\n    let currentEfficiency = 0, maximumEfficiency = 0;\r\n    let subStatValidations = state.substats.map(substat => Artifact.validateSubStat(state, substat));\r\n    for (const substat of subStatValidations)\r\n      if (!substat.valid)\r\n        return { subStatValidations, valid: false, msg: \"One of the substat is invalid.\", currentEfficiency, maximumEfficiency }\r\n\r\n    //if a substat has >=2 rolls, when not all of them have been unlocked//if a substat has >=2 rolls, when not all of them have been unlocked\r\n    if (subStatValidations.some(substat => substat?.rolls?.length > 1) && subStatValidations.some((substat) => !substat.rolls))\r\n      return { subStatValidations, valid: false, msg: \"One of the substat have >1 rolls, but not all substats are unlocked.\", currentEfficiency, maximumEfficiency }\r\n    let currentNumOfRolls = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls ? cur.rolls.length : 0), 0);\r\n    let rollsRemaining = Artifact.rollsRemaining(state.level, state.numStars);\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(state.numStars);\r\n\r\n    if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n      return { subStatValidations, valid: false, msg: `Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `, currentEfficiency, maximumEfficiency }\r\n\r\n    let totalCurrentEfficiency = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls && cur.efficiency ? (cur.efficiency * cur.rolls.length) : 0), 0);\r\n    currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { valid: true, subStatValidations, currentNumOfRolls, rollsRemaining, totalPossbleUpgrade: totalPossbleRolls, currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getArtifactSets = (setKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = null) =>\r\n    deepClone(this.getArtifactSets(setKey)?.[setNumKey]?.stats || defVal)\r\n\r\n  static getArtifactConditionalStats = (setKey, setNumKey, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getArtifactSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      ArtifactData?.[setKey]?.sets && Object.entries(ArtifactData[setKey].sets).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getArtifactSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      if (ArtifactData?.[setKey]?.sets) {\r\n        let setNumKeys = Object.keys(ArtifactData[setKey].sets).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n        if (setNumKeys.length)\r\n          artifactSetEffect[setKey] = setNumKeys\r\n      }\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getArtifactSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = ArtifactData?.[setKey]?.sets?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getArtifactSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets?.[setNumKey]?.conditional || defVal\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      let hasSetEffect = false\r\n      if (setObj.sets)\r\n        Object.entries(setObj.sets).forEach(([setNumKey, setEffectObj]) => {\r\n          if (setEffectObj.stats && Object.keys(setEffectObj.stats).length > 0) {\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n            hasSetEffect = true\r\n          }\r\n          if (setEffectObj.conditional) {\r\n            let conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n            if (conditionalNum) {\r\n              let condStats = this.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n              if (condStats) {\r\n                setEffect[setNumKey] = deepClone(condStats)\r\n                hasSetEffect = true\r\n              }\r\n            }\r\n          }\r\n        })\r\n      if (hasSetEffect)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => id ? artifactDatabase[id] : null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null) \r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  all_dmg_bonus: { name: \"All DMG Bonus\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elementry Mastry Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elementry Mastry Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elementry Mastry Multiplier Z\", unit: \"multi\" },\r\n  trans_reaction_base_multi: { name: \"Transformation Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_final: (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.phy_dmg,\r\n  plunge_crit_dmg: (s) => s.phy_crit_dmg,\r\n  plunge_avg_dmg: (s) => s.phy_avg_dmg,\r\n  plunge_bonus_multi: (s) => s.phy_bonus_multi,\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * s.ele_mas_multi_x * 1.5 * s.trans_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * s.ele_mas_multi_x * 2 * s.trans_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * s.ele_mas_multi_x * 2 * s.trans_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * s.ele_mas_multi_x * 1.5 * s.trans_reaction_base_multi,\r\n  trans_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s[`${ele}_ele_dmg`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_ele_crit_dmg`],\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_ele_avg_dmg`],\r\n  plunge_bonus_multi: (s, ele) => s[`${ele}_ele_bonus_multi`],\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.all_dmg_bonus) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\nconsole.log(StatData)\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulas = {\r\n  noelle_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk + s.def_final * (options.value / 100),\r\n    dependency: [\"atk_base\", \"atk_weapon\", \"atk_\", \"atk\", \"def_final\", \"def_base\", \"def_\", \"def\"],\r\n  }\r\n}\r\n\r\n//the keyfilters are used by build generator to reduce the amount of calculations required\r\nfunction AttachLazyFormulas(obj, options = {}) {\r\n  let { formulaKeys = Object.keys(Formulas), statKeys = Object.keys(StatData) } = options;\r\n  let { formulaOverrides = [] } = obj;\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key: overrideFormulaKey, options } = formulaOverride\r\n    let { key, formula } = OverrideFormulas[overrideFormulaKey] || {}\r\n    if (!formulaKeys.includes(key)) return\r\n    formula = formula(options)\r\n    Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => formula(obj) : function () {\r\n        let val = formula(obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n\r\n  formulaKeys.forEach(key => {\r\n    !obj.hasOwnProperty(key) && Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => Formulas[key](obj) : function () {\r\n        let val = Formulas[key](obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  //assign zeros or default values to the other stats that are not part of the calculations\r\n  statKeys.forEach(key => !obj.hasOwnProperty(key) && (obj[key] = StatData[key].default || 0))\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  OverrideFormulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  AttachLazyFormulas,\r\n}"],"sourceRoot":""}