{"version":3,"sources":["Components/StatIcon.js","Components/ConditionalSelector.js","Character/CharacterCard.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","Character/CharacterDisplay/CharacterArtifactPane.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js"],"names":["StatIcon","hp","faTint","hp_","atk","faFistRaised","atk_","def","faShieldAlt","def_","ele_mas","faMagic","crit_rate","faDice","crit_dmg","faDiceD20","ener_rech","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","icon","className","ConditionalSelector","props","conditional","conditionalNum","setConditional","defEle","disabled","Array","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","map","condial","Fragment","keys","v","stack","tempcount","faCheckSquare","faSquare","CharacterCard","characterId","character","CharacterDatabase","getCharacter","build","Character","calculateBuild","setToSlots","characterKey","name","weapon","constellation","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","weaponName","Weapon","getWeaponName","key","weaponMainVal","getWeaponMainStatValWithOverride","weaponSubKey","getWeaponSubStatKey","weaponSubVal","getWeaponSubStatValWithOverride","weaponLevelName","getLevelName","levelKey","weaponPassiveName","getWeaponPassiveName","cardClassName","bg","Header","header","xs","onEdit","faEdit","onDelete","faTrashAlt","Body","src","getThumb","rounded","getName","Assets","elements","weaponTypes","stars","getStar","colored","getLevelWithOverride","refineIndex","Stat","getStatName","getStatUnit","Object","entries","Artifact","getArtifactSetEffects","arr","artifactSetName","getArtifactSetName","highestNum","Math","max","unit","statVal","finalStats","toFixed","fixedUnit","footer","Footer","as","Link","to","pathname","selectedCharacterId","TabContainer","_useUncontrolled","useUncontrolled","activeKey","id","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","children","useMemo","type","tabContext","getControlledId","getControllerId","React","createElement","TabContext","Provider","value","SelectableContext","TabContent","forwardRef","_ref","ref","bsPrefix","_ref$as","Component","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","_extends","classNames","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","in","displayName","Tab","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","Error","Container","Content","Pane","createContext","AccordionToggle","accordionOnClick","contextEventKey","AccordionContext","e","useAccordionToggle","AccordionCollapse","Collapse","Children","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","CharacterArtifactPane","useState","showOther","setShowOther","compareAgainstEquipped","artifactConditionals","equippedBuild","newBuild","editable","forceUpdate","setState","eleKey","statKeys","push","otherStatKeys","getElementalKeys","forEach","ele","filter","includes","displayStats","getStatValueWithOverride","buildDiff","Col","md","lg","hasOverride","displayNewBuildDiff","Row","Card","Button","equipArtifacts","artifactIds","sm","setKey","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getArtifactSetEffectConditional","ArtifactConditionals","getConditionalNum","conditionalStats","getArtifactConditionalStats","val","conditionalElement","cnum","state","setStateArtifactConditional","Badge","getArtifactSetEffectText","values","artid","ArtifactCard","artifactId","_objectWithoutProperties","source","excluded","i","target","sourceKeys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","StatInput","placeholder","defaultValue","onValueChange","percent","restProps","InputGroup","Prepend","Text","Append","undefined","OverlayTrigger","placement","overlay","Tooltip","style","pointerEvents","faUndo","CharacterOverviewPane","setOverridelevel","setConstellation","editLevel","setEditLevel","level","Img","getCard","Image","faSave","getConstellationName","characters","con","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCard","editing","SetEditing","showDescription","setShowDescription","setStateWeapon","subStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponBonusStats","getWeaponBonusStat","getWeaponConditionalStat","getWeaponConditional","conditionalEle","faQuoteLeft","weapons","thumbnail","DropdownButton","title","reverse","star","Dropdown","ItemText","getWeaponsOfType","rarity","weaponObj","Divider","LevelNameData","faGavel","getWeaponRarity","getWeaponPassiveDescription","getWeaponDescription","editingOther","SetEditingOther","miscStatkeys","setOverride","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","StatOverrideInput","getStatNameWithPercent","CharacterSpecializedStatKey","getBaseStatValue","CharacterTalentPane","talent","img","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","child","CharacterDisplayCard","forceUpdateComponent","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","deepClone","baseLevel","getLevel","overrideLevel","DatabaseInitAndVerify","characterToEdit","getInitialState","updateCharacter","addCharacter","HeaderIconDisplay","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","onChange","Title","onClose","faTimes","defaultActiveKey","Nav","process","initialState","equippedArtifacts","WeaponLevelKeys"],"mappings":"2LAGMA,EAAW,CACfC,GAAIC,IACJC,IAAKD,IACLE,IAAKC,IACLC,KAAMD,IACNE,IAAKC,IACLC,KAAMD,IACNE,QAASC,IACTC,UAAWC,IACXC,SAAUC,IACVC,UAAWC,IACXC,UAAWC,KAGPC,EAAc,SAACC,GAAD,OAClBrB,EAASqB,GAAW,cAAC,IAAD,CAAiBC,KAAMtB,EAASqB,GAAUE,UAAU,UAAa,MAExEvB,O,yJCfA,SAASwB,EAAoBC,GAAQ,IAC5CC,EAAkED,EAAlEC,YAAaC,EAAqDF,EAArDE,eAAgBC,EAAqCH,EAArCG,eAAgBC,EAAqBJ,EAArBI,OAAQC,EAAaL,EAAbK,SAC3D,IAAKJ,EAAa,OAAOG,EACzB,GAAIE,MAAMC,QAAQN,GAAc,CAC9B,IAD8B,EAC1BO,EAAyBN,EACzBO,EAAsB,KAFI,cAGDR,GAHC,IAG9B,2BAA0C,CAAC,IAAhCS,EAA+B,QACxC,KAAIF,EAAyBE,EAAeC,UACvC,CACHF,EAAsBC,EACtB,MAHoDF,GAA0BE,EAAeC,UAJnE,8BAUzBF,IACHD,EAAyB,EACzBC,EAAsBR,EAAY,IAIpC,IAAIW,EAAkC,IAA3BJ,EAA+B,aACvCC,EAAoBI,WAAaJ,EAAoBE,SAAW,EAA/B,YAAyCH,EAAzC,iBAAwEA,EAAyB,EAAI,IAAM,IAAQ,IACnJM,EAAQ,cAAC,IAAD,CAAOC,QAAoC,IAA3BP,EAA+B,YAAc,UAA7D,SAAyEI,IACjFI,EAAQ,EACZ,OAAO,eAAC,IAAD,CAAUX,SAAUA,EAApB,UACL,cAAC,IAASY,OAAV,CAAiBC,KAAK,KAAtB,SACE,qBAAIpB,UAAU,gBAAd,UAA+BM,EAA/B,IAAwCU,OAE1C,eAAC,IAASK,KAAV,WACE,cAAC,IAASC,KAAV,CAAeC,QAAS,kBAAMlB,EAAe,IAA7C,SACE,gDAEDF,EAAYqB,KAAI,SAAAC,GAAO,OACtB,cAAC,IAAMC,SAAP,UAAyC,YAAIlB,MAAMiB,EAAQZ,UAAUc,QAAQH,KAAI,SAAAI,GAAC,OAAIA,EAAI,KAAGJ,KAAI,SAAAK,GAC/F,IAAIC,IAAcZ,EAClB,OAAO,eAAC,IAASI,KAAV,CAA+BC,QAAS,kBAAMlB,EAAeyB,IAA7D,UACJL,EAAQV,UAAWJ,EAAoBE,SAAW,EAA/B,YAAwCgB,EAAxC,iBAAsDA,EAAQ,EAAI,IAAM,IAAO,KAD1EC,OAFRL,EAAQV,oBAS9B,GAAIZ,EAAYU,SAAW,EAAG,CAEnC,IAAIG,EAAQ,cAAC,IAAD,CAAOC,QAA4B,IAAnBb,EAAuB,YAAc,UAArD,SAAiEA,EAAiB,EAAjB,UAAwBA,EAAxB,iBAA+CA,EAAiB,EAAI,IAAM,IAAO,eAC9J,OAAO,eAAC,IAAD,CAAUG,SAAUA,EAApB,UACL,cAAC,IAASY,OAAV,CAAiBC,KAAK,KAAtB,SACE,qBAAIpB,UAAU,gBAAd,UAA+BM,EAA/B,IAAwCU,OAE1C,eAAC,IAASK,KAAV,WACE,cAAC,IAASC,KAAV,CAAeC,QAAS,kBAAMlB,EAAe,IAA7C,SACE,gDAED,YAAIG,MAAML,EAAYU,UAAUc,QAAQH,KAAI,SAAAI,GAAC,OAAIA,EAAI,KAAGJ,KAAI,SAAAK,GAAK,OAChE,cAAC,IAASP,KAAV,CAA2BC,QAAS,kBAAMlB,EAAewB,IAAzD,mBACMA,EADN,iBACoBA,EAAQ,EAAI,IAAM,KADlBA,YAKrB,OAA6B,IAAzB1B,EAAYU,SAEd,cAAC,IAAD,CAAQO,KAAK,KAAKG,QAAS,kBAAMlB,EAAeD,EAAiB,EAAI,IAAIG,SAAUA,EAAnF,SACL,qBAAIP,UAAU,OAAd,UAAqB,cAAC,IAAD,CAAiBD,KAAMK,EAAiB2B,IAAgBC,MAA7E,IAA2F1B,YAHxF,I,mPC9CM,SAAS2B,EAAc/B,GAAQ,IAAD,EACrCgC,EAAgBhC,EAAhBgC,YACFC,EAAYC,IAAkBC,aAAaH,GAC/C,IAAKC,EAAW,OAAO,KACvB,IAAIG,EAAQC,IAAUC,eAAeL,GAC/BM,EAAeH,EAAfG,WAEAC,EAA8CP,EAA9CO,aAAcC,EAAgCR,EAAhCQ,KAAMC,EAA0BT,EAA1BS,OAAQC,EAAkBV,EAAlBU,cAC9BC,EAAaP,IAAUQ,gBAAgBL,GACvCM,EAAgBT,IAAUU,iBAAiBP,GAC3CQ,EAAaC,IAAOC,cAAcR,EAAOS,KACzCC,EAAgBH,IAAOI,iCAAiCX,GACxDY,EAAeL,IAAOM,oBAAoBb,EAAOS,KACjDK,EAAeP,IAAOQ,gCAAgCf,GACtDgB,EAAkBT,IAAOU,aAAajB,EAAOkB,UAC7CC,EAAoBZ,IAAOa,qBAAqBpB,EAAOS,KAE3D,OAAQ,eAAC,IAAD,CAAMrD,UAAWE,EAAM+D,cAAeC,GAAIhE,EAAMgE,GAAKhE,EAAMgE,GAAK,cAAepD,KAAK,YAApF,UACN,cAAC,IAAKqD,OAAN,CAAanE,UAAU,OAAvB,SACGE,EAAMkE,OAASlE,EAAMkE,OAAS,eAAC,IAAD,CAAKpE,UAAU,aAAf,UAC7B,cAAC,IAAD,UACE,6BAAI,4BAAI2C,QAEV,cAAC,IAAD,CAAK0B,GAAI,OAAT,SACE,uBAAMrE,UAAU,6BAAhB,UACE,cAAC,IAAD,CAAQiB,QAAQ,UAAUG,KAAK,KAAKpB,UAAU,OAC5CuB,QAAS,yBAAMrB,QAAN,IAAMA,OAAN,EAAMA,EAAOoE,UADxB,SAEE,cAAC,IAAD,CAAiBvE,KAAMwE,QAEzB,cAAC,IAAD,CAAQtD,QAAQ,SAASG,KAAK,KAC5BG,QAAS,yBAAMrB,QAAN,IAAMA,OAAN,EAAMA,EAAOsE,YADxB,SAEE,cAAC,IAAD,CAAiBzE,KAAM0E,kBAMjC,eAAC,IAAKC,KAAN,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKL,GAAG,OAAOrE,UAAU,OAAzB,SACE,cAAC,IAAD,CAAO2E,IAAKpC,IAAUqC,SAASlC,GAAe1C,UAAU,qBAAqB6E,SAAO,MAEtF,eAAC,IAAD,WACE,+BAAKtC,IAAUuC,QAAQpC,GAAvB,IAAsC,cAAC,IAAD,CAAOiC,IAAKI,IAAOC,SAASlC,GAAa9C,UAAU,gBAAzF,IAA0G,cAAC,IAAD,CAAO2E,IAAG,UAAEI,IAAOE,mBAAT,aAAE,EAAqBjC,GAAgBhD,UAAU,mBACrK,6BAAI,cAAC,IAAD,CAAOkF,MAAO3C,IAAU4C,QAAQzC,GAAe0C,SAAO,MAC1D,8CAAe7C,IAAU8C,qBAAqBlD,GAA9C,aAA6DU,WAGjE,cAAC,IAAD,CAAK7C,UAAU,OAAf,SACE,eAAC,IAAD,WACE,qBAAIA,UAAU,OAAd,UAAsBkD,EAAYa,GAAiB,WAAQnB,EAAO0C,YAAc,EAA7B,KAAnD,IAAuF1B,KACvF,yCAAYN,EAAZ,KAA6BS,GAAqB,iCAAOwB,IAAKC,YAAYhC,GAAxB,KAAyCE,EAAc6B,IAAKE,YAAYjC,cAG9H,cAAC,IAAD,UACE,cAAC,IAAD,UACGkC,OAAOC,QAAQC,IAASC,sBAAsBpD,IAAajB,KAAI,YAAiB,IAAD,mBAAd6B,EAAc,KAATyC,EAAS,KAC1EC,EAAkBH,IAASI,mBAAmB3C,GAC9C4C,EAAaC,KAAKC,IAAL,MAAAD,KAAI,YAAQJ,IAC7B,OAAO,6BAAc,eAAC,IAAD,CAAO7E,QAAQ,YAAf,UAA4B8E,EAA5B,IAA6C,cAAC,IAAD,CAAO9E,QAAQ,UAAf,SAA0BgF,QAA5E5C,UAItB,cAAC,IAAD,UA/Ca,CAAC,KAAM,MAAO,MAAO,UAAW,YAAa,WAAY,aAgD1D7B,KAAI,SAAA1B,GACZ,IAAIsG,EAAOb,IAAKE,YAAY3F,GACxBuG,EAAU/D,EAAMgE,WAAWxG,GAC/B,OAAO,eAAC,IAAD,CAAKuE,GAAI,GAAT,UACL,qBAAIrE,UAAU,WAAd,UAA0BH,YAAYC,GAAtC,IAAiDyF,IAAKC,YAAY1F,MAClE,sBAAME,UAAS,cAAf,UACU,OAAPqG,QAAO,IAAPA,OAAA,EAAAA,EAASE,QAAQhB,IAAKiB,UAAU1G,KAAYsG,MAHxBtG,WAS9BI,EAAMuG,QAAU,cAAC,IAAKC,OAAN,UACf,cAAC,IAAD,CAAQC,GAAIC,IAAMC,GAAI,CACpBC,SAAU,SACVC,oBAAqB7E,GAFvB,oC,4OCjDS8E,EAxCI,SAAsB9G,GACvC,IAAI+G,EAAmBC,YAAgBhH,EAAO,CAC5CiH,UAAW,aAETC,EAAKH,EAAiBG,GACtBC,EAAwBJ,EAAiBK,gBACzCC,EAAWN,EAAiBM,SAC5BJ,EAAYF,EAAiBE,UAC7BK,EAAaP,EAAiBO,WAC9BC,EAAeR,EAAiBQ,aAChCC,EAAgBT,EAAiBS,cACjCC,EAAWV,EAAiBU,SAE5BL,EAAkBM,mBAAQ,WAC5B,OAAOP,GAAyB,SAAUhE,EAAKwE,GAC7C,OAAOT,EAAKA,EAAK,IAAMS,EAAO,IAAMxE,EAAM,QAE3C,CAAC+D,EAAIC,IACJS,EAAaF,mBAAQ,WACvB,MAAO,CACLL,SAAUA,EACVJ,UAAWA,EACXK,WAAYA,EACZC,aAAcA,IAAgB,EAC9BC,cAAeA,IAAiB,EAChCK,gBAAiB,SAAyB1E,GACxC,OAAOiE,EAAgBjE,EAAK,YAE9B2E,gBAAiB,SAAyB3E,GACxC,OAAOiE,EAAgBjE,EAAK,WAG/B,CAACkE,EAAUJ,EAAWK,EAAYC,EAAcC,EAAeJ,IAClE,OAAoBW,IAAMC,cAAcC,IAAWC,SAAU,CAC3DC,MAAOP,GACOG,IAAMC,cAAcI,IAAkBF,SAAU,CAC9DC,MAAOd,GAAY,MAClBI,K,qCCvBUY,EAdEN,IAAMO,YAAW,SAAUC,EAAMC,GAChD,IAAIC,EAAWF,EAAKE,SAChBC,EAAUH,EAAK9B,GACfkC,OAAwB,IAAZD,EAAqB,MAAQA,EACzC5I,EAAYyI,EAAKzI,UACjBE,EAAQ4I,YAA8BL,EAAM,CAAC,WAAY,KAAM,cAE/DM,EAAoBC,YAAmBL,EAAU,eACrD,OAAoBV,IAAMC,cAAcW,EAAWI,YAAS,CAC1DP,IAAKA,GACJxI,EAAO,CACRF,UAAWkJ,IAAWlJ,EAAW+I,S,SCcrC,IAAII,EAAUlB,IAAMO,YAAW,SAAUtI,EAAOwI,GAC9C,IAAIU,EAtBN,SAAuBlJ,GACrB,IAAImJ,EAAUC,qBAAWnB,KACzB,IAAKkB,EAAS,OAAOnJ,EAErB,IAAIiH,EAAYkC,EAAQlC,UACpBY,EAAkBsB,EAAQtB,gBAC1BC,EAAkBqB,EAAQrB,gBAC1BuB,EAAOT,YAA8BO,EAAS,CAAC,YAAa,kBAAmB,oBAE/EG,GAAwC,IAArBtJ,EAAMsH,aAA4C,IAApB+B,EAAK/B,WACtDnE,EAAMoG,YAAavJ,EAAMwJ,UAC7B,OAAOT,YAAS,GAAI/I,EAAO,CACzByJ,OAAwB,MAAhBzJ,EAAMyJ,QAAyB,MAAPtG,EAAcoG,YAAatC,KAAe9D,EAAMnD,EAAMyJ,OACtFvC,GAAIW,EAAgB7H,EAAMwJ,UAC1B,kBAAmB1B,EAAgB9H,EAAMwJ,UACzClC,WAAYgC,IAAqBtJ,EAAMsH,YAAc+B,EAAK/B,YAAcoC,KACxEnC,aAAoC,MAAtBvH,EAAMuH,aAAuBvH,EAAMuH,aAAe8B,EAAK9B,aACrEC,cAAsC,MAAvBxH,EAAMwH,cAAwBxH,EAAMwH,cAAgB6B,EAAK7B,gBAKrDmC,CAAc3J,GAC/ByI,EAAWS,EAAeT,SAC1B3I,EAAYoJ,EAAepJ,UAC3B2J,EAASP,EAAeO,OACxBG,EAAUV,EAAeU,QACzBC,EAAaX,EAAeW,WAC5BC,EAAYZ,EAAeY,UAC3BC,EAASb,EAAea,OACxBC,EAAYd,EAAec,UAC3BC,EAAWf,EAAee,SAC1B1C,EAAe2B,EAAe3B,aAC9BC,EAAgB0B,EAAe1B,cAC/B0C,EAAahB,EAAe5B,WAC5B6C,EAAoBjB,EAAezC,GACnCkC,OAAkC,IAAtBwB,EAA+B,MAAQA,EAEnDd,GADIH,EAAeM,SACZZ,YAA8BM,EAAgB,CAAC,WAAY,YAAa,SAAU,UAAW,aAAc,YAAa,SAAU,YAAa,WAAY,eAAgB,gBAAiB,aAAc,KAAM,cAEvNkB,EAAStB,YAAmBL,EAAU,YAC1C,IAAKgB,IAAWS,GAAc1C,EAAe,OAAO,KACpD,IAAI6C,EAAoBtC,IAAMC,cAAcW,EAAWI,YAAS,GAAIM,EAAM,CACxEb,IAAKA,EACL8B,KAAM,WACN,eAAgBb,EAChB3J,UAAWkJ,IAAWlJ,EAAWsK,EAAQ,CACvCX,OAAQA,OAgBZ,OAbIS,IAAYG,EAAoBtC,IAAMC,cAAckC,EAAY,CAClEK,GAAId,EACJG,QAASA,EACTC,WAAYA,EACZC,UAAWA,EACXC,OAAQA,EACRC,UAAWA,EACXC,SAAUA,EACV1C,aAAcA,EACdC,cAAeA,GACd6C,IAGiBtC,IAAMC,cAAcC,IAAWC,SAAU,CAC3DC,MAAO,MACOJ,IAAMC,cAAcI,IAAkBF,SAAU,CAC9DC,MAAO,MACNkC,OAELpB,EAAQuB,YAAc,UACPvB,QCxEXwB,EAAmB,SAAUC,GAG/B,SAASD,IACP,OAAOC,EAAiBC,MAAMC,KAAMC,YAAcD,KAUpD,OAbAE,YAAeL,EAAKC,GAMPD,EAAIM,UAEVC,OAAS,WACd,MAAM,IAAIC,MAAM,gOAIXR,EAdc,CAerB1C,IAAMY,WAER8B,EAAIS,UAAYpE,EAChB2D,EAAIU,QAAU9C,EACdoC,EAAIW,KAAOnC,EACIwB,Q,qHC1BXtB,EAAUpB,IAAMsD,cAAc,MAClClC,EAAQqB,YAAc,mBACPrB,QCef,IAmBemC,EAnBOvD,IAAMO,YAAW,SAAUC,EAAMC,GACrD,IAAIE,EAAUH,EAAK9B,GACfkC,OAAwB,IAAZD,EAAqB,SAAWA,EAC5CjB,EAAWc,EAAKd,SAChB+B,EAAWjB,EAAKiB,SAChBnI,EAAUkH,EAAKlH,QACfrB,EAAQ4I,YAA8BL,EAAM,CAAC,KAAM,WAAY,WAAY,YAE3EgD,EArBC,SAA4B/B,EAAUnI,GAC3C,IAAImK,EAAkBpC,qBAAWqC,GAC7BpE,EAAW+B,qBAAWhB,KAC1B,OAAO,SAAUsD,GAMXrE,GAAUA,EADOmC,IAAagC,EAAkB,KAAOhC,EACpBkC,GACnCrK,GAASA,EAAQqK,IAWAC,CAAmBnC,EAAUnI,GAMpD,MAJkB,WAAdsH,IACF3I,EAAM2H,KAAO,UAGKI,IAAMC,cAAcW,EAAWI,YAAS,CAC1DP,IAAKA,EACLnH,QAASkK,GACRvL,GAAQyH,M,QC7BTmE,EAAoB7D,IAAMO,YAAW,SAAUC,EAAMC,GACvD,IAAIf,EAAWc,EAAKd,SAChB+B,EAAWjB,EAAKiB,SAChBxJ,EAAQ4I,YAA8BL,EAAM,CAAC,WAAY,aAEzDiD,EAAkBpC,qBAAWqC,GAGjC,OAAoB1D,IAAMC,cAAcI,IAAkBF,SAAU,CAClEC,MAAO,MACOJ,IAAMC,cAAc6D,IAAU9C,YAAS,CACrDP,IAAKA,EACL+B,GAAIiB,IAAoBhC,GACvBxJ,GAAqB+H,IAAMC,cAAc,MAAO,KAAMD,IAAM+D,SAASC,KAAKtE,SAE/EmE,EAAkBpB,YAAc,oBACjBoB,SCZXI,GAAYjE,IAAMO,YAAW,SAAUtI,EAAOwI,GAChD,IAAIzB,EAAmBC,YAAgBhH,EAAO,CAC5CiH,UAAW,aAETgF,EAAsBlF,EAAiBN,GACvCkC,OAAoC,IAAxBsD,EAAiC,MAAQA,EACrDhF,EAAYF,EAAiBE,UAC7BwB,EAAW1B,EAAiB0B,SAC5BhB,EAAWV,EAAiBU,SAC5B3H,EAAYiH,EAAiBjH,UAC7BuH,EAAWN,EAAiBM,SAC5B6E,EAAkBtD,YAA8B7B,EAAkB,CAAC,KAAM,YAAa,WAAY,WAAY,YAAa,aAE3HoF,EAAiBnD,IAAWlJ,EAAWgJ,YAAmBL,EAAU,cACxE,OAAoBV,IAAMC,cAAcyD,EAAiBvD,SAAU,CACjEC,MAAOlB,GAAa,MACNc,IAAMC,cAAcI,IAAkBF,SAAU,CAC9DC,MAAOd,GAAY,MACLU,IAAMC,cAAcW,EAAWI,YAAS,CACtDP,IAAKA,GACJ0D,EAAiB,CAClBpM,UAAWqM,IACT1E,QAENuE,GAAUxB,YAAc,YACxBwB,GAAU/K,OAASqK,EACnBU,GAAUH,SAAWD,GACNI,U,0DCoHAI,OA/If,SAA+BpM,GAAQ,IAAD,EACJqM,oBAAS,GADL,mBAC/BC,EAD+B,KACpBC,EADoB,OAE0GvM,EAAxIiC,UAAaO,EAFiB,EAEjBA,aAAcgK,EAFG,EAEHA,uBAAwBC,EAFrB,EAEqBA,qBAAwBC,EAA6D1M,EAA7D0M,cAAeC,EAA8C3M,EAA9C2M,SAAUC,EAAoC5M,EAApC4M,SAAUC,EAA0B7M,EAA1B6M,YAAaC,EAAa9M,EAAb8M,SAC3H7K,EAAcjC,EAAdiC,UAEFG,EAAQuK,GAAsBD,EAC9BC,IAAUF,EAAuBE,EAASF,sBAC9C,IAAIM,EAAS1K,IAAUQ,gBAAgBL,GACjCwK,EAAW,CAAC,KAAM,MAAO,MAAO,UAAW,YAAa,WAAY,aAAc,YAAa,YAAa,UAAW,WAC7HA,EAASC,KAAT,UAAiBF,EAAjB,aACAC,EAASC,KAAT,UAAiBF,EAAjB,aAEA,IAAIG,EAAgB,CAAC,WAAY,aAAc,SAAU,UAAW,UAAW,eAAgB,eAAgB,YAAa,aAC5H7K,IAAU8K,mBAAmBC,SAAQ,SAAAC,GACnCH,EAAcD,KAAd,UAAsBI,EAAtB,aACAH,EAAcD,KAAd,UAAsBI,EAAtB,gBAEFH,EAAgBA,EAAcI,QAAO,SAAAnK,GAAG,OAAK6J,EAASO,SAASpK,MAE/D,IAAMqK,EAAe,SAAC5N,GAAa,IAAD,EAC5BuG,EAAU9D,IAAUoL,yBAAyBxL,EAAWrC,GACxDsG,EAAOb,KAAKE,YAAY3F,GACxB8N,IAAkB,OAALtL,QAAK,IAALA,GAAA,UAAAA,EAAOgE,kBAAP,eAAoBxG,KAAY,GAAKuG,EAEtD,OAAO,eAACwH,EAAA,EAAD,CAAKxJ,GAAI,GAAIyJ,GAAI,EAAGC,GAAI,EAAxB,UACL,qBAAI/N,UAAU,WAAd,UAA0BH,aAAYC,GAAtC,IAAiDyF,KAAKC,YAAY1F,MAClE,uBAAME,UAAS,sBAAkB8M,GAAYvK,IAAUyL,YAAY7L,EAAWrC,GAAY,eAAiB,IAA3G,WACU,OAAPuG,QAAO,IAAPA,OAAA,EAAAA,EAASE,QAAQhB,KAAKiB,UAAU1G,KAAYsG,EAC5CwH,EAAY,uBAAM5N,UAAW4N,EAAY,EAAI,eAAiB,cAAlD,cAAmEA,EAAY,GAAK,KAAc,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAWrH,QAAQhB,KAAKiB,UAAU1G,KAAYsG,KAAe,UAJhItG,IAQnCmO,EAAsB,SAACnO,GAAa,IAAD,MACnCuG,GAAwB,OAAbuG,QAAa,IAAbA,GAAA,UAAAA,EAAetG,kBAAf,eAA4BxG,KAAYyC,IAAUoL,yBAAyBxL,EAAWrC,GACjGsG,EAAOb,KAAKE,YAAY3F,GACxB8N,IAAqB,OAARf,QAAQ,IAARA,GAAA,UAAAA,EAAUvG,kBAAV,eAAuBxG,KAAY,KAAmB,OAAb8M,QAAa,IAAbA,GAAA,UAAAA,EAAetG,kBAAf,eAA4BxG,KAAY,GAElG,OAAO,eAAC+N,EAAA,EAAD,CAAKxJ,GAAI,GAAIyJ,GAAI,EAAGC,GAAI,EAAxB,UACL,qBAAI/N,UAAU,WAAd,UAA0BH,aAAYC,GAAtC,IAAiDyF,KAAKC,YAAY1F,MAClE,uBAAME,UAAS,sBAAkB8M,GAAYvK,IAAUyL,YAAY7L,EAAWrC,GAAY,eAAiB,IAA3G,WACU,OAAPuG,QAAO,IAAPA,OAAA,EAAAA,EAASE,QAAQhB,KAAKiB,UAAU1G,KAAYsG,EAC5CwH,EAAY,uBAAM5N,UAAW4N,EAAY,EAAI,eAAiB,cAAlD,eAAoEA,EAAY,EAAI,IAAM,IAAa,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAWrH,QAAQhB,KAAKiB,UAAU1G,KAAYsG,EAA5I,OAA4J,UAJtItG,IAWzC,OAAO,qCACL,cAACoO,EAAA,EAAD,UACE,cAACL,EAAA,EAAD,CAAK7N,UAAU,OAAf,SACE,cAAC,GAAD,UACE,eAACmO,EAAA,EAAD,CAAMnO,UAAU,QAAQkE,GAAG,eAAepD,KAAK,YAA/C,UACE,cAACqN,EAAA,EAAKhK,OAAN,UACE,eAAC+J,EAAA,EAAD,WACE,cAACL,EAAA,EAAD,UACE,qDAEF,cAACA,EAAA,EAAD,CAAKxJ,GAAG,OAAR,SACE,cAAC,GAAUlD,OAAX,CAAkBwF,GAAIyH,IAAQnN,QAAQ,OAAOyI,SAAS,iBAAiBnI,QAAS,kBAAMkL,GAAcD,IAAYpL,KAAK,KAArH,mBACMoL,EAAY,OAAS,OAD3B,yBAMN,eAAC2B,EAAA,EAAKzJ,KAAN,WACE,cAACwJ,EAAA,EAAD,UACIrB,GAAYH,EAA0BQ,EAAS1L,IAAIyM,GAAuBf,EAAS1L,IAAIkM,KAE3F,cAAC,GAAU3B,SAAX,CAAoBrC,SAAS,iBAA7B,SACE,cAACwE,EAAA,EAAD,UACIrB,GAAYH,EAA0BU,EAAc5L,IAAIyM,GAAuBb,EAAc5L,IAAIkM,UAKxGb,EAAW,cAACsB,EAAA,EAAKzH,OAAN,UACV,cAAC0H,EAAA,EAAD,CAAQhN,KAAK,KAAKG,QAAS,WACzBgB,IAAU8L,eAAelM,EAAUiF,GAAIyF,EAASyB,aACrC,OAAXvB,QAAW,IAAXA,QAFF,wDAIe,cAKzB,cAACmB,EAAA,EAAD,UACE,cAACL,EAAA,EAAD,UACE,eAACK,EAAA,EAAD,WACE,cAACL,EAAA,EAAD,CAAKU,GAAI,EAAGR,GAAI,EAAG/N,UAAU,OAA7B,SACE,eAACmO,EAAA,EAAD,CAAMnO,UAAU,2BAA2BkE,GAAG,eAAepD,KAAK,YAAlE,UACE,cAACqN,EAAA,EAAKhK,OAAN,mCACA,cAACgK,EAAA,EAAKzJ,KAAN,CAAW1E,UAAU,cAArB,SACE,cAACkO,EAAA,EAAD,UACGxI,OAAOC,QAAQC,KAASC,sBAAsBvD,EAAMG,aAAajB,KAAI,mCAAEgN,EAAF,KAAUC,EAAV,YACpE,eAACZ,EAAA,EAAD,CAAkBxJ,GAAI,GAAIrE,UAAU,OAApC,UACE,6BAAK4F,KAASI,mBAAmBwI,KACjC,cAACN,EAAA,EAAD,UACGO,EAAajN,KAAI,SAAAkN,GAChB,IAAIC,EAAW/I,KAASgJ,uBAAuBJ,EAAQE,GACnDtO,EAAiB,EACjBD,EAAcyF,KAASiJ,gCAAgCL,EAAQE,GACnE,GAAIvO,EAAa,CACfC,EAAiB0O,KAAqBC,kBAAkBpC,EAAsB6B,EAAQE,GACtF,IAAIM,EAAmBpJ,KAASqJ,4BAA4BT,EAAQE,EAAWtO,GAC3E4O,IACGL,IAAUA,EAAW,IAC1BjJ,OAAOC,QAAQqJ,GAAkB1B,SAAQ,mCAAExN,EAAF,KAAWoP,EAAX,YACvCP,EAAS7O,IAAY6O,EAAS7O,IAAY,GAAKoP,MAGrD,IAAIC,EAAqB,cAAClP,GAAA,EAAD,CACvBM,WAAUsM,EACV1M,YAAaA,EACbC,eAAgBA,EAChBC,eAAgB,SAAC+O,GAAD,OAtEN,SAACZ,EAAQE,EAAWtO,GAApB,OAAuC4M,GAAS,SAAAqC,GAAK,MACtF,CAAE1C,qBAAsBmC,KAAqBzO,eAAegP,EAAM1C,qBAAsB6B,EAAQE,EAAWtO,OAqE1DkP,CAA4Bd,EAAQE,EAAWU,IACzE9O,OAAQ,eAACiP,EAAA,EAAD,CAAOtO,QAAQ,UAAf,UAA0ByN,EAA1B,YAEV,OAAO,eAACb,EAAA,EAAD,CAAqBxJ,GAAI,GAAIrE,UAAU,OAAvC,UACL,+BAAKmP,EAAL,IAA0BvJ,KAAS4J,yBAAyBhB,EAAQE,EAAWpM,EAAMgE,eACpFqI,EAAW,cAACT,EAAA,EAAD,UACTxI,OAAOC,QAAQgJ,GAAUnN,KAAI,mCAAE1B,EAAF,KAAWoP,EAAX,YAC5B,eAACrB,EAAA,EAAD,CAAKxJ,GAAI,GAAT,UAA4BkB,KAAKC,YAAY1F,GAA7C,KAAyDoP,EAAK3J,KAAKE,YAAY3F,KAA7DA,QACb,OALM4O,UAvBbF,eAsCnB9I,OAAO+J,OAAOnN,EAAMgM,aAAa9M,KAAI,SAAAkO,GAAK,OACzCA,EAAQ,cAAC7B,EAAA,EAAD,CAAKU,GAAI,EAAGR,GAAI,EAAe/N,UAAU,OAAzC,SACN,cAAC2P,GAAA,EAAD,CAAcC,WAAYF,EAAO3C,YAAaA,KADhB2C,GAEvB,mB,qECjJN,SAASG,GAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIzM,EAAK2M,EADLC,ECHS,SAAuCH,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIzM,EAAK2M,EAFLC,EAAS,GACTC,EAAaxK,OAAO/D,KAAKmO,GAG7B,IAAKE,EAAI,EAAGA,EAAIE,EAAWC,OAAQH,IACjC3M,EAAM6M,EAAWF,GACbD,EAASK,QAAQ/M,IAAQ,IAC7B4M,EAAO5M,GAAOyM,EAAOzM,IAGvB,OAAO4M,EDTM,CAA6BH,EAAQC,GAGlD,GAAIrK,OAAO2K,sBAAuB,CAChC,IAAIC,EAAmB5K,OAAO2K,sBAAsBP,GAEpD,IAAKE,EAAI,EAAGA,EAAIM,EAAiBH,OAAQH,IACvC3M,EAAMiN,EAAiBN,GACnBD,EAASK,QAAQ/M,IAAQ,GACxBqC,OAAOuF,UAAUsF,qBAAqBC,KAAKV,EAAQzM,KACxD4M,EAAO5M,GAAOyM,EAAOzM,IAIzB,OAAO4M,EEmBMQ,OA/Bf,SAAmBvQ,GAAQ,IACnBmI,EAA2EnI,EAA3EmI,MAAOqI,EAAoExQ,EAApEwQ,YAAaC,EAAuDzQ,EAAvDyQ,aAAcC,EAAyC1Q,EAAzC0Q,cAAeC,EAA0B3Q,EAA1B2Q,QAAYC,EAD3C,GACyD5Q,EADzD,kEAExB,OAAQ,eAAC6Q,EAAA,EAAD,2BAAgBD,GAAhB,cACN,cAACC,EAAA,EAAWC,QAAZ,UACE,cAACD,EAAA,EAAWE,KAAZ,UAAkB/Q,EAAMyC,SAEzBkO,EACC,cAAC,KAAD,CACEH,YAAaA,EACbrI,MAAOA,EACPuI,cAAeA,IACZ,cAAC,KAAD,CACHF,YAAaA,EACbrI,MAAOA,EACPuI,cAAeA,IAElBC,EAAW,cAACE,EAAA,EAAWG,OAAZ,UACV,cAACH,EAAA,EAAWE,KAAZ,kBACsB,UACNE,IAAjBR,EAA6B,cAACI,EAAA,EAAWG,OAAZ,UAC5B,cAACE,GAAA,EAAD,CAAgBC,UAAU,MACxBC,QAAS,cAACC,GAAA,EAAD,wDADX,SAEE,sBAAMvR,UAAU,iBAAhB,SACE,cAACoO,EAAA,EAAD,CAAQ7M,QAAS,kBAAMqP,EAAcD,IAAepQ,SAAU8H,IAAUsI,EAAca,MAAOnJ,IAAUsI,EAAe,CAAEc,cAAe,QAAW,GAAlJ,SACE,cAAC,IAAD,CAAiB1R,KAAM2R,cAIR,UClBZ,SAASC,GAAsBzR,GAAQ,IAAD,UACgDA,EAA7FiC,UAAaO,EADgC,EAChCA,aAAcG,EADkB,EAClBA,cAAiBiK,EAAiD5M,EAAjD4M,SAAU8E,EAAuC1R,EAAvC0R,iBAAkBC,EAAqB3R,EAArB2R,iBAD3B,EAEnBtF,oBAAS,GAFU,mBAE9CuF,EAF8C,KAEnCC,EAFmC,KAG/CjP,EAAaP,IAAUQ,gBAAgBL,GACvCM,EAAgBT,IAAUU,iBAAiBP,GAC3CsP,EAAQzP,IAAU8C,qBAAqBnF,EAAMiC,WACjD,OAAO,eAAC+L,EAAA,EAAD,WACL,cAACL,EAAA,EAAD,CAAKxJ,GAAI,GAAI0J,GAAI,EAAjB,SAEE,eAACI,EAAA,EAAD,CAAMjK,GAAG,eAAepD,KAAK,YAAYd,UAAU,OAAnD,UACE,cAACmO,EAAA,EAAK8D,IAAN,CAAUtN,IAAKpC,IAAU2P,QAAQxP,GAAe1C,UAAU,iBAC1D,cAACmO,EAAA,EAAKzJ,KAAN,UACE,eAACwJ,EAAA,EAAD,WACE,eAACL,EAAA,EAAD,CAAKxJ,GAAI,GAAT,UACE,+BAAK9B,IAAUuC,QAAQpC,GAAvB,IAAsC,cAACyP,EAAA,EAAD,CAAOxN,IAAKI,KAAOC,SAASlC,GAAa9C,UAAU,gBAAzF,IAA0G,cAACmS,EAAA,EAAD,CAAOxN,IAAG,UAAEI,KAAOE,mBAAT,aAAE,EAAqBjC,GAAgBhD,UAAU,mBACrK,6BAAI,cAAC,KAAD,CAAOkF,MAAO3C,IAAU4C,QAAQzC,GAAe0C,SAAO,SAE5D,cAACyI,EAAA,EAAD,UACGiE,EAAY,cAAC5D,EAAA,EAAD,UAAK,cAACL,EAAA,EAAD,UAChB,eAACkD,EAAA,EAAD,WACE,cAACA,EAAA,EAAWC,QAAZ,UACE,cAACD,EAAA,EAAWE,KAAZ,qBAEF,cAAC,KAAD,CAAgBL,cAAegB,EAAkBvJ,MAAO2J,IACxD,cAACjB,EAAA,EAAWG,OAAZ,UACE,cAACE,GAAA,EAAD,CACEC,UAAU,SACVC,QAAS,cAACC,GAAA,EAAD,wDAFX,SAIE,cAACnD,EAAA,EAAD,CAAQnN,QAAQ,SAASM,QAAS,kBAAMwQ,GAAcD,IAAY1Q,KAAK,KAAvE,SACE,+BAAM,cAAC,IAAD,CAAiBrB,KAAMqS,qBAMrC,eAAClE,EAAA,EAAD,WACE,cAACL,EAAA,EAAD,UACE,yCAAYmE,OAEblF,EAAW,cAACe,EAAA,EAAD,CAAKxJ,GAAG,OAAOrE,UAAU,YAAzB,SACV,cAACoO,EAAA,EAAD,CAAQnN,QAAQ,OAAOM,QAAS,kBAAMwQ,GAAcD,IAAY1Q,KAAK,KAArE,SACE,+BAAM,cAAC,IAAD,CAAiBrB,KAAMwE,YAExB,UAGf,cAACsJ,EAAA,EAAD,CAAKxJ,GAAI,GAAT,SACE,eAAC6J,EAAA,EAAD,WACE,cAACL,EAAA,EAAD,CAAKxJ,GAAI,GAAT,SAAa,6BAAK9B,IAAU8P,qBAAqB3P,OACjD,cAACmL,EAAA,EAAD,UACE,cAACK,EAAA,EAAD,CAAKlO,UAAU,OAAf,mBACG+E,KAAOuN,kBADV,iBACG,EAAoB5P,UADvB,iBACG,EAAmCG,qBADtC,aACG,EAAkDrB,KAAI,SAAC+Q,EAAKvC,GAAN,OACrD,cAACnC,EAAA,EAAD,CAAKxJ,GAAI,EAAGrE,UAAU,MAAtB,SACE,cAACmS,EAAA,EAAD,CAAOxN,IAAK4N,EAAKvS,UAAS,uBAAkB6C,EAAgBmN,EAAI,GAAK,gBACnEwB,MAAO,CAAEgB,OAAQ,WAAaC,eAAa,EAAClR,QAASuL,EAAY,kBAC/D+E,EAAkB7B,EAAI,IAAOnN,EAAgBmN,EAAIA,EAAI,IAAM,QAHhCA,yBAanD,eAACnC,EAAA,EAAD,CAAKxJ,GAAI,GAAI0J,GAAI,EAAjB,UACE,cAAC2E,GAAD,eAA2BxS,IAC3B,cAACyS,GAAD,eAAmBzS,UAIzB,SAASwS,GAAsBxS,GAAQ,IAAD,EACRqM,oBAAS,GADD,mBAC/BqG,EAD+B,KACtBC,EADsB,OAEQtG,oBAAS,GAFjB,mBAE/BuG,EAF+B,KAEdC,EAFc,OAGuD7S,EAArFiC,UAAaO,EAHiB,EAGjBA,aAAcE,EAHG,EAGHA,OAAUkK,EAAgD5M,EAAhD4M,SAAUE,EAAsC9M,EAAtC8M,SAAUJ,EAA4B1M,EAA5B0M,cAAeC,EAAa3M,EAAb2M,SAG1EvK,EAAQuK,GAAsBD,EAE5BoG,EAAiB,SAAC3P,EAAKgF,GAAN,OAAgB2E,GAAS,SAAAqC,GAI9C,MAFY,QAARhM,IAAegM,EAAMzM,OAAOxC,eAAiB,GACjDiP,EAAMzM,OAAOS,GAAOgF,EACb,CAAEzF,OAAQyM,EAAMzM,YAErBqQ,EAAa9P,IAAOM,oBAAoBb,EAAOS,KAC/CL,EAAgBT,IAAUU,iBAAiBP,GAC3CwQ,EAAuBtQ,EAAOuQ,iBAAmBhQ,IAAOiQ,qBAAqBxQ,EAAOS,IAAKT,EAAOkB,UAChGuP,EAAsBzQ,EAAO0Q,gBAAkBnQ,IAAOoQ,oBAAoB3Q,EAAOS,IAAKT,EAAOkB,UAC7FC,EAAoBZ,IAAOa,qBAAqBpB,EAAOS,KACvDmQ,EAAmBrQ,IAAOsQ,mBAAmB7Q,EAAOS,IAAKT,EAAO0C,aAChE0J,EAAmB7L,IAAOuQ,yBAAyB9Q,EAAOS,IAAKT,EAAO0C,YAAa1C,EAAOxC,gBAC1FD,EAAcgD,IAAOwQ,qBAAqB/Q,EAAOS,KACjDjD,EAAiBwC,EAAOxC,eACxBwT,EAAiB,cAAC3T,GAAA,EAAD,CACnBE,YAAaA,EACbC,eAAgBA,EAChBC,eAAgB,SAAC+O,GAAD,OAAU4D,EAAe,iBAAkB5D,IAC3D9O,OAAQ,oBAAIN,UAAU,gBAAd,SAA+B+D,MAGzC,OAAO,eAACoK,EAAA,EAAD,CAAMjK,GAAG,eAAepD,KAAK,YAAYd,UAAU,OAAnD,UACL,cAACmO,EAAA,EAAKhK,OAAN,UACE,eAAC+J,EAAA,EAAD,WACE,cAACL,EAAA,EAAD,UACE,4CAEF,cAACA,EAAA,EAAD,CAAKxJ,GAAG,OAAR,SACE,cAAC+J,EAAA,EAAD,CAAQnN,QAAQ,OAAOG,KAAK,KAAKG,QAAS,kBAAMwR,GAAoBD,IAApE,SACE,iCAAM,cAAC,IAAD,CAAiB/S,KAAM8T,MAA7B,IAA8Cf,EAAkB,aAAe,oBAGlFhG,EAAW,cAACe,EAAA,EAAD,CAAKxJ,GAAG,OAAR,SACV,cAAC+J,EAAA,EAAD,CAAQnN,QAAS2R,EAAU,SAAW,OAAQrR,QAAS,kBAAMsR,GAAYD,IAAUxR,KAAK,KAAxF,SACE,iCAAM,cAAC,IAAD,CAAiBrB,KAAM6S,EAAUR,IAAS7N,MAAhD,IAA4DqO,EAAU,OAAS,cAE1E,UAGb,eAACzE,EAAA,EAAKzJ,KAAN,WACE,eAACwJ,EAAA,EAAD,CAAKlO,UAAU,OAAf,UACE,cAAC6N,EAAA,EAAD,CAAKxJ,GAAI,GAAIyJ,GAAI,EAAjB,SACE,cAACqE,EAAA,EAAD,CAAOxN,IAAKI,KAAO+O,QAAQlR,EAAOS,KAAMrD,UAAU,eAAe+T,WAAS,MAE3EnB,EAAU,cAAC/E,EAAA,EAAD,UACT,eAACK,EAAA,EAAD,WACE,cAACL,EAAA,EAAD,CAAKE,GAAG,OAAO1J,GAAI,EAAGrE,UAAU,YAAhC,SACE,cAACgU,EAAA,EAAD,CAAgBC,MAAO9Q,IAAOC,cAAcR,EAAOS,KAAnD,SACG,aAAI7C,MAAM,GAAGmB,QAAQuS,UAAU1S,KAAI,SAAA6B,GAAG,OAAIA,EAAM,KAAG7B,KAAI,SAAC2S,EAAMnE,EAAGlK,GAAV,OAAkB,eAAC,IAAMpE,SAAP,WACxE,cAAC0S,EAAA,EAASC,SAAV,UAAuC,cAAC,KAAD,CAAOnP,MAAOiP,KAA7B,OAASA,GAChCzO,OAAOC,QAAQxC,IAAOmR,iBAAiBtR,IAAgBwK,QAAO,oDAAgC+G,SAAWJ,KAAM3S,KAAI,mCAAE6B,EAAF,KAAOmR,EAAP,YAClH,cAACJ,EAAA,EAAS9S,KAAV,CAAyBC,QAAS,kBAAMyR,EAAe,MAAO3P,IAA9D,SACGmR,EAAU7R,MADOU,MAIpB2M,IAAMlK,EAAIqK,OAAS,GAAM,cAAEiE,EAAA,EAASK,QAAX,MAPkEN,UAWnG,cAACtG,EAAA,EAAD,CAAKE,GAAG,OAAO1J,GAAI,EAAGrE,UAAU,YAAhC,SACE,eAACgU,EAAA,EAAD,CAAgBC,MAAO9Q,IAAOU,aAAajB,EAAOkB,UAAlD,UACE,cAACsQ,EAAA,EAASC,SAAV,UACE,yDAED3O,OAAOC,QAAQ+O,KAAelT,KAAI,mCAAE6B,EAAF,KAAOV,EAAP,YACjC,cAACyR,EAAA,EAAS9S,KAAV,CAAyBC,QAAS,kBAAMyR,EAAe,WAAY3P,IAAnE,SACGV,GADiBU,WAKzBU,GAAqB,cAAC8J,EAAA,EAAD,CAAKE,GAAG,OAAO1J,GAAI,EAAGrE,UAAU,OAAhC,SACpB,eAACgU,EAAA,EAAD,CAAgBC,MAAK,qBAAgBrR,EAAO0C,YAAc,GAAKtF,UAAU,QAAzE,UACE,cAACoU,EAAA,EAASC,SAAV,UACE,6DAED,aAAI7T,MAAM,GAAGmB,QAAQH,KAAI,SAAA6B,GAAG,OAC3B,cAAC+Q,EAAA,EAAS9S,KAAV,CAAyBC,QAAS,kBAAMyR,EAAe,cAAe3P,IAAtE,8BACiBA,EAAM,IADHA,WAK1B,cAACwK,EAAA,EAAD,CAAKxJ,GAAI,GAAIrE,UAAU,OAAvB,SACE,cAAC,GAAD,CACE2C,KAAM,iCAAM,cAAC,IAAD,CAAiB5C,KAAM4U,IAAS3U,UAAU,SAAhD,SACN0Q,YAAY,gBACZrI,MAAO6K,EACPrC,SAAS,EACTD,cAAe,SAACvI,GAAD,OAAW2K,EAAe,kBAAmB3K,IAC5DsI,aAAcxN,IAAOiQ,qBAAqBxQ,EAAOS,IAAKT,EAAOkB,cAGhEmP,GAAc,cAACpF,EAAA,EAAD,CAAKxJ,GAAI,GAAIrE,UAAU,OAAvB,SACb,cAAC,GAAD,CACE2C,KAAM,iCAAM,sBAAM3C,UAAU,OAAhB,SAAwBH,aAAYoT,KAAoB1N,KAAKC,YAAYyN,MACrFvC,YAAY,iBACZrI,MAAOgL,EACPxC,QAA0C,MAAjCtL,KAAKE,YAAYwN,GAC1BrC,cAAe,SAACvI,GAAD,OAAW2K,EAAe,iBAAkB3K,IAC3DsI,aAAcxN,IAAOoQ,oBAAoB3Q,EAAOS,IAAKT,EAAOkB,mBAKlE,eAAC+J,EAAA,EAAD,WACE,cAACK,EAAA,EAAD,CAAKlO,UAAU,OAAf,SAAsB,eAAC6N,EAAA,EAAD,WACpB,qBAAI7N,UAAU,OAAd,UAAsBmD,IAAOC,cAAcR,EAAOS,KAAlD,IAAyDF,IAAOU,aAAajB,EAAOkB,UAApF,IAAgGC,GAAiB,sBAAmBnB,EAAO0C,YAAc,EAAxC,QACjH,gCAAQ,cAAC,KAAD,CAAOJ,MAAO/B,IAAOyR,gBAAgBhS,EAAOS,cAEtD,cAAC6K,EAAA,EAAD,UACE,cAACL,EAAA,EAAD,UAAM+F,MAGR,4BAAI7P,GAAqBZ,IAAO0R,4BAA4BjS,EAAOS,IAAKT,EAAO0C,YAAahD,EAAMgE,cAClG,eAAC4H,EAAA,EAAD,WACE,cAACL,EAAA,EAAD,CAAKxJ,GAAI,GAAIyJ,GAAI,EAAjB,SACE,uCAAUoF,OAEXD,GAAc,cAACpF,EAAA,EAAD,CAAKxJ,GAAI,GAAIyJ,GAAI,EAAjB,SACb,+BAAKvI,KAAKC,YAAYyN,GAAtB,KAAqCI,EAAqB9N,KAAKE,YAAYwN,WAG9E,eAAC/E,EAAA,EAAD,YACGc,GAAoBwE,IAAqB,cAAC3F,EAAA,EAAD,CAAKxJ,GAAI,GAAT,SAAa,oBAAIrE,UAAU,OAAd,4BACvDwT,GAAoB9N,OAAOC,QAAQ6N,GAAkBhS,KAAI,mCAAE6B,EAAF,KAAO6L,EAAP,YACxD,eAACrB,EAAA,EAAD,CAAKxJ,GAAI,GAAIyJ,GAAI,EAAjB,UAAwCvI,KAAKC,YAAYnC,GAAzD,KAAiE6L,EAAK3J,KAAKE,YAAYpC,KAA9D,OAASA,MAEnC2L,GAAoBtJ,OAAOC,QAAQqJ,GAAkBxN,KAAI,mCAAE6B,EAAF,KAAO6L,EAAP,YACxD,eAACrB,EAAA,EAAD,CAAKxJ,GAAI,GAAIyJ,GAAI,EAAjB,UAAwCvI,KAAKC,YAAYnC,GAAzD,KAAiE6L,EAAK3J,KAAKE,YAAYpC,KAA9D,OAASA,eAK3CyP,GAAmB,cAAC5E,EAAA,EAAD,UAAK,cAACL,EAAA,EAAD,UAAK,gCAAQ1K,IAAO2R,qBAAqBlS,EAAOS,iBAK/E,SAASsP,GAAczS,GAAQ,IAAD,EACAqM,oBAAS,GADT,mBACvBqG,EADuB,KACdC,EADc,OAEUtG,oBAAS,GAFnB,mBAEvBwI,EAFuB,KAETC,EAFS,KAItB9H,EAAW,CAAC,KAAM,MAAO,MAAO,UAAW,YAAa,WAAY,YAAa,aACjFE,EAAgB,CAAC,OAAQ,WAAY,aAAc,SAAU,UAAW,WAE9E7K,IAAU8K,mBAAmBC,SAAQ,SAAAC,GACnCH,EAAcD,KAAd,UAAsBI,EAAtB,aACAH,EAAcD,KAAd,UAAsBI,EAAtB,gBAEF,IAAM0H,EAAe,CAAC,eAAgB,eAAgB,YAAa,YAAa,kBAAmB,kBAAmB,aAAc,MAAO,WAAY,UAAW,gBAE5JnI,EAA8D5M,EAA9D4M,SAAU3K,EAAoDjC,EAApDiC,UAAW+S,EAAyChV,EAAzCgV,YAAatI,EAA4B1M,EAA5B0M,cAAeC,EAAa3M,EAAb2M,SACpCH,EAA6BxM,EAA1CiC,UAAauK,uBAEfpK,EAAQuK,GAAsBD,EAE9BuI,EAAqB5S,IAAUoL,yBAAyBxL,EAAW,sBACnEiT,EAAqB7S,IAAUoL,yBAAyBxL,EAAW,sBACnEkT,EAAsB9P,KAAKE,YAAY0P,GAEvCG,EAAmE,MAAzC/P,KAAKE,YAAY0P,GAC3CI,EAAmB,CACrB7E,YAAa,yBACbrI,MAAO9F,IAAUoL,yBAAyBxL,EAAW,sBACrDyO,cAAe,SAACvI,GAAD,OAAW6M,EAAY,qBAAsB7M,KAE1DmN,EAAmBF,EACrB,cAAC,KAAD,eAAsBC,IACpB,cAAC,KAAD,eAAoBA,IAElB7H,EAAe,SAAC5N,GAAa,IAAD,EAC5BuG,EAAU9D,IAAUoL,yBAAyBxL,EAAWrC,GACxDsG,EAAOb,KAAKE,YAAY3F,GACxB8N,IAAkB,OAALtL,QAAK,IAALA,GAAA,UAAAA,EAAOgE,kBAAP,eAAoBxG,KAAY,GAAKuG,EACtD,OAAO,eAACwH,EAAA,EAAD,CAAKxJ,GAAI,GAAI0J,GAAI,EAAjB,UACL,qBAAI/N,UAAU,WAAd,UAA0BH,aAAYC,GAAtC,IAAiDyF,KAAKC,YAAY1F,MAClE,uBAAME,UAAS,sBAAkB8M,GAAYvK,IAAUyL,YAAY7L,EAAWrC,GAAY,eAAiB,IAA3G,WACU,OAAPuG,QAAO,IAAPA,OAAA,EAAAA,EAASE,QAAQhB,KAAKiB,UAAU1G,KAAYsG,EAC5CwH,EAAY,uBAAM5N,UAAW4N,EAAY,EAAI,eAAiB,cAAlD,cAAmEA,EAAY,GAAK,KAAc,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAWrH,QAAQhB,KAAKiB,UAAU1G,KAAYsG,KAAe,UAJvItG,IAQ5BmO,EAAsB,SAACnO,GAAa,IAAD,MACnCuG,GAAwB,OAAbuG,QAAa,IAAbA,GAAA,UAAAA,EAAetG,kBAAf,eAA4BxG,KAAYyC,IAAUoL,yBAAyBxL,EAAWrC,GACjGsG,EAAOb,KAAKE,YAAY3F,GACxB8N,IAAqB,OAARf,QAAQ,IAARA,GAAA,UAAAA,EAAUvG,kBAAV,eAAuBxG,KAAY,KAAmB,OAAb8M,QAAa,IAAbA,GAAA,UAAAA,EAAetG,kBAAf,eAA4BxG,KAAY,GAElG,OAAO,eAAC+N,EAAA,EAAD,CAAKxJ,GAAI,GAAI0J,GAAI,EAAjB,UACL,qBAAI/N,UAAU,WAAd,UAA0BH,aAAYC,GAAtC,IAAiDyF,KAAKC,YAAY1F,MAClE,uBAAME,UAAS,sBAAkB8M,GAAYvK,IAAUyL,YAAY7L,EAAWrC,GAAY,eAAiB,IAA3G,WACU,OAAPuG,QAAO,IAAPA,OAAA,EAAAA,EAASE,QAAQhB,KAAKiB,UAAU1G,KAAYsG,EAC5CwH,EAAY,uBAAM5N,UAAW4N,EAAY,EAAI,eAAiB,cAAlD,eAAoEA,EAAY,GAAK,KAAc,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAWrH,QAAQhB,KAAKiB,UAAU1G,KAAYsG,EAAxI,OAAwJ,UAJzItG,IAQlC,OAAO,qCACL,eAACqO,EAAA,EAAD,CAAMjK,GAAG,eAAepD,KAAK,YAAYd,UAAU,OAAnD,UACE,cAACmO,EAAA,EAAKhK,OAAN,UACE,eAAC+J,EAAA,EAAD,WACE,cAACL,EAAA,EAAD,UACE,qDAEDf,EAAW,cAACe,EAAA,EAAD,CAAKxJ,GAAG,OAAR,SACV,cAAC+J,EAAA,EAAD,CAAQnN,QAAS2R,EAAU,SAAW,OAAQrR,QAAS,kBAAMsR,GAAYD,IAAUxR,KAAK,KAAxF,SACE,iCAAM,cAAC,IAAD,CAAiBrB,KAAM6S,EAAUR,IAAS7N,MAAhD,IAA4DqO,EAAU,OAAS,cAE1E,UAGZA,EACC,cAACzE,EAAA,EAAKzJ,KAAN,UACE,eAACwJ,EAAA,EAAD,CAAKlO,UAAU,OAAf,UACGkN,EAAS1L,KAAI,SAAA1B,GAAO,OACnB,cAAC+N,EAAA,EAAD,CAAKE,GAAI,EAAG1J,GAAI,GAAhB,SAAkC,cAACoR,GAAD,2BAAuBvV,GAAW,CAAEJ,UAASC,KAAMtB,KAASqB,OAArEA,MAE3B,cAAC+N,EAAA,EAAD,CAAKE,GAAI,EAAG1J,GAAI,GAAhB,SACE,eAAC0M,EAAA,EAAD,WACE,eAACiD,EAAA,EAAD,CACEC,MAAO1O,KAAKmQ,uBAAuBP,EAAoB,oBACvDxO,GAAIoK,IAAWC,QAFjB,UAIE,cAACoD,EAAA,EAASC,SAAV,uCACCsB,KAA4BnU,KAAI,SAAA6B,GAAG,OAClC,cAAC+Q,EAAA,EAAS9S,KAAV,CAAyBC,QAAS,kBAAM2T,EAAY,qBAAsB7R,IAA1E,SACGkC,KAAKmQ,uBAAuBrS,IADXA,SAIvBmS,EACAF,GAA4B,cAACvE,EAAA,EAAWG,OAAZ,UAC3B,cAACH,EAAA,EAAWE,KAAZ,4BAMV,cAAC9C,EAAA,EAAKzJ,KAAN,UACE,eAACwJ,EAAA,EAAD,CAAKlO,UAAU,OAAf,UACI6M,GAAYH,EAA0BQ,EAAS1L,IAAIyM,GAAuBf,EAAS1L,IAAIkM,GACxF0H,EAAqB,eAACvH,EAAA,EAAD,CAAKE,GAAI,EAAG1J,GAAI,GAAhB,UACpB,iCAAM,6CAAN,IAA0B,sBAAMrE,UAAWuC,IAAUyL,YAAY7L,EAAW,sBAAwB,eAAiB,GAA3F,SAAgGoD,KAAKC,YAAY2P,QAC3I,sBAAMnV,UAAS,sBAAiBuC,IAAUyL,YAAY7L,EAAW,sBAAwB,eAAiB,IAA1G,mBAAoHiT,GAApH,OAAyIC,QAClI,aAKjB,eAAClH,EAAA,EAAD,CAAMjK,GAAG,eAAepD,KAAK,YAAYd,UAAU,OAAnD,UACE,cAACmO,EAAA,EAAKhK,OAAN,UACE,eAAC+J,EAAA,EAAD,WACE,cAACL,EAAA,EAAD,UACE,iDAEDf,EAAW,cAACe,EAAA,EAAD,CAAKxJ,GAAG,OAAR,SACV,cAAC+J,EAAA,EAAD,CAAQnN,QAAS8T,EAAe,SAAW,OAAQxT,QAAS,kBAAMyT,GAAiBD,IAAe3T,KAAK,KAAvG,SACE,iCAAM,cAAC,IAAD,CAAiBrB,KAAMgV,EAAe3C,IAAS7N,MAArD,IAAiEwQ,EAAe,OAAS,cAEpF,UAGZA,EACC,cAAC5G,EAAA,EAAKzJ,KAAN,UACE,cAACwJ,EAAA,EAAD,CAAKlO,UAAU,OAAf,SACGoN,EAAc5L,KAAI,SAAA1B,GAAO,OACxB,cAAC+N,EAAA,EAAD,CAAKE,GAAI,EAAG1J,GAAI,GAAhB,SAAkC,cAACoR,GAAD,2BAAuBvV,GAAW,CAAEJ,UAASC,KAAMtB,KAASqB,OAArEA,UAG/B,cAACqO,EAAA,EAAKzJ,KAAN,UACE,cAACwJ,EAAA,EAAD,CAAKlO,UAAU,OAAf,SACI6M,GAAYH,EAA0BU,EAAc5L,IAAIyM,GAAuBb,EAAc5L,IAAIkM,UAK3G,eAACS,EAAA,EAAD,CAAMjK,GAAG,eAAepD,KAAK,YAAYd,UAAU,OAAnD,UACE,cAACmO,EAAA,EAAKhK,OAAN,UACE,cAAC+J,EAAA,EAAD,UACE,cAACL,EAAA,EAAD,UACE,oDAIN,cAACM,EAAA,EAAKzJ,KAAN,UACE,cAACwJ,EAAA,EAAD,CAAKlO,UAAU,OAAf,SACI6M,GAAYH,EAA0BuI,EAAazT,IAAIyM,GAAuBgH,EAAazT,IAAIkM,aAQ3G,SAAS+H,GAAkBvV,GAAQ,IAAD,EAC4CA,EAAtEiC,UAAaO,EADa,EACbA,aAAcoB,EADD,EACCA,SAAYhE,EAA+BI,EAA/BJ,QAASC,EAAsBG,EAAtBH,KAAMmV,EAAgBhV,EAAhBgV,YAC5D,OAAO,cAAC,GAAD,CACLlV,UAAU,OACV2C,KAAM,iCAAO5C,GAAQ,cAAC,IAAD,CAAiBA,KAAMA,EAAMC,UAAU,UAAtD,IAAmEuF,KAAKC,YAAY1F,MAC1F4Q,YAAW,eAAUnL,KAAKC,YAAY1F,IACtCuI,MAAO9F,IAAUoL,yBAAyBzN,EAAMiC,UAAWrC,GAC3D+Q,SAAS,EACTD,cAAe,SAACvI,GAAD,OAAW6M,EAAYpV,EAASuI,IAC/CsI,aAAcpO,IAAUqT,iBAAiBlT,EAAcoB,EAAUhE,KC9XtD+V,OAVf,SAA6B3V,GAAQ,IAAD,IACfwC,EAAmBxC,EAAhCiC,UAAaO,aACfoT,EAAM,UAAG/Q,KAAOuN,kBAAV,iBAAG,EAAoB5P,UAAvB,aAAG,EAAmCoT,OAChD,OAAO,cAAC5H,EAAA,EAAD,UACJ4H,GAAUpQ,OAAOC,QAAQmQ,GAAQtU,KAAI,mCAAE6B,EAAF,KAAO0S,EAAP,YACpC,cAAC5D,EAAA,EAAD,CAAOxN,IAAKoR,GAAU1S,SCWtB2S,GAAa/N,IAAMO,YACvB,WAA+DE,GAAS,IAArEf,EAAoE,EAApEA,SAAU6J,EAA0D,EAA1DA,MAAOxR,EAAmD,EAAnDA,UAA8BiW,EAAqB,EAAxC,mBAC7B,OACE,qBACEvN,IAAKA,EACL8I,MAAO,CAAEA,QAAO0E,SAAU,SAC1BlW,UAAWA,EACXmW,kBAAiBF,EAJnB,SAME,cAAC/H,EAAA,EAAD,UACGjG,IAAM+D,SAASoK,QAAQzO,GAAUnG,KAAI,SAAA6U,GAAK,OAAI,cAACxI,EAAA,EAAD,CAAKxJ,GAAI,EAAT,SAAagS,cAOjDC,G,kDACnB,WAAYpW,GAAQ,IAAD,8BACjB,cAAMA,IA0CRqW,qBAAuB,WACjB,EAAKlH,MAAMjI,IACb,EAAK4F,SAAS5K,IAAkBC,aAAa,EAAKgN,MAAMjI,KAE1D,EAAKlH,MAAM6M,YAAc,EAAK7M,MAAM6M,cAAgB,EAAKA,eA/CxC,EAiDnByJ,YAAc,SAACtH,GAAD,OAAS,EAAKlC,SAASkC,IAjDlB,EAkDnBuH,gBAAkB,SAAC/T,GAAD,OAChB,EAAKsK,SAAS,CAAEtK,eAAcC,KAAM+T,YAA0BnU,IAAUoU,UAAUjU,IAAgBE,OAAQ0T,EAAqBM,gBAAgBlU,MAnD9H,EAoDnBmU,YAAc,SAAC/S,GAAD,OACZ,EAAKkJ,SAAS,CAAElJ,WAAUgT,kBAAmB,MArD5B,EAuDnB5B,YAAc,SAACpV,EAASuI,GAAV,OAAoB,EAAK2E,UAAS,SAAAqC,GAC9C,IAAIyH,EAAoBC,YAAU1H,EAAMyH,mBAExC,OADkBvU,IAAUqT,iBAAiB,EAAKvG,MAAM3M,aAAc,EAAK2M,MAAMvL,SAAUhE,KACvEuI,UACXyO,EAAkBhX,GAClB,CAAEgX,uBAETA,EAAkBhX,GAAWuI,EACtB,CAAEyO,0BA/DM,EAkEnBlF,iBAAmB,SAACI,GAAD,OAAW,EAAKhF,UAAS,SAAAqC,GAC1C,IAAI2H,EAAYzU,IAAU0U,SAAS5H,EAAMvL,UACzC,OAAIkO,IAAUgF,EACL,CAAEE,cAAe,GACd,CAAEA,cAAelF,OAtEZ,EAyEnBH,iBAAmB,SAAChP,GAAD,OAAmB,EAAKmK,SAAS,CAAEnK,mBAvEpDsU,cACIjX,EAAMkX,gBACR,EAAK/H,MAAQnP,EAAMkX,gBAEnB,EAAK/H,MAAQiH,EAAqBe,kBANnB,E,iEA8EjB,GAFIvM,KAAK5K,MAAMkX,iBAAmBtM,KAAKuE,MAAMjI,KAAO0D,KAAK5K,MAAMkX,gBAAgBhQ,IAC7E0D,KAAKkC,SAASlC,KAAK5K,MAAMkX,iBACvBtM,KAAK5K,MAAM4M,SAAU,CAEvB,IAAIuC,EAAQ0H,YAAUjM,KAAKuE,OAE3B,UADOA,EAAM3C,uBACT5B,KAAKuE,MAAMjI,GACbhF,IAAkBkV,gBAAgBjI,OAC7B,CACL,IAAIjI,EAAKhF,IAAkBmV,aAAalI,GACxCvE,KAAKkC,SAAS,CAAE5F,W,+BAIZ,IAAD,WAC8B0D,KAAK5K,MAApCuG,EADC,EACDA,OAAQoG,EADP,EACOA,SAAUC,EADjB,EACiBA,SACpB3K,EAAY2I,KAAKuE,MAFd,EAGkDvE,KAAKuE,MAAxD3M,EAHC,EAGDA,aAAcoB,EAHb,EAGaA,SAAU4I,EAHvB,EAGuBA,uBAC1BE,EAAgBrK,IAAUC,eAAesI,KAAKuE,OAC9CmI,EAAoB,iCACtB,cAACrF,EAAA,EAAD,CAAOxN,IAAKpC,IAAUqC,SAASlC,GAAe1C,UAAU,0BAA0ByS,eAAa,IAC/F,qBAAIzS,UAAU,WAAd,cAA2BuC,IAAUuC,QAAQpC,GAA7C,UAGF,OAAQ,eAACyL,EAAA,EAAD,CAAMjK,GAAG,cAAcpD,KAAK,YAA5B,UACN,cAACqN,EAAA,EAAKhK,OAAN,UACE,eAAC+J,EAAA,EAAD,WACE,cAACL,EAAA,EAAD,CAAKxJ,GAAI,OAAT,SAEGyI,EAAW,eAAC2K,EAAA,EAAD,WACV,eAACrD,EAAA,EAAD,WACE,cAACsD,EAAA,EAAD,CAAgB/Q,GAAIyH,IAApB,SACGoJ,IAEH,cAACpD,EAAA,EAAS/S,KAAV,CAAesF,GAAIqP,GAAnB,SACGzT,IAAUoV,sBAAsBnW,KAAI,SAAAoW,GAAO,OAC1C,cAACxD,EAAA,EAAS9S,KAAV,CAA6BC,QAAS,kBAAM,EAAKkV,gBAAgBmB,IAAjE,SACE,iCACE,cAACzF,EAAA,EAAD,CAAOxN,IAAKpC,IAAUqC,SAASgT,GAAU5X,UAAU,oBAAoByS,eAAa,IACpF,qBAAIzS,UAAU,WAAd,UAA0BuC,IAAUuC,QAAQ8S,GAA5C,WAHgBA,WAQ1B,eAAC5D,EAAA,EAAD,CAAgBrN,GAAI8Q,IAAaxD,MAC/B,qBAAIjU,UAAU,WAAd,UAA0BuC,IAAUsV,cAAc/T,GAAlD,OADF,UAGE,cAACsQ,EAAA,EAASC,SAAV,UACE,+DAED9R,IAAUuV,eAAetW,KAAI,SAAAuW,GAAM,OAClC,cAAC3D,EAAA,EAAS9S,KAAV,CAA4BC,QAAS,kBAAM,EAAKsV,YAAYkB,IAA5D,SACE,+BAAMxV,IAAUsV,cAAcE,GAA9B,QADkBA,YAIT,iCAAOP,EAAP,SAAgCjV,IAAU8C,qBAAqByF,KAAKuE,YAGvF,cAACxB,EAAA,EAAD,CAAK7N,UAAU,YAAf,SACG8M,EAAW,eAACiE,EAAA,EAAD,WACV,cAACA,EAAA,EAAWC,QAAZ,UACE,eAACD,EAAA,EAAWE,KAAZ,WAAiB,cAAC,IAAD,CAAiBlR,KAAMiY,MAAxC,aAEF,cAACC,EAAA,EAAD,CAAavH,YAAY,OACvBrI,MAAOyC,KAAKuE,MAAM1M,KAClBuV,SAAU,SAACtM,GAAD,OAAO,EAAKoB,SAAS,CAAErK,KAAMiJ,EAAEqE,OAAO5H,cAGlD,cAAC8F,EAAA,EAAKgK,MAAN,CAAYnY,UAAU,yBAAtB,SAA+C,+BAAO8K,KAAKuE,MAAM1M,WAGpEkK,EAAW,cAACgB,EAAA,EAAD,CAAKxJ,GAAG,OAAR,SACV,eAACoT,EAAA,EAAD,WACE,cAACrJ,EAAA,EAAD,CAAQnN,QAAQ,UAAUV,UAAWmM,EAAwBnL,QAAS,kBAAM,EAAKyL,SAAS,CAAEN,wBAAwB,KAApH,SACE,6DAEF,cAAC0B,EAAA,EAAD,CAAQnN,QAAQ,OAAOV,SAAUmM,EAAwBnL,QAAS,kBAAM,EAAKyL,SAAS,CAAEN,wBAAwB,KAAhH,SACE,6EAGG,KACT,cAACmB,EAAA,EAAD,CAAKxJ,GAAG,OAAR,SACE,cAAC+J,EAAA,EAAD,CAAQnN,QAAQ,SAASM,QAAO,UAAEuJ,KAAK5K,aAAP,aAAE,EAAYkY,QAA9C,SACE,cAAC,IAAD,CAAiBrY,KAAMsY,eAI/B,cAAClK,EAAA,EAAKzJ,KAAN,UACE,eAAC,EAAI0G,UAAL,CAAekN,iBAAkBzL,EAAW,eAAiB,YAA7D,UACE,eAAC0L,EAAA,EAAD,CAAKtX,QAAQ,QAAQjB,UAAU,YAA/B,UACE,cAACuY,EAAA,EAAIjX,KAAL,UACE,cAACiX,EAAA,EAAI3R,KAAL,CAAU8C,SAAS,YAAnB,yBAEDmD,EAAW,cAAC0L,EAAA,EAAIjX,KAAL,UACV,cAACiX,EAAA,EAAI3R,KAAL,CAAU8C,SAAS,eAAnB,6BACY,KACd,cAAC6O,EAAA,EAAIjX,KAAL,UACE,cAACiX,EAAA,EAAI3R,KAAL,CAAU8C,SAAS,YAAnB,SAAgCmD,EAAW,oBAAsB,gBAEnE,cAAC0L,EAAA,EAAIjX,KAAL,UACE,eAACiX,EAAA,EAAI3R,KAAL,CAAU8C,SAAS,SAASnJ,UAAUiY,EAAtC,qBAAsF,cAACjJ,EAAA,EAAD,CAAOtO,QAAQ,UAAf,sBAExF,cAACsX,EAAA,EAAIjX,KAAL,UACE,eAACiX,EAAA,EAAI3R,KAAL,CAAU8C,SAAS,OAAOnJ,UAAQ,EAAlC,kBAAwC,cAACgP,EAAA,EAAD,CAAOtO,QAAQ,UAAf,yBAG5C,eAAC,EAAIoK,QAAL,WACE,cAAC,EAAIC,KAAL,CAAU5B,SAAS,YAAnB,SACE,cAACiI,GAAD,aACE3E,SAAUlC,KAAK0L,YACftB,YAAapK,KAAKoK,YAClBtD,iBAAkB9G,KAAK8G,iBACvBC,iBAAkB/G,KAAK+G,kBACnB,CAAE1P,YAAW2K,WAAUF,gBAAeC,gBAG9C,cAAC,EAAIvB,KAAL,CAAU5B,SAAS,YAAnB,SACE,cAAC,GAAD,2BAA2B,CAAEvH,YAAWyK,gBAAeE,aAAvD,IAAmEE,SAAUlC,KAAK0L,iBAEnF3J,EAAW,cAAC,EAAIvB,KAAL,CAAU5B,SAAS,eAAnB,SACV,cAAC,GAAD,eAA2B,CAAEvH,YAAW0K,WAAUD,gBAAeE,WAAUC,YAAajC,KAAKyL,0BACjF,KACd,cAAC,EAAIjL,KAAL,CAAU5B,SAAS,SAAnB,SACE,cAAC,GAAD,eAAyB,CAAEvH,YAAW0K,WAAUD,gBAAeE,wBAKtErG,GAAU,cAAC0H,EAAA,EAAKzH,OAAN,UACRD,W,GA9MyCwB,IAAMY,WAAnCyN,GAUZmC,aAAe,CACpB9V,KAAM,GACND,aAAc,GACdoB,SAAU,KACVoT,cAAe,EACfwB,kBAAmB,GACnB/L,qBAAsB,GACtBmK,kBAAmB,GACnBlU,OAAQ,CACNS,IAAK,GACLS,SAAU6U,IAAgB,GAC1BrT,YAAa,EACb6N,gBAAiB,EACjBG,eAAgB,EAChBlT,eAAgB,GAElByC,cAAe,EACf6J,wBAAwB,GA3BP4J,GA6BZM,gBAAkB,SAAClU,GACxB,IAAIE,EAASmU,YA9BIT,GA8BWmC,aAAa7V,QAEzC,OADAA,EAAOS,IAAMqC,OAAO/D,KAAKwB,IAAOmR,iBAAiB/R,IAAUU,iBAAiBP,KAAgB,GACrFE,GAhCU0T,GAmCZe,gBAAkB,WACvB,IAAIhI,EAAQ0H,YAAUT,GAAqBmC,cAM3C,OAJApJ,EAAM3M,aAAegU,YAA0BnU,IAAUoV,uBACzDtI,EAAM1M,KAAO+T,YAA0BnU,IAAUoU,UAAUtH,EAAM3M,eAEjE2M,EAAMzM,OAzCW0T,GAyCGM,gBAAgBvH,EAAM3M,cACnC2M","file":"static/js/2.3e9640ac.chunk.js","sourcesContent":["import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp: faTint,\r\n  hp_: faTint,\r\n  atk: faFistRaised,\r\n  atk_: faFistRaised,\r\n  def: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, Button, Dropdown } from 'react-bootstrap';\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (selectedConditional.condition + (selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\"))\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown disabled={disabled}>\r\n      <Dropdown.Toggle size=\"sm\">\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map(condial =>\r\n          <React.Fragment key={condial.condition}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown disabled={disabled}>\r\n      <Dropdown.Toggle size=\"sm\">\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport Stat from '../Stat';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nexport default function CharacterCard(props) {\r\n  let { characterId } = props\r\n  let character = CharacterDatabase.getCharacter(characterId)\r\n  if (!character) return null;\r\n  let build = Character.calculateBuild(character)\r\n  let { setToSlots } = build\r\n\r\n  let { characterKey, name, weapon, constellation } = character\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponName = Weapon.getWeaponName(weapon.key)\r\n  let weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\r\n  let weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\r\n  let weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const statkeys = [\"hp\", \"atk\", \"def\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\",]\r\n  return (<Card className={props.cardClassName} bg={props.bg ? props.bg : \"darkcontent\"} text=\"lightfont\">\r\n    <Card.Header className=\"pr-2\">\r\n      {props.header ? props.header : <Row className=\"no-gutters\">\r\n        <Col >\r\n          <h6><b>{name}</b></h6>\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={() => props?.onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>\r\n            <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => props?.onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>\r\n          </span>\r\n        </Col>\r\n      </Row>}\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={Character.getThumb(characterKey)} className=\"h-100 w-auto my-n1\" rounded />\r\n        </Col>\r\n        <Col>\r\n          <h4>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h4>\r\n          <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n          <span>{`Lvl. ${Character.getLevelWithOverride(character)} C${constellation}`}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {Object.entries(Artifact.getArtifactSetEffects(setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = Artifact.getArtifactSetName(key)\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = build.finalStats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {props.footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        selectedCharacterId: characterId\r\n      }}>\r\n        Generate Builds\r\n        </Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import React, { useState } from 'react';\r\nimport { Accordion, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { StatIconEle } from '../../Components/StatIcon';\r\nimport Stat from \"../../Stat\";\r\nimport ArtifactConditionals from '../../Util/ArtifactConditionals';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane(props) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  let { character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState } = props\r\n  let { character } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  let eleKey = Character.getElementalKey(characterKey)\r\n  const statKeys = [\"hp\", \"atk\", \"def\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"crit_multi\", \"ener_rech\", \"heal_bonu\", \"phy_dmg\", \"phy_atk\",]\r\n  statKeys.push(`${eleKey}_ele_dmg`)\r\n  statKeys.push(`${eleKey}_ele_atk`)\r\n\r\n  let otherStatKeys = [\"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg\", \"phy_res\", \"norm_atk_dmg\", \"char_atk_dmg\", \"skill_dmg\", \"burst_dmg\"]\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  otherStatKeys = otherStatKeys.filter(key => !statKeys.includes(key))\r\n\r\n  const displayStats = (statKey) => {\r\n    let statVal = Character.getStatValueWithOverride(character, statKey)\r\n    let unit = Stat.getStatUnit(statKey)\r\n    let buildDiff = (build?.finalStats?.[statKey] || 0) - statVal\r\n\r\n    return <Col xs={12} md={6} lg={4} key={statKey}>\r\n      <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n      <span className={`float-right ${(editable && Character.hasOverride(character, statKey)) ? \"text-warning\" : \"\"}`}>\r\n        {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n        {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> {buildDiff > 0 && \"+\"}{buildDiff?.toFixed(Stat.fixedUnit(statKey)) + unit}</span> : null}\r\n      </span>\r\n    </Col>\r\n  }\r\n  const displayNewBuildDiff = (statKey) => {\r\n    let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n    let unit = Stat.getStatUnit(statKey)\r\n    let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n    return <Col xs={12} md={6} lg={4} key={statKey}>\r\n      <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n      <span className={`float-right ${(editable && Character.hasOverride(character, statKey)) ? \"text-warning\" : \"\"}`}>\r\n        {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n        {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 ? \"+\" : \"\"}{buildDiff?.toFixed(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n      </span>\r\n    </Col>\r\n  }\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState(state =>\r\n    ({ artifactConditionals: ArtifactConditionals.setConditional(state.artifactConditionals, setKey, setNumKey, conditionalNum) }))\r\n\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Other Stats`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ? statKeys.map(displayNewBuildDiff) : statKeys.map(displayStats)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {(newBuild && compareAgainstEquipped) ? otherStatKeys.map(displayNewBuildDiff) : otherStatKeys.map(displayStats)}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button size=\"sm\" onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getArtifactSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getArtifactSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getArtifactSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ArtifactConditionals.getConditionalNum(artifactConditionals, setKey, setNumKey)\r\n                            let conditionalStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n                            if (conditionalStats) {\r\n                              if (!setStats) setStats = {}\r\n                              Object.entries(conditionalStats).forEach(([statKey, val]) =>\r\n                                setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                            }\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getArtifactSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Object.values(build.artifactIds).map(artid =>\r\n            artid ? <Col sm={6} lg={4} key={artid} className=\"mb-2\">\r\n              <ArtifactCard artifactId={artid} forceUpdate={forceUpdate} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Button, InputGroup, OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nfunction StatInput(props) {\r\n  let { value, placeholder, defaultValue, onValueChange, percent, ...restProps } = props\r\n  return (<InputGroup {...restProps}>\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{props.name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>)\r\n}\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport StatIcon, { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character: { characterKey, constellation }, editable, setOverridelevel, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getLevelWithOverride(props.character)\r\n  return <Row>\r\n    <Col xs={12} lg={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={setOverridelevel} value={level} />\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Changes the display level. Cosmetic only.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {Assets.characters?.[characterKey]?.constellation?.map((con, i) =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={con} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} lg={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCard {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character: { characterKey, weapon }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<h6 className=\"d-inline mb-0\">{weaponPassiveName}</h6>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Assets.weapons[weapon.key]} className=\"w-100 h-auto\" thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats)}</p>\r\n            <Row>\r\n              <Col xs={12} md={6}>\r\n                <h5>ATK: {weaponDisplayMainVal}</h5>\r\n              </Col>\r\n              {subStatKey && <Col xs={12} md={6}>\r\n                <h5>{Stat.getStatName(subStatKey)}: {weaponDisplaySubVal}{Stat.getStatUnit(subStatKey)}</h5>\r\n              </Col>}\r\n            </Row>\r\n            {<Row>\r\n              {(conditionalStats || weaponBonusStats) && <Col xs={12}><h6 className=\"mb-0\">Bonus Stats:</h6></Col>}\r\n              {weaponBonusStats && Object.entries(weaponBonusStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"bonu\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n              {conditionalStats && Object.entries(conditionalStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"cond\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n            </Row>}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  const statKeys = [\"hp\", \"atk\", \"def\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg\", \"char_atk_dmg\", \"skill_dmg\", \"burst_dmg\", \"skill_crit_rate\", \"burst_crit_rate\", \"crit_multi\", \"dmg\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let { editable, character, setOverride, equippedBuild, newBuild } = props\r\n  let { character: { compareAgainstEquipped } } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  const displayStats = (statKey) => {\r\n    let statVal = Character.getStatValueWithOverride(character, statKey)\r\n    let unit = Stat.getStatUnit(statKey)\r\n    let buildDiff = (build?.finalStats?.[statKey] || 0) - statVal\r\n    return <Col xs={12} lg={6} key={statKey}>\r\n      <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n      <span className={`float-right ${(editable && Character.hasOverride(character, statKey)) ? \"text-warning\" : \"\"}`}>\r\n        {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n        {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> {buildDiff > 0 && \"+\"}{buildDiff?.toFixed(Stat.fixedUnit(statKey)) + unit}</span> : null}\r\n      </span>\r\n    </Col>\r\n  }\r\n  const displayNewBuildDiff = (statKey) => {\r\n    let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n    let unit = Stat.getStatUnit(statKey)\r\n    let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n    return <Col xs={12} lg={6} key={statKey}>\r\n      <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n      <span className={`float-right ${(editable && Character.hasOverride(character, statKey)) ? \"text-warning\" : \"\"}`}>\r\n        {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n        {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n      </span>\r\n    </Col>\r\n  }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {statKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}><StatOverrideInput {...props} {...{ statKey, icon: StatIcon[statKey] }} /></Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ? statKeys.map(displayNewBuildDiff) : statKeys.map(displayStats)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}><StatOverrideInput {...props} {...{ statKey, icon: StatIcon[statKey] }} /></Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ? otherStatKeys.map(displayNewBuildDiff) : otherStatKeys.map(displayStats)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ? miscStatkeys.map(displayNewBuildDiff) : miscStatkeys.map(displayStats)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n\r\n\r\nfunction StatOverrideInput(props) {\r\n  let { character: { characterKey, levelKey }, statKey, icon, setOverride } = props\r\n  return <StatInput\r\n    className=\"mb-2\"\r\n    name={<span>{icon && <FontAwesomeIcon icon={icon} className=\"fa-fw\" />} {Stat.getStatName(statKey)}</span>}\r\n    placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n    value={Character.getStatValueWithOverride(props.character, statKey)}\r\n    percent={false}\r\n    onValueChange={(value) => setOverride(statKey, value)}\r\n    defaultValue={Character.getBaseStatValue(characterKey, levelKey, statKey)}\r\n  />\r\n}\r\n","import { Image, Row } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\n//TODO\r\nfunction CharacterTalentPane(props) {\r\n  let { character: { characterKey } } = props\r\n  let talent = Assets.characters?.[characterKey]?.talent\r\n  return <Row>\r\n    {talent && Object.entries(talent).map(([key, img]) => \r\n      <Image src={img} key={key} />\r\n    )}\r\n\r\n  </Row>\r\n}\r\nexport default CharacterTalentPane","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map(child => <Col xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterToEdit)\r\n      this.state = props.characterToEdit\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    overrideLevel: 0,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey) })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey, baseStatOverrides: {} })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = deepClone(state.baseStatOverrides)\r\n    let baseStatVal = Character.getBaseStatValue(this.state.characterKey, this.state.levelKey, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n  setOverridelevel = (level) => this.setState(state => {\r\n    let baseLevel = Character.getLevel(state.levelKey)\r\n    if (level === baseLevel)\r\n      return { overrideLevel: 0 }\r\n    else return { overrideLevel: level }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.characterToEdit && this.state.id !== this.props.characterToEdit.id)\r\n      this.setState(this.props.characterToEdit)\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className=\"thumb-small my-n1\" roundedCircle />\r\n                        <h6 className=\"d-inline\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getLevelWithOverride(this.state)}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant=\"success\" disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artiact Stats</small>\r\n              </Button>\r\n              <Button variant=\"info\" disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={this.props?.onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\"}>Talents <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setOverridelevel={this.setOverridelevel}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n"],"sourceRoot":""}