{"version":3,"sources":["../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","Components/CustomFormControl.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","Components/ConditionalSelector.js","Artifact/ArtifactCard.js","Artifact/PercentBadge.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/StatDisplay.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js"],"names":["useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","FloatFormControl","placeholder","onValueChange","disabled","useState","focus","setFocus","type","className","toString","onChange","e","target","parseFloat","onFocus","onBlur","IntFormControl","parseInt","resolveContainerRef","ref","_ref","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","ConditionalSelector","props","conditional","conditionalNum","setConditional","defEle","Array","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","map","condial","i","Fragment","keys","v","stack","tempcount","icon","faCheckSquare","faSquare","ArtifactCard","artifactId","artifactObj","forceUpdate","onEdit","onDelete","assumeFull","art","ArtifactDatabase","getArtifact","setKey","slotKey","numStars","level","mainStatKey","substats","location","lock","currentEfficiency","maximumEfficiency","locationChar","CharacterDatabase","getCharacter","locationName","name","mainStatLevel","assFullColor","mainStatVal","Artifact","getMainStatValue","Stat","getStatUnit","artifactValid","every","sstat","key","rolls","length","equipOnChar","charId","equipArtifactOnChar","border","bg","Header","xs","md","src","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Body","Title","getSetName","stars","getStatName","stat","numRolls","efficiency","effOpacity","statName","toFixed","style","opacity","percent","valid","Footer","Object","entries","getCharacterDatabase","id","char","placement","overlay","pointerEvents","updateArtifact","faLock","faLockOpen","Boolean","faEdit","faTrashAlt","PercentBadge","children","badgeColor","isNaN","Math","floor","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","React","createElement","TabContext","Provider","SelectableContext","TabContent","forwardRef","bsPrefix","_ref$as","as","Component","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","_extends","classNames","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","in","displayName","Tab","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","Error","Container","Content","Pane","createContext","useAccordionToggle","contextEventKey","AccordionContext","AccordionToggle","accordionOnClick","AccordionCollapse","Collapse","Children","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","_objectWithoutProperties","source","excluded","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","DisplayStats","statVal","statKey","character","build","editable","otherProps","buildVal","finalStats","buildDiff","originalVal","Character","getStatValueWithOverride","diff","diffText","fixedUnit","hasOverride","Col","StatIconEle","DisplayNewBuildDiff","equippedBuild","newBuild","unit","CharacterArtifactPane","characterKey","compareAgainstEquipped","artifactConditionals","setState","showOther","setShowOther","artifactsAssumeFull","statKeys","getDisplayStatKeys","displayStatProps","displayNewBuildProps","formulaKeys","getPrintableFormulaStatKeyList","GetDependencies","Row","Card","Button","xl","printStat","printFormula","modifiers","equipArtifacts","artifactIds","Alert","sm","lg","getSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","ConditionalsUtil","getConditionalNum","srcKey","srcKey2","getConditionalStats","forEach","val","conditionalElement","cnum","state","setStateArtifactConditional","Badge","getSetEffectText","getSlotKeys","StatInput","prependEle","defaultValue","restProps","InputGroup","Prepend","Text","Append","undefined","OverlayTrigger","Tooltip","faUndo","CharacterOverviewPane","constellation","setOverride","setConstellation","editLevel","setEditLevel","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","getName","Image","Assets","elements","weaponTypes","getStar","colored","clamp","getLevel","levelKey","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","refineIndex","conditionalStats","getWeaponConditionalStat","getWeaponConditional","conditionalEle","faQuoteLeft","getWeaponImg","getWeaponRarity","DropdownButton","title","getWeaponName","reverse","star","arr","Dropdown","ItemText","getWeaponsOfType","filter","rarity","weaponObj","Divider","getLevelName","LevelNameData","faGavel","getWeaponPassiveDescription","getWeaponDescription","editingOther","SetEditingOther","additionalKeys","displayStatKeys","push","editStatKeys","otherStatKeys","getElementalKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","CharacterSpecializedStatKey","getStatNameRaw","CharacterTalentPane","dmgMode","ascension","getAscension","skillDisplayProps","ContextAwareToggle","callback","currentEventKey","decoratedOnClick","expanded","faWindowMinimize","faWindowMaximize","ToggleButtonGroup","ToggleButton","href","rel","eleKey","immunityStatKey","elementImmunity","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","autoInfused","statsDisplayKeys","ReactionDisplay","tKey","tText","SkillDisplayCard","talentKey","subtitle","getTalent","asc","enabled","onClickTitle","ReactionComponents","superconduct_dmg","electro","cryo","electrocharged_dmg","hydro","overloaded_dmg","pyro","swirl_dmg","anemo","shatter_dmg","information","faQuestionCircle","crystalize_dmg","geo","reactionMode","charEleKey","eleInterArr","ElementToReactionKeys","includes","Ele","talentLimits","header","getTalentLevelKey","talentLvlKey","levelBoost","infuseBtn","getElementalName","tLvl","talentLevelKeys","statsEle","talentStats","getTalentStats","statList","index","ListGroup","getTalentImg","getTalentName","Subtitle","getTalentDocument","section","talentText","fields","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","fromEntries","getTalentConditionalFields","condField","FieldDisplay","field","fieldText","fieldVariant","fieldBasic","basicVal","fieldVal","finalVal","fixedVal","fixed","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","child","CharacterDisplayCard","forceUpdateComponent","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","DatabaseInitAndVerify","characterId","getInitialState","Promise","all","getCharacterDataImport","getWeaponDataImport","getDataImport","then","deepClone","updateCharacter","addCharacter","footer","onClose","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","faTimes","defaultActiveKey","Nav","Link","getCDataObj","talent","skill","initialState","equippedArtifacts","WeaponLevelKeys","auto","burst","defaultProps","ListGroupItem","action","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","horizontal","horizontalVariant","initialBsPrefix","AbstractNav"],"mappings":"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","file":"static/js/12.b4a2ae5e.chunk.js","sourcesContent":["import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst FloatFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseFloat(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\n\r\nconst IntFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseInt(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\nexport {\r\n  FloatFormControl,\r\n  IntFormControl\r\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, artifactObj, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId && !artifactObj) return null;\r\n  let art = artifactObj ? artifactObj : ArtifactDatabase.getArtifact(artifactId);\r\n  if (!art) return null;\r\n  let { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location, lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  let locationChar = CharacterDatabase.getCharacter(location)\r\n  let locationName = locationChar ? locationChar.name : \"Inventory\"\r\n  let mainStatLevel = assumeFull ? numStars * 4 : level\r\n  let assFullColor = assumeFull && level !== numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\r\n  let artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\r\n  const equipOnChar = (charId) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charId)\r\n    forceUpdate?.()\r\n  }\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\r\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let numRolls = stat?.rolls?.length || 0\r\n          let efficiency = stat?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge percent={currentEfficiency} valid={artifactValid}>\r\n          {currentEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge percent={maximumEfficiency} valid={artifactValid}>\r\n          {maximumEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\">{locationName}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar()}>Inventory</Dropdown.Item>\r\n              {Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n                <Dropdown.Item key={id} onClick={() => equipOnChar(id)}>\r\n                  {char.name}\r\n                </Dropdown.Item>)}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><span>Location: {locationName}</span></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={location}\r\n                  style={location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    lock = !lock\r\n                    ArtifactDatabase.updateArtifact(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(lock || location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Col } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\nfunction DisplayStats({ statKey, character, build, editable, ...otherProps }) {\r\n  let buildVal = build?.finalStats?.[statKey] || 0\r\n  let statVal, buildDiff = null\r\n  if (typeof buildVal === \"string\") {\r\n    statVal = <span>{buildVal}</span>\r\n  } else {\r\n    let originalVal = Character.getStatValueWithOverride(character, statKey)\r\n    if (statKey === \"hp_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"hp_base\")\r\n    else if (statKey === \"def_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"def_base\")\r\n    else if (statKey === \"atk_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"atk_base\") + Character.getStatValueWithOverride(character, \"atk_weapon\")\r\n\r\n    let diff = buildVal - originalVal\r\n    let diffText = (diff?.toFixed?.(Stat.fixedUnit(statKey)) || diff) + Stat.getStatUnit(statKey)\r\n    if (diff < 0) buildDiff = <span className=\"text-success\">{diffText}</span>\r\n    else if (diff > 0) buildDiff = <span className=\"text-success\"> +{diffText}</span>\r\n\r\n    if (originalVal || !diff) statVal = <span className={editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}>{(originalVal?.toFixed?.(Stat.fixedUnit(statKey)) || originalVal) + Stat.getStatUnit(statKey)}</span>\r\n  }\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className=\"float-right text-right\">{statVal}{buildDiff}</span>\r\n  </Col>\r\n}\r\nconst DisplayNewBuildDiff = ({ statKey, character, equippedBuild, newBuild, editable, ...otherProps }) => {\r\n  let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right ${editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed?.(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed?.(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nexport {\r\n  DisplayStats,\r\n  DisplayNewBuildDiff,\r\n}","import React, { useState } from 'react';\r\nimport { Accordion, Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { DisplayNewBuildDiff, DisplayStats } from '../../Components/StatDisplay';\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from '../../StatDependency';\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState }) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(characterKey)\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  const formulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build.finalStats, statKeys))\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Calculations`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ?\r\n                  statKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                  statKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {formulaKeys.map(key => <Col key={key} xs={12} className=\"mt-2\">\r\n                    <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                      <Card.Header className=\"p-2\">\r\n                        {Stat.printStat(key, build.finalStats)}\r\n                      </Card.Header>\r\n                      <Card.Body className=\"p-2\">\r\n                        <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  )}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n              {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Artifact.getSlotKeys().map(slotKey =>\r\n            build.artifactIds[slotKey] ? <Col sm={6} lg={4} key={build.artifactIds[slotKey]} className=\"mb-2\">\r\n              <ArtifactCard artifactId={build.artifactIds[slotKey]} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport { DisplayNewBuildDiff, DisplayStats } from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"char_level\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={(val) => setOverride(\"char_level\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"char_level\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats, character)}</p>\r\n            <Row>\r\n              <Col xs={12} md={6}>\r\n                <h5>ATK: {weaponDisplayMainVal}</h5>\r\n              </Col>\r\n              {subStatKey && <Col xs={12} md={6}>\r\n                <h5>{Stat.getStatName(subStatKey)}: {weaponDisplaySubVal}{Stat.getStatUnit(subStatKey)}</h5>\r\n              </Col>}\r\n            </Row>\r\n            {<Row>\r\n              {(conditionalStats || weaponBonusStats) && <Col xs={12}><h6 className=\"mb-0\">Bonus Stats:</h6></Col>}\r\n              {weaponBonusStats && Object.entries(weaponBonusStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"bonu\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n              {conditionalStats && Object.entries(conditionalStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"cond\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n            </Row>}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  let { editable, character, character: { compareAgainstEquipped }, setOverride, equippedBuild, newBuild } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  let additionalKeys = [\"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const displayStatKeys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp_base\", \"hp\", \"hp_\", \"atk_base\", \"atk\", \"atk_\", \"def_base\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\", \"skill_crit_rate\", \"burst_crit_rate\", \"all_dmg_bonus\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              displayStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              displayStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              otherStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ?\r\n            miscStatkeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n            miscStatkeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n","import { faCheckSquare, faQuestionCircle, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, ToggleButton, ToggleButtonGroup, Tooltip } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation, dmgMode }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  //choose which one to display stats for\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button\r\n        // style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"norm_atk\", \"char_atk\", \"plunge\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(Character.getTalentStatKey(\"char_atk\", character, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    //search for dependency\r\n    return Stat.getPrintableFormulaStatKeyList(GetDependencies(build.finalStats, keys))\r\n  }\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <Accordion>\r\n        <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Options</span>\r\n                <small>Expand below to edit enemy details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ToggleButtonGroup type=\"radio\" value={dmgMode} name=\"dmgOptions\" onChange={(dmgMode) => setState({ dmgMode })}>\r\n                  <ToggleButton value=\"avg_dmg\">Avg. DMG</ToggleButton>\r\n                  <ToggleButton value=\"dmg\">Normal Hit, No Crit</ToggleButton>\r\n                  <ToggleButton value=\"crit_dmg\">Crit Hit DMG</ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Row className=\"mb-2\"><Col>\r\n                <Button variant=\"warning\" >\r\n                  <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                    To get the specific resistance values of enemies, please visit the wiki.\r\n                  </a>\r\n                </Button >\r\n              </Col></Row>\r\n              <Row>\r\n                <Col xs={12} xl={6} className=\"mb-2\">\r\n                  <StatInput\r\n                    name={<b>Enemy Level</b>}\r\n                    value={Character.getStatValueWithOverride(character, \"enemy_level\")}\r\n                    placeholder={Stat.getStatNameRaw(\"enemy_level\")}\r\n                    defaultValue={Character.getBaseStatValue(character, \"enemy_level\")}\r\n                    onValueChange={(val) => setOverride(\"enemy_level\", val)}\r\n                  />\r\n                </Col>\r\n                {[\"physical\", ...Character.getElementalKeys()].map(eleKey => {\r\n                  let statKey = eleKey === \"physical\" ? \"enemy_phy_res\" : `${eleKey}_enemy_ele_res`\r\n                  let immunityStatKey = eleKey === \"physical\" ? \"enemy_phy_immunity\" : `${eleKey}_enemy_ele_immunity`\r\n                  let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                  return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                        <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                      name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                      value={Character.getStatValueWithOverride(character, statKey)}\r\n                      placeholder={Stat.getStatNameRaw(statKey)}\r\n                      defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                      onValueChange={(val) => setOverride(statKey, val)}\r\n                      disabled={elementImmunity}\r\n                    />\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Formulas</span>\r\n                <small>Expand below to see calculation details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n              <Row>\r\n                {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\r\n                  <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                    <Card.Header className=\"p-2\">\r\n                      {Stat.printStat(key, build.finalStats)}\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-2\">\r\n                      <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                )}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {Character.getTalent(characterKey, \"sprint\", false) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_dmg: SuperConductCard,\r\n  electrocharged_dmg: ElectroChargedCard,\r\n  overloaded_dmg: OverloadedCard,\r\n  swirl_dmg: SwirlCard,\r\n  shatter_dmg: ShatteredCard,\r\n  crystalize_dmg: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey, reactionMode = \"none\" }, newBuild, equippedBuild, setState }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let charEleKey = Character.getElementalKey(characterKey)\r\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shatter_dmg\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shatter_dmg\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row>\r\n        <Col ><Row className=\"mb-n2\">\r\n          {eleInterArr.map(key => {\r\n            let Ele = ReactionComponents[key]\r\n            if (!Ele) return null\r\n            let val = build?.finalStats?.[key]\r\n            val = val?.toFixed?.(Stat.fixedUnit(key)) || val\r\n            return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele value={val} /></Col>\r\n          })}\r\n        </Row></Col>\r\n        <Col xs=\"auto\">\r\n          {[\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup\r\n            type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setState({ reactionMode: val === \"none\" ? null : val })}>\r\n            <ToggleButton className=\"p-2\" value={\"none\"}> <h6>No Elemental</h6> <h6>Interactions</h6></ToggleButton >\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Vaporize(Pyro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Pyro)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"hydro\" && <ToggleButton className=\"p-2\" value={\"hydro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Melt(Pyro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"cryo\" && <ToggleButton className=\"p-2\" value={\"cryo_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Pyro)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n          </ToggleButtonGroup>}\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"superconduct_dmg\")}</h5>\r\n    <h4 className=\"text-superconduct mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"electrocharged_dmg\")}</h5>\r\n    <h4 className=\"text-electrocharged mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"overloaded_dmg\")}</h5>\r\n    <h4 className=\"text-overloaded mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction SwirlCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"swirl_dmg\")}</h5>\r\n    <h4 className=\"text-swirl mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ value }) {\r\n  let information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"shatter_dmg\")}</h5>\r\n    <h4 className=\"text-shatter mb-0\">\r\n      <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"crystalize_dmg\")}</h5>\r\n    <h4 className=\"text-crystalize mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let { talentLvlKey = undefined, levelBoost = 0 } = Character.getTalentLevelKey(character, talentKey, constellation, true)\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n  if (typeof talentLvlKey === \"number\") {\r\n    if (editable) {\r\n      let setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        let talentLevelKeys = state.talentLevelKeys || {}\r\n        talentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let statsEle = null\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  if (talentStats) {\r\n    let statList = Object.entries(talentStats).map(([statKey, statVal], index) =>\r\n      typeof statVal === \"number\" && <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n        <div>\r\n          <span><b>{Stat.getStatName(statKey)}</b></span>\r\n          <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n        </div>\r\n      </ListGroup.Item>\r\n    ).filter(e => Boolean(e))//filter because modifiers cannot be displayed.\r\n    statsEle = Boolean(statList.length) && <Row><Col>\r\n      <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n        <ListGroup className=\"text-white\" variant=\"flush\">\r\n          {statList}\r\n        </ListGroup>\r\n      </Card>\r\n    </Col></Row>\r\n  }\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalStats = {}\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            //filter out modifiers from rendering\r\n            conditionalStats = Object.fromEntries(Object.entries(conditionalStats).filter(([key, _]) => key !== \"modifiers\"))\r\n            conditionalFields = Character.getTalentConditionalFields(conditional, conditionalNum, [])\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Col xs={12}>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {Object.entries(conditionalStats).map(([statKey, statVal], index) =>\r\n                  <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n                    <div>\r\n                      <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                      <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n                    </div>\r\n                  </ListGroup.Item>\r\n                )}\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i + (conditionalStats?.length || 0)} index={i + (conditionalStats?.length || 0)} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        }\r\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\r\n          <div className=\"mb-2\">{talentText}</div>\r\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n        </Col>{conditionalEle}</Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay(props) {\r\n  let { character, character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldVariant = field.variant || \"\"\r\n  if (typeof fieldVariant === \"function\")\r\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldBasic = field.basicVal\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats, character)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = field.value ? field.value : field.finalVal\r\n  if (typeof fieldVal === \"function\")\r\n    fieldVal = fieldVal?.(talentLvlKey, build.finalStats, character)\r\n  let fixedVal = field.fixed || 0\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.finalVal\r\n\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats, character)?.toFixed?.(fixedVal))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) || fieldVal}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}\r\n","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterId)\r\n      this.state = CharacterDatabase.getCharacter(props.characterId)\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    dmgMode: \"dmg\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey), reactionMode: null, autoInfused: false })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.characterId && this.state.id !== this.props.characterId)\r\n      this.setState(CharacterDatabase.getCharacter(this.props.characterId))\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"char_level\")}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && (Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\"}>Talents {(Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\" && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} setState={this.setSetState} setOverride={this.setOverride} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;"],"sourceRoot":""}