{"version":3,"sources":["Weapon/Weapon.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/StarDisplay.js","Components/CustomFormControl.js","Data/WeaponData.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/ConditionalSelector.js","../node_modules/react-bootstrap/esm/Badge.js","StatConstants.js","StatDependency.js","Data/CharacterData.js","Components/StatIcon.js","dbV2KeyMap.js","DatabaseUtil.js","Components/CharacterSelection.js","../node_modules/react-bootstrap/esm/ElementChildren.js","Character/CharacterDisplay/DamageOptionsAndCalculation.js","Artifact/ArtifactCard.js","Artifact/PercentBadge.js","Character/StatInput.js","Components/StatDisplay.js","../node_modules/react-bootstrap/esm/ToggleButton.js","Character/CharacterDisplay/StatDisplayComponent.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ToggleButtonGroup.js","TestPage/TestDisplay.js","Util/Util.js","Stat.js","Build/Build.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Character/Character.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Util/ConditionalsUtil.js","Data/ElementalData.js","Artifact/ArtifactDatabase.js","StatData.js"],"names":["Weapon","this","Error","getWeaponDataImport","WeaponDataImport","getLevelName","levelKey","defVal","LevelNameData","getLevelIndex","WeaponLevelKeys","indexOf","getWeaponName","weaponKey","WeaponData","name","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","refineIndex","charFinalStats","character","passiveDescription","getWeaponDescription","description","getWeaponConditional","conditional","getWeaponImg","img","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","getWeaponSubStatKey","subStatKey","getWeaponBonusStat","stats","getWeaponsOfType","weaponType","Object","fromEntries","entries","filter","getWeaponTypeName","WeaponTypeData","getWeaponTypeKeys","keys","getWeaponMainStatValWithOverride","weaponObj","overrideMainVal","key","getWeaponSubStatValWithOverride","overrideSubVal","getWeaponConditionalStat","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","objMultiplication","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","StarIcon","icon","faStar","Stars","stars","colored","className","Array","map","_","i","CustomFormControl","float","placeholder","value","onValueChange","disabled","allowEmpty","useState","focus","setFocus","props","type","toString","onChange","e","target","parseFloat","parseInt","onFocus","onBlur","aria-label","then","imp","default","_objectWithoutProperties","source","excluded","sourceKeys","length","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","ConditionalSelector","setConditional","defEle","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","Badge","React","forwardRef","_ref","ref","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","hitTypes","hit","avgHit","critHit","hitMoves","normal","charged","plunging","skill","burst","hitElements","ElementalData","transformativeReactions","overloaded","shattered","electrocharged","superconduct","swirl","amplifyingReactions","vaporize","melt","ReactionMatrix","crystalize","GetFormulaDependency","formula","dependency","Set","Proxy","get","prop","receiver","add","formulaKeyDependency","freeze","Formulas","GetDependencies","modifiers","StatData","dependencies","forEach","InsertDependencies","has","k","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","critRate_","critDMG_","enerRech_","stamina","CharacterSpecializedStatKey","StatIcon","characterHP","faTint","finalHP","hp_","hp","baseATK","faFistRaised","characterATK","finalATK","atk_","atk","characterDEF","faShieldAlt","finalDEF","def_","def","eleMas","faMagic","faDice","faDiceD20","faSync","heal_","faFirstAid","StatIconEle","statKey","changes","char_ele_key","char_level","hp_base","hp_final","atk_character_base","atk_base","atk_final","atk_weapon","def_base","def_final","phy_dmg_bonus","phy_res","anemo_ele_dmg_bonus","geo_ele_dmg_bonus","electro_ele_dmg_bonus","hydro_ele_dmg_bonus","pyro_ele_dmg_bonus","cryo_ele_dmg_bonus","anemo_ele_res","geo_ele_res","electro_ele_res","hydro_ele_res","pyro_ele_res","cryo_ele_res","ener_rech","crit_rate","crit_dmg","stam","heal_bonu","inc_heal","pow_shield","red_cd","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","norm_atk_dmg","char_atk_dmg","plunge_dmg","norm_atk_crit_dmg","char_atk_crit_dmg","plunge_crit_dmg","norm_atk_avg_dmg","char_atk_avg_dmg","plunge_avg_dmg","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","skill_dmg_bonus","burst_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_crit_rate","burst_crit_rate","anemo_skill_dmg","anemo_burst_dmg","anemo_skill_crit_dmg","anemo_burst_crit_dmg","anemo_skill_avg_dmg","anemo_burst_avg_dmg","geo_skill_dmg","geo_burst_dmg","geo_skill_crit_dmg","geo_burst_crit_dmg","geo_skill_avg_dmg","geo_burst_avg_dmg","electro_skill_dmg","electro_burst_dmg","electro_skill_crit_dmg","electro_burst_crit_dmg","electro_skill_avg_dmg","electro_burst_avg_dmg","hydro_skill_dmg","hydro_burst_dmg","hydro_skill_crit_dmg","hydro_burst_crit_dmg","hydro_skill_avg_dmg","hydro_burst_avg_dmg","pyro_skill_dmg","pyro_burst_dmg","pyro_skill_crit_dmg","pyro_burst_crit_dmg","pyro_skill_avg_dmg","pyro_burst_avg_dmg","cryo_skill_dmg","cryo_burst_dmg","cryo_skill_crit_dmg","cryo_burst_crit_dmg","cryo_skill_avg_dmg","cryo_burst_avg_dmg","phy_dmg","phy_crit_dmg","phy_avg_dmg","anemo_ele_dmg","anemo_ele_crit_dmg","anemo_ele_avg_dmg","geo_ele_dmg","geo_ele_crit_dmg","geo_ele_avg_dmg","electro_ele_dmg","electro_ele_crit_dmg","electro_ele_avg_dmg","hydro_ele_dmg","hydro_ele_crit_dmg","hydro_ele_avg_dmg","pyro_ele_dmg","pyro_ele_crit_dmg","pyro_ele_avg_dmg","cryo_ele_dmg","cryo_ele_crit_dmg","cryo_ele_avg_dmg","overload_dmg","overload_dmg_bonus","overload_multi","electrocharged_dmg","electrocharged_dmg_bonus","electrocharged_multi","superconduct_dmg","superconduct_dmg_bonus","superconduct_multi","burning_dmg","burning_dmg_bonus","swirl_dmg","swirl_dmg_bonus","swirl_multi","shatter_dmg","shatter_dmg_bonus","shatter_multi","crystalize_dmg","crystalize_dmg_bonus","melt_dmg_bonus","vaporize_dmg_bonus","pyro_vaporize_normal_dmg","pyro_vaporize_normal_crit_dmg","pyro_vaporize_normal_avg_dmg","pyro_vaporize_chraged_dmg","pyro_vaporize_chraged_crit_dmg","pyro_vaporize_chraged_avg_dmg","pyro_vaporize_plunge_dmg","pyro_vaporize_plunge_crit_dmg","pyro_vaporize_plunge_avg_dmg","pyro_vaporize_skill_dmg","pyro_vaporize_skill_crit_dmg","pyro_vaporize_skill_avg_dmg","pyro_vaporize_burst_dmg","pyro_vaporize_burst_crit_dmg","pyro_vaporize_burst_avg_dmg","pyro_vaporize_ele_dmg","pyro_vaporize_ele_crit_dmg","pyro_vaporize_ele_avg_dmg","hydro_vaporize_normal_dmg","hydro_vaporize_normal_crit_dmg","hydro_vaporize_normal_avg_dmg","hydro_vaporize_chraged_dmg","hydro_vaporize_chraged_crit_dmg","hydro_vaporize_chraged_avg_dmg","hydro_vaporize_plunge_dmg","hydro_vaporize_plunge_crit_dmg","hydro_vaporize_plunge_avg_dmg","hydro_vaporize_skill_dmg","hydro_vaporize_skill_crit_dmg","hydro_vaporize_skill_avg_dmg","hydro_vaporize_burst_dmg","hydro_vaporize_burst_crit_dmg","hydro_vaporize_burst_avg_dmg","hydro_vaporize_ele_dmg","hydro_vaporize_ele_crit_dmg","hydro_vaporize_ele_avg_dmg","pyro_melt_normal_dmg","pyro_melt_normal_crit_dmg","pyro_melt_normal_avg_dmg","pyro_melt_chraged_dmg","pyro_melt_chraged_crit_dmg","pyro_melt_chraged_avg_dmg","pyro_melt_plunge_dmg","pyro_melt_plunge_crit_dmg","pyro_melt_plunge_avg_dmg","pyro_melt_skill_dmg","pyro_melt_skill_crit_dmg","pyro_melt_skill_avg_dmg","pyro_melt_burst_dmg","pyro_melt_burst_crit_dmg","pyro_melt_burst_avg_dmg","pyro_melt_ele_dmg","pyro_melt_ele_crit_dmg","pyro_melt_ele_avg_dmg","cryo_melt_normal_dmg","cryo_melt_normal_crit_dmg","cryo_melt_normal_avg_dmg","cryo_melt_chraged_dmg","cryo_melt_chraged_crit_dmg","cryo_melt_chraged_avg_dmg","cryo_melt_plunge_dmg","cryo_melt_plunge_crit_dmg","cryo_melt_plunge_avg_dmg","cryo_melt_skill_dmg","cryo_melt_skill_crit_dmg","cryo_melt_skill_avg_dmg","cryo_melt_burst_dmg","cryo_melt_burst_crit_dmg","cryo_melt_burst_avg_dmg","cryo_melt_ele_dmg","cryo_melt_ele_crit_dmg","cryo_melt_ele_avg_dmg","enemy_phy_res","enemy_phy_res_multi","enemy_phy_immunity","anemo_enemy_ele_res","anemo_enemy_ele_res_multi","anemo_enemy_ele_immunity","geo_enemy_ele_res","geo_enemy_ele_res_multi","geo_enemy_ele_immunity","electro_enemy_ele_res","electro_enemy_ele_res_multi","electro_enemy_ele_immunity","hydro_enemy_ele_res","hydro_enemy_ele_res_multi","hydro_enemy_ele_immunity","pyro_enemy_ele_res","pyro_enemy_ele_res_multi","pyro_enemy_ele_immunity","cryo_enemy_ele_res","cryo_enemy_ele_res_multi","cryo_enemy_ele_immunity","ele_mas","amp_reaction_base_multi","enemy_level_multi","enemy_level","dmgModeToHitMode","avg_dmg","dmg","DatabaseInitAndVerify","dbVersion","getDatabaseVersion","localStorage","startsWith","loadFromLocalStorage","characterKey","equippedArtifacts","dbKey","getItem","id","dmgMode","rest","buildSetting","mainStat","stat","v2change","statFilters","hitMode","saveToLocalStorage","values","artid","art","location","removeItem","ArtifactDisplayState","filterMainStatKey","filterSubstats","charDBJustPopualted","CharacterDatabase","populateDatebaseFromLocalStorage","artDBJustPopualted","ArtifactDatabase","getArtifactDatabase","valid","artInSlotId","getArtifactIDFromSlot","slotKey","equipArtifact","Artifact","substatsValidation","numStars","keyMapping","setKey","mainStatKey","endsWith","replace","substats","obj","updateArtifact","chars","getCharacterDatabase","equippedArt","moveToNewLocation","artifactConditionals","cond","srcKey","srcKey2","updateCharacter","setDatabaseVersion","version","CharacterSelectionDropdownList","onSelect","getCharacterKeyList","sort","a","b","Character","getName","children","func","index","Children","child","isValidElement","ReactionToggle","reactionMode","setReactionMode","charEleKey","getElementalKey","eleInterArr","ElementToReactionKeys","includes","getWeaponTypeKey","push","defaultValue","val","src","HitModeToggle","setHitMode","DamageOptionsAndCalculation","setState","setOverride","newBuild","equippedBuild","build","ContextAwareToggle","eventKey","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","bg","Header","xs","r","Button","Collapse","Body","href","rel","xl","getStatValueWithOverride","Stat","getStatNameRaw","getBaseStatValue","getElementalKeys","eleKey","immunityStatKey","elementImmunity","prependEle","m","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","finalStats","autoInfused","weaponTypeKey","getPrintableFormulaStatKeyList","statsDisplayKeys","printStat","printFormula","ArtifactCard","artifactId","artifactObj","forceUpdate","onEdit","onDelete","assumeFull","lock","currentEfficiency","maximumEfficiency","mainStatLevel","assFullColor","mainStatVal","getMainStatValue","getStatUnit","artifactValid","every","sstat","rolls","equipOnChar","charKey","equipArtifactOnChar","border","md","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Title","getSetName","getStatName","numRolls","efficiency","effOpacity","statName","toFixed","style","opacity","percent","Footer","Divider","ckey","placement","overlay","pointerEvents","faLock","faLockOpen","Boolean","faEdit","faTrashAlt","PercentBadge","badgeColor","isNaN","Math","floor","StatInput","restProps","Prepend","Text","Append","undefined","faUndo","DisplayStatDiff","label","oldVal","fixed","unit","diff","oldText","diffText","StatDisplay","editable","invalid","fixedUnit","talentKey","sectionIndex","fieldIndex","field","getTalentField","labelVariant","getTalentFieldValue","hasOverride","noop","ToggleButton","checked","inputRef","_useState","focused","setFocused","handleFocus","useCallback","tagName","handleBlur","active","autoComplete","StatDisplayComponent","cardbg","fields","header","getTalentName","JSON","stringify","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","TabContext","Provider","SelectableContext","TabContent","decoratedBsPrefix","TabPane","_useTabContext","context","shouldTransition","makeEventKey","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","Tab","_React$Component","apply","arguments","_inheritsLoose","render","Container","Content","Pane","CharacterArtifactPane","artifactsAssumeFull","statKeys","getDisplayStatKeys","hasTalentPage","Row","Col","Card","equipArtifacts","artifactIds","Alert","sm","lg","getSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","getConditionalNum","getConditionalStats","conditionalElement","cnum","state","setStateArtifactConditional","getSetEffectText","getSlotKeys","CharacterOverviewPane","constellation","setConstellation","editLevel","setEditLevel","elementKey","Img","getCard","Image","getStar","InputGroup","clamp","getLevel","OverlayTrigger","Tooltip","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","StatItem","getStatVariant","WeaponStatsCard","title","mkey","modifier","reduce","accu","multiplier","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","conditionalStats","conditionalEle","faQuoteLeft","DropdownButton","reverse","star","arr","Dropdown","ItemText","faGavel","editingOther","SetEditingOther","additionalKeys","displayStatKeys","editStatKeys","otherStatKeys","ele","specializedStatKey","specializedStatVal","specializedStatUnit","isPercentSpecialStatSelect","displayNewBuildProps","getStatNamePretty","getStatNameWithPercent","CharacterTalentPane","ascension","getAscension","skillDisplayProps","ReactionDisplay","tKey","tText","SkillDisplayCard","subtitle","getTalent","asc","enabled","onClickTitle","ReactionComponents","superconduct_hit","electrocharged_hit","overloaded_hit","swirl_hit","shattered_hit","information","faQuestionCircle","crystalize_hit","Ele","modifiersToFields","mStatKey","formulaText","statsToFields","statVal","flat","talentLimits","talentLevelKeys","otherProps","infuseBtn","getElementalName","talentLvlKey","talentLvlKeyRaw","levelBoost","getTalentLevelBoost","tLvl","stateTalentLevelKeys","talentStats","getTalentStats","statsEle","ListGroup","FieldDisplay","getTalentImg","Subtitle","getTalentDocument","section","talentText","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","compareAgainstEquipped","fieldText","fieldVariant","fieldBasic","fieldVal","fixedVal","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","CharacterDisplayCard","forceUpdateComponent","setCharacterKey","getInitialState","char","getIntialWeapon","setLevelKey","baseStatOverrides","Promise","all","getCharacterDataImport","getDataImport","prevProps","deepClone","footer","onClose","tabName","calculateBuild","HeaderIconDisplay","getThumb","commonPaneProps","u","ButtonGroup","DropdownToggle","getAllCharacterKeys","getlevelNames","getlevelKeys","lvlKey","faTimes","defaultActiveKey","Nav","Link","initialState","auto","ToggleButtonGroup","controlledProps","getValues","concat","invariant","toggle","_child$props","childVal","childOnChange","cloneElement","chainFunction","inputVal","event","isActive","n","handleToggle","vertical","TestDisplay","getRandomElementFromArray","array","random","getRandomIntInclusive","min","max","ceil","data","parse","setItem","closeEnoughFloat","abs","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","multi","htmlStatsData","pretty","f","expand","statList","formulaKeys","FormulaText","newModifiersKeys","x","modifierText","options","statUnit","reactionMatrixElementRenderer","o","sign","disVal","powerText","heal_multi","enemyLevel_multi","res","move","assign","amplificative_dmg_","reaction","variants","baseMulti","transformative_dmg_","crystalize_eleMas_","crystalize_multi","calculateTotalBuildNumber","artifactsBySlot","setFilters","setKeys","filteredArtifactsBySlot","slotKeys","artifactsBySet","artifact","setCount","result","slotPerm","num","artifactSetPermutations","artifacts","skillKey","elemental","characterEle","getTalentStatKeyVariant","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","formulaDB","getCDataObj","formulaKey","tk","find","remove","getSpecializedStatKey","getSpeicalizedStatVal","characterObj","baseStat","getIndexFromlevelkey","elementalKey","getElementalKeysWithoutPhysical","constellationName","getTitles","titles","getSpecializedStat","specializeStat","thumbImg","cardImg","constIndex","talent","talents","talentBoost","boostEntry","document","getTalentDocumentSections","getTalentStatsAll","statsArr","getTalentConditional","sections","tempCond","infusable","basicKeys","transReactions","charFormulas","genericAvgHit","reactions","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","PreprocessFormulas","mergeStats","overrides","hasOwnProperty","specialStatKey","s","weaponSubKey","initiated","characterDatabase","isInvalid","getIdNameList","split","dchar","unequipArtifactOnSlot","equipArtifactBuild","clearDatabase","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","physical_dmg_","ele_dmg_","2","ArtifactSubStatsData","ArtifactSubstatsMinMax","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","getSubstatEfficiency","getArtifactEfficiency","errMsgs","some","currentNumOfRolls","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","maxPerRoll","getSubstatAllMax","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","icons","getSetEffectsObj","setEffects","artifactSetEffect","artArr","setNumKeys","setEffectText","getSlotName","getSlotIcon","getSlotMainStatKeys","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","_createForOfIteratorHelper","allowArrayLike","it","F","done","_e","err","normalCompletion","didErr","step","next","_e2","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","physical","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","const","characterLevel","weaponATK","dmg_","weakspotDMG_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","staminaDec_","staminaGlidingDec_","staminaChargedDec_","crystalize_dmg_","burning_dmg_","enemyLevel","enemyDEFRed_","pow","dependencyKeys","debug","constData","formulaList","tmp","constModifier","dynamicModifier","constFunc","dynamicFunc","funcIndicator","console","log","error","moveName","eleName","opt","typeName","reactionName"],"mappings":"mNAGqBA,EAEnB,aAAgB,GAAD,oBAAKC,gBAAgBD,EAAQ,MAAME,MAAM,2CAFrCF,EAIZG,oBAAsB,kBAAMC,KAJhBJ,EAKZK,aAAe,SAACC,GAAD,IAAWC,EAAX,uDAAoB,GAApB,OAA4BC,IAAcF,IAAaC,GAL1DP,EAMZS,cAAgB,SAACH,GAAD,OAAcI,IAAgBC,QAAQL,IAN1CN,EAQZY,cAAgB,SAACC,GAAD,MAAYN,EAAZ,uDAAqB,GAArB,OAA6B,UAAAO,IAAWD,UAAX,eAAuBE,OAAQR,GARhEP,EASZgB,gBAAkB,SAACH,GAAD,MAAYN,EAAZ,uDAAqB,EAArB,OAA4B,UAAAO,IAAWD,UAAX,eAAuBI,SAAUV,GATnEP,EAUZkB,qBAAuB,SAACL,GAAD,MAAYN,EAAZ,uDAAqB,GAArB,OAA6B,UAAAO,IAAWD,UAAX,eAAuBM,cAAeZ,GAV9EP,EAWZoB,4BAA8B,SAACP,EAAWQ,EAAaC,EAAgBC,GAAzC,QAAoDhB,EAApD,uDAA6D,GAA7D,OAAqE,UAAAO,IAAWD,UAAX,mBAAuBW,0BAAvB,sBAA4CH,EAAaC,EAAgBC,KAAchB,GAX9KP,EAYZyB,qBAAuB,SAACZ,GAAD,MAAYN,EAAZ,uDAAqB,GAArB,OAA6B,UAAAO,IAAWD,UAAX,eAAuBa,cAAenB,GAZ9EP,EAaZ2B,qBAAuB,SAACd,GAAD,MAAYN,EAAZ,uDAAqB,KAArB,OAA+B,UAAAO,IAAWD,UAAX,eAAuBe,cAAerB,GAbhFP,EAcZ6B,aAAe,SAAChB,GAAD,MAAYN,EAAZ,uDAAqB,KAArB,OAA8B,UAAAO,IAAWD,UAAX,eAAuBiB,MAAOvB,GAd/DP,EAiBZ+B,qBAAuB,SAAClB,EAAWP,GAAZ,UAAsBC,EAAtB,uDAA+B,EAA/B,OAAsC,UAAAO,IAAWD,UAAX,mBAAuBmB,iBAAvB,mBAAkCC,YAAlC,eAjBjDjC,EAiB+FS,cAAcH,MAAcC,GAjB3HP,EAkBZkC,oBAAsB,SAACrB,EAAWP,GAAZ,UAAsBC,EAAtB,uDAA+B,EAA/B,OAAsC,UAAAO,IAAWD,UAAX,mBAAuBmB,iBAAvB,mBAAkCG,WAAlC,eAlBhDnC,EAkB6FS,cAAcH,MAAcC,GAlBzHP,EAmBZoC,oBAAsB,SAACvB,GAAD,QAAYN,EAAZ,uDAAqB,GAArB,OAA6B,UAAAO,IAAWD,UAAX,mBAAuBmB,iBAAvB,eAAkCK,aAAc9B,GAnBvFP,EAoBZsC,mBAAqB,SAACzB,EAAWQ,GAAZ,UAAyBd,EAAzB,uDAAkC,GAAlC,2BAAyCO,IAAWD,UAApD,iBAAyC,EAAuB0B,aAAhE,aAAyC,SAA+BlB,UAAxE,QAAwFd,GApBjGP,EAsBZwC,iBAAmB,SAACC,GAAD,OAAgBC,OAAOC,YAAYD,OAAOE,QAAQ9B,KAAY+B,QAAO,oDAAgCJ,aAAeA,OAtB3HzC,EAuBZ8C,kBAAoB,SAACL,GAAD,IAAalC,EAAb,uDAAsB,GAAtB,OAA8BwC,IAAeN,IAAelC,GAvBpEP,EAwBZgD,kBAAoB,kBAAMN,OAAOO,KAAKF,MAxB1B/C,EA0BZkD,iCAAmC,SAACC,GAAD,IAAY5C,EAAZ,uDAAqB,EAArB,OAC/B,OAAT4C,QAAS,IAATA,OAAA,EAAAA,EAAWC,kBA3BMpD,EA2BkB+B,qBAAL,OAA0BoB,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAWE,IAArC,OAA0CF,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAW7C,SAAUC,IA3B5EP,EA4BZsD,gCAAkC,SAACH,GAAD,IAAY5C,EAAZ,uDAAqB,EAArB,OAC9B,OAAT4C,QAAS,IAATA,OAAA,EAAAA,EAAWI,iBA7BMvD,EA6BiBkC,oBAAL,OAAyBiB,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAWE,IAApC,OAAyCF,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAW7C,SAAUC,IA7B1EP,EA+BZwD,yBAA2B,SAAC3C,EAAWQ,EAAaoC,GAAmC,IAAnBlD,EAAkB,uDAAT,KAC9EqB,EAhCa5B,EAgCM2B,qBAAqBd,GAC5C,IAAKe,IAAgB6B,EAAgB,OAAOlD,EAF+C,MAGrEmD,IAAiBC,mBAAmB/B,EAAa,QAAS6B,GAHW,mBAGtFlB,EAHsF,KAG/EqB,EAH+E,KAI3F,OAAKA,GACLrB,EAAQA,EAAMlB,GACC,IAAXuC,GAAcC,YAAkBtB,EAAOqB,GACpCrB,GAHahC,I,iCCtCT,ICsBXuD,EAAS,CACXC,SAAU,CAAEC,MDvBC,IAA0B,0CCuBpBC,KCvBN,IAA0B,yCDuBdC,OEvBZ,IAA0B,2CFuBNC,QGvBpB,IAA0B,4CHuBGC,IIvB7B,IAA0B,wCJuBQC,MKvBlC,IAA0B,0CLuBeC,KMvBzC,IAA0B,0CNwBvCC,YAAa,CAAEC,IOxBF,IAA0B,kDPwBnBC,SQxBP,IAA0B,uDRwBTC,SSxBjB,IAA0B,uDTwBCC,QUxB3B,IAA0B,sDVwBUC,MWxBpC,IAA0B,qDXyBvCC,MAAO,CACLC,QY1BW,IAA0B,+CZ2BrCC,Ua3BW,IAA0B,kDb6BvCC,UAAW,CACTC,Oc9BW,IAA0B,mDd+BrCC,Ie/BW,IAA0B,4CfgCrCC,WgBhCW,IAA0B,2DhBmC1BrB,O,sGiBhCTsB,EAAW,kBAAM,cAAC,IAAD,CAAiBC,KAAMC,OACxCC,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,IAAUC,eAAV,gBAAgC,sBAAMC,UAAWD,EAAU,aAAe,GAA1C,SAC3CD,EAAQ,YAAIG,MAAMH,GAAOvC,QAAQ2C,KAAI,SAACC,EAAGC,GAAJ,OAAU,cAACV,EAAD,GAAeU,MAAS,S,4ECyB3DC,IA3BW,SAAC,GAAwF,IAAD,MAArFC,aAAqF,SAAtEC,EAAsE,EAAtEA,YAAaC,EAAyD,EAAzDA,MAAOC,EAAkD,EAAlDA,cAAeC,EAAmC,EAAnCA,SAAmC,IAAzBC,kBAAyB,WACxFC,oBAAS,GAD+E,mBAC3GC,EAD2G,KACpGC,EADoG,KAK1GC,EAAQ,CACZC,KAAM,SACNhB,UAAW,kBACXO,cACAC,MANEG,EAA4C,kBAAVH,EAAqBA,EAAQ,IAC9CA,GAASK,EAAQ,IAAW,OAALL,QAAK,IAALA,GAAA,UAAAA,EAAOS,gBAAP,oBAAAT,KAAuBA,EAMjEE,WACAQ,SAAU,SAACC,GACT,IAAIX,EAAQW,EAAEC,OAAOZ,MAEHA,EADdF,EACEK,GAA8B,KAAVH,EAAe,KAC1Ba,WAAWb,IAAU,EAE9BG,GAA8B,KAAVH,EAAe,KAC1Bc,SAASd,IAAU,EAErB,OAAbC,QAAa,IAAbA,KAAgBD,IAElBe,QAAS,kBAAMT,GAAS,IACxBU,OAAQ,kBAAMV,GAAS,KAEzB,OAAO,cAAC,IAAD,2BAAiBC,GAAjB,IAAwBU,aAAW,oB,iCC5B5C,8KAAIrG,EAAa,GACbV,EAAmB,qDACvBA,EAAiBgH,MAAK,SAAAC,GACpBvG,EAAauG,EAAIC,QACjBlH,EAAmB,QAGrB,IAAMM,EAAkB,CAAC,KAAM,KAAM,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,OAC/LF,EAAgB,CAAE,GAAM,SAAU,GAAM,SAAU,IAAO,UAAW,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,WACjduC,EAAiB,CACrB6B,MAAO,QACPF,SAAU,WACVD,SAAU,WACVD,IAAK,MACLG,QAAS,Y,iCCbI,SAAS4C,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACInE,EAAKyC,EADLgB,ECHS,SAAuCU,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEInE,EAAKyC,EAFLgB,EAAS,GACTY,EAAahF,OAAOO,KAAKuE,GAG7B,IAAK1B,EAAI,EAAGA,EAAI4B,EAAWC,OAAQ7B,IACjCzC,EAAMqE,EAAW5B,GACb2B,EAAS9G,QAAQ0C,IAAQ,IAC7ByD,EAAOzD,GAAOmE,EAAOnE,IAGvB,OAAOyD,EDTM,CAA6BU,EAAQC,GAGlD,GAAI/E,OAAOkF,sBAAuB,CAChC,IAAIC,EAAmBnF,OAAOkF,sBAAsBJ,GAEpD,IAAK1B,EAAI,EAAGA,EAAI+B,EAAiBF,OAAQ7B,IACvCzC,EAAMwE,EAAiB/B,GACnB2B,EAAS9G,QAAQ0C,IAAQ,GACxBX,OAAOoF,UAAUC,qBAAqBC,KAAKR,EAAQnE,KACxDyD,EAAOzD,GAAOmE,EAAOnE,IAIzB,OAAOyD,E,4LEVM,SAASmB,EAAoBxB,GAAQ,IAC5C7E,EAAkE6E,EAAlE7E,YAAa6B,EAAqDgD,EAArDhD,eAAgByE,EAAqCzB,EAArCyB,eAAgBC,EAAqB1B,EAArB0B,OAAQ/B,EAAaK,EAAbL,SAC3D,IAAKxE,EAAa,OAAOuG,EACzB,GAAIxC,MAAMyC,QAAQxG,GAAc,CAC9B,IAD8B,EAC1ByG,EAAyB5E,EACzB6E,EAAsB,KAFI,cAGD1G,GAHC,IAG9B,2BAA0C,CAAC,IAAhC2G,EAA+B,QACxC,KAAIF,EAAyBE,EAAeC,UACvC,CACHF,EAAsBC,EACtB,MAHoDF,GAA0BE,EAAeC,UAJnE,8BAUzBF,IACHD,EAAyB,EACzBC,EAAsB1G,EAAY,IAIpC,IAAI6G,EAAkC,IAA3BJ,EAA+B,aACvC,iCAAOC,EAAoBI,UAA3B,IAAwCJ,EAAoBE,SAAW,EAA/B,YAAyCH,EAAzC,iBAAwEA,EAAyB,EAAI,IAAM,IAAQ,MAC1JM,EAAQ,cAAC,IAAD,CAAOC,QAAoC,IAA3BP,EAA+B,YAAc,UAA7D,SAAyEI,IACjFI,EAAQ,EACZ,OAAO,eAAC,IAAD,WACL,cAAC,IAASC,OAAV,CAAiBC,KAAK,KAAK3C,SAAUA,EAArC,SACE,qBAAIV,UAAU,gBAAd,UAA+ByC,EAA/B,IAAwCQ,OAE1C,eAAC,IAASK,KAAV,WACE,cAAC,IAASC,KAAV,CAAeC,QAAS,kBAAMhB,EAAe,IAA7C,SACE,gDAEDtG,EAAYgE,KAAI,SAACuD,EAASrD,GAAV,OACf,cAAC,IAAMsD,SAAP,UAAyB,YAAIzD,MAAMwD,EAAQX,UAAUvF,QAAQ2C,KAAI,SAAAyD,GAAC,OAAIA,EAAI,KAAGzD,KAAI,SAAA0D,GAC/E,IAAIC,IAAcV,EAClB,OAAO,eAAC,IAASI,KAAV,CAA+BC,QAAS,kBAAMhB,EAAeqB,IAA7D,UACJJ,EAAQT,UAAWJ,EAAoBE,SAAW,EAA/B,YAAwCc,EAAxC,iBAAsDA,EAAQ,EAAI,IAAM,IAAO,KAD1EC,OAFRzD,YAStB,GAAIlE,EAAY4G,SAAW,EAAG,CAEnC,IAAIG,EAAQ,cAAC,IAAD,CAAOC,QAA4B,IAAnBnF,EAAuB,YAAc,UAArD,SAAiEA,EAAiB,EAAjB,UAAwBA,EAAxB,iBAA+CA,EAAiB,EAAI,IAAM,IAAO,eAC9J,OAAO,eAAC,IAAD,WACL,cAAC,IAASqF,OAAV,CAAiBC,KAAK,KAAK3C,SAAUA,EAArC,SACE,qBAAIV,UAAU,gBAAd,UAA+ByC,EAA/B,IAAwCQ,OAE1C,eAAC,IAASK,KAAV,WACE,cAAC,IAASC,KAAV,CAAeC,QAAS,kBAAMhB,EAAe,IAA7C,SACE,gDAED,YAAIvC,MAAM/D,EAAY4G,UAAUvF,QAAQ2C,KAAI,SAAAyD,GAAC,OAAIA,EAAI,KAAGzD,KAAI,SAAA0D,GAAK,OAChE,cAAC,IAASL,KAAV,CAA2BC,QAAS,kBAAMhB,EAAeoB,IAAzD,mBACMA,EADN,iBACoBA,EAAQ,EAAI,IAAM,KADlBA,YAKrB,OAA6B,IAAzB1H,EAAY4G,SAEd,cAAC,IAAD,CAAQO,KAAK,KAAKG,QAAS,kBAAMhB,EAAezE,EAAiB,EAAI,IAAI2C,SAAUA,EAAnF,SACL,qBAAIV,UAAU,OAAd,UAAqB,cAAC,IAAD,CAAiBL,KAAM5B,EAAiB+F,IAAgBC,MAA7E,IAA2FtB,YAHxF,I,iCCjET,yDAQIuB,EAAqBC,IAAMC,YAAW,SAAUC,EAAMC,GACxD,IAAIC,EAAWF,EAAKE,SAChBnB,EAAUiB,EAAKjB,QACfoB,EAAOH,EAAKG,KACZtE,EAAYmE,EAAKnE,UACjBuE,EAAUJ,EAAKK,GACfC,OAAwB,IAAZF,EAAqB,OAASA,EAC1CxD,EAAQ2D,YAA8BP,EAAM,CAAC,WAAY,UAAW,OAAQ,YAAa,OAEzFQ,EAASC,YAAmBP,EAAU,SAC1C,OAAoBJ,IAAMY,cAAcJ,EAAWK,YAAS,CAC1DV,IAAKA,GACJrD,EAAO,CACRf,UAAW+E,IAAW/E,EAAW2E,EAAQL,GAAQK,EAAS,QAASzB,GAAWyB,EAAS,IAAMzB,SAGjGc,EAAMgB,YAAc,QACpBhB,EAAMiB,aApBa,CACjBX,MAAM,GAoBON,O,iCC1Bf,wNAEakB,EAAW,CAAEC,IAAK,MAAOC,OAAQ,WAAYC,QAAS,gBACtDC,EAAW,CAAEC,OAAQ,cAAeC,QAAS,eAAgBC,SAAU,gBAAiBC,MAAO,aAAcC,MAAO,cACpHC,EAAcC,IACdC,EAA0B,CACrCC,WAAY,CAAE,aAAc,OAAQ,GACpCC,UAAW,CAAE,YAAa,WAAY,GACtCC,eAAgB,CAAE,kBAAmB,UAAW,KAChDC,aAAc,CAAE,eAAgB,OAAQ,GACxCC,MAAO,CAAE,QAAS,QAAS,MAEhBC,EAAsB,CACjCC,SAAU,CAAC,WAAY,CAAEzH,KAAM,IAAKD,MAAO,IAC3C2H,KAAM,CAAC,OAAQ,CAAE1H,KAAM,EAAGL,KAAM,OAMrBgI,EAAiB,CAC5BR,WAAY,CAAC,eAAgB,aAAc,aAAe,YAAc,WAAe,WACvFG,aAAc,CAAC,cAAe,YAAc,aAAe,WAAc,aAAe,UACxFD,eAAgB,CAAC,eAAgB,YAAc,aAAe,YAAc,aAAe,WAC3FD,UAAW,CAAC,eAAgB,aAAc,aAAe,YAAc,aAAe,WACtFG,MAAO,CAAC,eAAgB,aAAc,aAAe,YAAc,aAAe,UAClFK,WAAY,CAAC,UAAW,QAAS,UAAY,UAAY,aAAe,e,6FCvB1E,SAASC,EAAqBC,GAC5B,IAAMC,EAAa,IAAIC,IAIvB,OAHAF,EACE,IAAIG,MAAM,GAAI,CAAEC,IAAK,SAAC1F,EAAQ2F,EAAMC,GAAeL,EAAWM,IAAIF,MAClE,IAAIF,MAAM,GAAI,CAAEC,IAAK,SAAC1F,EAAQ2F,EAAMC,GAAeL,EAAWM,IAAIF,OAC7D,YAAIJ,GAEb,IAAMO,EAAuBlK,OAAOmK,OAAOnK,OAAOC,YAChDD,OAAOO,KAAK6J,KAAUlH,KAAI,SAAAvC,GAAG,MAAI,CAACA,EAAK8I,EAAqBW,IAASzJ,UAkBvE,SAAS0J,IAA+D,IAA/CC,EAA8C,uDAAlC,GAAI/J,EAA8B,uDAAvBP,OAAOO,KAAKgK,KACtDC,EAAe,IAAIZ,IAEvB,OADArJ,EAAKkK,SAAQ,SAAA9J,GAAG,OAAI+J,EAAmB/J,EAAK2J,EAAWE,MAChD,YAAIA,GAEb,SAASE,EAAmB/J,EAAK2J,EAAWE,GAAe,IAAD,IACpDA,EAAaG,IAAIhK,KACrB,UAAAuJ,EAAqBvJ,UAArB,SAA2B8J,SAAQ,SAAAG,GAAC,OAAIF,EAAmBE,EAAGN,EAAWE,MACzExK,OAAOO,KAAP,UAAY+J,EAAU3J,UAAtB,QAA8B,IAAI8J,SAAQ,SAAAG,GAAC,OAAIF,EAAmBE,EAAGN,EAAWE,MAChFA,EAAaP,IAAItJ,M,iCCtCnB,8KAAIkK,EAAgB,GAChBC,EAAsB,qDAC1BA,EAAoBpG,MAAK,SAAAC,GACvBkG,EAAgBlG,EAAIC,QACpBkG,EAAsB,QAGxB,IAAMC,EAAa,CACjB,GAAM,CACJ1M,KAAM,QACN2M,MAAO,EACPC,MAAO,GAET,IAAO,CACL5M,KAAM,SACN2M,MAAO,GACPC,MAAO,GAET,KAAQ,CACN5M,KAAM,cACN2M,MAAO,GACPC,MAAO,GAGT,IAAO,CACL5M,KAAM,SACN2M,MAAO,GACPC,MAAO,GAET,KAAQ,CACN5M,KAAM,cACN2M,MAAO,GACPC,MAAO,GAGT,IAAO,CACL5M,KAAM,SACN2M,MAAO,GACPC,MAAO,GAET,KAAQ,CACN5M,KAAM,cACN2M,MAAO,GACPC,MAAO,GAET,IAAO,CACL5M,KAAM,SACN2M,MAAO,GACPC,MAAO,GAET,KAAQ,CACN5M,KAAM,cACN2M,MAAO,GACPC,MAAO,GAET,IAAO,CACL5M,KAAM,SACN2M,MAAO,GACPC,MAAO,GAET,KAAQ,CACN5M,KAAM,cACN2M,MAAO,GACPC,MAAO,GAGT,IAAO,CACL5M,KAAM,SACN2M,MAAO,GACPC,MAAO,GAET,KAAQ,CACN5M,KAAM,cACN2M,MAAO,GACPC,MAAO,GAET,IAAO,CACL5M,KAAM,SACN2M,MAAO,GACPC,MAAO,IAILC,EAAoB,CACxBC,UAAW,EACXC,SAAU,GACVC,UAAW,IACXC,QAAS,KAELC,EAA8B,CAAC,MAAO,OAAQ,OAAQ,SAAU,YAAa,QAAS,YAAa,WAAY,gBAAiB,aAAc,WAAY,eAAgB,aAAc,YAAa,c,iCCzF3M,6DAGMC,EAAW,CACfC,YAAaC,IACbC,QAASD,IACTE,IAAKF,IACLG,GAAIH,IAEJI,QAASC,IACTC,aAAcD,IACdE,SAAUF,IACVG,KAAMH,IACNI,IAAKJ,IAELK,aAAcC,IACdC,SAAUD,IACVE,KAAMF,IACNG,IAAKH,IAELI,OAAQC,IACRvB,UAAWwB,IACXvB,SAAUwB,IACVvB,UAAWwB,IACXC,MAAOC,KAGHC,EAAc,SAACC,GAAD,OAClBzB,EAASyB,GAAW,cAAC,IAAD,CAAiBtK,KAAM6I,EAASyB,GAAUjK,UAAU,UAAa,O,gHC3BjFkK,EAAU,CACdC,aAAc,eACdC,WAAY,iBAEZC,QAAS,cACTC,SAAU,UACVC,mBAAoB,eACpBC,SAAU,UACVC,UAAW,WACXC,WAAY,YACZC,SAAU,eACVC,UAAW,WACXC,cAAe,gBACfC,QAAS,gBACTC,oBAAqB,aACrBC,kBAAmB,WACnBC,sBAAuB,eACvBC,oBAAqB,aACrBC,mBAAoB,YACpBC,mBAAoB,YACpBC,cAAe,aACfC,YAAa,WACbC,gBAAiB,eACjBC,cAAe,aACfC,aAAc,YACdC,aAAc,YACdC,UAAW,YACXC,UAAW,YACXC,SAAU,WACVC,KAAM,UACNC,UAAW,QACXC,SAAU,WACVC,WAAY,aACZC,OAAQ,SACRC,aAAc,cACdC,aAAc,cACdC,cAAe,OACfC,SAAU,WACVC,QAAS,UACTC,aAAc,eACdC,YAAa,cACbC,oBAAqB,qBACrBC,oBAAqB,qBACrBC,gBAAiB,UACjBC,gBAAiB,UACjBC,gBAAiB,UAEjBC,aAAc,sBACdC,aAAc,uBACdC,WAAY,wBACZC,kBAAmB,0BACnBC,kBAAmB,2BACnBC,gBAAiB,4BACjBC,iBAAkB,yBAClBC,iBAAkB,0BAClBC,eAAgB,2BAChBC,mBAAoB,cACpBC,mBAAoB,eACpBC,qBAAsB,gBACtBC,gBAAiB,aACjBC,gBAAiB,aACjBC,mBAAoB,mBACpBC,mBAAoB,oBACpBC,gBAAiB,kBACjBC,gBAAiB,kBAEjBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,qBAAsB,sBACtBC,qBAAsB,sBACtBC,oBAAqB,qBACrBC,oBAAqB,qBACrBC,cAAe,gBACfC,cAAe,gBACfC,mBAAoB,oBACpBC,mBAAoB,oBACpBC,kBAAmB,mBACnBC,kBAAmB,mBACnBC,kBAAmB,oBACnBC,kBAAmB,oBACnBC,uBAAwB,wBACxBC,uBAAwB,wBACxBC,sBAAuB,uBACvBC,sBAAuB,uBACvBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,qBAAsB,sBACtBC,qBAAsB,sBACtBC,oBAAqB,qBACrBC,oBAAqB,qBACrBC,eAAgB,iBAChBC,eAAgB,iBAChBC,oBAAqB,qBACrBC,oBAAqB,qBACrBC,mBAAoB,oBACpBC,mBAAoB,oBACpBC,eAAgB,iBAChBC,eAAgB,iBAChBC,oBAAqB,qBACrBC,oBAAqB,qBACrBC,mBAAoB,oBACpBC,mBAAoB,oBAEpBC,QAAS,eACTC,aAAc,mBACdC,YAAa,kBACbC,cAAe,YACfC,mBAAoB,gBACpBC,kBAAmB,eACnBC,YAAa,UACbC,iBAAkB,cAClBC,gBAAiB,aACjBC,gBAAiB,cACjBC,qBAAsB,kBACtBC,oBAAqB,iBACrBC,cAAe,YACfC,mBAAoB,gBACpBC,kBAAmB,eACnBC,aAAc,WACdC,kBAAmB,eACnBC,iBAAkB,cAClBC,aAAc,WACdC,kBAAmB,eACnBC,iBAAkB,cAElBC,aAAc,eACdC,mBAAoB,gBACpBC,eAAgB,iBAChBC,mBAAoB,qBACpBC,yBAA0B,sBAC1BC,qBAAsB,uBACtBC,iBAAkB,mBAClBC,uBAAwB,oBACxBC,mBAAoB,qBACpBC,YAAa,cACbC,kBAAmB,eACnBC,UAAW,YACXC,gBAAiB,aACjBC,YAAa,cACbC,YAAa,gBACbC,kBAAmB,iBACnBC,cAAe,kBACfC,eAAgB,iBAChBC,qBAAsB,kBAEtBC,eAAgB,YAChBC,mBAAoB,gBAEpBC,yBAA0B,2BAC1BC,8BAA+B,+BAC/BC,6BAA8B,8BAC9BC,0BAA2B,4BAC3BC,+BAAgC,gCAChCC,8BAA+B,+BAC/BC,yBAA0B,6BAC1BC,8BAA+B,iCAC/BC,6BAA8B,gCAC9BC,wBAAyB,0BACzBC,6BAA8B,8BAC9BC,4BAA6B,6BAC7BC,wBAAyB,0BACzBC,6BAA8B,8BAC9BC,4BAA6B,6BAC7BC,sBAAuB,oBACvBC,2BAA4B,wBAC5BC,0BAA2B,uBAC3BC,0BAA2B,4BAC3BC,+BAAgC,gCAChCC,8BAA+B,+BAC/BC,2BAA4B,6BAC5BC,gCAAiC,iCACjCC,+BAAgC,gCAChCC,0BAA2B,8BAC3BC,+BAAgC,kCAChCC,8BAA+B,iCAC/BC,yBAA0B,2BAC1BC,8BAA+B,+BAC/BC,6BAA8B,8BAC9BC,yBAA0B,2BAC1BC,8BAA+B,+BAC/BC,6BAA8B,8BAC9BC,uBAAwB,qBACxBC,4BAA6B,yBAC7BC,2BAA4B,wBAC5BC,qBAAsB,uBACtBC,0BAA2B,2BAC3BC,yBAA0B,0BAC1BC,sBAAuB,wBACvBC,2BAA4B,4BAC5BC,0BAA2B,2BAC3BC,qBAAsB,yBACtBC,0BAA2B,6BAC3BC,yBAA0B,4BAC1BC,oBAAqB,sBACrBC,yBAA0B,0BAC1BC,wBAAyB,yBACzBC,oBAAqB,sBACrBC,yBAA0B,0BAC1BC,wBAAyB,yBACzBC,kBAAmB,gBACnBC,uBAAwB,oBACxBC,sBAAuB,mBACvBC,qBAAsB,uBACtBC,0BAA2B,2BAC3BC,yBAA0B,0BAC1BC,sBAAuB,wBACvBC,2BAA4B,4BAC5BC,0BAA2B,2BAC3BC,qBAAsB,yBACtBC,0BAA2B,6BAC3BC,yBAA0B,4BAC1BC,oBAAqB,sBACrBC,yBAA0B,0BAC1BC,wBAAyB,yBACzBC,oBAAqB,sBACrBC,yBAA0B,0BAC1BC,wBAAyB,yBACzBC,kBAAmB,gBACnBC,uBAAwB,oBACxBC,sBAAuB,mBAEvBC,cAAe,qBACfC,oBAAqB,0BACrBC,mBAAoB,yBACpBC,oBAAqB,kBACrBC,0BAA2B,uBAC3BC,yBAA0B,sBAC1BC,kBAAmB,gBACnBC,wBAAyB,qBACzBC,uBAAwB,oBACxBC,sBAAuB,oBACvBC,4BAA6B,yBAC7BC,2BAA4B,wBAC5BC,oBAAqB,kBACrBC,0BAA2B,uBAC3BC,yBAA0B,sBAC1BC,mBAAoB,iBACpBC,yBAA0B,sBAC1BC,wBAAyB,qBACzBC,mBAAoB,iBACpBC,yBAA0B,sBAC1BC,wBAAyB,qBAEzBC,QAAS,SACTC,wBAAyB,wBAEzBC,kBAAmB,mBACnBC,YAAa,cAiBTC,EAAmB,CACvBC,QAAS,SACTC,IAAK,MACLrN,SAAU,W,QCtQZ,SAASsN,IACP,IAAMC,EAAYC,IAElB,GAAID,EAAY,EAAG,CAEjBpc,OAAOO,KAAK+b,cAAcnc,QAAO,SAAAQ,GAAG,OAAIA,EAAI4b,WAAW,iBAAe9R,SAAQ,SAAA9J,GAC5E,IAAM9B,EAAY2d,YAAqB7b,GAC/B8b,EAAyC5d,EAAzC4d,aAF2E,EAElC5d,EAA3B6d,yBAF6D,MAEzC,GAFyC,EAG7EC,EAAK,eAAWF,GACtB,GAAoC,OAAhCH,aAAaM,QAAQD,GAAiB,CAED9d,EAA/Bge,GAA+Bhe,EAA3BR,KAF6B,IAAD,MAEtBye,EAAqBje,EAArBie,QAAYC,EAFU,YAEDle,EAFC,yBAGpCoE,MAAMyC,QAAN,OAAcqX,QAAd,IAAcA,GAAd,UAAcA,EAAMC,oBAApB,aAAc,EAAoBC,YACpCF,EAAKC,aAAaC,SAAWF,EAAKC,aAAaC,SAAS/Z,KAAI,SAAAga,GAAI,OAAIA,KAAQC,EAAWA,EAASD,GAAQA,MAC3D,kBAA3C,OAAOH,QAAP,IAAOA,GAAP,UAAOA,EAAMC,oBAAb,aAAO,EAAoBI,eAC7BL,EAAKC,aAAaI,YAAcpd,OAAOC,YAAYD,OAAOE,QAAQ6c,EAAKC,aAAaI,aAAala,KAAI,mCAAEga,EAAF,KAAQ1Z,EAAR,WAAmB,CAAC0Z,KAAQC,EAAWA,EAASD,GAAQA,EAAM1Z,QACrKuZ,EAAKM,QAAL,UAAerB,EAAiBc,UAAhC,QAA4C9c,OAAOO,KAAKyb,GAAkB,GAC1EsB,YAAmBX,EAAOI,GAE1B/c,OAAOud,OAAOb,GAAmBjS,SAAQ,SAAA+S,GACvC,IAAMC,EAAMjB,YAAqBgB,GAC5BC,IACLA,EAAIC,SAAWjB,EACfa,YAAmBE,EAAOC,YAI5Bzd,OAAOud,OAAOb,GAAmBjS,SAAQ,SAAA+S,GACvC,IAAMC,EAAMjB,YAAqBgB,GAC5BC,IACLA,EAAIC,SAAW,GACfJ,YAAmBE,EAAOC,OAI9BnB,aAAaqB,WAAWhd,MAG1B,IAAMid,EAAuBpB,YAAqB,yBAC9CoB,IACEA,EAAqBC,qBAAqBV,IAC5CS,EAAqBC,kBAAoBV,EAASS,EAAqBC,oBACzED,EAAqBE,eAAiBF,EAAqBE,eAAe5a,KAAI,SAAAga,GAAI,OAAIA,KAAQC,EAAWA,EAASD,GAAQA,KAC1HI,YAAmB,wBAAyBM,IAKhD,IAAMG,EAAsBC,IAAkBC,mCAC5CC,EAAqBC,IAAiBF,mCACxC,GAAKF,GAAwBG,EAA7B,CAEAle,OAAOud,OAAOY,IAAiBC,uBAAuB3T,SAAQ,SAAAgT,GAC5D,IAuEmB,EAvEfY,GAAQ,EAGZ,GAAIZ,EAAIC,SAEN,GADqBM,IAAkBlU,IAAI2T,EAAIC,UAC7B,CAChB,IAAIY,EAAcN,IAAkBO,sBAAsBd,EAAIC,SAAUD,EAAIe,SACvEF,EAEMA,IAAgBb,EAAIZ,KAC7BY,EAAIC,SAAW,GACfW,GAAQ,GAHRL,IAAkBS,cAAchB,EAAIC,SAAUD,QAMhDA,EAAIC,SAAW,GACfW,GAAQ,EAIZ,GAAIjC,EAAY,EAAG,CAAC,IAAD,IAEjBsC,IAASC,mBAAmBlB,GAC5BY,GAAQ,EAGoB,kBAAjBZ,EAAImB,WACbnB,EAAImB,SAAWta,SAASmZ,EAAImB,UAC5BP,GAAQ,GAIV,IAAIQ,EAAa,CACf,oBAAqB,kBACrB,sBAAuB,qBACvB,kBAAmB,iBACnB,mBAAoB,kBACpB,kBAAmB,iBACnB,iBAAkB,gBAClB,qBAAsB,mBACtB,0BAA2B,uBAC3B,wBAAyB,uBACzB,gBAAiB,eACjB,cAAe,aACf,eAAgB,cAChB,kBAAmB,gBACnB,iBAAkB,gBAClB,0BAA2B,wBAC3B,YAAa,WACb,mBAAoB,kBACpB,YAAa,WACb,oBAAqB,mBACrB,wBAAyB,sBACzB,0BAA2B,yBAC3B,qBAAsB,qBAEpBA,EAAWpB,EAAIqB,UACjBrB,EAAIqB,OAASD,EAAWpB,EAAIqB,QAC5BT,GAAQ,IAGV,OAAIZ,QAAJ,IAAIA,GAAJ,UAAIA,EAAKsB,mBAAT,iBAAI,EAAkBC,gBAAtB,aAAI,SAA6B,cAC/BvB,EAAIsB,YAActB,EAAIsB,YAAYE,QAAQ,UAAW,iBACrDZ,GAAQ,GAGe,aAAlB,OAAHZ,QAAG,IAAHA,OAAA,EAAAA,EAAKsB,eACPtB,EAAIsB,YAAc,gBAClBV,GAAQ,GAIRjC,EAAY,IACVqB,EAAIsB,eAAe5B,IACrBM,EAAIsB,YAAc5B,EAASM,EAAIsB,aAC/BV,GAAQ,GAEP,OAAHZ,QAAG,IAAHA,GAAA,UAAAA,EAAKyB,gBAAL,SAAezU,SAAQ,SAAC0U,EAAK/b,GACvB+b,EAAIxe,OAAOwc,IACbM,EAAIyB,SAAS9b,GAAGzC,IAAMwc,EAASgC,EAAIxe,KACnC0d,GAAQ,OAMTA,GAAOF,IAAiBiB,eAAe3B,MAG9C,IAAI4B,EAAQrB,IAAkBsB,uBAC9Btf,OAAOud,OAAO8B,GAAO5U,SAAQ,SAAA5L,GAC3B,IAiBmB,MAjBfwf,GAAQ,EACJ5B,EAAiB5d,EAAjB4d,cAEH5d,EAAU6d,oBACb7d,EAAU6d,kBAAoB,GAC9B2B,GAAQ,GAEVre,OAAOE,QAAQrB,EAAU6d,mBAAmBjS,SAAQ,YAAuB,IAAD,mBAApB+T,EAAoB,KAAXhB,EAAW,KAClE+B,EAAcpB,IAAiBrU,IAAI0T,GACrC+B,GAAeA,EAAY7B,WAAajB,GAC1C0B,IAAiBqB,kBAAkBhC,EAAOf,GACvC8C,IACHlB,GAAQ,EACRxf,EAAU6d,kBAAkB8B,GAAW,OAIvCpC,EAAY,KAEdvd,EAAU4gB,qBAAV,oBAAiC5gB,EAAU4gB,4BAA3C,iBAAiC,EAAgCtf,cAAjE,aAAiC,UAAyC,SAAAuf,GACxE,SAAKA,EAAKC,SAAWD,EAAKE,WACxBvB,GAAQ,GACD,aAHX,QAMM,GAGDxf,EAAUwe,UACbxe,EAAUwe,QAAU,MACpBgB,GAAQ,IAKPA,GAAOL,IAAkB6B,gBAAgBhhB,MAEhDihB,EAAmB,IAErB,IAAMzD,EAAqB,iBAACxe,EAAD,uDAAU,EAAV,OACzByG,SAAQ,UAACkY,YAAqB,iBAAtB,QAAmC3e,IAEvCiiB,EAAqB,SAACC,GAAD,OACzBzC,YAAmB,SAAUyC,K,iCChM/B,sEAIA,SAASC,EAAT,GAAuD,IAAbC,EAAY,EAAZA,SACxC,OAAOjC,IAAkBkC,sBAAsBC,MAAM,SAACC,EAAGC,GACvD,OAAID,EAAIC,GAAW,EACfD,EAAIC,EAAU,EAEX,KACLnd,KAAI,SAAAuZ,GAAY,OAClB,cAAC,IAASlW,KAAV,CAAkCC,QAAS,kBAAMyZ,EAASxD,IAA1D,SACG6D,IAAUC,QAAQ9D,IADDA,Q,iCCXxB,sDAUA,SAASvZ,EAAIsd,EAAUC,GACrB,IAAIC,EAAQ,EACZ,OAAOzZ,IAAM0Z,SAASzd,IAAIsd,GAAU,SAAUI,GAC5C,OAAoB3Z,IAAM4Z,eAAeD,GAASH,EAAKG,EAAOF,KAAWE,O,mUCA7E,SAASE,EAAT,GAA6G,IAAD,IAAlFjiB,UAAa4d,EAAqE,EAArEA,aAAqE,IAAvDsE,oBAAuD,MAAxC,OAAwC,EAA9BC,EAA8B,EAA9BA,gBAAiBhe,EAAa,EAAbA,UAC5E,OAAjB+d,IAA0BA,EAAe,QACzC,IAAIE,EAAaX,IAAUY,gBAAgBzE,GACvC0E,EAAW,YAAQC,IAAsBH,IAAe,IAE5D,OADKE,EAAYE,SAAS,kBAAiE,aAA7Cf,IAAUgB,iBAAiB7E,IAA8B0E,EAAYI,KAAK,iBACjH,CAAC,OAAQ,QAAS,QAAQF,SAASJ,IAAe,eAAC,IAAD,CAAmBje,UAAWA,EACrFgB,KAAK,QAAQ3F,KAAK,eAAemjB,aAAcT,EAAc7c,SAAU,SAACud,GAAD,OAAST,EAAwB,SAARS,EAAiB,KAAOA,IADjE,UAEvD,cAAC,IAAD,CAAcje,MAAO,OAAQ0C,QAA0B,SAAjB6a,EAA0B,UAAY,UAA5E,0BACgB,SAAfE,GAAyB,cAAC,IAAD,CAAczd,MAAO,gBAAiB0C,QAA0B,kBAAjB6a,EAAmC,UAAY,UAA9F,SACxB,uBAAM/d,UAAU,gBAAhB,4BAA+C,cAAC,IAAD,CAAO0e,IAAKtgB,IAAOC,SAASM,MAAOqB,UAAU,gBAA5F,IAA6G,cAAC,IAAD,CAAO0e,IAAKtgB,IAAOC,SAASO,KAAMoB,UAAU,qBAE3I,SAAfie,GAAyB,cAAC,IAAD,CAAczd,MAAO,YAAa0C,QAA0B,cAAjB6a,EAA+B,UAAY,UAAtF,SACxB,uBAAM/d,UAAU,YAAhB,wBAAuC,cAAC,IAAD,CAAO0e,IAAKtgB,IAAOC,SAASE,KAAMyB,UAAU,gBAAnF,IAAoG,cAAC,IAAD,CAAO0e,IAAKtgB,IAAOC,SAASO,KAAMoB,UAAU,qBAElI,UAAfie,GAA0B,cAAC,IAAD,CAAczd,MAAO,iBAAkB0C,QAA0B,mBAAjB6a,EAAoC,UAAY,UAAhG,SACzB,uBAAM/d,UAAU,gBAAhB,6BAAgD,cAAC,IAAD,CAAO0e,IAAKtgB,IAAOC,SAASO,KAAMoB,UAAU,gBAA5F,IAA6G,cAAC,IAAD,CAAO0e,IAAKtgB,IAAOC,SAASM,MAAOqB,UAAU,qBAE5I,SAAfie,GAAyB,cAAC,IAAD,CAAczd,MAAO,YAAa0C,QAA0B,cAAjB6a,EAA+B,UAAY,UAAtF,SACxB,uBAAM/d,UAAU,YAAhB,wBAAuC,cAAC,IAAD,CAAO0e,IAAKtgB,IAAOC,SAASO,KAAMoB,UAAU,gBAAnF,IAAoG,cAAC,IAAD,CAAO0e,IAAKtgB,IAAOC,SAASE,KAAMyB,UAAU,wBAItJ,SAAS2e,EAAT,GAA4D,IAAnCtE,EAAkC,EAAlCA,QAASuE,EAAyB,EAAzBA,WAAY5e,EAAa,EAAbA,UAC5C,OAAO,eAAC,IAAD,CAAmBgB,KAAK,QAAQR,MAAO6Z,EAAShf,KAAK,aAAa6F,SAAU0d,EAAY5e,UAAWA,EAAnG,UACL,cAAC,IAAD,CAAcQ,MAAM,SAAS0C,QAAqB,WAAZmX,EAAuB,UAAY,UAAzE,sBACA,cAAC,IAAD,CAAc7Z,MAAM,MAAM0C,QAAqB,QAAZmX,EAAoB,UAAY,UAAnE,iCACA,cAAC,IAAD,CAAc7Z,MAAM,UAAU0C,QAAqB,YAAZmX,EAAwB,UAAY,UAA3E,6BAIW,SAASwE,EAAT,GAA2I,IAApGhjB,EAAmG,EAAnGA,UAAmG,IAAxFA,UAAa4d,EAA2E,EAA3EA,aAAcY,EAA6D,EAA7DA,QAAWyE,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,cAEhIC,EAAQF,GAAsBC,EAE9BE,EAAqB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAChCC,EAAkBC,qBAAWC,KAC7BC,EAAmBC,YACvBN,GACA,kBAAMC,GAAYA,EAASD,MAEvBO,EAAWL,IAAoBF,EACrC,OACE,eAAC,IAAD,CAAQ5b,QAASic,EAAjB,UACE,cAAC,IAAD,CAAiB9f,KAAMggB,EAAWC,IAAmBC,IAAkB7f,UAAS,gBAAW2f,EAAW,gBAAkB,MACxH,qCAAeA,EAAW,UAAY,aA2B5C,OAAO,eAAC,IAAD,WACL,eAAC,IAAD,CAAMG,GAAG,eAAe/c,KAAK,YAAY/C,UAAU,OAAnD,UACE,cAAC,IAAK+f,OAAN,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,sBAAM/f,UAAU,UAAhB,wCACA,2EAEF,cAAC,IAAD,CAAKggB,GAAG,OAAR,SAEE,cAAClC,EAAD,CAAsBjiB,YAAWmiB,gBAAiB,SAAAiC,GAAC,OAAInB,EAAS,CAAEf,aAAckC,SAElF,cAAC,IAAD,CAAKD,GAAG,OAAR,SACE,cAACb,EAAD,CAAoB3a,GAAI0b,IAAQd,SAAS,aAI/C,cAAC,IAAUe,SAAX,CAAoBf,SAAS,IAA7B,SACE,eAAC,IAAKgB,KAAN,WACE,cAAC,IAAD,CAAKpgB,UAAU,OAAf,SAAsB,cAAC,IAAD,UACpB,cAAC,IAAD,CAAQkD,QAAQ,UAAhB,SACE,mBAAGmd,KAAK,uEAAuEjf,OAAO,SAASkf,IAAI,aAAnG,4FAKJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAKN,GAAI,GAAIO,GAAI,EAAGvgB,UAAU,OAA9B,SACE,cAAC,IAAD,CACE3E,KAAM,4CACNmF,MAAO8c,IAAUkD,yBAAyB3kB,EAAW,cACrD0E,YAAakgB,IAAKC,eAAe,cACjClC,aAAclB,IAAUqD,iBAAiB9kB,EAAW,cACpD4E,cAAe,SAACge,GAAD,cAASM,QAAT,IAASA,OAAT,EAASA,EAAc,aAAcN,QAGvDnB,IAAUsD,mBAAmB1gB,KAAI,SAAA2gB,GAChC,IAAI5W,EAAqB,aAAX4W,EAAwB,qBAAxB,UAAkDA,EAAlD,cACVC,EAA6B,aAAXD,EAAwB,yBAAxB,UAAsDA,EAAtD,kBAClBE,EAAkBzD,IAAUkD,yBAAyB3kB,EAAWilB,GACpE,OAAO,cAAC,IAAD,CAAKd,GAAI,GAAIO,GAAI,EAAgBvgB,UAAU,OAA3C,SACL,cAAC,IAAD,CACEghB,WAAY,eAAC,IAAD,CAAQ9d,QAAS2d,EAAQrd,QAAS,kBAAMub,EAAY+B,GAAkBC,IAAkB/gB,UAAU,mBAAlG,UACV,cAAC,IAAD,CAAiBL,KAAMohB,EAAkBjd,IAAgBC,IAAU/D,UAAU,UADnE,eAGZ3E,KAAM,4BAAIolB,IAAKC,eAAezW,KAC9BzJ,MAAO8c,IAAUkD,yBAAyB3kB,EAAWoO,GACrD1J,YAAakgB,IAAKC,eAAezW,GACjCuU,aAAclB,IAAUqD,iBAAiB9kB,EAAWoO,GACpDxJ,cAAe,SAACge,GAAD,cAASM,QAAT,IAASA,OAAT,EAASA,EAAc9U,EAASwU,IAC/C/d,SAAUqgB,KAVkBF,iBAmB1C,eAAC,IAAD,CAAMf,GAAG,eAAe/c,KAAK,YAA7B,UACE,cAAC,IAAKgd,OAAN,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,sBAAM/f,UAAU,UAAhB,yCACA,gFAEF,cAAC,IAAD,CAAKggB,GAAG,OAAR,SACE,cAACrB,EAAD,CAAqBtE,UAASuE,WAAY,SAAAqC,GAAC,OAAInC,EAAS,CAAEzE,QAAS4G,SAErE,cAAC,IAAD,CAAKjB,GAAG,OAAR,SACE,cAACb,EAAD,CAAoB3a,GAAI0b,IAAQd,SAAS,aAI/C,cAAC,IAAUe,SAAX,CAAoBf,SAAS,IAA7B,SACE,cAAC,IAAKgB,KAAN,UACE,cAAC,IAAD,UAnGiB,WAAO,IAAD,IACzB7iB,EAAO,CAAC,UAAW,WAAY,YAE/B2jB,EAAkB5D,IAAU4D,gBAAgBzH,GAC5C0H,EAAkB7D,IAAU6D,gBAAgB1H,GAC5C2H,EAAW,CAAC,SAAU,UAAW,YAEhCF,GACHE,EAAS3Z,SAAQ,SAAA9J,GAAG,OAAIJ,EAAKghB,KAAK8C,YAAiB1jB,EAAKuhB,EAAMoC,gBAC5DJ,GAAoBC,GAAmBtlB,EAAU0lB,YACnDH,EAAS3Z,SAAQ,SAAA9J,GAAG,OAAIJ,EAAKghB,KAAK8C,YAAiB1jB,EAAKuhB,EAAMoC,YAAY,OACtB,QAA7ChE,IAAUgB,iBAAiB7E,IAClClc,EAAKghB,KAAK8C,YAAiB,UAAWnC,EAAMoC,YAAY,IAN5C,CAAC,MAAO,QAAS,SAQvB7Z,SAAQ,SAAA9J,GAAG,OAAIJ,EAAKghB,KAAK8C,YAAiB1jB,EAAKuhB,EAAMoC,gBAE7D/jB,EAAKghB,KAAL,MAAAhhB,EAAI,YAAU6gB,IAAsBd,IAAUY,gBAAgBzE,KAAkB,KAChF,IAAI+H,EAAgBlE,IAAUgB,iBAAiB7E,GAI/C,OAHKlc,EAAK8gB,SAAS,kBAAsC,aAAlBmD,GAA8BjkB,EAAKghB,KAAK,iBAGxEkC,IAAKgB,+BAA+Bpa,YAAe,OAAC6X,QAAD,IAACA,GAAD,UAACA,EAAOoC,kBAAR,aAAC,EAAmBha,UAAW/J,GAAlF,OAAyF2hB,QAAzF,IAAyFA,GAAzF,UAAyFA,EAAOoC,kBAAhG,aAAyF,EAAmBha,WA+E1Goa,GAAmBxhB,KAAI,SAAAvC,GAAG,OAAI,cAAC,IAAD,CAAeqiB,GAAI,GAAIhgB,UAAU,OAAjC,SAC7B,eAAC,IAAD,CAAM8f,GAAG,cAAc/c,KAAK,YAA5B,UACE,cAAC,IAAKgd,OAAN,CAAa/f,UAAU,MAAvB,SACGygB,IAAKkB,UAAUhkB,EAAKuhB,EAAMoC,cAE7B,cAAC,IAAKlB,KAAN,CAAWpgB,UAAU,MAArB,SACE,gCAAQygB,IAAKmB,aAAajkB,EAAKuhB,EAAMoC,WAAYpC,EAAMoC,WAAWha,WAAW,WAN1C3J,oB,iCCjKrD,sNAoBe,SAASkkB,EAAT,GAAuG,IAAD,IAA9EC,EAA8E,EAA9EA,WAAYC,EAAkE,EAAlEA,YAAaC,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,SAAgC,IAAtBC,kBAAsB,SACnH,IAAKL,IAAeC,EAAa,OAAO,KACxC,IAAMtH,EAAMsH,GAA4B5G,IAAiBrU,IAAIgb,GAC7D,IAAKrH,EAAK,OAAO,KAHkG,IAI7GqB,EAA4IrB,EAA5IqB,OAAQN,EAAoIf,EAApIe,QAJqG,EAI+Bf,EAA3HmB,gBAJ4F,MAIjF,EAJiF,IAI+BnB,EAA7GzS,aAJ8E,MAItE,EAJsE,EAInE+T,EAAkGtB,EAAlGsB,YAJmE,EAI+BtB,EAArFyB,gBAJsD,MAI3C,GAJ2C,IAI+BzB,EAAtEC,gBAJuC,MAI5B,GAJ4B,EAIxB0H,EAAuD3H,EAAvD2H,KAJwB,EAI+B3H,EAAjD4H,yBAJkB,MAIE,EAJF,IAI+B5H,EAA1B6H,yBAJL,MAIyB,EAJzB,EAK/GC,EAAgBJ,EAAwB,EAAXvG,EAAe5T,EAC5Cwa,EAAeL,GAAcna,IAAqB,EAAX4T,EACvC6G,EAAc,uBAAMziB,UAAWwiB,EAAe,cAAgB,GAAhD,UAAqD9G,IAASgH,iBAAiB3G,EAAaH,EAAU2G,EAAe,IAAK9B,IAAKkC,YAAY5G,MACzJ6G,EAAgB1G,EAAS2G,OAAM,SAAAC,GAAK,aAAMA,EAAMnlB,KAAQmlB,EAAMnlB,KAAOmlB,EAAMtiB,QAAnB,OAA4BsiB,QAA5B,IAA4BA,GAA5B,UAA4BA,EAAOC,aAAnC,aAA4B,EAAc9gB,WAChG+gB,EAAc,SAACC,GACnBvH,IAASwH,oBAAoBpB,EAAYmB,GAC9B,OAAXjB,QAAW,IAAXA,QAEF,OAAQ,eAAC,IAAD,CAAMhiB,UAAU,QAAQmjB,OAAM,UAAKvH,EAAL,QAAqBkE,GAAG,eAAe/c,KAAK,YAA1E,UACN,cAAC,IAAKgd,OAAN,CAAa/f,UAAU,MAAvB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKggB,GAAI,EAAGoD,GAAI,EAAhB,SACE,cAAC,IAAD,CAAO1E,IAAKhD,IAAS2H,aAAavH,EAAQN,GAAUxb,UAAS,4BAAuB4b,EAAvB,YAA2C0H,WAAS,MAEnH,eAAC,IAAD,CAAKtjB,UAAU,OAAf,UACE,6BAAI,4BAAI0b,IAAS6H,aAAazH,EAAQN,EAAS,0BAC/C,gCAAME,IAAS8H,oBAAoBhI,GAAnC,YAAkDxT,cAIxD,eAAC,IAAKoY,KAAN,CAAWpgB,UAAU,0BAArB,UACE,eAAC,IAAKyjB,MAAN,WACE,8BAAM/H,IAASgI,WAAW5H,EAAQ,kBAClC,uBAAO9b,UAAU,gBAAjB,SAAiC,cAAC,IAAD,CAAOF,MAAO8b,SAEjD,oBAAI5b,UAAU,OAAd,SACE,8BAAIygB,IAAKkD,YAAY5H,GAArB,IAAoC0G,OAEtC,cAAC,IAAD,CAAKziB,UAAU,OAAf,SACGkc,EAAShc,KAAI,SAACga,EAAM9Z,GAAO,IAAD,EACzB,IAAK8Z,IAASA,EAAK1Z,MAAO,OAAO,KACjC,IAAIojB,GAAe,OAAJ1J,QAAI,IAAJA,GAAA,UAAAA,EAAM6I,aAAN,eAAa9gB,SAAU,EAClC4hB,GAAiB,OAAJ3J,QAAI,IAAJA,OAAA,EAAAA,EAAM2J,aAAc,EACjCC,EAAa,GAAmB,GAAbD,EACnBE,EAAWtD,IAAKkD,YAAYzJ,EAAKvc,KACrC,OAAQ,eAAC,IAAD,CAAaqiB,GAAI,GAAjB,UACN,cAAC,IAAD,CAAO9c,QAAS0gB,EAAQ,UAAMA,EAAN,QAAuB,SAAU5jB,UAAU,mBAAnE,SAAsF,4BAAI4jB,GAAsB,QAAiB,IACjI,uBAAM5jB,UAAS,eAAU4jB,EAAV,QAAf,UAA0CG,EAA1C,WAAwDtD,IAAKkC,YAAYzI,EAAKvc,KAAOuc,EAAK1Z,MAAMwjB,QAAQ,GAAK9J,EAAK1Z,OAAlH,OAA0HigB,IAAKkC,YAAYzI,EAAKvc,SAChJ,uBAAMqC,UAAU,cAAcikB,MAAO,CAAEC,QAASJ,GAAhD,UAA+DD,EAAWG,QAAQ,GAAlF,SAHgB5jB,QAOtB,sBAAKJ,UAAU,UAAf,UACE,sBAAMA,UAAU,YAAhB,2BACA,cAAC,IAAD,CAAcmkB,QAAS9B,EAAmBhH,MAAOuH,EAAjD,0BACGP,QADH,IACGA,OADH,EACGA,EAAmB2B,QAAQ,UAD9B,QACoC3B,EAAoB,MAExD,4BAAI,QACJ,cAAC,IAAD,CAAc8B,QAAS7B,EAAmBjH,MAAOuH,EAAjD,0BACGN,QADH,IACGA,OADH,EACGA,EAAmB0B,QAAQ,UAD9B,QACoC1B,EAAoB,YAK5D,cAAC,IAAK8B,OAAN,CAAapkB,UAAU,OAAvB,SACE,eAAC,IAAD,CAAKA,UAAU,4CAAf,UACGgiB,EAAc,cAAC,IAAD,CAAKhC,GAAG,OAAR,SACb,eAAC,IAAD,WACE,cAAC,IAAS5c,OAAV,CAAiBC,KAAK,KAAKrD,UAAU,YAArC,SAAkDsd,IAAUC,QAAQ7C,EAAU,eAC9E,eAAC,IAASpX,KAAV,WACE,cAAC,IAASC,KAAV,CAAeC,QAAS,kBAAMwf,EAAY,KAA1C,uBACA,cAAC,IAASqB,QAAV,IACA,cAAC,IAAD,CAAgCpH,SAAU,SAAAqH,GAAI,OAAItB,EAAYsB,cAG3D,cAAC,IAAD,CAAKtE,GAAG,OAAR,SAAe,4BAAI1C,IAAUC,QAAQ7C,OAC9C,cAAC,IAAD,CAAKsF,GAAG,OAAR,SACE,eAAC,IAAD,WACGgC,EAAc,cAAC,IAAD,CAAgBuC,UAAU,MACvCC,QAAS,cAAC,IAAD,6IADI,SAEb,sBAAMxkB,UAAU,iBAAhB,SACE,cAAC,IAAD,CAAQqD,KAAK,KACX3C,SAAUga,EACVuJ,MAAOvJ,EAAW,CAAE+J,cAAe,QAAW,GAC9CjhB,QAAS,WACPiX,EAAI2H,MAAQA,EACZjH,IAAiBiB,eAAe3B,GACrB,OAAXuH,QAAW,IAAXA,QANJ,SAQE,cAAC,IAAD,CAAiBriB,KAAOyiB,GAAQ1H,EAAYgK,IAASC,IAAY3kB,UAAU,gBAG7D,KACnB4kB,QAAQ3C,IAAW,cAAC,IAAD,CAAQ/e,QAAQ,OAAOG,KAAK,KAC9CG,QAAS,kBAAMye,KADG,SAElB,cAAC,IAAD,CAAiBtiB,KAAMklB,IAAQ7kB,UAAU,YAE1C4kB,QAAQ1C,IAAa,cAAC,IAAD,CAAQhf,QAAQ,SAASG,KAAK,KAClDG,QAAS,kBAAM0e,KADK,SAEpB,cAAC,IAAD,CAAiBviB,KAAMmlB,IAAY9kB,UAAU,2B,iCClH3D,sDAEe,SAAS+kB,EAAahkB,GAAQ,IACrCojB,EAA6BpjB,EAA7BojB,QAAS9I,EAAoBta,EAApBsa,MAAOmC,EAAazc,EAAbyc,SAClBwH,EAAc3J,EAAoB4J,MAAMd,GAAW,YAAjB,UAAkCe,KAAKC,MAAgB,IAAVhB,GAAkB,EAA/D,QAAZ,SAC1B,OAAO,cAAC,IAAD,CAAOjhB,QAAS8hB,EAAYhlB,UAA0B,cAAfglB,EAA6B,GAAK,mBAAzE,SAA8FxH,M,0HC8BxF4H,IA3BG,SAAC,GAAD,IAAG/pB,EAAH,EAAGA,KAAM2lB,EAAT,EAASA,WAAYxgB,EAArB,EAAqBA,MAAOD,EAA5B,EAA4BA,YAAaie,EAAzC,EAAyCA,aAAc/d,EAAvD,EAAuDA,cAAe0jB,EAAtE,EAAsEA,QAASzjB,EAA/E,EAA+EA,SAAa2kB,EAA5F,sHAChB,eAAC,IAAD,2BAAgBA,GAAhB,cACGrE,EAAa,cAAC,IAAWsE,QAAZ,UAAqBtE,IAAmC,KACtE,cAAC,IAAWsE,QAAZ,UACE,cAAC,IAAWC,KAAZ,UAAkBlqB,MAEpB,cAAC,IAAD,CACEiF,MAAO6jB,EACP5jB,YAAaA,EACbC,MAAOA,EACPC,cAAeA,EACfC,SAAUA,IAEXyjB,EAAW,cAAC,IAAWqB,OAAZ,UACV,cAAC,IAAWD,KAAZ,kBACsB,UACNE,IAAjBjH,EAA6B,cAAC,IAAWgH,OAAZ,UAC5B,cAAC,IAAD,CAAgBjB,UAAU,MACxBC,QAAS,cAAC,IAAD,wDADX,SAEE,sBAAMxkB,UAAU,iBAAhB,SACE,cAAC,IAAD,CAAQwD,QAAS,kBAAM/C,EAAc+d,IAAe9d,SAAUA,GAAYF,IAAUge,EAAcyF,MAAOzjB,IAAUge,EAAe,CAAEiG,cAAe,QAAW,GAA9J,SACE,cAAC,IAAD,CAAiB9kB,KAAM+lB,cAIR,W,iCCjC3B,sEAIA,SAASC,EAAT,GAA2F,IAAD,QAA/DC,aAA+D,MAAvD,GAAuD,EAAnDnH,EAAmD,EAAnDA,IAAKoH,EAA8C,EAA9CA,OAA8C,IAAtCC,aAAsC,MAA9B,EAA8B,MAA3BC,YAA2B,MAApB,GAAoB,MAAhB7iB,eAAgB,MAAN,GAAM,EAClE,qBAAX2iB,GAAyC,kBAARpH,IAC1CoH,EAASpH,EACTA,OAAMgH,GAER,IAAMO,OAAeP,IAARhH,EAAoBA,EAAMoH,EAAS,EAC5CI,EAAU,GAAIC,EAAW,GAM7B,OALIL,GAAmB,IAATG,EAAYC,EAAO,UAAGJ,SAAH,aAAG,EAAQ7B,QAAQ8B,QAChCL,IAAXI,IAAsBI,EAAO,UAAGxH,SAAH,aAAG,EAAKuF,QAAQ8B,IAClDG,IAASA,EAAU,uBAAMjmB,UAAS,eAAUkD,GAAzB,UAAqC+iB,EAASF,MACxD,IAATC,IAAYE,EAAW,uBAAMlmB,UAAS,eAAUgmB,EAAO,EAAI,UAAY,UAAhD,UAA6DA,EAAO,EAAI,IAAM,GAA9E,OAAkFA,QAAlF,IAAkFA,OAAlF,EAAkFA,EAAMhC,QAAQ8B,GAAQC,MAE5H,gCACL,4BAAIH,IACJ,uBAAM5lB,UAAU,yBAAhB,UAA0CimB,EAASD,EAAO,IAAM,GAAIE,QAGzD,SAASC,EAAT,GAA8G,IACvH1H,EAAKoH,EAAQC,EAAOC,EAAM7iB,EADMrH,EAAsF,EAAtFA,UAAwB4d,EAA8D,EAA3E5d,UAAa4d,aAAgBwF,EAA8C,EAA9CA,cAAeD,EAA+B,EAA/BA,SAAUoH,EAAqB,EAArBA,SAAUnc,EAAW,EAAXA,QAE3G2b,EAAQ,GACZ,GAAuB,kBAAZ3b,EAAsB,CAC/B,GAAI+U,GAAYC,EAAe,CAAC,IAAD,QAG7BR,EAAG,iBAAGO,QAAH,IAAGA,GAAH,UAAGA,EAAUsC,kBAAb,aAAG,EAAuBrX,UAA1B,QAAsC,EACzC4b,EAAM,iBAAG5G,QAAH,IAAGA,GAAH,UAAGA,EAAeqC,kBAAlB,aAAG,EAA4BrX,UAA/B,QAA2C,MAC5C,CAAC,IAAD,IACCiV,EAAQF,GAAsBC,EAEpCR,EAAG,iBAAGS,QAAH,IAAGA,GAAH,UAAGA,EAAOoC,kBAAV,aAAG,EAAoBrX,UAAvB,QAAmC,EAEtC,IAAMoc,EAAU,WAChBR,EAASvI,IAAUkD,yBAAyB3kB,EAAWoO,EAASoc,MACrDA,IAAYR,OAASJ,GAChB,YAAZxb,EACF4b,EAASvI,IAAUkD,yBAAyB3kB,EAAW,eACpC,aAAZoO,EACP4b,EAASvI,IAAUkD,yBAAyB3kB,EAAW,gBACpC,aAAZoO,IACP4b,EAASvI,IAAUkD,yBAAyB3kB,EAAW,gBAAkByhB,IAAUkD,yBAAyB3kB,EAAW,cAE3HkqB,EAAOtF,IAAKkC,YAAY1Y,GACxB6b,EAAQrF,IAAK6F,UAAUrc,GACvB2b,EAAQ,iCAAO5b,YAAYC,GAAnB,IAA8BwW,IAAKkD,YAAY1Z,UAClD,CACL,IAAMiV,EAAQF,GAAsBC,EAC5BsH,EAAwCtc,EAAxCsc,UAAWC,EAA6Bvc,EAA7Buc,aAAcC,EAAexc,EAAfwc,WAC3BC,EAAQpJ,IAAUqJ,eAAelN,EAAc8M,EAAWC,EAAcC,GACxEG,EAAetJ,IAAUuJ,oBAAoBH,EAAO,UAAWH,EAAWrH,EAAMoC,YACtFsE,EAAQ,sBAAM5lB,UAAS,eAAU4mB,GAAzB,SAA0CtJ,IAAUuJ,oBAAoBH,EAAO,OAAQH,EAAWrH,EAAMoC,cAChHwE,EAAQxI,IAAUuJ,oBAAoBH,EAAO,QAASH,EAAWrH,EAAMoC,WAAY,GACnF7C,EAAMnB,IAAUuJ,oBAAoBH,EAAO,UAAWH,EAAWrH,EAAMoC,YACnEtC,GAAYC,IACd4G,EAASvI,IAAUuJ,oBAAoBH,EAAO,UAAWH,EAAWtH,EAAcqC,aAKtF,OADI8E,GAAY9I,IAAUwJ,YAAYjrB,EAAWoO,KAAU/G,EAAU,WAC9D,cAACyiB,EAAD,CAAuBlH,MAAKoH,SAAQC,QAAOC,OAAM7iB,UAAS0iB,Y,iCC9DnE,2DAMImB,EAAO,aAIPC,EAA4B/iB,IAAMC,YAAW,SAAUC,EAAMC,GAC/D,IAAIoZ,EAAWrZ,EAAKqZ,SAChBniB,EAAO8I,EAAK9I,KACZ2E,EAAYmE,EAAKnE,UACjBinB,EAAU9iB,EAAK8iB,QACfjmB,EAAOmD,EAAKnD,KACZE,EAAWiD,EAAKjD,SAChBV,EAAQ2D,EAAK3D,MACbE,EAAWyD,EAAKzD,SAChBwmB,EAAW/iB,EAAK+iB,SAChBnmB,EAAQ2D,YAA8BP,EAAM,CAAC,WAAY,OAAQ,YAAa,UAAW,OAAQ,WAAY,QAAS,WAAY,aAElIgjB,EAAYvmB,oBAAS,GACrBwmB,EAAUD,EAAU,GACpBE,EAAaF,EAAU,GAEvBG,EAAcC,uBAAY,SAAUpmB,GACb,UAArBA,EAAEC,OAAOomB,SAAqBH,GAAW,KAC5C,IACCI,EAAaF,uBAAY,SAAUpmB,GACZ,UAArBA,EAAEC,OAAOomB,SAAqBH,GAAW,KAC5C,IACH,OAAoBpjB,IAAMY,cAAcqb,IAAQpb,YAAS,GAAI/D,EAAO,CAClEqD,IAAKA,EACLpE,UAAW+E,IAAW/E,EAAWonB,GAAW,QAAS1mB,GAAY,YACjEM,UAAMykB,EACNiC,SAAUT,EACVziB,GAAI,UACWP,IAAMY,cAAc,QAAS,CAC5CxJ,KAAMA,EACN2F,KAAMA,EACNR,MAAOA,EACP4D,IAAK8iB,EACLS,aAAc,MACdV,UAAWA,EACXvmB,WAAYA,EACZa,QAAS+lB,EACT9lB,OAAQimB,EACRvmB,SAAUA,GAAY6lB,IACpBvJ,MAENwJ,EAAahiB,YAAc,eACZgiB,O,+HC7CA,SAASY,EAAT,GAAwJ,IAAxH/rB,EAAuH,EAAvHA,UAAwB4d,EAA+F,EAA5G5d,UAAa4d,aAAgBwF,EAA+E,EAA/EA,cAAeD,EAAgE,EAAhEA,SAAU0C,EAAsD,EAAtDA,iBAAkB0E,EAAoC,EAApCA,SAAoC,IAA1ByB,cAA0B,MAAjB,cAAiB,EACpK,OAAO,cAAC,IAAD,CAAK7nB,UAAU,QAAf,SAAwBhD,OAAOE,QAAQwkB,GAAkBxhB,KAAI,YAA0B,IAAD,mBAAvBqmB,EAAuB,KAAZuB,EAAY,KACvFC,EAAS,GAKb,OAJ+BA,EAAb,cAAdxB,EAAoC,cACjB,kBAAdA,EAAwC,8BAC1B,mBAAdA,EAAyC,0BACpCjJ,IAAU0K,cAAcvO,EAAc8M,EAAWA,GACxD,cAAC,IAAD,CAAqBvmB,UAAU,OAAOggB,GAAI,GAAIoD,GAAI,EAAG7C,GAAI,EAAzD,SACL,eAAC,IAAD,CAAMT,GAAI+H,EAAQ9kB,KAAK,YAAY/C,UAAU,QAA7C,UACE,cAAC,IAAK+f,OAAN,UAAcgI,IACd,cAAC,IAAK3H,KAAN,UACG0H,EAAO5nB,KAAI,SAAAwmB,GAAK,OAAI,cAAC,IAAD,CAA+C7qB,YAAWojB,gBAAeD,WAAUoH,WAAUnc,QAASyc,GAApFuB,KAAKC,UAAUxB,aAJ3CH,U,mOC+BN4B,EAxCI,SAAsBpnB,GACvC,IAAIqnB,EAAmBC,YAAgBtnB,EAAO,CAC5CunB,UAAW,aAETzO,EAAKuO,EAAiBvO,GACtB0O,EAAwBH,EAAiBI,gBACzCvL,EAAWmL,EAAiBnL,SAC5BqL,EAAYF,EAAiBE,UAC7BG,EAAaL,EAAiBK,WAC9BC,EAAeN,EAAiBM,aAChCC,EAAgBP,EAAiBO,cACjCnL,EAAW4K,EAAiB5K,SAE5BgL,EAAkBI,mBAAQ,WAC5B,OAAOL,GAAyB,SAAU5qB,EAAKqD,GAC7C,OAAO6Y,EAAKA,EAAK,IAAM7Y,EAAO,IAAMrD,EAAM,QAE3C,CAACkc,EAAI0O,IACJM,EAAaD,mBAAQ,WACvB,MAAO,CACL3L,SAAUA,EACVqL,UAAWA,EACXG,WAAYA,EACZC,aAAcA,IAAgB,EAC9BC,cAAeA,IAAiB,EAChCG,gBAAiB,SAAyBnrB,GACxC,OAAO6qB,EAAgB7qB,EAAK,YAE9BorB,gBAAiB,SAAyBprB,GACxC,OAAO6qB,EAAgB7qB,EAAK,WAG/B,CAACsf,EAAUqL,EAAWG,EAAYC,EAAcC,EAAeH,IAClE,OAAoBvkB,IAAMY,cAAcmkB,IAAWC,SAAU,CAC3DzoB,MAAOqoB,GACO5kB,IAAMY,cAAcqkB,IAAkBD,SAAU,CAC9DzoB,MAAOyc,GAAY,MAClBO,K,qCCvBU2L,EAdellB,IAAMC,YAAW,SAAUC,EAAMC,GAC7D,IAAIC,EAAWF,EAAKE,SAChBE,EAAUJ,EAAKK,GACfC,OAAwB,IAAZF,EAAqB,MAAQA,EACzCvE,EAAYmE,EAAKnE,UACjBe,EAAQ2D,YAA8BP,EAAM,CAAC,WAAY,KAAM,cAE/DilB,EAAoBxkB,YAAmBP,EAAU,eACrD,OAAoBJ,IAAMY,cAAcJ,EAAWK,YAAS,CAC1DV,IAAKA,GACJrD,EAAO,CACRf,UAAW+E,IAAW/E,EAAWopB,S,SCcrC,IAAIC,EAAuBplB,IAAMC,YAAW,SAAUnD,EAAOqD,GAC3D,IAAIklB,EAtBN,SAAuBvoB,GACrB,IAAIwoB,EAAUhK,qBAAWyJ,KACzB,IAAKO,EAAS,OAAOxoB,EAErB,IAAIunB,EAAYiB,EAAQjB,UACpBQ,EAAkBS,EAAQT,gBAC1BC,EAAkBQ,EAAQR,gBAC1BhP,EAAOrV,YAA8B6kB,EAAS,CAAC,YAAa,kBAAmB,oBAE/EC,GAAwC,IAArBzoB,EAAM0nB,aAA4C,IAApB1O,EAAK0O,WACtD9qB,EAAM8rB,YAAa1oB,EAAMqe,UAC7B,OAAOta,YAAS,GAAI/D,EAAO,CACzB2mB,OAAwB,MAAhB3mB,EAAM2mB,QAAyB,MAAP/pB,EAAc8rB,YAAanB,KAAe3qB,EAAMoD,EAAM2mB,OACtF7N,GAAIiP,EAAgB/nB,EAAMqe,UAC1B,kBAAmB2J,EAAgBhoB,EAAMqe,UACzCqJ,WAAYe,IAAqBzoB,EAAM0nB,YAAc1O,EAAK0O,YAAciB,KACxEhB,aAAoC,MAAtB3nB,EAAM2nB,aAAuB3nB,EAAM2nB,aAAe3O,EAAK2O,aACrEC,cAAsC,MAAvB5nB,EAAM4nB,cAAwB5nB,EAAM4nB,cAAgB5O,EAAK4O,gBAKrDgB,CAAc5oB,GAC/BsD,EAAWilB,EAAejlB,SAC1BrE,EAAYspB,EAAetpB,UAC3B0nB,EAAS4B,EAAe5B,OACxBkC,EAAUN,EAAeM,QACzBC,EAAaP,EAAeO,WAC5BC,EAAYR,EAAeQ,UAC3BC,EAAST,EAAeS,OACxBC,EAAYV,EAAeU,UAC3BC,EAAWX,EAAeW,SAC1BvB,EAAeY,EAAeZ,aAC9BC,EAAgBW,EAAeX,cAC/BuB,EAAaZ,EAAeb,WAC5B0B,EAAoBb,EAAe9kB,GACnCC,OAAkC,IAAtB0lB,EAA+B,MAAQA,EAEnDpQ,GADIuP,EAAelK,SACZ1a,YAA8B4kB,EAAgB,CAAC,WAAY,YAAa,SAAU,UAAW,aAAc,YAAa,SAAU,YAAa,WAAY,eAAgB,gBAAiB,aAAc,KAAM,cAEvN3kB,EAASC,YAAmBP,EAAU,YAC1C,IAAKqjB,IAAWwC,GAAcvB,EAAe,OAAO,KACpD,IAAIyB,EAAoBnmB,IAAMY,cAAcJ,EAAWK,YAAS,GAAIiV,EAAM,CACxE3V,IAAKA,EACLimB,KAAM,WACN,eAAgB3C,EAChB1nB,UAAW+E,IAAW/E,EAAW2E,EAAQ,CACvC+iB,OAAQA,OAgBZ,OAbIwC,IAAYE,EAAoBnmB,IAAMY,cAAcqlB,EAAY,CAClEI,GAAI5C,EACJkC,QAASA,EACTC,WAAYA,EACZC,UAAWA,EACXC,OAAQA,EACRC,UAAWA,EACXC,SAAUA,EACVvB,aAAcA,EACdC,cAAeA,GACdyB,IAGiBnmB,IAAMY,cAAcmkB,IAAWC,SAAU,CAC3DzoB,MAAO,MACOyD,IAAMY,cAAcqkB,IAAkBD,SAAU,CAC9DzoB,MAAO,MACN4pB,OAELf,EAAQrkB,YAAc,UACPqkB,QCxEXkB,EAAmB,SAAUC,GAG/B,SAASD,IACP,OAAOC,EAAiBC,MAAMlwB,KAAMmwB,YAAcnwB,KAUpD,OAbAowB,YAAeJ,EAAKC,GAMPD,EAAInoB,UAEVwoB,OAAS,WACd,MAAM,IAAIpwB,MAAM,gOAIX+vB,EAdc,CAerBtmB,IAAMQ,WAER8lB,EAAIM,UAAY1C,EAChBoC,EAAIO,QAAU3B,EACdoB,EAAIQ,KAAO1B,EACIkB,Q,mMCiEAS,OAjFf,YAAyK,IAAD,EAAvInvB,EAAuI,EAAvIA,UAAuI,IAA5HA,UAAa4d,EAA+G,EAA/GA,aAAcgD,EAAiG,EAAjGA,qBAAwBwC,EAAyE,EAAzEA,cAAeD,EAA0D,EAA1DA,SAAUoH,EAAgD,EAAhDA,SAAUpE,EAAsC,EAAtCA,YAAalD,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAEnJG,EAAQF,GAAsBC,EAC9BgM,EAAsBjM,EAAQ,UAAGA,EAASsC,kBAAZ,aAAG,EAAqB2J,oBAAsBpvB,EAAUovB,oBACtFjM,IAAUvC,EAAuBuC,EAASvC,sBAC9C,IAAMyO,EAAW5N,IAAU6N,mBAAmB1R,GAG9C,OAAO,uCACJ6D,IAAU8N,cAAc3R,IAAiB,eAAC4R,EAAA,EAAD,UAAK,eAACC,EAAA,EAAD,CAAKtL,GAAI,GAAIhgB,UAAU,OAAvB,SAC7C,eAAC6e,EAAA,EAAD,CAAmChjB,YAAWijB,WAAUC,cAAaC,WAAUC,sBAEjF,eAACoM,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKtrB,UAAU,OAAf,SACE,gBAACurB,EAAA,EAAD,CAAMvrB,UAAU,QAAQ8f,GAAG,eAAe/c,KAAK,YAA/C,UACE,eAACwoB,EAAA,EAAKnL,KAAN,UACE,eAACwH,EAAA,EAAD,CAA4B/rB,YAAWojB,gBAAeD,WAAU0C,iBAAkBwJ,EAAUhM,QAAO8C,cAAalD,WAAUC,cAAaqH,eAExIpH,EAAW,gBAACuM,EAAA,EAAKnH,OAAN,WACV,eAAClE,EAAA,EAAD,CAAQ1c,QAAS,WACf8Z,IAAUkO,eAAe/R,EAAcuF,EAASyM,aACrC,OAAXzJ,QAAW,IAAXA,QAFF,sDAICiJ,GAAuB,eAACS,EAAA,EAAD,CAAO1rB,UAAU,mCAAmCkD,QAAQ,SAA5D,SAAsE,0EAC/E,YAIvB,eAACmoB,EAAA,EAAD,CAAKrrB,UAAU,QAAf,SACE,eAACsrB,EAAA,EAAD,UACE,gBAACD,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKK,GAAI,EAAGC,GAAI,EAAG5rB,UAAU,OAA7B,SACE,gBAACurB,EAAA,EAAD,CAAMvrB,UAAU,2BAA2B8f,GAAG,eAAe/c,KAAK,YAAlE,UACE,eAACwoB,EAAA,EAAKxL,OAAN,mCACA,eAACwL,EAAA,EAAKnL,KAAN,CAAWpgB,UAAU,cAArB,SACE,eAACqrB,EAAA,EAAD,UACGruB,OAAOE,QAAQwe,IAASmQ,cAAc3M,EAAM4M,aAAa5rB,KAAI,mCAAE4b,EAAF,KAAUiQ,EAAV,YAC5D,gBAACT,EAAA,EAAD,CAAkBtL,GAAI,GAAIhgB,UAAU,OAApC,UACE,8BAAK0b,IAASgI,WAAW5H,KACzB,eAACuP,EAAA,EAAD,UACGU,EAAa7rB,KAAI,SAAA8rB,GAChB,IAAIC,EAAWvQ,IAASwQ,uBAAuBpQ,EAAQkQ,GACnDjuB,EAAiB,EACjB7B,EAAcwf,IAASyQ,wBAAwBrQ,EAAQkQ,GACvD9vB,IACF6B,EAAiBC,IAAiBouB,kBAAkB3P,EAAsB,CAAEE,OAAQb,EAAQc,QAASoP,IACrGhvB,OAAOE,QAAQwe,IAAS2Q,oBAAoBvQ,EAAQkQ,EAAWjuB,IAAiB0J,SAAQ,mCAAEwC,EAAF,KAAWwU,EAAX,YACtFwN,EAAShiB,IAAYgiB,EAAShiB,IAAY,GAAKwU,MAEnD,IAAI6N,EAAqB,eAAC/pB,EAAA,EAAD,CACvB7B,WAAUse,EACV9iB,YAAaA,EACb6B,eAAgBA,EAChByE,eAAgB,SAAC+pB,GAAD,OA/CN,SAACzQ,EAAQkQ,EAAWjuB,GAApB,cAAuC+gB,QAAvC,IAAuCA,OAAvC,EAAuCA,GAAW,SAAA0N,GAAK,MACxF,CAAE/P,qBAAsBze,IAAiBwE,eAAegqB,EAAM/P,qBAAsB,CAAEE,OAAQb,EAAQc,QAASoP,GAAajuB,OA8C3E0uB,CAA4B3Q,EAAQkQ,EAAWO,IACzE9pB,OAAQ,gBAACuB,EAAA,EAAD,CAAOd,QAAQ,UAAf,UAA0B8oB,EAA1B,YAEV,OAAO,gBAACV,EAAA,EAAD,CAAqBtL,GAAI,GAAIhgB,UAAU,OAAvC,UACL,gCAAKssB,EAAL,IAA0B5Q,IAASgR,iBAAiB5Q,EAAQkQ,EAAW9M,EAAMoC,eAC5E2K,EAAW,eAACZ,EAAA,EAAD,UACTruB,OAAOE,QAAQ+uB,GAAU/rB,KAAI,mCAAE+J,EAAF,KAAWwU,EAAX,YAC5B,gBAAC6M,EAAA,EAAD,CAAKtL,GAAI,GAAT,UAA4BS,IAAKkD,YAAY1Z,GAA7C,KAAyDwU,EAAKgC,IAAKkC,YAAY1Y,KAA7DA,QACb,OALM+hB,UAnBblQ,eAkCnBJ,IAASiR,cAAczsB,KAAI,SAAAsb,GAAO,OACjC0D,EAAMuM,YAAYjQ,GAAW,eAAC8P,EAAA,EAAD,CAAKK,GAAI,EAAGC,GAAI,EAAoC5rB,UAAU,OAA9D,SAC3B,eAAC6hB,EAAA,EAAD,CAAcC,WAAY5C,EAAMuM,YAAYjQ,GAAUwG,YAAaA,EAAaG,WAAY8I,KADzC/L,EAAMuM,YAAYjQ,IAE9D,mB,uHCpEN,SAASoR,GAAsB7rB,GAAQ,IAAD,EAC7ClF,EAAmGkF,EAAnGlF,UAD6C,EACsDkF,EAAxFlF,UAAa4d,EADqB,EACrBA,aAAcoT,EADO,EACPA,cAAiBzG,EAA4CrlB,EAA5CqlB,SAAUrH,EAAkChe,EAAlCge,YAAa+N,EAAqB/rB,EAArB+rB,iBADjC,EAEnBlsB,oBAAS,GAFU,mBAE9CmsB,EAF8C,KAEnCC,EAFmC,KAG/CC,EAAa3P,IAAUY,gBAAgBzE,GACvC+H,EAAgBlE,IAAUgB,iBAAiB7E,GAC3CzR,EAAQsV,IAAUkD,yBAAyB3kB,EAAW,kBAC1D,OAAO,gBAACwvB,EAAA,EAAD,WACL,eAACC,EAAA,EAAD,CAAKtL,GAAI,GAAIoD,GAAI,EAAjB,SAEE,gBAACmI,EAAA,EAAD,CAAMzL,GAAG,eAAe/c,KAAK,YAAY/C,UAAU,OAAnD,UACE,eAACurB,EAAA,EAAK2B,IAAN,CAAUxO,IAAKpB,IAAU6P,QAAQ1T,GAAezZ,UAAU,iBAC1D,eAACurB,EAAA,EAAKnL,KAAN,UACE,gBAACiL,EAAA,EAAD,WACE,gBAACC,EAAA,EAAD,CAAKtL,GAAI,GAAT,UACE,gCAAK1C,IAAUC,QAAQ9D,GAAvB,IAAsC,eAAC2T,EAAA,EAAD,CAAO1O,IAAKtgB,KAAOC,SAAS4uB,GAAajtB,UAAU,gBAAzF,IAA0G,eAACotB,EAAA,EAAD,CAAO1O,IAAG,UAAEtgB,KAAOS,mBAAT,aAAE,EAAqB2iB,GAAgBxhB,UAAU,mBACrK,8BAAI,eAAC,KAAD,CAAOF,MAAOwd,IAAU+P,QAAQ5T,GAAe1Z,SAAO,SAE5D,eAACurB,EAAA,EAAD,UACGyB,EAAY,eAAC1B,EAAA,EAAD,UAAK,eAACC,EAAA,EAAD,UAChB,gBAACgC,GAAA,EAAD,WACE,eAACA,GAAA,EAAWhI,QAAZ,UACE,eAACgI,GAAA,EAAW/H,KAAZ,qBAEF,eAACllB,GAAA,EAAD,CAAmBI,cAAe,SAACge,GAAD,OAASM,EAAY,iBAAkBwO,YAAM9O,EAAK,EAAG,MAAMje,MAAOwH,IACpG,eAACslB,GAAA,EAAW9H,OAAZ,UACE,eAACtF,EAAA,EAAD,UACE,eAAC,IAAD,CAAiBvgB,KAAM+lB,IAAQriB,KAAK,KAAKG,QAAS,kBAAMub,EAAY,iBAAkBzB,IAAUkQ,SAAS3xB,EAAUjB,kBAGvH,eAAC0yB,GAAA,EAAW9H,OAAZ,UACE,eAACiI,GAAA,EAAD,CACElJ,UAAU,SACVC,QAAS,eAACkJ,GAAA,EAAD,gFAFX,SAIE,eAACxN,EAAA,EAAD,CAAQhd,QAAQ,SAASM,QAAS,kBAAMwpB,GAAcD,IAAY1pB,KAAK,KAAvE,SACE,gCAAM,eAAC,IAAD,CAAiB1D,KAAMguB,qBAMrC,gBAACtC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,UACE,0CAAYtjB,OAEboe,EAAW,eAACkF,EAAA,EAAD,CAAKtL,GAAG,OAAOhgB,UAAU,YAAzB,SACV,eAACkgB,EAAA,EAAD,CAAQhd,QAAQ,OAAOM,QAAS,kBAAMwpB,GAAcD,IAAY1pB,KAAK,KAArE,SACE,gCAAM,eAAC,IAAD,CAAiB1D,KAAMklB,YAExB,UAGf,eAACyG,EAAA,EAAD,CAAKtL,GAAI,GAAT,SACE,gBAACqL,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKtL,GAAI,GAAT,SAAa,8BAAK1C,IAAUsQ,qBAAqBnU,OACjD,eAAC6R,EAAA,EAAD,UACE,eAACD,EAAA,EAAD,CAAKrrB,UAAU,OAAf,SACG,aAAIC,MAAM,GAAG1C,QAAQ2C,KAAI,SAAAE,GAAC,OACzB,eAACkrB,EAAA,EAAD,CAAKtL,GAAI,EAAGhgB,UAAU,MAAtB,SACE,eAACotB,EAAA,EAAD,CAAO1O,IAAKpB,IAAUuQ,oBAAoBpU,EAAcrZ,GAAIJ,UAAS,uBAAkB6sB,EAAgBzsB,EAAI,GAAK,gBAC9G6jB,MAAO,CAAE6J,OAAQ,WAAaC,eAAa,EAACvqB,QAAS4iB,EAAY,kBAC/D0G,EAAkB1sB,EAAI,IAAOysB,EAAgBzsB,EAAIA,EAAI,IAAM,QAHhCA,yBAanD,gBAACkrB,EAAA,EAAD,CAAKtL,GAAI,GAAIoD,GAAI,EAAjB,UACE,eAAC4K,GAAD,eAA2BjtB,IAC3B,eAACktB,GAAD,eAAoBltB,UAI1B,SAASmtB,GAAT,GAAqC,IAAD,EAAhBjkB,EAAgB,EAAhBA,QAASwU,EAAO,EAAPA,IAC3B,OAAKxU,EACE,gBAACqhB,EAAA,EAAD,CAAKtL,GAAI,GAAI4L,GAAI,EAAG5rB,UAAU,OAA9B,UACL,gCAAM,+BAAIgK,aAAYC,GAAhB,IAA2BwW,IAAKkD,YAAY1Z,QAClD,wBAAMjK,UAAS,sCAAiCygB,IAAK0N,eAAelkB,IAApE,WAAqF,OAAHwU,QAAG,IAAHA,GAAA,UAAAA,EAAKuF,eAAL,oBAAAvF,EAAegC,IAAK6F,UAAUrc,MAAawU,EAAKgC,IAAKkC,YAAY1Y,SAHhI,KAMvB,SAASmkB,GAAT,GAAkE,IAAvCC,EAAsC,EAAtCA,MAAsC,IAA/BxxB,aAA+B,MAAvB,GAAuB,MAAnBykB,kBAAmB,MAAN,GAAM,EAC/D,OAAwC,IAApCtkB,OAAOO,KAAP,OAAYV,QAAZ,IAAYA,IAAS,IAAIoF,OAAqB,KAC3C,gBAACspB,EAAA,EAAD,CAAMzL,GAAG,cAAc/c,KAAK,YAAY/C,UAAU,OAAlD,UACL,eAACurB,EAAA,EAAKxL,OAAN,CAAa/f,UAAU,YAAvB,SAAoCquB,IACpC,eAAC9C,EAAA,EAAKnL,KAAN,CAAWpgB,UAAU,YAArB,SAAiC,eAACqrB,EAAA,EAAD,UAC9BruB,OAAOE,QAAQL,GAAOqD,KAAI,mCAAEvC,EAAF,KAAO8gB,EAAP,WAAwB,cAAR9gB,EAAsB,eAAC,IAAM+F,SAAP,UAA4B1G,OAAOE,QAAP,OAAeuhB,QAAf,IAAeA,IAAO,IAAIve,KAAI,mCAAEouB,EAAF,KAAQC,EAAR,YACzH,eAACL,GAAD,CAAqBjkB,QAASqkB,EAAM7P,IAAKzhB,OAAOE,QAAP,OAAeqxB,QAAf,IAAeA,IAAY,IAAIC,QAAO,SAACC,EAAD,0BAAQH,EAAR,KAAcI,EAAd,YAA8BD,EAAOnN,EAAWgN,GAAQI,IAAY,IAApIJ,OADqE3wB,GAElF,eAACuwB,GAAD,CAAoBjkB,QAAStM,EAAK8gB,IAAKA,GAAxB9gB,aAIzB,SAASqwB,GAAsBjtB,GAAQ,IAAD,EACRH,oBAAS,GADD,mBAC/B+tB,EAD+B,KACtBC,EADsB,OAEQhuB,oBAAS,GAFjB,mBAE/BiuB,EAF+B,KAEdC,EAFc,KAG9BjzB,EAAqGkF,EAArGlF,UAH8B,EAGuEkF,EAA1FlF,UAAa4d,EAHM,EAGNA,aAHM,IAGQsV,cAHR,MAGiB,GAHjB,EAGuB3I,EAAgDrlB,EAAhDqlB,SAAUtH,EAAsC/d,EAAtC+d,SAAUG,EAA4Ble,EAA5Bke,cAAeD,EAAaje,EAAbie,SAG1FE,EAAQF,GAAsBC,EAE5B+P,EAAiB,SAACrxB,EAAK6C,GAAN,OAAgBse,GAAS,SAAA0N,GAI9C,MAFY,QAAR7uB,IAAe6uB,EAAMuC,OAAOhxB,eAAiB,GACjDyuB,EAAMuC,OAAOpxB,GAAO6C,EACb,CAAEuuB,OAAQvC,EAAMuC,YAErBpyB,EAAarC,IAAOoC,oBAAoBqyB,EAAOpxB,KAC/C6jB,EAAgBlE,IAAUgB,iBAAiB7E,GAC3CwV,EAAuBF,EAAOrxB,iBAAmBpD,IAAO+B,qBAAqB0yB,EAAOpxB,IAAKoxB,EAAOn0B,UAChGs0B,EAAsBH,EAAOlxB,gBAAkBvD,IAAOkC,oBAAoBuyB,EAAOpxB,IAAKoxB,EAAOn0B,UAC7Fu0B,EAAoB70B,IAAOkB,qBAAqBuzB,EAAOpxB,KACvDyxB,EAAmB90B,IAAOsC,mBAAmBmyB,EAAOpxB,IAAKoxB,EAAOpzB,iBAAa8pB,GAC7E4J,EAAmB/0B,IAAOwD,yBAAyBixB,EAAOpxB,IAAKoxB,EAAOpzB,YAAaozB,EAAOhxB,oBAAgB0nB,GAC1GvpB,EAAc5B,IAAO2B,qBAAqB8yB,EAAOpxB,KACjDI,EAAiBgxB,EAAOhxB,eACxBuxB,EAAiB,eAAC/sB,EAAA,EAAD,CACnBrG,YAAaA,EACb6B,eAAgBA,EAChByE,eAAgB,SAAC+pB,GAAD,OAAUyC,EAAe,iBAAkBzC,IAC3D9pB,OAAQ,gCAAO0sB,MAGjB,OAAO,gBAAC5D,EAAA,EAAD,CAAMzL,GAAG,eAAe/c,KAAK,YAAY/C,UAAU,OAAnD,UACL,eAACurB,EAAA,EAAKxL,OAAN,UACE,gBAACsL,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,UACE,6CAEF,eAACA,EAAA,EAAD,CAAKtL,GAAG,OAAR,SACE,eAACE,EAAA,EAAD,CAAQhd,QAAQ,OAAOG,KAAK,KAAKG,QAAS,kBAAMsrB,GAAoBD,IAApE,SACE,kCAAM,eAAC,IAAD,CAAiBlvB,KAAM4vB,MAA7B,IAA8CV,EAAkB,aAAe,oBAGlFzI,EAAW,eAACkF,EAAA,EAAD,CAAKtL,GAAG,OAAR,SACV,eAACE,EAAA,EAAD,CAAQhd,QAASyrB,EAAU,SAAW,OAAQnrB,QAAS,kBAAMorB,GAAYD,IAAUtrB,KAAK,KAAxF,SACE,kCAAM,eAAC,IAAD,CAAiB1D,KAAMgvB,EAAUhB,IAAS9I,MAAhD,IAA4D8J,EAAU,OAAS,cAE1E,UAGb,gBAACpD,EAAA,EAAKnL,KAAN,WACE,gBAACiL,EAAA,EAAD,CAAKrrB,UAAU,OAAf,UACE,eAACsrB,EAAA,EAAD,CAAKtL,GAAI,GAAIoD,GAAI,EAAjB,SACE,eAACgK,EAAA,EAAD,CAAO1O,IAAKpkB,IAAO6B,aAAa4yB,EAAOpxB,KAAMqC,UAAS,4BAAuB1F,IAAOgB,gBAAgByzB,EAAOpxB,KAArD,QAAiE2lB,WAAS,MAEjIqL,EAAU,eAACrD,EAAA,EAAD,UACT,gBAACD,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKM,GAAG,OAAO5L,GAAI,EAAGhgB,UAAU,YAAhC,SACE,eAACwvB,EAAA,EAAD,CAAgBnB,MAAO/zB,IAAOY,cAAc6zB,EAAOpxB,KAAnD,SACG,aAAIsC,MAAM,GAAG1C,QAAQkyB,UAAUvvB,KAAI,SAAAvC,GAAG,OAAIA,EAAM,KAAGuC,KAAI,SAACwvB,EAAMtvB,EAAGuvB,GAAV,OAAkB,gBAAC,IAAMjsB,SAAP,WACxE,eAACksB,EAAA,EAASC,SAAV,UAAuC,eAAC,KAAD,CAAO/vB,MAAO4vB,KAA7B,OAASA,GAChC1yB,OAAOE,QAAQ5C,IAAOwC,iBAAiB0kB,IAAgBrkB,QAAO,oDAAgC5B,SAAWm0B,KAAMxvB,KAAI,mCAAEvC,EAAF,KAAOF,EAAP,YAClH,eAACmyB,EAAA,EAASrsB,KAAV,CAAyBC,QAAS,kBAAMwrB,EAAe,MAAOrxB,IAA9D,SACGF,EAAUpC,MADOsC,MAIpByC,IAAMuvB,EAAI1tB,OAAS,GAAM,eAAE2tB,EAAA,EAASvL,QAAX,MAPkEqL,UAWnG,eAACpE,EAAA,EAAD,CAAKM,GAAG,OAAO5L,GAAI,EAAGhgB,UAAU,YAAhC,SACE,gBAACwvB,EAAA,EAAD,CAAgBnB,MAAO/zB,IAAOK,aAAao0B,EAAOn0B,UAAlD,UACE,eAACg1B,EAAA,EAASC,SAAV,UACE,0DAED7yB,OAAOE,QAAQpC,KAAeoF,KAAI,mCAAEvC,EAAF,KAAOtC,EAAP,YACjC,eAACu0B,EAAA,EAASrsB,KAAV,CAAyBC,QAAS,kBAAMwrB,EAAe,WAAYrxB,IAAnE,SACGtC,GADiBsC,WAKzBwxB,GAAqB,eAAC7D,EAAA,EAAD,CAAKM,GAAG,OAAO5L,GAAI,EAAGhgB,UAAU,OAAhC,SACpB,gBAACwvB,EAAA,EAAD,CAAgBnB,MAAK,qBAAgBU,EAAOpzB,YAAc,GAAKqE,UAAU,QAAzE,UACE,eAAC4vB,EAAA,EAASC,SAAV,UACE,+DAEF,eAACD,EAAA,EAASvL,QAAV,IACC,aAAIpkB,MAAM,GAAG1C,QAAQ2C,KAAI,SAAAvC,GAAG,OAC3B,eAACiyB,EAAA,EAASrsB,KAAV,CAAyBC,QAAS,kBAAMwrB,EAAe,cAAerxB,IAAtE,8BACiBA,EAAM,IADHA,WAK1B,eAAC2tB,EAAA,EAAD,CAAKtL,GAAI,GAAIhgB,UAAU,OAAvB,SACE,eAAColB,GAAA,EAAD,CACE/pB,KAAM,kCAAM,eAAC,IAAD,CAAiBsE,KAAMmwB,IAAS9vB,UAAU,SAAhD,SACNO,YAAY,gBACZC,MAAOyuB,EACP9K,SAAS,EACT1jB,cAAe,SAACD,GAAD,OAAWwuB,EAAe,kBAAmBxuB,IAC5Dge,aAAclkB,IAAO+B,qBAAqB0yB,EAAOpxB,IAAKoxB,EAAOn0B,cAGhE+B,GAAc,eAAC2uB,EAAA,EAAD,CAAKtL,GAAI,GAAIhgB,UAAU,OAAvB,SACb,eAAColB,GAAA,EAAD,CACE/pB,KAAM,kCAAM,uBAAM2E,UAAU,OAAhB,SAAwBgK,aAAYrN,KAAoB8jB,IAAKkD,YAAYhnB,MACrF4D,YAAY,iBACZC,MAAO0uB,EACP/K,QAA0C,MAAjC1D,IAAKkC,YAAYhmB,GAC1B8D,cAAe,SAACD,GAAD,OAAWwuB,EAAe,iBAAkBxuB,IAC3Dge,aAAclkB,IAAOkC,oBAAoBuyB,EAAOpxB,IAAKoxB,EAAOn0B,mBAKlE,gBAAC0wB,EAAA,EAAD,WACE,eAACD,EAAA,EAAD,CAAKrrB,UAAU,OAAf,SAAsB,gBAACsrB,EAAA,EAAD,WACpB,sBAAItrB,UAAU,OAAd,UAAsB1F,IAAOY,cAAc6zB,EAAOpxB,KAAlD,IAAyDrD,IAAOK,aAAao0B,EAAOn0B,UAApF,IAAgGu0B,GAAiB,sBAAmBJ,EAAOpzB,YAAc,EAAxC,QACjH,iCAAQ,eAAC,KAAD,CAAOmE,MAAOxF,IAAOgB,gBAAgByzB,EAAOpxB,cAEtD,eAAC0tB,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,UAAMgE,MAGR,6BAAIH,GAAqB70B,IAAOoB,4BAA4BqzB,EAAOpxB,IAAKoxB,EAAOpzB,YAAtD,OAAmEujB,QAAnE,IAAmEA,OAAnE,EAAmEA,EAAOoC,WAAYzlB,KAC/G,eAACuyB,GAAD,CAAiBC,MAAO,aAAcxxB,MAAK,cAAIsM,IAAK8lB,GAAuBtyB,EAAauyB,GAAuB5N,WAAU,OAAEpC,QAAF,IAAEA,OAAF,EAAEA,EAAOoC,aAClI,eAAC8M,GAAD,CAAiBC,MAAO,cAAexxB,MAAOuyB,EAAkB9N,WAAU,OAAEpC,QAAF,IAAEA,OAAF,EAAEA,EAAOoC,aACnF,eAAC8M,GAAD,CAAiBC,MAAO,oBAAqBxxB,MAAOwyB,EAAkB/N,WAAU,OAAEpC,QAAF,IAAEA,OAAF,EAAEA,EAAOoC,mBAG9FuN,GAAmB,eAACxD,EAAA,EAAD,UAAK,eAACC,EAAA,EAAD,UAAK,iCAAQhxB,IAAOyB,qBAAqBgzB,EAAOpxB,iBAK/E,SAASswB,GAAeltB,GAAQ,IACxBqlB,EAA8DrlB,EAA9DqlB,SAAUvqB,EAAoDkF,EAApDlF,UAAWkjB,EAAyChe,EAAzCge,YAAaE,EAA4Ble,EAA5Bke,cAAeD,EAAaje,EAAbie,SAD1B,EAGDpe,oBAAS,GAHR,mBAGxB+tB,EAHwB,KAGfC,EAHe,OAIShuB,oBAAS,GAJlB,mBAIxBmvB,EAJwB,KAIVC,EAJU,KAMzBC,EAAiB,CAAC,SAAU,YAAa,WAAY,YAAa,SAChEC,EAAkB,CAAC,UAAW,WAAY,YAChDA,EAAgB3R,KAAhB,MAAA2R,EAAwBD,GACxB,IAAME,EAAe,CAAC,cAAe,KAAM,MAAO,eAAgB,MAAO,OAAQ,eAAgB,MAAO,QACxGA,EAAa5R,KAAb,MAAA4R,EAAqBF,GACrB,IAAMG,EAAgB,CAAC,UAAW,WAAY,aAAc,UAE5D9S,IAAUsD,mBAAmBnZ,SAAQ,SAAA4oB,GACnCD,EAAc7R,KAAd,UAAsB8R,EAAtB,UACAD,EAAc7R,KAAd,UAAsB8R,EAAtB,aAEF,IAEIC,EAAqBhT,IAAUkD,yBAAyB3kB,EAAW,sBACnE00B,EAAqBjT,IAAUkD,yBAAyB3kB,EAAW,sBACnE20B,EAAsB/P,IAAKkC,YAAY2N,GAErCG,EAAsE,MAAzChQ,IAAKkC,YAAY2N,GAEhDI,EAAuB,CAAE70B,YAAWojB,gBAAeD,WAAUoH,YACjE,OAAO,uCACL,gBAACmF,EAAA,EAAD,CAAMzL,GAAG,eAAe/c,KAAK,YAAY/C,UAAU,OAAnD,UACE,eAACurB,EAAA,EAAKxL,OAAN,UACE,gBAACsL,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,UACE,sDAEDlF,EAAW,eAACkF,EAAA,EAAD,CAAKtL,GAAG,OAAR,SACV,eAACE,EAAA,EAAD,CAAQhd,QAASyrB,EAAU,SAAW,OAAQnrB,QAAS,kBAAMorB,GAAYD,IAAUtrB,KAAK,KAAxF,SACE,kCAAM,eAAC,IAAD,CAAiB1D,KAAMgvB,EAAUhB,IAAS9I,MAAhD,IAA4D8J,EAAU,OAAS,cAE1E,UAGZA,EACC,eAACpD,EAAA,EAAKnL,KAAN,UACE,gBAACiL,EAAA,EAAD,CAAKrrB,UAAU,OAAf,UACGmwB,EAAajwB,KAAI,SAAA+J,GAAO,OACvB,eAACqhB,EAAA,EAAD,CAAKM,GAAI,EAAG5L,GAAI,GAAhB,SACE,eAACoF,GAAA,EAAD,CACEplB,UAAU,OACV3E,KAAM,kCAAO2O,aAAYC,GAAnB,IAA8BwW,IAAKkQ,kBAAkB1mB,MAC3D1J,YAAW,eAAUkgB,IAAKkD,YAAY1Z,IACtCzJ,MAAO8c,IAAUkD,yBAAyB3kB,EAAWoO,GACrDka,QAAuC,MAA9B1D,IAAKkC,YAAY1Y,GAC1BxJ,cAAe,SAACD,GAAD,OAAWue,EAAY9U,EAASzJ,IAC/Cge,aAAclB,IAAUqD,iBAAiB9kB,EAAWoO,MAR/BA,MAY3B,eAACqhB,EAAA,EAAD,CAAKM,GAAI,EAAG5L,GAAI,GAAhB,SACE,gBAACsN,GAAA,EAAD,WACE,gBAACkC,EAAA,EAAD,CACEnB,MAAO5N,IAAKmQ,uBAAuBN,EAAoB,oBACvD9rB,GAAI8oB,KAAWhI,QAFjB,UAIE,eAACsK,EAAA,EAASC,SAAV,uCACCtnB,KAA4BrI,KAAI,SAAAvC,GAAG,OAClC,eAACiyB,EAAA,EAASrsB,KAAV,CAAyBC,QAAS,kBAAMub,EAAY,qBAAsBphB,IAA1E,SACG8iB,IAAKmQ,uBAAuBjzB,IADXA,SAIxB,eAAC0C,GAAA,EAAD,CAAmBC,MAAOmwB,EACxBlwB,YAAY,yBACZC,MAAO8c,IAAUkD,yBAAyB3kB,EAAW,sBACrD4E,cAAe,SAACD,GAAD,OAAWue,EAAY,qBAAsBve,MAC7DiwB,GAA+B,eAACnD,GAAA,EAAW9H,OAAZ,UAC9B,eAAC8H,GAAA,EAAW/H,KAAZ,4BAMV,eAACgG,EAAA,EAAKnL,KAAN,UACE,gBAACiL,EAAA,EAAD,CAAKrrB,UAAU,OAAf,UACGkwB,EAAgBhwB,KAAI,SAAA+J,GAAO,OAAI,eAACqhB,EAAA,EAAD,CAAKtL,GAAI,GAAI4L,GAAI,EAAjB,SAAmC,eAACzF,GAAA,EAAD,aAAalc,QAASA,GAAaymB,KAA7CzmB,MACxDsmB,EAAqB,gBAACjF,EAAA,EAAD,CAAKM,GAAI,EAAG5L,GAAI,GAAhB,UACpB,kCAAM,8CAAN,IAA0B,uBAAMhgB,UAAWsd,IAAUwJ,YAAYjrB,EAAW,sBAAwB,eAAiB,GAA3F,SAAgG4kB,IAAKkD,YAAY2M,QAC3I,uBAAMtwB,UAAS,sBAAiBsd,IAAUwJ,YAAYjrB,EAAW,sBAAwB,eAAiB,IAA1G,mBAAoH00B,GAApH,OAAyIC,QAClI,aAKjB,gBAACjF,EAAA,EAAD,CAAMzL,GAAG,eAAe/c,KAAK,YAAY/C,UAAU,OAAnD,UACE,eAACurB,EAAA,EAAKxL,OAAN,UACE,gBAACsL,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,UACE,kDAEDlF,EAAW,eAACkF,EAAA,EAAD,CAAKtL,GAAG,OAAR,SACV,eAACE,EAAA,EAAD,CAAQhd,QAAS6sB,EAAe,SAAW,OAAQvsB,QAAS,kBAAMwsB,GAAiBD,IAAe1sB,KAAK,KAAvG,SACE,kCAAM,eAAC,IAAD,CAAiB1D,KAAMowB,EAAepC,IAAS9I,MAArD,IAAiEkL,EAAe,OAAS,cAEpF,UAGZA,EACC,eAACxE,EAAA,EAAKnL,KAAN,UACE,eAACiL,EAAA,EAAD,CAAKrrB,UAAU,OAAf,SACGowB,EAAclwB,KAAI,SAAA+J,GAAO,OACxB,eAACqhB,EAAA,EAAD,CAAKM,GAAI,EAAG5L,GAAI,GAAhB,SACE,eAACoF,GAAA,EAAD,CACEplB,UAAU,OACV3E,KAAM,kCAAO2O,aAAYC,GAAnB,IAA8BwW,IAAKkD,YAAY1Z,MACrD1J,YAAW,eAAUkgB,IAAKC,eAAezW,IACzCzJ,MAAO8c,IAAUkD,yBAAyB3kB,EAAWoO,GACrDka,QAAuC,MAA9B1D,IAAKkC,YAAY1Y,GAC1BxJ,cAAe,SAACD,GAAD,OAAWue,EAAY9U,EAASzJ,IAC/Cge,aAAclB,IAAUqD,iBAAiB9kB,EAAWoO,MAR/BA,UAa/B,eAACshB,EAAA,EAAKnL,KAAN,UACE,eAACiL,EAAA,EAAD,CAAKrrB,UAAU,OAAf,SAAuBowB,EAAclwB,KAAI,SAAA+J,GAAO,OAAI,eAACqhB,EAAA,EAAD,CAAKtL,GAAI,GAAI4L,GAAI,EAAjB,SAAmC,eAACzF,GAAA,EAAD,aAAalc,QAASA,GAAaymB,KAA7CzmB,aAInF,gBAACshB,EAAA,EAAD,CAAMzL,GAAG,eAAe/c,KAAK,YAAY/C,UAAU,OAAnD,UACE,eAACurB,EAAA,EAAKxL,OAAN,UACE,eAACsL,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,UACE,qDAIN,eAACC,EAAA,EAAKnL,KAAN,UACE,eAACiL,EAAA,EAAD,CAAKrrB,UAAU,OAAf,SArHe,CAAC,cAAe,eAAgB,aAAc,aAAc,kBAAmB,kBAAmB,OAAQ,WAAY,UAAW,gBAqH5GE,KAAI,SAAA+J,GAAO,OAAI,eAACqhB,EAAA,EAAD,CAAKtL,GAAI,GAAI4L,GAAI,EAAjB,SAAmC,eAACzF,GAAA,EAAD,aAAalc,QAASA,GAAaymB,KAA7CzmB,gB,iCC/WrE,SAAS4mB,GAAoB9vB,GAAQ,IAC5ClF,EAA8HkF,EAA9HlF,UAD2C,EACmFkF,EAAnHlF,UAAa4d,EADmB,EACnBA,aAAc7e,EADK,EACLA,SAAUiyB,EADL,EACKA,cAAiBzG,EAA6DrlB,EAA7DqlB,SAAUtH,EAAmD/d,EAAnD+d,SAAUC,EAAyChe,EAAzCge,YAAaC,EAA4Bje,EAA5Bie,SAAUC,EAAkBle,EAAlBke,cAE9G6R,EAAYxT,IAAUyT,aAAan2B,GAMnCo2B,EAAiB,2BAAQjwB,GAAR,IAAe+vB,cAEpC,OAAO,uCACL,eAACzF,EAAA,EAAD,UAAK,eAACC,EAAA,EAAD,CAAKtL,GAAI,GAAIhgB,UAAU,OAAvB,SACH,eAAC6e,EAAA,EAAD,CAAmChjB,YAAWijB,WAAUC,cAAaC,WAAUC,sBAEjF,eAACoM,EAAA,EAAD,UAAK,eAACC,EAAA,EAAD,UAAK,eAAC2F,GAAD,eAAqBlwB,QAC/B,gBAACsqB,EAAA,EAAD,WAXmB,CAAC,CAAC,OAAQ,yBAA0B,CAAC,QAAS,mBAAoB,CAAC,QAAS,oBAa7EnrB,KAAI,mCAAEgxB,EAAF,KAAQC,EAAR,YAClB,eAAC7F,EAAA,EAAD,CAAgBtL,GAAI,GAAIoD,GAAI,EAAGwI,GAAI,EAAG5rB,UAAU,OAAhD,SACE,eAACoxB,GAAD,2BACMJ,GADN,IAEEzK,UAAW2K,EACXG,SAAUF,MAJJD,MAOX5T,IAAUgU,UAAU7X,EAAc,UAAU,IAAU,eAAC6R,EAAA,EAAD,CAAKtL,GAAI,GAAIoD,GAAI,EAAGwI,GAAI,EAAG5rB,UAAU,OAArC,SACrD,eAACoxB,GAAD,2BACMJ,GADN,IAEEzK,UAAU,SACV8K,SAAS,6BAIf,eAAChG,EAAA,EAAD,UA3BiB,CAAC,CAAC,WAAY,0BAA2B,GAAI,CAAC,WAAY,0BAA2B,GAAI,CAAC,WAAY,sBAAuB,IA6B9HnrB,KAAI,YAAyB,IAAD,mBAAtBgxB,EAAsB,KAAhBC,EAAgB,KAATI,EAAS,KACpCC,EAAUV,GAAaS,EAC3B,OAAO,eAACjG,EAAA,EAAD,CAAgBrH,MAAO,CAAEC,QAASsN,EAAU,EAAI,IAAOxR,GAAI,GAAIoD,GAAI,EAAGpjB,UAAU,OAAhF,SACL,eAACoxB,GAAD,2BACMJ,GADN,IAEEzK,UAAW2K,EACXG,SAAUF,MAJGD,QASrB,eAAC7F,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,UACE,sBAAItrB,UAAU,cAAd,+BAA+C6sB,SAGnD,eAACxB,EAAA,EAAD,CAAKrrB,UAAU,QAAf,SAEG,aAAIC,MAAM,GAAG1C,QAAQ2C,KAAI,SAAAE,GACxB,IAAI8wB,EAAI,uBAAmB9wB,EAAI,GAC/B,OAAO,eAACkrB,EAAA,EAAD,CAAatL,GAAI,GAAIoD,GAAI,EAAGpjB,UAAU,OAC3CikB,MAAO,CAAEC,QAAS2I,EAAgBzsB,EAAI,EAAI,IADrC,SAEL,eAACgxB,GAAD,2BACMJ,GADN,IAEEzK,UAAW2K,EACXG,SAAQ,2BAAsBjxB,EAAI,GAClCqxB,aAAcrL,EAAY,kBAAMtH,EAAS,CAAE+N,cAAgBzsB,EAAI,IAAOysB,EAAgBzsB,EAAIA,EAAI,UAAQqlB,MANzFrlB,WAazB,IAAMsxB,GAAqB,CACzBC,iBA6BF,YAAsC,IAAVnxB,EAAS,EAATA,MAC1B,OAAO,eAAC+qB,EAAA,EAAD,CAAMzL,GAAG,cAAc/c,KAAK,YAA5B,SAAwC,eAACwoB,EAAA,EAAKnL,KAAN,CAAWpgB,UAAU,MAArB,SAC7C,wBAAMA,UAAU,oBAAhB,UAAqCygB,IAAKkD,YAAY,oBAAtD,IAA2E,eAACyJ,EAAA,EAAD,CAAO1O,IAAKtgB,KAAOC,SAASI,QAASuB,UAAU,gBAA1H,IAA2I,eAACotB,EAAA,EAAD,CAAO1O,IAAKtgB,KAAOC,SAASE,KAAMyB,UAAU,gBAAvL,IAAyMQ,UA9B3MoxB,mBAiCF,YAAwC,IAAVpxB,EAAS,EAATA,MAC5B,OAAO,eAAC+qB,EAAA,EAAD,CAAMzL,GAAG,cAAc/c,KAAK,YAA5B,SAAwC,eAACwoB,EAAA,EAAKnL,KAAN,CAAWpgB,UAAU,MAArB,SAC7C,wBAAMA,UAAU,sBAAhB,UAAuCygB,IAAKkD,YAAY,sBAAxD,IAA+E,eAACyJ,EAAA,EAAD,CAAO1O,IAAKtgB,KAAOC,SAASI,QAASuB,UAAU,gBAA9H,IAA+I,eAACotB,EAAA,EAAD,CAAO1O,IAAKtgB,KAAOC,SAASM,MAAOqB,UAAU,gBAA5L,IAA8MQ,UAlChNqxB,eAqCF,YAAoC,IAAVrxB,EAAS,EAATA,MACxB,OAAO,eAAC+qB,EAAA,EAAD,CAAMzL,GAAG,cAAc/c,KAAK,YAA5B,SAAwC,eAACwoB,EAAA,EAAKnL,KAAN,CAAWpgB,UAAU,MAArB,SAC7C,wBAAMA,UAAU,kBAAhB,UAAmCygB,IAAKkD,YAAY,kBAApD,IAAuE,eAACyJ,EAAA,EAAD,CAAO1O,IAAKtgB,KAAOC,SAASI,QAASuB,UAAU,gBAAtH,IAAuI,eAACotB,EAAA,EAAD,CAAO1O,IAAKtgB,KAAOC,SAASO,KAAMoB,UAAU,gBAAnL,IAAqMQ,UAtCvMsxB,UAyCF,YAA+B,IAAVtxB,EAAS,EAATA,MACnB,OAAO,eAAC+qB,EAAA,EAAD,CAAMzL,GAAG,cAAc/c,KAAK,YAA5B,SAAwC,eAACwoB,EAAA,EAAKnL,KAAN,CAAWpgB,UAAU,MAArB,SAC7C,wBAAMA,UAAU,aAAhB,UAA8BygB,IAAKkD,YAAY,aAA/C,IAA6D,eAACyJ,EAAA,EAAD,CAAO1O,IAAKtgB,KAAOC,SAASI,QAASuB,UAAU,gBAA5G,IAA6H,eAACotB,EAAA,EAAD,CAAO1O,IAAKtgB,KAAOC,SAASM,MAAOqB,UAAU,gBAA1K,IAA2L,eAACotB,EAAA,EAAD,CAAO1O,IAAKtgB,KAAOC,SAASO,KAAMoB,UAAU,gBAAvO,IAAwP,eAACotB,EAAA,EAAD,CAAO1O,IAAKtgB,KAAOC,SAASE,KAAMyB,UAAU,gBAApS,IAAqT,eAACotB,EAAA,EAAD,CAAO1O,IAAKtgB,KAAOC,SAASC,MAAO0B,UAAU,gBAAlW,IAAoXQ,UA1CtXuxB,cA6CF,YAAmC,IAAVvxB,EAAS,EAATA,MACjBwxB,EAAc,eAACvE,GAAA,EAAD,CAClBlJ,UAAU,MACVC,QAAS,gBAACkJ,GAAA,EAAD,8CAAyC,uBAAM1tB,UAAU,WAAhB,wBAFhC,SAIlB,eAAC,IAAD,CAAiBL,KAAMsyB,IAAkBjyB,UAAU,OAAOikB,MAAO,CAAE6J,OAAQ,YAE7E,OAAO,eAACvC,EAAA,EAAD,CAAMzL,GAAG,cAAc/c,KAAK,YAA5B,SAAwC,eAACwoB,EAAA,EAAKnL,KAAN,CAAWpgB,UAAU,MAArB,SAC7C,wBAAMA,UAAU,iBAAhB,UAAkCygB,IAAKkD,YAAY,iBAAnD,IAAqE,eAACyJ,EAAA,EAAD,CAAO1O,IAAKtgB,KAAOC,SAASM,MAAOqB,UAAU,gBAAlH,IAAmI,eAACotB,EAAA,EAAD,CAAO1O,IAAKtgB,KAAOC,SAASE,KAAMyB,UAAU,gBAA/K,KAAiM,yBAAOA,UAAU,gBAAjB,yBAA8CgyB,EAA9C,OAAjM,IAAsQxxB,UApDxQ0xB,eAuDF,YAAoC,IAAV1xB,EAAS,EAATA,MACxB,OAAO,eAAC+qB,EAAA,EAAD,CAAMzL,GAAG,cAAc/c,KAAK,YAA5B,SAAwC,eAACwoB,EAAA,EAAKnL,KAAN,CAAWpgB,UAAU,MAArB,SAC7C,wBAAMA,UAAU,kBAAhB,UAAmCygB,IAAKkD,YAAY,kBAApD,IAAuE,eAACyJ,EAAA,EAAD,CAAO1O,IAAKtgB,KAAOC,SAASI,QAASuB,UAAU,gBAAtH,IAAuI,eAACotB,EAAA,EAAD,CAAO1O,IAAKtgB,KAAOC,SAASM,MAAOqB,UAAU,gBAApL,IAAqM,eAACotB,EAAA,EAAD,CAAO1O,IAAKtgB,KAAOC,SAASO,KAAMoB,UAAU,gBAAjP,IAAkQ,eAACotB,EAAA,EAAD,CAAO1O,IAAKtgB,KAAOC,SAASE,KAAMyB,UAAU,gBAA9S,IAA+T,eAACotB,EAAA,EAAD,CAAO1O,IAAKtgB,KAAOC,SAASK,IAAKsB,UAAU,gBAA1W,IAA4XQ,WAvDhY,SAASywB,GAAT,GAAqH,IAAD,IAAzFp1B,UAAa4d,EAA4E,EAA5EA,aAAuCuF,GAAqC,EAA9DjB,aAA8D,EAArCiB,UAAUC,EAA2B,EAA3BA,cACnFC,GAD8G,EAAZJ,SAC1FE,GAAsBC,GAC9BhB,EAAaX,IAAUY,gBAAgBzE,GACvC0E,EAAW,aAAQC,KAAsBH,IAAe,IAE5D,OADKE,EAAYE,SAAS,kBAAiE,aAA7Cf,IAAUgB,iBAAiB7E,IAA8B0E,EAAYI,KAAK,iBACjH,eAACgN,EAAA,EAAD,CAAMzL,GAAG,eAAe/c,KAAK,YAAY/C,UAAU,OAAnD,SACL,eAACurB,EAAA,EAAKnL,KAAN,CAAWpgB,UAAU,YAArB,SACE,eAACqrB,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,UAAM,eAACD,EAAA,EAAD,CAAKrrB,UAAU,QAAf,SACHme,EAAYje,KAAI,SAAAvC,GAAQ,IAAD,MAClBw0B,EAAMT,GAAmB/zB,GAC7B,IAAKw0B,EAAK,OAAO,KACjB,IAAI1T,EAAG,OAAGS,QAAH,IAAGA,GAAH,UAAGA,EAAOoC,kBAAV,aAAG,EAAoB3jB,GAE9B,OADA8gB,GAAS,QAAH,EAAAA,SAAA,mBAAKuF,eAAL,sBAAevD,IAAK6F,UAAU3oB,MAAS8gB,EACtC,eAAC6M,EAAA,EAAD,CAAKtL,GAAG,OAAOhgB,UAAU,OAAzB,SAA0C,eAACmyB,EAAD,CAAK3xB,MAAOie,KAAjB9gB,gBA6CxD,SAASy0B,GAAkB9qB,GAA6B,IAAlBga,EAAiB,uDAAJ,GACjD,OAAOtkB,OAAOE,QAAQoK,GAAWpH,KAAI,mCAAEmyB,EAAF,KAAY9D,EAAZ,WAA2B,CAC9DxrB,KAAM0d,IAAKkD,YAAY0O,GACvBnvB,QAASud,IAAK0N,eAAekE,GAC7B7xB,MAAOxD,OAAOE,QAAP,OAAeqxB,QAAf,IAAeA,IAAY,IAAIC,QAAO,SAACC,EAAD,0BAAQH,EAAR,KAAcI,EAAd,YAA8BD,EAAOnN,EAAWgN,GAAQI,IAAY,GACjH4D,YAAa,gCAAOt1B,OAAOE,QAAP,OAAeqxB,QAAf,IAAeA,IAAY,IAAIruB,KAAI,WAAqBE,GAArB,2BAAEkuB,EAAF,KAAQI,EAAR,YAA2B,kCAAsB,IAANtuB,EAAU,MAAQ,GAAIqgB,IAAKkB,UAAU2M,EAAMhN,GAA3D,uBAA2EoN,QAA3E,IAA2EA,GAA3E,UAA2EA,EAAY1K,eAAvF,aAA2E,OAAA0K,EAAsB,UAAjG,QAAuGA,IAA5FtuB,QAC7F0lB,MAAOrF,IAAK6F,UAAU+L,OAG1B,SAASE,GAAc11B,GAAyB,IAAlBykB,EAAiB,uDAAJ,GACzC,OAAOtkB,OAAOE,QAAQL,GAAOqD,KAAI,mCAAE+J,EAAF,KAAWuoB,EAAX,WACnB,cAAZvoB,EAA0BmoB,GAAkBI,EAASlR,GAAc,CAAEve,KAAM0d,IAAKkD,YAAY1Z,GAAU/G,QAASud,IAAK0N,eAAelkB,GAAUzJ,MAAOgyB,EAAS1M,MAAOrF,IAAK6F,UAAUrc,OACnLwoB,OAGJ,IAAMC,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACxC,SAAStB,GAAiBrwB,GAAQ,IAC1BlF,EAA6KkF,EAA7KlF,UADyB,EACoJkF,EAAlKlF,UAAa4d,EADC,EACDA,aAAcoT,EADb,EACaA,cAAe8F,EAD5B,EAC4BA,gBAD5B,IAC6CpR,mBAD7C,SACoEgF,EAAgFxlB,EAAhFwlB,UAAW8K,EAAqEtwB,EAArEswB,SAAUP,EAA2D/vB,EAA3D+vB,UAAW7R,EAAgDle,EAAhDke,cAAeD,EAAiCje,EAAjCie,SAAUoH,EAAuBrlB,EAAvBqlB,SAAUtH,EAAa/d,EAAb+d,SADvI,EAEc/d,EAAvC0wB,oBAFyB,MAEV,KAFU,EAEDmB,EAFC,aAEc7xB,EAFd,kBAG3Bme,EAAQF,GAAsBC,EAC9B8I,EAAS,KACT8K,EAAY,KAChB,GAAkB,SAAdtM,GAAwBjJ,IAAU6D,gBAAgB1H,GAAe,CACnE,IAAIoH,EAASvD,IAAUY,gBAAgBzE,GACvCoZ,EAAY,eAACvH,EAAA,EAAD,CAAKtL,GAAG,OAAR,SACV,eAACE,EAAA,EAAD,CAAQhd,QAASqe,EAAcV,EAAS,YAAa7gB,UAAU,aAAaU,UAAW0lB,EAAU5iB,QAAS4iB,EAAY,kBAAMtH,GAAS,SAAA0N,GAAK,MAAK,CAAEjL,aAAciL,EAAMjL,sBAAmBkE,EAAWpiB,KAAM+iB,EAAW,KAAO,KAA3N,SACG7E,EACC,kDAAmB,6BAAIjE,IAAUwV,iBAAiBjS,QAChD,kBAKV,IAAIkS,EAAe,EACnB,GAAIxM,KAAaoM,EAAiB,CAChC,IAAMK,EAAkBL,EAAgBpM,GAClC0M,EAAa3V,IAAU4V,oBAAoBzZ,EAAc8M,EAAWsG,GAE1E,GADAkG,EAAeC,EAAkBC,EAC7B7M,EAAU,CAMZ2B,EAAS,eAACwD,EAAA,EAAKxL,OAAN,UACP,gBAACsL,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKtL,GAAG,OAAR,SACE,eAACwP,EAAA,EAAD,CAAgBnB,MAAK,qBAAgB0E,EAAe,GAApD,SACG,aAAI9yB,MAAMyyB,GAAa5B,IAAYvzB,QAAQ2C,KAAI,SAAAE,GAAC,OAC/C,gBAACwvB,EAAA,EAASrsB,KAAV,CAAuBC,QAAS,kBAVlB0tB,EAUuC3K,EAVjC4M,EAU4C/yB,EAVnC0e,GAAS,SAAA0N,GAC9C,IAAM4G,EAAuB5G,EAAMmG,iBAAmB,GAEtD,OADAS,EAAqBlC,GAAQiC,EACtB,CAAER,gBAAiBS,MAHL,IAAClC,EAAMiC,GAUpB,wBAAgF/yB,EAAI6yB,EAAa,IAA7E7yB,UAGzByyB,YAIL9K,EAAS,eAACwD,EAAA,EAAKxL,OAAN,UACP,gBAACsL,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKtL,GAAG,OAAR,iCACoB+S,EAAe,KAEnC,eAACzH,EAAA,EAAD,CAAKtL,GAAG,OAAR,SACG6S,SAMX,IAAIQ,EAAc/V,IAAUgW,eAAe7Z,EAAc8M,EAAWsG,EAAeiE,GAC7EyC,EAAWF,GAAe,eAAChI,EAAA,EAAD,UAAK,eAACC,EAAA,EAAD,UACnC,eAACC,EAAA,EAAD,CAAMzL,GAAG,cAAc/c,KAAK,YAAY/C,UAAU,mBAAlD,SACE,eAACwzB,GAAA,EAAD,CAAWxzB,UAAU,aAAakD,QAAQ,QAA1C,SACGqvB,GAAcc,EAAD,OAAcnU,QAAd,IAAcA,OAAd,EAAcA,EAAOoC,YAAYphB,KAAI,SAACwmB,EAAOtmB,GAAR,OACjD,eAACqzB,GAAD,aAAsB/V,MAAOtd,GAA7B,aAAsCsmB,QAAOqM,eAAcjC,aAAc8B,IAAtDxyB,cAK3B,OAAO,gBAACmrB,EAAA,EAAD,CAAMzL,GAAG,eAAe/c,KAAK,YAAY/C,UAAU,QAAnD,UACJ+nB,EACD,gBAACwD,EAAA,EAAKnL,KAAN,WACE,gBAACiL,EAAA,EAAD,CAAKrrB,UAAU,yBAAyBwD,QAASiuB,EAAcxN,MAAO,CAAE6J,OAAS1H,GAAYqL,EAAgB,UAAY,WAAzH,UACE,eAACnG,EAAA,EAAD,CAAKtL,GAAG,OAAOhgB,UAAU,mCAAzB,SACE,eAACotB,EAAA,EAAD,CAAO1O,IAAKpB,IAAUoW,aAAaja,EAAc8M,GAAYvmB,UAAU,gBAEzE,gBAACsrB,EAAA,EAAD,CAAKtrB,UAAU,cAAf,UACE,eAACurB,EAAA,EAAK9H,MAAN,UAAanG,IAAU0K,cAAcvO,EAAc8M,KACnD,eAACgF,EAAA,EAAKoI,SAAN,UAAgBtC,UAGnB/T,IAAUsW,kBAAkBna,EAAc8M,GAAWrmB,KAAI,SAAC2zB,EAASzzB,GAAO,IAAD,EAGxE,GAFuB,oBAAZyzB,IACTA,EAAUA,EAAQhH,EAAeiE,KAC9B+C,EAAS,OAAO,KAErB,IAAIC,EAAaD,EAAQ9wB,KACC,oBAAf+wB,IACTA,EAAaA,EAAWf,EAAc7T,EAAMoC,WAAYzlB,IAC1D,IAAIisB,EAAS+L,EAAQ/L,QAAU,GAE3B5rB,EAAc23B,EAAQ33B,YACC,oBAAhBA,IACTA,EAAcA,EAAY62B,EAAclG,EAAeiE,IACzD,IAAIxB,EAAiB,KACrB,GAAIpzB,EAAa,CACf,IAAI6B,EAAiBC,IAAiBouB,kBAAkBvwB,EAAUk4B,mBAAoB,CAAEpX,OAAQ4J,EAAW3J,QAAS1gB,EAAY83B,iBAC5HC,EAAoB,GACxB,GAAIl2B,EAAgB,CAClB,IAAIsxB,EAAmB/R,IAAU4W,0BAA0Bh4B,EAAa6B,EAAgB,IACxFk2B,EAAiB,uBAAO3W,IAAU6W,2BAA2Bj4B,EAAa6B,EAAgB,KAAzE,aAAiFw0B,GAAclD,EAAD,OAAmBnQ,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAOoC,cAI3IgO,EAAiB,eAAChE,EAAA,EAAD,CAAKtL,GAAI,GAAT,SACf,gBAACuL,EAAA,EAAD,CAAMzL,GAAG,cAAc/c,KAAK,YAAY/C,UAAU,OAAlD,UACE,eAACurB,EAAA,EAAKxL,OAAN,UACE,eAACxd,EAAA,EAAD,CAAqB7B,UAAW0lB,EAC9BlqB,YAAaA,EACb6B,eAAgBA,EAChByE,eARa,SAACzE,GAAD,OAAoB+gB,GAAS,SAAA0N,GAAK,MACpD,CAAEuH,mBAAoB/1B,IAAiBwE,eAAegqB,EAAMuH,mBAAoB,CAAEpX,OAAQ4J,EAAW3J,QAAS1gB,EAAY83B,gBAAkBj2B,QAQvI0E,OAAQ,gCAAOvG,EAAY8G,gBAE/B,eAACwwB,GAAA,EAAD,CAAWxzB,UAAU,aAAakD,QAAQ,QAA1C,SACG+wB,EAAkB/zB,KAAI,SAACk0B,EAAWh0B,GAAZ,OAAkB,eAACqzB,GAAD,aAAsB/V,MAAOtd,GAA7B,aAAsCsmB,MAAO0N,EAAWrB,eAAcjC,aAAc8B,IAAjExyB,aAKpE,OAAO,gBAACirB,EAAA,EAAD,CAAKrrB,UAAU,aAAf,UAAgD,gBAACsrB,EAAA,EAAD,CAAKtL,GAAI,GAAT,UACrD,sBAAKhgB,UAAU,OAAf,SAAuB8zB,IACtBhM,EAAO7lB,OAAS,GAAK,eAACuxB,GAAA,EAAD,CAAWxzB,UAAU,kBAArB,gBACnB8nB,QADmB,IACnBA,GADmB,UACnBA,EAAQ5nB,WADW,aACnB,OAAA4nB,GAAc,SAACpB,EAAOtmB,GAAR,OAAc,eAACqzB,GAAD,aAAsB/V,MAAOtd,GAA7B,aAAsCsmB,QAAOqM,eAAcjC,aAAc8B,IAAtDxyB,WAE7CkvB,IALiC,UAAYlvB,MAOrDmzB,QAIP,SAASE,GAAT,GAAqJ,IAAD,0BAA5H53B,UAAaw4B,EAA+G,EAA/GA,uBAAwBxH,EAAuF,EAAvFA,cAAiBnG,EAAsE,EAAtEA,MAAOhJ,EAA+D,EAA/DA,MAA+D,IAAxDqV,oBAAwD,MAAzC,EAAyC,EAAtCjC,EAAsC,EAAtCA,UAAW7R,EAA2B,EAA3BA,cAAeD,EAAY,EAAZA,SAClIE,EAAQF,GAAsBC,EAGlC,GAFqB,oBAAVyH,IACTA,EAAQA,EAAMmG,EAAeiE,KAC1BpK,EAAO,OAAO,KAEnB,IAAI4N,EAAY5N,EAAM3jB,KACG,oBAAduxB,IACTA,EAAS,UAAGA,SAAH,aAAG,EAAYvB,EAAc7T,EAAMoC,aAE9C,IAAIiT,EAAe7N,EAAMxjB,SAAW,GACR,oBAAjBqxB,IACTA,EAAY,UAAGA,SAAH,aAAG,EAAexB,EAAc7T,EAAMoC,aAEpD,IAAIkT,EAAa9N,EAAM4L,YACG,oBAAfkC,IACTA,EAAU,UAAGA,SAAH,aAAG,EAAazB,EAAc7T,EAAMoC,aAC5CkT,IACFA,EAAa,eAAC/G,GAAA,EAAD,CACXlJ,UAAU,MACVC,QAAS,eAACkJ,GAAA,EAAD,UAAU8G,IAFR,SAIX,eAAC,IAAD,CAAiB70B,KAAMsyB,IAAkBjyB,UAAU,OAAOikB,MAAO,CAAE6J,OAAQ,aAG/E,IAAI2G,EAAW,KACX/N,EAAMlmB,MACRi0B,EAAkC,oBAAhB/N,EAAMlmB,MAAb,WAAoC,EAAAkmB,GAAMlmB,aAA1C,aAAoC,SAAcuyB,EAAc7T,EAAMoC,YAAcoF,EAAMlmB,MACrE,oBAAlBkmB,EAAMhgB,UACpB+tB,EAAQ,UAAG/N,SAAH,iBAAG,EAAOhgB,eAAV,iBAAG,SAAiBqsB,EAAc7T,EAAMoC,mBAAxC,iBAAG,EAAmD,UAAtD,aAAG,SAAwDpC,EAAMoC,aAE3E,IAAIoT,EAAWhO,EAAMZ,OAAS,EAE9B,GAAIuO,GAA0BpV,GAAqC,kBAAbwV,EAAuB,CAAC,IAAD,oBACvEE,EAAmBjO,EAAMlmB,MAAQkmB,EAAMlmB,MAApB,WAA4B,EAAAkmB,GAAMhgB,eAAlC,iBAA4B,SAAgBqsB,EAAc9T,EAAcqC,mBAAxE,iBAA4B,EAA0D,UAAtF,aAA4B,SAA+DrC,EAAcqC,YAEhG,oBAArBqT,IACTA,EAAmBrzB,SAAQ,UAACqzB,SAAD,iBAAC,EAAmB5B,EAAc9T,EAAcqC,mBAAhD,iBAAC,EAA4D0C,eAA7D,aAAC,SAAsE0Q,KACpG,IAAI1O,EAAOyO,EAAWE,EACtBF,EAAW,sDAAOE,SAAP,aAAO,EAAkB3Q,QAAQ0Q,UAAjC,QAA8CC,EAAkB3O,EAAO,wBAAMhmB,UAAWgmB,EAAO,EAAI,eAAiB,cAA7C,eAA+DA,EAAO,EAAI,IAAM,IAAQ,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMhC,eAAN,oBAAAgC,EAAgB0O,KAAa1O,EAAjH,OAAiI,MAGrN,OAAO,eAACwN,GAAA,EAAUjwB,KAAX,CAAgBL,QAASwa,EAAQ,EAAI,aAAe,eAAgB1d,UAAU,MAA9E,SACL,iCACE,kCAAM,6BAAIs0B,IAAeE,KACzB,uBAAMx0B,UAAS,sCAAiCu0B,GAAhD,UAA0E,QAAR,EAAAE,SAAA,mBAAUzQ,eAAV,sBAAoB0Q,KAAaD,SCxTzG,IAAMG,GAAa3wB,IAAMC,YACvB,WAA+DE,GAAS,IAArEoZ,EAAoE,EAApEA,SAAUyG,EAA0D,EAA1DA,MAAOjkB,EAAmD,EAAnDA,UAA8B60B,EAAqB,EAAxC,mBAC7B,OACE,sBACEzwB,IAAKA,EACL6f,MAAO,CAAEA,QAAO6Q,SAAU,SAC1B90B,UAAWA,EACX+0B,kBAAiBF,EAJnB,SAME,eAACxJ,EAAA,EAAD,UACGpnB,IAAM0Z,SAASqX,QAAQxX,GAAUtd,KAAI,SAAC0d,EAAOxd,GAAR,OAAc,eAACkrB,EAAA,EAAD,CAAatL,GAAI,EAAjB,SAAqBpC,GAAXxd,aAOnD60B,G,kDACnB,WAAYl0B,GAAQ,IAAD,uBACjB,cAAMA,IA4CRm0B,qBAAuB,WACjB,EAAK1I,MAAM/S,cACb,EAAKqF,SAAS9D,IAAkBlU,IAAI,EAAK0lB,MAAM/S,eACjD,EAAK1Y,MAAMihB,YAAc,EAAKjhB,MAAMihB,cAAgB,EAAKA,eAhDxC,EAkDnBmT,gBAAkB,SAAC1b,GAAkB,IAAD,IAClC,YAAK1Y,aAAL,mBAAYo0B,uBAAZ,gBAA8B1b,GAC9B,IAAI+S,EAAQyI,EAAqBG,kBAC7BC,EAAOra,IAAkBlU,IAAI2S,GACvB+S,EAAN6I,EAAW,2BAAQ7I,GAAU6I,GACvB,2BAAQ7I,GAAR,IAAe/S,eAAcsV,OAAQkG,EAAqBK,gBAAgB7b,KACpF,EAAKqF,SAAS0N,IAxDG,EA2DnB+I,YAAc,SAAC36B,GAAD,OACZ,EAAKkkB,SAAS,CAAElkB,cA5DC,EA8DnBmkB,YAAc,SAAC9U,EAASzJ,GAAV,OAAoB,EAAKse,UAAS,SAAA0N,GAC9C,IAAIgJ,EAAoBhJ,EAAMgJ,kBAE9B,OADkBlY,IAAUqD,iBAAiB,EAAK6L,MAAOviB,KACrCzJ,UACXg1B,EAAkBvrB,GAClB,CAAEurB,uBAETA,EAAkBvrB,GAAWzJ,EACtB,CAAEg1B,0BAtEM,EA0EnB1I,iBAAmB,SAACD,GAAD,OAAmB,EAAK/N,SAAS,CAAE+N,mBAxEpD1T,cACA,EAAKqT,MAAQyI,EAAqBG,kBAHjB,IAIT3b,EAAiB1Y,EAAjB0Y,aACR,GAAIA,EAAc,CAAC,IAAD,EACV4b,EAAI,UAAGra,IAAkBlU,IAAI2S,UAAzB,QAA0C,CAAEA,eAAcsV,OAAQkG,EAAqBK,gBAAgB7b,IACjH,EAAK+S,MAAL,2BAAkB,EAAKA,OAAU6I,GAPlB,S,qDA2EnB,WAAqB,IAAD,OAClBI,QAAQC,IAAI,CACVpY,IAAUqY,yBACVr7B,IAAOG,sBACPihB,IAASka,kBACRl0B,MAAK,kBAAM,EAAKsgB,mB,gCAErB,SAAmB6T,GAGjB,GAFIA,EAAUpc,eAAiBlf,KAAKwG,MAAM0Y,cACxClf,KAAK46B,gBAAgB56B,KAAKwG,MAAM0Y,cAC9Blf,KAAKwG,MAAMqlB,UAAY7rB,KAAKiyB,MAAM/S,aAAc,CAElD,IAAM+S,EAAQsJ,YAAUv7B,KAAKiyB,cACtBA,EAAM6H,uBACbrZ,IAAkB6B,gBAAgB2P,M,oBAGtC,WAAU,IAAD,WACgDjyB,KAAKwG,MAAtDg1B,EADC,EACDA,OAAQ/W,EADP,EACOA,SAAUoH,EADjB,EACiBA,SAAU4P,EAD3B,EAC2BA,QAASC,EADpC,EACoCA,QACvCp6B,EAAYtB,KAAKiyB,OAErB,UAAIxN,SAAJ,aAAI,EAAUsC,eACZtC,EAAW8W,YAAU9W,IACZsC,WAAWjH,QAAUxe,EAAUwe,QACxC2E,EAASsC,WAAWvD,aAAeliB,EAAUkiB,cAPxC,MAUkDxjB,KAAKiyB,MAAxD/S,EAVC,EAUDA,aAAc7e,EAVb,EAUaA,SAAUy5B,EAVvB,EAUuBA,uBAC1BpV,EAAgB3B,IAAU4Y,eAAe37B,KAAKiyB,OAC9C2J,EAAoB1c,EAAe,kCACrC,eAAC2T,EAAA,EAAD,CAAO1O,IAAKpB,IAAU8Y,SAAS3c,GAAezZ,UAAU,0BAA0B+tB,eAAa,IAC/F,sBAAI/tB,UAAU,WAAd,cAA2Bsd,IAAUC,QAAQ9D,GAA7C,UACQ,uDACJ4c,EAAkB,CAAEx6B,YAAWmjB,WAAUC,eAAgBD,GAAYqV,EAAyBpV,OAAgBwG,EAAWW,WAAUtH,SAAU,SAAAwX,GAAC,OAAI,EAAKxX,SAASwX,IAAIvX,YAAaxkB,KAAKwkB,YAAaiD,YAAaznB,KAAK26B,sBAE3N,OAAQ,gBAAC3J,EAAA,EAAD,CAAMzL,GAAG,cAAc/c,KAAK,YAA5B,UACN,eAACwoB,EAAA,EAAKxL,OAAN,UACE,gBAACsL,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKtL,GAAI,OAAQhgB,UAAU,UAA3B,SAEGomB,EAAW,gBAACmQ,EAAA,EAAD,WACV,gBAAC3G,EAAA,EAAD,CAAUprB,GAAI+xB,IAAd,UACE,eAACC,EAAA,EAAD,CAAgBhyB,GAAI0b,IAApB,SACGiW,IAEH,eAACvG,EAAA,EAAStsB,KAAV,CAAekB,GAAIowB,GAAnB,SACGtX,IAAUmZ,sBAAsBv2B,KAAI,SAAA+iB,GAAO,OAC1C,eAAC2M,EAAA,EAASrsB,KAAV,CAA6BC,QAAS,kBAAM,EAAK2xB,gBAAgBlS,IAAjE,SACE,kCACE,eAACmK,EAAA,EAAD,CAAO1O,IAAKpB,IAAU8Y,SAASnT,GAAUjjB,UAAS,oCAA+Bsd,IAAU+P,QAAQpK,GAAjD,QAAiEK,WAAS,IAC5H,sBAAItjB,UAAU,gBAAd,UAA+Bsd,IAAUC,QAAQ0F,GAAjD,WAHgBA,WAQ1B,gBAACuM,EAAA,EAAD,CAAgBhrB,GAAI+xB,IAAa71B,UAAW+Y,EAAc4U,MACxD,sBAAIruB,UAAU,WAAd,UAA0Bsd,IAAUoZ,cAAc97B,GAAlD,OADF,UAGE,eAACg1B,EAAA,EAASC,SAAV,UACE,gEAEDvS,IAAUqZ,eAAez2B,KAAI,SAAA02B,GAAM,OAClC,eAAChH,EAAA,EAASrsB,KAAV,CAA4BC,QAAS,kBAAM,EAAK+xB,YAAYqB,IAA5D,SACE,gCAAMtZ,IAAUoZ,cAAcE,GAA9B,QADkBA,YAIT,kCAAOT,EAAP,SAAgC7Y,IAAUkD,yBAAyBjmB,KAAKiyB,MAAO,uBAGjGxN,EAAW,eAACsM,EAAA,EAAD,CAAKtL,GAAG,OAAR,SACV,gBAACuW,EAAA,EAAD,WACE,eAACrW,EAAA,EAAD,CAAQhd,QAASmxB,EAAyB,UAAY,UAAW3zB,UAAW2zB,EAAwB7wB,QAAS,kBAAM,EAAKsb,SAAS,CAAEuV,wBAAwB,KAA3J,SACE,+DAEF,eAACnU,EAAA,EAAD,CAAQhd,QAAUmxB,EAAqC,UAAZ,UAAuB3zB,SAAU2zB,EAAwB7wB,QAAS,kBAAM,EAAKsb,SAAS,CAAEuV,wBAAwB,KAA3J,SACE,8EAGG,KACT,eAAC/I,EAAA,EAAD,CAAKtL,GAAG,OAAR,SACE,eAACE,EAAA,EAAD,CAAQhd,QAAQ,SAASM,QAASwyB,EAAlC,SACE,eAAC,IAAD,CAAiBr2B,KAAMk3B,eAI9BjS,QAAQnL,IAAiB,eAAC8R,EAAA,EAAKnL,KAAN,UACxB,gBAAC,EAAIyK,UAAL,CAAeiM,iBAAkBb,IAAqBjX,EAAW,eAAiB,aAAc0J,cAAc,EAAMC,eAAe,EAAnI,UACE,gBAACoO,EAAA,EAAD,CAAK7zB,QAAQ,QAAQlD,UAAU,YAA/B,UACE,eAAC+2B,EAAA,EAAIxzB,KAAL,UACE,eAACwzB,EAAA,EAAIC,KAAL,CAAU5X,SAAS,YAAnB,yBAEDJ,EAAW,eAAC+X,EAAA,EAAIxzB,KAAL,UACV,eAACwzB,EAAA,EAAIC,KAAL,CAAU5X,SAAS,eAAnB,6BACY,KACd,eAAC2X,EAAA,EAAIxzB,KAAL,UACE,eAACwzB,EAAA,EAAIC,KAAL,CAAU5X,SAAS,YAAnB,SAAgCJ,EAAW,oBAAsB,gBAEnE,eAAC+X,EAAA,EAAIxzB,KAAL,UACE,gBAACwzB,EAAA,EAAIC,KAAL,CAAU5X,SAAS,SAAS1e,UAAqD4c,IAAU8N,cAAc3R,GAAzG,sBAAkI6D,IAAU8N,cAAc3R,IAAiB,eAACzV,EAAA,EAAD,CAAOd,QAAQ,UAAf,sBAE7K,eAAC6zB,EAAA,EAAIxzB,KAAL,UACE,gBAACwzB,EAAA,EAAIC,KAAL,CAAU5X,SAAS,OAAO1e,UAAQ,EAAlC,kBAAwC,eAACsD,EAAA,EAAD,CAAOd,QAAQ,UAAf,yBAG5C,gBAAC,EAAI4nB,QAAL,WACE,eAAC,EAAIC,KAAL,CAAU3L,SAAS,YAAnB,SACE,eAACwN,GAAD,aACEE,iBAAkBvyB,KAAKuyB,kBACnBuJ,MAGR,eAAC,EAAItL,KAAL,CAAU3L,SAAS,YAAnB,SACE,eAAC,GAAD,0CAAgCiX,GAAhC,IAAiDrX,cAAUyG,EAAWxG,sBAEvED,EAAW,eAAC,EAAI+L,KAAL,CAAU3L,SAAS,eAAnB,SACV,eAAC,GAAD,eAA2BiX,MACf,KACd,eAAC,EAAItL,KAAL,CAAU3L,SAAS,SAAnB,SACE,eAACyR,GAAD,eAAyBwF,cAKhCN,GAAU,eAACxK,EAAA,EAAKnH,OAAN,UACR2R,W,GAxMyC9xB,IAAMQ,WAAnCwwB,GAYZgC,aAAe,CACpBxd,aAAc,GACd7e,SAAU,KACVyf,QAAS,MACT0D,aAAc,KACdrE,kBAAmB,GACnB+C,qBAAsB,GACtB+Y,kBAAmB,GACnBzG,OAAQ,CACNpxB,IAAK,GACL/C,SAAUI,IAAgB,GAC1BW,YAAa,EACb+B,gBAAiB,EACjBG,eAAgB,EAChBE,eAAgB,GAElB40B,gBAAiB,CACfuE,KAAM,EACNxxB,MAAO,EACPC,MAAO,GAET4b,aAAa,EACbwS,mBAAoB,GACpBlH,cAAe,EACfwH,wBAAwB,GApCPY,GAsCZK,gBAAkB,SAAC7b,GACxB,IAAIsV,EAAS+G,YAvCIb,GAuCWgC,aAAalI,QAEzC,OADAA,EAAOpxB,IAAMX,OAAOO,KAAKjD,IAAOwC,iBAAiBwgB,IAAUgB,iBAAiB7E,KAAgB,GACrFsV,GAzCUkG,GA4CZG,gBAAkB,kBAAMU,YAAUb,GAAqBgC,gB,iCCjFhE,8FAaIE,EAAiClzB,IAAMC,YAAW,SAAUnD,EAAOqD,GACrE,IAAIgkB,EAAmBC,YAAgBtnB,EAAO,CAC5CP,MAAO,aAELgd,EAAW4K,EAAiB5K,SAC5Bxc,EAAOonB,EAAiBpnB,KACxB3F,EAAO+sB,EAAiB/sB,KACxBmF,EAAQ4nB,EAAiB5nB,MACzBU,EAAWknB,EAAiBlnB,SAC5Bk2B,EAAkB1yB,YAA8B0jB,EAAkB,CAAC,WAAY,OAAQ,OAAQ,QAAS,aAExGiP,EAAY,WACd,OAAgB,MAAT72B,EAAgB,GAAK,GAAG82B,OAAO92B,IA0BxC,MADW,UAATQ,GAAsB3F,GAA8Jk8B,KAAU,GAC5KtzB,IAAMY,cAAc0xB,IAAazxB,YAAS,GAAIsyB,EAAiB,CACjFhzB,IAAKA,EACLozB,QAAQ,IACNt3B,YAAIsd,GAAU,SAAUI,GAC1B,IAAIrD,EAAS8c,IACTI,EAAe7Z,EAAM7c,MACrB22B,EAAWD,EAAaj3B,MACxBm3B,EAAgBF,EAAav2B,SAMjC,OAAoB+C,IAAM2zB,aAAaha,EAAO,CAC5C5c,KAAMA,EACN3F,KAAMuiB,EAAMviB,MAAQA,EACpB4rB,SAAuC,IAA9B1M,EAAOtf,QAAQy8B,GACxBx2B,SAAU22B,YAAcF,GARZ,SAAiBx2B,GAC7B,OAjCe,SAAsB22B,EAAUC,GACjD,GAAK72B,EAAL,CAIA,IAAIqZ,EAAS8c,IACTW,GAAyC,IAA9Bzd,EAAOtf,QAAQ68B,GAEjB,UAAT92B,EAMFE,EADE82B,EACOzd,EAAOpd,QAAO,SAAU86B,GAC/B,OAAOA,IAAMH,KAGN,GAAGR,OAAO/c,EAAQ,CAACud,IAFxBC,IAPCC,GAAY92B,GAAUA,EAAS42B,EAAUC,IAwBvCG,CAAaR,EAAUv2B,eAWpCg2B,EAAkBlyB,aA/DC,CACjBjE,KAAM,QACNm3B,UAAU,GA8DZhB,EAAkBjX,OAAS8G,IACZmQ,O,iCC1Ef,6FAIe,SAASiB,IAEtB,OADAjf,cACO,cAAC,IAAD,UACL,cAAC,UAAD,CAAsBiN,UAAQ,EAAC3M,aAAa,QAAQwc,QAAQ,e,gCCPhE,8bAAMoC,EAA4B,SAACC,GAAD,OAAWA,EAAMpT,KAAKC,MAAMD,KAAKqT,SAAWD,EAAMr2B,UAMpF,SAASu2B,EAAsBC,EAAKC,GAGlC,OAFAD,EAAMvT,KAAKyT,KAAKF,GAChBC,EAAMxT,KAAKC,MAAMuT,GACVxT,KAAKC,MAAMD,KAAKqT,UAAYG,EAAMD,EAAM,GAAKA,GAKtD,IAAMjf,EAAuB,SAAC7b,GAC5B,IAAIi7B,EAAOtf,aAAaM,QAAQjc,GAChC,OAAKi7B,EACE3Q,KAAK4Q,MAAMD,GADA,MAGdte,EAAqB,SAAC3c,EAAKwe,GAAN,OACzB7C,aAAawf,QAAQn7B,EAAKsqB,KAAKC,UAAU/L,KACrC2Z,EAAY,SAAC3Z,GAAD,OAChB8L,KAAK4Q,MAAM5Q,KAAKC,UAAU/L,KAEtB4c,EAAmB,SAAC3b,EAAGC,GAAJ,OACvB6H,KAAK8T,IAAI5b,EAAIC,IAAM,MAEf4b,EAAiB,SAAC7b,EAAGC,GAAJ,OACrB6H,KAAK8T,IAAI5b,EAAIC,IAAM,GACfkQ,EAAQ,SAAC9O,EAAKya,EAAKC,GACvB,OAAI1a,EAAMya,EAAYA,EAClBza,EAAM0a,EAAaA,EAChB1a,GAEH2a,EAAoB,SAACzJ,GAAD,OACxBA,EAAI1tB,OAAS0tB,EAAIA,EAAI1tB,OAAS,GAAK,MAG/Bo3B,EAAe,SAAC5a,GAAD,OAAS8O,EAAM9O,EAAK,EAAG,MAG5C,SAAS6a,EAAWC,EAAQC,EAAKv3B,GAC/B,OAAQ,IAAIhC,MAAMgC,EAAS,GAAGw3B,KAAKD,GAAOD,GAAQG,OAAOz3B,GAI3D,SAAS03B,EAAgBC,EAAMC,GAC7B,IAAIC,EAAO,EACXF,EAAOA,EAAKG,cACZF,EAAOA,EAAKE,cACZ,IAAK,IAAI35B,EAAI,EAAG45B,EAAI9U,KAAKwT,IAAIkB,EAAK33B,OAAQ43B,EAAK53B,QAAS7B,EAAI45B,EAAG55B,IAAK,CAClE,IAAI65B,GAAQ,EACPL,EAAKx5B,IAAOy5B,EAAKz5B,IAAMw5B,EAAKx5B,KAAOy5B,EAAKz5B,KAC3C65B,GAAQ,GACNL,EAAKx5B,EAAI,KAAOy5B,EAAKz5B,IAAMw5B,EAAKx5B,EAAI,KAAOy5B,EAAKz5B,KAClD65B,GAAQ,GACLA,GAAOH,IAEd,OAAOA,EAIT,SAAS37B,EAAkBge,EAAK+d,GAC9Bl9B,OAAOO,KAAK4e,GAAK1U,SAAQ,SAAAV,GACE,kBAAdoV,EAAIpV,IAAoB5I,EAAkBge,EAAIpV,GAAOmzB,GACvC,kBAAd/d,EAAIpV,KAAoBoV,EAAIpV,GAAQoV,EAAIpV,GAAQmzB,Q,sHC9D1CzZ,EAEnB,aACE,GADa,oBACTlmB,gBAAgBkmB,EAClB,MAAMjmB,MAAM,2CAJGimB,EAMZkD,YAAc,SAAChmB,GAAD,MAAM9C,EAAN,uDAAe,GAAf,OAClBs/B,EAAcx8B,KAAd,UAAsB4J,IAAS5J,UAA/B,aAAsB,EAAetC,OAASR,GAP9B4lB,EAQZkQ,kBAAoB,SAAChzB,GAAD,QAAM9C,EAAN,uDAAe,GAAf,OACxBs/B,EAAcx8B,KAAd,UAAsB4J,IAAS5J,UAA/B,aAAsB,EAAey8B,UAArC,UAA+C7yB,IAAS5J,UAAxD,aAA+C,EAAetC,OAASR,GATvD4lB,EAUZC,eAAiB,SAAC/iB,GAAD,MAAM9C,EAAN,uDAAe,GAAf,OACtB,UAAA0M,IAAS5J,UAAT,eAAetC,OAAQR,GAXN4lB,EAYZmQ,uBAAyB,SAACjzB,GAAsB,IAAjB9C,EAAgB,uDAAP,GACzCQ,EAbaolB,EAaDkD,YAAYhmB,EAAK9C,GAGjC,OAFIQ,IAASR,GAAmB,QAAR8C,GAAyB,SAARA,GAA0B,SAARA,IACzDtC,GAAQ,KACHA,GAhBUolB,EAkBZ0N,eAAiB,SAACxwB,GAAD,MAAM9C,EAAN,uDAAe,GAAf,OACtB,UAAA0M,IAAS5J,UAAT,eAAeuF,UAAWrI,GAnBT4lB,EAoBZkC,YAAc,SAAChlB,GAAD,QAAM9C,EAAN,uDAAe,GAAf,MACK,WAAxB,UAAA0M,IAAS5J,UAAT,eAAeooB,MAAmBlrB,GAAU,UAAA0M,IAAS5J,UAAT,eAAeooB,OAAQlrB,GArBlD4lB,EAuBZ6F,UAAY,SAAC3oB,GAAS,IAAD,EAC1B,MAA4B,WAAxB,UAAA4J,IAAS5J,UAAT,eAAeooB,MAAyB,EAE5B,MADLtF,EAAKkC,YAAYhlB,GACN,EAAI,GA1BT8iB,EA4BZkB,UAAY,SAAC1X,EAASpN,GAAV,OACjBw9B,EAAE,CAAEx9B,QAAOy9B,QAAQ,GAASrwB,IA7BXwW,EA+BZgB,+BAAiC,WAAoC,IAAnC8Y,EAAkC,uDAAvB,GAAIjzB,EAAmB,uDAAP,GAC9DkzB,EAAcx9B,OAAOO,KAAKk9B,GAC1BC,EAAmB19B,OAAOO,KAAK+J,GAAWnK,QAAO,SAAAw9B,GAAC,OAAKH,EAAYnc,SAASsc,MAChF,MAAO,sBAAID,GAAJ,YAAyBF,IAAar9B,QAAO,SAACQ,GAAD,OAAS48B,EAASlc,SAAS1gB,OAlC9D8iB,EAqCZmB,aAAe,SAAC3X,EAASpN,GAA0C,IAAD,EAAlCyK,EAAkC,uDAAtB,GAAIgzB,IAAkB,yDACjEM,EAAe59B,OAAOE,QAAP,iBAAeoK,QAAf,IAAeA,OAAf,EAAeA,EAAY2C,UAA3B,QAAuC,IAAI/J,KAAI,uCAAEouB,EAAF,KAAQI,EAAR,YAClE,uBAA2B1uB,UAAU,cAArC,gBAvCeygB,EAuC6CkB,UAAU2M,EAAMzxB,GAA5E,uBAAuF6xB,QAAvF,IAAuFA,GAAvF,UAAuFA,EAAY1K,eAAnG,aAAuF,OAAA0K,EAAsB,UAA7G,QAAmHA,IAAxGzkB,EAAUqkB,MACvB,MAAsC,oBAAlC,OAAOmM,QAAP,IAAOA,OAAP,EAAOA,EAAcxwB,IAChB,iCAAOwwB,EAAYxwB,GAAS,CAAEpN,QAAOy9B,WAAWM,KAEhD,qEAAwCA,MAIrD,IAAMT,EAAgBn9B,OAAOC,YAAYD,OAAOE,QAAQqK,KAAUpK,QAAO,oDAAoB+F,WAAShD,KAAI,mCAAEvC,EAAF,KAAOwe,EAAP,WAAgB,CAACxe,EAAM,sBAAMqC,UAAS,eAAUmc,EAAIjZ,QAAd,gBAAf,SAAqDiZ,EAAI9gB,YAE1L,SAASg/B,EAAEQ,EAAS5wB,GAAU,IAAD,IACrBpN,EAAyBg+B,EAAzBh+B,MADqB,EACIg+B,EAAlBP,OACb,GAAKz9B,EAAL,CACA,SAH2B,YAGjB,OAAI49B,QAAJ,IAAIA,OAAJ,EAAIA,EAAcxwB,IAC1B,OAAO,sCAASwwB,EAAYxwB,GAAS4wB,GAA9B,QACT,IAAI9W,EAAWtD,EAAKkQ,kBAAkB1mB,GAClC6wB,EAAWra,EAAKkC,YAAY1Y,GAC5Bqc,EAAY7F,EAAK6F,UAAUrc,GAC3BzJ,GAAa,OAAL3D,QAAK,IAALA,GAAA,UAAAA,EAAQoN,UAAR,mBAAkB+Z,eAAlB,sBAA4BsC,MAA5B,OAA0CzpB,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAQoN,IAC9D,OAAO,uBAAMjK,UAAU,cAAhB,UAA8B,4BAAI+jB,IAAlC,IAAgD,uBAAM/jB,UAAU,YAAhB,UAA6BQ,EAAOs6B,SAG7F,SAASC,EAA8BC,EAAGvc,EAAKre,GAC7C,IAAI66B,EAAOxc,EAAM,EAAI,MAAQ,MACzByc,EAAShW,KAAK8T,IAAIva,GAClB0c,EAAY,GAGhB,OAFI/6B,EAAI,IAAG+6B,EAAY,yCAAYd,EAAEW,EAAG,kBAAjB,MAAuC56B,MACpD,IAANA,IAAS+6B,EAAY,uCAAUd,EAAEW,EAAG,sBACjC,iCAAeC,EAAMC,EAAQC,IAAlB/6B,GAKpB,IAAMq6B,EAAc,CAClB3xB,QAAS,SAACkyB,GAAD,OAAO,iCAAOX,EAAEW,EAAG,gBAAZ,MAAgCX,EAAEW,EAAG,aAArC,QAChB/xB,SAAU,SAAC+xB,GAAD,OAAO,iCAAOX,EAAEW,EAAG,WAAZ,eAAoCX,EAAEW,EAAG,QAAzC,QAAuDX,EAAEW,EAAG,WAC7EryB,QAAS,SAACqyB,GAAD,OAAO,iCAAOX,EAAEW,EAAG,eAAZ,eAAwCX,EAAEW,EAAG,OAA7C,QAA0DX,EAAEW,EAAG,UAC/E1xB,SAAU,SAAC0xB,GAAD,OAAO,iCAAOX,EAAEW,EAAG,gBAAZ,eAAyCX,EAAEW,EAAG,QAA9C,QAA4DX,EAAEW,EAAG,WAElFI,WAAY,SAACJ,GAAD,OAAO,6CAAgBX,EAAEW,EAAG,SAArB,MAAkCX,EAAEW,EAAG,YAAvC,SAEnBK,iBAAkB,SAACL,GAAD,OAAO,4CAAeX,EAAEW,EAAG,kBAApB,kBAAsDX,EAAEW,EAAG,kBAA3D,gBAA2FX,EAAEW,EAAG,cAAhG,iBAA6HX,EAAEW,EAAG,gBAAlI,YAK3Bh+B,OAAOE,QAAQ0I,KAAa6B,SAAQ,YAA+B,IAAD,mBAA5B4oB,EAA4B,UAArBh1B,KAC3Co/B,EAAY,GAAD,OAAIpK,EAAJ,oBAA4B,SAAC2K,GACtC,GAAIA,EAAEn+B,MAAF,UAAWwzB,EAAX,mBACF,OAAO,8CACT,IAAIiL,GAAON,EAAEn+B,MAAF,UAAWwzB,EAAX,gBAA+B,GAAK,IAC/C,OAAIiL,EAAM,EAAU,4CAAejB,EAAEW,EAAD,UAAO3K,EAAP,eAAhB,UACXiL,GAAO,IAAa,2CAAcjB,EAAEW,EAAD,UAAO3K,EAAP,eAAf,eACtB,4CAAegK,EAAEW,EAAD,UAAO3K,EAAP,eAAhB,WAMXrzB,OAAOE,QAAQoI,KAAUmC,SAAQ,YAAuB,IAAD,mBAApB8zB,EAAoB,UACrDd,EAAY,SAAD,OAAUc,EAAV,eAA8B,SAACP,GAAD,OAAO,yCAAYX,EAAEW,EAAG,aAAjB,MAAkCX,EAAEW,EAAD,UAAOO,EAAP,eAAnC,mBAKlDv+B,OAAOE,QAAQ0I,KAAa6B,SAAQ,YAA+B,IAAD,mBAA5B4oB,EAA4B,UAArBh1B,KAC3Co/B,EAAY,GAAD,OAAIpK,EAAJ,yBAAiC,SAAC2K,GAAD,OAAO,6CAAgBX,EAAEW,EAAD,QAAjB,MAAiCX,EAAEW,EAAD,UAAO3K,EAAP,UAAlC,QAA2DgK,EAAEW,EAAD,oBAA5D,MAAwFX,EAAEW,EAAD,UAAO3K,EAAP,wBAC5IoK,EAAY,GAAD,OAAIpK,EAAJ,mBAA2B,SAAC2K,GAAD,OAAO,iCAAOX,EAAEW,EAAD,YAAR,MAA4BX,EAAEW,EAAD,UAAO3K,EAAP,6BAC1EoK,EAAY,GAAD,OAAIpK,EAAJ,6BAAqC,SAAC2K,GAAD,OAAO,6CAAgBX,EAAEW,EAAD,YAAjB,QAAuCX,EAAEW,EAAD,UAAO3K,EAAP,6BAC/FoK,EAAY,GAAD,OAAIpK,EAAJ,uBAA+B,SAAC2K,GAAD,OAAO,iCAAOX,EAAEW,EAAD,YAAR,MAA4BX,EAAEW,EAAD,UAAO3K,EAAP,iCAC9EoK,EAAY,GAAD,OAAIpK,EAAJ,4BAAoC,SAAC2K,GAAD,OAAO,6CAAgBX,EAAEW,EAAD,YAAjB,MAAqCX,EAAEW,EAAD,aAAtC,QAA6DX,EAAEW,EAAD,UAAO3K,EAAP,6BACpHoK,EAAY,GAAD,OAAIpK,EAAJ,sBAA8B,SAAC2K,GAAD,OAAO,iCAAOX,EAAEW,EAAD,YAAR,MAA4BX,EAAEW,EAAD,UAAO3K,EAAP,gCAE7ErzB,OAAOE,QAAQoI,KAAUmC,SAAQ,YAAuB,IAAD,mBAApB8zB,EAAoB,UACrDd,EAAY,GAAD,OAAIpK,EAAJ,YAAWkL,EAAX,eAA+B,SAACP,GAAD,OAAO,6CAAgBX,EAAEW,EAAD,QAAjB,MAAiCX,EAAEW,EAAD,UAAO3K,EAAP,UAAlC,MAAyDgK,EAAEW,EAAD,UAAOO,EAAP,UAA1D,QAAoFlB,EAAEW,EAAD,oBAArF,MAAiHX,EAAEW,EAAD,UAAO3K,EAAP,wBACnKoK,EAAY,GAAD,OAAIpK,EAAJ,YAAWkL,EAAX,SAAyB,SAACP,GAAD,OAAO,iCAAOX,EAAEW,EAAD,YAAR,MAA4BX,EAAEW,EAAD,UAAO3K,EAAP,YAAckL,EAAd,mBACxEd,EAAY,GAAD,OAAIpK,EAAJ,YAAWkL,EAAX,mBAAmC,SAACP,GAAD,OAAO,6CAAgBX,EAAEW,EAAD,YAAjB,QAAuCX,EAAEW,EAAD,UAAO3K,EAAP,YAAckL,EAAd,mBAC7Fd,EAAY,GAAD,OAAIpK,EAAJ,YAAWkL,EAAX,aAA6B,SAACP,GAAD,OAAO,iCAAOX,EAAEW,EAAD,YAAR,MAA4BX,EAAEW,EAAD,UAAO3K,EAAP,YAAckL,EAAd,uBAC5Ed,EAAY,GAAD,OAAIpK,EAAJ,YAAWkL,EAAX,kBAAkC,SAACP,GAAD,OAAO,6CAAgBX,EAAEW,EAAD,YAAjB,MAAqCX,EAAEW,EAAD,gBAAaO,EAAb,eAAtC,QAA2ElB,EAAEW,EAAD,UAAO3K,EAAP,YAAckL,EAAd,mBAChId,EAAY,GAAD,OAAIpK,EAAJ,YAAWkL,EAAX,YAA4B,SAACP,GAAD,OAAO,iCAAOX,EAAEW,EAAD,YAAR,MAA4BX,EAAEW,EAAD,UAAO3K,EAAP,YAAckL,EAAd,4BAM/Ev+B,OAAOw+B,OAAOf,EAAa,CACzBgB,mBAAoB,SAACT,GAAD,OAAO,6CAAgBX,EAAEW,EAAG,UAArB,eAA4CX,EAAEW,EAAG,UAAjD,kBAE7Bh+B,OAAOE,QAAQkJ,KAAqBqB,SAAQ,YAAmC,IAAD,mBAAhCi0B,EAAgC,2BAAfC,GAAe,WAC5E3+B,OAAOE,QAAQy+B,GAAUl0B,SAAQ,YAAuB,IAAD,mBAApB4oB,EAAoB,KAAfuL,EAAe,KAErDnB,EAAY,GAAD,OAAIpK,EAAJ,YAAWqL,EAAX,WAA+B,SAACV,GAAD,OAAO,iCAAOY,EAAP,eAA8BvB,EAAEW,EAAG,sBAAnC,MAA6DX,EAAEW,EAAD,UAAOU,EAAP,UAA9D,SAEjD1+B,OAAOE,QAAQgI,KAAUuC,SAAQ,YAAuB,IAAD,mBAApBzG,EAAoB,UACrDy5B,EAAY,GAAD,OAAIpK,EAAJ,YAAWqL,EAAX,sBAAiC16B,IAAU,SAACg6B,GAAD,OAAO,iCAAOX,EAAEW,EAAD,UAAO3K,EAAP,sBAAwBrvB,IAAhC,MAA4Cq5B,EAAEW,EAAD,UAAO3K,EAAP,YAAcqL,EAAd,eAC1G1+B,OAAOE,QAAQoI,KAAUmC,SAAQ,YAAuB,IAAD,mBAApB8zB,EAAoB,UACrDd,EAAY,GAAD,OAAIpK,EAAJ,YAAWqL,EAAX,YAAuBH,EAAvB,YAA+Bv6B,IAAU,SAACg6B,GAAD,OAAO,iCAAOX,EAAEW,EAAD,UAAO3K,EAAP,YAAckL,EAAd,YAAsBv6B,IAA9B,MAA0Cq5B,EAAEW,EAAD,UAAO3K,EAAP,YAAcqL,EAAd,2BAM9G1+B,OAAOw+B,OAAOf,EAAa,CACzBoB,oBAAqB,SAACb,GAAD,OAAO,6CAAgBX,EAAEW,EAAG,UAArB,eAA4CX,EAAEW,EAAG,UAAjD,kBAE9Bh+B,OAAOE,QAAQ4I,KAAyB2B,SAAQ,YAAiD,IAAD,mBAA9Ci0B,EAA8C,2BAArBrL,GAAqB,gBAC9FoK,EAAY,GAAD,OAAIiB,EAAJ,WAAwB,SAACV,GAAD,OAAOz0B,IAAem1B,GAAUx7B,KAAI,SAACue,EAAKre,GAAN,OAAY26B,EAA8BC,EAAGvc,EAAKre,OACzHq6B,EAAY,GAAD,OAAIiB,EAAJ,SAAsB,SAACV,GAAD,OAAO,6CAAgBX,EAAEW,EAAD,uBAAjB,MAAgDX,EAAEW,EAAD,UAAOU,EAAP,UAAjD,QAA+ErB,EAAEW,EAAD,UAAOU,EAAP,WAAhF,MAA6GrB,EAAEW,EAAD,UAAO3K,EAAP,2BAExJrzB,OAAOw+B,OAAOf,EAAa,CACzBqB,mBAAoB,SAACd,GAAD,OAAO,6CAAgBX,EAAEW,EAAG,UAArB,eAA4CX,EAAEW,EAAG,UAAjD,gBAC3Be,iBAAkB,SAACf,GAAD,OAAOz0B,IAAc,WAAerG,KAAI,SAACue,EAAKre,GAAN,OAAY26B,EAA8BC,EAAGvc,EAAKre,OAC5G8xB,eAAgB,SAAC8I,GAAD,OAAO,6CAAgBX,EAAEW,EAAG,mBAArB,MAA4CX,EAAEW,EAAG,sBAAjD,QAA6EX,EAAEW,EAAG,2B,wKClGpG,SAASgB,EAA0BC,EAAiBC,GACzD,OAjDK,SAAiCD,EAAiBC,GAIvD,IAHA,IAAMC,EAAU,IAAIv1B,IAAIs1B,EAAWh8B,KAAI,SAAAE,GAAC,OAAIA,EAAEzC,QAAOy+B,EAA0B,GACzEC,EAAWr/B,OAAOO,KAAK0+B,GAE7B,MAAsBI,EAAtB,eAAgC,CAA3B,IAA2B,EAArB7gB,EAAO,KACZ8gB,EAAiB,GADS,cAEPL,EAAgBzgB,IAFT,IAE9B,2BAAiD,CAAC,IAAvC+gB,EAAsC,QAC3CJ,EAAQx0B,IAAI40B,EAASzgB,QACnBwgB,EAAeC,EAASzgB,QAASwgB,EAAeC,EAASzgB,QAAQyC,KAAKge,GACrED,EAAeC,EAASzgB,QAAU,CAACygB,GAEpCD,EAAc,KAAQA,EAAc,KAAO/d,KAAKge,GAC/CD,EAAc,KAAS,CAACC,IARH,8BAW9BH,EAAwB5gB,GAAWxe,OAAOmK,OAAOm1B,GAGnD,IAAME,EAAW,GAAI/N,EAAO,GAAIgO,EAAS,GAsBzC,OApBA,SAASC,EAAShf,GAChB,GAAIA,GAAS2e,EAASp6B,OAAtB,CAA+B,IAAD,gBACDi6B,GADC,IAC5B,4CAAav+B,EAAb,EAAaA,IAAKg/B,EAAlB,EAAkBA,IAChB,IAAI,UAACH,EAAS7+B,UAAV,QAAkB,GAAKg/B,EACzB,QAHwB,8BAI5BF,EAAOle,KAAP,eAAiBkQ,QAJnB,CAQA,IAAMjT,EAAU6gB,EAAS3e,GACrB4e,EAAiBF,EAAwB5gB,GAC7C,IAAK,IAAMM,KAAUwgB,EAAgB,CAAC,IAAD,EACnCE,EAAS1gB,IAAU,UAAC0gB,EAAS1gB,UAAV,QAAqB,GAAK,EAC7C2S,EAAKjT,GAAW8gB,EAAexgB,GAC/B4gB,EAAShf,EAAQ,GACjB8e,EAAS1gB,IAAW,IAIxB4gB,CAAS,GACFD,EASAG,CAAwBX,EAAiBC,GAAY1N,QAAO,SAACC,EAAMwN,GAAP,OACjExN,EAAOzxB,OAAOE,QAAQ++B,GAAiBzN,QAAO,SAACC,EAAMoO,GAAP,OAAqBpO,EAAOoO,EAAU,GAAG56B,SAAQ,KAC7F,GA4DC,SAASof,EAAiByb,EAAUjgC,GAA2B,IAApBkgC,EAAmB,0DAC8ClgC,EAAzGwd,eAD2D,MACjD,GADiD,IAC8Cxd,EAA3F0kB,mBAD6C,WAC8C1kB,EAAtEkhB,oBADwB,MACT,KADS,IAC8ClhB,EAAjDmgC,oBADG,MACY,QADZ,IAC8CngC,EAAzBE,kBADrB,MACkC,QADlC,EAEnE,GAAIC,OAAOO,KAAKsI,KAAewY,SAASye,GAAW,MAAM,GAAN,OAAUA,EAAV,sBAAgCziB,GAC9E0iB,IAAWA,EAA2B,aAAfhgC,GAA6BwkB,GACzD,IAAIV,EAAS,WAGb,OAFiB,cAAbic,GAAyC,UAAbA,GAAqC,UAAbA,GAAwBC,KAC9Elc,EAAU9C,GAA8Bif,GACpC,GAAN,OAAUnc,EAAV,YAAoBic,EAApB,YAAgCziB,GAG3B,SAAS4iB,EAAwBH,EAAUjgC,GAA2B,IAApBkgC,EAAmB,wDAC1E,GAAI//B,OAAOO,KAAKsI,KAAewY,SAASye,GAAW,OAAOA,EADgB,MAEIjgC,EAAtE0kB,mBAFkE,WAEI1kB,EAAjDmgC,oBAF6C,MAE9B,QAF8B,IAEIngC,EAAzBE,kBAFqB,MAER,QAFQ,EAGpEghB,EAAiBlhB,EAAjBkhB,aAEF,CAAC,gBAAiB,kBAAkBM,SAASN,GAC/CA,EAAe,WACR,CAAC,YAAa,aAAaM,SAASN,KAC3CA,EAAe,QACZgf,IAAWA,EAA2B,aAAfhgC,GAA6BwkB,GACzD,IAAIV,EAAS,WAGb,OAFiB,cAAbic,GAAyC,UAAbA,GAAqC,UAAbA,GAAwBC,KAC9Elc,EAAU9C,GAA8Bif,GACnCnc,I,4FC1IM,SAASqc,EAAmBvN,GACzC,OCJa,SAA4BA,GACzC,GAAI1vB,MAAMyC,QAAQitB,GAAM,OAAO,OAAAwN,EAAA,GAAiBxN,GDGzC,CAAkBA,IELZ,SAA0ByN,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYtgC,OAAOogC,GAAO,OAAOn9B,MAAMs9B,KAAKH,GFIvD,CAAgBzN,IAAQ,OAAA6N,EAAA,GAA2B7N,IGLvE,WACb,MAAM,IAAI8N,UAAU,wIHIwE,K,mNIMzEngB,E,WAEnB,aAAgB,GAAD,oBAAK/iB,gBAAgB+iB,EAAW,MAAM9iB,MAAM,0C,uDAkI3D,SAAsBif,EAAc8M,EAAW7f,GAAU,IAAD,EAChDg3B,EAAS,UAAGnjC,KAAKojC,YAAYlkB,UAApB,aAAG,EAAgC/S,QAClD,GAAKg3B,EAAL,CACA,IAAIE,EACJ,GAAkB,SAAdrX,EACF,cAAiB,CAAC,SAAU,UAAW,YAAvC,eAAoD,CAAC,IAAD,IAAzCsX,EAAE,KAAuC,YACjC7gC,OAAOE,QAAP,iBAAewgC,QAAf,IAAeA,OAAf,EAAeA,EAAYG,UAA3B,QAAkC,IAAIC,MAAK,yCAAyBp3B,YADnC,QAC+C,GACjG,GADEk3B,EADgD,oBAElC,CACdrX,EAAYsX,EACZ,WALN,qBAQwB7gC,OAAOE,QAAP,iBAAewgC,QAAf,IAAeA,OAAf,EAAeA,EAAYnX,UAA3B,QAAyC,IAAIuX,MAAK,yCAAyBp3B,YARnG,QAQ+G,GAAtGk3B,EART,oBASA,GAAKA,EACL,MAAO,CAAEnkB,eAAc8M,YAAWqX,iB,oBAsGpC,SAAcnkB,GACZ,IAAI5d,EAAYmf,IAAkBlU,IAAI2S,GAClC5d,EAAU6d,mBACZ1c,OAAOud,OAAO1e,EAAU6d,mBAAmBjS,SAAQ,SAAA+S,GAAK,OACtDW,IAAiBqB,kBAAkBhC,EAAO,OAC9CQ,IAAkB+iB,OAAOtkB,O,KA7PR6D,EAGZqY,uBAAyB,kBAAM7tB,KAHnBwV,EAIZqD,iBAAmB,SAAC9kB,EAAWoO,GAAyB,IAAhBpP,EAAe,uDAAN,EAChD4e,EAA2B5d,EAA3B4d,aAAc7e,EAAaiB,EAAbjB,SACpB,GAAgB,uBAAZqP,EAAkC,OANrBqT,EAMiC0gB,sBAAsBvkB,GACxE,GAAgB,uBAAZxP,EAAkC,OAPrBqT,EAOiC2gB,sBAAsBxkB,EAAc7e,GACtF,GAAgB,cAAZqP,EAAyB,OAAO3P,IAAOkD,iCAAP,OAAwC3B,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAWkzB,QACvF,GAAgB,mBAAZ9kB,GAA4C,eAAZA,EAA0B,OAT7CqT,EASyDkQ,SAAS5yB,GACnF,GAAIqP,EAAQoU,SAAS,aAAc,OAAO,GAC1C,GAAIpU,KAAW/B,IAAmB,OAAOA,IAAkB+B,GAC3D,IAAIi0B,EAZa5gB,EAYOqgB,YAAYlkB,GACpC,OAAIykB,GAAgBj0B,KAAWi0B,EAAaC,SAAiBD,EAAaC,SAASl0B,GAblEqT,EAagF8gB,qBAAqBxjC,IAC/GC,GAdUyiB,EAiBZqgB,YAAc,SAAC1a,GAAD,OAAapb,IAAcob,IAjB7B3F,EAkBZwV,iBAAmB,SAACuL,GAAD,MAAexjC,EAAf,uDAAwB,GAAxB,OAA6C,OAAbgL,UAAa,IAAbA,KAAA,UAAAA,IAAgBw4B,UAAhB,eAA+BhjC,OAAQR,GAlB9EyiB,EAmBZmZ,oBAAsB,kBAAMz5B,OAAOO,KAAKsK,MAnB5ByV,EAqBZC,QAAU,SAAC0F,GAAD,MAAUpoB,EAAV,uDAAmB,GAAnB,OAA2B,UArBzByiB,EAqB8BqgB,YAAY1a,UAAjB,eAA2B5nB,OAAQR,GArB5DyiB,EAsBZ+P,QAAU,SAACpK,GAAD,MAAUpoB,EAAV,uDAAmB,EAAnB,OAA0B,UAtBxByiB,EAsB6BqgB,YAAY1a,UAAjB,eAA2ByM,OAAQ70B,GAtB3DyiB,EAuBZY,gBAAkB,SAAC+E,GAAD,MAAUpoB,EAAV,uDAAmB,GAAnB,OAA2B,UAvBjCyiB,EAuBsCqgB,YAAY1a,UAAjB,eAA2BgK,aAAcpyB,GAvB1EyiB,EAwBZsD,iBAAmB,kBAAM5jB,OAAOO,KAAKsI,MAxBzByX,EAyBZghB,gCAAkC,kBAzBtBhhB,EAyBiCsD,mBAAmBzjB,QAAO,SAAAgE,GAAC,MAAU,aAANA,MAzBhEmc,EA0BZgB,iBAAmB,SAAC2E,GAAD,MAAUpoB,EAAV,uDAAmB,GAAnB,OAA2B,UA1BlCyiB,EA0BuCqgB,YAAY1a,UAAjB,eAA2BzB,gBAAiB3mB,GA1B9EyiB,EA2BZsQ,qBAAuB,SAAC3K,GAAD,MAAUpoB,EAAV,uDAAmB,GAAnB,OAA2B,UA3BtCyiB,EA2B2CqgB,YAAY1a,UAAjB,eAA2Bsb,oBAAqB1jC,GA3BtFyiB,EA4BZkhB,UAAY,SAACvb,GAAD,MAAUpoB,EAAV,uDAAmB,GAAnB,OAA2B,UA5B3ByiB,EA4BgCqgB,YAAY1a,UAAjB,eAA2Bwb,SAAU5jC,GA5BhEyiB,EA+BZqZ,aAAe,kBAAM35B,OAAOO,KAAKwK,MA/BrBuV,EAgCZoZ,cAAgB,SAAC97B,GAAD,MAAWC,EAAX,uDAAoB,GAApB,OAAsC,OAAVkN,UAAU,IAAVA,KAAA,UAAAA,IAAanN,UAAb,eAAwBS,OAAQR,GAhChEyiB,EAiCZ8gB,qBAAuB,SAACxjC,GAAD,OAjCX0iB,EAiC8BqZ,eAAe17B,QAAQL,IAjCrD0iB,EAkCZkQ,SAAW,SAAC5yB,GAAD,MAAWC,EAAX,uDAAoB,EAApB,OAAqC,OAAVkN,UAAU,IAAVA,KAAA,UAAAA,IAAanN,UAAb,eAAwBoN,QAASnN,GAlC3DyiB,EAmCZyT,aAAe,SAACn2B,GAAD,MAAWC,EAAX,uDAAoB,EAApB,OAAqC,OAAVkN,UAAU,IAAVA,KAAA,UAAAA,IAAanN,UAAb,eAAwBqN,QAASpN,GAnC/DyiB,EAsCZohB,mBAAqB,SAACzb,GAAD,uBAtCT3F,EAsC2BqgB,YAAY1a,UAA9B,aAAa,EAA2B0b,gBAtCjDrhB,EAuCZ0gB,sBAAwB,SAAC/a,GAAD,uBAvCZ3F,EAuC8BohB,mBAAmBzb,UAArC,aAAa,EAAkCtlB,KAvC3D2f,EAwCZ2gB,sBAAwB,SAAChb,EAASroB,GAAV,yBAxCZ0iB,EAwCwCohB,mBAAmBzb,UAA/C,iBAAuB,EAAkCziB,aAAzD,aAAuB,EAxCnC8c,EAwCkF8gB,qBAAqBxjC,KAxCvG0iB,EA0CZ8Y,SAAW,SAACnT,GAAD,MAAUpoB,EAAV,uDAAmB,KAAnB,OAA4B,UA1C3ByiB,EA0CgCqgB,YAAY1a,UAAjB,eAA2B2b,WAAY/jC,GA1ClEyiB,EA2CZ6P,QAAU,SAAClK,GAAD,MAAUpoB,EAAV,uDAAmB,KAAnB,OAA4B,UA3C1ByiB,EA2C+BqgB,YAAY1a,UAAjB,eAA2B4b,UAAWhkC,GA3ChEyiB,EA4CZoW,aAAe,SAACzQ,EAASsD,GAAV,MAAqB1rB,EAArB,uDAA8B,KAA9B,OAAuC,UA5C1CyiB,EA4C+CgU,UAAUrO,EAASsD,UAAxB,eAAoCnqB,MAAOvB,GA5CrFyiB,EA6CZuQ,oBAAsB,SAAC5K,EAAS6b,GAAV,UAAsBjkC,EAAtB,uDAA+B,KAA/B,OAAwC,UA7ClDyiB,EA6CuDqgB,YAAY1a,UAAjB,mBAA2B8b,cAA3B,0CAAoDD,EAAa,WAAjE,eAAuE1iC,MAAOvB,GA7ChIyiB,EAgDZgU,UAAY,SAACrO,EAASsD,GAAV,QAAqB1rB,EAArB,uDAA8B,GAA9B,OAAqC,UAhDrCyiB,EAgD0CqgB,YAAY1a,UAAjB,mBAA2B8b,cAA3B,eAAoCxY,KAAc1rB,GAhDvFyiB,EAiDZ0K,cAAgB,SAAC/E,EAASsD,GAAV,MAAqB1rB,EAArB,uDAA8B,GAA9B,OAAqC,UAjDzCyiB,EAiD8CgU,UAAUrO,EAASsD,UAAxB,eAAoClrB,OAAQR,GAjDrFyiB,EAmDZ4V,oBAAsB,SAACzZ,EAAc8M,EAAWsG,GAA+B,IAAD,EAAfhyB,EAAe,uDAAN,EAE7E,GAAkB,UAAd0rB,GAAuC,UAAdA,EAAuB,OAAO1rB,EAE3D,IADA,IAAImkC,GAAU,UAtDG1hB,EAsDEqgB,YAAYlkB,UAAjB,eAAgCslB,SAAU,GAC/C3+B,EAAI,EAAGA,GAAKysB,EAAezsB,IAAK,CAAC,IAAD,EACnC6+B,GAAc,UAAAD,EAAQ,gBAAD,OAAiB5+B,WAAxB,eAA8B6+B,cAAe,GAC3DC,EAAaliC,OAAOE,QAAQ+hC,GAAanB,MAAK,mCAAEngC,EAAF,iBAAgBA,IAAQ4oB,KAC1E,GAAI2Y,EAAY,OAAOA,EAAW,GAEpC,OAAOrkC,GA5DUyiB,EA+DZsW,kBAAoB,SAAC3Q,EAASsD,GAAV,MAAqB1rB,EAArB,uDAA8B,GAA9B,OAAqC,UA/D7CyiB,EA+DkDgU,UAAUrO,EAASsD,UAAxB,eAAoC4Y,WAAYtkC,GA/D7FyiB,EAgEZ8hB,0BAA4B,SAACnc,EAASsD,GAA4B,IAAjB1rB,EAAgB,uDAAP,GACzDgB,EAAYmf,IAAkBlU,IAAImc,GACxC,IAAKpnB,EAAW,OAAOhB,EAF+C,MAGDgB,EAA7DgxB,qBAH8D,MAG9C,EAH8C,IAGDhxB,EAA1CjB,gBAH2C,MAGhCoC,OAAOO,KAAKwK,KAAY,GAHQ,EAIhE+oB,EAAYxT,EAAUyT,aAAan2B,GACzC,OArEiB0iB,EAqELsW,kBAAkB3Q,EAASsD,GAAWrmB,KAAI,SAAA2zB,GAAO,MAAuB,oBAAZA,EAAyBA,EAAQhH,EAAeiE,GAAa+C,MArEpHvW,EAuEZqJ,eAAiB,SAAC1D,EAASsD,EAAWC,EAAcC,GAA6B,IAAD,MAAhB5rB,EAAgB,uDAAP,GACxEgB,EAAYmf,IAAkBlU,IAAImc,GACxC,IAAKpnB,EAAW,OAAOhB,EAF8D,MAGhBgB,EAA7DgxB,qBAH6E,MAG7D,EAH6D,IAGhBhxB,EAA1CjB,gBAH0D,MAG/CoC,OAAOO,KAAKwK,KAAY,GAHuB,EAI/E+oB,EAAYxT,EAAUyT,aAAan2B,GACnC8rB,EAAK,UA5EMpJ,EA4EE8hB,0BAA0Bnc,EAASsD,UAA3C,iBAAG,EAAqDC,UAAxD,iBAAG,EAAoEsB,cAAvE,aAAG,EAA6ErB,GAC3F,OAAKC,EACmB,oBAAVA,EAAuBA,EAAMmG,EAAeiE,GAAapK,EADpD7rB,GA7EFyiB,EAgFZuJ,oBAAsB,SAACH,EAAO/oB,EAAK4oB,GAAwC,IAAD,MAA5B1pB,EAA4B,uDAApB,GAAIhC,EAAgB,uDAAP,GACxE,OAAI,OAAC6rB,QAAD,IAACA,OAAD,EAACA,EAAQ/oB,IACD,YAARA,EACF,OAAO+oB,QAAP,IAAOA,GAAP,UAAOA,EAAOhgB,eAAd,iBAAO,OAAAggB,EAAiB7pB,EAAM81B,gBAAgBpM,GAAY1pB,UAA1D,iBAAO,EAA4D,UAAnE,aAAO,SAAiEA,GAC3C,oBAAxB,OAAO6pB,QAAP,IAAOA,OAAP,EAAOA,EAAQ/oB,IAAsB+oB,EAAM/oB,GAAKd,EAAM81B,gBAAgBpM,GAAY1pB,GAAS6pB,EAAM/oB,GAH9E9C,GAjFTyiB,EAuFZgW,eAAiB,SAACrQ,EAASsD,EAAWsG,EAAeiE,GAA8B,IAAD,EAAlBj2B,EAAkB,uDAAT,KAC1EgC,EAAK,UAxFQygB,EAwFAgU,UAAUrO,EAASsD,UAA3B,aAAG,EAAoC1pB,MAChD,MAAqB,oBAAVA,EACFA,EAAMgwB,EAAeiE,GACvBj0B,GAAShC,GA3FCyiB,EA6FZ+hB,kBAAoB,SAACpc,EAAS4J,EAAeiE,GAAe,IAAD,EAC5DkO,GAAU,UA9FG1hB,EA8FEqgB,YAAY1a,UAAjB,eAA2B8b,SAAU,GAC/CO,EAAW,GAKf,OAJAtiC,OAAOO,KAAKyhC,GAASv3B,SAAQ,SAAA8e,GAC3B,IAAI1pB,EAjGWygB,EAiGEgW,eAAerQ,EAASsD,EAAWsG,EAAeiE,GAC/Dj0B,GAAOyiC,EAAS/gB,KAAK1hB,MAEpByiC,GApGUhiB,EAsGZiiB,qBAAuB,SAACtc,EAASsD,EAAWyN,EAAgBjB,EAAclG,EAAeiE,GAA8B,IAAD,EAAlBj2B,EAAkB,uDAAT,KAC5G2kC,EAvGWliB,EAuGK8hB,0BAA0Bnc,EAASsD,GACrD7J,EAAO,KAFgH,cAGrG8iB,GAHqG,IAG3H,2BAAgC,CAAC,IAAD,EAArB3L,EAAqB,QAC1B4L,EAAW5L,EAAQ33B,YAGvB,GAFwB,oBAAbujC,IACTA,EAAWA,EAAS1M,EAAclG,EAAeiE,KACvC,QAAR,EAAA2O,SAAA,eAAUzL,kBAAmBA,EAAgB,CAC/CtX,EAAO+iB,EACP,QATuH,8BAY3H,OAAO/iB,GAAQ7hB,GAlHEyiB,EAoHZ4W,0BAA4B,SAACh4B,EAAa6B,GAAmC,IAAnBlD,EAAkB,uDAAT,KACxE,IAAKkD,IAAmB7B,EAAa,OAAOrB,EADqC,MAEtDmD,IAAiBC,mBAAmB/B,EAAa,QAAS6B,GAFJ,0BAE5ElB,OAF4E,MAEpE,GAFoE,EAEhEqB,EAFgE,KAGjF,OAAKA,EACElB,OAAOC,YAAYD,OAAOE,QAAQL,GAAOqD,KAAI,mCAAEvC,EAAF,KAAO8gB,EAAP,WAAwB,cAAR9gB,EAAsB,CAACA,EAAK8gB,GAAO,CAAC9gB,EAAK8gB,EAAMvgB,OAD/FrD,GAvHHyiB,EA0HZ6W,2BAA6B,SAACj4B,EAAa6B,GAAiC,IAAjBlD,EAAgB,uDAAP,GACzE,IAAKkD,IAAmB7B,EAAa,OAAOrB,EAC5C,IAAIitB,EAAS9pB,IAAiBC,mBAAmB/B,EAAa,SAAU6B,GAAgB,GACxF,OAAO+pB,GAAUjtB,GA7HAyiB,EAgIZ4D,gBAAkB,SAAC+B,GAAD,IAAUpoB,EAAV,8DAAgE,aAhItEyiB,EAgIwCgB,iBAAiB2E,IAA2BpoB,GAhIpFyiB,EAiIZ6D,gBAAkB,SAAC8B,GAAD,UAAUpoB,EAAV,+DAA6B,UAjInCyiB,EAiIwCqgB,YAAY1a,UAAjB,mBAA2B8b,cAA3B,mBAAmC7H,YAAnC,eAAyCwI,YAAa7kC,GAjIzFyiB,EAsJZ8N,cAAgB,SAAC3R,GAAD,aAAkBmL,QAAO,UAACtH,EAAUqgB,YAAYlkB,UAAvB,aAAC,EAAqCslB,SAtJnEzhB,EAwJZ6N,mBAAqB,SAAC1R,GAA8C,IAAhC5e,EAA+B,uDAAtB,CAAE8kC,UAAW,IAC/D,IAAKlmB,EAAc,OAAO5e,EAC1B,IAAIgmB,EAASvD,EAAUY,gBAAgBzE,GACvC,IAAKoH,EAAQ,OAAOhmB,EACpB,IAAM8kC,EAAY,CAAC,UAAW,WAAY,WAAY,SAAU,YAAa,WAAY,QAAS,YAAhF,UAAgG9e,EAAhG,UAEZK,EAAkB5D,EAAU4D,gBAAgBzH,GAC5C0H,EAAkB7D,EAAU6D,gBAAgB1H,GAC7CyH,GACHye,EAAUphB,KAAK,iBAGjB,IAAMqhB,EAAiBxhB,IAAsByC,GACvCW,EArKWlE,EAqKUgB,iBAAiB7E,GAE5C,GADKmmB,EAAevhB,SAAS,kBAAsC,aAAlBmD,GAA8Boe,EAAerhB,KAAK,iBAtKlFjB,EAuKR8N,cAAc3R,GAAe,CAAC,IAAD,IAC9BomB,EAAe,GASrB,OARA7iC,OAAOO,KAAP,oBAAY+f,EAAUqgB,YAAYlkB,UAAlC,aAAY,EAAqCslB,cAAjD,QAA2D,IAAIt3B,SAAQ,SAAA8e,GAAS,uBAC9EjJ,EAAU8hB,0BAA0B3lB,EAAc8M,UAD4B,aAC9E,EAA8D9e,SAAQ,SAACosB,EAASrN,GAAV,oBACpEqN,QADoE,IACpEA,GADoE,UACpEA,EAAS/L,cAD2D,aACpE,EAAiBrgB,SAAQ,SAACif,EAAOD,GAAR,gBACjB,OAALC,QAAK,IAALA,OAAA,EAAAA,EAAOhgB,WAAP,UA5KQ4W,EA4KeqJ,eAAelN,EAAc8M,EAAWC,EAAcC,UAA7E,aAAkB,EAAwE/f,YAAam5B,EAAatZ,GAAb,gCAA+BsZ,EAAatZ,UAA5C,QAA0D,IAA1D,CAA+D,CACrKA,YACAC,eACAC,0BAED,yBAAEkZ,aAAcE,GAAvB,IAAqCD,mBAGrC,IAAME,EAAgB,GAatB,GAZK5e,GACH4e,EAAcvhB,KAAK,yBAA0B,2BAE3C2C,GAAmBC,EACrB2e,EAAcvhB,KAAd,UAAsBsC,EAAtB,4BAAiDA,EAAjD,oBACoD,QAA7CvD,EAAUgB,iBAAiB7E,IAClCqmB,EAAcvhB,KAAd,UAAsBsC,EAAtB,oBAGFif,EAAcvhB,KAAd,UAAsBsC,EAAtB,2BAAgDA,EAAhD,kBAGe,SAAXA,EAAmB,CACrB,IAAMkf,EAAY,GAClBA,EAAUxhB,KAAV,MAAAwhB,EAAS,YAASD,EAAc3iC,QAAO,SAAAQ,GAAG,OAAIA,EAAI4b,WAAJ,UAAkBsH,EAAlB,SAA8B3gB,KAAI,SAAAvC,GAAG,OAAIA,EAAIse,QAAJ,UAAe4E,EAAf,eAA6BA,EAA7B,oBACvFkf,EAAUxhB,KAAV,MAAAwhB,EAAS,YAASD,EAAc3iC,QAAO,SAAAQ,GAAG,OAAIA,EAAI4b,WAAJ,UAAkBsH,EAAlB,SAA8B3gB,KAAI,SAAAvC,GAAG,OAAIA,EAAIse,QAAJ,UAAe4E,EAAf,eAA6BA,EAA7B,gBACvFif,EAAcvhB,KAAd,MAAAuhB,EAAsBC,OACF,SAAXlf,EACTif,EAAcvhB,KAAd,MAAAuhB,EAAa,YAASA,EAAc3iC,QAAO,SAAAQ,GAAG,OAAIA,EAAI4b,WAAJ,UAAkBsH,EAAlB,SAA8B3gB,KAAI,SAAAvC,GAAG,OAAIA,EAAIse,QAAJ,UAAe4E,EAAf,eAA6BA,EAA7B,gBACzE,UAAXA,GACPif,EAAcvhB,KAAd,MAAAuhB,EAAa,YAASA,EAAc3iC,QAAO,SAAAQ,GAAG,OAAIA,EAAI4b,WAAJ,UAAkBsH,EAAlB,SAA8B3gB,KAAI,SAAAvC,GAAG,OAAIA,EAAIse,QAAJ,UAAe4E,EAAf,eAA6BA,EAA7B,oBAE7F,MAAO,CAAE8e,YAAWG,gBAAeF,mBA3MpBtiB,EA+MZwJ,YAAc,SAACjrB,EAAWoO,GAC/B,MAAgB,YAAZA,EACKqT,EAAUwJ,YAAYjrB,EAAW,OAASyhB,EAAUwJ,YAAYjrB,EAAW,QAAUyhB,EAAUwJ,YAAYjrB,EAAW,iBAAkB,EAC5H,aAAZoO,EACAqT,EAAUwJ,YAAYjrB,EAAW,QAAUyhB,EAAUwJ,YAAYjrB,EAAW,SAAWyhB,EAAUwJ,YAAYjrB,EAAW,kBAAmB,EAC/H,aAAZoO,EACAqT,EAAUwJ,YAAYjrB,EAAW,QAAUyhB,EAAUwJ,YAAYjrB,EAAW,SAAWyhB,EAAUwJ,YAAYjrB,EAAW,kBAAmB,KACpI,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAW25B,oBAAqBvrB,KAAWpO,EAAU25B,mBAtN3ClY,EAyNZkD,yBAA2B,SAAC3kB,EAAWoO,GAAyB,IAAD,IAAfpP,EAAe,uDAAN,EAC9D,OA1NiByiB,EA0NRwJ,YAAYjrB,EAAWoO,GAAU,iBAAOpO,QAAP,IAAOA,GAAP,UAAOA,EAAW25B,yBAAlB,aAAO,EAA+BvrB,UAAtC,QAAkDpP,EA1N3EyiB,EA2NAqD,iBAAiB9kB,EAAWoO,EAASpP,IA3NrCyiB,EA+NZkO,eAAiB,SAAC/R,EAAcgS,GACrC,IAAI5vB,EAAYmf,IAAkBlU,IAAI2S,GACtC,GAAK5d,EAAL,CACA,IAAImkC,EAAoBnkC,EAAU6d,kBAC9BumB,EAAuBxU,EAG3B/P,IAASiR,cAAcllB,SAAQ,SAAA+T,GAC7B,IAAI0kB,EAAe/kB,IAAiBrU,IAAjB,OAAqBm5B,QAArB,IAAqBA,OAArB,EAAqBA,EAAuBzkB,IAC/D,GAAI0kB,EAAaxlB,WAAajB,EAA9B,CACA,IAAI0mB,EAAYhlB,IAAiBrU,IAAjB,OAAqBk5B,QAArB,IAAqBA,OAArB,EAAqBA,EAAoBxkB,IACrD4kB,GAA0B,OAAZF,QAAY,IAAZA,OAAA,EAAAA,EAAcxlB,WAAY,GAExCylB,GAAWhlB,IAAiBqB,kBAAkB2jB,EAAUtmB,GAAIumB,GAE5DA,GAAYplB,IAAkBS,cAAc2kB,EAAYD,GAExDD,GAAc/kB,IAAiBqB,kBAAkB0jB,EAAarmB,GAAIJ,OAGxE5d,EAAU6d,kBAAoB,GAC9B1c,OAAOE,QAAQuuB,GAAahkB,SAAQ,mCAAE9J,EAAF,KAAO6c,EAAP,YAClC3e,EAAU6d,kBAAkB/b,GAAO6c,KACrCQ,IAAkB6B,gBAAgBhhB,KAtPjByhB,EAgQZ4Y,eAAiB,SAACr6B,GACvB,IAAIghC,EAAY7/B,OAAOC,YAAYD,OAAOE,QAAQrB,EAAU6d,mBAAmBxZ,KAAI,mCAAEvC,EAAF,KAAO6c,EAAP,WAAkB,CAAC7c,EAAKwd,IAAiBrU,IAAI0T,QAC5H6lB,EAAe/iB,EAAUgjB,kCAAkCzkC,GAC/D,OAnQiByhB,EAmQLijB,uBAAuB1kC,EAAU4gB,qBAAsB4jB,EAAcxD,IAnQhEvf,EAsQZijB,uBAAyB,WAAyD,IAAxD9jB,EAAuD,uDAAhC,GAAI4jB,EAA4B,uCAAdxD,EAAc,uCAClF/Q,EAAapQ,IAASoQ,WAAW+Q,GACjC2D,EAA0B9kB,IAAS+kB,2BAA2B3U,GAE9DjvB,EAAQi5B,YAAUuK,GAEtBrjC,OAAOud,OAAOsiB,GAAWp1B,SAAQ,SAAAgT,GAC1BA,IAEL5d,EAAM4d,EAAIsB,cAAgBlf,EAAM4d,EAAIsB,cAAgB,GAAKL,IAASgH,iBAAiBjI,EAAIsB,YAAatB,EAAImB,SAAU/e,EAAMouB,oBAAqC,EAAfxQ,EAAImB,SAAenB,EAAIzS,OAErKyS,EAAIyB,SAASzU,SAAQ,SAACi5B,GAAD,OACnBA,GAAWA,EAAQ/iC,MAAQd,EAAM6jC,EAAQ/iC,MAAQd,EAAM6jC,EAAQ/iC,MAAQ,GAAK+iC,EAAQlgC,cAGxFggC,EAAwB/4B,SAAQ,SAAAyS,GAAI,OAAIrd,EAAMqd,EAAKvc,MAAQd,EAAMqd,EAAKvc,MAAQ,GAAKuc,EAAKsY,WAExF/V,EAAqBhV,SAAQ,YAA6D,IAAlDqU,EAAiD,EAAzDa,OAAyBqP,EAAgC,EAAzCpP,QAAoB7e,EAAqB,EAArBA,gBAC7D+tB,EAAWhQ,IAAWgQ,EAAWhQ,GAAQ7Z,OAASX,SAAS0qB,IAChEhvB,OAAOE,QAAQwe,IAAS2Q,oBAAoBvQ,EAAQkQ,EAAWjuB,IAC5D0J,SAAQ,mCAAEwC,EAAF,KAAWwU,EAAX,YAAoB5hB,EAAMoN,IAAYpN,EAAMoN,IAAY,GAAKwU,QAG1E,IAAIjX,EAAeH,YAAe,OAACxK,QAAD,IAACA,OAAD,EAACA,EAAOyK,WAE1C,OADAq5B,YAAmBn5B,EAAc3K,GAAO6J,QAAQ7J,GACzC,CACL4uB,YAAazuB,OAAOC,YAAYD,OAAOE,QAAQ2/B,GAAW38B,KAAI,mCAAEvC,EAAF,KAAO8gB,EAAP,WAAgB,CAAC9gB,EAAD,OAAM8gB,QAAN,IAAMA,OAAN,EAAMA,EAAK5E,QACzFiS,aACAxK,WAAYzkB,EACZ4f,yBAnSea,EAsSZsjB,WAAa,SAACP,EAAcxjC,GAAf,OAAyBA,GAASG,OAAOE,QAAQL,GAAO4K,SAAQ,YAAiB,IAAD,qBAAd9J,EAAc,KAAT8gB,EAAS,KAClG,GAAY,cAAR9gB,EAAqB,CAAC,IAAD,EACvB0iC,EAAa/4B,UAAb,UAAyB+4B,EAAa/4B,iBAAtC,QAAmD,GACnD,cAAkCtK,OAAOE,QAAQuhB,GAAjD,eAAuD,CAAC,IAAD,wBAA3CxU,EAA2C,KAAlCskB,EAAkC,KACrD8R,EAAa/4B,UAAU2C,GAAvB,UAAkCo2B,EAAa/4B,UAAU2C,UAAzD,QAAqE,GACrE,cAAiCjN,OAAOE,QAAQqxB,GAAhD,4CAAYD,EAAZ,KAAkBI,EAAlB,KACE2R,EAAa/4B,UAAU2C,GAASqkB,IAAQ,UAAC+R,EAAa/4B,UAAU2C,GAASqkB,UAAjC,QAA0C,GAAKI,SAEtF2R,EAAa1iC,IAAO,UAAC0iC,EAAa1iC,UAAd,QAAsB,GAAK8gB,MA9SrCnB,EAiTZgjB,kCAAoC,SAACzkC,GAAe,IAAD,oCACxDA,EAAYi6B,YAAUj6B,GACd4d,EAFgD,EAEhDA,aAAc7e,EAFkC,EAElCA,SAAUyf,EAFwB,EAExBA,QAASkH,EAFe,EAEfA,YAAaxD,EAFE,EAEFA,aAAc4U,EAFZ,EAEYA,gBAAiB9F,EAF7B,EAE6BA,cAF7B,IAE4CkH,0BAF5C,MAEiE,GAFjE,EAGlDjD,EAAYxT,EAAUyT,aAAan2B,GAGnCswB,EAAQ,CAAI,cAAe,eAAgB,eAAgB,YAAa,iBAAkB,aAAc,qBAAsB,0BAAtH,mBAAmJluB,OAAOO,KAAK2K,OACvKm4B,EAAerjC,OAAOC,YAAYiuB,EAAShrB,KAAI,SAAAvC,GAAG,MAAI,CAACA,EAxT5C2f,EAwTsDkD,yBAAyB3kB,EAAW8B,QAW3G,IAAK,IAAMA,KAVX0iC,EAAarD,aAzTI1f,EAyTgBY,gBAAgBzE,GACjD4mB,EAAa5mB,aAAeA,EAC5B4mB,EAAahmB,QAAUA,EACvBgmB,EAAa9e,YAAcA,IAAW,UAAIjE,EAAUqgB,YAAYlkB,UAA1B,iBAAI,EAAqCslB,cAAzC,iBAAI,EAA6C7H,YAAjD,aAAI,EAAmDwI,WAC7FW,EAAatiB,aAAeA,EAC5BsiB,EAAatM,mBAAqBA,EAClCsM,EAAatjC,WA/TIugB,EA+TcgB,iBAAiB7E,GAChD4mB,EAAa1N,gBAAkBA,EAC/B0N,EAAaxT,cAAgBA,EAC7BwT,EAAavP,UAAYA,EACPuP,EAAa1N,gBAC7B0N,EAAa1N,gBAAgBh1B,IApUd2f,EAoU2B4V,oBAAoBr3B,EAAU4d,aAAc9b,EAAKkvB,GAG7FvP,EAAUsD,mBAAmBnZ,SAAQ,SAAAoZ,GACnC,IAAI5W,EAAO,UAAM4W,EAAN,cACXwf,EAAap2B,GAzUEqT,EAyUckD,yBAAyB3kB,EAAWoO,GACjEA,EAAO,UAAM4W,EAAN,kBACPwf,EAAap2B,GA3UEqT,EA2UckD,yBAAyB3kB,EAAWoO,MAInE,IAAI42B,GAAqB,QAAT,EAAAhlC,SAAA,eAAW25B,oBAAqB,GAChDx4B,OAAOE,QAAQ2jC,GAAWp5B,SAAQ,YAAqB,IAAD,mBAAlBwC,EAAkB,KAATwU,EAAS,KACpC,uBAAZxU,GAAgD,uBAAZA,IACnCo2B,EAAaS,eAAe72B,KAAUo2B,EAAap2B,GAAWwU,OAIrE,IAAI8R,EAAqBjT,EAAUkD,yBAAyB3kB,EAAW,sBACnEklC,EAAiBzjB,EAAUkD,yBAAyB3kB,EAAW,sBAvVlDyhB,EAwVZsjB,WAAWP,EAAhB,eAAiCU,EAAiBxQ,IAIlDwD,EAAmBtsB,SAAQ,SAAAiV,GAAS,IAClB6J,EAAuD7J,EAA/DC,OAA4BqX,EAAmCtX,EAA5CE,QAAyB7e,EAAmB2e,EAAnB3e,eAC9C7B,EAAcohB,EAAUiiB,qBAAqB9lB,EAAc8M,EAAWyN,EAAgBqM,EAAa1N,gBAAgBpM,GAAYsG,EAAeiE,GA9VrIxT,EA+VVsjB,WAAWP,EAAc/iB,EAAU4W,0BAA0Bh4B,EAAa6B,EAAgB,QAIjGuf,EAAU+hB,kBAAkB5lB,EAAcoT,EAAeiE,GAAWrpB,SAAQ,SAAAu5B,GAAC,OAnW5D1jB,EAmWqEsjB,WAAWP,EAAcW,MAG/G,IAAMC,EAAe3mC,IAAOoC,oBAAP,UAA2Bb,SAA3B,iBAA2B,EAAWkzB,cAAtC,aAA2B,EAAmBpxB,KAKnE,OAJIsjC,GAvWa3jB,EAuWMsjB,WAAWP,EAAhB,eAAiCY,EAAe3mC,IAAOsD,gCAAP,UAAuC/B,SAAvC,aAAuC,EAAWkzB,UAvWnGzR,EAwWZsjB,WAAWP,EAAc/lC,IAAOsC,mBAAP,UAA0Bf,SAA1B,iBAA0B,EAAWkzB,cAArC,aAA0B,EAAmBpxB,IAA7C,UAAkD9B,SAAlD,iBAAkD,EAAWkzB,cAA7D,aAAkD,EAAmBpzB,cAxWlF2hB,EAyWZsjB,WAAWP,EAAc/lC,IAAOwD,yBAAP,UAAgCjC,SAAhC,iBAAgC,EAAWkzB,cAA3C,aAAgC,EAAmBpxB,IAAnD,UAAwD9B,SAAxD,iBAAwD,EAAWkzB,cAAnE,aAAwD,EAAmBpzB,YAA3E,UAAwFE,SAAxF,iBAAwF,EAAWkzB,cAAnG,aAAwF,EAAmBhxB,eAAgB,KAElJsiC,I,8FCrXPa,GAAY,EACZC,EAAoB,GAEHnmB,EAEnB,aACE,GADa,oBACTzgB,gBAAgBygB,EAAmB,MAAMxgB,MAAM,2CAHlCwgB,EAKZomB,UAAY,SAAC/L,GAAD,OAAWA,IAASA,EAAK5b,eAAiB4b,EAAKz6B,UAL/CogB,EAMZsB,qBAAuB,kBAAMwZ,YAAUqL,IAN3BnmB,EAOZkC,oBAAsB,kBAAMlgB,OAAOO,KAAK4jC,IAP5BnmB,EAQZqmB,cAAgB,kBAAMrkC,OAAOE,QAAQikC,GAAmBjhC,KAAI,yCAAgB,CAAhB,UAA0B7E,UAR1E2f,EASZC,iCAAmC,WACxC,OAAIimB,IACJlkC,OAAOO,KAAK+b,cAAcnc,QAAO,SAAAQ,GAAG,OAAIA,EAAI4b,WAAW,YAAU9R,SAAQ,SAAA9J,GAAQ,IAAD,EACvDA,EAAI2jC,MAAM,SAA1B7nB,EADuE,oBAE9E,IAAK0nB,EAAkB1nB,GAAe,CACpC,IAAI5d,EAAY2d,YAAqB7b,GACrC,IAAK9B,EAAW,OAChBslC,EAAkB1nB,GAAgB5d,MAGtCqlC,GAAY,GACL,IApBUlmB,EAsBZ6B,gBAAkB,SAACwY,GACxB,IAvBiBra,EAuBRomB,UAAU/L,GAAnB,CACA,IAAMkM,EAAQzL,YAAUT,GACxB/a,YAAmB,QAAD,OAAS+a,EAAK5b,cAAgB8nB,GAChDJ,EAAkB9L,EAAK5b,cAAgB8nB,IA1BtBvmB,EA4BZlU,IAAM,SAAC2S,GAAD,mCAAkB0nB,SAAlB,aAAkB,EAAoB1nB,UAAtC,QAAuD,MA5BjDuB,EA8BZ+iB,OAAS,SAACtkB,UACR0nB,EAAkB1nB,GACzBH,aAAaqB,WAAb,eAAgClB,KAhCfuB,EAkCZO,sBAAwB,SAAC9B,EAAc+B,GAAf,qCAlCZR,EAmCZlU,IAAI2S,UADoB,iBAC7B,EAAwBC,yBADK,aAC7B,EAA4C8B,UADf,QAC2B,MAnCvCR,EAqCZS,cAAgB,SAAChC,EAAcgB,GACpC,IAAM4a,EAtCWra,EAsCClU,IAAI2S,GACjB4b,GAAS5a,GAAQA,EAAIe,UACrB6Z,EAAK3b,oBAAmB2b,EAAK3b,kBAAoB,IACtD2b,EAAK3b,kBAAkBe,EAAIe,SAAWf,EAAIZ,GAzCzBmB,EA0CZ6B,gBAAgBwY,KA1CJra,EA4CZwmB,sBAAwB,SAAC/nB,EAAc+B,GAAa,IAAD,EAClD6Z,EA7CWra,EA6CClU,IAAI2S,GACjB4b,GAAS7Z,IACV,OAAC6Z,QAAD,IAACA,GAAD,UAACA,EAAM3b,yBAAP,aAAC,EAA0B8B,MAC/B6Z,EAAK3b,kBAAkB8B,GAAW,GAhDjBR,EAiDZ6B,gBAAgBwY,KAjDJra,EAmDZymB,mBAAqB,SAAChoB,EAAcgS,GACzC,IAAM5vB,EApDWmf,EAoDMlU,IAAI2S,GACtB5d,IACLA,EAAU6d,kBAAoB+R,EAC9BzQ,EAAkB6B,gBAAgBhhB,KAvDjBmf,EA0DZ0mB,cAAgB,WACrBP,EAAoB,GACpBD,GAAY,I,uICvDDS,EAPE,CACfC,OAAQC,IACRC,MAAOC,IACPC,MAAOC,IACPC,OAAQC,IACRC,QAASC,K,gBCLPC,EAAe,GACfC,EAAqB,qDACzBA,EAAmB7gC,MAAK,SAAAC,GACtB2gC,EAAe3gC,EAAIC,QACnB2gC,EAAqB,QAEvB,IAAMC,EAAuB,CAC3B,KAAM,MAAO,MAAO,OAAQ,MAAO,OAAQ,SAAU,YAAa,YAAa,WAAY,SAE7FxlC,OAAOO,KAAKsI,KAAe4B,SAAQ,SAAA9J,GAAG,OAAI6kC,EAAqBjkB,KAArB,UAA6B5gB,EAA7B,aAE1C,IAAM8kC,EAAoB,CAGxBC,EAAG,CAAEC,YAAa,EAAGC,YAAa,EAAGC,qBAAsB,GAC3DC,EAAG,CAAEH,YAAa,EAAGC,YAAa,EAAGC,qBAAsB,GAC3DE,EAAG,CAAEJ,YAAa,EAAGC,YAAa,EAAGC,qBAAsB,IAGvDG,EAAwB,CAC5BC,EAAG,CACDp6B,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,KACzBM,IAAK,CAAC,EAAG,GAAI,GAAI,GAAI,IACrBP,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,KAC1BM,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAC3BK,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAC3B25B,cAAe,CAAC,IAAK,IAAK,IAAK,IAAK,KACpCC,SAAU,CAAC,IAAK,IAAK,IAAK,IAAK,KAC/B15B,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,IACzBpB,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,KAChCF,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,KAChCC,SAAU,CAAC,IAAK,IAAK,IAAK,EAAK,MAC/B0B,MAAO,CAAC,IAAK,IAAK,IAAK,IAAK,MAE9Bs5B,EAAG,CACDv6B,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC7CM,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACtCP,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,EAAG,KAAM,KAAM,KAAM,MAC/CM,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,EAAG,KAAM,KAAM,KAAM,MAChDK,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,MACnD25B,cAAe,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,MAC5DC,SAAU,CAAC,IAAK,IAAK,IAAK,IAAK,EAAG,KAAM,KAAM,KAAM,MACpD15B,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzCpB,UAAW,CAAC,IAAK,EAAG,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,MACrDF,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,KAClDC,SAAU,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,MACxD0B,MAAO,CAAC,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,OAEhD44B,EAAG,CACD75B,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACxEM,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,KACxDP,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1EM,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3EK,KAAM,CAAC,IAAK,IAAK,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MAC7E25B,cAAe,CAAC,IAAK,IAAK,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MACtFC,SAAU,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/E15B,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzDpB,UAAW,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,GAAM,MACjFF,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,MAC7EC,SAAU,CAAC,EAAK,EAAK,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACjF0B,MAAO,CAAC,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,OAE5Eg5B,EAAG,CACDj6B,GAAI,CAAC,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACnGM,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjFP,IAAK,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MACnGM,KAAM,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MACpGK,KAAM,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACtG25B,cAAe,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/GC,SAAU,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MACxG15B,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9EpB,UAAW,CAAC,EAAK,EAAK,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1GF,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,EAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MACvGC,SAAU,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1G0B,MAAO,CAAC,IAAK,IAAK,IAAK,EAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,OAEtGi5B,EAAG,CACDl6B,GAAI,CAAC,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3HM,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACtGP,IAAK,CAAC,EAAK,EAAK,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5HM,KAAM,CAAC,EAAK,EAAK,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC7HK,KAAM,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1H25B,cAAe,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACnIC,SAAU,CAAC,EAAK,EAAK,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACjI15B,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACnGpB,UAAW,CAAC,IAAK,GAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,MACnIF,UAAW,CAAC,IAAK,EAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/HC,SAAU,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,MAClI0B,MAAO,CAAC,IAAK,IAAK,IAAK,GAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAI3Hu5B,EAAuB,CAC3Bx6B,GAAI,CAAEo6B,EAAG,CAAC,GAAI,IAAKG,EAAG,CAAC,GAAI,GAAI,IAAKV,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,IAAK,MACzGn6B,IAAK,CAAEq6B,EAAG,CAAC,IAAK,KAAMG,EAAG,CAAC,IAAK,EAAG,KAAMV,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,IAAK,MAC7G55B,IAAK,CAAE85B,EAAG,CAAC,GAAIG,EAAG,CAAC,EAAG,EAAG,GAAIV,EAAG,CAAC,EAAG,EAAG,GAAII,EAAG,CAAC,GAAI,GAAI,GAAI,IAAKC,EAAG,CAAC,GAAI,GAAI,GAAI,KAChF75B,KAAM,CAAE+5B,EAAG,CAAC,IAAK,KAAMG,EAAG,CAAC,IAAK,EAAG,KAAMV,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,IAAK,MAC9Gv5B,IAAK,CAAEy5B,EAAG,CAAC,GAAIG,EAAG,CAAC,EAAG,EAAG,GAAIV,EAAG,CAAC,EAAG,EAAG,GAAI,IAAKI,EAAG,CAAC,GAAI,GAAI,GAAI,IAAKC,EAAG,CAAC,GAAI,GAAI,GAAI,KACrFx5B,KAAM,CAAE05B,EAAG,CAAC,IAAK,KAAMG,EAAG,CAAC,EAAG,IAAK,KAAMV,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,IAAK,MAC9Gt5B,OAAQ,CAAEw5B,EAAG,CAAC,EAAG,GAAIG,EAAG,CAAC,EAAG,EAAG,GAAIV,EAAG,CAAC,GAAI,GAAI,GAAI,IAAKI,EAAG,CAAC,GAAI,GAAI,GAAI,IAAKC,EAAG,CAAC,GAAI,GAAI,GAAI,KAC7F16B,UAAW,CAAE46B,EAAG,CAAC,IAAK,KAAMG,EAAG,CAAC,IAAK,IAAK,KAAMV,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,IAAK,MACrH56B,UAAW,CAAE86B,EAAG,CAAC,GAAK,GAAIG,EAAG,CAAC,IAAK,IAAK,KAAMV,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,IAAK,MACnH36B,SAAU,CAAE66B,EAAG,CAAC,IAAK,KAAMG,EAAG,CAAC,IAAK,IAAK,KAAMV,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,EAAG,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,EAAG,OAE5GO,EAAyBtmC,OAAOC,YAAYD,OAAOE,QAAQmmC,GAAsBnjC,KAAI,mCAAEvC,EAAF,KAAOwe,EAAP,WACzF,CAACxe,EAAK,CACJ+6B,IAAK17B,OAAOC,YAAYD,OAAOO,KAAK4e,GAAKjc,KAAI,SAAAvC,GAAG,MAAI,CAACA,EAAKy7B,YAAkBjd,EAAIxe,SAChF86B,IAAKz7B,OAAOC,YAAYD,OAAOO,KAAK4e,GAAKjc,KAAI,SAAAvC,GAAG,MAAI,CAACA,EAAKwe,EAAIxe,GAAK,cAGjE4lC,EAAoB,CACxB3B,OAAQ,CAAEvmC,KAAM,iBAAkBwB,MAAO,CAAC,OAC1CilC,MAAO,CAAEzmC,KAAM,iBAAkBwB,MAAO,CAAC,QACzCmlC,MAAO,CAAE3mC,KAAM,eAAgBwB,MAAO,CAAC,MAAO,OAAQ,OAAQ,SAAU,cACxEqlC,OAAQ,CAAE7mC,KAAM,qBAAsBwB,MAAO,CAAC,MAAO,OAAQ,OAAQ,SAAU,gBAAiB,aAAc,WAAY,eAAgB,aAAc,YAAa,cACrKulC,QAAS,CAAE/mC,KAAM,mBAAoBwB,MAAO,CAAC,MAAO,OAAQ,OAAQ,SAAU,YAAa,WAAY,W,gBCrHpF2mC,EAEnB,aAAgB,GAAD,oBAAKjpC,gBAAgBipC,EAAc,MAAMhpC,MAAM,2CAF3CgpC,EAKZ1X,WAAa,SAAC+Q,GACnB,IAAI/Q,EAAa,GAMjB,OALA9uB,OAAOE,QAAQ2/B,GAAWp1B,SAAQ,YAAiB,IAAD,mBAAd9J,EAAc,KAAT8c,EAAS,KAC3CA,IACDqR,EAAWrR,EAAIqB,QAASgQ,EAAWrR,EAAIqB,QAAQyC,KAAK5gB,GACnDmuB,EAAWrR,EAAIqB,QAAU,CAACne,OAE1BmuB,G,mBCAUpQ,E,WAEnB,aAAgB,GAAD,oBAAKnhB,gBAAgBmhB,EAAU,MAAMlhB,MAAM,0C,2DAiJ1D,SAA0BgyB,GAAQ,IAAD,IACkBA,EAA3C5Q,gBADyB,MACd,EADc,IACkB4Q,EAA7BxkB,aADW,MACH,EADG,IACkBwkB,EAAlBtQ,gBADA,MACW,GADX,gBAGTA,GAHS,IAG/B,2BAAgC,CAAC,IAAtBwkB,EAAqB,QACxB/iC,EAAe+iC,EAAf/iC,IAAK6C,EAAUkgC,EAAVlgC,MACPijC,EAAU/nB,EAASgoB,gBAAgB/lC,EAAK6C,EAAOob,IAAa,GAChE8kB,EAAQ3d,MAAQ0gB,EAAQ,IAAM,GAC1BA,EAAQxhC,OAAS,IAAGy+B,EAAQ+C,QAAUA,GAC1C/C,EAAQ7c,WAAanI,EAASioB,qBAAqBhmC,EAAK+iC,EAAQ3d,QARnC,oCAUgBrH,EAASkoB,sBAAsB1nB,EAAUN,EAAU5T,GAA5Fqa,EAVyB,EAUzBA,kBAAmBC,EAVM,EAUNA,kBACzBkK,EAAMnK,kBAAoBA,EAC1BmK,EAAMlK,kBAAoBA,EAE1B,IAd+B,EAc3BuhB,EAAU,GAdiB,cAeT3nB,GAfS,IAe/B,kCAAWwkB,EAAX,UACM,UAACA,EAAQ3d,aAAT,aAAC,EAAe9gB,SAAUy+B,EAAQ/iC,KAAO+iC,EAAQlgC,OACnDqjC,EAAQtlB,KAAK,mCAjBc,8BAuB/B,IAHKslB,EAAQ5hC,QAAUia,EAAS4nB,MAAK,SAAApD,GAAO,aAAI,UAAAA,EAAQ3d,aAAR,eAAe9gB,QAAS,MAAMia,EAAS4nB,MAAK,SAACpD,GAAD,cAAa,UAACA,EAAQ3d,aAAT,aAAC,EAAe9gB,YACvH4hC,EAAQtlB,KAAK,wEAEX3C,EAAU,CACZ,IAAImoB,EAAoB7nB,EAASsS,QAAO,SAACwV,EAAKC,GAAN,aAAcD,IAAO,UAAAC,EAAIlhB,aAAJ,eAAW9gB,SAAU,KAAI,GAClFiiC,EAAgBxoB,EAASyoB,qBAAqBvoB,GAAYsJ,KAAKC,MAAMnd,EAAQ,GACjF,GAAI+7B,EAAoBG,EAAe,qBACfhoB,GADe,2BAC1BwkB,EAD0B,QAE/B0D,EAAQ,UAAG1D,EAAQ3d,aAAX,aAAG,EAAe9gB,OAC9B,IAAKmiC,IAAa1D,EAAQ+C,QAAS,iBACnC,IAAIY,EAAY3D,EAAQ+C,QAAQtmC,QAAO,SAAA4lB,GAAK,OAAIA,EAAM9gB,OAASmiC,KAC/D,GAAIC,EAAUpiC,OAAQ,CACpBy+B,EAAQ3d,MAAQshB,EAAU,GAC1BA,EAAUpiC,OAAS,EAAKy+B,EAAQ+C,QAAUY,SAAqB3D,EAAQ+C,QACvE/C,EAAQ7c,WAAanI,EAASioB,qBAAqBjD,EAAQ/iC,IAAK+iC,EAAQ3d,OAHpD,MAI2BrH,EAASkoB,sBAAsB1nB,EAAUN,EAAU5T,GAA5Fqa,EAJc,EAIdA,kBAAmBC,EAJL,EAIKA,kBACzBkK,EAAMnK,kBAAoBA,EAC1BmK,EAAMlK,kBAAoBA,EAG5B,OADAyhB,EAAoB7nB,EAASsS,QAAO,SAACwV,EAAKC,GAAN,aAAcD,IAAO,UAAAC,EAAIlhB,aAAJ,eAAW9gB,SAAU,KAAI,KACzDiiC,EAAe,aAAxC,GAbF,2BAAgC,CAAC,IAAD,qCAaU,OAdL,+BAiBvC,GAAIH,EAAoBG,EACtBL,EAAQtlB,KAAR,wCAA8C2lB,EAA9C,0CAA6FH,EAA7F,gBACG,CACH,IAAIO,EAAiB5oB,EAAS4oB,eAAet8B,EAAO4T,GAChD2oB,EAAoB7oB,EAAS8oB,mBAAmB5oB,GAC/CmoB,EAAoBO,EAAkBC,GACzCV,EAAQtlB,KAAR,2CAAiDwlB,EAAjD,8CAAwGO,EAAxG,uEAAqLC,EAArL,QAGN,OAAOV,I,mCAET,SAA6B3nB,EAAUN,EAAU5T,GAC/C,IAAK4T,EAAU,MAAO,CAAEyG,kBAAmB,EAAGC,kBAAmB,GAEjE,IAAIiiB,EAAoB7oB,EAAS8oB,mBA9MrB,GA+MRF,EAAiB5oB,EAAS4oB,eAAet8B,EAAO4T,GAChD6oB,EAAyBvoB,EAASsS,QAAO,SAACwV,EAAKC,GAAN,aAAcD,IAAU,OAAHC,QAAG,IAAHA,OAAA,EAAAA,EAAKpgB,aAAL,OAAkBogB,QAAlB,IAAkBA,GAAlB,UAAkBA,EAAKlhB,aAAvB,aAAkB,EAAY9gB,SAAU,KAAI,GAC1GipB,EAAWhP,EAAS/e,QAAO,qBAAGQ,OAAeuC,KAAI,qBAAGvC,OACpD+mC,EAAa,IAAMxf,KAAKwT,IAAL,MAAAxT,KAAI,aAA6B,IAApBgG,EAASjpB,OAAeipB,EAAWluB,OAAOO,KAAK+lC,IAAyBpjC,KAC1G,SAAAvC,GAAG,OAAI+d,EAASipB,iBAAiBhnC,EAAKie,GAAYF,EAASipB,iBAAiBhnC,QAI9E,MAAO,CAAE0kB,kBAFegX,YAAaoL,EAAyBF,GAElCjiB,kBADJ+W,aAAcoL,EAAyBH,EAAiBI,GAAcH,M,iCAwChG,SAA2BziB,EAAYrI,GACrC,IAAIgB,EAAMU,IAAiBrU,IAAIgb,GAC/B,GAAKrH,EAAL,CACA,IAAImqB,EAAkBnqB,EAAIC,SACtBmqB,EAAoBprB,GAAgB,GACxC,GAAImrB,IAAoBC,EAAxB,CACA,IAAIrpB,EAAUf,EAAIe,QACdspB,EAAuB9pB,IAAkBO,sBAAsBspB,EAAkBrpB,GACjFupB,EAAqB5pB,IAAiBrU,IAAIg+B,GAG1CC,EAAoB5pB,IAAiB6pB,cAAcvqB,EAAKsqB,GACvD5pB,IAAiBqB,kBAAkB/B,EAAIZ,GAAIgrB,GAG5CA,GACF7pB,IAAkBS,cAAcopB,EAAkBpqB,GAEhDmqB,IACEG,EACF/pB,IAAkBS,cAAcmpB,EAAiBG,GAEjD/pB,IAAkBwmB,sBAAsBoD,EAAiBppB,U,KAlR5CE,EAKZka,cAAgB,kBAAM2M,GALV7mB,EAMZupB,WAAa,kBAAMjoC,OAAOO,KAAK+kC,GAAgB,KANnC5mB,EAOZgI,WAAa,SAAC/lB,GAAD,MAAM9C,EAAN,uDAAe,GAAf,OAAkC,OAAZynC,QAAY,IAAZA,GAAA,UAAAA,EAAe3kC,UAAf,eAAqBtC,OAAQR,GAPpD6gB,EAQZwpB,wBAA0B,SAACxV,GAAD,OAC/B1yB,OAAOE,QAAQolC,GAAgB,IAAInlC,QAAO,gBAAIgoC,EAAJ,2BAAgBA,EAAO5pC,OAAQ4pC,EAAO5pC,OAAO0G,OAAU,KAAOytB,MATvFhU,EAUZ0pB,UAAY,SAACtpB,GAAD,MAASjhB,EAAT,uDAAkB,GAAlB,OAAqC,OAAZynC,QAAY,IAAZA,GAAA,UAAAA,EAAexmB,UAAf,eAAwBupB,SAAUxqC,GAV3D6gB,EAWZ6H,aAAe,SAACzH,EAAQN,GAAT,IAAkB3gB,EAAlB,uDAA2B,GAA3B,OAXH6gB,EAW0C0pB,UAAUtpB,GAAQN,IAAY3gB,GAXxE6gB,EAYZ2H,aAAe,SAACvH,EAAQN,GAAT,QAAkB3gB,EAAlB,uDAA2B,KAA3B,OAAgD,OAAZynC,QAAY,IAAZA,GAAA,UAAAA,EAAexmB,UAAf,mBAAwBwpB,aAAxB,eAAgC9pB,KAAY3gB,GAZnF6gB,EAeZ6pB,iBAAmB,SAACzpB,GAAD,MAASjhB,EAAT,uDAAkB,GAAlB,OAAqC,OAAZynC,QAAY,IAAZA,GAAA,UAAAA,EAAexmB,UAAf,eAAwB0pB,aAAc3qC,GAftE6gB,EAgBZwQ,uBAAyB,SAACpQ,EAAQkQ,GAAT,QAAoBnxB,EAApB,uDAA6B,GAA7B,OAC9Bi7B,aAAU,UAjBOpa,EAiBF6pB,iBAAiBzpB,UAAtB,mBAAgCkQ,UAAhC,eAA4CnvB,QAAShC,IAjB9C6gB,EAkBZ+kB,2BAA6B,SAAC3U,GACnC,IAAI2Z,EAAoB,GAMxB,OALAzoC,OAAOE,QAAQ4uB,GAAYrkB,SAAQ,mCAAEqU,EAAF,KAAU4pB,EAAV,YACjC1oC,OAAOE,QAAQwe,EAAS6pB,iBAAiBzpB,IAASrU,SAAQ,mCAAEukB,EAAF,KAAaxrB,EAAb,YACxDc,SAAS0qB,IAAc0Z,EAAOzjC,QAAUzB,EAAM3D,OAASG,OAAOO,KAAKiD,EAAM3D,OAAOoF,QAChFjF,OAAOE,QAAQsD,EAAM3D,OAAO4K,SAAQ,mCAAE9J,EAAF,KAAO60B,EAAP,YAClCiT,EAAkBlnB,KAAK,CAAE5gB,MAAK60B,qBAC7BiT,GAzBU/pB,EA2BZmQ,cAAgB,SAACC,GACtB,IAAI2Z,EAAoB,GAMxB,OALAzoC,OAAOE,QAAQ4uB,GAAYrkB,SAAQ,YAAuB,IAAD,mBAApBqU,EAAoB,KAAZ4pB,EAAY,KACnDC,EAAa3oC,OAAOO,KA9BTme,EA8BmB6pB,iBAAiBzpB,IAAS3e,QAAO,SAAA6uB,GAAS,OAAI1qB,SAAS0qB,IAAc0Z,EAAOzjC,UAC1G0jC,EAAW1jC,SACbwjC,EAAkB3pB,GAAU6pB,MAEzBF,GAlCU/pB,EAqCZgR,iBAAmB,SAAC5Q,EAAQkQ,EAAWpwB,GAAiC,IAAD,IAAhBf,EAAgB,uDAAP,GACjE+qC,EAAa,UAtCAlqB,EAsCQ6pB,iBAAiBzpB,UAAzB,iBAAG,EAAgCkQ,UAAnC,aAAG,EAA4CjpB,KAChE,OAAK6iC,EACwB,oBAAlBA,EACFA,EAAchqC,GACdgqC,GAEF/qC,EALoBA,GAvCV6gB,EA8CZyQ,wBAA0B,SAACrQ,EAAQkQ,GAAT,QAAoBnxB,EAApB,uDAA6B,KAA7B,OAC/B,UA/CiB6gB,EA+CZ6pB,iBAAiBzpB,UAAtB,mBAAgCkQ,UAAhC,eAA4C9vB,cAAerB,GA/C1C6gB,EAkDZiR,YAAc,kBAAM3vB,OAAOO,KAAKgmC,GAAqB,KAlDzC7nB,EAmDZmqB,YAAc,SAACrqB,GAAD,MAAU3gB,EAAV,uDAAmB,GAAnB,OAA2C,OAAjB0oC,QAAiB,IAAjBA,GAAA,UAAAA,EAAoB/nB,UAApB,eAA8BngB,OAAQR,GAnDlE6gB,EAoDZoqB,YAAc,SAACtqB,GAAD,IAAU3gB,EAAV,uDAAmB,GAAnB,OAClB2gB,GAAWmmB,EAASnmB,GAAY,cAAC,IAAD,CAAiB7b,KAAMgiC,EAASnmB,GAAwBxb,UAAU,SAAnBwb,GAAgC3gB,GArD/F6gB,EAsDZqqB,oBAAsB,SAACvqB,GAAD,MAAU3gB,EAAV,uDAAmB,GAAnB,OAA2C,OAAjB0oC,QAAiB,IAAjBA,GAAA,UAAAA,EAAoB/nB,UAApB,eAA8B3e,QAAShC,GAtD3E6gB,EAwDZ8H,oBAAsB,SAAChI,GAA0B,IAAjB3gB,EAAgB,uDAAP,GAC9C,IAAK2gB,EAAS,OAAO3gB,EACrB,IAAIQ,EA1DaqgB,EA0DDmqB,YAAYrqB,GAC5B,IAAKngB,EAAM,OAAOR,EAClB,IAAImrC,EA5DatqB,EA4DGoqB,YAAYtqB,GAChC,OAAKwqB,EACG,iCAAOA,EAAP,IAAkB3qC,KADJR,GA7DL6gB,EAgEZuqB,qBAAuB,SAACC,GAAD,OAC5BlpC,OAAOC,YAjEUye,EAiEOiR,cAAczsB,KAAI,SAAAsb,GAAO,MAC/C,CAACA,EAASxe,OAAOud,OAAO2rB,GAAa/oC,QAAO,SAAAsd,GAAG,OAAIA,EAAIe,UAAYA,WAlEpDE,EAqEZyqB,SAAW,kBAAMnpC,OAAOO,KAAKklC,GAAqB,IAAIviC,KAAI,SAAA8gC,GAAC,OAAI1/B,SAAS0/B,OArE5DtlB,EAsEZ0qB,aAAe,SAACtqB,GAAD,MAASjhB,EAAT,uDAAkB,GAAlB,OAAqC,OAAZynC,QAAY,IAAZA,GAAA,UAAAA,EAAexmB,UAAf,eAAwBvgB,SAAUV,GAtE9D6gB,EAyEZ2qB,gBAAkB,kBAAMvQ,YAAU0M,IAzEtB9mB,EA0EZ4qB,kBAAoB,SAACC,EAASt8B,GAAV,MAAmBpP,EAAnB,uDAA4B,GAA5B,OACJ,OAArBmoC,QAAqB,IAArBA,GAAA,UAAAA,EAAwBuD,UAAxB,eAAmCt8B,KAAYpP,GA3E9B6gB,EA6EZgH,iBAAmB,SAAC/kB,EAAKie,EAAU5T,GAAuB,IAAhBnN,EAAe,uDAAN,EACpD0B,EA9Eamf,EA8ED4qB,kBAAkB1qB,EAAUje,GAAKqK,GACjD,OAAIzL,KACC,OAAIoB,QAAJ,IAAIA,OAAJ,EAAIA,EAAK0gB,SAAS,UAhFN3C,EAiFHgH,iBAAiB,WAAY9G,EAAU5T,EAAOnN,GACrDA,IAlFU6gB,EAsFZyoB,qBAAuB,SAACvoB,GAAD,MAAW/gB,EAAX,uDAAoB,EAApB,OAA2C,OAAjB4nC,QAAiB,IAAjBA,GAAA,UAAAA,EAAoB7mB,UAApB,eAA+B+mB,cAAe9nC,GAtFnF6gB,EAuFZ8qB,sBAAwB,SAAC5qB,GAAD,MAAW/gB,EAAX,uDAAoB,EAApB,OAA2C,OAAjB4nC,QAAiB,IAAjBA,GAAA,UAAAA,EAAoB7mB,UAApB,eAA+BgnB,cAAe/nC,GAvFpF6gB,EAwFZ+qB,wBAA0B,SAAC7qB,GAAD,MAAW/gB,EAAX,uDAAoB,EAApB,OAA2C,OAAjB4nC,QAAiB,IAAjBA,GAAA,UAAAA,EAAoB7mB,UAApB,eAA+BinB,uBAAwBhoC,GAxF/F6gB,EAyFZipB,iBAAmB,SAAC16B,GAAD,QAAU2R,EAAV,uDA3FZ,EA2F0C/gB,EAA9B,uDAAuC,EAAvC,wBAA6CyoC,QAA7C,IAA6CA,GAA7C,UAA6CA,EAAyBr5B,UAAtE,aAA6C,EAAmCyuB,IAAI9c,UAApF,QAAiG/gB,GAzFxG6gB,EA0FZgrB,eAAiB,kBAAM1pC,OAAOO,KAAK8lC,GAAwB,KA1F/C3nB,EA2FZirB,mBAAqB,SAAChpC,EAAKipC,EAAQC,GACxC,MAA8B,MAA1BpmB,IAAKkC,YAAYhlB,GACZo7B,YAAiB6N,EAAQC,GAEzB5N,YAAe2N,EAAQC,IA/FfnrB,EAiGZ8oB,mBAAqB,SAAC5oB,GAAD,OAAc6mB,EAAkB7mB,GACzD6mB,EAAkB7mB,GAAUgnB,YAAcH,EAAkB7mB,GAAUinB,qBAAwB,GAlG9EnnB,EAmGZ4oB,eAAiB,SAACt8B,EAAO4T,GAAR,OACtBsJ,KAAKyT,MAAiB,EAAX/c,EAAe5T,GAAS,IApGlB0T,EAqGZorB,wBAA0B,SAACta,GAAD,OAC/BA,EAAMtQ,SAASsS,QAAO,SAACwV,EAAKC,GAAN,OACpBD,GAAOC,GAAOA,EAAIzjC,MAAQ,EAAI,KAAI,IAvGnBkb,EAwGZqrB,mBAAqB,SAACpqC,EAAYif,GAAb,gCAA0BynB,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAuB1mC,UAAjD,aAA0B,EAAqCif,UAA/D,QAA4E,IAxGrFF,EAyGZgoB,gBAAkB,SAAC/mC,EAAYqqC,EAAcprB,GAA2B,IAAjB/gB,EAAgB,uDAAP,GACrE,IAAK+gB,IAAajf,GAAsC,kBAAjBqqC,IAA8BA,EAAc,OAAOnsC,EAC1F,IAAIosC,EA3GavrB,EA2GGqrB,mBAAmBpqC,EAAYif,GACnD,IAAKqrB,EAAShlC,OAAQ,OAAOpH,EAC7B,GAAIosC,EAAS5oB,SAAS2oB,GAAe,MAAO,CAAC,CAACA,IAC9C,GAAIA,EAAgBC,EAASA,EAAShlC,OAAS,IA9G9ByZ,EA8GyC+qB,wBAAwB7qB,GAAY,GAC5F,OAAO/gB,EACT,IAAIqsC,EAA2C,MAAjCzmB,IAAKkC,YAAYhmB,GAE3BomB,EAAQ,GACRokB,EAAajiB,KAAKkiB,MAAMJ,EAAeC,EAAS,IACpD,IAAKE,EAAY,OAAOtsC,EACxB,IAAMwsC,EAAa,SAAbA,EAAc5oB,EAAKkR,GACvB,GAAIA,EAAI1tB,OAAQ,CACd,GAAI0tB,EAAI1tB,OAASklC,EAAY,OAC7B,IAAInD,EAAMrU,EAAInB,QAAO,SAACC,EAAM9qB,GAAP,OAAa8qB,EAAO9qB,IAAG,GAC5C,GAAIujC,EAAS,CACX,GAAIlD,EAAMvlB,GAAO,KAAO,OACxB,GAAIsa,YAAiBiL,EAAKvlB,GACxB,OAAOsE,EAAMxE,KAAKoR,OACf,CACL,GAAIqU,EAAMvlB,EAAM,EAAG,OACnB,GAAIwa,YAAe+K,EAAKvlB,GACtB,OAAOsE,EAAMxE,KAAKoR,IAGxBsX,EAASvN,QAAQjK,UAAUhoB,SAAQ,SAAA6/B,KAC5B3X,EAAI1tB,QAAU0tB,EAAIA,EAAI1tB,OAAS,IAAMqlC,IACxCD,EAAWL,EAAD,sBAAmBrX,GAAnB,CAAwB2X,SAIxC,OADAD,EAAWL,EAAc,IAClBjkB,GAzIUrH,EA2IZioB,qBAAuB,SAAChnC,GAA4B,IAAhBomB,EAAe,uDAAP,GAC7CwkB,EAAMxkB,EAAM9gB,OACZ+hC,EAAMjhB,EAAMyL,QAAO,SAACpR,EAAGoqB,GAAJ,OAAUpqB,EAAIoqB,IAAG,GACpC9O,EA9Iahd,EA8IFipB,iBAAiBhoC,GAAc4qC,EAC9C,OAAO7O,EAAMW,YAAc2K,EAAMtL,EAAO,KAAO,GA/I9Bhd,EAwNZoQ,WAAa0X,EAAa1X,WAxNdpQ,EA0NZ2Q,oBAAsB,SAACvQ,EAAQkQ,EAAWjuB,GAAiC,IAAjBlD,EAAgB,uDAAP,GACxE,IAAKkD,EAAgB,OAAOlD,EAC5B,IAAIqB,EA5Nawf,EA4NMyQ,wBAAwBrQ,EAAQkQ,GACvD,IAAK9vB,EAAa,OAAOrB,EAHsD,MAIzDmD,IAAiBC,mBAAmB/B,EAAa,QAAS6B,GAJD,mBAI1ElB,EAJ0E,KAInEqB,EAJmE,KAK/E,OAAKA,EACElB,OAAOC,YAAYD,OAAOE,QAAQL,GAAOqD,KAAI,yCAAgB,CAAhB,UAA4BhC,OAD5DrD,GA/NH6gB,EAmOZ+rB,4BAA8B,WAAgC,IAA/BhrB,EAA8B,uDAAP,GACvDirB,EAAwB,GAoB5B,OAnBA1qC,OAAOE,QAAQolC,GAAc76B,SAAQ,YAAuB,IAAD,mBAApBqU,EAAoB,KAAZ6rB,EAAY,KACrDC,EAAY,GACZD,EAAOnC,YACTxoC,OAAOE,QAAQyqC,EAAOnC,YAAY/9B,SAAQ,YAAgC,IAAD,mBAA7BukB,EAA6B,KAAlB6b,EAAkB,KACnE7qC,OAAOO,KAAKsqC,EAAahrC,OAAS,IAAIoF,OAAS,IACjD2lC,EAAU5b,GAAa8J,YAAU+R,EAAahrC,WAEhDG,OAAOO,KAAKqqC,GAAW3lC,OAAS,IAClCylC,EAAsB5rB,GAAU8rB,MAEpCnrB,EAAqBhV,SAAQ,YAA6D,IAEjD,IAFDqU,EAAiD,EAAzDa,OAAyBqP,EAAgC,EAAzCpP,QAAoB7e,EAAqB,EAArBA,eAC9D+pC,EAhPWpsB,EAgPM2Q,oBAAoBvQ,EAAQkQ,EAAWjuB,GACxDf,OAAOO,KAAKuqC,GAAW7lC,OAAS,IAClC,UAAAylC,EAAsB5rB,UAAtB,QAAkC4rB,EAAsB5rB,GAAU,IAClE,UAAA4rB,EAAsB5rB,GAAQkQ,UAA9B,QAA6C0b,EAAsB5rB,GAAQkQ,GAAa,IACxFhvB,OAAOE,QAAQ4qC,GAAWrgC,SAAQ,mCAAEwC,EAAF,KAAWzJ,EAAX,YAChCknC,EAAsB5rB,GAAQkQ,GAAW/hB,IAAYy9B,EAAsB5rB,GAAQkQ,GAAW/hB,IAAY,GAAKzJ,SAG9GknC,I,gCCpQX,+CACe,SAASK,EAA2B/M,EAAGgN,GACpD,IAAIC,EAEJ,GAAsB,qBAAX5K,QAAgD,MAAtBrC,EAAEqC,OAAOC,UAAmB,CAC/D,GAAIr9B,MAAMyC,QAAQs4B,KAAOiN,EAAK,YAA2BjN,KAAOgN,GAAkBhN,GAAyB,kBAAbA,EAAE/4B,OAAqB,CAC/GgmC,IAAIjN,EAAIiN,GACZ,IAAI7nC,EAAI,EAEJ8nC,EAAI,aAER,MAAO,CACLlH,EAAGkH,EACHjQ,EAAG,WACD,OAAI73B,GAAK46B,EAAE/4B,OAAe,CACxBkmC,MAAM,GAED,CACLA,MAAM,EACN3nC,MAAOw6B,EAAE56B,OAGbe,EAAG,SAAWinC,GACZ,MAAMA,GAER/N,EAAG6N,GAIP,MAAM,IAAIzK,UAAU,yIAGtB,IAEI4K,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLvH,EAAG,WACDiH,EAAKjN,EAAEqC,OAAOC,aAEhBrF,EAAG,WACD,IAAIuQ,EAAOP,EAAGQ,OAEd,OADAH,EAAmBE,EAAKL,KACjBK,GAETrnC,EAAG,SAAWunC,GACZH,GAAS,EACTF,EAAMK,GAERrO,EAAG,WACD,IACOiO,GAAoC,MAAhBL,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIM,EAAQ,MAAMF,O,uGClDLrqC,E,WACnB,aAAgB,GAAD,oBAAKzD,gBAAgByD,EAAkB,MAAMxD,MAAM,0C,0DAClE,SAAyBmuC,EAAcC,GAAY,IAAD,EAC1CjsB,EAAoBisB,EAApBjsB,OAAQC,EAAYgsB,EAAZhsB,QACd,GAAI+rB,EACF,OAAO,UAAAA,EAAa7K,MAAK,SAAAphB,GAAI,OAAIA,EAAKC,SAAWA,KAAYC,GAAYA,GAAWF,EAAKE,UAAYA,aAA9F,eAA0G7e,iBAAkB,I,4BAEvI,SAAsB4qC,EAAcC,EAAW7qC,GAAiB,IACxD4e,EAAoBisB,EAApBjsB,OAAQC,EAAYgsB,EAAZhsB,QACT+rB,IAAcA,EAAe,IAClC,IAAIjrB,EAAQirB,EAAaE,WAAU,SAAAnsB,GAAI,OAAIA,EAAKC,SAAWA,KAAYC,GAAYA,GAAWF,EAAKE,UAAYA,MAC/G,IAAK7e,GAAkB2f,GAAS,EAE9BirB,EAAaG,OAAOprB,EAAO,OACtB,KAAK3f,GAAkB2f,EAAQ,EACpC,OAAOirB,EAEP,IAAII,EAAU,CAAEpsB,SAAQ5e,kBACpB6e,IAASmsB,EAAQnsB,QAAUA,GAC3Bc,GAAS,EACXirB,EAAajrB,GAASqrB,EAEtBJ,EAAapqB,KAAKwqB,GAEtB,OAAOJ,I,gCAET,SAA0BzsC,EAAa8sC,EAAWjrC,GAAmC,IAAnBlD,EAAkB,uDAAT,CAAC,GAAI,GAC9E,GAAIoF,MAAMyC,QAAQxG,GAAc,CAE9B,IAF8B,EAE1ByG,EAAyB5E,EACzB6E,EAAsB,KAHI,cAID1G,GAJC,IAI9B,2BAA0C,CAAC,IAAhC2G,EAA+B,QACxC,KAAIF,EAAyBE,EAAeC,UACvC,CACHF,EAAsBC,EACtB,MAHoDF,GAA0BE,EAAeC,UALnE,8BAW9B,IAAKF,EAAqB,OAAO/H,EACjC,IAAIqD,EAASqvB,YAAM5qB,EAAwB,EAAGC,EAAoBE,UAClE,MAAO,CAACF,EAAoBomC,GAAY9qC,GAGxC,IAAIA,EAASqvB,YAAMxvB,EAAgB,EAAG7B,EAAY4G,UAClD,MAAO,CAAC5G,EAAY8sC,GAAY9qC,O,sCCpCvB2H,IAVO,CACpBojC,SAAU,CAAE5tC,KAAM,YAClBiD,MAAO,CAAEjD,KAAM,SACfqD,IAAK,CAAErD,KAAM,OACboD,QAAS,CAAEpD,KAAM,WACjBsD,MAAO,CAAEtD,KAAM,SACfuD,KAAM,CAAEvD,KAAM,QACdkD,KAAM,CAAElD,KAAM,U,sFCNZ6lC,GAAY,EACZgI,EAAmB,GACnBC,EAAa,EACIhuB,EAEnB,aACE,GADa,oBACT5gB,gBAAgB4gB,EAClB,MAAM3gB,MAAM,2CAJG2gB,EAOZimB,UAAY,SAAC3mB,GAAD,OAChBA,IAAQA,EAAIqB,SAAWrB,EAAImB,WAAanB,EAAIe,UAAYf,EAAIsB,aAR5CZ,EASZC,oBAAsB,kBAAM0a,YAAUoT,IAT1B/tB,EAUZiuB,kBAAoB,kBAAMpsC,OAAOO,KAAK2rC,IAV1B/tB,EAWZF,iCAAmC,WACxC,OAAIimB,IACJlkC,OAAOO,KAAK+b,cAAcnc,QAAO,SAAAQ,GAAG,OAAIA,EAAI0gB,SAAS,gBAAc5W,SAAQ,SAAAoS,GACzE,IAAKqvB,EAAiBrvB,GAAK,CACzB,IAAIY,EAAMjB,YAAqBK,GAC/B,IAAKY,EAAK,OACV,GAjBaU,EAiBJimB,UAAU3mB,GAEjB,YAnBWU,EAkBNkuB,mBAAmBxvB,GAG1BqvB,EAAiBrvB,GAAMY,MAG3BymB,GAAY,GACL,IAzBU/lB,EA2BZrU,IAAM,SAAC+S,GAAD,uBAAQqvB,EAAiBrvB,UAAzB,QAAgC,MA3B1BsB,EA4BZmuB,eAAiB,SAAC7uB,GA5BNU,EA6BZkuB,mBAAmB5uB,EAAIZ,KA7BXsB,EA+BZiB,eAAiB,SAAC3B,GACvB,IAhCiBU,EAgCRimB,UAAU3mB,GAAnB,CACA,IAAIZ,EAAKY,EAAIZ,GACb,IAAKA,EAAI,CACP,GACEA,EAAE,mBAAesvB,WACmB,OAA7B7vB,aAAaM,QAAQC,IAC9BY,EAAIZ,GAAKA,EAEX,IAAI0vB,EAAOzT,YAAUrb,GACrBH,YAAmBT,EAAI0vB,GACvBL,EAAiBrvB,GAAM0vB,IA1CNpuB,EA4CZkuB,mBAAqB,SAACG,UACpBN,EAAiBM,GACxBlwB,aAAaqB,WAAW6uB,IA9CPruB,EAiDZqB,kBAAoB,SAAChC,EAAOE,GACjC,GAAKF,EAAL,CACA,IAAIC,EAnDaU,EAmDFrU,IAAI0T,GACdC,GAAOA,EAAIC,WAAaA,IAC7BD,EAAIC,SAAWA,EArDES,EAsDZiB,eAAe3B,MAtDHU,EAwDZ6pB,cAAgB,SAACyE,EAAMC,GAC5B,IAAIC,EAAOF,EAAK/uB,SACZkvB,EAAOF,EAAKhvB,SA1DCS,EA2DZqB,kBAAkBitB,EAAK5vB,GAAI+vB,GA3DfzuB,EA4DZqB,kBAAkBktB,EAAK7vB,GAAI8vB,IA5DfxuB,EA8DZ0uB,kBAAoB,SAACC,EAAQC,GAAT,OA9DR5uB,EA+DZ6pB,cA/DY7pB,EA+DOrU,IAAIgjC,GA/DX3uB,EA+DyBrU,IAAIijC,KA/D7B5uB,EAiEZumB,cAAgB,WACrBwH,EAAmB,GACnBhI,GAAY,EACZiI,EAAa,I,6MCrEX5hC,EAAW,CACfkrB,KAAM,CAAEp3B,KAAM,GAAIuG,QAAS,GAG3B6G,YAAa,CAAEpN,KAAM,KAAM++B,OAAQ,oBAAqB4P,OAAO,GAC/D5gC,aAAc,CAAE/N,KAAM,MAAO++B,OAAQ,qBAAsB4P,OAAO,GAClEhhC,aAAc,CAAE3N,KAAM,MAAO++B,OAAQ,qBAAsB4P,OAAO,GAClEhN,aAAc,CAAE3hC,KAAM,wBAAyBuG,QAAS,QAASooC,OAAO,GACxEC,eAAgB,CAAE5uC,KAAM,kBAAmBuG,QAAS,EAAGooC,OAAO,GAG9DE,UAAW,CAAE7uC,KAAM,aAAc++B,OAAQ,aAAc4P,OAAO,GAG9DlhC,QAAS,CAAEzN,KAAM,MAAO++B,OAAQ,WAAY4P,OAAO,GAGnDnhC,GAAI,CAAExN,KAAM,KAAM++B,OAAQ,WAC1BxxB,IAAK,CAAEvN,KAAM,KAAM0qB,KAAM,IAAKqU,OAAQ,YACtCjxB,IAAK,CAAE9N,KAAM,MAAO++B,OAAQ,YAC5BlxB,KAAM,CAAE7N,KAAM,MAAO0qB,KAAM,IAAKqU,OAAQ,aACxC5wB,IAAK,CAAEnO,KAAM,MAAO++B,OAAQ,YAC5B7wB,KAAM,CAAElO,KAAM,MAAO0qB,KAAM,IAAKqU,OAAQ,aACxC+P,KAAM,CAAE9uC,KAAM,gBAAiB0qB,KAAM,KAGrCpd,QAAS,CAAEtN,KAAM,KAAM++B,OAAQ,MAC/BnxB,SAAU,CAAE5N,KAAM,MAAO++B,OAAQ,OACjC9wB,SAAU,CAAEjO,KAAM,MAAO++B,OAAQ,OAEjC3wB,OAAQ,CAAEpO,KAAM,qBAChBgN,UAAW,CAAEhN,KAAM,kBAAmB0qB,KAAM,KAC5C5d,UAAW,CAAE9M,KAAM,YAAa0qB,KAAM,KAEtC3d,SAAU,CAAE/M,KAAM,WAAY0qB,KAAM,KACpCqkB,aAAc,CAAE/uC,KAAM,eAAgB0qB,KAAM,KAG5Cjc,MAAO,CAAEzO,KAAM,gBAAiB0qB,KAAM,KACtCskB,SAAU,CAAEhvC,KAAM,yBAA0B0qB,KAAM,KAClDukB,WAAY,CAAEjvC,KAAM,kBAAmB0qB,KAAM,KAC7CwkB,OAAQ,CAAElvC,KAAM,UAAW0qB,KAAM,KACjCykB,YAAa,CAAEnvC,KAAM,qBAAsB0qB,KAAM,KACjD0kB,YAAa,CAAEpvC,KAAM,qBAAsB0qB,KAAM,KACjD2kB,SAAU,CAAErvC,KAAM,eAAgB0qB,KAAM,KACxC4kB,QAAS,CAAEtvC,KAAM,UAAW0qB,KAAM,KAClCzd,QAAS,CAAEjN,KAAM,WACjBuvC,YAAa,CAAEvvC,KAAM,2BAA4B0qB,KAAM,KACvD8kB,mBAAoB,CAAExvC,KAAM,mCAAoC0qB,KAAM,KACtE+kB,mBAAoB,CAAEzvC,KAAM,0CAA2C0qB,KAAM,KAE7EqV,WAAY,CAAE//B,KAAM,kBAAmB0qB,KAAM,SAG7C0V,mBAAoB,CAAEpgC,KAAM,mCAAoC0qB,KAAM,KACtE8V,oBAAqB,CAAExgC,KAAM,oCAAqC0qB,KAAM,KACxE+V,mBAAoB,CAAEzgC,KAAM,uCAAwC0qB,KAAM,IAAK7iB,QAAS,cACxF64B,iBAAkB,CAAE1gC,KAAM,wBAAyB0qB,KAAM,QAASikB,OAAO,EAAM9mC,QAAS,cACxF6nC,gBAAiB,CAAE1vC,KAAM,mBAAoB0qB,KAAM,IAAK7iB,QAAS,cACjEgvB,eAAgB,CAAE72B,KAAM,uBAAwB6H,QAAS,cACzD8nC,aAAc,CAAE3vC,KAAM,oBAAqB6H,QAAS,WAGpD+nC,WAAY,CAAE5vC,KAAM,cAAe2uC,OAAO,GAC1C3O,iBAAkB,CAAEhgC,KAAM,6BAA8B0qB,KAAM,QAASikB,OAAO,GAC9EkB,aAAc,CAAE7vC,KAAM,sBAAuB0qB,KAAM,IAAKikB,OAAO,IAE3D5iC,EAAW,CAEf0B,QAAS,SAACk4B,EAAGwG,GAAJ,OAAUA,EAAEx+B,aAAew+B,EAAE0C,WACtCjhC,SAAU,SAAC+3B,EAAGwG,GAAJ,OAAUA,EAAE1+B,SAAW,EAAIk4B,EAAE93B,KAAO,KAAO83B,EAAE73B,KACvDR,QAAS,SAACq4B,EAAGwG,GAAJ,OAAUA,EAAE/+B,aAAe,EAAIu4B,EAAEp4B,IAAM,KAAOo4B,EAAEn4B,IACzDS,SAAU,SAAC03B,EAAGwG,GAAJ,OAAUA,EAAEp+B,cAAgB,EAAI43B,EAAEz3B,KAAO,KAAOy3B,EAAEx3B,KAE5D6xB,iBAAkB,SAAC2F,EAAGwG,GAAJ,OAAW,IAAMA,EAAEyC,iBAAoB,IAAMzC,EAAEyC,gBAAmB,IAAMzC,EAAEyD,aAAe,EAAIzD,EAAE0D,aAAe,OAEhI9P,WAAY,SAAC4F,GAAD,OAAQ,EAAIA,EAAEl3B,MAAQ,IAAMk3B,EAAEqJ,SAAW,KAGrD5O,mBAAoB,SAACuF,GAAD,OAAO,KAAO,EAAIA,EAAEv3B,QAAU,KAAOu3B,EAAEv3B,SAC3DoyB,oBAAqB,SAACmF,GAAD,OAAO,IAAO,EAAIA,EAAEv3B,QAAU,KAAOu3B,EAAEv3B,SAE5DqyB,mBAAoB,SAACkF,GAAD,OAAO,IAAO,EAAIA,EAAEv3B,QAAU,KAAOu3B,EAAEv3B,SAC3DsyB,iBAAkB,SAACiF,EAAGwG,GAAJ,OAAUjhC,IAAc,WAAeioB,QAAO,SAACC,EAAMhQ,EAAKre,GAAZ,OAAkBquB,EAAOhQ,EAAMyG,KAAKimB,IAAI3D,EAAEyC,eAAgB7pC,KAAI,IAC9H8xB,eAAgB,SAAC8O,EAAGwG,GAAJ,OAAW,IAAMxG,EAAE+J,gBAAkB/J,EAAElF,oBAAsB,IAAM0L,EAAEzL,mBAGjF3d,EAAwB,CAC5B6qB,SAAU,GACV3qC,MAAO,CAAC,aACRI,IAAK,CAAC,iBAAkB,iBACxBD,QAAS,CAAC,iBAAkB,qBAAsB,oBAClDE,MAAO,CAAC,qBAAsB,iBAC9BC,KAAM,CAAC,kBACPL,KAAM,CAAC,gBAAiB,oBACxBC,OAAQ,IAyFV,SAASmiC,EAAmByK,EAAgBvuC,GAAuB,IAAhBwuC,EAAe,0DACrCxuC,EAAnByK,iBADwD,MAC5C,GAD4C,EAC9B+4B,EAAe,GAAIiL,EAAY,GAC3DC,EAAcH,EAAelrC,KAAI,SAAAvC,GAAQ,IAAD,cAYxC6tC,EAXEjd,EAAQ,UAAGjnB,EAAU3J,UAAb,QAAqB,GAC7B8tC,EAAgBzuC,OAAOE,QAAQqxB,GAAUpxB,QAAO,kBAAEyK,EAAF,qCAASL,EAASK,UAAlB,aAAS,EAAaoiC,SACtE0B,EAAkB1uC,OAAOE,QAAQqxB,GAAUpxB,QAAO,kBAAEyK,EAAF,4BAAS,UAAEL,EAASK,UAAX,aAAE,EAAaoiC,UAC1E2B,EAAY,SAAC3K,EAAGwG,GAAJ,OAAUiE,EAAcjd,QAAO,SAACC,EAAD,0BAAQ7mB,EAAR,KAAWqZ,EAAX,YAAkBwN,EAAO+Y,EAAE5/B,GAAKqZ,IAAG,IAC9E2qB,EAAc,SAAC5K,GAAD,OAAO0K,EAAgBld,QAAO,SAACC,EAAD,0BAAQ7mB,EAAR,KAAWqZ,EAAX,YAAkBwN,EAAOuS,EAAEp5B,GAAKqZ,IAAG,IAEjF4qB,EAAgB,EAMpB,OALIJ,EAAcxpC,SAAQ4pC,GAAiB,GACvCH,EAAgBzpC,SAAQ4pC,GAAiB,GACxCzkC,EAASzJ,KAAMkuC,IAAiB,UAAAtkC,EAAS5J,UAAT,eAAeqsC,OAAQ,EAAI,GAGxD6B,GACN,KAAK,EAAGL,EAAMpkC,EAASzJ,GAAM,MAC7B,KAAK,EAAG6tC,EAAM,SAACxK,EAAGwG,GAAJ,OAAUpgC,EAASzJ,GAAKqjC,EAAGwG,GAAKmE,EAAU3K,EAAGwG,IAAI,MAC/D,KAAK,EAAGgE,EAAM,SAACxK,EAAGwG,GAAJ,OAAUpgC,EAASzJ,GAAKqjC,EAAGwG,GAAKoE,EAAY5K,IAAO,MACjE,KAAK,EAAGwK,EAAM,SAACxK,EAAGwG,GAAJ,OAAUpgC,EAASzJ,GAAKqjC,EAAGwG,GAAKmE,EAAU3K,EAAGwG,GAAKoE,EAAY5K,IAAO,MACnF,KAAK,EAAGwK,EAAM,SAACxK,EAAGwG,GAAJ,OAAUA,EAAE7pC,IAAM,MAChC,KAAK,EAAG6tC,EAAM,SAACxK,EAAGwG,GAAJ,OAAUA,EAAE7pC,GAAOguC,EAAU3K,EAAGwG,IAAI,MAClD,KAAK,EAAGgE,EAAM,SAACxK,EAAGwG,GAAJ,OAAUA,EAAE7pC,GAAOiuC,EAAY5K,IAAO,MACpD,KAAK,EAAGwK,EAAM,SAACxK,EAAGwG,GAAJ,OAAUA,EAAE7pC,GAAOguC,EAAU3K,EAAGwG,GAAKoE,EAAY5K,IAAO,MACtE,KAAK,EAAGwK,EAAM,SAACxK,EAAGwG,GAAJ,OAAUxG,EAAErjC,IAAM,MAChC,KAAK,EAAG6tC,EAAM,SAACxK,EAAGwG,GAAJ,OAAUxG,EAAErjC,GAAOguC,EAAU3K,EAAGwG,IAAI,MAClD,KAAK,GAAIgE,EAAM,SAACxK,EAAGwG,GAAJ,OAAUxG,EAAErjC,GAAOiuC,EAAY5K,IAAO,MACrD,QAASwK,EAAM,SAACxK,EAAGwG,GAAJ,OAAUxG,EAAErjC,GAAOguC,EAAU3K,EAAGwG,GAAKoE,EAAY5K,IAElE,IAAMvjB,EAAO+tB,EAOb,OALIH,GAAOS,QAAQC,KAAI,UAAAxkC,EAAS5J,UAAT,eAAeqsC,OAAQ,QAAU,UAAWrsC,EAAK8tC,EAAeC,EAAiB,GAAKtkC,EAASzJ,IAEhHA,KAAOyJ,IACXvK,EAAMc,GAAN,oBAAad,EAAMc,UAAnB,kBAA2B4J,EAAS5J,UAApC,aAA2B,EAAeiE,eAA1C,QAAqD,IAEvD,UAAI2F,EAAS5J,UAAb,aAAI,EAAeqsC,QACjBsB,EAAU3tC,GAAOd,EAAMc,GACvB2tC,EAAU3tC,GAAO8f,EAAK5gB,EAAOyuC,GAC7BzuC,EAAMc,GAAO2tC,EAAU3tC,GACnB+tC,EAAgBzpC,QAClB6pC,QAAQE,MAAR,uBAA8BruC,EAA9B,yCAAkE+tC,EAAlE,oCACK,OAGH/tC,KAAOyJ,IACXi5B,EAAa1iC,GAAOd,EAAMc,IAErB,CAACA,EAAK8f,OACZtgB,QAAO,SAACsgB,GAAD,OAAUA,KAIpB,OAFI4tB,GAAOS,QAAQC,IAAI1L,EAAciL,GAE9B,CACLjL,eACA35B,QAAS,SAAAs6B,GACPuK,EAAY9jC,SAAQ,mCAAE9J,EAAF,KAAO+I,EAAP,YAAoBs6B,EAAErjC,GAAO+I,EAAQs6B,EAAGsK,MAE5DtuC,OAAOw+B,OAAOwF,EAAGsK,KA1IvBtuC,OAAOE,QAAQoI,KAAUmC,SAAQ,YAAuB,IAAD,mBAApB8zB,EAAoB,KAAd0Q,EAAc,KACrD1kC,EAAS,GAAD,OAAIg0B,EAAJ,UAAmB,CAAElgC,KAAK,GAAD,OAAK4wC,EAAL,cAA2BlmB,KAAM,KAClExe,EAAS,GAAD,OAAIg0B,EAAJ,eAAwB,CAAElgC,KAAK,GAAD,OAAK4wC,EAAL,oBAAiClmB,KAAM,KAC7Exe,EAAS,SAAD,OAAUg0B,EAAV,eAA8B,CAAElgC,KAAK,GAAD,OAAK4wC,EAAL,cAA2BlmB,KAAM,KAE7E3e,EAAS,SAAD,OAAUm0B,EAAV,eAA8B,SAACyF,GAAD,OAAOzT,YAAMyT,EAAE74B,UAAY64B,EAAE,GAAD,OAAIzF,EAAJ,eAAuB,EAAG,SAG9Fv+B,OAAOE,QAAQ0I,KAAa6B,SAAQ,YAA+B,IAAD,mBAA5B4oB,EAA4B,KAAf6b,EAAe,KAArB7wC,KACrC8wC,EAAM,CAAEjpC,QAASmtB,GAEvB9oB,EAAS,GAAD,OAAI8oB,EAAJ,UAAR,aAA4Bh1B,KAAK,GAAD,OAAK6wC,EAAL,cAA0BnmB,KAAM,KAAQomB,GACxE5kC,EAAS,GAAD,OAAI8oB,EAAJ,UAAR,aAA4Bh1B,KAAK,GAAD,OAAK6wC,EAAL,YAAwBnmB,KAAM,KAAQomB,GAEtE5kC,EAAS,GAAD,OAAI8oB,EAAJ,eAAR,aAAiCh1B,KAAK,SAAD,OAAW6wC,EAAX,YAA8BnmB,KAAM,IAAKnkB,QAAS,GAAIooC,OAAO,GAASmC,GAC3G5kC,EAAS,GAAD,OAAI8oB,EAAJ,mBAAR,aAAqCh1B,KAAK,SAAD,OAAW6wC,EAAX,aAA+BtqC,SAAS,EAAOooC,OAAO,GAASmC,GAExG5kC,EAAS,GAAD,OAAI8oB,EAAJ,oBAAR,aAAsCh1B,KAAK,SAAD,OAAW6wC,EAAX,mBAAqCnmB,KAAM,QAASikB,OAAO,GAASmC,GAC9G5kC,EAAS,GAAD,OAAI8oB,EAAJ,iBAAR,aAAmCh1B,KAAK,GAAD,OAAK6wC,EAAL,gCAA4CnmB,KAAM,SAAYomB,GAErGnvC,OAAOE,QAAQgI,KAAUuC,SAAQ,YAAuB,IAAD,mBAApBzG,EAAoB,KAAdorC,EAAc,KACrD7kC,EAAS,GAAD,OAAI8oB,EAAJ,sBAAqBrvB,IAA7B,aAAyC3F,KAAK,GAAD,OAAK6wC,EAAL,mBAAuBE,IAAeD,GACnF5kC,EAAS,GAAD,OAAI8oB,EAAJ,sBAAqBrvB,EAArB,WAAqC,CAAE3F,KAAK,GAAD,OAAK6wC,EAAL,mBAAuBE,EAAvB,eAA8CrmB,KAAM,SAEvG3e,EAAS,GAAD,OAAIipB,EAAJ,sBAAqBrvB,IAAU,SAACggC,GAAD,OAAOA,EAAE/3B,SAAW+3B,EAAE,GAAD,OAAI3Q,EAAJ,sBAAqBrvB,EAArB,eAG9DoG,EAAS,GAAD,OAAIipB,EAAJ,yBAAiC,SAAC2Q,EAAGwG,GAAJ,OAAW,GAAKxG,EAAEmJ,KAAOnJ,EAAE,GAAD,OAAI3Q,EAAJ,WAAmB,KAAOmX,EAAEnM,iBAAmBmM,EAAE,GAAD,OAAInX,EAAJ,qBACnHjpB,EAAS,GAAD,OAAIipB,EAAJ,6BAAqC,SAAC2Q,GAAD,OAAOA,EAAE,GAAD,OAAI3Q,EAAJ,0BAAkC,EAAI2Q,EAAE54B,SAAW,MACxGhB,EAAS,GAAD,OAAIipB,EAAJ,4BAAoC,SAAC2Q,GAAD,OAAOA,EAAE,GAAD,OAAI3Q,EAAJ,0BAAkC,EAAI2Q,EAAE54B,SAAW44B,EAAC,UAAgB,MAExH55B,EAAS,GAAD,OAAIipB,EAAJ,oBAA4B,SAAC2Q,EAAGwG,GAAJ,OAAUA,EAAE,GAAD,OAAInX,EAAJ,mBAA2B,GAtCrDiL,EAsCuEkM,EAAE,GAAD,OAAInX,EAAJ,gBArC7FiL,GAAY,KACF,EAAU,EAAIA,EAAM,EACrBA,GAAO,IAAa,GAAW,EAANA,EAAU,GACrC,EAAIA,GAJb,IAAuBA,MAyCvBt+B,OAAOE,QAAQoI,KAAUmC,SAAQ,YAAuB,IAAD,mBAApB8zB,EAAoB,KAAd0Q,EAAc,KACrDjvC,OAAOE,QAAQ0I,KAAa6B,SAAQ,YAA+B,IAAD,mBAA5B4oB,EAA4B,KAC1D8b,GAD0D,KAArB9wC,KAC/B,CAAE6H,QAASmtB,IACvBrzB,OAAOE,QAAQgI,KAAUuC,SAAQ,YAAuB,IAAD,mBAApBzG,EAAoB,KAAdorC,EAAc,KACrD7kC,EAAS,GAAD,OAAI8oB,EAAJ,YAAWkL,EAAX,YAAmBv6B,IAA3B,aAAuC3F,KAAK,GAAD,OAAK4wC,EAAL,YAAiBG,IAAeD,GAC3E5kC,EAAS,GAAD,OAAI8oB,EAAJ,YAAWkL,EAAX,YAAmBv6B,EAAnB,WAAR,aAA6C3F,KAAK,GAAD,OAAK4wC,EAAL,YAAiBG,EAAjB,eAAwCrmB,KAAM,SAAYomB,GAE3G/kC,EAAS,GAAD,OAAIipB,EAAJ,YAAWkL,EAAX,YAAmBv6B,IAAU,SAACggC,GAAD,OAAOA,EAAE/3B,SAAW+3B,EAAE,GAAD,OAAI3Q,EAAJ,YAAWkL,EAAX,YAAmBv6B,EAAnB,eAG5DoG,EAAS,GAAD,OAAIipB,EAAJ,YAAWkL,EAAX,eAA+B,SAACyF,EAAGwG,GAAJ,OAAW,GAAKxG,EAAEmJ,KAAOnJ,EAAE,GAAD,OAAI3Q,EAAJ,UAAkB2Q,EAAE,GAAD,OAAIzF,EAAJ,WAAoB,KAAOiM,EAAEnM,iBAAmBmM,EAAE,GAAD,OAAInX,EAAJ,qBACrIjpB,EAAS,GAAD,OAAIipB,EAAJ,YAAWkL,EAAX,mBAAmC,SAACyF,GAAD,OAAOA,EAAE,GAAD,OAAI3Q,EAAJ,YAAWkL,EAAX,gBAAgC,EAAIyF,EAAE54B,SAAW,MACpGhB,EAAS,GAAD,OAAIipB,EAAJ,YAAWkL,EAAX,kBAAkC,SAACyF,GAAD,OAAOA,EAAE,GAAD,OAAI3Q,EAAJ,YAAWkL,EAAX,gBAAgC,EAAIyF,EAAE54B,SAAW44B,EAAE,SAAD,OAAUzF,EAAV,eAA8B,YAItIv+B,OAAOE,QAAQ4I,KAAyB2B,SAAQ,YAAiD,IAAD,mBAA9Ci0B,EAA8C,2BAAnC2Q,EAAmC,KAArBhc,EAAqB,KAC1F8b,GAD0F,KACpF,IACN9b,IAAK8b,EAAIjpC,QAAUw4B,GACvBn0B,EAAS,GAAD,OAAIm0B,EAAJ,SAAR,aAAgCrgC,KAAK,GAAD,OAAKgxC,EAAL,SAA4BF,GAChE5kC,EAAS,GAAD,OAAIm0B,EAAJ,UAAR,aAAiCrgC,KAAK,GAAD,OAAKgxC,EAAL,cAA+BtmB,KAAM,KAAQomB,GAClF5kC,EAAS,GAAD,OAAIm0B,EAAJ,WAAR,aAAkCrgC,KAAK,GAAD,OAAKgxC,EAAL,eAAgCtmB,KAAM,QAASikB,OAAO,GAASmC,GAErG/kC,EAAS,GAAD,OAAIs0B,EAAJ,WAAwB,SAACsF,EAAGwG,GAAJ,OAAUjhC,IAAem1B,GAAUlN,QAAO,SAACC,EAAMhQ,EAAKre,GAAZ,OAAkBquB,EAAOhQ,EAAMyG,KAAKimB,IAAI3D,EAAEyC,eAAgB7pC,KAAI,IACxIgH,EAAS,GAAD,OAAIs0B,EAAJ,SAAsB,SAACsF,EAAGwG,GAAJ,OAAW,IAAMxG,EAAEnF,oBAAsBmF,EAAE,GAAD,OAAItF,EAAJ,WAAwB,IAAM8L,EAAE,GAAD,OAAI9L,EAAJ,WAAwB8L,EAAE,GAAD,OAAInX,EAAJ,wBAGlIrzB,OAAOE,QAAQkJ,KAAqBqB,SAAQ,YAAmC,IAAD,mBAAhCi0B,EAAgC,2BAArBrgC,EAAqB,KAAfsgC,EAAe,KACtEwQ,EAAM,CAAEjpC,QAASw4B,GACvBn0B,EAAS,GAAD,OAAIm0B,EAAJ,UAAR,aAAiCrgC,KAAK,GAAD,OAAKA,EAAL,cAAuB0qB,KAAM,KAAQomB,GAC1EnvC,OAAOE,QAAQy+B,GAAUl0B,SAAQ,YAAuB,IAAD,mBAApB4oB,EAAoB,KAAfuL,EAAe,KACrDr0B,EAAS,GAAD,OAAI8oB,EAAJ,YAAWqL,EAAX,WAAR,aAAyCrgC,KAAK,GAAD,OAAKA,EAAL,eAAwB0qB,KAAM,SAAYomB,GACvF/kC,EAAS,GAAD,OAAIipB,EAAJ,YAAWqL,EAAX,WAA+B,SAACsF,GAAD,OAAOpF,GAAa,IAAMoF,EAAEvF,mBAAqBuF,EAAE,GAAD,OAAItF,EAAJ,WAAwB,KACjH1+B,OAAOE,QAAQgI,KAAUuC,SAAQ,YAAuB,IAAD,mBAApBzG,EAAoB,KAAdorC,EAAc,KACrD7kC,EAAS,GAAD,OAAI8oB,EAAJ,YAAWqL,EAAX,sBAAiC16B,IAAzC,aAAqD3F,KAAK,GAAD,OAAKA,EAAL,YAAa+wC,IAAeD,GACrF/kC,EAAS,GAAD,OAAIipB,EAAJ,YAAWqL,EAAX,sBAAiC16B,IAAU,SAACggC,GAAD,OAAOA,EAAE,GAAD,OAAI3Q,EAAJ,sBAAqBrvB,IAAUggC,EAAE,GAAD,OAAI3Q,EAAJ,YAAWqL,EAAX,YAC3F1+B,OAAOE,QAAQoI,KAAUmC,SAAQ,YAAuB,IAAD,mBAApB8zB,EAAoB,KAAd0Q,EAAc,KACrD1kC,EAAS,GAAD,OAAI8oB,EAAJ,YAAWqL,EAAX,YAAuBH,EAAvB,YAA+Bv6B,IAAvC,aAAmD3F,KAAK,GAAD,OAAKA,EAAL,YAAa4wC,EAAb,YAAyBG,IAAeD,GAC/F/kC,EAAS,GAAD,OAAIipB,EAAJ,YAAWqL,EAAX,YAAuBH,EAAvB,YAA+Bv6B,IAAU,SAACggC,GAAD,OAAOA,EAAE,GAAD,OAAI3Q,EAAJ,YAAWkL,EAAX,YAAmBv6B,IAAUggC,EAAE,GAAD,OAAI3Q,EAAJ,YAAWqL,EAAX","file":"static/js/9.49c2642d.chunk.js","sourcesContent":["import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\nimport { objMultiplication } from '../Util/Util.js';\nexport default class Weapon {\n  //do not instantiate.\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\n\n  static getWeaponDataImport = () => WeaponDataImport\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\n\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\n\n  //base Stat\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\n\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\n  static getWeaponTypeKeys = () => Object.keys(WeaponTypeData)\n\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\n\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\n    let conditional = this.getWeaponConditional(weaponKey)\n    if (!conditional || !conditionalNum) return defVal\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\n    if (!stacks) return defVal\n    stats = stats(refineIndex)\n    if (stacks !== 1) objMultiplication(stats, stacks)\n    return stats\n  }\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\nimport cryo from './Element_Cryo.png'\nimport dendro from './Element_Dendro.png'\nimport electro from './Element_Electro.png'\nimport geo from './Element_Geo.png'\nimport hydro from './Element_Hydro.png'\nimport pyro from './Element_Pyro.png'\n\nimport bow from './Weapon-class-bow-icon.png'\nimport catalyst from './Weapon-class-catalyst-icon.png'\nimport claymore from './Weapon-class-claymore-icon.png'\nimport polearm from './Weapon-class-polearm-icon.png'\nimport sword from './Weapon-class-sword-icon.png'\n\nimport fragile from './Item_Fragile_Resin.png'\nimport condensed from './Item_Condensed_Resin.png'\n\n//EXP BOOKS\nimport advice from './Item_Wanderer\\'s_Advice.png'\nimport wit from './Item_Hero\\'s_Wit.png'\nimport experience from './Item_Adventurer\\'s_Experience.png'\n\nlet Assets = {\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\n  resin: {\n    fragile,\n    condensed\n  },\n  exp_books: {\n    advice,\n    wit,\n    experience,\n  }\n};\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { faStar } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\n</span>\n\nexport {\n  StarIcon,\n  Stars\n}\n","import React, { useState } from 'react'\nimport FormControl from 'react-bootstrap/FormControl'\n\nconst CustomFormControl = ({ float = false, placeholder, value, onValueChange, disabled, allowEmpty = false }) => {\n  let [focus, setFocus] = useState(false)\n  let displayValue = value\n  if (allowEmpty) displayValue = typeof value === \"number\" ? value : \"\"\n  else displayValue = !value && focus ? \"\" : (value?.toString?.() || value)\n  const props = {\n    type: \"number\",\n    className: \"hide-appearance\",\n    placeholder,\n    value: displayValue,\n    disabled,\n    onChange: (e) => {\n      let value = e.target.value;\n      if (float) {\n        if (allowEmpty) value = value === \"\" ? null : (parseFloat(value) || 0)\n        else value = parseFloat(value) || 0\n      } else {\n        if (allowEmpty) value = value === \"\" ? null : (parseInt(value) || 0)\n        else value = parseInt(value) || 0\n      }\n      onValueChange?.(value);\n    },\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n  }\n  return <FormControl {...props} aria-label=\"custom-input\" />\n}\nexport default CustomFormControl;","let WeaponData = {}\nlet WeaponDataImport = import('./Weapons')\nWeaponDataImport.then(imp => {\n  WeaponData = imp.default\n  WeaponDataImport = null\n})\n\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\nconst WeaponTypeData = {\n  sword: \"Sword\",\n  claymore: \"Claymore\",\n  catalyst: \"Catalyst\",\n  bow: \"Bow\",\n  polearm: \"Polearm\"\n}\n\nexport {\n  WeaponData,\n  WeaponDataImport,\n  WeaponLevelKeys,\n  LevelNameData,\n  WeaponTypeData\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport Badge from 'react-bootstrap/Badge'\nimport Button from 'react-bootstrap/Button'\nimport Dropdown from 'react-bootstrap/Dropdown'\n\nexport default function ConditionalSelector(props) {\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\n  if (!conditional) return defEle\n  if (Array.isArray(conditional)) {\n    let selectedConditionalNum = conditionalNum\n    let selectedConditional = null\n    for (const curConditional of conditional) {\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\n      else {\n        selectedConditional = curConditional;\n        break;\n      }\n    }\n    if (!selectedConditional) {\n      selectedConditionalNum = 0\n      selectedConditional = conditional[0]\n    }\n\n    //multi conditional\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\n    let count = 0;\n    return <Dropdown>\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        <Dropdown.Item onClick={() => setConditional(0)}>\n          <span>Not Active</span>\n        </Dropdown.Item>\n        {conditional.map((condial, i) =>\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\n            let tempcount = ++count\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\n            </Dropdown.Item>\n          })}</React.Fragment>\n        )}\n      </Dropdown.Menu>\n    </Dropdown>\n  } else if (conditional.maxStack > 1) {\n    //stacking conditional\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\n    return <Dropdown>\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        <Dropdown.Item onClick={() => setConditional(0)}>\n          <span>Not Active</span>\n        </Dropdown.Item>\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\n          </Dropdown.Item>)}\n      </Dropdown.Menu>\n    </Dropdown>\n  } else if (conditional.maxStack === 1) {\n    //single boolean conditional\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\n    </Button>\n  }\n\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import ElementalData from \"./Data/ElementalData\";\n\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\nexport const hitElements = ElementalData\nexport const transformativeReactions = {\n  overloaded: [ \"Overloaded\", \"pyro\", 4 ],\n  shattered: [ \"Shattered\", \"physical\", 3 ],\n  electrocharged: [ \"Electro-Charged\", \"electro\", 2.4 ],\n  superconduct: [ \"Superconduct\", \"cryo\", 1 ],\n  swirl: [ \"Swirl\", \"anemo\", 1.2 ],\n}\nexport const amplifyingReactions = {\n  vaporize: [\"Vaporize\", { pyro: 1.5, hydro: 2 }],\n  melt: [\"Melt\", { pyro: 2, cryo: 1.5 }],\n}\nexport const otherReactions = {\n  burning: \"Burning\",\n  crystalize: \"Crystalize\",\n}\nexport const ReactionMatrix = {\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\n}\n","import { Formulas, StatData } from \"./StatData\"\n\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\nfunction GetFormulaDependency(formula) {\n  const dependency = new Set()\n  formula(\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\n  return [...dependency]\n}\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\n))\n\nif (process.env.NODE_ENV === \"development\") {\n  let statKeys = Object.keys(StatData)\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\n    dependencies.forEach(key =>\n      !statKeys.includes(key) &&\n        console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\n  )\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\n    StatData[formulaKey]?.const && dependencies.forEach(key => \n      !StatData[key]?.const &&\n        console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\n    )\n  )\n}\n\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\n  let dependencies = new Set()\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\n  return [...dependencies]\n}\nfunction InsertDependencies(key, modifiers, dependencies) {\n  if (dependencies.has(key)) return\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\n  dependencies.add(key)\n}\n\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\nconst reduceOptimizationTarget = (optimizationTarget) =>\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0]] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\n\n\nexport {\n  GetFormulaDependency,\n  GetDependencies,\n  reduceOptimizationTarget,\n}\n","let CharacterData = {}\nlet CharacterDataImport = import('./Characters')\nCharacterDataImport.then(imp => {\n  CharacterData = imp.default\n  CharacterDataImport = null\n})\n// import characters from \nconst LevelsData = {\n  \"L1\": {\n    name: \"Lv. 1\",\n    level: 1,\n    asend: 0\n  },\n  \"L20\": {\n    name: \"Lv. 20\",\n    level: 20,\n    asend: 0\n  },\n  \"L20A\": {\n    name: \"Lv. 20 As.1\",\n    level: 20,\n    asend: 1\n\n  },\n  \"L40\": {\n    name: \"Lv. 40\",\n    level: 40,\n    asend: 1\n  },\n  \"L40A\": {\n    name: \"Lv. 40 As.2\",\n    level: 40,\n    asend: 2\n  },\n\n  \"L50\": {\n    name: \"Lv. 50\",\n    level: 50,\n    asend: 2\n  },\n  \"L50A\": {\n    name: \"Lv. 50 As.3\",\n    level: 50,\n    asend: 3\n  },\n  \"L60\": {\n    name: \"Lv. 60\",\n    level: 60,\n    asend: 3\n  },\n  \"L60A\": {\n    name: \"Lv. 60 As.4\",\n    level: 60,\n    asend: 4\n  },\n  \"L70\": {\n    name: \"Lv. 70\",\n    level: 70,\n    asend: 4\n  },\n  \"L70A\": {\n    name: \"Lv. 70 As.5\",\n    level: 70,\n    asend: 5\n  },\n\n  \"L80\": {\n    name: \"Lv. 80\",\n    level: 80,\n    asend: 5\n  },\n  \"L80A\": {\n    name: \"Lv. 80 As.6\",\n    level: 80,\n    asend: 6\n  },\n  \"L90\": {\n    name: \"Lv. 90\",\n    level: 90,\n    asend: 6\n  }\n\n}\nconst characterStatBase = {\n  critRate_: 5,\n  critDMG_: 50,\n  enerRech_: 100,\n  stamina: 100\n}\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\n\nexport {\n  LevelsData,\n  characterStatBase,\n  CharacterData,\n  CharacterDataImport,\n  CharacterSpecializedStatKey\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst StatIcon = {\n  characterHP: faTint,\n  finalHP: faTint,\n  hp_: faTint,\n  hp: faTint,\n\n  baseATK: faFistRaised,\n  characterATK: faFistRaised,\n  finalATK: faFistRaised,\n  atk_: faFistRaised,\n  atk: faFistRaised,\n\n  characterDEF: faShieldAlt,\n  finalDEF: faShieldAlt,\n  def_: faShieldAlt,\n  def: faShieldAlt,\n\n  eleMas: faMagic,\n  critRate_: faDice,\n  critDMG_: faDiceD20,\n  enerRech_: faSync,\n  heal_: faFirstAid,\n}\n\nconst StatIconEle = (statKey) =>\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\n\nexport default StatIcon\n\nexport {\n  StatIconEle\n}","//for DB v2, we changed a bunch of keys.\nconst changes = {\n  char_ele_key: \"characterEle\",\n  char_level: \"characterLevel\",\n\n  hp_base: \"characterHP\",\n  hp_final: \"finalHP\",\n  atk_character_base: \"characterATK\",\n  atk_base: \"baseATK\",\n  atk_final: \"finalATK\",\n  atk_weapon: \"weaponATK\",\n  def_base: \"characterDEF\",\n  def_final: \"finalDEF\",\n  phy_dmg_bonus: \"physical_dmg_\",\n  phy_res: \"physical_res_\",\n  anemo_ele_dmg_bonus: \"anemo_dmg_\",\n  geo_ele_dmg_bonus: \"geo_dmg_\",\n  electro_ele_dmg_bonus: \"electro_dmg_\",\n  hydro_ele_dmg_bonus: \"hydro_dmg_\",\n  pyro_ele_dmg_bonus: \"pyro_dmg_\",\n  cryo_ele_dmg_bonus: \"cryo_dmg_\",\n  anemo_ele_res: \"anemo_res_\",\n  geo_ele_res: \"geo_res_\",\n  electro_ele_res: \"electro_res_\",\n  hydro_ele_res: \"hydro_res_\",\n  pyro_ele_res: \"pyro_res_\",\n  cryo_ele_res: \"cryo_res_\",\n  ener_rech: \"enerRech_\",\n  crit_rate: \"critRate_\",\n  crit_dmg: \"critDMG_\",\n  stam: \"stamina\",\n  heal_bonu: \"heal_\",\n  inc_heal: \"incHeal_\",\n  pow_shield: \"powShield_\",\n  red_cd: \"cdRed_\",\n  skill_cd_red: \"skillCDRed_\",\n  burst_cd_red: \"burstCDRed_\",\n  all_dmg_bonus: \"dmg_\",\n  move_spd: \"moveSPD_\",\n  atk_spd: \"atkSPD_\",\n  weakspot_dmg: \"weakspotDMG_\",\n  stamina_dec: \"staminaDec_\",\n  stamina_gliding_dec: \"staminaGlidingDec_\",\n  stamina_charged_dec: \"staminaChargedDec_\",\n  ele_mas_multi_x: \"eleMasX\",\n  ele_mas_multi_y: \"eleMasY\",\n  ele_mas_multi_z: \"eleMasZ\",\n\n  norm_atk_dmg: \"physical_normal_hit\",\n  char_atk_dmg: \"physical_charged_hit\",\n  plunge_dmg: \"physical_plunging_hit\",\n  norm_atk_crit_dmg: \"physical_normal_critHit\",\n  char_atk_crit_dmg: \"physical_charged_critHit\",\n  plunge_crit_dmg: \"physical_plunging_critHit\",\n  norm_atk_avg_dmg: \"physical_normal_avgHit\",\n  char_atk_avg_dmg: \"physical_charged_avgHit\",\n  plunge_avg_dmg: \"physical_plunging_avgHit\",\n  norm_atk_dmg_bonus: \"normal_dmg_\",\n  char_atk_dmg_bonus: \"charged_dmg_\",\n  plunge_atk_dmg_bonus: \"plunging_dmg_\",\n  skill_dmg_bonus: \"skill_dmg_\",\n  burst_dmg_bonus: \"burst_dmg_\",\n  norm_atk_crit_rate: \"normal_critRate_\",\n  char_atk_crit_rate: \"charged_critRate_\",\n  skill_crit_rate: \"skill_critRate_\",\n  burst_crit_rate: \"burst_critRate_\",\n\n  anemo_skill_dmg: \"anemo_skill_hit\",\n  anemo_burst_dmg: \"anemo_burst_hit\",\n  anemo_skill_crit_dmg: \"anemo_skill_critHit\",\n  anemo_burst_crit_dmg: \"anemo_burst_critHit\",\n  anemo_skill_avg_dmg: \"anemo_skill_avgHit\",\n  anemo_burst_avg_dmg: \"anemo_burst_avgHit\",\n  geo_skill_dmg: \"geo_skill_hit\",\n  geo_burst_dmg: \"geo_burst_hit\",\n  geo_skill_crit_dmg: \"geo_skill_critHit\",\n  geo_burst_crit_dmg: \"geo_burst_critHit\",\n  geo_skill_avg_dmg: \"geo_skill_avgHit\",\n  geo_burst_avg_dmg: \"geo_burst_avgHit\",\n  electro_skill_dmg: \"electro_skill_hit\",\n  electro_burst_dmg: \"electro_burst_hit\",\n  electro_skill_crit_dmg: \"electro_skill_critHit\",\n  electro_burst_crit_dmg: \"electro_burst_critHit\",\n  electro_skill_avg_dmg: \"electro_skill_avgHit\",\n  electro_burst_avg_dmg: \"electro_burst_avgHit\",\n  hydro_skill_dmg: \"hydro_skill_hit\",\n  hydro_burst_dmg: \"hydro_burst_hit\",\n  hydro_skill_crit_dmg: \"hydro_skill_critHit\",\n  hydro_burst_crit_dmg: \"hydro_burst_critHit\",\n  hydro_skill_avg_dmg: \"hydro_skill_avgHit\",\n  hydro_burst_avg_dmg: \"hydro_burst_avgHit\",\n  pyro_skill_dmg: \"pyro_skill_hit\",\n  pyro_burst_dmg: \"pyro_burst_hit\",\n  pyro_skill_crit_dmg: \"pyro_skill_critHit\",\n  pyro_burst_crit_dmg: \"pyro_burst_critHit\",\n  pyro_skill_avg_dmg: \"pyro_skill_avgHit\",\n  pyro_burst_avg_dmg: \"pyro_burst_avgHit\",\n  cryo_skill_dmg: \"cryo_skill_hit\",\n  cryo_burst_dmg: \"cryo_burst_hit\",\n  cryo_skill_crit_dmg: \"cryo_skill_critHit\",\n  cryo_burst_crit_dmg: \"cryo_burst_critHit\",\n  cryo_skill_avg_dmg: \"cryo_skill_avgHit\",\n  cryo_burst_avg_dmg: \"cryo_burst_avgHit\",\n\n  phy_dmg: \"physical_hit\",\n  phy_crit_dmg: \"physical_critHit\",\n  phy_avg_dmg: \"physical_avgHit\",\n  anemo_ele_dmg: \"anemo_hit\",\n  anemo_ele_crit_dmg: \"anemo_critHit\",\n  anemo_ele_avg_dmg: \"anemo_avgHit\",\n  geo_ele_dmg: \"geo_hit\",\n  geo_ele_crit_dmg: \"geo_critHit\",\n  geo_ele_avg_dmg: \"geo_avgHit\",\n  electro_ele_dmg: \"electro_hit\",\n  electro_ele_crit_dmg: \"electro_critHit\",\n  electro_ele_avg_dmg: \"electro_avgHit\",\n  hydro_ele_dmg: \"hydro_hit\",\n  hydro_ele_crit_dmg: \"hydro_critHit\",\n  hydro_ele_avg_dmg: \"hydro_avgHit\",\n  pyro_ele_dmg: \"pyro_hit\",\n  pyro_ele_crit_dmg: \"pyro_critHit\",\n  pyro_ele_avg_dmg: \"pyro_avgHit\",\n  cryo_ele_dmg: \"cryo_hit\",\n  cryo_ele_crit_dmg: \"cryo_critHit\",\n  cryo_ele_avg_dmg: \"cryo_avgHit\",\n\n  overload_dmg: \"overload_hit\",\n  overload_dmg_bonus: \"overload_dmg_\",\n  overload_multi: \"overload_multi\",\n  electrocharged_dmg: \"electrocharged_hit\",\n  electrocharged_dmg_bonus: \"electrocharged_dmg_\",\n  electrocharged_multi: \"electrocharged_multi\",\n  superconduct_dmg: \"superconduct_hit\",\n  superconduct_dmg_bonus: \"superconduct_dmg_\",\n  superconduct_multi: \"superconduct_multi\",\n  burning_dmg: \"burning_hit\",\n  burning_dmg_bonus: \"burning_dmg_\",\n  swirl_dmg: \"swirl_hit\",\n  swirl_dmg_bonus: \"swirl_dmg_\",\n  swirl_multi: \"swirl_multi\",\n  shatter_dmg: \"shattered_hit\",\n  shatter_dmg_bonus: \"shattered_dmg_\",\n  shatter_multi: \"shattered_multi\",\n  crystalize_dmg: \"crystalize_hit\",\n  crystalize_dmg_bonus: \"crystalize_dmg_\",\n\n  melt_dmg_bonus: \"melt_dmg_\",\n  vaporize_dmg_bonus: \"vaporize_dmg_\",\n\n  pyro_vaporize_normal_dmg: \"pyro_vaporize_normal_hit\",\n  pyro_vaporize_normal_crit_dmg: \"pyro_vaporize_normal_critHit\",\n  pyro_vaporize_normal_avg_dmg: \"pyro_vaporize_normal_avgHit\",\n  pyro_vaporize_chraged_dmg: \"pyro_vaporize_chraged_hit\",\n  pyro_vaporize_chraged_crit_dmg: \"pyro_vaporize_chraged_critHit\",\n  pyro_vaporize_chraged_avg_dmg: \"pyro_vaporize_chraged_avgHit\",\n  pyro_vaporize_plunge_dmg: \"pyro_vaporize_plunging_hit\",\n  pyro_vaporize_plunge_crit_dmg: \"pyro_vaporize_plunging_critHit\",\n  pyro_vaporize_plunge_avg_dmg: \"pyro_vaporize_plunging_avgHit\",\n  pyro_vaporize_skill_dmg: \"pyro_vaporize_skill_hit\",\n  pyro_vaporize_skill_crit_dmg: \"pyro_vaporize_skill_critHit\",\n  pyro_vaporize_skill_avg_dmg: \"pyro_vaporize_skill_avgHit\",\n  pyro_vaporize_burst_dmg: \"pyro_vaporize_burst_hit\",\n  pyro_vaporize_burst_crit_dmg: \"pyro_vaporize_burst_critHit\",\n  pyro_vaporize_burst_avg_dmg: \"pyro_vaporize_burst_avgHit\",\n  pyro_vaporize_ele_dmg: \"pyro_vaporize_hit\",\n  pyro_vaporize_ele_crit_dmg: \"pyro_vaporize_critHit\",\n  pyro_vaporize_ele_avg_dmg: \"pyro_vaporize_avgHit\",\n  hydro_vaporize_normal_dmg: \"hydro_vaporize_normal_hit\",\n  hydro_vaporize_normal_crit_dmg: \"hydro_vaporize_normal_critHit\",\n  hydro_vaporize_normal_avg_dmg: \"hydro_vaporize_normal_avgHit\",\n  hydro_vaporize_chraged_dmg: \"hydro_vaporize_chraged_hit\",\n  hydro_vaporize_chraged_crit_dmg: \"hydro_vaporize_chraged_critHit\",\n  hydro_vaporize_chraged_avg_dmg: \"hydro_vaporize_chraged_avgHit\",\n  hydro_vaporize_plunge_dmg: \"hydro_vaporize_plunging_hit\",\n  hydro_vaporize_plunge_crit_dmg: \"hydro_vaporize_plunging_critHit\",\n  hydro_vaporize_plunge_avg_dmg: \"hydro_vaporize_plunging_avgHit\",\n  hydro_vaporize_skill_dmg: \"hydro_vaporize_skill_hit\",\n  hydro_vaporize_skill_crit_dmg: \"hydro_vaporize_skill_critHit\",\n  hydro_vaporize_skill_avg_dmg: \"hydro_vaporize_skill_avgHit\",\n  hydro_vaporize_burst_dmg: \"hydro_vaporize_burst_hit\",\n  hydro_vaporize_burst_crit_dmg: \"hydro_vaporize_burst_critHit\",\n  hydro_vaporize_burst_avg_dmg: \"hydro_vaporize_burst_avgHit\",\n  hydro_vaporize_ele_dmg: \"hydro_vaporize_hit\",\n  hydro_vaporize_ele_crit_dmg: \"hydro_vaporize_critHit\",\n  hydro_vaporize_ele_avg_dmg: \"hydro_vaporize_avgHit\",\n  pyro_melt_normal_dmg: \"pyro_melt_normal_hit\",\n  pyro_melt_normal_crit_dmg: \"pyro_melt_normal_critHit\",\n  pyro_melt_normal_avg_dmg: \"pyro_melt_normal_avgHit\",\n  pyro_melt_chraged_dmg: \"pyro_melt_chraged_hit\",\n  pyro_melt_chraged_crit_dmg: \"pyro_melt_chraged_critHit\",\n  pyro_melt_chraged_avg_dmg: \"pyro_melt_chraged_avgHit\",\n  pyro_melt_plunge_dmg: \"pyro_melt_plunging_hit\",\n  pyro_melt_plunge_crit_dmg: \"pyro_melt_plunging_critHit\",\n  pyro_melt_plunge_avg_dmg: \"pyro_melt_plunging_avgHit\",\n  pyro_melt_skill_dmg: \"pyro_melt_skill_hit\",\n  pyro_melt_skill_crit_dmg: \"pyro_melt_skill_critHit\",\n  pyro_melt_skill_avg_dmg: \"pyro_melt_skill_avgHit\",\n  pyro_melt_burst_dmg: \"pyro_melt_burst_hit\",\n  pyro_melt_burst_crit_dmg: \"pyro_melt_burst_critHit\",\n  pyro_melt_burst_avg_dmg: \"pyro_melt_burst_avgHit\",\n  pyro_melt_ele_dmg: \"pyro_melt_hit\",\n  pyro_melt_ele_crit_dmg: \"pyro_melt_critHit\",\n  pyro_melt_ele_avg_dmg: \"pyro_melt_avgHit\",\n  cryo_melt_normal_dmg: \"cryo_melt_normal_hit\",\n  cryo_melt_normal_crit_dmg: \"cryo_melt_normal_critHit\",\n  cryo_melt_normal_avg_dmg: \"cryo_melt_normal_avgHit\",\n  cryo_melt_chraged_dmg: \"cryo_melt_chraged_hit\",\n  cryo_melt_chraged_crit_dmg: \"cryo_melt_chraged_critHit\",\n  cryo_melt_chraged_avg_dmg: \"cryo_melt_chraged_avgHit\",\n  cryo_melt_plunge_dmg: \"cryo_melt_plunging_hit\",\n  cryo_melt_plunge_crit_dmg: \"cryo_melt_plunging_critHit\",\n  cryo_melt_plunge_avg_dmg: \"cryo_melt_plunging_avgHit\",\n  cryo_melt_skill_dmg: \"cryo_melt_skill_hit\",\n  cryo_melt_skill_crit_dmg: \"cryo_melt_skill_critHit\",\n  cryo_melt_skill_avg_dmg: \"cryo_melt_skill_avgHit\",\n  cryo_melt_burst_dmg: \"cryo_melt_burst_hit\",\n  cryo_melt_burst_crit_dmg: \"cryo_melt_burst_critHit\",\n  cryo_melt_burst_avg_dmg: \"cryo_melt_burst_avgHit\",\n  cryo_melt_ele_dmg: \"cryo_melt_hit\",\n  cryo_melt_ele_crit_dmg: \"cryo_melt_critHit\",\n  cryo_melt_ele_avg_dmg: \"cryo_melt_avgHit\",\n\n  enemy_phy_res: \"physical_enemyRes_\",\n  enemy_phy_res_multi: \"physical_enemyRes_multi\",\n  enemy_phy_immunity: \"physical_enemyImmunity\",\n  anemo_enemy_ele_res: \"anemo_enemyRes_\",\n  anemo_enemy_ele_res_multi: \"anemo_enemyRes_multi\",\n  anemo_enemy_ele_immunity: \"anemo_enemyImmunity\",\n  geo_enemy_ele_res: \"geo_enemyRes_\",\n  geo_enemy_ele_res_multi: \"geo_enemyRes_multi\",\n  geo_enemy_ele_immunity: \"geo_enemyImmunity\",\n  electro_enemy_ele_res: \"electro_enemyRes_\",\n  electro_enemy_ele_res_multi: \"electro_enemyRes_multi\",\n  electro_enemy_ele_immunity: \"electro_enemyImmunity\",\n  hydro_enemy_ele_res: \"hydro_enemyRes_\",\n  hydro_enemy_ele_res_multi: \"hydro_enemyRes_multi\",\n  hydro_enemy_ele_immunity: \"hydro_enemyImmunity\",\n  pyro_enemy_ele_res: \"pyro_enemyRes_\",\n  pyro_enemy_ele_res_multi: \"pyro_enemyRes_multi\",\n  pyro_enemy_ele_immunity: \"pyro_enemyImmunity\",\n  cryo_enemy_ele_res: \"cryo_enemyRes_\",\n  cryo_enemy_ele_res_multi: \"cryo_enemyRes_multi\",\n  cryo_enemy_ele_immunity: \"cryo_enemyImmunity\",\n\n  ele_mas: \"eleMas\",\n  amp_reaction_base_multi: \"ampReactionBase_multi\",\n\n  enemy_level_multi: \"enemyLevel_multi\",\n  enemy_level: \"enemyLevel\"\n}\n/*\nconst same = [\n  hp, hp_, atk, atk_, def, def_, pyro_vaporize_multi, hydro_vaporize_multi, pyro_melt_multi, cryo_melt_multi,\n]\n\nconst removed = [\n  norm_atk_crit_multi, char_atk_crit_multi, norm_atk_bonus_multi, char_atk_bonus_multi, plunge_bonus_multi, skill_crit_multi, burst_crit_multi, skill_bonus_multi, burst_bonus_multi, phy_bonus_multi, anemo_ele_bonus_multi, geo_ele_bonus_multi, electro_ele_bonus_multi, hydro_ele_bonus_multi, pyro_ele_bonus_multi, cryo_ele_bonus_multi, crit_dmg_multi, crit_multi,\n]\n\nconst aded = [\n  plunging_critRate_, final_normal_critRate_, final_charged_critRate_, final_plunging_critRate_, final_skill_critRate_, final_burst_critRate_,\n]\n*/\n\n//renamed dmgMode to hitMode\nconst dmgModeToHitMode = {\n  avg_dmg: \"avgHit\",\n  dmg: \"hit\",\n  crit_dmg: \"critHit\"\n}\nexport { changes, dmgModeToHitMode }","import Artifact from \"./Artifact/Artifact\";\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\nimport { changes as v2change, dmgModeToHitMode } from \"./dbV2KeyMap\";\nimport { loadFromLocalStorage, saveToLocalStorage } from \"./Util/Util\";\n\nfunction DatabaseInitAndVerify() {\n  const dbVersion = getDatabaseVersion()\n  //edit the data before the database is populated\n  if (dbVersion < 2) {\n    //made characters unique, so need to convert character_{NUMBER} to char_{characterKey}. Will only save the 1st instance of a character.\n    Object.keys(localStorage).filter(key => key.startsWith(\"character_\")).forEach(key => {\n      const character = loadFromLocalStorage(key);\n      const { characterKey, equippedArtifacts = {} } = character\n      const dbKey = `char_${characterKey}`\n      if (localStorage.getItem(dbKey) === null) {\n        //if there is no character saved, create a new character\n        const { id, name, dmgMode, ...rest } = character\n        if (Array.isArray(rest?.buildSetting?.mainStat))\n          rest.buildSetting.mainStat = rest.buildSetting.mainStat.map(stat => stat in v2change ? v2change[stat] : stat)\n        if (typeof rest?.buildSetting?.statFilters === \"object\")\n          rest.buildSetting.statFilters = Object.fromEntries(Object.entries(rest.buildSetting.statFilters).map(([stat, value]) => [stat in v2change ? v2change[stat] : stat, value]))\n        rest.hitMode = dmgModeToHitMode[dmgMode] ?? Object.keys(dmgModeToHitMode)[0]\n        saveToLocalStorage(dbKey, rest)\n        //equip to the new character\n        Object.values(equippedArtifacts).forEach(artid => {\n          const art = loadFromLocalStorage(artid);\n          if (!art) return\n          art.location = characterKey\n          saveToLocalStorage(artid, art)\n        });\n      } else {\n        //if the character does exist, \"move\" the artifacts equipped to inventory\n        Object.values(equippedArtifacts).forEach(artid => {\n          const art = loadFromLocalStorage(artid);\n          if (!art) return\n          art.location = \"\"\n          saveToLocalStorage(artid, art)\n        });\n      }\n      //delete the old database\n      localStorage.removeItem(key)\n    })\n    //reset the ArtifactDisplay keys\n    const ArtifactDisplayState = loadFromLocalStorage(\"ArtifactDisplay.state\")\n    if (ArtifactDisplayState) {\n      if (ArtifactDisplayState.filterMainStatKey in v2change)\n        ArtifactDisplayState.filterMainStatKey = v2change[ArtifactDisplayState.filterMainStatKey]\n      ArtifactDisplayState.filterSubstats = ArtifactDisplayState.filterSubstats.map(stat => stat in v2change ? v2change[stat] : stat)\n      saveToLocalStorage(\"ArtifactDisplay.state\", ArtifactDisplayState)\n    }\n  }\n\n  //this will only run if neither of the database has been initated.\n  const charDBJustPopualted = CharacterDatabase.populateDatebaseFromLocalStorage(),\n    artDBJustPopualted = ArtifactDatabase.populateDatebaseFromLocalStorage()\n  if (!charDBJustPopualted && !artDBJustPopualted) return\n\n  Object.values(ArtifactDatabase.getArtifactDatabase()).forEach(art => {\n    let valid = true\n\n    //verify the linking of artifacts and characters\n    if (art.location) {\n      const locationChar = CharacterDatabase.get(art.location)\n      if (locationChar) {\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\n          CharacterDatabase.equipArtifact(art.location, art)\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\n          art.location = \"\"\n          valid = false\n        }\n      } else {\n        art.location = \"\"\n        valid = false\n      }\n    }\n\n    if (dbVersion < 1) {\n      //generate artifact efficiency again for artifacts\n      Artifact.substatsValidation(art)\n      valid = false\n\n      //there was a bug that saved the numStars as strings. convert to number.\n      if (typeof art.numStars === \"string\") {\n        art.numStars = parseInt(art.numStars)\n        valid = false\n      }\n\n      //the set keys were changed to camelcase, need to convert for old databases.\n      let keyMapping = {\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\n        \"Thundering Fury\": \"ThunderingFury\",\n        \"Retracing Bolide\": \"RetracingBolide\",\n        \"Noblesse Oblige\": \"NoblesseOblige\",\n        \"Maiden Beloved\": \"MaidenBeloved\",\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\n        \"Archaic Petra\": \"ArchaicPetra\",\n        \"Brave Heart\": \"BraveHeart\",\n        \"Tiny Miracle\": \"TinyMiracle\",\n        \"Defender's Will\": \"DefendersWill\",\n        \"Martial Artist\": \"MartialArtist\",\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\n        \"The Exile\": \"TheExile\",\n        \"Traveling Doctor\": \"TravelingDoctor\",\n        \"Lucky Dog\": \"LuckyDog\",\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\n      }\n      if (keyMapping[art.setKey]) {\n        art.setKey = keyMapping[art.setKey]\n        valid = false\n      }\n      //key names were changed. convert old DB\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\n        valid = false\n      }\n      //key names were changed. convert old DB\n      if (art?.mainStatKey === \"phy_dmg\") {\n        art.mainStatKey = \"phy_dmg_bonus\"\n        valid = false\n      }\n    }\n\n    if (dbVersion < 2) {\n      if (art.mainStatKey in v2change) {\n        art.mainStatKey = v2change[art.mainStatKey]\n        valid = false\n      }\n      art?.substats?.forEach((obj, i) => {\n        if (obj.key in v2change) {\n          art.substats[i].key = v2change[obj.key]\n          valid = false\n        }\n      })\n    }\n\n    //Update any invalid artifacts in DB\n    if (!valid) ArtifactDatabase.updateArtifact(art)\n  })\n\n  let chars = CharacterDatabase.getCharacterDatabase();\n  Object.values(chars).forEach(character => {\n    let valid = true;\n    const { characterKey } = character\n    //verify character database equipment validity\n    if (!character.equippedArtifacts) {\n      character.equippedArtifacts = {}\n      valid = false\n    }\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\n      const equippedArt = ArtifactDatabase.get(artid)\n      if (equippedArt && equippedArt.location !== characterKey) //the artifact doesnt have the right location...\n        ArtifactDatabase.moveToNewLocation(artid, characterKey)\n      if (!equippedArt) {\n        valid = false\n        character.equippedArtifacts[slotKey] = \"\"\n      }\n    })\n\n    if (dbVersion < 1) {\n      //conditional format was refactored. this makes sure there is no error when using old DB.\n      character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\n        if (!cond.srcKey || !cond.srcKey2) {\n          valid = false\n          return false\n        }\n        return true\n      }) ?? []\n\n      //check for dmgMode\n      if (!character.hitMode) {\n        character.hitMode = \"hit\"\n        valid = false\n      }\n    }\n\n    //update any invalid characters in DB\n    if (!valid) CharacterDatabase.updateCharacter(character)\n  })\n  setDatabaseVersion(2)\n}\nconst getDatabaseVersion = (defVal = 0) =>\n  parseInt(loadFromLocalStorage(\"db_ver\") ?? defVal)\n\nconst setDatabaseVersion = (version) =>\n  saveToLocalStorage(\"db_ver\", version)\n\nexport {\n  DatabaseInitAndVerify\n};\n","import Dropdown from \"react-bootstrap/Dropdown\";\nimport Character from \"../Character/Character\";\nimport CharacterDatabase from \"../Character/CharacterDatabase\";\n\nfunction CharacterSelectionDropdownList({ onSelect }) {\n  return CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\n    if (a < b) return -1;\n    if (a > b) return 1;\n    // names must be equal\n    return 0;\n  })).map(characterKey =>\n    <Dropdown.Item key={characterKey} onClick={() => onSelect(characterKey)}>\n      {Character.getName(characterKey)}\n    </Dropdown.Item>)\n}\nexport {\n  CharacterSelectionDropdownList,\n};\n\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useContext } from 'react';\nimport { Accordion, AccordionContext, Button, Card, Col, Image, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\nimport Assets from \"../../Assets/Assets\";\nimport { getTalentStatKey } from \"../../Build/Build\";\nimport Stat from \"../../Stat\";\nimport { ElementToReactionKeys } from \"../../StatData\";\nimport { GetDependencies } from \"../../StatDependency\";\nimport Character from \"../Character\";\nimport StatInput from \"../StatInput\";\n\nfunction ReactionToggle({ character: { characterKey, reactionMode = \"none\" }, setReactionMode, className }) {\n  reactionMode === null && (reactionMode = \"none\")\n  let charEleKey = Character.getElementalKey(characterKey)\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\n  if (!eleInterArr.includes(\"shattered_hit\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shattered_hit\")\n  return [\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup className={className}\n    type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setReactionMode(val === \"none\" ? null : val)}>\n    <ToggleButton value={\"none\"} variant={reactionMode === \"none\" ? \"success\" : \"primary\"}>No Reactions</ToggleButton >\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_vaporize\"} variant={reactionMode === \"pyro_vaporize\" ? \"success\" : \"primary\"}>\n      <span className=\"text-vaporize\">Vaporize(Pyro) <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\n    </ToggleButton >}\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_melt\"} variant={reactionMode === \"pyro_melt\" ? \"success\" : \"primary\"}>\n      <span className=\"text-melt\">Melt(Pyro) <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\n    </ToggleButton >}\n    {charEleKey === \"hydro\" && <ToggleButton value={\"hydro_vaporize\"} variant={reactionMode === \"hydro_vaporize\" ? \"success\" : \"primary\"}>\n      <span className=\"text-vaporize\">Vaporize(Hydro) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /></span>\n    </ToggleButton >}\n    {charEleKey === \"cryo\" && <ToggleButton value={\"cryo_melt\"} variant={reactionMode === \"cryo_melt\" ? \"success\" : \"primary\"}>\n      <span className=\"text-melt\">Melt(Cryo) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /></span>\n    </ToggleButton >}\n  </ToggleButtonGroup>\n}\nfunction HitModeToggle({ hitMode, setHitMode, className }) {\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={setHitMode} className={className}>\n    <ToggleButton value=\"avgHit\" variant={hitMode === \"avgHit\" ? \"success\" : \"primary\"}>Avg. DMG</ToggleButton>\n    <ToggleButton value=\"hit\" variant={hitMode === \"hit\" ? \"success\" : \"primary\"}>Normal Hit, No Crit</ToggleButton>\n    <ToggleButton value=\"critHit\" variant={hitMode === \"critHit\" ? \"success\" : \"primary\"}>Crit Hit DMG</ToggleButton>\n  </ToggleButtonGroup>\n}\n\nexport default function DamageOptionsAndCalculation({ character, character: { characterKey, hitMode }, setState, setOverride, newBuild, equippedBuild }) {\n  //choose which one to display stats for\n  const build = newBuild ? newBuild : equippedBuild\n\n  const ContextAwareToggle = ({ eventKey, callback }) => {\n    const currentEventKey = useContext(AccordionContext);\n    const decoratedOnClick = useAccordionToggle(\n      eventKey,\n      () => callback && callback(eventKey),\n    );\n    const expanded = currentEventKey === eventKey;\n    return (\n      <Button onClick={decoratedOnClick} >\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\n      </Button>\n    );\n  }\n  const statsDisplayKeys = () => {\n    let keys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\n    let isAutoElemental = Character.isAutoElemental(characterKey)\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\n    let autoKeys = [\"normal\", \"charged\", \"plunging\"];\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\n    if (!isAutoElemental)  //add physical variants of the formulas\n      autoKeys.forEach(key => keys.push(getTalentStatKey(key, build.finalStats)))\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\n      autoKeys.forEach(key => keys.push(getTalentStatKey(key, build.finalStats, true)))\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\n      keys.push(getTalentStatKey(\"charged\", build.finalStats, true))\n    //add talents/skills\n    talKeys.forEach(key => keys.push(getTalentStatKey(key, build.finalStats)))\n    //show elemental interactions\n    keys.push(...(ElementToReactionKeys[Character.getElementalKey(characterKey)] || []))\n    let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\n    if (!keys.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") keys.push(\"shattered_hit\")\n\n    //search for dependency\n    return Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, keys), build?.finalStats?.modifiers)\n  }\n  return <Accordion>\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n      <Card.Header>\n        <Row>\n          <Col>\n            <span className=\"d-block\">Damage Calculation Options</span>\n            <small>Expand below to edit enemy details.</small>\n          </Col>\n          <Col xs=\"auto\">\n            {/* TODO reaction interaction UI */}\n            <ReactionToggle {...{ character, setReactionMode: r => setState({ reactionMode: r }) }} />\n          </Col>\n          <Col xs=\"auto\">\n            <ContextAwareToggle as={Button} eventKey=\"1\" />\n          </Col>\n        </Row>\n      </Card.Header>\n      <Accordion.Collapse eventKey=\"1\">\n        <Card.Body>\n          <Row className=\"mb-2\"><Col>\n            <Button variant=\"warning\" >\n              <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\n                To get the specific resistance values of enemies, please visit the wiki.\n          </a>\n            </Button >\n          </Col></Row>\n          <Row>\n            <Col xs={12} xl={6} className=\"mb-2\">\n              <StatInput\n                name={<b>Enemy Level</b>}\n                value={Character.getStatValueWithOverride(character, \"enemyLevel\")}\n                placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\n                defaultValue={Character.getBaseStatValue(character, \"enemyLevel\")}\n                onValueChange={(val) => setOverride?.(\"enemyLevel\", val)}\n              />\n            </Col>\n            {Character.getElementalKeys().map(eleKey => {\n              let statKey = eleKey === \"physical\" ? \"physical_enemyRes_\" : `${eleKey}_enemyRes_`\n              let immunityStatKey = eleKey === \"physical\" ? \"physical_enemyImmunity\" : `${eleKey}_enemyImmunity`\n              let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\n              return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\n                <StatInput\n                  prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\n                    <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\n                </Button>}\n                  name={<b>{Stat.getStatNameRaw(statKey)}</b>}\n                  value={Character.getStatValueWithOverride(character, statKey)}\n                  placeholder={Stat.getStatNameRaw(statKey)}\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\n                  onValueChange={(val) => setOverride?.(statKey, val)}\n                  disabled={elementImmunity}\n                />\n              </Col>\n            })}\n          </Row>\n        </Card.Body>\n      </Accordion.Collapse>\n    </Card>\n\n    <Card bg=\"lightcontent\" text=\"lightfont\">\n      <Card.Header>\n        <Row>\n          <Col>\n            <span className=\"d-block\">Damage Calculation Formulas</span>\n            <small>Expand below to see calculation details.</small>\n          </Col>\n          <Col xs=\"auto\">\n            <HitModeToggle {...{ hitMode, setHitMode: m => setState({ hitMode: m }) }} />\n          </Col>\n          <Col xs=\"auto\">\n            <ContextAwareToggle as={Button} eventKey=\"2\" />\n          </Col>\n        </Row>\n      </Card.Header>\n      <Accordion.Collapse eventKey=\"2\">\n        <Card.Body>\n          <Row>\n            {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\n              <Card bg=\"darkcontent\" text=\"lightfont\">\n                <Card.Header className=\"p-2\">\n                  {Stat.printStat(key, build.finalStats)}\n                </Card.Header>\n                <Card.Body className=\"p-2\">\n                  <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\n                </Card.Body>\n              </Card>\n            </Col>\n            )}\n          </Row>\n        </Card.Body>\n      </Accordion.Collapse>\n    </Card>\n  </Accordion>\n}\nexport {\n  HitModeToggle,\n  ReactionToggle,\n};\n","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Image from 'react-bootstrap/Image';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Row from 'react-bootstrap/Row';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Character from '../Character/Character';\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\nimport { Stars } from '../Components/StarDisplay';\nimport Stat from '../Stat';\nimport Artifact from './Artifact';\nimport ArtifactDatabase from './ArtifactDatabase';\nimport PercentBadge from './PercentBadge';\nexport default function ArtifactCard({ artifactId, artifactObj, forceUpdate, onEdit, onDelete, assumeFull = false }) {\n  if (!artifactId && !artifactObj) return null;\n  const art = artifactObj ? artifactObj : ArtifactDatabase.get(artifactId);\n  if (!art) return null;\n  let { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location = \"\", lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\n  let mainStatLevel = assumeFull ? numStars * 4 : level\n  let assFullColor = assumeFull && level !== numStars * 4\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\n  let artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\n  const equipOnChar = (charKey) => {\n    Artifact.equipArtifactOnChar(artifactId, charKey)\n    forceUpdate?.()\n  }\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\n    <Card.Header className=\"p-0\">\n      <Row>\n        <Col xs={2} md={3}>\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\n        </Col>\n        <Col className=\"pt-3\">\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\n        </Col>\n      </Row>\n    </Card.Header>\n    <Card.Body className=\"d-flex flex-column py-2\">\n      <Card.Title>\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\n      </Card.Title>\n      <h5 className=\"mb-1\">\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\n      </h5>\n      <Row className=\"mb-0\">\n        {substats.map((stat, i) => {\n          if (!stat || !stat.value) return null\n          let numRolls = stat?.rolls?.length || 0\n          let efficiency = stat?.efficiency || 0\n          let effOpacity = 0.3 + efficiency * 0.7\n          let statName = Stat.getStatName(stat.key)\n          return (<Col key={i} xs={12}>\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\n          </Col>)\n        })}\n      </Row>\n      <div className=\"mt-auto\">\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\n        <PercentBadge percent={currentEfficiency} valid={artifactValid}>\n          {currentEfficiency?.toFixed(2) ?? currentEfficiency + \"%\"}\n        </PercentBadge>\n        <b>{\" < \"}</b>\n        <PercentBadge percent={maximumEfficiency} valid={artifactValid}>\n          {maximumEfficiency?.toFixed(2) ?? maximumEfficiency + \"%\"}\n        </PercentBadge>\n      </div>\n    </Card.Body>\n\n    <Card.Footer className=\"pr-3\">\n      <Row className=\"d-flex justify-content-between no-gutters\">\n        {forceUpdate ? <Col xs=\"auto\">\n          <Dropdown>\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{Character.getName(location, \"Inventory\")}</Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}>Inventory</Dropdown.Item>\n              <Dropdown.Divider />\n              <CharacterSelectionDropdownList onSelect={ckey => equipOnChar(ckey)} />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Col> : <Col xs=\"auto\"><b>{Character.getName(location)}</b></Col>}\n        <Col xs=\"auto\">\n          <ButtonGroup>\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\n              <span className=\"d-inline-block\">\n                <Button size=\"sm\"\n                  disabled={location}\n                  style={location ? { pointerEvents: 'none' } : {}}\n                  onClick={() => {\n                    art.lock = !lock\n                    ArtifactDatabase.updateArtifact(art);\n                    forceUpdate?.();\n                  }}>\n                  <FontAwesomeIcon icon={(lock || location) ? faLock : faLockOpen} className=\"fa-fw\" />\n                </Button>\n              </span>\n            </OverlayTrigger> : null}\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\n              onClick={() => onEdit()}>\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\n            </Button>}\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\n              onClick={() => onDelete()}>\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\n            </Button>}\n          </ButtonGroup>\n        </Col>\n      </Row>\n    </Card.Footer>\n  </Card>)\n}\n","import { Badge } from 'react-bootstrap';\n\nexport default function PercentBadge(props) {\n  let { percent, valid, children } = props\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\n}\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport Button from \"react-bootstrap/Button\"\nimport InputGroup from \"react-bootstrap/InputGroup\"\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\nimport Tooltip from \"react-bootstrap/Tooltip\"\nimport CustomFormControl from \"../Components/CustomFormControl\"\n\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\n  <InputGroup {...restProps}>\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\n    <InputGroup.Prepend>\n      <InputGroup.Text>{name}</InputGroup.Text>\n    </InputGroup.Prepend>\n    <CustomFormControl\n      float={percent}\n      placeholder={placeholder}\n      value={value}\n      onValueChange={onValueChange}\n      disabled={disabled}\n    />\n    {percent ? (<InputGroup.Append>\n      <InputGroup.Text>%</InputGroup.Text>\n    </InputGroup.Append>) : null}\n    {defaultValue !== undefined ? <InputGroup.Append>\n      <OverlayTrigger placement=\"top\"\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\n        <span className=\"d-inline-block\">\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\n            <FontAwesomeIcon icon={faUndo} />\n          </Button>\n        </span>\n      </OverlayTrigger>\n    </InputGroup.Append> : null}\n  </InputGroup>\nexport default StatInput","import Character from \"../Character/Character\"\nimport Stat from \"../Stat\"\nimport { StatIconEle } from \"./StatIcon\"\n\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\n    oldVal = val\n    val = undefined\n  }\n  const diff = val !== undefined ? val - oldVal : 0;\n  let oldText = \"\", diffText = \"\"\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\n\n  return <div>\n    <b>{label}</b>\n    <span className=\"float-right text-right\">{oldText}{diff ? \" \" : \"\"}{diffText}</span>\n  </div>\n}\nexport default function StatDisplay({ character, character: { characterKey }, equippedBuild, newBuild, editable, statKey }) {\n  let val, oldVal, fixed, unit, variant;\n  let label = \"\"\n  if (typeof statKey === \"string\") {//basic statKey\n    if (newBuild && equippedBuild) {//comparable\n      //newbuild -> val\n      //equippedbuild ->old\n      val = newBuild?.finalStats?.[statKey] ?? 0\n      oldVal = equippedBuild?.finalStats?.[statKey] ?? 0\n    } else {\n      const build = newBuild ? newBuild : equippedBuild\n      //build ->val\n      val = build?.finalStats?.[statKey] ?? 0\n      //statvaluewith override -> old\n      const invalid = \"invalid\"//can't use undeinfed as the defVal, since I want undefined for invalid numbers.\n      oldVal = Character.getStatValueWithOverride(character, statKey, invalid)\n      oldVal === invalid && (oldVal = undefined)\n      if (statKey === \"finalHP\")\n        oldVal = Character.getStatValueWithOverride(character, \"characterHP\")\n      else if (statKey === \"finalDEF\")\n        oldVal = Character.getStatValueWithOverride(character, \"characterDEF\")\n      else if (statKey === \"finalATK\")\n        oldVal = Character.getStatValueWithOverride(character, \"characterATK\") + Character.getStatValueWithOverride(character, \"weaponATK\")\n    }\n    unit = Stat.getStatUnit(statKey)\n    fixed = Stat.fixedUnit(statKey)\n    label = <span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>\n  } else {//from character sheet\n    const build = newBuild ? newBuild : equippedBuild\n    const { talentKey, sectionIndex, fieldIndex } = statKey\n    const field = Character.getTalentField(characterKey, talentKey, sectionIndex, fieldIndex)\n    const labelVariant = Character.getTalentFieldValue(field, \"variant\", talentKey, build.finalStats)\n    label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", talentKey, build.finalStats)}</span>\n    fixed = Character.getTalentFieldValue(field, \"fixed\", talentKey, build.finalStats, 0)\n    val = Character.getTalentFieldValue(field, \"formula\", talentKey, build.finalStats)\n    if (newBuild && equippedBuild) {//comparable\n      oldVal = Character.getTalentFieldValue(field, \"formula\", talentKey, equippedBuild.finalStats)\n    }\n  }\n\n  if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label }} />\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","\n//take the new statsDisplayKeys, and display the stats.\n\nimport { Card, Col, Row } from \"react-bootstrap\"\nimport StatDisplay from \"../../Components/StatDisplay\"\nimport Character from \"../Character\"\n\nexport default function StatDisplayComponent({ character, character: { characterKey }, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }) {\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([talentKey, fields]) => {\n    let header = \"\"\n    if (talentKey === \"basicKeys\") header = \"Basic Stats\"\n    else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\n    else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\n    else header = Character.getTalentName(characterKey, talentKey, talentKey)\n    return <Col key={talentKey} className=\"mb-2\" xs={12} md={6} xl={4}>\n      <Card bg={cardbg} text=\"lightfont\" className=\"h-100\">\n        <Card.Header>{header}</Card.Header>\n        <Card.Body>\n          {fields.map(field => <StatDisplay key={JSON.stringify(field)} {...{ character, equippedBuild, newBuild, editable, statKey: field }} />)}\n        </Card.Body>\n      </Card>\n    </Col>\n  })}</Row>\n}","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nimport { Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\nimport Artifact from '../../Artifact/Artifact';\nimport ArtifactCard from '../../Artifact/ArtifactCard';\nimport ConditionalSelector from '../../Components/ConditionalSelector';\nimport Stat from \"../../Stat\";\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\nimport Character from \"../Character\";\nimport DamageOptionsAndCalculation from './DamageOptionsAndCalculation';\nimport StatDisplayComponent from './StatDisplayComponent';\n\nfunction CharacterArtifactPane({ character, character: { characterKey, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState, setOverride }) {\n  //choose which one to display stats for\n  let build = newBuild ? newBuild : equippedBuild\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\n  const statKeys = Character.getDisplayStatKeys(characterKey)\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\n  return <>\n    {Character.hasTalentPage(characterKey) && <Row><Col xs={12} className=\"mb-2\">\n      <DamageOptionsAndCalculation {...{ character, setState, setOverride, newBuild, equippedBuild }} />\n    </Col></Row>}\n    <Row>\n      <Col className=\"mb-2\">\n        <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\n          <Card.Body>\n            <StatDisplayComponent {...{ character, equippedBuild, newBuild, statsDisplayKeys: statKeys, build, forceUpdate, setState, setOverride, editable }} />\n          </Card.Body>\n          {newBuild ? <Card.Footer>\n            <Button onClick={() => {\n              Character.equipArtifacts(characterKey, newBuild.artifactIds)\n              forceUpdate?.()\n            }}>Equip All artifacts to current character</Button>\n            {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\n          </Card.Footer> : null}\n        </Card>\n      </Col>\n    </Row>\n    <Row className=\"mb-n2\">\n      <Col>\n        <Row>\n          <Col sm={6} lg={4} className=\"mb-2\">\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\n              <Card.Header>Artifact Set Effects</Card.Header>\n              <Card.Body className=\"flex-grow-1\">\n                <Row>\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\n                    <Col key={setKey} xs={12} className=\"mb-2\">\n                      <h5>{Artifact.getSetName(setKey)}</h5>\n                      <Row>\n                        {setNumKeyArr.map(setNumKey => {\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\n                          let conditionalNum = 0;\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\n                          if (conditional) {\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\n                          }\n                          let conditionalElement = <ConditionalSelector\n                            disabled={newBuild ? true : false}\n                            conditional={conditional}\n                            conditionalNum={conditionalNum}\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\n                          />\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\n                            {setStats ? <Row>\n                              {Object.entries(setStats).map(([statKey, val]) =>\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\n                            </Row> : null}\n                          </Col>\n                        })}\n                      </Row>\n                    </Col>\n                  )}\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n          {Artifact.getSlotKeys().map(slotKey =>\n            build.artifactIds[slotKey] ? <Col sm={6} lg={4} key={build.artifactIds[slotKey]} className=\"mb-2\">\n              <ArtifactCard artifactId={build.artifactIds[slotKey]} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\n            </Col> : null\n          )}\n        </Row>\n      </Col>\n    </Row>\n  </>\n}\nexport default CharacterArtifactPane\n","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport React, { useState } from \"react\"\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\nimport Assets from \"../../Assets/Assets\"\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\nimport CustomFormControl from \"../../Components/CustomFormControl\"\nimport { Stars } from \"../../Components/StarDisplay\"\nimport StatDisplay from \"../../Components/StatDisplay\"\nimport { StatIconEle } from \"../../Components/StatIcon\"\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\nimport { LevelNameData } from \"../../Data/WeaponData\"\nimport Stat from \"../../Stat\"\nimport { clamp } from \"../../Util/Util\"\nimport Weapon from \"../../Weapon/Weapon\"\nimport Character from \"../Character\"\nimport StatInput from \"../StatInput\"\nexport default function CharacterOverviewPane(props) {\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\n  let [editLevel, setEditLevel] = useState(false)\n  let elementKey = Character.getElementalKey(characterKey)\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\n  let level = Character.getStatValueWithOverride(character, \"characterLevel\")\n  return <Row>\n    <Col xs={12} md={3} >\n      {/* Image card with star and name and level */}\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\n        <Card.Body>\n          <Row>\n            <Col xs={12}>\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\n            </Col>\n            <Col>\n              {editLevel ? <Row><Col>\n                <InputGroup >\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <CustomFormControl onValueChange={(val) => setOverride(\"characterLevel\", clamp(val, 1, 90))} value={level} />\n                  <InputGroup.Append>\n                    <Button>\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"characterLevel\", Character.getLevel(character.levelKey))} />\n                    </Button>\n                  </InputGroup.Append>\n                  <InputGroup.Append>\n                    <OverlayTrigger\n                      placement=\"bottom\"\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\n                    >\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\n                        <span><FontAwesomeIcon icon={faSave} /></span>\n                      </Button>\n                    </OverlayTrigger>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Col></Row> :\n                <Row>\n                  <Col>\n                    <h5>Level: {level}</h5>\n                  </Col>\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\n                    </Button>\n                  </Col> : null}\n                </Row>}\n            </Col>\n            <Col xs={12}>\n              <Row>\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\n                <Col>\n                  <Row className=\"px-2\">\n                    {[...Array(6).keys()].map(i =>\n                      <Col xs={4} className=\"p-1\" key={i}>\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\n                      </Col>)}\n                  </Row>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </Col>\n    <Col xs={12} md={9} >\n      <WeaponStatsEditorCard {...props} />\n      <MainStatsCards {...props} />\n    </Col>\n  </Row >\n}\nfunction StatItem({ statKey, val }) {\n  if (!statKey) return null\n  return <Col xs={12} lg={6} className=\"px-3\">\n    <span><b>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</b></span>\n    <span className={`float-right text-right text-${Stat.getStatVariant(statKey)}`} >{val?.toFixed?.(Stat.fixedUnit(statKey)) || val}{Stat.getStatUnit(statKey)}</span>\n  </Col>\n}\nfunction WeaponStatsCard({ title, stats = {}, finalStats = {} }) {\n  if (Object.keys(stats ?? {}).length === 0) return null\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\n    <Card.Body className=\"py-2 px-0\"><Row>\n      {Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? <React.Fragment key={key} >{Object.entries(val ?? {}).map(([mkey, modifier]) =>\n        <StatItem key={mkey} statKey={mkey} val={Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0)} />)}</React.Fragment>\n        : <StatItem key={key} statKey={key} val={val} />)}\n    </Row></Card.Body>\n  </Card>\n}\nfunction WeaponStatsEditorCard(props) {\n  let [editing, SetEditing] = useState(false)\n  let [showDescription, setShowDescription] = useState(false)\n  let { character, character: { characterKey, weapon = {} }, editable, setState, equippedBuild, newBuild } = props\n\n  //choose which one to display stats for\n  let build = newBuild ? newBuild : equippedBuild\n\n  const setStateWeapon = (key, value) => setState(state => {\n    //reset the conditionalNum when we switch weapons\n    if (key === \"key\") state.weapon.conditionalNum = 0\n    state.weapon[key] = value\n    return { weapon: state.weapon }\n  })\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex, undefined)\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum, undefined)\n  let conditional = Weapon.getWeaponConditional(weapon.key)\n  let conditionalNum = weapon.conditionalNum;\n  let conditionalEle = <ConditionalSelector\n    conditional={conditional}\n    conditionalNum={conditionalNum}\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\n    defEle={<span>{weaponPassiveName}</span>}\n  />\n\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n    <Card.Header>\n      <Row>\n        <Col>\n          <span>Weapon</span>\n        </Col>\n        <Col xs=\"auto\">\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\n          </Button>\n        </Col>\n        {editable ? <Col xs=\"auto\" >\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\n          </Button>\n        </Col> : null}\n      </Row>\n    </Card.Header>\n    <Card.Body>\n      <Row className=\"mb-2\">\n        <Col xs={12} md={3}>\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\n        </Col>\n        {editing ? <Col>\n          <Row>\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\n                      {weaponObj.name}\n                    </Dropdown.Item>\n                  )}\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\n                </React.Fragment>)}\n              </DropdownButton>\n            </Col>\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\n                <Dropdown.ItemText>\n                  <span>Select Weapon Level</span>\n                </Dropdown.ItemText>\n                {Object.entries(LevelNameData).map(([key, name]) =>\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\n                    {name}\n                  </Dropdown.Item>)}\n              </DropdownButton>\n            </Col>\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\n                <Dropdown.ItemText>\n                  <span>Select Weapon Refinement</span>\n                </Dropdown.ItemText>\n                <Dropdown.Divider />\n                {[...Array(5).keys()].map(key =>\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\n                    {`Refinement ${key + 1}`}\n                  </Dropdown.Item>)}\n              </DropdownButton>\n            </Col>}\n            <Col xs={12} className=\"mb-2\">\n              <StatInput\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\n                placeholder=\"Weapon Attack\"\n                value={weaponDisplayMainVal}\n                percent={false}\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\n              />\n            </Col>\n            {subStatKey && <Col xs={12} className=\"mb-2\">\n              <StatInput\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\n                placeholder=\"Weapon Substat\"\n                value={weaponDisplaySubVal}\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\n              />\n            </Col>}\n          </Row>\n        </Col> :\n          <Col>\n            <Row className=\"mb-2\"><Col>\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\n            </Col></Row>\n            <Row>\n              <Col>{conditionalEle}</Col>\n            </Row>\n\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build?.finalStats, character)}</p>\n            <WeaponStatsCard title={\"Main Stats\"} stats={{ atk: weaponDisplayMainVal, [subStatKey]: weaponDisplaySubVal }} finalStats={build?.finalStats} />\n            <WeaponStatsCard title={\"Bonus Stats\"} stats={weaponBonusStats} finalStats={build?.finalStats} />\n            <WeaponStatsCard title={\"Conditional Stats\"} stats={conditionalStats} finalStats={build?.finalStats} />\n          </Col>}\n      </Row>\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\n    </Card.Body>\n  </Card>\n}\n\nfunction MainStatsCards(props) {\n  let { editable, character, setOverride, equippedBuild, newBuild } = props\n\n  let [editing, SetEditing] = useState(false)\n  let [editingOther, SetEditingOther] = useState(false)\n\n  let additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\n  displayStatKeys.push(...additionalKeys)\n  const editStatKeys = [\"characterHP\", \"hp\", \"hp_\", \"characterATK\", \"atk\", \"atk_\", \"characterDEF\", \"def\", \"def_\"]\n  editStatKeys.push(...additionalKeys)\n  const otherStatKeys = [\"stamina\", \"incHeal_\", \"powShield_\", \"cdRed_\"]\n\n  Character.getElementalKeys().forEach(ele => {\n    otherStatKeys.push(`${ele}_dmg_`)\n    otherStatKeys.push(`${ele}_res_`)\n  })\n  const miscStatkeys = [\"normal_dmg_\", \"charged_dmg_\", \"skill_dmg_\", \"burst_dmg_\", \"skill_critRate_\", \"burst_critRate_\", \"dmg_\", \"moveSPD_\", \"atkSPD_\", \"weakspotDMG_\"]\n\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\n\n  const isPercentSpecialStatSelect = Stat.getStatUnit(specializedStatKey) === \"%\"\n\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\n  return <>\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n      <Card.Header>\n        <Row>\n          <Col>\n            <span>Main Base Stats</span>\n          </Col>\n          {editable ? <Col xs=\"auto\" >\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\n            </Button>\n          </Col> : null}\n        </Row>\n      </Card.Header>\n      {editing ?\n        <Card.Body>\n          <Row className=\"mb-2\">\n            {editStatKeys.map(statKey =>\n              <Col lg={6} xs={12} key={statKey}>\n                <StatInput\n                  className=\"mb-2\"\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\n                  value={Character.getStatValueWithOverride(character, statKey)}\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\n                  onValueChange={(value) => setOverride(statKey, value)}\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\n                />\n              </Col>)}\n\n            <Col lg={6} xs={12}>\n              <InputGroup>\n                <DropdownButton\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\n                  as={InputGroup.Prepend}\n                >\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\n                  {CharacterSpecializedStatKey.map(key =>\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\n                      {Stat.getStatNameWithPercent(key)}\n                    </Dropdown.Item>)}\n                </DropdownButton>\n                <CustomFormControl float={isPercentSpecialStatSelect}\n                  placeholder=\"Character Special Stat\"\n                  value={Character.getStatValueWithOverride(character, \"specializedStatVal\")}\n                  onValueChange={(value) => setOverride(\"specializedStatVal\", value)} />\n                {isPercentSpecialStatSelect && (<InputGroup.Append>\n                  <InputGroup.Text>%</InputGroup.Text>\n                </InputGroup.Append>)}\n              </InputGroup>\n            </Col>\n          </Row>\n        </Card.Body> :\n        <Card.Body>\n          <Row className=\"mb-2\">\n            {displayStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}\n            {specializedStatVal ? <Col lg={6} xs={12}>\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\n            </Col> : null}\n          </Row>\n        </Card.Body>\n      }\n    </Card >\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n      <Card.Header>\n        <Row>\n          <Col>\n            <span>Other Stats</span>\n          </Col>\n          {editable ? <Col xs=\"auto\" >\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\n            </Button>\n          </Col> : null}\n        </Row>\n      </Card.Header>\n      {editingOther ?\n        <Card.Body>\n          <Row className=\"mb-2\">\n            {otherStatKeys.map(statKey =>\n              <Col lg={6} xs={12} key={statKey}>\n                <StatInput\n                  className=\"mb-2\"\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\n                  value={Character.getStatValueWithOverride(character, statKey)}\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\n                  onValueChange={(value) => setOverride(statKey, value)}\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\n                />\n              </Col>)}\n          </Row>\n        </Card.Body> :\n        <Card.Body>\n          <Row className=\"mb-2\">{otherStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\n        </Card.Body>\n      }\n    </Card>\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n      <Card.Header>\n        <Row>\n          <Col>\n            <span>Misc Stats</span>\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Body>\n        <Row className=\"mb-2\">{miscStatkeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\n      </Card.Body>\n    </Card>\n  </>\n}\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from 'react';\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\nimport Assets from \"../../Assets/Assets\";\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\nimport Stat from \"../../Stat\";\nimport { ElementToReactionKeys } from \"../../StatData\";\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\nimport Character from \"../Character\";\nimport DamageOptionsAndCalculation from \"./DamageOptionsAndCalculation\";\n\nexport default function CharacterTalentPane(props) {\n  let { character, character: { characterKey, levelKey, constellation }, editable, setState, setOverride, newBuild, equippedBuild } = props\n\n  let ascension = Character.getAscension(levelKey)\n\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\n\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\n\n  let skillDisplayProps = { ...props, ascension }\n\n  return <>\n    <Row><Col xs={12} className=\"mb-2\">\n      <DamageOptionsAndCalculation {...{ character, setState, setOverride, newBuild, equippedBuild }} />\n    </Col></Row>\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\n    <Row>\n      {/* auto, skill, burst */}\n      {skillBurstList.map(([tKey, tText]) =>\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\n          <SkillDisplayCard\n            {...skillDisplayProps}\n            talentKey={tKey}\n            subtitle={tText}\n          />\n        </Col>)}\n      {Character.getTalent(characterKey, \"sprint\", false) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\n        <SkillDisplayCard\n          {...skillDisplayProps}\n          talentKey=\"sprint\"\n          subtitle=\"Alternative Sprint\"\n        />\n      </Col>}\n    </Row>\n    <Row>\n      {/* passives */}\n      {passivesList.map(([tKey, tText, asc]) => {\n        let enabled = ascension >= asc\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\n          <SkillDisplayCard\n            {...skillDisplayProps}\n            talentKey={tKey}\n            subtitle={tText}\n          />\n        </Col>\n      })}\n    </Row>\n    <Row>\n      <Col>\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\n      </Col>\n    </Row>\n    <Row className=\"mb-n2\">\n      {/* constellations */}\n      {[...Array(6).keys()].map(i => {\n        let tKey = `constellation${i + 1}`\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\n          <SkillDisplayCard\n            {...skillDisplayProps}\n            talentKey={tKey}\n            subtitle={`Contellation Lv. ${i + 1}`}\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\n          />\n        </Col>\n      })}\n    </Row>\n  </>\n}\nconst ReactionComponents = {\n  superconduct_hit: SuperConductCard,\n  electrocharged_hit: ElectroChargedCard,\n  overloaded_hit: OverloadedCard,\n  swirl_hit: SwirlCard,\n  shattered_hit: ShatteredCard,\n  crystalize_hit: CrystalizeCard,\n}\nfunction ReactionDisplay({ character: { characterKey, reactionMode = \"none\" }, newBuild, equippedBuild, setState }) {\n  let build = newBuild ? newBuild : equippedBuild\n  let charEleKey = Character.getElementalKey(characterKey)\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\n  if (!eleInterArr.includes(\"shattered_hit\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shattered_hit\")\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n    <Card.Body className=\"px-3 py-2\">\n      <Row>\n        <Col ><Row className=\"mb-n2\">\n          {eleInterArr.map(key => {\n            let Ele = ReactionComponents[key]\n            if (!Ele) return null\n            let val = build?.finalStats?.[key]\n            val = val?.toFixed?.(Stat.fixedUnit(key)) || val\n            return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele value={val} /></Col>\n          })}\n        </Row></Col>\n      </Row>\n\n    </Card.Body>\n  </Card>\n}\nfunction SuperConductCard({ value }) {\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\n    <span className=\"text-superconduct\">{Stat.getStatName(\"superconduct_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {value}</span>\n  </Card.Body></Card>\n}\nfunction ElectroChargedCard({ value }) {\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\n    <span className=\"text-electrocharged\">{Stat.getStatName(\"electrocharged_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {value}</span>\n  </Card.Body></Card>\n}\nfunction OverloadedCard({ value }) {\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\n    <span className=\"text-overloaded\">{Stat.getStatName(\"overloaded_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {value}</span>\n  </Card.Body></Card>\n}\nfunction SwirlCard({ value }) {\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\n    <span className=\"text-swirl\">{Stat.getStatName(\"swirl_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /> {value}</span>\n  </Card.Body></Card>\n}\nfunction ShatteredCard({ value }) {\n  const information = <OverlayTrigger\n    placement=\"top\"\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\n  >\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\n  </OverlayTrigger>\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\n    <span className=\"text-shattered\">{Stat.getStatName(\"shattered_hit\")} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {value}</span>\n  </Card.Body></Card>\n}\nfunction CrystalizeCard({ value }) {\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\n    <span className=\"text-crystalize\">{Stat.getStatName(\"crystalize_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {value}</span>\n  </Card.Body></Card>\n}\n\nfunction modifiersToFields(modifiers, finalStats = {}) {\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\n    text: Stat.getStatName(mStatKey),\n    variant: Stat.getStatVariant(mStatKey),\n    value: Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0),\n    formulaText: <span>{Object.entries(modifier ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, finalStats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)}</span>,\n    fixed: Stat.fixedUnit(mStatKey)\n  }))\n}\nfunction statsToFields(stats, finalStats = {}) {\n  return Object.entries(stats).map(([statKey, statVal]) =>\n    statKey === \"modifiers\" ? modifiersToFields(statVal, finalStats) : { text: Stat.getStatName(statKey), variant: Stat.getStatVariant(statKey), value: statVal, fixed: Stat.fixedUnit(statKey) }\n  ).flat()\n}\n\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\nfunction SkillDisplayCard(props) {\n  let { character, character: { characterKey, constellation, talentLevelKeys, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\n  let { onClickTitle = null, ...otherProps } = props\n  let build = newBuild ? newBuild : equippedBuild\n  let header = null\n  let infuseBtn = null\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\n    let eleKey = Character.getElementalKey(characterKey)\n    infuseBtn = <Col xs=\"auto\">\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\n        {autoInfused ?\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\n          : \"Not Infused\"}\n      </Button>\n    </Col>\n  }\n\n  let talentLvlKey = 0\n  if (talentKey in talentLevelKeys) {\n    const talentLvlKeyRaw = talentLevelKeys[talentKey]\n    const levelBoost = Character.getTalentLevelBoost(characterKey, talentKey, constellation)\n    talentLvlKey = talentLvlKeyRaw + levelBoost\n    if (editable) {\n      const setTalentLevel = (tKey, tLvl) => setState(state => {\n        const stateTalentLevelKeys = state.talentLevelKeys || {}\n        stateTalentLevelKeys[tKey] = tLvl\n        return { talentLevelKeys: stateTalentLevelKeys }\n      })\n      header = <Card.Header>\n        <Row>\n          <Col xs=\"auto\">\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\n            </DropdownButton>\n          </Col>\n          {infuseBtn}\n        </Row>\n      </Card.Header>\n    } else {\n      header = <Card.Header>\n        <Row>\n          <Col xs=\"auto\">\n            {`Talent Level: ${talentLvlKey + 1}`}\n          </Col>\n          <Col xs=\"auto\">\n            {infuseBtn}\n          </Col>\n        </Row>\n      </Card.Header>\n    }\n  }\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\n  const statsEle = talentStats && <Row><Col>\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\n      <ListGroup className=\"text-white\" variant=\"flush\">\n        {statsToFields(talentStats, build?.finalStats).map((field, i) =>\n          <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\n      </ListGroup>\n    </Card>\n  </Col></Row>\n\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\n    {header}\n    <Card.Body>\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\n        </Col>\n        <Col className=\"flex-grow-1\">\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\n        </Col>\n      </Row>\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\n        if (typeof section === \"function\")\n          section = section(constellation, ascension)\n        if (!section) return null\n\n        let talentText = section.text\n        if (typeof talentText === \"function\")\n          talentText = talentText(talentLvlKey, build.finalStats, character)\n        let fields = section.fields || []\n\n        let conditional = section.conditional;\n        if (typeof conditional === \"function\")\n          conditional = conditional(talentLvlKey, constellation, ascension)\n        let conditionalEle = null\n        if (conditional) {\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\n          let conditionalFields = []\n          if (conditionalNum) {\n            let conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\n            conditionalFields = [...Character.getTalentConditionalFields(conditional, conditionalNum, []), ...statsToFields(conditionalStats, build?.finalStats)]\n          }\n          let setConditional = (conditionalNum) => setState(state =>\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\n          conditionalEle = <Col xs={12}>\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\n              <Card.Header>\n                <ConditionalSelector disabled={!editable}\n                  conditional={conditional}\n                  conditionalNum={conditionalNum}\n                  setConditional={setConditional}\n                  defEle={<span>{conditional.condition}</span>} />\n              </Card.Header>\n              <ListGroup className=\"text-white\" variant=\"flush\">\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i} index={i} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\n              </ListGroup>\n            </Card>\n          </Col>\n        }\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\n          <div className=\"mb-2\">{talentText}</div>\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\n          </ListGroup>}\n        </Col>{conditionalEle}</Row>\n      })}\n      {statsEle}\n    </Card.Body>\n  </Card>\n}\nfunction FieldDisplay({ character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild }) {\n  let build = newBuild ? newBuild : equippedBuild\n  if (typeof field === \"function\")\n    field = field(constellation, ascension)\n  if (!field) return null\n\n  let fieldText = field.text\n  if (typeof fieldText === \"function\")\n    fieldText = fieldText?.(talentLvlKey, build.finalStats)\n\n  let fieldVariant = field.variant || \"\"\n  if (typeof fieldVariant === \"function\")\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats)\n\n  let fieldBasic = field.formulaText\n  if (typeof fieldBasic === \"function\")\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats)\n  if (fieldBasic)\n    fieldBasic = <OverlayTrigger\n      placement=\"top\"\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\n    >\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\n    </OverlayTrigger>\n\n  let fieldVal = null\n  if (field.value)\n    fieldVal = typeof field.value === \"function\" ? field.value?.(talentLvlKey, build.finalStats) : field.value\n  else if (typeof field.formula === \"function\")\n    fieldVal = field?.formula?.(talentLvlKey, build.finalStats)?.[0]?.(build.finalStats)\n\n  let fixedVal = field.fixed || 0\n  //compareAgainstEquipped\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\n    let fieldEquippedVal = field.value ? field.value : field.formula?.(talentLvlKey, equippedBuild.finalStats)?.[0]?.(equippedBuild.finalStats)\n\n    if (typeof fieldEquippedVal === \"function\")\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats)?.toFixed?.(fixedVal))\n    let diff = fieldVal - fieldEquippedVal\n    fieldVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\n  }\n\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\n    <div>\n      <span><b>{fieldText}</b>{fieldBasic}</span>\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) || fieldVal}</span>\n    </div>\n  </ListGroup.Item>\n}\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, Image, Nav, Tab } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\nimport Row from 'react-bootstrap/Row';\nimport Artifact from '../Artifact/Artifact';\nimport { WeaponLevelKeys } from '../Data/WeaponData';\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\nimport { deepClone } from '../Util/Util';\nimport Weapon from '../Weapon/Weapon';\nimport Character from './Character';\nimport CharacterDatabase from './CharacterDatabase';\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\n\nconst CustomMenu = React.forwardRef(\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n    return (\n      <div\n        ref={ref}\n        style={{ style, minWidth: \"25rem\" }}\n        className={className}\n        aria-labelledby={labeledBy}\n      >\n        <Row>\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\n        </Row>\n      </div>\n    );\n  },\n);\n\nexport default class CharacterDisplayCard extends React.Component {\n  constructor(props) {\n    super(props)\n    DatabaseInitAndVerify();\n    this.state = CharacterDisplayCard.getInitialState()\n    const { characterKey } = props\n    if (characterKey) {\n      const char = CharacterDatabase.get(characterKey) ?? { characterKey, weapon: CharacterDisplayCard.getIntialWeapon(characterKey) }\n      this.state = { ...this.state, ...char }\n    }\n  }\n\n  static initialState = {\n    characterKey: \"\",//the game character this is based off\n    levelKey: \"L1\",//combination of level and ascension\n    hitMode: \"hit\",\n    reactionMode: null,\n    equippedArtifacts: {},\n    artifactConditionals: [],\n    baseStatOverrides: {},//overriding the baseStat\n    weapon: {\n      key: \"\",\n      levelKey: WeaponLevelKeys[0],\n      refineIndex: 0,\n      overrideMainVal: 0,\n      overrideSubVal: 0,\n      conditionalNum: 0,\n    },\n    talentLevelKeys: {\n      auto: 0,\n      skill: 0,\n      burst: 0,\n    },\n    autoInfused: false,\n    talentConditionals: [],\n    constellation: 0,\n    compareAgainstEquipped: false//note: needs to be deleted when saving\n  }\n  static getIntialWeapon = (characterKey) => {\n    let weapon = deepClone(this.initialState.weapon)\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\n    return weapon\n  }\n\n  static getInitialState = () => deepClone(CharacterDisplayCard.initialState)\n  //UI will not update if the character is updated in DB. Components will have to call this to update this UI.\n  forceUpdateComponent = () => {\n    if (this.state.characterKey)\n      this.setState(CharacterDatabase.get(this.state.characterKey))\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\n  }\n  setCharacterKey = (characterKey) => {\n    this.props?.setCharacterKey?.(characterKey)\n    let state = CharacterDisplayCard.getInitialState()\n    let char = CharacterDatabase.get(characterKey)\n    if (char) state = { ...state, ...char }\n    else state = { ...state, characterKey, weapon: CharacterDisplayCard.getIntialWeapon(characterKey) }\n    this.setState(state)\n  }\n\n  setLevelKey = (levelKey) =>\n    this.setState({ levelKey })\n\n  setOverride = (statKey, value) => this.setState(state => {\n    let baseStatOverrides = state.baseStatOverrides\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\n    if (baseStatVal === value) {\n      delete baseStatOverrides[statKey]\n      return { baseStatOverrides }\n    } else {\n      baseStatOverrides[statKey] = value\n      return { baseStatOverrides }\n    }\n  })\n\n  setConstellation = (constellation) => this.setState({ constellation })\n  componentDidMount() {\n    Promise.all([\n      Character.getCharacterDataImport(),\n      Weapon.getWeaponDataImport(),\n      Artifact.getDataImport(),\n    ]).then(() => this.forceUpdate())\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.characterKey !== this.props.characterKey)\n      this.setCharacterKey(this.props.characterKey)\n    if (this.props.editable && this.state.characterKey) {\n      //save this.state as character to character db.\n      const state = deepClone(this.state)\n      delete state.compareAgainstEquipped\n      CharacterDatabase.updateCharacter(state)\n    }\n  }\n  render() {\n    let { footer, newBuild, editable, onClose, tabName } = this.props\n    let character = this.state\n    //transfer the hitmode/reactions over \n    if (newBuild?.finalStats) {\n      newBuild = deepClone(newBuild)\n      newBuild.finalStats.hitMode = character.hitMode;\n      newBuild.finalStats.reactionMode = character.reactionMode;\n    }\n\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\n    let equippedBuild = Character.calculateBuild(this.state)\n    let HeaderIconDisplay = characterKey ? <span >\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\n    </span> : <span>Select a Character</span>\n    const commonPaneProps = { character, newBuild, equippedBuild: !newBuild || compareAgainstEquipped ? equippedBuild : undefined, editable, setState: u => this.setState(u), setOverride: this.setOverride, forceUpdate: this.forceUpdateComponent }\n    // main CharacterDisplayCard\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\n      <Card.Header>\n        <Row>\n          <Col xs={\"auto\"} className=\"mr-auto\">\n            {/* character selecter/display */}\n            {editable ? <ButtonGroup>\n              <Dropdown as={ButtonGroup}>\n                <DropdownToggle as={Button}>\n                  {HeaderIconDisplay}\n                </DropdownToggle>\n                <Dropdown.Menu as={CustomMenu}>\n                  {Character.getAllCharacterKeys().map(charKey =>\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\n                      <span >\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\n                      </span>\n                    </Dropdown.Item>)}\n                </Dropdown.Menu>\n              </Dropdown>\n              <DropdownButton as={ButtonGroup} disabled={!characterKey} title={\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\n              }>\n                <Dropdown.ItemText>\n                  <span>Select Base Stat Template</span>\n                </Dropdown.ItemText>\n                {Character.getlevelKeys().map(lvlKey =>\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\n                  </Dropdown.Item>)}\n              </DropdownButton>\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"characterLevel\")}</span>}\n          </Col>\n          {/* Compare against new build toggle */}\n          {newBuild ? <Col xs=\"auto\">\n            <ButtonGroup>\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\n                <small>Show New artifact Stats</small>\n              </Button>\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\n                <small>Compare against equipped artifact</small>\n              </Button>\n            </ButtonGroup>\n          </Col> : null}\n          <Col xs=\"auto\" >\n            <Button variant=\"danger\" onClick={onClose}>\n              <FontAwesomeIcon icon={faTimes} /></Button>\n          </Col>\n        </Row>\n      </Card.Header>\n      {Boolean(characterKey) && <Card.Body>\n        <Tab.Container defaultActiveKey={tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\")} mountOnEnter={true} unmountOnExit={true}>\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\n            <Nav.Item >\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\n            </Nav.Item>\n            {newBuild ? <Nav.Item>\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\n            </Nav.Item> : null}\n            <Nav.Item>\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && !Character.hasTalentPage(characterKey)}>Talents {!Character.hasTalentPage(characterKey) && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\n            </Nav.Item>\n          </Nav>\n          <Tab.Content>\n            <Tab.Pane eventKey=\"character\">\n              <CharacterOverviewPane\n                setConstellation={this.setConstellation}\n                {...commonPaneProps}\n              />\n            </Tab.Pane>\n            <Tab.Pane eventKey=\"artifacts\" >\n              <CharacterArtifactPane {...{ ...commonPaneProps, newBuild: undefined, equippedBuild, }} />\n            </Tab.Pane>\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\n              <CharacterArtifactPane {...commonPaneProps} />\n            </Tab.Pane> : null}\n            <Tab.Pane eventKey=\"talent\">\n              <CharacterTalentPane {...commonPaneProps} />\n            </Tab.Pane>\n          </Tab.Content>\n        </Tab.Container>\n      </Card.Body>}\n      {footer && <Card.Footer>\n        {footer}\n      </Card.Footer>}\n    </Card>)\n  }\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"children\", \"type\", \"name\", \"value\", \"onChange\"]);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    if (!onChange) {\n      return;\n    }\n\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive && onChange) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/React.createElement(ButtonGroup, _extends({}, controlledProps, {\n    ref: ref,\n    toggle: true\n  }), map(children, function (child) {\n    var values = getValues();\n    var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n\n    var handler = function handler(e) {\n      return handleToggle(childVal, e);\n    };\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      type: type,\n      name: child.name || name,\n      checked: values.indexOf(childVal) !== -1,\n      onChange: chainFunction(childOnChange, handler)\n    });\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;","import { Container } from \"react-bootstrap\";\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\nimport '../StatDependency'\nexport default function TestDisplay() {\n  DatabaseInitAndVerify()\n  return <Container>\n    <CharacterDisplayCard editable characterKey=\"amber\" tabName=\"talent\" />\n  </Container>\n}\n","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\nfunction getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \n}\nfunction getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\nconst loadFromLocalStorage = (key) => {\n  let data = localStorage.getItem(key)\n  if (!data) return null\n  return JSON.parse(data)\n}\nconst saveToLocalStorage = (key, obj) =>\n  localStorage.setItem(key, JSON.stringify(obj));\nconst deepClone = (obj) =>\n  JSON.parse(JSON.stringify(obj))\n\nconst closeEnoughFloat = (a, b) =>\n  Math.abs(a - b) <= 0.101\n\nconst closeEnoughInt = (a, b) =>\n  Math.abs(a - b) <= 1\nconst clamp = (val, low, high) => {\n  if (val < low) return low;\n  if (val > high) return high;\n  return val\n}\nconst getArrLastElement = (arr) =>\n  arr.length ? arr[arr.length - 1] : null\n\nconst clamp01 = (val) => clamp(val, 0, 1)\nconst clampPercent = (val) => clamp(val, 0, 100)\n\n//use to pretty print timestamps, or anything really.\nfunction strPadLeft(string, pad, length) {\n  return (new Array(length + 1).join(pad) + string).slice(-length);\n}\n\n//fuzzy compare strings. longer the distance, the higher the mismatch.\nfunction hammingDistance(str1, str2) {\n  var dist = 0;\n  str1 = str1.toLowerCase();\n  str2 = str2.toLowerCase();\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\n    let match = true\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\n      match = false\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\n      match = true\n    if (!match) dist++\n  }\n  return dist;\n}\n\n//multiplies every numberical value in the obj by a multiplier.\nfunction objMultiplication(obj, multi) {\n  Object.keys(obj).forEach(prop => {\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\n  })\n}\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\nconst getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\nexport {\n  getRandomInt,\n  getRandomIntInclusive,\n  getRandomArbitrary,\n  getRandomElementFromArray,\n  loadFromLocalStorage,\n  saveToLocalStorage,\n  deepClone,\n  closeEnoughFloat,\n  closeEnoughInt,\n  clamp,\n  clamp01,\n  clampPercent,\n  getArrLastElement,\n  strPadLeft,\n  hammingDistance,\n  objMultiplication,\n  getObjectKeysRecursive\n}","import { Formulas, StatData } from \"./StatData\"\nimport { ReactionMatrix, hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\n\nexport default class Stat {\n  //do not instantiate.\n  constructor() {\n    if (this instanceof Stat)\n      throw Error('A static class cannot be instantiated.');\n  }\n  static getStatName = (key, defVal = \"\") =>\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\n  static getStatNamePretty = (key, defVal = \"\") =>\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\n  static getStatNameRaw = (key, defVal = \"\") =>\n    StatData[key]?.name || defVal\n  static getStatNameWithPercent = (key, defVal = \"\") => {\n    let name = this.getStatName(key, defVal)\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\n      name += \"%\"\n    return name;\n  }\n  static getStatVariant = (key, defVal = \"\") =>\n    StatData[key]?.variant || defVal\n  static getStatUnit = (key, defVal = \"\") =>\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\n\n  static fixedUnit = (key) => {\n    if (StatData[key]?.unit === \"multi\") return 3\n    let unit = Stat.getStatUnit(key)\n    return unit === \"%\" ? 1 : 0\n  }\n  static printStat = (statKey, stats) =>\n    f({ stats, expand: false }, statKey)\n\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\n    let formulaKeys = Object.keys(FormulaText)\n    let newModifiersKeys = Object.keys(modifiers).filter(x => !formulaKeys.includes(x))\n    return [...newModifiersKeys, ...formulaKeys].filter((key) => statList.includes(key))\n  }\n\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\n    if (typeof FormulaText?.[statKey] === \"function\")\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\n    else\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\n  }\n}\n//generate html tags based on tagged variants of the statData\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\n\nfunction f(options, statKey) {\n  let { stats, expand = true } = options\n  if (!stats) return\n  if (expand && FormulaText?.[statKey])\n    return <span>( {FormulaText[statKey](options)} )</span>\n  let statName = Stat.getStatNamePretty(statKey)\n  let statUnit = Stat.getStatUnit(statKey)\n  let fixedUnit = Stat.fixedUnit(statKey)\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\n}\n\nfunction reactionMatrixElementRenderer(o, val, i) {\n  let sign = val < 0 ? \" - \" : \" + \";\n  let disVal = Math.abs(val)\n  let powerText = \"\"\n  if (i > 1) powerText = <span> * ( {f(o, \"characterLevel\")} )^{i}</span>\n  if (i === 1) powerText = <span> * {f(o, \"characterLevel\")}</span>\n  return <span key={i}>{sign}{disVal}{powerText}</span>\n}\n\n// Base Formula\n\nconst FormulaText = {\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\n\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\n\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\n}\n\n// Enemy RES\n\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\n    if (o.stats[`${ele}_enemyImmunity`])\n      return <span>0 (immune)</span>\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\n  }\n})\n\n// Crit Rate\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\n})\n\n// Hit\n\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n  FormulaText[`${ele}_elemental_hit_multi`] = (o) => <span>( 100% + {f(o, `dmg_`)} * {f(o, `${ele}_dmg_`)} ) * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\n  FormulaText[`${ele}_elemental_hit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_hit_multi`)}</span>\n  FormulaText[`${ele}_elemental_critHit_multi`] = (o) => <span>( 100% + {f(o, `critDMG_`)} ) * {f(o, `${ele}_elemental_hit_multi`)}</span>\n  FormulaText[`${ele}_elemental_critHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_critHit_multi`)}</span>\n  FormulaText[`${ele}_elemental_avgHit_multi`] = (o) => <span>( 100% + {f(o, `critDMG_`)} * {f(o, `critRate_`)} ) * {f(o, `${ele}_elemental_hit_multi`)}</span>\n  FormulaText[`${ele}_elemental_avgHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_avgHit_multi`)}</span>\n\n  Object.entries(hitMoves).forEach(([move, moveName]) => {\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>( 100% + {f(o, `dmg_`)} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)} ) * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\n    FormulaText[`${ele}_${move}_hit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>( 100% + {f(o, `critDMG_`)} ) * {f(o, `${ele}_${move}_hit_multi`)}</span>\n    FormulaText[`${ele}_${move}_critHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_critHit_multi`)}</span>\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>( 100% + {f(o, `critDMG_`)} * {f(o, `final_${move}_critRate_`)} ) * {f(o, `${ele}_${move}_hit_multi`)}</span>\n    FormulaText[`${ele}_${move}_avgHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_avgHit_multi`)}</span>\n  })\n})\n\n// Reaction\n\nObject.assign(FormulaText, {\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\n})\nObject.entries(amplifyingReactions).forEach(([reaction, [name, variants]]) => {\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\n    // Move them to the right position\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\n\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      FormulaText[`${ele}_${reaction}_elemental_${type}`] = (o) => <span>{f(o, `${ele}_elemental_${type}`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, `${ele}_${move}_${type}`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\n      })\n    })\n  })\n})\n\nObject.assign(FormulaText, {\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\n})\nObject.entries(transformativeReactions).forEach(([reaction, [reactionName, ele, baseMulti]]) => {\n  FormulaText[`${reaction}_multi`] = (o) => ReactionMatrix[reaction].map((val, i) => reactionMatrixElementRenderer(o, val, i))\n  FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\n})\nObject.assign(FormulaText, {\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\n  crystalize_multi: (o) => ReactionMatrix[\"crystalize\"].map((val, i) => reactionMatrixElementRenderer(o, val, i)),\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\n})\n\n//checks for development\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\n})\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\n})\n","import ElementalData from \"../Data/ElementalData\"\n\n/**\n * Generate all set of artifacts-by-slots based on the filters\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\n *\n */\nexport function artifactSetPermutations(artifactsBySlot, setFilters) {\n  const setKeys = new Set(setFilters.map(i => i.key)), filteredArtifactsBySlot = {}\n  const slotKeys = Object.keys(artifactsBySlot)\n\n  for (const slotKey of slotKeys) {\n    let artifactsBySet = {}\n    for (const artifact of artifactsBySlot[slotKey]) {\n      if (setKeys.has(artifact.setKey)) {\n        if (artifactsBySet[artifact.setKey]) artifactsBySet[artifact.setKey].push(artifact)\n        else artifactsBySet[artifact.setKey] = [artifact]\n      } else {\n        if (artifactsBySet[null]) artifactsBySet[null].push(artifact)\n        else artifactsBySet[null] = [artifact]\n      }\n    }\n    filteredArtifactsBySlot[slotKey] = Object.freeze(artifactsBySet)\n  }\n\n  const setCount = {}, accu = {}, result = []\n\n  function slotPerm(index) {\n    if (index >= slotKeys.length) {\n      for (const { key, num } of setFilters)\n        if ((setCount[key] ?? 0) < num)\n          return\n      result.push({ ...accu })\n      return\n    }\n\n    const slotKey = slotKeys[index]\n    let artifactsBySet = filteredArtifactsBySlot[slotKey]\n    for (const setKey in artifactsBySet) {\n      setCount[setKey] = (setCount[setKey] ?? 0) + 1\n      accu[slotKey] = artifactsBySet[setKey]\n      slotPerm(index + 1)\n      setCount[setKey] -= 1\n    }\n  }\n\n  slotPerm(0)\n  return result\n}\n\n/**\n * Compute number of all artifact permutations based on the filters\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\n */\nexport function calculateTotalBuildNumber(artifactsBySlot, setFilters) {\n  return artifactSetPermutations(artifactsBySlot, setFilters).reduce((accu, artifactsBySlot) =>\n    accu + Object.entries(artifactsBySlot).reduce((accu, artifacts) => accu * artifacts[1].length, 1)\n    , 0)\n}\n\n/**\n * @callback artifactCallback\n * @param {Object.<artifactKey, artifact>} artifacts - the list of artifacts\n * @param {stats} stats - the total stats for the artifacts\n */\n\n/**\n * Generate all artifact permutations and accumulate the stats\n * @param {stats} initialStats - initial stats before any artifact is added\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - the list of the set effects\n * @param {artifactCallback} callback - the functions called with each permutation\n */\nexport function artifactPermutations(initialStats, artifactsBySlot, artifactSetEffects, callback) {\n  const slotKeys = Object.keys(artifactsBySlot), setCount = {}, accu = {}\n  function slotPerm(index, stats) {\n    if (index >= slotKeys.length) {\n      callback(accu, stats)\n      return\n    }\n\n    let slotKey = slotKeys[index]\n    for (const artifact of artifactsBySlot[slotKey]) {\n      let newStats = { ...stats }\n      accumulate(slotKey, artifact, setCount, accu, newStats, artifactSetEffects)\n      slotPerm(index + 1, newStats)\n      setCount[artifact.setKey] -= 1\n    }\n  }\n\n  slotPerm(0, initialStats)\n}\n\nfunction accumulate(slotKey, art, setCount, accu, stats, artifactSetEffects) {\n  let setKey = art.setKey\n  accu[slotKey] = art\n  setCount[setKey] = (setCount[setKey] ?? 0) + 1\n\n  // Add artifact stats\n  if (art.mainStatKey in stats) stats[art.mainStatKey] += art.mainStatVal\n  art.substats.forEach((substat) => {\n    if (substat?.key in stats) stats[substat.key] += substat.value\n  })\n\n  // Add set effects\n  let setEffect = artifactSetEffects[setKey]?.[setCount[setKey]]\n  setEffect && Object.entries(setEffect).forEach(([statKey, val]) => {\n    if (statKey in stats) stats[statKey] += val\n  })\n}\n\n/**\n  * Create statKey in the form of ${ele}_elemental_${type} for elemental DMG, ${ele}_${src}_${type} for talent DMG.\n  * @param {string} skillKey - The DMG src. Can be \"norm\",\"skill\". Use an elemental to specify a elemental hit \"physical\" -> physical_elemental_{type}. Use \"elemental\" here to specify a elemental hit of character's element/reactionMode\n  * @param {*} stats - The character. Will extract hitMode, autoInfused...\n  * @param {*} elemental - Override the hit to be the character's elemental, that is not part of infusion.\n  */\nexport function getTalentStatKey(skillKey, stats, elemental = false) {\n  const { hitMode = \"\", autoInfused = false, reactionMode = null, characterEle = \"anemo\", weaponType = \"sword\" } = stats\n  if (Object.keys(ElementalData).includes(skillKey)) return `${skillKey}_elemental_${hitMode}`//elemental DMG\n  if (!elemental) elemental = weaponType === \"catalyst\" || autoInfused\n  let eleKey = \"physical\"\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\n    eleKey = (reactionMode ? reactionMode : characterEle)\n  return `${eleKey}_${skillKey}_${hitMode}`\n}\n\nexport function getTalentStatKeyVariant(skillKey, stats, elemental = false) {\n  if (Object.keys(ElementalData).includes(skillKey)) return skillKey\n  const { autoInfused = false, characterEle = \"anemo\", weaponType = \"sword\" } = stats\n  let { reactionMode } = stats\n  //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\n  if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\n    reactionMode = \"vaporize\"\n  else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\n    reactionMode = \"melt\"\n  if (!elemental) elemental = weaponType === \"catalyst\" || autoInfused\n  let eleKey = \"physical\"\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\n    eleKey = (reactionMode ? reactionMode : characterEle)\n  return eleKey\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import Artifact from \"../Artifact/Artifact\";\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\nimport ElementalData from \"../Data/ElementalData\";\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\nimport { GetDependencies } from \"../StatDependency\";\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\nimport { deepClone } from \"../Util/Util\";\nimport Weapon from \"../Weapon/Weapon\";\nimport CharacterDatabase from \"./CharacterDatabase\";\n\nexport default class Character {\n  //do not instantiate.\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\n  static getCharacterDataImport = () => CharacterDataImport\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\n    let { characterKey, levelKey } = character\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return this.getLevel(levelKey)\n    if (statKey.includes(\"enemyRes_\")) return 10\n    if (statKey in characterStatBase) return characterStatBase[statKey]\n    let characterObj = this.getCDataObj(characterKey)\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\n    return defVal\n  }\n\n  static getCDataObj = (charKey) => CharacterData[charKey];\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\n\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\n  static getElementalKeys = () => Object.keys(ElementalData)\n  static getElementalKeysWithoutPhysical = () => this.getElementalKeys().filter(e => e !== \"physical\")\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\n\n  //LEVEL\n  static getlevelKeys = () => Object.keys(LevelsData)\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\n\n  //SPECIALIZED STAT\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\n  //ASSETS\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\n\n  //talents\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\n\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\n    //so far we only get level boost from constellations, so only burst and skills.\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\n    let talents = this.getCDataObj(characterKey)?.talent || {}\n    for (let i = 1; i <= constellation; i++) {\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\n      if (boostEntry) return boostEntry[1]\n    }\n    return defVal\n  }\n\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\n  static getTalentDocumentSections = (charKey, talentKey, defVal = []) => {\n    const character = CharacterDatabase.get(charKey);\n    if (!character) return defVal\n    const { constellation = 0, levelKey = Object.keys(LevelsData)[0] } = character\n    const ascension = Character.getAscension(levelKey)\n    return this.getTalentDocument(charKey, talentKey).map(section => typeof section === \"function\" ? section(constellation, ascension) : section)\n  }\n  static getTalentField = (charKey, talentKey, sectionIndex, fieldIndex, defVal = {}) => {\n    const character = CharacterDatabase.get(charKey);\n    if (!character) return defVal\n    const { constellation = 0, levelKey = Object.keys(LevelsData)[0] } = character\n    const ascension = Character.getAscension(levelKey)\n    const field = this.getTalentDocumentSections(charKey, talentKey)?.[sectionIndex]?.fields?.[fieldIndex]\n    if (!field) return defVal\n    return typeof field === \"function\" ? field(constellation, ascension) : field\n  }\n  static getTalentFieldValue = (field, key, talentKey, stats = {}, defVal = \"\") => {\n    if (!field?.[key]) return defVal\n    if (key === \"formula\")\n      return field?.formula?.(stats.talentLevelKeys[talentKey], stats)?.[0]?.(stats)\n    return typeof field?.[key] === \"function\" ? field[key](stats.talentLevelKeys[talentKey], stats) : field[key]\n  }\n\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\n    let stats = this.getTalent(charKey, talentKey)?.stats\n    if (typeof stats === \"function\")\n      return stats(constellation, ascension)\n    return stats || defVal\n  }\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\n    let talents = this.getCDataObj(charKey)?.talent || {}\n    let statsArr = []\n    Object.keys(talents).forEach(talentKey => {\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\n      if (stats) statsArr.push(stats)\n    })\n    return statsArr\n  }\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\n    const sections = this.getTalentDocumentSections(charKey, talentKey)\n    let cond = null\n    for (const section of sections) {\n      let tempCond = section.conditional\n      if (typeof tempCond === \"function\")\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\n      if (tempCond?.conditionalKey === conditionalKey) {\n        cond = tempCond\n        break;\n      }\n    }\n    return cond || defVal\n  }\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\n    if (!conditionalNum || !conditional) return defVal\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\n    if (!stacks) return defVal\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\n  }\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\n    if (!conditionalNum || !conditional) return defVal\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\n    return fields || defVal\n  }\n\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\n\n  //look up the formula, and generate the formulaPath to send to worker.\n  static getFormulaPath(characterKey, talentKey, formula) {\n    const formulaDB = this.getCDataObj(characterKey)?.formula\n    if (!formulaDB) return\n    let formulaKey\n    if (talentKey === \"auto\") {\n      for (const tk of [\"normal\", \"charged\", \"plunging\"]) {\n        ([formulaKey,] = Object.entries(formulaDB?.[tk] ?? {}).find(([, value]) => value === formula) ?? [])\n        if (formulaKey) {\n          talentKey = tk\n          break;\n        }\n      }\n    } else ([formulaKey,] = Object.entries(formulaDB?.[talentKey] ?? {}).find(([, value]) => value === formula) ?? [])\n    if (!formulaKey) return\n    return { characterKey, talentKey, formulaKey }\n  }\n\n\n  static hasTalentPage = (characterKey) => Boolean(Character.getCDataObj(characterKey)?.talent)\n\n  static getDisplayStatKeys = (characterKey, defVal = { basicKeys: [] }) => {\n    if (!characterKey) return defVal\n    let eleKey = Character.getElementalKey(characterKey)\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\n    const isAutoElemental = Character.isAutoElemental(characterKey)\n    const isAutoInfusable = Character.isAutoInfusable(characterKey)\n    if (!isAutoElemental)\n      basicKeys.push(\"physical_dmg_\")\n\n    //show elemental interactions\n    const transReactions = ElementToReactionKeys[eleKey]\n    const weaponTypeKey = this.getWeaponTypeKey(characterKey)\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\n    if (this.hasTalentPage(characterKey)) {\n      const charFormulas = {}\n      Object.keys(Character.getCDataObj(characterKey)?.talent ?? {}).forEach(talentKey =>\n        Character.getTalentDocumentSections(characterKey, talentKey)?.forEach((section, sectionIndex) =>\n          section?.fields?.forEach((field, fieldIndex) =>\n            (field?.formula || this.getTalentField(characterKey, talentKey, sectionIndex, fieldIndex)?.formula) && (charFormulas[talentKey] = [...(charFormulas[talentKey] ?? []), {\n              talentKey,\n              sectionIndex,\n              fieldIndex\n            }]))))\n      return { basicKeys, ...charFormulas, transReactions }\n    } else {\n      //generic average hit parameters.\n      const genericAvgHit = []\n      if (!isAutoElemental) //add phy auto + charged + physical \n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\n\n      if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\n        genericAvgHit.push(`${eleKey}_normal_avgHit`, `${eleKey}_charged_avgHit`)\n      else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\n      }\n      //show skill/burst \n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\n\n      //add reactions.\n      if (eleKey === \"pyro\") {\n        const reactions = []\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\n        genericAvgHit.push(...reactions)\n      } else if (eleKey === \"cryo\")\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\n      else if (eleKey === \"hydro\")\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\n\n      return { basicKeys, genericAvgHit, transReactions }\n    }\n  }\n\n  static hasOverride = (character, statKey) => {\n    if (statKey === \"finalHP\")\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\n    else if (statKey === \"finalDEF\")\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\n    else if (statKey === \"finalATK\")\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\n  }\n\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\n    else return this.getBaseStatValue(character, statKey, defVal)\n  }\n\n  //equipment, with consideration on swapping equipped.\n  static equipArtifacts = (characterKey, artifactIds) => {\n    let character = CharacterDatabase.get(characterKey)\n    if (!character) return;\n    let artIdsOnCharacter = character.equippedArtifacts;\n    let artIdsNotOnCharacter = artifactIds\n\n    //swap, by slot\n    Artifact.getSlotKeys().forEach(slotKey => {\n      let artNotOnChar = ArtifactDatabase.get(artIdsNotOnCharacter?.[slotKey])\n      if (artNotOnChar.location === characterKey) return; //it is already equipped\n      let artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\n      let notCharLoc = (artNotOnChar?.location || \"\")\n      //move current art to other char\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\n      //move current art to other char\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\n      //move other art to current char\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\n    })\n    //move other art to current char \n    character.equippedArtifacts = {}\n    Object.entries(artifactIds).forEach(([key, artid]) =>\n      character.equippedArtifacts[key] = artid)\n    CharacterDatabase.updateCharacter(character);\n  }\n  static remove(characterKey) {\n    let character = CharacterDatabase.get(characterKey)\n    if (character.equippedArtifacts)\n      Object.values(character.equippedArtifacts).forEach(artid =>\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\n    CharacterDatabase.remove(characterKey)\n  }\n\n  static calculateBuild = (character) => {\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\n  }\n\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\n    let setToSlots = Artifact.setToSlots(artifacts)\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\n\n    let stats = deepClone(initialStats)\n    //add artifact and artifactsets\n    Object.values(artifacts).forEach(art => {\n      if (!art) return\n      //main stats\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\n      //substats\n      art.substats.forEach((substat) =>\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\n    })\n    //setEffects\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\n    //setEffects conditionals\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\n    })\n\n    let dependencies = GetDependencies(stats?.modifiers)\n    PreprocessFormulas(dependencies, stats).formula(stats)\n    return {\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\n      setToSlots,\n      finalStats: stats,\n      artifactConditionals\n    }\n  }\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\n    if (key === \"modifiers\") {\n      initialStats.modifiers = initialStats.modifiers ?? {}\n      for (const [statKey, modifier] of Object.entries(val)) {\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\n        for (const [mkey, multiplier] of Object.entries(modifier))\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\n      }\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\n  })\n\n  static calculateCharacterWithWeaponStats = (character) => {\n    character = deepClone(character)\n    const { characterKey, levelKey, hitMode, autoInfused, reactionMode, talentLevelKeys, constellation, talentConditionals = [] } = character\n    const ascension = Character.getAscension(levelKey)\n\n    //generate the initalStats obj with data from Character & overrides\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\n    initialStats.characterEle = this.getElementalKey(characterKey);\n    initialStats.characterKey = characterKey\n    initialStats.hitMode = hitMode;\n    initialStats.autoInfused = autoInfused && Character.getCDataObj(characterKey)?.talent?.auto?.infusable\n    initialStats.reactionMode = reactionMode;\n    initialStats.talentConditionals = talentConditionals\n    initialStats.weaponType = this.getWeaponTypeKey(characterKey)\n    initialStats.talentLevelKeys = talentLevelKeys;\n    initialStats.constellation = constellation\n    initialStats.ascension = ascension\n    for (const key in initialStats.talentLevelKeys)\n      initialStats.talentLevelKeys[key] += this.getTalentLevelBoost(character.characterKey, key, constellation);\n\n    //enemy stuff\n    Character.getElementalKeys().forEach(eleKey => {\n      let statKey = `${eleKey}_enemyRes_`\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\n      statKey = `${eleKey}_enemyImmunity`\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\n    })\n\n    //all the rest of the overrides\n    let overrides = character?.baseStatOverrides || {}\n    Object.entries(overrides).forEach(([statKey, val]) => {\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\n    })\n\n    //add specialized stat\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\n\n\n    //add stats from talentconditionals\n    talentConditionals.forEach(cond => {\n      const { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\n      const conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, initialStats.talentLevelKeys[talentKey], constellation, ascension)\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\n    })\n\n    //add stats from all talents\n    Character.getTalentStatsAll(characterKey, constellation, ascension).forEach(s => this.mergeStats(initialStats, s))\n\n    //add stats from weapons\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\n\n    return initialStats\n  }\n\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\nvar initiated = false\nvar characterDatabase = {};\n\nexport default class CharacterDatabase {\n  //do not instantiate.\n  constructor() {\n    if (this instanceof CharacterDatabase) throw Error('A static class cannot be instantiated.');\n  }\n  static isInvalid = (char) => !char || !char.characterKey || !char.levelKey\n  static getCharacterDatabase = () => deepClone(characterDatabase);\n  static getCharacterKeyList = () => Object.keys(characterDatabase);\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\n  static populateDatebaseFromLocalStorage = () => {\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\n    Object.keys(localStorage).filter(key => key.startsWith(\"char_\")).forEach(key => {\n      let [, characterKey] = key.split(\"char_\")\n      if (!characterDatabase[characterKey]) {\n        let character = loadFromLocalStorage(key);\n        if (!character) return;\n        characterDatabase[characterKey] = character;\n      }\n    })\n    initiated = true\n    return true\n  }\n  static updateCharacter = (char) => {\n    if (this.isInvalid(char)) return;\n    const dchar = deepClone(char)\n    saveToLocalStorage(`char_${char.characterKey}`, dchar);\n    characterDatabase[char.characterKey] = dchar;\n  }\n  static get = (characterKey) => characterDatabase?.[characterKey] ?? null\n\n  static remove = (characterKey) => {\n    delete characterDatabase[characterKey];\n    localStorage.removeItem(`char_${characterKey}`);\n  }\n  static getArtifactIDFromSlot = (characterKey, slotKey) =>\n    this.get(characterKey)?.equippedArtifacts?.[slotKey] ?? null\n\n  static equipArtifact = (characterKey, art) => {\n    const char = this.get(characterKey)\n    if (!char || !art || !art.slotKey) return\n    if (!char.equippedArtifacts) char.equippedArtifacts = {};\n    char.equippedArtifacts[art.slotKey] = art.id;\n    this.updateCharacter(char)\n  }\n  static unequipArtifactOnSlot = (characterKey, slotKey) => {\n    const char = this.get(characterKey)\n    if (!char || !slotKey) return\n    if (!char?.equippedArtifacts?.[slotKey]) return;\n    char.equippedArtifacts[slotKey] = \"\";\n    this.updateCharacter(char)\n  }\n  static equipArtifactBuild = (characterKey, artifactIds) => {\n    const character = this.get(characterKey)\n    if (!character) return;\n    character.equippedArtifacts = artifactIds\n    CharacterDatabase.updateCharacter(character);\n  }\n  //helper function for testing\n  static clearDatabase = () => {\n    characterDatabase = {}\n    initiated = false\n  }\n}\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\n\nconst SlotIcon = {\n  flower: faBahai,\n  plume: faFeatherAlt,\n  sands: faHourglass,\n  goblet: faWineGlass,\n  circlet: faCrown\n}\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\nimport ElementalData from './ElementalData';\nlet ArtifactData = {}\nlet ArtifactDataImport = import('./Artifacts')\nArtifactDataImport.then(imp => {\n  ArtifactData = imp.default\n  ArtifactDataImport = null\n})\nconst ArtifactMainSlotKeys = [\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\",\n]\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_dmg_`))\n\nconst ArtifactStarsData = {\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\n};\n\nconst ArtifactMainStatsData = {\n  1: {\n    hp: [129, 178, 227, 275, 324],\n    atk: [8, 12, 15, 18, 21],\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\n    eleMas: [13, 17, 22, 27, 32],\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\n  },\n  2: {\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\n  },\n  3: {\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\n  },\n  4: {\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\n  },\n  5: {\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\n    critDMG_: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\n  }\n}\n\nconst ArtifactSubStatsData = {\n  hp: { 1: [24, 30], 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\n  hp_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\n  atk: { 1: [2], 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\n  atk_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\n  def: { 1: [2], 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\n  def_: { 1: [1.5, 1.8], 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\n  eleMas: { 1: [5, 6], 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\n  enerRech_: { 1: [1.3, 1.6], 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\n  critRate_: { 1: [0.8, 1], 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\n  critDMG_: { 1: [1.6, 1.9], 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\n}\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubStatsData).map(([key, obj]) =>\n  [key, {\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\n  }]))\n\nconst ArtifactSlotsData = {\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\n};\n\nexport {\n  ArtifactMainSlotKeys,\n  ArtifactSlotsData,\n  ArtifactData,\n  ArtifactDataImport,\n  ArtifactSubStatsData,\n  ArtifactSubstatsMinMax,\n  ArtifactStarsData,\n  ArtifactMainStatsData\n};\n","export default class ArtifactBase {\n  //do not instantiate.\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\n\n  //returns {setKey:[slotKey...]}\n  static setToSlots = (artifacts) => {\n    let setToSlots = {};\n    Object.entries(artifacts).forEach(([key, art]) => {\n      if (!art) return\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\n      else setToSlots[art.setKey] = [key]\n    })\n    return setToSlots\n  }\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport CharacterDatabase from '../Character/CharacterDatabase';\nimport SlotIcon from '../Components/SlotIcon';\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\nimport Stat from '../Stat';\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\nimport ArtifactBase from './ArtifactBase';\nimport ArtifactDatabase from './ArtifactDatabase';\n\nconst maxStar = 5\n\nexport default class Artifact {\n  //do not instantiate.\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\n\n  //SETS\n  static getDataImport = () => ArtifactDataImport\n  static getSetKeys = () => Object.keys(ArtifactData || {})\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\n  static getSetsByMaxStarEntries = (star) =>\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\n\n  //SETEFFECT\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\n  static getArtifactSetEffectsStats = (setToSlots) => {\n    let artifactSetEffect = []\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\n        Object.entries(value.stats).forEach(([key, statVal]) =>\n          artifactSetEffect.push({ key, statVal }))))\n    return artifactSetEffect\n  }\n  static getSetEffects = (setToSlots) => {\n    let artifactSetEffect = {}\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\n      if (setNumKeys.length)\n        artifactSetEffect[setKey] = setNumKeys\n    })\n    return artifactSetEffect\n  }\n\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\n    if (!setEffectText) return defVal\n    if (typeof setEffectText === \"function\")\n      return setEffectText(charFinalStats)\n    else if (setEffectText)\n      return setEffectText\n    return defVal\n  }\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\n\n  //SLOT\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\n  static getSlotIcon = (slotKey, defVal = \"\") =>\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\n\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\n    if (!slotKey) return defVal;\n    let name = this.getSlotName(slotKey)\n    if (!name) return defVal;\n    let slotIcon = this.getSlotIcon(slotKey)\n    if (!slotIcon) return defVal;\n    return (<span>{slotIcon} {name}</span>)\n  }\n  static splitArtifactsBySlot = (databaseObj) =>\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\n\n  //STARS\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\n\n  //MAIN STATS\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\n\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\n    let main = this.getMainStatValues(numStars, key)[level]\n    if (main) return main\n    else if (key?.includes(\"_dmg_\")) // because in the database its still stored as ele_dmg_\n      return this.getMainStatValue(\"ele_dmg_\", numStars, level, defVal)\n    return defVal\n  }\n\n  //SUBSTATS\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\n  static getSubstatAllMax = (statKey, numStars = maxStar, defVal = 0) => ArtifactSubstatsMinMax?.[statKey]?.max[numStars] ?? defVal\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\n  static subStatCloseEnough = (key, value1, value2) => {\n    if (Stat.getStatUnit(key) === \"%\")\n      return closeEnoughFloat(value1, value2)\n    else\n      return closeEnoughInt(value1, value2)\n  }\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\n  static rollsRemaining = (level, numStars) =>\n    Math.ceil((numStars * 4 - level) / 4);\n  static numberOfSubstatUnlocked = (state) =>\n    state.substats.reduce((sum, cur) =>\n      sum + (cur && cur.value ? 1 : 0), 0);\n  static getSubstatRollData = (subStatKey, numStars) => ArtifactSubStatsData?.[subStatKey]?.[numStars] ?? []\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\n    if (!rollData.length) return defVal\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\n      return defVal\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\n    let rolls = [];\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\n    if (!maxNumRoll) return defVal;\n    const rollOption = (val, arr) => {\n      if (arr.length) {\n        if (arr.length > maxNumRoll) return;\n        let sum = arr.reduce((accu, v) => accu + v, 0)\n        if (isFloat) {\n          if (sum - val >= 0.101) return\n          if (closeEnoughFloat(sum, val))\n            return rolls.push(arr);\n        } else {\n          if (sum - val > 1) return\n          if (closeEnoughInt(sum, val))\n            return rolls.push(arr);\n        }\n      }\n      rollData.slice().reverse().forEach(roll => {\n        if (!arr.length || arr[arr.length - 1] >= roll)\n          rollOption(subStatValue, [...arr, roll])\n      })\n    }\n    rollOption(subStatValue, [])\n    return rolls;\n  }\n  static getSubstatEfficiency = (subStatKey, rolls = []) => {\n    let len = rolls.length\n    let sum = rolls.reduce((a, c) => a + c, 0)\n    let max = this.getSubstatAllMax(subStatKey) * len\n    return max ? clampPercent((sum / max) * 100) : 0\n  }\n\n  //ARTIFACT IN GENERAL\n  static substatsValidation(state) {\n    let { numStars = 0, level = 0, substats = [] } = state\n    //calculate rolls for substats\n    for (const substat of substats) {\n      let { key, value } = substat\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\n      substat.rolls = rollArr[0] || []\n      if (rollArr.length > 1) substat.rollArr = rollArr\n      substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\n    }\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\n    state.currentEfficiency = currentEfficiency\n    state.maximumEfficiency = maximumEfficiency\n    //artifact validation logic\n    let errMsgs = []\n    for (const substat of substats)\n      if (!substat.rolls?.length && substat.key && substat.value)\n        errMsgs.push(\"One of the substat is invalid.\")\n\n    //only show this error when all substats are \"valid\"\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\n\n    if (numStars) {\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\n        for (const substat of substats) {\n          let rollslen = substat.rolls?.length\n          if (!rollslen || !substat.rollArr) continue\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\n          if (moreRolls.length) {\n            substat.rolls = moreRolls[0]\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, substat.rolls)\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\n            state.currentEfficiency = currentEfficiency\n            state.maximumEfficiency = maximumEfficiency\n          }\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\n          if (currentNumOfRolls >= leastNumRolls) break;\n        }\n      }\n      if (currentNumOfRolls < leastNumRolls)\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\n      else {\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\n      }\n    }\n    return errMsgs\n  }\n  static getArtifactEfficiency(substats, numStars, level) {\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\n    // Relative to max star, so comparison between different * makes sense.\n    let totalPossbleRolls = Artifact.totalPossibleRolls(maxStar);\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\n    let statKeys = substats.filter(({ key }) => key).map(({ key }) => key)\n    let maxPerRoll = 100 * Math.max(...(statKeys.length === 4 ? statKeys : Object.keys(ArtifactSubstatsMinMax)).map(\n      key => Artifact.getSubstatAllMax(key, numStars) / Artifact.getSubstatAllMax(key)\n    ))\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * maxPerRoll) / totalPossbleRolls);\n    return { currentEfficiency, maximumEfficiency }\n  }\n\n  static setToSlots = ArtifactBase.setToSlots;\n\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\n    if (!conditionalNum) return defVal\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\n    if (!conditional) return defVal\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\n    if (!stacks) return defVal\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\n  }\n\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\n    let ArtifactSetEffectsObj = {};\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\n      let setEffect = {}\n      if (setObj.setEffects)\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\n        })\n      if (Object.keys(setEffect).length > 0)\n        ArtifactSetEffectsObj[setKey] = setEffect;\n    })\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\n      if (Object.keys(condStats).length > 0) {\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\n        Object.entries(condStats).forEach(([statKey, value]) =>\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\n      }\n    })\n    return ArtifactSetEffectsObj\n  }\n\n  //database manipulation\n  static equipArtifactOnChar(artifactId, characterKey) {\n    let art = ArtifactDatabase.get(artifactId);\n    if (!art) return;\n    let currentLocation = art.location;\n    let intendedLocation = (characterKey || \"\")\n    if (currentLocation === intendedLocation) return;\n    let slotKey = art.slotKey\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\n\n    //update artifact\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\n\n    //update Character\n    if (intendedLocation)\n      CharacterDatabase.equipArtifact(intendedLocation, art)\n\n    if (currentLocation) {\n      if (artifactToSwapWith)\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\n      else\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\n    }\n  }\n}\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { clamp } from \"./Util\";\n\nexport default class ConditionalsUtil {\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\n  static getConditionalNum(conditionals, srcKeyObj) {\n    let { srcKey, srcKey2 } = srcKeyObj\n    if (conditionals)\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\n  }\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\n    let { srcKey, srcKey2 } = srcKeyObj\n    if (!conditionals) conditionals = []\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\n    if (!conditionalNum && index >= 0) {\n      //setting conditionalNum to 0 deletes the element\n      conditionals.splice(index, 1);\n    } else if (!conditionalNum && index < 0) { //nothing to change\n      return conditionals\n    } else {\n      let newCond = { srcKey, conditionalNum }\n      if (srcKey2) newCond.srcKey2 = srcKey2\n      if (index >= 0)\n        conditionals[index] = newCond\n      else\n        conditionals.push(newCond)\n    }\n    return conditionals\n  }\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\n    if (Array.isArray(conditional)) {\n      //multiconditional\n      let selectedConditionalNum = conditionalNum\n      let selectedConditional = null\n      for (const curConditional of conditional) {\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\n        else {\n          selectedConditional = curConditional;\n          break;\n        }\n      }\n      if (!selectedConditional) return defVal\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\n      return [selectedConditional[fieldName], stacks]\n    } else {\n      //condtional with stacks\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\n      return [conditional[fieldName], stacks]\n    }\n  }\n}","const ElementalData = {\n  physical: { name: \"Physical\" },\n  anemo: { name: \"Anemo\" },\n  geo: { name: \"Geo\" },\n  electro: { name: \"Electro\" },\n  hydro: { name: \"Hydro\" },\n  pyro: { name: \"Pyro\" },\n  cryo: { name: \"Cryo\" },\n  // dendro: { name: \"Dendro\" }\n}\nexport default ElementalData","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\nvar initiated = false\nvar artifactDatabase = {};\nvar artIdIndex = 1;\nexport default class ArtifactDatabase {\n  //do not instantiate.\n  constructor() {\n    if (this instanceof ArtifactDatabase) {\n      throw Error('A static class cannot be instantiated.');\n    }\n  }\n  static isInvalid = (art) =>\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\n  static populateDatebaseFromLocalStorage = () => {\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\n      if (!artifactDatabase[id]) {\n        let art = loadFromLocalStorage(id)\n        if (!art) return;\n        if (this.isInvalid(art)) {\n          this.removeArtifactById(id);\n          return;\n        }\n        artifactDatabase[id] = art;\n      }\n    })\n    initiated = true\n    return true\n  }\n  static get = (id) => artifactDatabase[id] ?? null\n  static removeArtifact = (art) => {\n    this.removeArtifactById(art.id);\n  }\n  static updateArtifact = (art) => {\n    if (this.isInvalid(art)) return;\n    let id = art.id;\n    if (!id) {//if does not have id, generate ID\n      do {\n        id = `artifact_${artIdIndex++}`\n      } while (localStorage.getItem(id) !== null)\n      art.id = id\n    }\n    let dart = deepClone(art)\n    saveToLocalStorage(id, dart);\n    artifactDatabase[id] = dart;\n  }\n  static removeArtifactById = (artId) => {\n    delete artifactDatabase[artId];\n    localStorage.removeItem(artId);\n  }\n\n  static moveToNewLocation = (artid, location) => {\n    if (!artid) return;\n    let art = this.get(artid)\n    if (!art || art.location === location) return;\n    art.location = location;\n    this.updateArtifact(art);\n  }\n  static swapLocations = (artA, artB) => {\n    let locA = artA.location\n    let locB = artB.location\n    this.moveToNewLocation(artA.id, locB)\n    this.moveToNewLocation(artB.id, locA)\n  }\n  static swapLocationsById = (artAid, artBid) =>\n    this.swapLocations(this.get(artAid), this.get(artBid))\n  //helper function for testing\n  static clearDatabase = () => {\n    artifactDatabase = {}\n    initiated = false\n    artIdIndex = 1\n  }\n}","import { clamp } from \"./Util/Util\";\nimport { ReactionMatrix, hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\n\nconst StatData = {\n  flat: { name: \"\", default: 1 },\n\n  // Character Stats\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\n\n  // Weapon Stats\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\n\n  // Character & Weapon Stats\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\n\n  // Weapon & Artifact Stats\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\n\n  // Attack-related Character, Weapon & Artifact Stats\n  finalHP: { name: \"HP\", pretty: \"HP\" },\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\n\n  eleMas: { name: \"Elemental Mastery\", },\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\" },\n  critRate_: { name: \"CRIT Rate\", unit: \"%\" },\n\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\" },\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\n\n  // Misc. Stats\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\n  powShield_: { name: \"Powerful Shield\", unit: \"%\" },\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\n  stamina: { name: \"Stamina\" },\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\n\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\n\n  // Reaction\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\n\n  // Enemy\n  enemyLevel: { name: \"Enemy Level\", const: true },\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true }\n}\nconst Formulas = {\n  // Basic Stats\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\n\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\n\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\n\n  // Reactions\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\n\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\n  crystalize_multi: (s, c) => ReactionMatrix[\"crystalize\"].reduce((accu, val, i) => accu + val * Math.pow(c.characterLevel, i), 0),\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\n}\n\nconst ElementToReactionKeys = {\n  physical: [],\n  anemo: [\"swirl_hit\"],\n  geo: [\"crystalize_hit\", \"shattered_hit\"],\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\", \n  dendro: []\n}\nfunction resMultiplier(res) {\n  res = res / 100\n  if (res < 0) return 1 - res / 2\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\n  return 1 - res\n}\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\n\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\n})\n\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n  const opt = { variant: ele }\n  // DONT CHANGE. needed for screenshot parsing\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\n\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, const: true, ...opt }\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\n\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", const: true, ...opt }\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\n\n  Object.entries(hitTypes).forEach(([type, typeName]) => {\n    StatData[`${ele}_elemental_${type}`] = { name: `${eleName} Attack ${typeName}`, ...opt }\n    StatData[`${ele}_elemental_${type}_multi`] = { name: `${eleName} Attack ${typeName} Multiplier`, unit: \"multi\" }\n\n    Formulas[`${ele}_elemental_${type}`] = (s) => s.finalATK * s[`${ele}_elemental_${type}_multi`]\n  })\n\n  Formulas[`${ele}_elemental_hit_multi`] = (s, c) => (1 + (s.dmg_ + s[`${ele}_dmg_`]) / 100) * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\n  Formulas[`${ele}_elemental_critHit_multi`] = (s) => s[`${ele}_elemental_hit_multi`] * (1 + s.critDMG_ / 100)\n  Formulas[`${ele}_elemental_avgHit_multi`] = (s) => s[`${ele}_elemental_hit_multi`] * (1 + s.critDMG_ * s[`critRate_`] / 10000)\n\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(c[`${ele}_enemyRes_`])\n})\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n    const opt = { variant: ele }\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\n\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\n    })\n\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => (1 + (s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100) * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * (1 + s.critDMG_ / 100)\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\n  })\n})\n\nObject.entries(transformativeReactions).forEach(([reaction, [reactionName, ele, baseMulti]]) => {\n  let opt = {}\n  if (ele) opt.variant = reaction\n  StatData[`${reaction}_hit`] = { name: `${reactionName} DMG`, ...opt }\n  StatData[`${reaction}_dmg_`] = { name: `${reactionName} DMG Bonus`, unit: \"%\", ...opt }\n  StatData[`${reaction}_multi`] = { name: `${reactionName} Multiplier`, unit: \"multi\", const: true, ...opt }\n\n  Formulas[`${reaction}_multi`] = (s, c) => ReactionMatrix[reaction].reduce((accu, val, i) => accu + val * Math.pow(c.characterLevel, i), 0)\n  Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\n})\n\nObject.entries(amplifyingReactions).forEach(([reaction, [name, variants]]) => {\n  const opt = { variant: reaction }\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      StatData[`${ele}_${reaction}_elemental_${type}`] = { name: `${name} ${typeName}`, ...opt }\n      Formulas[`${ele}_${reaction}_elemental_${type}`] = (s) => s[`${ele}_elemental_${type}`] * s[`${ele}_${reaction}_multi`]\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s[`${ele}_${move}_${type}`] * s[`${ele}_${reaction}_multi`]\n      })\n    })\n  })\n})\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\n\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\n  const formulaList = dependencyKeys.map(key => {\n    const modifier = modifiers[key] ?? {}\n    const constModifier = Object.entries(modifier).filter(([k]) => StatData[k]?.const)\n    const dynamicModifier = Object.entries(modifier).filter(([k]) => !(StatData[k]?.const))\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]) => accu + c[k] * m, 0)\n    const dynamicFunc = (s) => dynamicModifier.reduce((accu, [k, m]) => accu + s[k] * m, 0)\n\n    let funcIndicator = 0\n    if (constModifier.length) funcIndicator += 1\n    if (dynamicModifier.length) funcIndicator += 2\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\n\n    let tmp\n    switch (funcIndicator) {\n      case 0: tmp = Formulas[key]; break\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\n      case 4: tmp = (s, c) => c[key]; break\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\n      case 8: tmp = (s, c) => s[key]; break\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\n    }\n    const func = tmp\n\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\n\n    if (!(key in Formulas))\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\n\n    if (StatData[key]?.const) {\n      constData[key] = stats[key]\n      constData[key] = func(stats, constData)\n      stats[key] = constData[key]\n      if (dynamicModifier.length)\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\n      return null\n    }\n\n    if (!(key in Formulas))\n      initialStats[key] = stats[key]\n\n    return [key, func]\n  }).filter((func) => func)\n\n  if (debug) console.log(initialStats, constData)\n\n  return {\n    initialStats,\n    formula: s => {\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\n      Object.assign(s, constData)\n    }\n  }\n}\n\nexport {\n  Formulas,\n  StatData,\n  ElementToReactionKeys,\n  PreprocessFormulas,\n}\n"],"sourceRoot":""}