{"version":3,"sources":["../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","Components/CustomFormControl.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","Components/ConditionalSelector.js","Artifact/PercentBadge.js","Artifact/ArtifactCard.js","StatDependency.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/StatDisplay.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js"],"names":["useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","FloatFormControl","placeholder","onValueChange","disabled","useState","focus","setFocus","type","className","toString","onChange","e","target","parseFloat","onFocus","onBlur","IntFormControl","parseInt","resolveContainerRef","ref","_ref","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","ConditionalSelector","props","conditional","conditionalNum","setConditional","defEle","Array","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","map","condial","i","Fragment","keys","v","stack","tempcount","icon","faCheckSquare","faSquare","PercentBadge","percent","valid","children","badgeColor","isNaN","Math","floor","ArtifactCard","charId","Artifact","equipArtifactOnChar","this","artifactId","forceUpdate","art","ArtifactDatabase","getArtifact","artifactValidation","locationChar","CharacterDatabase","getCharacter","location","name","border","numStars","bg","Header","xs","md","src","getArtifactPieceIcon","setKey","slotKey","thumbnail","getArtifactPieceName","getArtifactSlotNameWithIcon","level","Body","Title","getArtifactSetName","stars","Stat","getStatName","mainStatKey","getMainStatValue","getStatUnit","substats","stat","subStatValidation","subStatValidations","numRolls","rolls","length","efficiency","effOpacity","statName","key","toFixed","style","opacity","tooltip","msg","currentEfficiency","maximumEfficiency","Footer","equipOnChar","Object","entries","getCharacterDatabase","id","char","placement","overlay","pointerEvents","lock","updateArtifact","faLock","faLockOpen","onEdit","faEdit","onDelete","faTrashAlt","React","Component","formulaKeyDependency","DependencyStatKeys","formulaOverrides","dependencies","GetDependencyStats","forEach","formulaOverride","OverrideFormulas","dependency","includes","push","Set","formulaKeys","Formulas","filter","k","statkeys","StatData","keyDependencies","subdependencies","testObj","defineProperty","get","configurable","AttachLazyFormulas","getDependency","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","createElement","TabContext","Provider","SelectableContext","TabContent","forwardRef","bsPrefix","_ref$as","as","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","_extends","classNames","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","in","displayName","Tab","_React$Component","apply","arguments","_inheritsLoose","prototype","render","Error","Container","Content","Pane","createContext","useAccordionToggle","contextEventKey","AccordionContext","AccordionToggle","accordionOnClick","AccordionCollapse","Collapse","Children","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","_objectWithoutProperties","source","excluded","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","DisplayStats","statKey","character","build","editable","otherProps","statVal","Character","getStatValueWithOverride","unit","buildDiff","finalStats","Col","StatIconEle","hasOverride","fixedUnit","DisplayNewBuildDiff","equippedBuild","newBuild","CharacterArtifactPane","showOther","setShowOther","characterKey","compareAgainstEquipped","artifactConditionals","setState","eleKey","getElementalKey","statKeys","otherStatKeys","getElementalKeys","ele","displayStatProps","displayNewBuildProps","Row","Card","Button","xl","equipArtifacts","artifactIds","sm","lg","getArtifactSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getArtifactSetEffectConditional","ConditionalsUtil","getConditionalNum","srcKey","srcKey2","conditionalStats","getArtifactConditionalStats","val","conditionalElement","cnum","state","setStateArtifactConditional","Badge","getArtifactSetEffectText","values","artid","StatInput","prependEle","defaultValue","restProps","InputGroup","Prepend","Text","Append","undefined","OverlayTrigger","Tooltip","faUndo","CharacterOverviewPane","constellation","setOverride","setConstellation","editLevel","setEditLevel","elementKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","getName","Image","Assets","elements","weaponTypes","getStar","colored","clamp","getLevel","levelKey","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","refineIndex","getWeaponConditionalStat","getWeaponConditional","conditionalEle","faQuoteLeft","weapons","getWeaponRarity","DropdownButton","title","getWeaponName","reverse","star","arr","Dropdown","ItemText","getWeaponsOfType","rarity","weaponObj","Divider","getLevelName","LevelNameData","faGavel","getWeaponPassiveDescription","getWeaponDescription","editingOther","SetEditingOther","additionalKeys","displayStatKeys","editStatKeys","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","CharacterSpecializedStatKey","getStatNameRaw","CharacterTalentPane","dmgMode","ascension","getAscension","skillDisplayProps","ContextAwareToggle","callback","currentEventKey","decoratedOnClick","expanded","faWindowMinimize","faWindowMaximize","ToggleButtonGroup","ToggleButton","href","rel","immunityStatKey","elementImmunity","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","autoInfused","flat","FormulaText","statsDisplayKeys","formula","printOverrideFormula","options","printFormula","printStat","tKey","tText","SkillDisplayCard","talentKey","subtitle","asc","enabled","onClickTitle","talentLimits","header","getTalentLevelKey","talentLvlKey","levelBoost","infuseBtn","getElementalName","tLvl","talentLevelKeys","statsEle","talentStats","getTalentStats","ListGroup","index","getTalentImg","getTalentName","Subtitle","getTalentDocument","section","talentText","fields","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","fromEntries","getTalentConditionalFields","condField","FieldDisplay","field","fieldText","fieldBasic","basicVal","faQuestionCircle","fieldVal","finalVal","round","fieldEquippedVal","diff","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","child","CharacterDisplayCard","forceUpdateComponent","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","DatabaseInitAndVerify","characterId","getInitialState","Promise","all","getCharacterDataImport","getWeaponDataImport","getArtifactDataImport","then","deepClone","updateCharacter","addCharacter","footer","onClose","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","faTimes","defaultActiveKey","Nav","Link","getCDataObj","talent","skill","initialState","equippedArtifacts","WeaponLevelKeys","auto","burst","defaultProps","ListGroupItem","action","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","horizontal","horizontalVariant","initialBsPrefix","AbstractNav"],"mappings":"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","file":"static/js/12.86b4bc69.chunk.js","sourcesContent":["import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst FloatFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseFloat(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\n\r\nconst IntFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseInt(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\nexport {\r\n  FloatFormControl,\r\n  IntFormControl\r\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, Image, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default class ArtifactCard extends React.Component {\r\n  //the props is to update the artifacts in the list in the parent, which will update here.\r\n  equipOnChar(charId) {\r\n    Artifact.equipArtifactOnChar(this.props.artifactId, charId)\r\n    this.props?.forceUpdate()\r\n  }\r\n  render() {\r\n    if (!this.props.artifactId) return null;\r\n    let art = ArtifactDatabase.getArtifact(this.props.artifactId);\r\n    let artifactValidation = Artifact.artifactValidation(art)\r\n    let locationChar = CharacterDatabase.getCharacter(art.location)\r\n    let location = locationChar ? locationChar.name : \"Inventory\"\r\n    return (<Card className=\"h-100\" border={`${art.numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n      <Card.Header className=\"p-0\">\r\n        <Row>\r\n          <Col xs={2} md={3}>\r\n            <Image src={Artifact.getArtifactPieceIcon(art.setKey, art.slotKey)} className={`w-100 h-auto grad-${art.numStars}star m-1`} thumbnail />\r\n          </Col>\r\n          <Col className=\"pt-3\">\r\n            <h6><b>{`${Artifact.getArtifactPieceName(art.setKey, art.slotKey, \"Unknown Piece Name\")}`}</b></h6>\r\n            <div>{Artifact.getArtifactSlotNameWithIcon(art.slotKey)}{` +${art.level}`}</div>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body className=\"d-flex flex-column py-2\">\r\n        <Card.Title>\r\n          <div>{Artifact.getArtifactSetName(art.setKey, \"Artifact Set\")}</div>\r\n          <small className=\"text-halfsize\"><Stars stars={art.numStars} /></small>\r\n        </Card.Title>\r\n        <h5 className=\"mb-1\">\r\n          <b>{Stat.getStatName(art.mainStatKey)} {Artifact.getMainStatValue(art.mainStatKey, art.numStars, art.level, \"\")}{Stat.getStatUnit(art.mainStatKey)}</b>\r\n        </h5>\r\n        <Row className=\"mb-0\">\r\n          {art.substats ? art.substats.map((stat, i) => {\r\n            if (!stat || !stat.value) return null\r\n            let subStatValidation = artifactValidation.subStatValidations[i]\r\n            let numRolls = subStatValidation?.rolls?.length || 0\r\n            let efficiency = subStatValidation?.efficiency || 0\r\n            let effOpacity = 0.3 + efficiency * 0.7\r\n            let statName = Stat.getStatName(stat.key)\r\n            return (<Col key={i} xs={12}>\r\n              <Badge variant={artifactValidation.valid ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{artifactValidation.valid ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n              <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n              <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n            </Col>)\r\n          }\r\n          ) : null}\r\n        </Row>\r\n        <div className=\"mt-auto\">\r\n          <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n          <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.currentEfficiency}>\r\n            {(artifactValidation.currentEfficiency ? artifactValidation.currentEfficiency : 0).toFixed(2) + \"%\"}\r\n          </PercentBadge>\r\n          <b>{\" < \"}</b>\r\n          <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.maximumEfficiency}>\r\n            {(artifactValidation.maximumEfficiency ? artifactValidation.maximumEfficiency : 0).toFixed(2) + \"%\"}\r\n          </PercentBadge>\r\n        </div>\r\n      </Card.Body>\r\n\r\n      <Card.Footer className=\"pr-3\">\r\n        <Row className=\"d-flex justify-content-between no-gutters\">\r\n          {this.props.forceUpdate ? <Col xs=\"auto\">\r\n            <Dropdown>\r\n              <Dropdown.Toggle size=\"sm\">{location}</Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item onClick={() => this.equipOnChar()}>Inventory</Dropdown.Item>\r\n                {Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n                  <Dropdown.Item key={id} onClick={() => this.equipOnChar(id)}>\r\n                    {char.name}\r\n                  </Dropdown.Item>)}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Col> : <Col xs=\"auto\"><span>Location: {location}</span></Col>}\r\n          <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              {this.props.forceUpdate ? <OverlayTrigger placement=\"top\"\r\n                overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n                <span className=\"d-inline-block\">\r\n                  <Button size=\"sm\"\r\n                    disabled={art.location}\r\n                    style={art.location ? { pointerEvents: 'none' } : {}}\r\n                    onClick={() => {\r\n                      art.lock = !art.lock\r\n                      ArtifactDatabase.updateArtifact(art);\r\n                      this.forceUpdate();\r\n                    }}>\r\n                    <FontAwesomeIcon icon={(art.lock || art.location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                  </Button>\r\n                </span>\r\n              </OverlayTrigger> : null}\r\n              {this.props.onEdit && <Button variant=\"info\" size=\"sm\"\r\n                onClick={() => this.props.onEdit()}>\r\n                <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n              </Button>}\r\n              {this.props.onDelete && <Button variant=\"danger\" size=\"sm\"\r\n                onClick={() => this.props.onDelete()}>\r\n                <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n              </Button>}\r\n            </ButtonGroup>\r\n          </Col>\r\n        </Row>\r\n      </Card.Footer>\r\n    </Card>)\r\n  }\r\n}","import { AttachLazyFormulas, Formulas, OverrideFormulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nconst formulaKeyDependency = {}\r\nconst getDependency = (key) => {\r\n  let testObj = {}\r\n  let dependency = []\r\n  Object.keys(StatData).filter(k => k !== key).forEach(k => {\r\n    Object.defineProperty(testObj, k, {\r\n      get: () => {\r\n        dependency.push(k)\r\n        Object.defineProperty(testObj, k, { get: () => 0 })\r\n        return 0\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  AttachLazyFormulas(testObj)\r\n  //use the getter to generate the dependency\r\n  if (typeof testObj[key] === \"number\")\r\n    formulaKeyDependency[key] = dependency\r\n}\r\nObject.keys(Formulas).forEach(key => getDependency(key))\r\n\r\nfunction DependencyStatKeys(key, formulaOverrides = []) {\r\n  let dependencies = GetDependencyStats(key, formulaOverrides) || []\r\n  //add any formula override dependencies\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key, dependency = [] } = OverrideFormulas[formulaOverride.key] || {}\r\n    if (!dependencies.includes(key)) return\r\n    dependencies.push(...dependency)\r\n  })\r\n  dependencies = [...new Set(dependencies)]\r\n  let formulaKeys = Object.keys(Formulas).filter(k => k === key || dependencies.includes(k))\r\n  let statkeys = Object.keys(StatData).filter(k => k === key || dependencies.includes(k))\r\n  return { formulaKeys, statkeys }\r\n}\r\nfunction GetDependencyStats(key, formulaOverrides = []) {\r\n  let dependencies = [key]\r\n  let keyDependencies = null\r\n  for (const formulaOverride of formulaOverrides)\r\n    if (OverrideFormulas[formulaOverride?.key]?.key === key)\r\n      keyDependencies = OverrideFormulas[formulaOverride?.key]?.dependency\r\n  keyDependencies = keyDependencies || formulaKeyDependency[key]\r\n  keyDependencies?.forEach(k => {\r\n    let subdependencies = GetDependencyStats(k, formulaOverrides)\r\n    dependencies.push(...subdependencies)\r\n  })\r\n  return dependencies\r\n}\r\nexport {\r\n  DependencyStatKeys,\r\n  GetDependencyStats,\r\n}\r\n","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Col } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nconst DisplayStats = ({ statKey, character, build, editable, ...otherProps }) => {\r\n  let statVal = Character.getStatValueWithOverride(character, statKey)\r\n  if (statKey === \"hp_final\")\r\n    statVal = Character.getStatValueWithOverride(character, \"hp_base\")\r\n  else if (statKey === \"def_final\")\r\n    statVal = Character.getStatValueWithOverride(character, \"def_base\")\r\n  else if (statKey === \"atk_final\")\r\n    statVal = Character.getStatValueWithOverride(character, \"atk_base\") + Character.getStatValueWithOverride(character, \"atk_weapon\")\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (build?.finalStats?.[statKey] || 0) - statVal\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right text-right ${(editable && Character.hasOverride(character, statKey)) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> {buildDiff > 0 && \"+\"}{buildDiff?.toFixed(Stat.fixedUnit(statKey)) + unit}</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nconst DisplayNewBuildDiff = ({ statKey, character, equippedBuild, newBuild, editable, ...otherProps }) => {\r\n  let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right ${(editable && Character.hasOverride(character, statKey)) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nexport {\r\n  DisplayStats,\r\n  DisplayNewBuildDiff,\r\n}","import React, { useState } from 'react';\r\nimport { Accordion, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { DisplayNewBuildDiff, DisplayStats } from '../../Components/StatDisplay';\r\nimport Stat from \"../../Stat\";\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane(props) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  let { character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState } = props\r\n  let { character } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  let eleKey = Character.getElementalKey(characterKey)\r\n  //TODO pick stats dynamically like in Build Display\r\n  const statKeys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\", \"phy_dmg_bonus\"]\r\n  statKeys.push(`${eleKey}_ele_dmg_bonus`)\r\n\r\n  let otherStatKeys = [\"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\", \"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\"]\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  otherStatKeys = otherStatKeys.filter(key => !statKeys.includes(key))\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Other Stats`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ?\r\n                  statKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                  statKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {(newBuild && compareAgainstEquipped) ?\r\n                    otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                    otherStatKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button size=\"sm\" onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getArtifactSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getArtifactSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getArtifactSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            let conditionalStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n                            if (conditionalStats) {\r\n                              if (!setStats) setStats = {}\r\n                              Object.entries(conditionalStats).forEach(([statKey, val]) =>\r\n                                setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                            }\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getArtifactSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Object.values(build.artifactIds).map(artid =>\r\n            artid ? <Col sm={6} lg={4} key={artid} className=\"mb-2\">\r\n              <ArtifactCard artifactId={artid} forceUpdate={forceUpdate} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport { DisplayNewBuildDiff, DisplayStats } from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"char_level\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={(val) => setOverride(\"char_level\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"char_level\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Assets.weapons[weapon.key]} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats, character)}</p>\r\n            <Row>\r\n              <Col xs={12} md={6}>\r\n                <h5>ATK: {weaponDisplayMainVal}</h5>\r\n              </Col>\r\n              {subStatKey && <Col xs={12} md={6}>\r\n                <h5>{Stat.getStatName(subStatKey)}: {weaponDisplaySubVal}{Stat.getStatUnit(subStatKey)}</h5>\r\n              </Col>}\r\n            </Row>\r\n            {<Row>\r\n              {(conditionalStats || weaponBonusStats) && <Col xs={12}><h6 className=\"mb-0\">Bonus Stats:</h6></Col>}\r\n              {weaponBonusStats && Object.entries(weaponBonusStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"bonu\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n              {conditionalStats && Object.entries(conditionalStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"cond\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n            </Row>}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  let { editable, character, character: { compareAgainstEquipped }, setOverride, equippedBuild, newBuild } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  let additionalKeys = [\"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const displayStatKeys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp_base\", \"hp\", \"hp_\", \"atk_base\", \"atk\", \"atk_\", \"def_base\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\", \"skill_crit_rate\", \"burst_crit_rate\", \"dmg\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              displayStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              displayStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              otherStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ?\r\n            miscStatkeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n            miscStatkeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n","import { faCheckSquare, faQuestionCircle, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, ToggleButton, ToggleButtonGroup, Tooltip } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat, { FormulaText } from \"../../Stat\";\r\nimport { OverrideFormulas } from \"../../StatData\";\r\nimport { GetDependencyStats } from \"../../StatDependency\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation, dmgMode }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  //choose which one to display stats for\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button\r\n        // style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"norm_atk\", \"char_atk\", \"plunge\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(Character.getTalentStatKey(\"char_atk\", character, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    //search for dependency, and flatten, isolate unique keys\r\n    keys = [...new Set(keys.map(key => GetDependencyStats(key, build.finalStats?.formulaOverrides)).flat())]\r\n    //return keys that are part of the formula text, in the order in which they appear.\r\n    return Object.keys(FormulaText).filter(key => keys.includes(key))\r\n  }\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <Accordion>\r\n        <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Options</span>\r\n                <small>Expand below to edit enemy details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ToggleButtonGroup type=\"radio\" value={dmgMode} name=\"dmgOptions\" onChange={(dmgMode) => setState({ dmgMode })}>\r\n                  <ToggleButton value=\"avg_dmg\">Avg. DMG</ToggleButton>\r\n                  <ToggleButton value=\"dmg\">Normal Hit, No Crit</ToggleButton>\r\n                  <ToggleButton value=\"crit_dmg\">Crit Hit DMG</ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Row className=\"mb-2\"><Col>\r\n                <Button variant=\"warning\" >\r\n                  <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                    To get the specific resistance values of enemies, please visit the wiki.\r\n                  </a>\r\n                </Button >\r\n              </Col></Row>\r\n              <Row>\r\n                <Col xs={12} xl={6} className=\"mb-2\">\r\n                  <StatInput\r\n                    name={<b>Enemy Level</b>}\r\n                    value={Character.getStatValueWithOverride(character, \"enemy_level\")}\r\n                    placeholder={Stat.getStatNameRaw(\"enemy_level\")}\r\n                    defaultValue={Character.getBaseStatValue(character, \"enemy_level\")}\r\n                    onValueChange={(val) => setOverride(\"enemy_level\", val)}\r\n                  />\r\n                </Col>\r\n                {[\"physical\", ...Character.getElementalKeys()].map(eleKey => {\r\n                  let statKey = eleKey === \"physical\" ? \"enemy_phy_res\" : `${eleKey}_enemy_ele_res`\r\n                  let immunityStatKey = eleKey === \"physical\" ? \"enemy_phy_immunity\" : `${eleKey}_enemy_ele_immunity`\r\n                  let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                  return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                        <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                      name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                      value={Character.getStatValueWithOverride(character, statKey)}\r\n                      placeholder={Stat.getStatNameRaw(statKey)}\r\n                      defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                      onValueChange={(val) => setOverride(statKey, val)}\r\n                      disabled={elementImmunity}\r\n                    />\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Formulas</span>\r\n                <small>Expand below to see calculation details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n              <Row>\r\n                {statsDisplayKeys().map(key => {\r\n                  let formulaOverrides = (build.finalStats.formulaOverrides || [])\r\n                  let formula = null\r\n                  for (const formulaOverride of formulaOverrides)\r\n                    if (OverrideFormulas[formulaOverride?.key]?.key === key) {\r\n                      formula = Stat.printOverrideFormula(build.finalStats, formulaOverride.key, formulaOverride.options, false)\r\n                      break;\r\n                    }\r\n                  formula = formula || Stat.printFormula(key, build.finalStats, false)\r\n                  return <Col key={key} xs={12} className=\"mb-2\">\r\n                    <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                      <Card.Header className=\"p-2\">\r\n                        {Stat.printStat(key, build.finalStats)}\r\n                      </Card.Header>\r\n                      <Card.Body className=\"p-2\">\r\n                        <small>{formula}</small>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let { talentLvlKey = undefined, levelBoost = 0 } = Character.getTalentLevelKey(character, talentKey, constellation, true)\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n  if (typeof talentLvlKey === \"number\") {\r\n    if (editable) {\r\n      let setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        let talentLevelKeys = state.talentLevelKeys || {}\r\n        talentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let statsEle = null\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  if (talentStats) {\r\n    statsEle = <Row><Col>\r\n      <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n        <ListGroup className=\"text-white\" variant=\"flush\">\r\n          {Object.entries(talentStats).map(([statKey, statVal], index) =>\r\n            <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n              <div>\r\n                <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n              </div>\r\n            </ListGroup.Item>\r\n          )}\r\n        </ListGroup>\r\n      </Card>\r\n    </Col></Row>\r\n  }\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalStats = {}\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            //filter out formulaOverrides from rendering\r\n            conditionalStats = Object.fromEntries(Object.entries(conditionalStats).filter(([key, _]) => key !== \"formulaOverrides\"))\r\n            conditionalFields = Character.getTalentConditionalFields(conditional, conditionalNum, [])\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Row><Col>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {Object.entries(conditionalStats).map(([statKey, statVal], index) =>\r\n                  <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n                    <div>\r\n                      <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                      <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n                    </div>\r\n                  </ListGroup.Item>\r\n                )}\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i + (conditionalStats?.length || 0)} index={i + (conditionalStats?.length || 0)} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col></Row>\r\n        }\r\n        return <Row className=\"mt-2\" key={\"section\" + i}><Col xs={12}>\r\n          <span>{talentText}</span>\r\n          {fields.length > 0 && <ListGroup className=\"text-white ml-n2 mr-n2\">\r\n            {fields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n          {conditionalEle}\r\n        </Col></Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay(props) {\r\n  let { character, character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldBasic = field.basicVal\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats, character)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = field.value ? field.value : field.finalVal\r\n  if (typeof fieldVal === \"function\") {\r\n    fieldVal = fieldVal?.(talentLvlKey, build.finalStats, character)\r\n  }\r\n  if (typeof fieldVal === \"number\")\r\n    fieldVal = Math.round(fieldVal)\r\n\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.finalVal\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats, character)?.toFixed?.(0))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className=\"float-right text-right\">{fieldVal}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterId)\r\n      this.state = CharacterDatabase.getCharacter(props.characterId)\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    dmgMode: \"dmg\",\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey) })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getArtifactDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.characterId && this.state.id !== this.props.characterId)\r\n      this.setState(CharacterDatabase.getCharacter(this.props.characterId))\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"char_level\")}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && (Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\"}>Talents {(Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\" && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} setState={this.setSetState} setOverride={this.setOverride} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;"],"sourceRoot":""}