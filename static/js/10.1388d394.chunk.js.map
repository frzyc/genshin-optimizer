{"version":3,"sources":["Components/StarDisplay.js","Data/WeaponData.js","Data/ArtifactData.js","Components/ConditionalSelector.js","DatabaseUtil.js","Data/CharacterData.js","Components/StatIcon.js","Assets/Weapons/Swords/Swords.js","Assets/Weapons/Swords/Weapon_Dull_Blade.png","Assets/Weapons/Swords/Weapon_Silver_Sword.png","Assets/Weapons/Swords/Weapon_Cool_Steel.png","Assets/Weapons/Swords/Weapon_Dark_Iron_Sword.png","Assets/Weapons/Swords/Weapon_Fillet_Blade.png","Assets/Weapons/Swords/Weapon_Harbinger_of_Dawn.png","Assets/Weapons/Swords/Weapon_Skyrider_Sword.png","Assets/Weapons/Swords/Weapon_Traveler's_Handy_Sword.png","Assets/Weapons/Swords/Weapon_Blackcliff_Longsword.png","Assets/Weapons/Swords/Weapon_Favonius_Sword.png","Assets/Weapons/Swords/Weapon_Iron_Sting.png","Assets/Weapons/Swords/Weapon_Lion's_Roar.png","Assets/Weapons/Swords/Weapon_Prototype_Rancour.png","Assets/Weapons/Swords/Weapon_Royal_Longsword.png","Assets/Weapons/Swords/Weapon_Sacrificial_Sword.png","Assets/Weapons/Swords/Weapon_The_Alley_Flash.png","Assets/Weapons/Swords/Weapon_The_Black_Sword.png","Assets/Weapons/Swords/Weapon_The_Flute.png","Assets/Weapons/Swords/Weapon_Sword_of_Descension.png","Assets/Weapons/Swords/festering_fang.png","Assets/Weapons/Swords/Weapon_Aquila_Favonia.png","Assets/Weapons/Swords/Weapon_Skyward_Blade.png","Assets/Weapons/Swords/summit_shaper.png","Assets/Weapons/Claymores/Claymores.js","Assets/Weapons/Claymores/Weapon_Waster_Greatsword.png","Assets/Weapons/Claymores/Weapon_Old_Merc's_Pal.png","Assets/Weapons/Claymores/Weapon_Bloodtainted_Greatsword.png","Assets/Weapons/Claymores/Weapon_Debate_Club.png","Assets/Weapons/Claymores/Weapon_Ferrous_Shadow.png","Assets/Weapons/Claymores/Weapon_Quartz.png","Assets/Weapons/Claymores/Weapon_Skyrider_Greatsword.png","Assets/Weapons/Claymores/Weapon_White_Iron_Greatsword.png","Assets/Weapons/Claymores/Weapon_Blackcliff_Slasher.png","Assets/Weapons/Claymores/Weapon_Favonius_Greatsword.png","Assets/Weapons/Claymores/Weapon_Lithic_Blade.png","Assets/Weapons/Claymores/Weapon_Prototype_Aminus.png","Assets/Weapons/Claymores/Weapon_Rainslasher.png","Assets/Weapons/Claymores/Weapon_Royal_Greatsword.png","Assets/Weapons/Claymores/Weapon_Serpent_Spine.png","Assets/Weapons/Claymores/Weapon_The_Bell.png","Assets/Weapons/Claymores/Weapon_Whiteblind.png","Assets/Weapons/Claymores/Weapon_Sacrificial_Greatsword.png","Assets/Weapons/Claymores/snow_tombed_starsilver.png","Assets/Weapons/Claymores/Weapon_Skyward_Pride.png","Assets/Weapons/Claymores/Weapon_Wolf's_Gravestone.png","Assets/Weapons/Claymores/Weapon_The_Unforged.png","Assets/Weapons/Polearms/Polearms.js","Assets/Weapons/Polearms/Weapon_Beginner's_Protector.png","Assets/Weapons/Polearms/Weapon_Iron_Point.png","Assets/Weapons/Polearms/Weapon_Black_Tassel.png","Assets/Weapons/Polearms/Weapon_Halberd.png","Assets/Weapons/Polearms/Weapon_White_Tassel.png","Assets/Weapons/Polearms/Weapon_Blackcliff_Pole.png","Assets/Weapons/Polearms/Weapon_Crescent_Pike.png","Assets/Weapons/Polearms/Weapon_Deathmatch.png","Assets/Weapons/Polearms/Weapon_Dragon's_Bane.png","Assets/Weapons/Polearms/Weapon_Lithic_Spear.png","Assets/Weapons/Polearms/Weapon_Prototype_Grudge.png","Assets/Weapons/Polearms/Weapon_Favonius_Lance.png","Assets/Weapons/Polearms/Weapon_Royal_Spear.png","Assets/Weapons/Polearms/dragonspine_spear.png","Assets/Weapons/Polearms/Weapon_Vortex_Vanquisher.png","Assets/Weapons/Polearms/Weapon_Primordial_Jade_Winged-Spear.png","Assets/Weapons/Polearms/Weapon_Skyward_Spine.png","Assets/Weapons/Bows/Bows.js","Assets/Weapons/Bows/Weapon_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Seasoned_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Ebony_Bow.png","Assets/Weapons/Bows/Weapon_Messenger.png","Assets/Weapons/Bows/Weapon_Raven_Bow.png","Assets/Weapons/Bows/Weapon_Recurve_Bow.png","Assets/Weapons/Bows/Weapon_Sharpshooter's_Oath.png","Assets/Weapons/Bows/Weapon_Slingshot.png","Assets/Weapons/Bows/Weapon_The_Stringless.png","Assets/Weapons/Bows/Weapon_Alley_Hunter.png","Assets/Weapons/Bows/Weapon_Blackcliff_Warbow.png","Assets/Weapons/Bows/Weapon_Compound_Bow.png","Assets/Weapons/Bows/Weapon_Favonius_Warbow.png","Assets/Weapons/Bows/Weapon_Prototype_Crescent.png","Assets/Weapons/Bows/Weapon_Royal_Bow.png","Assets/Weapons/Bows/Weapon_Rust.png","Assets/Weapons/Bows/Weapon_Sacrificial_Bow.png","Assets/Weapons/Bows/Weapon_The_Viridescent_Hunt.png","Assets/Weapons/Bows/Weapon_Skyward_Harp.png","Assets/Weapons/Bows/Weapon_Amos'_Bow.png","Assets/Weapons/Bows/dreams_of_dragonfell.png","Assets/Weapons/Catalysts/Catalysts.js","Assets/Weapons/Catalysts/Weapon_Apprentice's_Notes.png","Assets/Weapons/Catalysts/Weapon_Pocket_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Amber_Catalyst.png","Assets/Weapons/Catalysts/Weapon_Emerald_Orb.png","Assets/Weapons/Catalysts/Weapon_Magic_Guide.png","Assets/Weapons/Catalysts/Weapon_Otherworldly_Story.png","Assets/Weapons/Catalysts/Weapon_Thrilling_Tales_of_Dragon_Slayers.png","Assets/Weapons/Catalysts/Weapon_Twin_Nephrite.png","Assets/Weapons/Catalysts/Weapon_Blackcliff_Amulet.png","Assets/Weapons/Catalysts/Weapon_Favonius_Codex.png","Assets/Weapons/Catalysts/Weapon_Mappa_Mare.png","Assets/Weapons/Catalysts/Weapon_Prototype_Malice.png","Assets/Weapons/Catalysts/Weapon_Royal_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Sacrificial_Fragments.png","Assets/Weapons/Catalysts/Weapon_Solar_Pearl.png","Assets/Weapons/Catalysts/Weapon_The_Widsith.png","Assets/Weapons/Catalysts/Weapon_Wine_and_Song.png","Assets/Weapons/Catalysts/Weapon_Eye_of_Perception.png","Assets/Weapons/Catalysts/Weapon_Frostbearer.png","Assets/Weapons/Catalysts/Weapon_Lost_Prayer_to_the_Sacred_Winds.png","Assets/Weapons/Catalysts/Weapon_Skyward_Atlas.png","Assets/Weapons/Catalysts/Weapon_Memory_of_Dust.png","Assets/Assets.js","Assets/Weapons/Weapons.js","Assets/Element_Anemo.png","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","StatDependency.js","Character/CharacterCard.js","Build/BuildWorker.js","Build/Build.js","Build/BuildDisplay.js","Character/Character.js","Util/Util.js","Stat.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Artifact/ArtifactDatabase.js","Util/ConditionalsUtil.js","Data/ElementalData.js","StatData.js","Weapon/Weapon.js"],"names":["StarIcon","icon","faStar","Stars","props","className","colored","stars","Array","keys","map","_","i","WeaponData","WeaponDataImport","then","imp","default","WeaponLevelKeys","LevelNameData","WeaponTypeData","sword","claymore","catalyst","bow","polearm","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","Object","ElementalData","forEach","key","push","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","hp","atk","hp_","atk_","def_","phy_dmg_bonus","ele_dmg_bonus","ele_mas","ener_rech","crit_rate","crit_dmg","heal_bonu","2","ArtifactSubStatsData","def","ArtifactSlotsData","flower","name","stats","plume","sands","goblet","circlet","ConditionalSelector","conditional","conditionalNum","setConditional","defEle","disabled","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","DatabaseInitAndVerify","localStorage","removeItem","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","values","art","valid","location","getCharacter","keyMapping","setKey","mainStatKey","endsWith","replace","updateArtifact","chars","getCharacterDatabase","character","equippedArtifacts","fromEntries","entries","slotKey","artid","getArtifact","undefined","artifactConditionals","filter","cond","srcKey","srcKey2","characterKey","levelKey","constellation","talentConditionals","ascension","Character","getAscension","talentKey","conditionalKey","talentLvlKey","getTalentLevelKey","getTalentConditional","dmgMode","updateCharacter","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","stam","CharacterSpecializedStatKey","StatIcon","hp_base","faTint","hp_final","atk_base","faFistRaised","atk_final","def_base","faShieldAlt","def_final","faMagic","faDice","faDiceD20","faSync","faFirstAid","StatIconEle","statKey","DullBlade","SilverSword","CoolSteel","DarkIronSword","FilletBlade","HarbingerOfDawn","SkyriderSword","TravelersHandySword","BlackcliffLongsword","FavoniusSword","IronSting","LionsRoar","PrototypeRancour","RoyalLongsword","SacrificialSword","TheAlleyFlash","TheBlackSword","TheFlute","SwordOfDescension","FesteringDesire","AquilaFavonia","SkywardBlade","SummitShaper","WasterGreatsword","OldMercsPal","BloodtaintedGreatsword","DebateClub","FerrousShadow","Quartz","SkyriderGreatsword","WhiteIronGreatsword","BlackcliffSlasher","FavoniusGreatsword","LithicBlade","PrototypeAminus","Rainslasher","RoyalGreatsword","SerpentSpine","TheBell","Whiteblind","SacrificialGreatsword","SnowTombedStarsilver","SkywardPride","WolfsGravestone","TheUnforged","polearms","BeginnersProtector","IronPoint","BlackTassel","Halberd","WhiteTassel","BlackcliffPole","CrescentPike","Deathmatch","DragonsBane","LithicSpear","PrototypeGrudge","FavoniusLance","RoyalSpear","DragonspineSpear","VortexVanquisher","PrimordialJadeWingedSpear","SkywardSpine","bows","HuntersBow","SeasonedHuntersBow","EbonyBow","Messenger","RavenBow","RecurveBow","SharpshootersOath","Slingshot","TheStringless","AlleyHunter","BlackcliffWarbow","CompoundBow","FavoniusWarbow","PrototypeCrescent","RoyalBow","Rust","SacrificialBow","TheViridescentHunt","SkywardHarp","AmosBow","DreamsOfDragonfell","catalysts","ApprenticesNotes","PocketGrimoire","AmberCatalyst","EmeraldOrb","MagicGuide","OtherworldlyStory","ThrillingTalesOfDragonSlayers","TwinNephrite","BlackcliffAgate","FavoniusCodex","MappaMare","PrototypeMalice","RoyalGrimoire","SacrificialFragments","SolarPearl","TheWidsith","WineAndSong","EyeOfPerception","Frostbearer","LostPrayerToTheSacredWinds","SkywardAtlas","MemoryOfDust","Assets","weapons","swords","claymores","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","resin","fragile","condensed","exp_books","advice","wit","experience","formulaKeyDependency","DependencyStatKeys","formulaOverrides","dependencies","GetDependencyStats","formulaOverride","OverrideFormulas","dependency","includes","Set","formulaKeys","Formulas","k","statkeys","StatData","keyDependencies","subdependencies","testObj","defineProperty","get","configurable","AttachLazyFormulas","getDependency","CharacterCard","useReducer","x","forceUpdate","useEffect","Promise","all","getCharacterDataImport","Weapon","getWeaponDataImport","Artifact","getArtifactDataImport","characterId","onEdit","onDelete","build","calculateBuild","setToSlots","weapon","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","weaponName","getWeaponName","weaponMainVal","getWeaponMainStatValWithOverride","weaponSubKey","getWeaponSubStatKey","weaponSubVal","getWeaponSubStatValWithOverride","weaponLevelName","getLevelName","weaponPassiveName","getWeaponPassiveName","cardClassName","bg","Header","header","xs","faEdit","faTrashAlt","Body","style","cursor","src","getThumb","getStar","thumbnail","getName","getStatValueWithOverride","refineIndex","Stat","getStatName","getStatUnit","getArtifactSetEffects","arr","artifactSetName","getArtifactSetName","highestNum","Math","max","unit","statVal","finalStats","toFixed","fixedUnit","footer","Footer","as","Link","to","pathname","selectedCharacterId","Worker_fn","Worker","Build","databaseObj","ret","slot","setFilters","sets","reduce","accu","num","perm","slotKeys","getArtifactSlotKeys","slotPerm","index","length","numArtsPerSet","setFilter","pieces","splitArtifacts","setPerms","setsInFilter","splitNumArtsPerSet","artArr","setPerm","permaccu","CharacterDisplayCardPromise","CharacterDisplayCard","lazy","BuildDisplay","forceUpdateBuildDisplay","statsDisplayKeys","eleKey","isAutoElemental","isAutoInfusable","state","artifactDatabase","val","lock","every","filterKeys","split","splitArtifactsBySlot","artifactsSlotsToSelectMainStats","mainStat","changeMainStat","setState","autoGenerateBuilds","changeSetFilterKey","newkey","setsNumArr","oldKey","artifactCond","parseInt","dropdownitemsForStar","star","getArtifactSetsByMaxStarEntries","setobj","some","getArtifactSets","artsAccountedOther","cur","ind","Dropdown","totBuildNumber","maxBuildsToShow","generateBuilds","artifactSetPerms","builds","generatingBuilds","asending","buildFilterKey","initialStats","calculateCharacterWithWeaponStats","artifactSetEffects","getAllArtifactSetEffectsObj","deepClone","mainStatVal","getMainStatValue","numStars","depdendencyStatKeys","data","worker","terminate","onmessage","e","ReactGA","timing","category","variable","value","label","calculateTotalBuildNumber","obj","calculateBuildWithObjs","artifacts","postMessage","BuildGeneratorEditorCard","charlist","selectedCharacter","characterName","artsAccounted","generateAllPossibleArtifactSetPerm","buildAlert","Alert","maxBuildsToGenerate","characterDropDown","DropdownButton","title","char","id","Card","Row","Col","lg","editCharacter","getArtifactSlotNameWithIcon","getStatNameWithPercent","ButtonGroup","ItemText","Divider","getArtifactSetEffectsObj","setNkey","setNumKey","setStats","getArtifactSetNumStats","getArtifactSetEffectConditional","ConditionalsUtil","getConditionalNum","conditionalStats","getArtifactConditionalStats","conditionalElement","Badge","getArtifactSetEffectText","Button","faSortAmountDownAlt","faSortAmountUp","ArtifactDisplayItem","ListGroup","action","modalBuild","sort","slotarr1","slotarr","getArtifactSlotIcon","sm","closeModal","BuildModal","characterid","Modal","show","Boolean","onHide","dialogAs","Container","Suspense","fallback","newBuild","onClose","editable","getInitialState","savedState","loadFromLocalStorage","pageview","this","saveToLocalStorage","artifactIds","join","React","Component","initialState","maxBuildsToShowList","maxBuildsToGenerateList","Error","moveToNewLocation","removeCharacterById","getBaseStatValue","defVal","getSpecializedStatKey","getSpeicalizedStatVal","getLevel","characterObj","getCDataObj","baseStat","getIndexFromlevelkey","charKey","getElementalName","elementalKey","getAllCharacterKeys","getElementalKeys","getConstellationName","constellationName","getTitles","titles","getlevelKeys","getlevelNames","indexOf","getSpecializedStat","specializeStat","thumbImg","getCard","cardImg","getTalentImg","talent","img","getConstellationImg","constIndex","getTalentName","getTalentLevelBoost","talents","talentBoost","boostEntry","find","withBoost","talentLevelKeys","levelBoost","clamp","getTalentDocument","document","getTalentFields","fields","getTalentStats","getTalentStatsAll","statsArr","doc","section","tempCond","getTalentConditionalStats","getConditionalProp","stacks","getTalentConditionalFields","auto","infusable","getTalentStatKey","skillKey","elemental","autoInfused","hasOverride","baseStatOverrides","equipArtifacts","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","equipArtifact","charAndWeapon","artifactSetEffectsStats","getArtifactSetEffectsStats","substats","substat","stat","condStats","statKeys","char_ele_key","overrides","hasOwnProperty","specialStatKey","specializedStatVal","addStatsObj","weaponStats","subKey","subVal","bonusStats","getWeaponBonusStat","getWeaponConditionalStat","getRandomElementFromArray","array","floor","random","getRandomIntInclusive","min","ceil","getItem","JSON","parse","setItem","stringify","closeEnoughFloat","a","b","abs","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","slice","f","options","expand","FormulaText","statName","getStatNamePretty","statUnit","html","pretty","getStatNameRaw","getStatVariant","printStat","printFormula","printOverrideFormula","overrideKey","OverrideFormulasText","formulaText","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","eleFormulaText","ele","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","enumerable","writable","noelle_burst_atk","initiated","characterDatabase","charIdIndex","isInvalid","getCharacterIdList","addCharacter","dchar","getArtifactIDFromSlot","charid","unequipArtifactOnSlot","equipArtifactBuild","SlotIcon","faBahai","faFeatherAlt","faHourglass","faWineGlass","faCrown","ArtifactBase","rollData","float","roll","maxNumRoll","round","rollOption","sum","reverse","parseFloat","isNaN","msg","isFloat","getSubstatRollData","rolls","getRolls","totalAllowableRolls","efficiency","currentEfficiency","maximumEfficiency","subStatValidations","validateSubStat","currentNumOfRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","totalPossbleUpgrade","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","rarity","getArtifactPieceName","getArtifactPieceIcon","icons","getArtifactSlotName","slotIcon","getRarityArr","getMainStatKeys","main","getSubStatKeys","numberOfSubstatUnlocked","subStatKey","artifactSetEffect","setNumKeys","charFinalStats","setEffectText","ArtifactSetEffectsObj","setObj","setEffect","hasSetEffect","setEffectObj","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","dmg","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","overloaded_dmg","electro_charged_dmg","superconduct_dmg","burning_dmg","vaporize_dmg","melt_dmg","swirl_dmg","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","s","eleFormulas","str","ele_key","formula","overrideFormulaKey","getLevelIndex","weaponKey","getWeaponRarity","passiveName","getWeaponPassiveDescription","passiveDescription","getWeaponDescription","description","getWeaponConditional","getWeaponMainStatVal","baseStats","getWeaponSubStatVal","sub","getWeaponsOfType","weaponType","getWeaponTypeName","weaponObj","overrideMainVal","overrideSubVal"],"mappings":"oMAGMA,EAAW,kBAAM,cAAC,IAAD,CAAiBC,KAAMC,OACxCC,EAAQ,SAACC,GAAD,OAAW,sBAAMC,UAAWD,EAAME,QAAU,aAAe,GAAhD,SACtBF,EAAMG,MAAQ,YAAIC,MAAMJ,EAAMG,OAAOE,QAAQC,KAAI,SAACC,EAAGC,GAAJ,OAAU,cAACZ,EAAD,GAAeY,MAAS,S,iCCLtF,8KAAIC,EAAa,GACbC,EAAmB,qDACvBA,EAAiBC,MAAK,SAAAC,GACpBH,EAAaG,EAAIC,QACjBH,EAAmB,QAGrB,IAAMI,EAAkB,CAAC,KAAM,KAAM,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,OAC/LC,EAAgB,CAAE,GAAM,SAAU,GAAM,SAAU,IAAO,UAAW,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,WACjdC,EAAiB,CACrBC,MAAO,QACPC,SAAU,WACVC,SAAU,WACVC,IAAK,MACLC,QAAS,Y,iCCdX,0PACIC,EAAe,GACfC,EAAqB,qDACzBA,EAAmBZ,MAAK,SAAAC,GACtBU,EAAeV,EAAIC,QACnBU,EAAqB,QAEvB,IAAMC,EAAuB,CAC3B,KAAM,MAAO,MAAO,OAAQ,MAAO,OAAQ,UAAW,YAAa,YAAa,WAAY,YAAa,iBAE3GC,OAAOpB,KAAKqB,KAAeC,SAAQ,SAAAC,GAAG,OAAIJ,EAAqBK,KAArB,UAA6BD,EAA7B,sBAE1C,IAAME,EAAoB,CAGxBC,EAAG,CAAEC,YAAa,EAAGC,YAAa,EAAGC,qBAAsB,GAC3DC,EAAG,CAAEH,YAAa,EAAGC,YAAa,EAAGC,qBAAsB,GAC3DE,EAAG,CAAEJ,YAAa,EAAGC,YAAa,EAAGC,qBAAsB,IAGvDG,EAAwB,CAC5BC,EAAG,CACDC,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,KACzBC,IAAK,CAAC,EAAG,GAAI,GAAI,GAAI,IACrBC,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,KAC1BC,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAC3BC,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAC3BC,cAAe,CAAC,IAAK,IAAK,IAAK,IAAK,KACpCC,cAAe,CAAC,IAAK,IAAK,IAAK,IAAK,KACpCC,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,IAC1BC,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,KAChCC,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,KAChCC,SAAU,CAAC,IAAK,IAAK,IAAK,EAAK,MAC/BC,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,MAElCC,EAAG,CACDZ,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC7CC,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACtCC,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,EAAG,KAAM,KAAM,KAAM,MAC/CC,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,EAAG,KAAM,KAAM,KAAM,MAChDC,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,MACnDC,cAAe,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,MAC5DC,cAAe,CAAC,IAAK,IAAK,IAAK,IAAK,EAAG,KAAM,KAAM,KAAM,MACzDC,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC1CC,UAAW,CAAC,IAAK,EAAG,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,MACrDC,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,KAClDC,SAAU,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,MACxDC,UAAW,CAAC,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,OAEpDnB,EAAG,CACDQ,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACxEC,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,KACxDC,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1EC,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3EC,KAAM,CAAC,IAAK,IAAK,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MAC7EC,cAAe,CAAC,IAAK,IAAK,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MACtFC,cAAe,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACpFC,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC1DC,UAAW,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,GAAM,MACjFC,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,MAC7EC,SAAU,CAAC,EAAK,EAAK,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACjFC,UAAW,CAAC,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,OAEhFf,EAAG,CACDI,GAAI,CAAC,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACnGC,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjFC,IAAK,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MACnGC,KAAM,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MACpGC,KAAM,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACtGC,cAAe,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/GC,cAAe,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MAC7GC,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/EC,UAAW,CAAC,EAAK,EAAK,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1GC,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,EAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MACvGC,SAAU,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1GC,UAAW,CAAC,IAAK,IAAK,IAAK,EAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,OAE1Gd,EAAG,CACDG,GAAI,CAAC,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3HC,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACtGC,IAAK,CAAC,EAAK,EAAK,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5HC,KAAM,CAAC,EAAK,EAAK,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC7HC,KAAM,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1HC,cAAe,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACnIC,cAAe,CAAC,EAAK,EAAK,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACtIC,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACpGC,UAAW,CAAC,IAAK,GAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,MACnIC,UAAW,CAAC,IAAK,EAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/HC,SAAU,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,MAClIC,UAAW,CAAC,IAAK,IAAK,IAAK,GAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAI/HE,EAAuB,CAC3Bb,GAAI,CAAEY,EAAG,CAAC,GAAI,GAAI,IAAKpB,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,IAAK,MAC5FK,IAAK,CAAEU,EAAG,CAAC,IAAK,EAAG,KAAMpB,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,IAAK,MAC9FI,IAAK,CAAEW,EAAG,CAAC,EAAG,EAAG,GAAIpB,EAAG,CAAC,EAAG,EAAG,GAAII,EAAG,CAAC,GAAI,GAAI,GAAI,IAAKC,EAAG,CAAC,GAAI,GAAI,GAAI,KACxEM,KAAM,CAAES,EAAG,CAAC,IAAK,EAAG,KAAMpB,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,IAAK,MAC/FiB,IAAK,CAAEF,EAAG,CAAC,EAAG,EAAG,GAAIpB,EAAG,CAAC,EAAG,EAAG,GAAI,IAAKI,EAAG,CAAC,GAAI,GAAI,GAAI,IAAKC,EAAG,CAAC,GAAI,GAAI,GAAI,KAC7EO,KAAM,CAAEQ,EAAG,CAAC,EAAG,IAAK,KAAMpB,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,IAAK,MAC/FU,QAAS,CAAEK,EAAG,CAAC,EAAG,EAAG,GAAIpB,EAAG,CAAC,GAAI,GAAI,GAAI,IAAKI,EAAG,CAAC,GAAI,GAAI,GAAI,IAAKC,EAAG,CAAC,GAAI,GAAI,GAAI,KACnFW,UAAW,CAAEI,EAAG,CAAC,IAAK,IAAK,KAAMpB,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,IAAK,MACtGY,UAAW,CAAEG,EAAG,CAAC,IAAK,IAAK,KAAMpB,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,IAAK,MACtGa,SAAU,CAAEE,EAAG,CAAC,IAAK,IAAK,KAAMpB,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,EAAG,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,EAAG,OAG7FkB,EAAoB,CACxBC,OAAQ,CAAEC,KAAM,iBAAkBC,MAAO,CAAC,OAC1CC,MAAO,CAAEF,KAAM,iBAAkBC,MAAO,CAAC,QACzCE,MAAO,CAAEH,KAAM,eAAgBC,MAAO,CAAC,MAAO,OAAQ,OAAQ,UAAW,cACzEG,OAAQ,CAAEJ,KAAM,qBAAsBC,MAAO,CAAC,MAAO,OAAQ,OAAQ,UAAW,gBAAiB,sBAAuB,oBAAqB,wBAAyB,sBAAuB,qBAAsB,uBACnNI,QAAS,CAAEL,KAAM,mBAAoBC,MAAO,CAAC,MAAO,OAAQ,OAAQ,UAAW,YAAa,WAAY,gB,wJCxG3F,SAASK,EAAoB9D,GAAQ,IAC5C+D,EAAkE/D,EAAlE+D,YAAaC,EAAqDhE,EAArDgE,eAAgBC,EAAqCjE,EAArCiE,eAAgBC,EAAqBlE,EAArBkE,OAAQC,EAAanE,EAAbmE,SAC3D,IAAKJ,EAAa,OAAOG,EACzB,GAAI9D,MAAMgE,QAAQL,GAAc,CAC9B,IAD8B,EAC1BM,EAAyBL,EACzBM,EAAsB,KAFI,cAGDP,GAHC,IAG9B,2BAA0C,CAAC,IAAhCQ,EAA+B,QACxC,KAAIF,EAAyBE,EAAeC,UACvC,CACHF,EAAsBC,EACtB,MAHoDF,GAA0BE,EAAeC,UAJnE,8BAUzBF,IACHD,EAAyB,EACzBC,EAAsBP,EAAY,IAIpC,IAAIU,EAAkC,IAA3BJ,EAA+B,aACvC,iCAAOC,EAAoBI,UAA3B,IAAwCJ,EAAoBE,SAAW,EAA/B,YAAyCH,EAAzC,iBAAwEA,EAAyB,EAAI,IAAM,IAAQ,MAC1JM,EAAQ,cAAC,IAAD,CAAOC,QAAoC,IAA3BP,EAA+B,YAAc,UAA7D,SAAyEI,IACjFI,EAAQ,EACZ,OAAO,eAAC,IAAD,WACL,cAAC,IAASC,OAAV,CAAiBC,KAAK,KAAKZ,SAAUA,EAArC,SACE,qBAAIlE,UAAU,gBAAd,UAA+BiE,EAA/B,IAAwCS,OAE1C,eAAC,IAASK,KAAV,WACE,cAAC,IAASC,KAAV,CAAeC,QAAS,kBAAMjB,EAAe,IAA7C,SACE,gDAEDF,EAAYzD,KAAI,SAAC6E,EAAS3E,GAAV,OACf,cAAC,IAAM4E,SAAP,UAAyB,YAAIhF,MAAM+E,EAAQX,UAAUnE,QAAQC,KAAI,SAAA+E,GAAC,OAAIA,EAAI,KAAG/E,KAAI,SAAAgF,GAC/E,IAAIC,IAAcV,EAClB,OAAO,eAAC,IAASI,KAAV,CAA+BC,QAAS,kBAAMjB,EAAesB,IAA7D,UACJJ,EAAQT,UAAWJ,EAAoBE,SAAW,EAA/B,YAAwCc,EAAxC,iBAAsDA,EAAQ,EAAI,IAAM,IAAO,KAD1EC,OAFR/E,YAStB,GAAIuD,EAAYS,SAAW,EAAG,CAEnC,IAAIG,EAAQ,cAAC,IAAD,CAAOC,QAA4B,IAAnBZ,EAAuB,YAAc,UAArD,SAAiEA,EAAiB,EAAjB,UAAwBA,EAAxB,iBAA+CA,EAAiB,EAAI,IAAM,IAAO,eAC9J,OAAO,eAAC,IAAD,WACL,cAAC,IAASc,OAAV,CAAiBC,KAAK,KAAKZ,SAAUA,EAArC,SACE,qBAAIlE,UAAU,gBAAd,UAA+BiE,EAA/B,IAAwCS,OAE1C,eAAC,IAASK,KAAV,WACE,cAAC,IAASC,KAAV,CAAeC,QAAS,kBAAMjB,EAAe,IAA7C,SACE,gDAED,YAAI7D,MAAM2D,EAAYS,UAAUnE,QAAQC,KAAI,SAAA+E,GAAC,OAAIA,EAAI,KAAG/E,KAAI,SAAAgF,GAAK,OAChE,cAAC,IAASL,KAAV,CAA2BC,QAAS,kBAAMjB,EAAeqB,IAAzD,mBACMA,EADN,iBACoBA,EAAQ,EAAI,IAAM,KADlBA,YAKrB,OAA6B,IAAzBvB,EAAYS,SAEd,cAAC,IAAD,CAAQO,KAAK,KAAKG,QAAS,kBAAMjB,EAAeD,EAAiB,EAAI,IAAIG,SAAUA,EAAnF,SACL,qBAAIlE,UAAU,OAAd,UAAqB,cAAC,IAAD,CAAiBJ,KAAMmE,EAAiBwB,IAAgBC,MAA7E,IAA2FvB,YAHxF,I,uGC7DT,SAASwB,IAMP,GAJAC,aAAaC,WAAW,oBACxBD,aAAaC,WAAW,qBAGpBC,IAAkBC,mCACpBC,IAAiBD,mCAAoC,CAErD,IAAIE,EAAOD,IAAiBE,sBAC5BxE,OAAOyE,OAAOF,GAAMrE,SAAQ,SAAAwE,GAAQ,IAAD,IAC7BC,GAAQ,EACRD,EAAIE,WAAaR,IAAkBS,aAAaH,EAAIE,YACtDF,EAAIE,SAAW,GACfD,GAAQ,GAGV,IAAIG,EAAa,CACf,oBAAqB,kBACrB,sBAAuB,qBACvB,kBAAmB,iBACnB,mBAAoB,kBACpB,kBAAmB,iBACnB,iBAAkB,gBAClB,qBAAsB,mBACtB,0BAA2B,uBAC3B,wBAAyB,uBACzB,gBAAiB,eACjB,cAAe,aACf,eAAgB,cAChB,kBAAmB,gBACnB,iBAAkB,gBAClB,0BAA2B,wBAC3B,YAAa,WACb,mBAAoB,kBACpB,YAAa,WACb,oBAAqB,mBACrB,wBAAyB,sBACzB,0BAA2B,yBAC3B,qBAAsB,qBAEpBA,EAAWJ,EAAIK,UACjBL,EAAIK,OAASD,EAAWJ,EAAIK,QAC5BJ,GAAQ,IAGV,OAAID,QAAJ,IAAIA,GAAJ,UAAIA,EAAKM,mBAAT,iBAAI,EAAkBC,gBAAtB,aAAI,SAA6B,cAC/BP,EAAIM,YAAcN,EAAIM,YAAYE,QAAQ,UAAW,iBACrDP,GAAQ,GAGe,aAAlB,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKM,eACPN,EAAIM,YAAc,gBAClBL,GAAQ,GAELA,GACHL,IAAiBa,eAAeT,MAGpC,IAAIU,EAAQhB,IAAkBiB,uBAC9BrF,OAAOyE,OAAOW,GAAOlF,SAAQ,SAAAoF,GAC3B,IAAIX,GAAQ,EAERY,EAAoBvF,OAAOwF,YAAYxF,OAAOyF,QAAQH,EAAUC,mBAAmB1G,KAAI,YAAuB,IAAD,mBAApB6G,EAAoB,KAAXC,EAAW,KAC/G,OAAKrB,IAAiBsB,YAAYD,GAI3B,CAACD,EAASC,IAHfhB,GAAQ,EACD,CAACe,OAASG,QAIhBlB,IACHW,EAAUC,kBAAoBA,GAG5BD,EAAUQ,uBAAsBR,EAAUQ,qBAAuBR,EAAUQ,qBAAqBC,QAAO,SAAAC,GACzG,SAAKA,EAAKC,SAAWD,EAAKE,WACxBvB,GAAQ,GACD,OAjB6B,IAuBlCwB,EAAmEb,EAAnEa,aAAcC,EAAqDd,EAArDc,SAAUC,EAA2Cf,EAA3Ce,cAvBU,EAuBiCf,EAA5BgB,0BAvBL,MAuB0B,GAvB1B,EAwBpCC,EAAYC,IAAUC,aAAaL,GACvCd,EAAUgB,mBAAqBA,EAAmBP,QAAO,SAAAC,GAAS,IAClDU,EAAuCV,EAA/CC,OAA4BU,EAAmBX,EAA5BE,QACrBU,EAAeJ,IAAUK,kBAAkBvB,EAAWoB,GAE1D,QADkBF,IAAUM,qBAAqBX,EAAcO,EAAWC,EAAgBC,EAAcP,EAAeE,KAErH5B,GAAQ,GACD,MAMNW,EAAUyB,UACbzB,EAAUyB,QAAU,MACpBpC,GAAQ,GAELA,GACHP,IAAkB4C,gBAAgB1B,S,iCC1G1C,8KAAI2B,EAAgB,GAChBC,EAAsB,qDAC1BA,EAAoBhI,MAAK,SAAAC,GACvB8H,EAAgB9H,EAAIC,QACpB8H,EAAsB,QAGxB,IAAMC,EAAa,CACjB,GAAM,CACJpF,KAAM,QACNqF,MAAO,EACPC,MAAO,GAET,IAAO,CACLtF,KAAM,SACNqF,MAAO,GACPC,MAAO,GAET,KAAQ,CACNtF,KAAM,cACNqF,MAAO,GACPC,MAAO,GAGT,IAAO,CACLtF,KAAM,SACNqF,MAAO,GACPC,MAAO,GAET,KAAQ,CACNtF,KAAM,cACNqF,MAAO,GACPC,MAAO,GAGT,IAAO,CACLtF,KAAM,SACNqF,MAAO,GACPC,MAAO,GAET,KAAQ,CACNtF,KAAM,cACNqF,MAAO,GACPC,MAAO,GAET,IAAO,CACLtF,KAAM,SACNqF,MAAO,GACPC,MAAO,GAET,KAAQ,CACNtF,KAAM,cACNqF,MAAO,GACPC,MAAO,GAET,IAAO,CACLtF,KAAM,SACNqF,MAAO,GACPC,MAAO,GAET,KAAQ,CACNtF,KAAM,cACNqF,MAAO,GACPC,MAAO,GAGT,IAAO,CACLtF,KAAM,SACNqF,MAAO,GACPC,MAAO,GAET,KAAQ,CACNtF,KAAM,cACNqF,MAAO,GACPC,MAAO,GAET,IAAO,CACLtF,KAAM,SACNqF,MAAO,GACPC,MAAO,IAILC,EAAoB,CACxB/F,UAAW,EACXC,SAAU,GACVF,UAAW,IACXiG,KAAM,KAEFC,EAA8B,CAAC,MAAO,OAAQ,OAAQ,UAAW,YAAa,YAAa,YAAa,WAAY,gBAAiB,sBAAuB,oBAAqB,wBAAyB,sBAAuB,qBAAsB,uB,8FCtFvPC,EAAW,CACfC,QAASC,IACTC,SAAUD,IACV3G,IAAK2G,IACL7G,GAAI6G,IAEJE,SAAUC,IACVC,UAAWD,IACX7G,KAAM6G,IACN/G,IAAK+G,IAELE,SAAUC,IACVC,UAAWD,IACX/G,KAAM+G,IACNrG,IAAKqG,IAEL5G,QAAS8G,IACT5G,UAAW6G,IACX5G,SAAU6G,IACV/G,UAAWgH,IACX7G,UAAW8G,KAGPC,EAAc,SAACC,GAAD,OAClBhB,EAASgB,GAAW,cAAC,IAAD,CAAiBrK,KAAMqJ,EAASgB,GAAUjK,UAAU,UAAa,O,6CCqBxEgB,EAzBD,CACZkJ,UCxBa,IAA0B,8CDyBvCC,YEzBa,IAA0B,gDF0BvCC,UG1Ba,IAA0B,8CH2BvCC,cI3Ba,IAA0B,mDJ4BvCC,YK5Ba,IAA0B,gDL6BvCC,gBM7Ba,IAA0B,qDN8BvCC,cO9Ba,IAA0B,kDP+BvCC,oBQ/Ba,IAA0B,0DRgCvCC,oBShCa,IAA0B,wDTiCvCC,cUjCa,IAA0B,kDVkCvCC,UWlCa,IAA0B,8CXmCvCC,UYnCa,IAA0B,+CZoCvCC,iBapCa,IAA0B,qDbqCvCC,ecrCa,IAA0B,mDdsCvCC,iBetCa,IAA0B,qDfuCvCC,cgBvCa,IAA0B,mDhBwCvCC,ciBxCa,IAA0B,mDjByCvCC,SkBzCa,IAA0B,6ClB0CvCC,kBmB1Ca,IAA0B,uDnB2CvCC,gBoB3Ca,IAA0B,2CpB4CvCC,cqB5Ca,IAA0B,kDrB6CvCC,asB7Ca,IAA0B,iDtB8CvCC,auB9Ca,IAA0B,2CC8C1BvK,EAxBE,CACfwK,iBCvBa,IAA0B,qDDwBvCC,YExBa,IAA0B,kDFyBvCC,uBGzBa,IAA0B,2DH0BvCC,WI1Ba,IAA0B,+CJ2BvCC,cK3Ba,IAA0B,kDL4BvCC,OM5Ba,IAA0B,0CN6BvCC,mBO7Ba,IAA0B,uDP8BvCC,oBQ9Ba,IAA0B,yDR+BvCC,kBS/Ba,IAA0B,sDTgCvCC,mBUhCa,IAA0B,uDViCvCC,YWjCa,IAA0B,gDXkCvCC,gBYlCa,IAA0B,oDZmCvCC,YanCa,IAA0B,+CboCvCC,gBcpCa,IAA0B,oDdqCvCC,aerCa,IAA0B,iDfsCvCC,QgBtCa,IAA0B,4ChBuCvCC,WiBvCa,IAA0B,8CjBwCvCC,sBkBxCa,IAA0B,0DlByCvCC,qBmBzCa,IAA0B,mDnB0CvCC,aoB1Ca,IAA0B,iDpB2CvCC,gBqB3Ca,IAA0B,qDrB4CvCC,YsB5Ca,IAA0B,iDCoC1BC,EAnBE,CACfC,mBClBa,IAA0B,wDDmBvCC,UEnBa,IAA0B,8CFoBvCC,YGpBa,IAA0B,gDHqBvCC,QIrBa,IAA0B,2CJsBvCC,YKtBa,IAA0B,gDLuBvCC,eMvBa,IAA0B,mDNwBvCC,aOxBa,IAA0B,iDPyBvCC,WQzBa,IAA0B,8CR0BvCC,YS1Ba,IAA0B,iDT2BvCC,YU3Ba,IAA0B,gDV4BvCC,gBW5Ba,IAA0B,oDX6BvCC,cY7Ba,IAA0B,kDZ8BvCC,Wa9Ba,IAA0B,+Cb+BvCC,iBc/Ba,IAA0B,8CdgCvCC,iBehCa,IAA0B,qDfiCvCC,0BgBjCa,IAA0B,gEhBkCvCC,aiBlCa,IAA0B,kDC4C1BC,EAvBF,CACXC,WCtBa,IAA0B,gDDuBvCC,mBEvBa,IAA0B,yDFwBvCC,SGxBa,IAA0B,6CHyBvCC,UIzBa,IAA0B,6CJ0BvCC,SK1Ba,IAA0B,6CL2BvCC,WM3Ba,IAA0B,+CN4BvCC,kBO5Ba,IAA0B,uDP6BvCC,UQ7Ba,IAA0B,6CR8BvCC,cS9Ba,IAA0B,kDT+BvCC,YU/Ba,IAA0B,gDVgCvCC,iBWhCa,IAA0B,qDXiCvCC,YYjCa,IAA0B,gDZkCvCC,ealCa,IAA0B,mDbmCvCC,kBcnCa,IAA0B,sDdoCvCC,SepCa,IAA0B,6CfqCvCC,KgBrCa,IAA0B,wChBsCvCC,eiBtCa,IAA0B,mDjBuCvCC,mBkBvCa,IAA0B,wDlBwCvCC,YmBxCa,IAA0B,gDnByCvCC,QoBzCa,IAA0B,6CpB0CvCC,mBqB1Ca,IAA0B,kDC8C1BC,EAxBG,CAChBC,iBCvBa,IAA0B,sDDwBvCC,eExBa,IAA0B,mDFyBvCC,cGzBa,IAA0B,kDH0BvCC,WI1Ba,IAA0B,+CJ2BvCC,WK3Ba,IAA0B,+CL4BvCC,kBM5Ba,IAA0B,sDN6BvCC,8BO7Ba,IAA0B,qEP8BvCC,aQ9Ba,IAA0B,iDR+BvCC,gBS/Ba,IAA0B,qDTgCvCC,cUhCa,IAA0B,kDViCvCC,UWjCa,IAA0B,8CXkCvCC,gBYlCa,IAA0B,oDZmCvCC,canCa,IAA0B,kDboCvCC,qBcpCa,IAA0B,yDdqCvCC,WerCa,IAA0B,+CfsCvCC,WgBtCa,IAA0B,+ChBuCvCC,YiBvCa,IAA0B,iDjBwCvCC,gBkBxCa,IAA0B,qDlByCvCC,YmBzCa,IAA0B,+CnB0CvCC,2BoB1Ca,IAA0B,mEpB2CvCC,aqB3Ca,IAA0B,iDrB4CvCC,asB5Ca,IAA0B,mDCwBrCC,EAAS,CACXC,QCpBW,+DACRC,GACAC,GACAlE,GACAkB,GACAsB,GDgBH2B,SAAU,CAAEC,ME1BC,IAA0B,0CF0BpBC,KG1BN,IAA0B,yCH0BdC,OI1BZ,IAA0B,2CJ0BNC,QK1BpB,IAA0B,4CL0BGC,IM1B7B,IAA0B,wCN0BQC,MO1BlC,IAA0B,0CP0BeC,KQ1BzC,IAA0B,0CR2BvCC,YAAa,CAAEvQ,IS3BF,IAA0B,kDT2BnBD,SU3BP,IAA0B,uDV2BTD,SW3BjB,IAA0B,uDX2BCG,QY3B3B,IAA0B,sDZ2BUJ,Ma3BpC,IAA0B,qDb4BvC2Q,MAAO,CACLC,Qc7BW,IAA0B,+Cd8BrCC,Ue9BW,IAA0B,kDfgCvCC,UAAW,CACTC,OgBjCW,IAA0B,mDhBkCrCC,IiBlCW,IAA0B,4CjBmCrCC,WkBnCW,IAA0B,2DlBsC1BnB,O,iImBnCToB,EAAuB,GAqB7B,SAASC,EAAmBxQ,GAA6B,IAAxByQ,EAAuB,uDAAJ,GAC9CC,EAAeC,EAAmB3Q,EAAKyQ,IAAqB,GAEhEA,EAAiB1Q,SAAQ,SAAA6Q,GAAoB,IAAD,IACXC,IAAiBD,EAAgB5Q,MAAQ,GAAlEA,EADoC,EACpCA,IADoC,IAC/B8Q,kBAD+B,MAClB,GADkB,EAErCJ,EAAaK,SAAS/Q,KAC3B,EAAA0Q,GAAazQ,KAAb,oBAAqB6Q,OAEvBJ,EAAY,YAAO,IAAIM,IAAIN,IAC3B,IAAIO,EAAcpR,OAAOpB,KAAKyS,KAAUtL,QAAO,SAAAuL,GAAC,OAAIA,IAAMnR,GAAO0Q,EAAaK,SAASI,MACnFC,EAAWvR,OAAOpB,KAAK4S,KAAUzL,QAAO,SAAAuL,GAAC,OAAIA,IAAMnR,GAAO0Q,EAAaK,SAASI,MACpF,MAAO,CAAEF,cAAaG,YAExB,SAAST,EAAmB3Q,GAA6B,IAAD,IAAvByQ,EAAuB,uDAAJ,GAC9CC,EAAe,CAAC1Q,GAChBsR,EAAkB,KAFgC,cAGxBb,GAHwB,IAGtD,oCAAWG,EAAX,SACM,UAAAC,IAAgB,OAACD,QAAD,IAACA,OAAD,EAACA,EAAiB5Q,YAAlC,eAAwCA,OAAQA,IAClDsR,EAAe,UAAGT,IAAgB,OAACD,QAAD,IAACA,OAAD,EAACA,EAAiB5Q,YAArC,aAAG,EAAwC8Q,aALR,8BAWtD,OAJe,QAAf,EADAQ,EAAkBA,GAAmBf,EAAqBvQ,UAC1D,SAAiBD,SAAQ,SAAAoR,GACvB,IAAII,EAAkBZ,EAAmBQ,EAAGV,GAC5CC,EAAazQ,KAAb,MAAAyQ,EAAY,YAASa,OAEhBb,EA1BT7Q,OAAOpB,KAAKyS,KAAUnR,SAAQ,SAAAC,GAAG,OAlBX,SAACA,GACrB,IAAIwR,EAAU,GACVV,EAAa,GACjBjR,OAAOpB,KAAK4S,KAAUzL,QAAO,SAAAuL,GAAC,OAAIA,IAAMnR,KAAKD,SAAQ,SAAAoR,GACnDtR,OAAO4R,eAAeD,EAASL,EAAG,CAChCO,IAAK,WAGH,OAFAZ,EAAW7Q,KAAKkR,GAChBtR,OAAO4R,eAAeD,EAASL,EAAG,CAAEO,IAAK,kBAAM,KACxC,GAETC,cAAc,OAGlBC,YAAmBJ,GAES,kBAAjBA,EAAQxR,KACjBuQ,EAAqBvQ,GAAO8Q,GAEKe,CAAc7R,O,kPCLpC,SAAS8R,EAAc1T,GAAQ,IAAD,IACnB2T,sBAAW,SAAAC,GAAC,OAAIA,EAAI,IAAG,GAAtCC,EADkC,oBAE3CC,qBAAU,WACRC,QAAQC,IAAI,CACV/L,IAAUgM,yBACVC,IAAOC,sBACPC,IAASC,0BACR1T,MAAK,kBAAMkT,SACb,IARwC,IASrCS,EAAkCtU,EAAlCsU,YAAaC,EAAqBvU,EAArBuU,OAAQC,EAAaxU,EAAbwU,SACvBzN,EAAYlB,IAAkBS,aAAagO,GAC/C,IAAKvN,EAAW,OAAO,KACvB,IAAI0N,EAAQxM,IAAUyM,eAAe3N,GAC/B4N,EAAeF,EAAfE,WAEA/M,EAA8Cb,EAA9Ca,aAAcpE,EAAgCuD,EAAhCvD,KAAMoR,EAA0B7N,EAA1B6N,OAAQ9M,EAAkBf,EAAlBe,cAC9B+M,EAAa5M,IAAU6M,gBAAgBlN,GACvCmN,EAAgB9M,IAAU+M,iBAAiBpN,GAC3CqN,EAAaf,IAAOgB,cAAcN,EAAOhT,KACzCuT,EAAgBjB,IAAOkB,iCAAiCR,GACxDS,EAAenB,IAAOoB,oBAAoBV,EAAOhT,KACjD2T,EAAerB,IAAOsB,gCAAgCZ,GACtDa,EAAkBvB,IAAOwB,aAAad,EAAO/M,UAC7C8N,EAAoBzB,IAAO0B,qBAAqBhB,EAAOhT,KAE3D,OAAQ,eAAC,IAAD,CAAM3B,UAAWD,EAAM6V,cAAeC,GAAI9V,EAAM8V,GAAK9V,EAAM8V,GAAK,cAAerR,KAAK,YAApF,UACN,cAAC,IAAKsR,OAAN,CAAa9V,UAAU,OAAvB,SACE,eAAC,IAAD,CAAKA,UAAU,aAAf,UACE,cAAC,IAAD,UACGD,EAAMgW,OAAShW,EAAMgW,OAAS,6BAAI,4BAAIxS,QAEzC,cAAC,IAAD,CAAKyS,GAAI,OAAT,SACE,uBAAMhW,UAAU,6BAAhB,UACGD,EAAMuU,QAAU,cAAC,IAAD,CAAQ3P,QAAQ,UAAUG,KAAK,KAAK9E,UAAU,OAC7DiF,QAASqP,EADM,SAEf,cAAC,IAAD,CAAiB1U,KAAMqW,QAExBlW,EAAMwU,UAAY,cAAC,IAAD,CAAQ5P,QAAQ,SAASG,KAAK,KAC/CG,QAASsP,EADQ,SAEjB,cAAC,IAAD,CAAiB3U,KAAMsW,kBAMjC,eAAC,IAAKC,KAAN,CAAWlR,QAASqP,EAAQ8B,MAAO,CAAEC,OAAQ/B,EAAS,UAAY,WAAlE,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAK0B,GAAG,OAAOhW,UAAU,OAAzB,SACE,cAAC,IAAD,CAAOsW,IAAKtO,IAAUuO,SAAS5O,GAAe3H,UAAS,4BAAuBgI,IAAUwO,QAAQ7O,GAAzC,YAAkE8O,WAAS,MAEpI,eAAC,IAAD,WACE,+BAAKzO,IAAU0O,QAAQ/O,GAAvB,IAAsC,cAAC,IAAD,CAAO2O,IAAKxF,IAAOI,SAAS0D,GAAa5U,UAAU,gBAAzF,IAA0G,cAAC,IAAD,CAAOsW,IAAG,UAAExF,IAAOY,mBAAT,aAAE,EAAqBoD,GAAgB9U,UAAU,mBACrK,6BAAI,cAAC,IAAD,CAAOE,MAAO8H,IAAUwO,QAAQ7O,GAAe1H,SAAO,MAC1D,8CAAe+H,IAAU2O,yBAAyB7P,EAAW,cAA7D,aAA+Ee,WAGnF,cAAC,IAAD,CAAK7H,UAAU,OAAf,SACE,eAAC,IAAD,WACE,qBAAIA,UAAU,OAAd,UAAsBgV,EAAYU,GAAiB,WAAQf,EAAOiC,YAAc,EAA7B,KAAnD,IAAuFpB,KACvF,yCAAYN,EAAZ,KAA6BQ,GAAqB,iCAAOmB,IAAKC,YAAY1B,GAAxB,KAAyCE,EAAcuB,IAAKE,YAAY3B,cAG9H,cAAC,IAAD,UACE,cAAC,IAAD,UACG5T,OAAOyF,QAAQkN,IAAS6C,sBAAsBtC,IAAarU,KAAI,YAAiB,IAAD,mBAAdsB,EAAc,KAATsV,EAAS,KAC1EC,EAAkB/C,IAASgD,mBAAmBxV,GAC9CyV,EAAaC,KAAKC,IAAL,MAAAD,KAAI,YAAQJ,IAC7B,OAAO,6BAAc,eAAC,IAAD,CAAOtS,QAAQ,YAAf,UAA4BuS,EAA5B,IAA6C,cAAC,IAAD,CAAOvS,QAAQ,UAAf,SAA0ByS,QAA5EzV,UAItB,cAAC,IAAD,UA/Ca,CAAC,WAAY,YAAa,YAAa,UAAW,YAAa,WAAY,aAgD5EtB,KAAI,SAAA4J,GACZ,IAAIsN,EAAOV,IAAKE,YAAY9M,GACxBuN,EAAUhD,EAAMiD,WAAWxN,GAC/B,OAAO,eAAC,IAAD,CAAK+L,GAAI,GAAT,UACL,qBAAIhW,UAAU,WAAd,UAA0BgK,YAAYC,GAAtC,IAAiD4M,IAAKC,YAAY7M,MAClE,sBAAMjK,UAAS,cAAf,UACU,OAAPwX,QAAO,IAAPA,OAAA,EAAAA,EAASE,QAAQb,IAAKc,UAAU1N,KAAYsN,MAHxBtN,WAS9BlK,EAAM6X,QAAU,cAAC,IAAKC,OAAN,UACf,cAAC,IAAD,CAAQC,GAAIC,IAAMC,GAAI,CACpBC,SAAU,SACVC,oBAAqB7D,GAFvB,oC,6RCtGS,SAAS8D,IACtB,OAAO,IAAIC,OAAO,IAA0B,4C,iICEzBC,E,kHAGSC,GAC1B,IAAIC,EAAM,GAD6B,WAE9BC,GACPD,EAAIC,GAAQhX,OAAOyE,OAAOqS,GAAa/Q,QAAO,SAAArB,GAAG,OAAIA,EAAIgB,UAAYsR,MADvE,IAAK,IAAIA,KAAQnV,IAAjB,EAASmV,GAET,OAAOD,I,yDASiCE,GACxC,IAAIC,EAAOD,EAAWlR,QAAO,SAAAA,GAAM,OAAIA,EAAO5F,OAAKtB,KAAI,SAAAkH,GAAM,OAAIA,EAAO5F,OACzD8W,EAAWE,QAAO,SAACC,EAAMrR,GAAP,OAAkBA,EAAO5F,IAAMiX,EAAOrR,EAAOsR,IAAMD,IAAM,GAAK,GACjFF,EAAK9W,KAAK,SAExB,IAAIkX,EAAO,GACPC,EAAW5E,IAAS6E,sBA6BxB,OA3Be,SAAXC,EAAYC,EAAON,GACrB,GAAIM,GAASH,EAASI,OAAtB,CACE,IAAIC,EAAgB,GACpB5X,OAAOyE,OAAO2S,GAAMlX,SAAQ,SAAA6E,GACtB6S,EAAc7S,GAAS6S,EAAc7S,IAAW,EAC/C6S,EAAc7S,GAAU,KAE/B,IAN4B,EAMxBJ,GAAQ,EANgB,cAOJsS,GAPI,IAO5B,2BAAoC,CAAC,IAA1BY,EAAyB,QAClC,GAAIA,EAAU1X,OAASyX,EAAcC,EAAU1X,MAAQyX,EAAcC,EAAU1X,KAAO0X,EAAUR,KAAM,CACpG1S,GAAQ,EACR,QAVwB,8BAaxBA,GAAO2S,EAAKlX,KAAKgX,OAbvB,CAgBA,IAAI1R,EAAU6R,EAASG,GACvBR,EAAKhX,SAAQ,SAAA6E,GAAW,IAAD,GAEN,UAAXA,GAAuB/E,OAAOpB,MAAK,UAAAiB,IAAakF,UAAb,eAAsB+S,SAAU,IAAI5G,SAASxL,MAClF0R,EAAK1R,GAAWX,EAChB0S,EAASC,EAAQ,EAAT,eAAiBN,SAI/BK,CAAS,EAAG,IACLH,I,gDAEwBS,EAAgBC,EAAUf,GACzD,IAAIgB,EAAehB,EAAWlR,QAAO,SAAAA,GAAM,OAAIA,EAAO5F,OAAKtB,KAAI,SAAAkH,GAAM,OAAIA,EAAO5F,OAC5E+X,EAAqB,GAazB,OAXAlY,OAAOyF,QAAQsS,GAAgB7X,SAAQ,YAAoB,IAAD,mBAAjBC,EAAiB,KAAZgY,EAAY,KACpDP,EAAgB,GACpBO,EAAOjY,SAAQ,SAAAwE,GACTuT,EAAa/G,SAASxM,EAAIK,QAC5B6S,EAAclT,EAAIK,SAAW6S,EAAclT,EAAIK,SAAW,GAAK,EAE/D6S,EAAa,OAAaA,EAAa,OAAa,GAAK,KAE7DM,EAAmB/X,GAAOyX,KAGrBI,EAASb,QAAO,SAACC,EAAMgB,GAAP,OACrBhB,EAAOpX,OAAOyF,QAAQ2S,GAASjB,QAAO,SAACkB,EAAD,0BAAYlY,EAAZ,KAAiB4E,EAAjB,YACnCmT,EAAmB/X,IAAQ+X,EAAmB/X,GAAK4E,GAAWsT,EAAWH,EAAmB/X,GAAK4E,GAAU,IAC1G,KACF,O,KCnDFuT,EAA8B,qDAC9BC,EAAuBC,gBAAK,kBAAMF,KAEnBG,E,kDACnB,WAAYla,GAAQ,IAAD,EAIjB,GAJiB,qBACjB,cAAMA,IAiCRma,wBAA0B,kBAAM,EAAKtG,eAlClB,EAoCnBuG,iBAAmB,SAACxS,GAClB,IAAIvH,EAAO,CAAC,WAAY,YAAa,YAAa,UAAW,YAAa,WAAY,YAAa,YAAa,iBAC5Gga,EAASpS,IAAU6M,gBAAgBlN,GAEnC0S,EAAkBrS,IAAUqS,gBAAgB1S,GAC5C2S,EAAkBtS,IAAUsS,gBAAgB3S,GAgBhD,OAdK0S,GACHja,EAAKwB,KAAK,iBAEPyY,GACHja,EAAKwB,KAAK,mBAAoB,oBAE5ByY,GAAmBC,EACrBla,EAAKwB,KAAL,UAAawY,EAAb,+BAA2CA,EAA3C,sBACoD,QAA7CpS,IAAU+M,iBAAiBpN,IAClCvH,EAAKwB,KAAL,UAAawY,EAAb,sBAGFha,EAAKwB,KAAK,gBAAiB,iBAEpBxB,EAAKC,KAAI,SAAAsB,GAAG,MAAK,CAAC,gBAAiB,gBAAiB,iBAAiB+Q,SAAS/Q,GAA9D,UAAyEyY,EAAzE,YAAmFzY,GAAQA,MAzDjG,EA4DnB4X,eAAiB,WACf,IAAK,EAAKgB,MAAMrC,oBAAqB,MAAO,GAC5C,IAAIsC,EAAmB1U,IAAiBE,sBAOxC,GALAxE,OAAOyF,QAAQuT,GAAkB9Y,SAAQ,YAAiB,IAAD,mBAAdC,EAAc,KAAT8Y,EAAS,KACnDA,EAAIC,aAAaF,EAAiB7Y,GAClC,EAAK4Y,MAAMrC,qBAAuBuC,EAAIrU,UAAYqU,EAAIrU,WAAa,EAAKmU,MAAMrC,4BACzEsC,EAAiB7Y,MAExB,EAAK4Y,MAAM9B,WAAWkC,OAAM,SAAApT,GAAM,OAAIA,EAAO5F,OAAM,CACrD,IAAIiZ,EAAa,EAAKL,MAAM9B,WAAWpY,KAAI,SAAAkH,GAAM,OAAIA,EAAO5F,OAE5DH,OAAOyF,QAAQuT,GAAkB9Y,SAAQ,YAAiB,IAAD,mBAAdC,EAAc,KAAT8Y,EAAS,KACnDG,EAAWlI,SAAS+H,EAAIlU,gBACnBiU,EAAiB7Y,MAG9B,IAAIkZ,EAAQxC,EAAMyC,qBAAqBN,GAIvC,OAFAP,EAAac,gCAAgCrZ,SAAQ,SAACwF,EAASgS,GAAV,OACnD,EAAKqB,MAAMS,SAAS9B,KAAW2B,EAAM3T,GAAW2T,EAAM3T,GAASK,QAAO,SAACrB,GAAD,OAASA,EAAIM,cAAgB,EAAK+T,MAAMS,SAAS9B,UAClH2B,GAjFU,EAmFnBI,eAAiB,SAAC/B,EAAO1S,GACvB,EAAK0U,UAAS,SAAAX,GACZ,IAAIS,EAAWT,EAAMS,SAErB,OADAA,EAAS9B,GAAS1S,EACX,CAAEwU,cACR,EAAKG,qBAxFS,EA0FnBC,mBAAqB,SAAClC,EAAOmC,EAAQC,GAAhB,OAA+B,EAAKJ,UAAS,SAAAX,GAAU,IAAD,IACrEgB,EAAShB,EAAM9B,WAAWS,GAAOvX,IACrC,GAAI4Z,IAAWF,EAAf,CAEA,IAAI/T,GAAuB,UAAAiT,EAAMjT,4BAAN,mBAA4BC,cAA5B,uBAAqC,SAAAiU,GAAY,OAAIA,EAAa/T,SAAW8T,OAAW,GAC/G9C,EAAa8B,EAAM9B,WACnBI,EAAM,EAKV,OAHIyC,GAAcA,EAAW,KAC3BzC,EAAM4C,SAASH,EAAW,KAC5B7C,EAAWS,GAAS,CAAEvX,IAAK0Z,EAAQxC,OAC5B,CAAEJ,aAAYnR,2BACpB,EAAK6T,qBAtGW,EAwGnBO,qBAAuB,SAACC,EAAMzC,GAAP,OACrB/E,IAASyH,gCAAgCD,GAAMtb,KAAI,YAAuB,IAAD,mBAApBkG,EAAoB,KAAZsV,EAAY,KACvE,GAAI,EAAKtB,MAAM9B,WAAWqD,MAAK,SAAAvU,GAAM,OAAIA,EAAO5F,MAAQ4E,KAAS,OAAO,EACxE,IAAI+U,EAAa9Z,OAAOpB,KAAK+T,IAAS4H,gBAAgBxV,IAClDyV,EAAqB,EAAKzB,MAAM9B,WAAWE,QAAO,SAACC,EAAMqD,EAAKC,GAAZ,OAAqBD,EAAIta,KAAOua,IAAQhD,EAASN,EAAOqD,EAAIpD,IAAMD,IAAM,GAC9H,OAAI0C,EAAWX,OAAM,SAAA9B,GAAG,OAAI4C,SAAS5C,GAAOmD,EAAqB,MACzD,cAACG,EAAA,EAASnX,KAAV,CACNC,QAAS,kBAAM,EAAKmW,mBAAmBlC,EAAO3S,EAAQ+U,IADhD,SAGLO,EAAOtY,MAHkBgD,OA9Gb,EAoHnB4U,mBAAqB,iBAAqC,kBAAxB,EAAKiB,gBAA+B,EAAKA,gBAAkB,EAAK7B,MAAM8B,iBAAmB,EAAKC,kBApH7G,EAsHnBA,eAAiB,WAAO,IAAD,iBACfzB,EADe,EACfA,MAAO0B,EADQ,EACRA,iBACb,IAFqB,EACUH,eACV,OAAO,EAAKlB,SAAS,CAAEsB,OAAQ,KACpD,EAAKtB,SAAS,CAAEuB,kBAAkB,IAHb,MAIiE,EAAKlC,MAArF9B,EAJe,EAIfA,WAAYiE,EAJG,EAIHA,SAAUC,EAJP,EAIOA,eAAgBN,EAJvB,EAIuBA,gBAAiB/U,EAJxC,EAIwCA,qBACzDR,EAAYlB,IAAkBS,aAAa,EAAKkU,MAAMrC,qBACtD0E,EAAe5U,IAAU6U,kCAAkC/V,GAE3DgW,EAAqB3I,IAAS4I,4BAA4BzV,GAC1DiS,EAAiByD,YAAUnC,GAE/BrZ,OAAOyE,OAAOsT,GAAgB7X,SAAQ,SAAAiY,GACpCA,EAAOjY,SAAQ,SAAAwE,GACbA,EAAI+W,YAAc9I,IAAS+I,iBAAiBhX,EAAIM,YAAaN,EAAIiX,SAAUjX,EAAI0C,aAInF,IAAIwU,EAAsBjL,YAAmBwK,EAAgBC,EAAaxK,kBAGtEiL,EAAO,CACT9D,iBAAgBgD,mBAAkBK,eAAcE,qBAAoBM,sBACpE3E,aAAY4D,kBAAiBM,iBAAgBD,YAE3C,EAAKY,QAAQ,EAAKA,OAAOC,YAC7B,EAAKD,OAAS,IAAIlF,EAClB,EAAKkF,OAAOE,UAAY,SAACC,GACvBC,IAAQC,OAAO,CACbC,SAAU,mBACVC,SAAU,SACVC,MAAOL,EAAEJ,KAAKM,OACdI,MAAO1F,EAAM2F,0BAA0BnD,EAAO0B,EAAkB,EAAKhC,MAAM9B,cAE7E,IAAI+D,EAASiB,EAAEJ,KAAKb,OAAOnc,KAAI,SAAA4d,GAAG,OAChCjW,IAAUkW,uBAAuB5W,EAAsBsV,EAAcqB,EAAIE,cAC3E,EAAKjD,SAAS,CAAEsB,SAAQC,kBAAkB,IAE1C,EAAKa,OAAOC,mBACL,EAAKD,QAGd,EAAKA,OAAOc,YAAYf,IA/JP,EAkKnBgB,yBAA2B,SAACte,GAAW,IAAD,EACM,EAAKwa,MAAzC9B,EAD8B,EAC9BA,WAAYP,EADkB,EAClBA,oBACZiC,EAAqBpa,EAArBoa,iBACFmE,EAAW1Y,IAAkBiB,uBAC7B0X,EAAoB3Y,IAAkBS,aAAa6R,GACnDsG,EAAgBD,EAAoBA,EAAkBhb,KAAO,iBAC7Dkb,EAAgBhG,EAAWE,QAAO,SAACC,EAAMqD,GAAP,OAAeA,EAAIta,IAAMiX,EAAOqD,EAAIpD,IAAMD,IAAM,GAEtF,EAAKiC,MAAQ,EAAKtB,iBAClB,EAAKgD,iBAAmBlE,EAAMqG,mCAAmCjG,GACjE,EAAK2D,eAAiB/D,EAAM2F,0BAA0B,EAAKnD,MAAO,EAAK0B,iBAAkB9D,GAVrD,IAW9B2D,EAX8B,eAW9BA,eAEFuC,EAAgC,IAAnBvC,EACf,cAACwC,EAAA,EAAD,CAAOja,QAAQ,UAAU3E,UAAU,OAAnC,SAA0C,2FAA6D,4BAAIwe,IAAjE,mFACvCpC,EAAiB,EAAK7B,MAAMsE,oBAC7B,cAACD,EAAA,EAAD,CAAOja,QAAQ,SAAS3E,UAAU,OAAlC,SAAyC,wEAA0C,4BAAIoc,IAA9C,eAA6E,4BAAIoC,IAAjF,0EAA2K,EAAKjE,MAAMsE,oBAAtL,sCACzC,cAACD,EAAA,EAAD,CAAOja,QAAQ,UAAU3E,UAAU,OAAnC,SAA0C,0DAA6Boc,GAAkB,EAAK7B,MAAM8B,gBAAkB,YAAc,gBAA1F,IAA2G,4BAAID,IAA/G,eAA8I,4BAAIoC,IAAlJ,SAC1CM,EAAoB,eAACC,EAAA,EAAD,CAAgBC,MAAO9G,EAAsBsG,EAAgB,mBAA7D,UACtB,cAACrC,EAAA,EAASnX,KAAV,CAAeC,QAAS,kBAAM,EAAKiW,SAAS,CAAEhD,oBAAqB,GAAIsE,OAAQ,GAAIG,eAAgB,eAAnG,0BACCnb,OAAOyE,OAAOqY,GAAUje,KAAI,SAAC4e,EAAM1e,GAAP,OAC3B,cAAC4b,EAAA,EAASnX,KAAV,CACEC,QAAS,kBAAM,EAAKiW,SAAS,CAAEhD,oBAAqB+G,EAAKC,GAAI1C,OAAQ,GAAIG,eAAgB,eAD3F,SAGGsC,EAAK1b,MAHY0b,EAAK1b,KAAOhD,SAMpC,OAAO,eAAC4e,EAAA,EAAD,CAAMtJ,GAAG,cAAcrR,KAAK,YAA5B,UACL,cAAC2a,EAAA,EAAKrJ,OAAN,8BACA,eAACqJ,EAAA,EAAKhJ,KAAN,WACE,eAACiJ,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKrJ,GAAI,GAAIsJ,GAAI,EAAGtf,UAAU,OAA9B,UAEGkY,EACC,cAACzE,EAAA,EAAD,CAAesC,OAAQ+I,EAAmBzK,YAAa6D,EAAqBrC,GAAI,eAAgB+B,QAAQ,EAAOhC,cAAc,OAAOtB,OAAQ,kBAAM,EAAK4G,SAAS,CAAEqE,eAAe,OACjL,cAACJ,EAAA,EAAD,CAAMtJ,GAAG,eAAerR,KAAK,YAAYxE,UAAU,OAAnD,SACE,cAACmf,EAAA,EAAKrJ,OAAN,UACGgJ,MAIP,eAACK,EAAA,EAAD,CAAMtJ,GAAG,eAAerR,KAAK,YAA7B,UACE,cAAC2a,EAAA,EAAKrJ,OAAN,4CACA,cAACqJ,EAAA,EAAKhJ,KAAN,UACG8D,EAAac,gCAAgC1a,KAAI,SAAC6G,EAASgS,GAAV,OACjD,sBAAKlZ,UAAU,kDAAf,UACC,oBAAIA,UAAU,gBAAd,SACGmU,IAASqL,4BAA4BtY,KAExC,eAAC6X,EAAA,EAAD,CACEC,MAAO,EAAKzE,MAAMS,SAAS9B,GAASrC,IAAK4I,uBAAuB,EAAKlF,MAAMS,SAAS9B,IAAU,oBAC9FlZ,UAAU,WAFZ,UAGE,cAACmc,EAAA,EAASnX,KAAV,CAAeC,QAAS,kBAAM,EAAKgW,eAAe/B,EAAO,KAAzD,yBACC7V,IAAkB6D,GAAS1D,MAAMnD,KAAI,SAAAmG,GAAW,OAC/C,cAAC2V,EAAA,EAASnX,KAAV,CAAeC,QAAS,kBAAM,EAAKgW,eAAe/B,EAAO1S,IAAzD,SACGqQ,IAAK4I,uBAAuBjZ,IAD6CA,WATXU,cAkB7E,cAACmY,EAAA,EAAD,CAAKrJ,GAAI,GAAIsJ,GAAI,EAAGtf,UAAU,OAA9B,SAAqC,cAACof,EAAA,EAAD,UAElC3G,EAAWpY,KAAI,SAACgZ,EAAWH,GAAW,IAC1B3S,EAAgB8S,EAArB1X,IAAakX,EAAQQ,EAARR,IACbvR,EAAyB,EAAKiT,MAA9BjT,qBACN,OAAQ,cAAC+X,EAAA,EAAD,CAAKrf,UAAU,OAAmBgW,GAAI,GAAtC,SACN,eAACmJ,EAAA,EAAD,CAAMnf,UAAU,QAAQ6V,GAAG,eAAerR,KAAK,YAA/C,UACE,cAAC2a,EAAA,EAAKrJ,OAAN,UACE,eAAC4J,EAAA,EAAD,WAEE,eAACX,EAAA,EAAD,CAAgBjH,GAAI4H,IAAaV,MAAO7K,IAASgD,mBAAmBkC,EAAU1X,IAAK,kBAAnF,UACE,cAACwa,EAAA,EAASnX,KAAV,CAAeC,QAAS,kBAAM,EAAKmW,mBAAmBlC,EAAO,KAA7D,+BACA,cAACiD,EAAA,EAASwD,SAAV,sFACC,EAAKjE,qBAAqB,EAAGxC,GAC9B,cAACiD,EAAA,EAASyD,QAAV,IACA,cAACzD,EAAA,EAASwD,SAAV,0EACC,EAAKjE,qBAAqB,EAAGxC,GAC9B,cAACiD,EAAA,EAASyD,QAAV,IACA,cAACzD,EAAA,EAASwD,SAAV,8DACC,EAAKjE,qBAAqB,EAAGxC,MAGhC,cAAC6F,EAAA,EAAD,CAAgBjH,GAAI4H,IAAaV,MAAK,UAAK3F,EAAUR,IAAf,QACpC3U,UAAWmV,EAAU1X,KAAO8c,GAAiB,EAD/C,SAGGpF,EAAU1X,KAAOwS,IAAS0L,yBAAyBxG,EAAU1X,MAAQH,OAAOpB,KAAK+T,IAAS0L,yBAAyBxG,EAAU1X,MAAMtB,KAAI,SAAAwY,GACtI,IAAImD,EAAqBvD,EAAWE,QAAO,SAACC,EAAMqD,GAAP,OAAgBA,EAAIta,KAAOsa,EAAIta,MAAQ0X,EAAU1X,IAAOiX,EAAOqD,EAAIpD,IAAMD,IAAM,GAC1H,OAAQ6C,SAAS5C,GAAOmD,GAAsB,GAC3C,cAACG,EAAA,EAASnX,KAAV,CACCC,QAAS,kBAAM,EAAKiW,UAAS,SAACX,GAC5B,IAAI9B,EAAa8B,EAAM9B,WAEvB,OADAA,EAAWS,GAAOL,IAAM4C,SAAS5C,GAC1B,CAAEJ,gBACR,EAAK0C,qBALT,mBAOKtC,EAPL,SAAoBA,aAa9BtS,EAAS,cAAC4Y,EAAA,EAAKhJ,KAAN,UAAW,cAACiJ,EAAA,EAAD,UAClB5d,OAAOpB,KAAK+T,IAAS4H,gBAAgBxV,EAAQ,KAAKgB,QAAO,SAAAuY,GAAO,OAAIrE,SAASqE,IAAYjH,KAAKxY,KAAI,SAAA0f,GACjG,IAAIC,EAAW7L,IAAS8L,uBAAuB1Z,EAAQwZ,GACnDhc,EAAiB,EACjBD,EAAcqQ,IAAS+L,gCAAgC3Z,EAAQwZ,GACnE,GAAIjc,EAAa,CACfC,EAAiBoc,IAAiBC,kBAAkB9Y,EAAsB,CAAEG,OAAQlB,EAAQmB,QAASqY,IACrG,IAAIM,EAAmBlM,IAASmM,4BAA4B/Z,EAAQwZ,EAAWhc,GAC3Esc,IACGL,IAAUA,EAAW,IAC1Bxe,OAAOyF,QAAQoZ,GAAkB3e,SAAQ,mCAAEuI,EAAF,KAAWwQ,EAAX,YACvCuF,EAAS/V,IAAY+V,EAAS/V,IAAY,GAAKwQ,MAGrD,IAEI8F,EAAqB,cAAC1c,EAAA,EAAD,CACvBC,YAAaA,EACbC,eAAgBA,EAChBC,eALgC,SAACD,GAAD,OAAoB,EAAKmX,UAAS,SAAAX,GAAK,MACtE,CAAEjT,qBAAsB6Y,IAAiBnc,eAAeuW,EAAMjT,qBAAsB,CAAEG,OAAQlB,EAAQmB,QAASqY,GAAahc,MAAoB,EAAKoX,qBAKtJlX,OAAQ,eAACuc,EAAA,EAAD,CAAO7b,QAAQ,UAAf,UAA0Bob,EAA1B,YAEV,OAAO,eAACV,EAAA,EAAD,CAAqBrJ,GAAI,GAAIhW,UAAU,OAAvC,UACL,+BAAKugB,EAAL,IAA0BpM,IAASsM,yBAAyBla,EAAQwZ,MACnEC,EAAW,cAACZ,EAAA,EAAD,UACT5d,OAAOyF,QAAQ+Y,GAAU3f,KAAI,mCAAE4J,EAAF,KAAWwQ,EAAX,YAC5B,eAAC4E,EAAA,EAAD,CAAKrJ,GAAI,GAAT,UAA4Ba,IAAKC,YAAY7M,GAA7C,KAAyDwQ,EAAK5D,IAAKE,YAAY9M,KAA7DA,QACb,OALM8V,UAQA,SAlEU7G,aAwEzC,cAACkG,EAAA,EAAD,CAAKpf,UAAU,OAAf,SACE,cAACqf,EAAA,EAAD,UAAMnH,GAAuByG,MAE/B,eAACS,EAAA,EAAD,CAAKpf,UAAU,iCAAf,UACE,cAACqf,EAAA,EAAD,CAAKrJ,GAAG,OAAR,SACE,cAAC0K,EAAA,EAAD,CACE1gB,UAAU,QACVkE,UAAWgU,GAAuBkE,EAAiB,EAAK7B,MAAMsE,qBAAuB,EAAKtE,MAAMkC,iBAChG9X,QAAUuT,GAAuBkE,GAAkB,EAAK7B,MAAMsE,oBAAuB,UAAY,SACjG5Z,QAAS,EAAKqX,eAJhB,SAKC,uDAEH,cAAC+C,EAAA,EAAD,CAAKrJ,GAAG,OAAR,SAEE,eAAC0J,EAAA,EAAD,WACE,cAACX,EAAA,EAAD,CAAgB7a,UAAWgU,EAAqB8G,MAAO,4CAAc,4BAAInI,IAAK4I,uBAAuB,EAAKlF,MAAMoC,qBAA6B7E,GAAI4H,IAAjJ,SACGxH,GAAuBiC,EAAiB9Z,KAAI,SAAAsB,GAAG,OAC9C,cAACwa,EAAA,EAASnX,KAAV,CAAyBC,QAAS,kBAAM,EAAKiW,SAAS,CAAEyB,eAAgBhb,GAAO,EAAKwZ,qBAApF,SACGtE,IAAK4I,uBAAuB9d,IADXA,QAKxB,cAAC+e,EAAA,EAAD,CAAQzb,QAAS,kBAAM,EAAKiW,UAAS,SAAAX,GAAK,MAAK,CAAEmC,UAAWnC,EAAMmC,YAAa,EAAKvB,qBAApF,SACE,cAAC,IAAD,CAAiBvb,KAAM,EAAK2a,MAAMmC,SAAWiE,IAAsBC,IAAgB5gB,UAAU,2BArUxF,EA6UnB6gB,oBAAsB,SAAC9gB,GAAW,IAC1ByU,EAA4BzU,EAA5ByU,MAAO2F,EAAqBpa,EAArBoa,iBACb,OAAQ,8BACN,eAAC2G,EAAA,EAAU9b,KAAX,CACEL,QAAS5E,EAAMmZ,MAAQ,EAAI,aAAe,eAAgBlZ,UAAU,aAAa+gB,QAAM,EACvF9b,QAAS,kBAAM,EAAKiW,SAAS,CAAE8F,WAAYxM,KAF7C,UAIE,cAAC4K,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UAAM7d,OAAOyF,QAAQuN,EAAME,YAAYuM,MAAK,qCAAQC,GAAR,+CAAiD/H,OAAS+H,EAAS/H,UAAQ9Y,KAAI,mCAAEsB,EAAF,KAAOwf,EAAP,YACzH,eAACX,EAAA,EAAD,CAAiB7b,QAAQ,UAAU3E,UAAU,OAA7C,UACGmhB,EAAQ9gB,KAAI,SAAA6G,GAAO,OAAIiN,IAASiN,oBAAoBla,MADvD,IACmEiN,IAASgD,mBAAmBxV,KADnFA,UAKhB,cAACyd,EAAA,EAAD,UACGjF,EAAiB9Z,KAAI,SAAAsB,GAAG,aACvB,cAAC0d,EAAA,EAAD,CAAKrf,UAAU,cAAwBgW,GAAI,GAAIqL,GAAI,EAAG/B,GAAI,EAA1D,SACE,iCAAOzI,IAAKC,YAAYnV,GAAxB,KAA+B,uBAAM3B,UAAU,eAAhB,oBAAgCwU,EAAMiD,WAAW9V,UAAjD,aAAgC,EAAuB+V,QAAQb,IAAKc,UAAUhW,IAAOkV,IAAKE,YAAYpV,UADrGA,cA7VzB,EAqWnB2f,WAAa,kBAAM,EAAKpG,SAAS,CAAE8F,WAAY,KAAMzB,eAAe,KArWjD,EAsWnBgC,WAAa,SAACxhB,GAAW,IACjByU,EAAuBzU,EAAvByU,MAAOgN,EAAgBzhB,EAAhByhB,YACPjC,EAAkB,EAAKhF,MAAvBgF,cACN,OAAO,cAACkC,EAAA,EAAD,CAAOC,KAAMC,QAAQpC,GAAiB/K,GAAQoN,OAAQ,EAAKN,WAAYxc,KAAK,KAAK+c,SAAUC,IAAW9hB,UAAU,YAAhH,SACL,cAAC,IAAM+hB,SAAP,CAAgBC,SAAU,8CAA1B,SACE,cAACjI,EAAD,CAAsB1F,YAAamN,EAAaS,SAAUzN,EACxD0N,QAAS,EAAKZ,WACd1N,YAAa,EAAKsG,wBAClBiI,SAAU5C,EACV3H,OAAQ,cAAC8I,EAAA,EAAD,CAAQ/b,QAAQ,SAASM,QAAS,EAAKqc,WAAvC,0BA7Wd7b,cACA,EAAK8U,MAAQN,EAAamI,kBACtBriB,EAAMqG,SAAS8R,oBACjB,EAAKqC,MAAQN,EAAamI,kBAC1BriB,EAAMqG,SAAS8R,sBAAwB,EAAKqC,MAAMrC,oBAAsBnY,EAAMqG,SAAS8R,yBAClF,CACL,IAAImK,EAAaC,YAAqB,uBACtC,GAAID,EAAY,CACd,IAAIvb,EAAYlB,IAAkBS,aAAagc,EAAWnK,qBACtDmK,GAAcvb,IAAW,EAAKyT,MAAQ8H,IAX7B,OAcjB3E,IAAQ6E,SAAS,UAdA,E,gEAoXE,IAAD,OAClBzO,QAAQC,IAAI,CACV/L,IAAUgM,yBACVC,IAAOC,sBACPC,IAASC,0BACR1T,MAAK,WACN,EAAKkT,cAEL,EAAKuH,0B,2CAIP,IAAIZ,EAAQyC,YAAUwF,KAAKjI,OAC3BA,EAAMiC,OAAS,UACRjC,EAAMkC,wBACNlC,EAAMyG,kBACNzG,EAAMgF,cACbkD,YAAmB,sBAAuBlI,K,6CAEpB,IAAD,EACrB,UAAAiI,KAAKlF,cAAL,SAAaC,mBACNiF,KAAKlF,S,+BAEJ,IAAD,SACiEkF,KAAKjI,MAAvErC,EADC,EACDA,oBAAqB8I,EADpB,EACoBA,WAAY3E,EADhC,EACgCA,gBADhC,IACiDG,cADjD,MAC0D,GAD1D,EAEH+B,EAAoB3Y,IAAkBS,aAAa6R,GACnDvQ,EAAY,OAAG4W,QAAH,IAAGA,OAAH,EAAGA,EAAmB5W,aAClC6W,EAAgBxW,IAAU0O,QAAQ/O,EAAc,kBAChDwS,EAAmB,GAGvB,OAFIxS,IACFwS,EAAmBqI,KAAKrI,iBAAiBxS,IACnC,eAACma,EAAA,EAAD,WACN,mBAAMP,WAAN,CAAiB/M,MAAOwM,EAAYQ,YAAatJ,IACjD,cAACkH,EAAA,EAAD,CAAKpf,UAAU,YAAf,SACE,cAACqf,EAAA,EAAD,UAEE,mBAAMhB,yBAAN,CAA+BlE,iBAAkBA,QAGrD,cAACiF,EAAA,EAAD,CAAKpf,UAAU,OAAf,SACE,cAACqf,EAAA,EAAD,UACE,eAACF,EAAA,EAAD,CAAMtJ,GAAG,cAAcrR,KAAK,YAA5B,UACE,cAAC2a,EAAA,EAAKrJ,OAAN,UAAcoC,EAAmB,kBAAcsE,EAAOrD,OAArB,iCAAoDqF,GAAkB,2CAEvG,cAACsC,EAAA,EAAD,UACGtE,EAAOnc,KAAI,SAACmU,EAAO0E,GAAR,OACTA,EAAQmD,GAAoB,cAAC,EAAKwE,oBAAN,CAA0BrM,MAAOA,EAAO1N,UAAWyX,EAAmBrF,MAAOA,EAAwDiB,iBAAkBA,GAA9D3Y,OAAOyE,OAAOuO,EAAMkO,aAAaC,KAAK,yB,GAnalIC,IAAMC,WAA3B5I,EAiBZ6I,aAAe,CACpBtG,OAAQ,GACRC,kBAAkB,EAClBvE,oBAAqB,GACrBO,WAAY,CAAC,CAAE9W,IAAK,GAAIkX,IAAK,GAAK,CAAElX,IAAK,GAAIkX,IAAK,GAAK,CAAElX,IAAK,GAAIkX,IAAK,IACvEvR,qBAAsB,GACtB0T,SAAU,CAAC,GAAI,GAAI,IACnB2B,eAAgB,YAChBD,UAAU,EACVsE,WAAY,KACZzB,eAAe,EACflD,gBAAiB,IACjBwC,oBAAqB,KA7BJ5E,EA+BZ8I,oBAAsB,CAAC,IAAK,GAAI,GAAI,GA/BxB9I,EAgCZ+I,wBAA0B,CAAC,IAAQ,IAAQ,IAAO,IAAO,IAAM,KAhCnD/I,EAiCZmI,gBAAkB,kBAAMpF,YAAU/C,EAAa6I,eAjCnC7I,EAkCZc,gCAAkC,CAAC,QAAS,SAAU,Y,uLCnD1C/S,E,WAEnB,aAAgB,GAAD,oBAAKwa,gBAAgBxa,EAAW,MAAMib,MAAM,0C,iEA4JpC5O,GACrB,IAAIvN,EAAYlB,IAAkBS,aAAagO,GAC3CvN,EAAUC,mBACZvF,OAAOyE,OAAOa,EAAUC,mBAAmBrF,SAAQ,SAAAyF,GAAK,OACtDrB,IAAiBod,kBAAkB/b,EAAO,OAC9CvB,IAAkBud,oBAAoB9O,O,KAnKrBrM,EAGZgM,uBAAyB,kBAAMtL,KAHnBV,EAIZob,iBAAmB,SAACtc,EAAWmD,GAAyB,IAAhBoZ,EAAe,uDAAN,EAChD1b,EAA2Bb,EAA3Ba,aAAcC,EAAad,EAAbc,SACpB,GAAgB,uBAAZqC,EAAkC,OANrBjC,EAMiCsb,sBAAsB3b,GACxE,GAAgB,uBAAZsC,EAAkC,OAPrBjC,EAOiCub,sBAAsB5b,EAAcC,GACtF,GAAgB,eAAZqC,EAA0B,OAAOgK,IAAOkB,iCAAP,OAAwCrO,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAW6N,QACxF,GAAgB,eAAZ1K,GAAwC,gBAAZA,EAA2B,OAT1CjC,EASsDwb,SAAS5b,GAChF,GAAgB,kBAAZqC,GAA+BA,EAAQyI,SAAS,iBAAkB,OAAO,GAC7E,GAAIzI,KAAWnB,IAAmB,OAAOA,IAAkBmB,GAC3D,IAAIwZ,EAZazb,EAYO0b,YAAY/b,GACpC,OAAI8b,GAAgBxZ,KAAWwZ,EAAaE,SAAiBF,EAAaE,SAAS1Z,GAblEjC,EAagF4b,qBAAqBhc,IAC/Gyb,GAdUrb,EAiBZ0b,YAAc,SAACG,GAAD,OAAapb,IAAcob,IAjB7B7b,EAkBZ8b,iBAAmB,SAACC,GAAD,MAAeV,EAAf,uDAAwB,GAAxB,MAAgD,aAAjBU,EAA8B,YAA2B,OAAbtiB,UAAa,IAAbA,KAAA,UAAAA,IAAgBsiB,UAAhB,eAA+BxgB,OAAQ8f,GAlBzHrb,EAmBZgc,oBAAsB,kBAAMxiB,OAAOpB,KAAKqI,MAnB5BT,EAqBZ0O,QAAU,SAACmN,GAAD,MAAUR,EAAV,uDAAmB,GAAnB,OAA2B,UArBzBrb,EAqB8B0b,YAAYG,UAAjB,eAA2BtgB,OAAQ8f,GArB5Drb,EAsBZwO,QAAU,SAACqN,GAAD,MAAUR,EAAV,uDAAmB,EAAnB,OAA0B,UAtBxBrb,EAsB6B0b,YAAYG,UAAjB,eAA2BlI,OAAQ0H,GAtB3Drb,EAuBZ6M,gBAAkB,SAACgP,GAAD,MAAUR,EAAV,uDAAmB,GAAnB,OAA2B,UAvBjCrb,EAuBsC0b,YAAYG,UAAjB,eAA2BjP,aAAcyO,GAvB1Erb,EAwBZic,iBAAmB,kBAAMziB,OAAOpB,KAAKqB,MAxBzBuG,EAyBZ+M,iBAAmB,SAAC8O,GAAD,MAAUR,EAAV,uDAAmB,GAAnB,OAA2B,UAzBlCrb,EAyBuC0b,YAAYG,UAAjB,eAA2B/O,gBAAiBuO,GAzB9Erb,EA0BZkc,qBAAuB,SAACL,GAAD,MAAUR,EAAV,uDAAmB,GAAnB,OAA2B,UA1BtCrb,EA0B2C0b,YAAYG,UAAjB,eAA2BM,oBAAqBd,GA1BtFrb,EA2BZoc,UAAY,SAACP,GAAD,MAAUR,EAAV,uDAAmB,GAAnB,OAA2B,UA3B3Brb,EA2BgC0b,YAAYG,UAAjB,eAA2BQ,SAAUhB,GA3BhErb,EA8BZsc,aAAe,kBAAM9iB,OAAOpB,KAAKuI,MA9BrBX,EA+BZuc,cAAgB,SAAC3c,GAAD,MAAWyb,EAAX,uDAAoB,GAApB,OAAsC,OAAV1a,UAAU,IAAVA,KAAA,UAAAA,IAAaf,UAAb,eAAwBrE,OAAQ8f,GA/BhErb,EAgCZ4b,qBAAuB,SAAChc,GAAD,OAhCXI,EAgC8Bsc,eAAeE,QAAQ5c,IAhCrDI,EAiCZwb,SAAW,SAAC5b,GAAD,MAAWyb,EAAX,uDAAoB,EAApB,OAAqC,OAAV1a,UAAU,IAAVA,KAAA,UAAAA,IAAaf,UAAb,eAAwBgB,QAASya,GAjC3Drb,EAkCZC,aAAe,SAACL,GAAD,MAAWyb,EAAX,uDAAoB,EAApB,OAAqC,OAAV1a,UAAU,IAAVA,KAAA,UAAAA,IAAaf,UAAb,eAAwBiB,QAASwa,GAlC/Drb,EAqCZyc,mBAAqB,SAACZ,GAAD,uBArCT7b,EAqC2B0b,YAAYG,UAA9B,aAAa,EAA2Ba,gBArCjD1c,EAsCZsb,sBAAwB,SAACO,GAAD,uBAtCZ7b,EAsC8Byc,mBAAmBZ,UAArC,aAAa,EAAkCliB,KAtC3DqG,EAuCZub,sBAAwB,SAACM,EAASjc,GAAV,yBAvCZI,EAuCwCyc,mBAAmBZ,UAA/C,iBAAuB,EAAkC/F,aAAzD,aAAuB,EAvCnC9V,EAuCkF4b,qBAAqBhc,KAvCvGI,EAyCZuO,SAAW,SAACsN,GAAD,MAAUR,EAAV,uDAAmB,KAAnB,OAA4B,UAzC3Brb,EAyCgC0b,YAAYG,UAAjB,eAA2Bc,WAAYtB,GAzClErb,EA0CZ4c,QAAU,SAACf,GAAD,MAAUR,EAAV,uDAAmB,KAAnB,OAA4B,UA1C1Brb,EA0C+B0b,YAAYG,UAAjB,eAA2BgB,UAAWxB,GA1ChErb,EA2CZ8c,aAAe,SAACjB,EAAS3b,GAAV,UAAqBmb,EAArB,uDAA8B,KAA9B,OAAuC,UA3C1Crb,EA2C+C0b,YAAYG,UAAjB,mBAA2BkB,cAA3B,mBAAoC7c,UAApC,eAAgD8c,MAAO3B,GA3CjGrb,EA4CZid,oBAAsB,SAACpB,EAASqB,GAAV,UAAsB7B,EAAtB,uDAA+B,KAA/B,OAAwC,UA5ClDrb,EA4CuD0b,YAAYG,UAAjB,mBAA2BkB,cAA3B,0CAAoDG,EAAa,WAAjE,eAAuEF,MAAO3B,GA5ChIrb,EA+CZmd,cAAgB,SAACtB,EAAS3b,GAAV,UAAqBmb,EAArB,uDAA8B,GAA9B,OAAqC,UA/CzCrb,EA+C8C0b,YAAYG,UAAjB,mBAA2BkB,cAA3B,mBAAoC7c,UAApC,eAAgD3E,OAAQ8f,GA/CjGrb,EAiDZod,oBAAsB,SAACzd,EAAcO,EAAWL,GAA+B,IAAD,EAAfwb,EAAe,uDAAN,EAE7E,GAAkB,UAAdnb,GAAuC,UAAdA,EAAuB,OAAOmb,EAE3D,IADA,IAAIgC,GAAU,UApDGrd,EAoDE0b,YAAY/b,UAAjB,eAAgCod,SAAU,GAC/CxkB,EAAI,EAAGA,GAAKsH,EAAetH,IAAK,CAAC,IAAD,EACnC+kB,GAAc,UAAAD,EAAQ,gBAAD,OAAiB9kB,WAAxB,eAA8B+kB,cAAe,GAC3DC,EAAa/jB,OAAOyF,QAAQqe,GAAaE,MAAK,mCAAE7jB,EAAF,iBAAgBA,IAAQuG,KAC1E,GAAIqd,EAAY,OAAOA,EAAW,GAEpC,OAAOlC,GA1DUrb,EA4DZK,kBAAoB,SAACvB,EAAWoB,EAAWL,GAAsC,IAAvB4d,EAAsB,wDACrF,GAAkB,SAAdvd,GAAsC,UAAdA,GAAuC,UAAdA,EAAuB,CAAC,IAAD,EACtEE,GAAwB,OAATtB,QAAS,IAATA,GAAA,UAAAA,EAAW4e,uBAAX,eAA6Bxd,KAAc,EAC1Dyd,EA/DW3d,EA+DOod,oBAAL,OAAyBte,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAWa,aAAcO,EAAWL,GAE9E,OADAO,EAAewd,YAAMxd,EAAeud,EAAY,EAAG,IAC5CF,EAAY,CAAErd,eAAcud,cAAevd,EAC7C,OAAOqd,EAAY,GAAK,MAlEdzd,EAoEZ6d,kBAAoB,SAAChC,EAAS3b,GAAV,UAAqBmb,EAArB,uDAA8B,GAA9B,OAAqC,UApE7Crb,EAoEkD0b,YAAYG,UAAjB,mBAA2BkB,cAA3B,mBAAoC7c,UAApC,eAAgD4d,WAAYzC,GApEzGrb,EAqEZ+d,gBAAkB,SAAClC,EAAS3b,GAAV,UAAqBmb,EAArB,uDAA8B,GAA9B,OAAqC,UArE3Crb,EAqEgD0b,YAAYG,UAAjB,mBAA2BkB,cAA3B,mBAAoC7c,UAApC,eAAgD8d,SAAU3C,GArErGrb,EAsEZie,eAAiB,SAACpC,EAAS3b,EAAWL,EAAeE,GAA8B,IAAD,MAAlBsb,EAAkB,uDAAT,KAC1E7f,EAAK,UAvEQwE,EAuEA0b,YAAYG,UAApB,iBAAG,EAA2BkB,cAA9B,iBAAG,EAAoC7c,UAAvC,aAAG,EAAgD1E,MAC5D,MAAqB,oBAAVA,EACFA,EAAMqE,EAAeE,GACvBvE,GAAS6f,GA1ECrb,EA4EZke,kBAAoB,SAACrC,EAAShc,EAAeE,GAAe,IAAD,EAC5Dsd,GAAU,UA7EGrd,EA6EE0b,YAAYG,UAAjB,eAA2BkB,SAAU,GAC/CoB,EAAW,GAKf,OAJA3kB,OAAOpB,KAAKilB,GAAS3jB,SAAQ,SAAAwG,GAC3B,IAAI1E,EAhFWwE,EAgFEie,eAAepC,EAAS3b,EAAWL,EAAeE,GAC/DvE,GAAO2iB,EAASvkB,KAAK4B,MAEpB2iB,GAnFUne,EAqFZM,qBAAuB,SAACub,EAAS3b,EAAWC,EAAgBC,EAAcP,EAAeE,GAA8B,IAAD,EAAlBsb,EAAkB,uDAAT,KAC9G+C,EAtFape,EAsFF6d,kBAAkBhC,EAAS3b,GACtCV,EAAO,KAFgH,cAGrG4e,GAHqG,IAG3H,2BAA2B,CAAC,IAAD,EAAhBC,EAAgB,QACrBC,EAAWD,EAAQviB,YAGvB,GAFwB,oBAAbwiB,IACTA,EAAWA,EAASle,EAAcP,EAAeE,KACvC,QAAR,EAAAue,SAAA,eAAUne,kBAAmBA,EAAgB,CAC/CX,EAAO8e,EACP,QATuH,8BAY3H,OAAO9e,GAAQ6b,GAjGErb,EAmGZue,0BAA4B,SAACziB,EAAaC,GAAmC,IAAnBsf,EAAkB,uDAAT,KACxE,IAAKtf,IAAmBD,EAAa,OAAOuf,EADqC,MAEtDlD,IAAiBqG,mBAAmB1iB,EAAa,QAASC,GAFJ,0BAE5EP,OAF4E,MAEpE,GAFoE,EAEhEijB,EAFgE,KAGjF,OAAKA,EACEjlB,OAAOwF,YAAYxF,OAAOyF,QAAQzD,GAAOnD,KAAI,mCAAEsB,EAAF,KAAO8Y,EAAP,WAAwB,qBAAR9Y,EAA6B,CAACA,EAAK8Y,GAAO,CAAC9Y,EAAK8Y,EAAMgM,OADtGpD,GAtGHrb,EAyGZ0e,2BAA6B,SAAC5iB,EAAaC,GAAiC,IAAjBsf,EAAgB,uDAAP,GACzE,IAAKtf,IAAmBD,EAAa,OAAOuf,EAC5C,IAAI2C,EAAS7F,IAAiBqG,mBAAmB1iB,EAAa,SAAUC,GAAgB,GACxF,OAAOiiB,GAAU3C,GA5GArb,EA8GZqS,gBAAkB,SAACwJ,GAAD,IAAUR,EAAV,8DAAgE,aA9GtErb,EA8GwC+M,iBAAiB8O,IAA2BR,GA9GpFrb,EA+GZsS,gBAAkB,SAACuJ,GAAD,UAAUR,EAAV,+DAA6B,UA/GnCrb,EA+GwC0b,YAAYG,UAAjB,mBAA2BkB,cAA3B,mBAAmC4B,YAAnC,eAAyCC,YAAavD,GA/GzFrb,EAgHZ6e,iBAAmB,SAACC,EAAUhgB,GAAkC,IAAD,MAAtBigB,EAAsB,0DACVjgB,EAApDyB,eAD8D,MACpD,GADoD,IACVzB,EAAtCkgB,mBADgD,SAC3Brf,EAAiBb,EAAjBa,aACpCof,IAAWA,EAlHC/e,EAkHgBqS,gBAAgB1S,IAC5Cof,IAAWA,EAAYC,KAAgB,UAAAhf,EAAU0b,YAAY/b,UAAtB,mBAAqCod,cAArC,mBAA6C4B,YAA7C,eAAmDC,aAAa,IAC5G,IAAIxM,EAAS,GAKb,OAJiB,QAAb0M,GAAmC,UAAbA,GAAqC,UAAbA,GAAwBC,KACxE3M,EAtHepS,EAsHD6M,gBAAgBlN,IAC5ByS,IAAQA,GAAkB,KAExB,GAAN,OAAUA,GAAV,OAAmB0M,EAAnB,YAA+Bve,IAzHdP,EA6HZif,YAAc,SAACngB,EAAWmD,GAAZ,SAAwBnD,IAAaA,EAAUogB,oBAAqBjd,KAAWnD,EAAUogB,mBA7H3Flf,EA+HZ2O,yBAA2B,SAAC7P,EAAWmD,GAAyB,IAAD,EAAfoZ,EAAe,uDAAN,EAC9D,OAhIiBrb,EAgIRif,YAAYngB,EAAWmD,GAAU,OAAOnD,QAAP,IAAOA,GAAP,UAAOA,EAAWogB,yBAAlB,aAAO,EAA+Bjd,GAhI/DjC,EAiIAob,iBAAiBtc,EAAWmD,EAASoZ,IAjIrCrb,EAqIZmf,eAAiB,SAAC9S,EAAaqO,GACpC,IAAI5b,EAAYlB,IAAkBS,aAAagO,GAC/C,GAAKvN,EAAL,CACA,IAAIsgB,EAAoBtgB,EAAUC,kBAC9BsgB,EAAuB3E,EAG3BvO,IAAS6E,sBAAsBtX,SAAQ,SAAAwF,GACrC,IAAIogB,EAAexhB,IAAiBsB,YAAjB,OAA6BigB,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAuBngB,IACvE,GAAIogB,EAAalhB,WAAaiO,EAA9B,CACA,IAAIkT,EAAYzhB,IAAiBsB,YAAjB,OAA6BggB,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAoBlgB,IAC7DsgB,GAA0B,OAAZF,QAAY,IAAZA,OAAA,EAAAA,EAAclhB,WAAY,GAExCmhB,GAAWzhB,IAAiBod,kBAAkBqE,EAAUrI,GAAIsI,GAE5DA,GAAY5hB,IAAkB6hB,cAAcD,EAAYD,GAExDD,GAAcxhB,IAAiBod,kBAAkBoE,EAAapI,GAAI7K,OAGxEvN,EAAUC,kBAAoB,GAC9BvF,OAAOyF,QAAQyb,GAAahhB,SAAQ,mCAAEC,EAAF,KAAOwF,EAAP,YAClCL,EAAUC,kBAAkBpF,GAAOwF,KACrCvB,IAAkB4C,gBAAgB1B,KA5JjBkB,EAsKZyM,eAAiB,SAAC3N,GACvB,IAAIqX,EAAY3c,OAAOwF,YAAYxF,OAAOyF,QAAQH,EAAUC,mBAAmB1G,KAAI,mCAAEsB,EAAF,KAAOwF,EAAP,WAAkB,CAACxF,EAAKmE,IAAiBsB,YAAYD,QACpIyV,EAAe5U,EAAU6U,kCAAkC/V,GAC/D,OAzKiBkB,EAyKLkW,uBAAuBpX,EAAUQ,qBAAsBsV,EAAcuB,IAzKhEnW,EA4KZkW,uBAAyB,SAAC5W,EAAsBogB,EAAevJ,GACpE,IAAIzJ,EAAaP,IAASO,WAAWyJ,GACjCwJ,EAA0BxT,IAASyT,2BAA2BlT,GAE9DlR,EAAQwZ,YAAU0K,GAmBtB,OAjBAlmB,OAAOyE,OAAOkY,GAAWzc,SAAQ,SAAAwE,GAC1BA,IAEL1C,EAAM0C,EAAIM,cAAgBhD,EAAM0C,EAAIM,cAAgB,GAAK2N,IAAS+I,iBAAiBhX,EAAIM,YAAaN,EAAIiX,SAAUjX,EAAI0C,OAEtH1C,EAAI2hB,SAASnmB,SAAQ,SAAComB,GAAD,OACnBA,GAAWA,EAAQnmB,MAAQ6B,EAAMskB,EAAQnmB,MAAQ6B,EAAMskB,EAAQnmB,MAAQ,GAAKmmB,EAAQhK,cAGxF6J,EAAwBjmB,SAAQ,SAAAqmB,GAAI,OAAIvkB,EAAMukB,EAAKpmB,MAAQ6B,EAAMukB,EAAKpmB,MAAQ,GAAKomB,EAAKvQ,WAExFlQ,GAAwBA,EAAqB5F,SAAQ,SAAAoC,GAAgB,IACrDyC,EAA+BzC,EAAvC2D,OAAyBsY,EAAcjc,EAAvB4D,QAClBsgB,EAAY7T,IAASmM,4BAA4B/Z,EAAQwZ,EAAWjc,EAAYC,gBAChFikB,GAAWxmB,OAAOyF,QAAQ+gB,GAAWtmB,SAAQ,mCAAEuI,EAAF,KAAWwQ,EAAX,YAAoBjX,EAAMyG,IAAYzG,EAAMyG,IAAY,GAAKwQ,QAEhHlH,YAAmB/P,GACZ,CACLkf,YAAalhB,OAAOwF,YAAYxF,OAAOyF,QAAQkX,GAAW9d,KAAI,mCAAEsB,EAAF,KAAO8Y,EAAP,WAAgB,CAAC9Y,EAAD,OAAM8Y,QAAN,IAAMA,OAAN,EAAMA,EAAKyE,QACzFxK,aACA+C,WAAYjU,EACZ8D,yBAvMeU,EA0MZ6U,kCAAoC,SAAC/V,GAAe,IAAD,YACpDmhB,EAAQ,CAAI,UAAW,WAAY,WAAY,aAAc,aAAc,cAAe,gBAAiB,sBAAnG,mBAA4HzmB,OAAOpB,KAAK0I,OAChJ8T,EAAepb,OAAOwF,YAAYihB,EAAS5nB,KAAI,SAAAsB,GAAG,MAAI,CAACA,EA5M1CqG,EA4MoD2O,yBAAyB7P,EAAWnF,QAEzGib,EAAasL,aA9MIlgB,EA8MgB6M,gBAAgB/N,EAAUa,cAG3DK,EAAUic,mBAAmBviB,SAAQ,SAAA0Y,GACnC,IAAInQ,EAAO,UAAMmQ,EAAN,kBACXwC,EAAa3S,GAnNEjC,EAmNc2O,yBAAyB7P,EAAWmD,GACjEA,EAAO,UAAMmQ,EAAN,uBACPwC,EAAa3S,GArNEjC,EAqNc2O,yBAAyB7P,EAAWmD,MAInE,IAAIke,GAAqB,OAATrhB,QAAS,IAATA,OAAA,EAAAA,EAAWogB,oBAAqB,GAChD1lB,OAAOyF,QAAQkhB,GAAWzmB,SAAQ,mCAAEuI,EAAF,KAAWwQ,EAAX,YAAqBmC,EAAawL,eAAene,KAAa2S,EAAa3S,GAAWwQ,MAGxH,IAAI4N,EAAiBrgB,EAAU2O,yBAAyB7P,EAAW,sBACnE,GAAIuhB,EAAgB,CAClB,IAAIC,EAAqBtgB,EAAU2O,yBAAyB7P,EAAW,sBACvE8V,EAAayL,IAAmBzL,EAAayL,IAAmB,GAAKC,EAGvE,IAAIC,EAAc,SAAA/kB,GAAK,OAAIA,GAAShC,OAAOyF,QAAQzD,GAAO9B,SAAQ,YAAiB,IAAD,mBAAdC,EAAc,KAAT8Y,EAAS,KACpE,qBAAR9Y,EAIJib,EAAajb,IAAQib,EAAajb,IAAQ,GAAK8Y,EAH7CmC,EAAaxK,iBAAb,sBAAqCwK,EAAaxK,kBAAoB,IAAtE,YAA8EqI,QAM5E9S,EAAmEb,EAAnEa,aAAcC,EAAqDd,EAArDc,SAAUC,EAA2Cf,EAA3Ce,cAjC0B,EAiCiBf,EAA5BgB,0BAjCW,MAiCU,GAjCV,EAkCpDC,EAAYC,EAAUC,aAAaL,GAEvCE,EAAmBpG,SAAQ,SAAA8F,GAAS,IACpBU,EAAuDV,EAA/DC,OAA4BU,EAAmCX,EAA5CE,QAAyB3D,EAAmByD,EAAnBzD,eAC9CqE,EAAeJ,EAAUK,kBAAkBvB,EAAWoB,GACtDpE,EAAckE,EAAUM,qBAAqBX,EAAcO,EAAWC,EAAgBC,EAAcP,EAAeE,GACvHwgB,EAAYvgB,EAAUue,0BAA0BziB,EAAaC,EAAgB,QAI1DiE,EAAUke,kBAAkBve,EAAcE,EAAeE,GAC/DrG,QAAQ6mB,GAGvB,IAAIC,EAAc,CAChBC,OAAQxU,IAAOoB,oBAAP,OAA2BvO,QAA3B,IAA2BA,GAA3B,UAA2BA,EAAW6N,cAAtC,aAA2B,EAAmBhT,KACtD+mB,OAAQzU,IAAOsB,gCAAP,OAAuCzO,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAW6N,QAC1DgU,WAAY1U,IAAO2U,mBAAP,OAA0B9hB,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAW6N,cAArC,aAA0B,EAAmBhT,IAA7C,OAAkDmF,QAAlD,IAAkDA,GAAlD,UAAkDA,EAAW6N,cAA7D,aAAkD,EAAmBiC,aACjFyJ,iBAAkBpM,IAAO4U,yBAAP,OAAgC/hB,QAAhC,IAAgCA,GAAhC,UAAgCA,EAAW6N,cAA3C,aAAgC,EAAmBhT,IAAnD,OAAwDmF,QAAxD,IAAwDA,GAAxD,UAAwDA,EAAW6N,cAAnE,aAAwD,EAAmBiC,YAA3E,OAAwF9P,QAAxF,IAAwFA,GAAxF,UAAwFA,EAAW6N,cAAnG,aAAwF,EAAmB5Q,iBAO/H,OALIykB,EAAYC,SACd7L,EAAa4L,EAAYC,SAAW7L,EAAa4L,EAAYC,SAAW,GAAKD,EAAYE,QACvFF,EAAYG,YAAYJ,EAAYC,EAAYG,YAChDH,EAAYnI,kBAAkBkI,EAAYC,EAAYnI,kBAEnDzD,I,gCC/QX,0XAAMkM,EAA4B,SAACC,GAAD,OAAWA,EAAM1R,KAAK2R,MAAM3R,KAAK4R,SAAWF,EAAM5P,UAMpF,SAAS+P,EAAsBC,EAAK7R,GAGlC,OAFA6R,EAAM9R,KAAK+R,KAAKD,GAChB7R,EAAMD,KAAK2R,MAAM1R,GACVD,KAAK2R,MAAM3R,KAAK4R,UAAY3R,EAAM6R,EAAM,GAAKA,GAKtD,IAAM7G,EAAuB,SAAC3gB,GAC5B,IAAI0b,EAAO3X,aAAa2jB,QAAQ1nB,GAChC,OAAK0b,EACEiM,KAAKC,MAAMlM,GADA,MAGdoF,EAAqB,SAAC9gB,EAAKsc,GAAN,OACzBvY,aAAa8jB,QAAQ7nB,EAAK2nB,KAAKG,UAAUxL,KACrCjB,EAAY,SAACiB,GAAD,OAChBqL,KAAKC,MAAMD,KAAKG,UAAUxL,KAEtByL,EAAmB,SAACC,EAAGC,GAAJ,OACvBvS,KAAKwS,IAAIF,EAAIC,IAAM,MAEfE,EAAiB,SAACH,EAAGC,GAAJ,OACrBvS,KAAKwS,IAAIF,EAAIC,IAAM,GACfhE,EAAQ,SAACnL,EAAKsP,EAAKC,GACvB,OAAIvP,EAAMsP,EAAYA,EAClBtP,EAAMuP,EAAaA,EAChBvP,GAEHwP,EAAoB,SAAChT,GAAD,OACxBA,EAAIkC,OAASlC,EAAIA,EAAIkC,OAAS,GAAK,MAG/B+Q,EAAe,SAACzP,GAAD,OAASmL,EAAMnL,EAAK,EAAG,MAG5C,SAAS0P,EAAWC,EAAQC,EAAKlR,GAC/B,OAAQ,IAAIhZ,MAAMgZ,EAAS,GAAGwJ,KAAK0H,GAAOD,GAAQE,OAAOnR,K,+ICvCtCtC,EAEnB,aACE,GADa,oBACT2L,gBAAgB3L,EAClB,MAAMoM,MAAM,2CAoClB,SAASsH,EAAEC,EAASvgB,GAAU,IAAD,IACrBzG,EAAyBgnB,EAAzBhnB,MADqB,EACIgnB,EAAlBC,OACb,SAF2B,YAEjB,OAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAczgB,IAC1B,OAAO,sCAASygB,EAAYzgB,GAASugB,GAA9B,QACT,IAAIG,EAAW9T,EAAK+T,kBAAkB3gB,GAClC4gB,EAAWhU,EAAKE,YAAY9M,GAC5B0N,EAAYd,EAAKc,UAAU1N,GAC3B6T,GAAQ,UAAAta,EAAMyG,UAAN,mBAAgByN,eAAhB,sBAA0BC,KAAcnU,EAAMyG,GAC1D,OAAO,uBAAMjK,UAAU,cAAhB,UAA8B,4BAAI2qB,IAAlC,IAAgD,uBAAM3qB,UAAU,YAAhB,UAA6B8d,EAAO+M,QAhDxEhU,EAMZC,YAAc,SAACnV,GAAD,QAAM0hB,EAAN,uDAAe,GAAf,OAClB,UAAArQ,IAASrR,UAAT,eAAempB,QAAf,UAAuB9X,IAASrR,UAAhC,aAAuB,EAAe4B,OAAS8f,GAP/BxM,EAQZ+T,kBAAoB,SAACjpB,GAAD,UAAM0hB,EAAN,uDAAe,GAAf,OACxB,UAAArQ,IAASrR,UAAT,eAAempB,QAAf,UAAuB9X,IAASrR,UAAhC,aAAuB,EAAeopB,UAAtC,UAAgD/X,IAASrR,UAAzD,aAAgD,EAAe4B,OAAS8f,GATxDxM,EAUZmU,eAAiB,SAACrpB,GAAD,MAAM0hB,EAAN,uDAAe,GAAf,OACtB,UAAArQ,IAASrR,UAAT,eAAe4B,OAAQ8f,GAXNxM,EAYZ4I,uBAAyB,SAAC9d,GAAsB,IAAjB0hB,EAAgB,uDAAP,GACzC9f,EAbasT,EAaDC,YAAYnV,EAAK0hB,GAGjC,OAFI9f,IAAS8f,GAAmB,QAAR1hB,GAAyB,SAARA,GAA0B,SAARA,IACzD4B,GAAQ,KACHA,GAhBUsT,EAkBZoU,eAAiB,SAACtpB,GAAD,MAAM0hB,EAAN,uDAAe,GAAf,OACtB,UAAArQ,IAASrR,UAAT,eAAegD,UAAW0e,GAnBTxM,EAoBZE,YAAc,SAACpV,GAAD,QAAM0hB,EAAN,uDAAe,GAAf,MACK,WAAxB,UAAArQ,IAASrR,UAAT,eAAe4V,MAAmB8L,GAAU,UAAArQ,IAASrR,UAAT,eAAe4V,OAAQ8L,GArBlDxM,EAuBZc,UAAY,SAAChW,GAAS,IAAD,EAC1B,MAA4B,WAAxB,UAAAqR,IAASrR,UAAT,eAAe4V,MAAyB,EAE5B,MADLV,EAAKE,YAAYpV,GACN,EAAI,GA1BTkV,EA4BZqU,UAAY,SAACjhB,EAASzG,GAAV,OACjB+mB,EAAE,CAAE/mB,QAAOinB,QAAQ,GAASxgB,IA7BX4M,EA+BZsU,aAAe,SAAClhB,EAASzG,GAAV,IAAiBinB,IAAjB,gEACT,OAAXC,QAAW,IAAXA,OAAA,EAAAA,EAAczgB,KAA8C,oBAAlC,OAAOygB,QAAP,IAAOA,OAAP,EAAOA,EAAczgB,KAC9C,+BAAOygB,EAAYzgB,GAAS,CAAEzG,QAAOinB,cAjCrB5T,EAmCZuU,qBAAuB,SAAC5nB,EAAO6nB,EAAab,GAArB,IAA8BC,IAA9B,gEACR,OAApBa,QAAoB,IAApBA,OAAA,EAAAA,EAAuBD,KAA2E,oBAA3D,OAAOC,QAAP,IAAOA,OAAP,EAAOA,EAAuBD,GAAaE,cACjF,+BAAOD,EAAqBD,GAAaE,YAAYf,EAA9Cc,CAAuD,CAAE9nB,QAAOinB,cAc5E,IAAMC,EAAc,CAElBthB,SAAU,SAACoiB,GAAD,OAAO,iCAAOjB,EAAEiB,EAAG,WAAZ,YAAiCjB,EAAEiB,EAAG,OAAtC,QAAmDjB,EAAEiB,EAAG,UAEzEjiB,UAAW,SAACiiB,GAAD,OAAO,sCAASjB,EAAEiB,EAAG,YAAd,MAA8BjB,EAAEiB,EAAG,cAAnC,cAA6DjB,EAAEiB,EAAG,QAAlE,QAAgFjB,EAAEiB,EAAG,WAEvG9hB,UAAW,SAAC8hB,GAAD,OAAO,iCAAOjB,EAAEiB,EAAG,YAAZ,YAAkCjB,EAAEiB,EAAG,QAAvC,QAAqDjB,EAAEiB,EAAG,WAG5EC,aAAc,SAACD,GAAD,OAAO,iCAAOjB,EAAEiB,EAAG,aAAZ,MAA6BjB,EAAEiB,EAAG,wBAAlC,MAA8DjB,EAAEiB,EAAG,qBAAnE,MAA4FjB,EAAEiB,EAAG,2BACtHE,kBAAmB,SAACF,GAAD,OAAO,iCAAOjB,EAAEiB,EAAG,gBAAZ,MAAgCjB,EAAEiB,EAAG,sBAC/DG,iBAAkB,SAACH,GAAD,OAAO,iCAAOjB,EAAEiB,EAAG,gBAAZ,MAAgCjB,EAAEiB,EAAG,2BAC9DI,oBAAqB,SAACJ,GAAD,OAAO,gDAAmBjB,EAAEiB,EAAG,aAAxB,MAAyCjB,EAAEiB,EAAG,sBAA9C,eAAiFjB,EAAEiB,EAAG,YAAtF,SAC5BK,qBAAsB,SAACL,GAAD,OAAO,0CAAajB,EAAEiB,EAAG,iBAAlB,MAAuCjB,EAAEiB,EAAG,sBAA5C,MAAsEjB,EAAEiB,EAAG,OAA3E,SAG7BM,aAAc,SAACN,GAAD,OAAO,iCAAOjB,EAAEiB,EAAG,aAAZ,MAA6BjB,EAAEiB,EAAG,wBAAlC,MAA8DjB,EAAEiB,EAAG,qBAAnE,MAA4FjB,EAAEiB,EAAG,2BACtHO,kBAAmB,SAACP,GAAD,OAAO,iCAAOjB,EAAEiB,EAAG,gBAAZ,MAAgCjB,EAAEiB,EAAG,sBAC/DQ,iBAAkB,SAACR,GAAD,OAAO,iCAAOjB,EAAEiB,EAAG,gBAAZ,MAAgCjB,EAAEiB,EAAG,2BAC9DS,oBAAqB,SAACT,GAAD,OAAO,gDAAmBjB,EAAEiB,EAAG,aAAxB,MAAyCjB,EAAEiB,EAAG,sBAA9C,eAAiFjB,EAAEiB,EAAG,YAAtF,SAC5BU,qBAAsB,SAACV,GAAD,OAAO,0CAAajB,EAAEiB,EAAG,iBAAlB,MAAuCjB,EAAEiB,EAAG,sBAA5C,MAAsEjB,EAAEiB,EAAG,OAA3E,SAG7BW,WAAY,SAACX,GAAD,OAAO,+BAAOjB,EAAEiB,EAAG,cAC/BY,gBAAiB,SAACZ,GAAD,OAAO,+BAAOjB,EAAEiB,EAAG,mBACpCa,eAAgB,SAACb,GAAD,OAAO,+BAAOjB,EAAEiB,EAAG,kBACnCc,mBAAoB,SAACd,GAAD,OAAO,+BAAOjB,EAAEiB,EAAG,sBAEvCe,QAAS,SAACf,GAAD,OAAO,iCAAOjB,EAAEiB,EAAG,aAAZ,MAA6BjB,EAAEiB,EAAG,mBAAlC,MAAyDjB,EAAEiB,EAAG,qBAA9D,MAAuFjB,EAAEiB,EAAG,2BAC5GgB,aAAc,SAAChB,GAAD,OAAO,iCAAOjB,EAAEiB,EAAG,WAAZ,MAA2BjB,EAAEiB,EAAG,sBACrDiB,YAAa,SAACjB,GAAD,OAAO,iCAAOjB,EAAEiB,EAAG,WAAZ,MAA2BjB,EAAEiB,EAAG,kBACpDkB,gBAAiB,SAAClB,GAAD,OAAO,0CAAajB,EAAEiB,EAAG,iBAAlB,MAAuCjB,EAAEiB,EAAG,OAA5C,SAExBmB,eAAgB,SAACnB,GAAD,OAAO,0CAAajB,EAAEiB,EAAG,YAAlB,SACvBoB,WAAY,SAACpB,GAAD,OAAO,+CAAkBjB,EAAEiB,EAAG,aAAvB,cAAgDjB,EAAEiB,EAAG,YAArD,SAEnBqB,iBAAkB,SAACrB,GAAD,OAAO,gDAAmBjB,EAAEiB,EAAG,aAAxB,MAAyCjB,EAAEiB,EAAG,mBAA9C,eAA8EjB,EAAEiB,EAAG,YAAnF,SACzBsB,iBAAkB,SAACtB,GAAD,OAAO,gDAAmBjB,EAAEiB,EAAG,aAAxB,MAAyCjB,EAAEiB,EAAG,mBAA9C,eAA8EjB,EAAEiB,EAAG,YAAnF,SAEzBuB,kBAAmB,SAACvB,GAAD,OAAO,4CAAejB,EAAEiB,EAAG,cAApB,eAA+CjB,EAAEiB,EAAG,eAApD,YAA6EjB,EAAEiB,EAAG,cAAlF,QAE1BwB,oBAAqB,SAACxB,GAEpB,GADSA,EAAEhoB,MAAMypB,mBAEf,OAAO,qDACT,IAAIC,GAAO1B,EAAEhoB,MAAM2pB,eAAiB,GAAK,IACzC,OAAID,EAAM,EAAU,yCAAY3C,EAAEiB,EAAG,iBAAjB,UACX0B,GAAO,IAAa,2CAAc3C,EAAEiB,EAAG,iBAAnB,eACtB,yCAAYjB,EAAEiB,EAAG,iBAAjB,SAGL4B,EAAiB,CACrB3B,aAAc,SAACD,EAAG6B,GAAJ,OAAY,iCAAO9C,EAAEiB,EAAD,aAAR,MAA6BjB,EAAEiB,EAAD,UAAO6B,EAAP,0BAA9B,MAAqE9C,EAAEiB,EAAD,qBAAtE,MAAmGjB,EAAEiB,EAAD,UAAO6B,EAAP,6BAC9H3B,kBAAmB,SAACF,EAAG6B,GAAJ,OAAY,iCAAO9C,EAAEiB,EAAD,UAAO6B,EAAP,kBAAR,MAAuC9C,EAAEiB,EAAD,sBACvEG,iBAAkB,SAACH,EAAG6B,GAAJ,OAAY,iCAAO9C,EAAEiB,EAAD,UAAO6B,EAAP,kBAAR,MAAuC9C,EAAEiB,EAAD,2BACtEK,qBAAsB,SAACL,EAAG6B,GAAJ,OAAY,0CAAa9C,EAAEiB,EAAD,UAAO6B,EAAP,mBAAd,MAA8C9C,EAAEiB,EAAD,sBAA/C,MAA6EjB,EAAEiB,EAAD,OAA9E,SAElCM,aAAc,SAACN,EAAG6B,GAAJ,OAAY,iCAAO9C,EAAEiB,EAAD,aAAR,MAA6BjB,EAAEiB,EAAD,UAAO6B,EAAP,0BAA9B,MAAqE9C,EAAEiB,EAAD,qBAAtE,MAAmGjB,EAAEiB,EAAD,UAAO6B,EAAP,6BAC9HtB,kBAAmB,SAACP,EAAG6B,GAAJ,OAAY,iCAAO9C,EAAEiB,EAAD,UAAO6B,EAAP,kBAAR,MAAuC9C,EAAEiB,EAAD,sBACvEQ,iBAAkB,SAACR,EAAG6B,GAAJ,OAAY,iCAAO9C,EAAEiB,EAAD,UAAO6B,EAAP,kBAAR,MAAuC9C,EAAEiB,EAAD,2BACtEU,qBAAsB,SAACV,EAAG6B,GAAJ,OAAY,0CAAa9C,EAAEiB,EAAD,UAAO6B,EAAP,mBAAd,MAA8C9C,EAAEiB,EAAD,sBAA/C,MAA6EjB,EAAEiB,EAAD,OAA9E,SAElCW,WAAY,SAACX,EAAG6B,GAAJ,OAAY,+BAAO9C,EAAEiB,EAAD,UAAO6B,EAAP,gBAChCjB,gBAAiB,SAACZ,EAAG6B,GAAJ,OAAY,+BAAO9C,EAAEiB,EAAD,UAAO6B,EAAP,qBACrChB,eAAgB,SAACb,EAAG6B,GAAJ,OAAY,+BAAO9C,EAAEiB,EAAD,UAAO6B,EAAP,oBACpCf,mBAAoB,SAACd,EAAG6B,GAAJ,OAAY,+BAAO9C,EAAEiB,EAAD,UAAO6B,EAAP,wBAExCC,QAAS,SAAC9B,EAAG6B,GAAJ,OAAY,iCAAO9C,EAAEiB,EAAD,aAAR,MAA6BjB,EAAEiB,EAAD,UAAO6B,EAAP,qBAA9B,MAAgE9C,EAAEiB,EAAD,qBAAjE,MAA8FjB,EAAEiB,EAAD,UAAO6B,EAAP,6BACpHE,aAAc,SAAC/B,EAAG6B,GAAJ,OAAY,iCAAO9C,EAAEiB,EAAD,UAAO6B,EAAP,aAAR,MAAkC9C,EAAEiB,EAAD,sBAC7DgC,YAAa,SAAChC,EAAG6B,GAAJ,OAAY,iCAAO9C,EAAEiB,EAAD,UAAO6B,EAAP,aAAR,MAAkC9C,EAAEiB,EAAD,kBAC5DiC,gBAAiB,SAACjC,EAAG6B,GAAJ,OAAY,0CAAa9C,EAAEiB,EAAD,UAAO6B,EAAP,mBAAd,MAA8C9C,EAAEiB,EAAD,OAA/C,SAE7BkC,UAAW,SAAClC,EAAG6B,GAAJ,OAAY,iCAAO9C,EAAEiB,EAAD,aAAR,MAA6BjB,EAAEiB,EAAD,UAAO6B,EAAP,uBAA9B,MAAkE9C,EAAEiB,EAAD,qBAAnE,MAAgGjB,EAAEiB,EAAD,UAAO6B,EAAP,6BACxHM,eAAgB,SAACnC,EAAG6B,GAAJ,OAAY,iCAAO9C,EAAEiB,EAAD,UAAO6B,EAAP,eAAR,MAAoC9C,EAAEiB,EAAD,sBACjEoC,cAAe,SAACpC,EAAG6B,GAAJ,OAAY,iCAAO9C,EAAEiB,EAAD,UAAO6B,EAAP,eAAR,MAAoC9C,EAAEiB,EAAD,wBAChEqC,kBAAmB,SAACrC,EAAG6B,GAAJ,OAAY,0CAAa9C,EAAEiB,EAAD,UAAO6B,EAAP,mBAAd,MAA8C9C,EAAEiB,EAAD,mBAA/C,MAA0EjB,EAAEiB,EAAD,OAA3E,SAE/BsC,UAAW,SAACtC,EAAG6B,GAAJ,OAAY,iCAAO9C,EAAEiB,EAAD,aAAR,MAA6BjB,EAAEiB,EAAD,UAAO6B,EAAP,uBAA9B,MAAkE9C,EAAEiB,EAAD,qBAAnE,MAAgGjB,EAAEiB,EAAD,UAAO6B,EAAP,6BACxHU,eAAgB,SAACvC,EAAG6B,GAAJ,OAAY,iCAAO9C,EAAEiB,EAAD,UAAO6B,EAAP,eAAR,MAAoC9C,EAAEiB,EAAD,sBACjEwC,cAAe,SAACxC,EAAG6B,GAAJ,OAAY,iCAAO9C,EAAEiB,EAAD,UAAO6B,EAAP,eAAR,MAAoC9C,EAAEiB,EAAD,wBAChEyC,kBAAmB,SAACzC,EAAG6B,GAAJ,OAAY,0CAAa9C,EAAEiB,EAAD,UAAO6B,EAAP,mBAAd,MAA8C9C,EAAEiB,EAAD,mBAA/C,MAA0EjB,EAAEiB,EAAD,OAA3E,SAE/B0C,oBAAqB,SAAC1C,EAAG6B,GAEvB,GADS7B,EAAEhoB,MAAF,UAAW6pB,EAAX,wBAEP,OAAO,qDACT,IAAIH,GAAO1B,EAAEhoB,MAAF,UAAW6pB,EAAX,oBAAmC,GAAK,IACnD,OAAIH,EAAM,EAAU,yCAAY3C,EAAEiB,EAAD,UAAO6B,EAAP,mBAAb,UACXH,GAAO,IAAa,2CAAc3C,EAAEiB,EAAD,UAAO6B,EAAP,mBAAf,eACtB,yCAAY9C,EAAEiB,EAAD,UAAO6B,EAAP,mBAAb,SAIX7rB,OAAOpB,KAAKqB,KAAeC,SAAQ,SAAA0Y,GAAM,OACvC5Y,OAAOyF,QAAQmmB,GAAgB1rB,SAAQ,mCAAEC,EAAF,KAAOwsB,EAAP,YACrC3sB,OAAO4R,eAAesX,EAAtB,UAAsCtQ,EAAtC,YAAgDzY,GAAO,CACrD2R,cAAc,EACd8a,YAAY,EACZC,UAAU,EACVvQ,MAAO,SAACG,GAAD,OAAUkQ,EAAMlQ,EAAK7D,YAGlC,IAAMkR,EAAuB,CAC3BgD,iBAAkB,CAChB/C,YAAa,SAACf,GAAD,OAAa,SAACgB,GAAD,OAAO,sCAASjB,EAAEiB,EAAG,YAAd,MAA8BjB,EAAEiB,EAAG,cAAnC,cAA6DjB,EAAEiB,EAAG,QAAlE,QAAgFjB,EAAEiB,EAAG,OAArF,MAAgGjB,EAAEiB,EAAG,aAArG,MAAsHhB,EAAQ1M,MAA9H,Y,8FC7JjCyQ,GAAY,EACZC,EAAoB,GACpBC,EAAc,EAEG7oB,EAEnB,aACE,GADa,oBACT4c,gBAAgB5c,EAClB,MAAMqd,MAAM,2CAJGrd,EAOZ8oB,UAAY,SAACzP,GAAD,OAAWA,IAASA,EAAK1b,OAAS0b,EAAKtX,eAAiBsX,EAAKrX,UAP7DhC,EAQZiB,qBAAuB,kBAAMmW,YAAUwR,IAR3B5oB,EASZ+oB,mBAAqB,kBAAMntB,OAAOpB,KAAKouB,IAT3B5oB,EAUZC,iCAAmC,WACxC,IAAI0oB,EAiBJ,OAhBA/sB,OAAOpB,KAAKsF,cAAc6B,QAAO,SAAA5F,GAAG,OAAIA,EAAI+Q,SAAS,iBAAehR,SAAQ,SAAAwd,GAC1E,IAAKsP,EAAkBtP,GAAK,CAC1B,IAAIpY,EAAYwb,YAAqBpD,GACrC,IAAKpY,EAAW,OAChB,GAhBalB,EAgBJ8oB,UAAU5nB,GAEjB,YAlBWlB,EAiBNud,oBAAoBjE,GAGtBpY,EAAUC,oBACbD,EAAUC,kBAAoB,GAC9B0b,YAAmBvD,EAAIpY,IAEzB0nB,EAAkBtP,GAAMpY,MAG5BynB,GAAY,GACL,GA5BU3oB,EA8BZgpB,aAAe,SAAC3P,GACrB,IA/BiBrZ,EA+BR8oB,UAAUzP,GAAnB,CAGA,IADA,IAAIC,EAAE,oBAAgBuP,KACc,OAA7B/oB,aAAa2jB,QAAQnK,IAC1BA,EAAE,oBAAgBuP,KACpB,IAAII,EAAQ7R,YAAUiC,GAItB,OAHA4P,EAAM3P,GAAKA,EACXuD,YAAmBvD,EAAI2P,GACvBL,EAAkBtP,GAAM2P,EACjB3P,IAxCUtZ,EA0CZ4C,gBAAkB,SAACyW,GACxB,IA3CiBrZ,EA2CR8oB,UAAUzP,GAAnB,CACA,IAAIC,EAAKD,EAAKC,GACV2P,EAAQ7R,YAAUiC,GACtBwD,YAAmBvD,EAAI2P,GACvBL,EAAkBtP,GAAM2P,IA/CPjpB,EAiDZS,aAAe,SAAC6Y,GAAD,OAAQA,EAAKsP,EAAkBtP,GAAM,MAjDxCtZ,EAmDZud,oBAAsB,SAACjE,UACrBsP,EAAkBtP,GACzBxZ,aAAaC,WAAWuZ,IArDPtZ,EAuDZkpB,sBAAwB,SAACC,EAAQ7nB,GACtC,IAAK6nB,IAAW7nB,EAAS,OAAO,KAChC,IAAI+X,EAzDarZ,EAyDDS,aAAa0oB,GAC7B,OAAI9P,EAAKlY,kBACAkY,EAAKlY,kBAAkBG,QADhC,GA1DiBtB,EA6DZ6hB,cAAgB,SAACsH,EAAQ7oB,GAC9B,IAAI+Y,EA9DarZ,EA8DDS,aAAa0oB,GACxB9P,GAAS/Y,GAAQA,EAAIgB,UACrB+X,EAAKlY,oBACRkY,EAAKlY,kBAAoB,IAC3BkY,EAAKlY,kBAAkBb,EAAIgB,SAAWhB,EAAIgZ,GAlEzBtZ,EAmEZ4C,gBAAgByW,KAnEJrZ,EAqEZopB,sBAAwB,SAACD,EAAQ7nB,GACtC,IAAI+X,EAtEarZ,EAsEDS,aAAa0oB,GACxB9P,GAAS/X,GACT+X,EAAKlY,mBAAsBkY,EAAKlY,kBAAkBG,KACvD+X,EAAKlY,kBAAkBG,GAAW,GAzEjBtB,EA0EZ4C,gBAAgByW,KA1EJrZ,EA4EZqpB,mBAAqB,SAAC5a,EAAaqO,GACxC,IAAI5b,EA7EalB,EA6EIS,aAAagO,GAC7BvN,IACLA,EAAUC,kBAAoB,GAC9BvF,OAAOyF,QAAQyb,GAAahhB,SAAQ,mCAAEC,EAAF,KAAOwF,EAAP,YAClCL,EAAUC,kBAAkBpF,GAAOwF,KACrCvB,EAAkB4C,gBAAgB1B,M,6IC9EvBooB,EAPE,CACf5rB,OAAQ6rB,IACR1rB,MAAO2rB,IACP1rB,MAAO2rB,IACP1rB,OAAQ2rB,IACR1rB,QAAS2rB,K,iCCPUC,EAEnB,aAAgB,GAAD,oBAAKhN,gBAAgBgN,EAAc,MAAMvM,MAAM,2CAF3CuM,EAKZ9a,WAAa,SAACyJ,GACnB,IAAIzJ,EAAa,GAMjB,OALAlT,OAAOyF,QAAQkX,GAAWzc,SAAQ,YAAiB,IAAD,mBAAdC,EAAc,KAATuE,EAAS,KAC3CA,IACDwO,EAAWxO,EAAIK,QAASmO,EAAWxO,EAAIK,QAAQ3E,KAAKD,GACnD+S,EAAWxO,EAAIK,QAAU,CAAC5E,OAE1B+S,G,YCFUP,E,WAEnB,aAAgB,GAAD,oBAAKqO,gBAAgBrO,EAAU,MAAM8O,MAAM,0C,0DAkD1CnF,EAAO2R,GAA0B,IAAhBC,EAAe,wDAC1CC,EAAO,KACPC,EAAavY,KAAKwY,MAAM/R,EAAQ2R,EAAS,IAC7C,IAAKG,EAAY,OAAO,KACxB,IAAIE,EAAa,SAAbA,EAAcrV,EAAKxD,GACrB,IAAI0Y,EAAJ,CACA,GAAI1Y,EAAIkC,OAAQ,CACd,GAAIlC,EAAIkC,OAASyW,EAAY,OAC7B,IAAIG,EAAM9Y,EAAI0B,QAAO,SAACC,EAAMxT,GAAP,OAAawT,EAAOxT,IAAG,GAC5C,GAAIsqB,EAAO,CACT,GAAIK,EAAMtV,GAAO,KAAO,OACxB,GAAIiP,YAAiBqG,EAAKtV,GAExB,YADAkV,EAAO1Y,OAGJ,CACL,GAAI8Y,EAAMtV,EAAM,EAAG,OACnB,GAAIqP,YAAeiG,EAAKtV,GAEtB,YADAkV,EAAO1Y,IAKbwY,EAASnF,QAAQ0F,UAAUtuB,SAAQ,SAAAiuB,GACjCG,EAAWhS,EAAD,sBAAY7G,GAAZ,CAAiB0Y,UAI/B,OADAG,EAAWhS,EAAO,IACX6R,I,sCAEcpV,EAAOuN,GAAU,IAAD,IACrC,IAAKA,IAAYA,EAAQhK,MAAO,MAAO,CAAE3X,OAAO,GAChD,IAAI2X,EAAQmS,WAAWnI,EAAQhK,OAC/B,GAAIoS,MAAMpS,GAAQ,MAAO,CAAE3X,OAAO,EAAOgqB,IAAI,iBAC7C,IAAIhT,EAAW5C,EAAM4C,SACrB,IAAKA,EAAU,MAAO,CAAEhX,OAAO,EAAOgqB,IAAI,2BAC1C,IAAIC,EAA4C,MAAlCvZ,IAAKE,YAAY+Q,EAAQnmB,KACnC8tB,EAAWjN,KAAK6N,mBAAmBvI,EAAQnmB,IAAKwb,GAChDmT,EAAQ9N,KAAK+N,SAASzS,EAAO2R,EAAUW,GAE3C,IAAKE,GAA0B,IAAjBA,EAAMnX,OAAc,MAAO,CAAEhT,OAAO,EAAOgqB,IAAI,qCAC7D,IAAIK,GAAsB,UAAA3uB,IAAkBsb,UAAlB,eAA6Blb,uBAAwB,aAAIJ,IAAkBsb,UAAtB,aAAI,EAA6Bnb,cAAe,EAC/H,GAAIsuB,EAAMnX,OAASqX,EAAqB,MAAO,CAAErqB,OAAO,EAAOgqB,IAAI,sCAAD,OAAwCK,EAAxC,YAElE,IAAIrH,EAAMsG,EAAS,GAAKa,EAAMnX,OAC1B7B,EAAMmY,EAASA,EAAStW,OAAS,GAAKmX,EAAMnX,OAChD,MAAO,CAAEhT,OAAO,EAAMsqB,WAAYvG,aAAepM,EAAQqL,IAAQ7R,EAAM6R,GAAQ,KAAMgH,IAAI,2BAAD,OAA6BG,EAAMnX,OAAnC,8BAA+DmX,EAAM3N,KAAK,MAA1E,KAAoF2N,W,yCAIpJ/V,GACxB,IAD+B,EAC3BmW,EAAoB,EAAGC,EAAoB,EAC3CC,EAAqBrW,EAAMsN,SAASxnB,KAAI,SAAAynB,GAAO,OAAI3T,EAAS0c,gBAAgBtW,EAAOuN,MAFxD,cAGT8I,GAHS,IAG/B,4BACE,IADF,QACezqB,MACX,MAAO,CAAEyqB,qBAAoBzqB,OAAO,EAAOgqB,IAAK,iCAAkCO,oBAAmBC,sBAL1E,8BAQ/B,GAAIC,EAAmB9U,MAAK,SAAAgM,GAAO,aAAW,OAAPA,QAAO,IAAPA,GAAA,UAAAA,EAASwI,aAAT,eAAgBnX,QAAS,MAAMyX,EAAmB9U,MAAK,SAACgM,GAAD,OAAcA,EAAQwI,SAClH,MAAO,CAAEM,qBAAoBzqB,OAAO,EAAOgqB,IAAK,uEAAwEO,oBAAmBC,qBAC7I,IAAIG,EAAoBF,EAAmBjY,QAAO,SAACoX,EAAK9T,GAAN,OAAc8T,GAAO9T,EAAI9V,OAAS8V,EAAIqU,MAAQrU,EAAIqU,MAAMnX,OAAS,KAAI,GACnH4X,EAAiB5c,EAAS4c,eAAexW,EAAM3R,MAAO2R,EAAM4C,UAC5D6T,EAAoB7c,EAAS8c,mBAAmB1W,EAAM4C,UAE1D,GAAK2T,EAAoBC,EAAkBC,EACzC,MAAO,CAAEJ,qBAAoBzqB,OAAO,EAAOgqB,IAAI,oCAAD,OAAsCW,EAAtC,8CAA6FC,EAA7F,uEAA0KC,EAA1K,MAAiMN,oBAAmBC,qBAEpQ,IAAIO,EAAyBN,EAAmBjY,QAAO,SAACoX,EAAK9T,GAAN,OAAc8T,GAAO9T,EAAI9V,OAAS8V,EAAIqU,OAASrU,EAAIwU,WAAcxU,EAAIwU,WAAaxU,EAAIqU,MAAMnX,OAAU,KAAI,GAGjK,MAAO,CAAEhT,OAAO,EAAMyqB,qBAAoBE,oBAAmBC,iBAAgBI,oBAAqBH,EAAmBN,kBAFrHA,EAAoBxG,YAAagH,EAAyBF,GAE8EL,kBADxIA,EAAoBzG,aAAcgH,EAA0C,IAAjBH,GAAwBC,M,0CAiF1DI,EAAY/c,GACrC,IAAInO,EAAMJ,IAAiBsB,YAAYgqB,GACvC,GAAKlrB,EAAL,CACA,IAAImrB,EAAkBnrB,EAAIE,SACtBkrB,EAAoBjd,GAAe,GACvC,GAAIgd,IAAoBC,EAAxB,CACA,IAAIpqB,EAAUhB,EAAIgB,QACdqqB,EAAuB3rB,IAAkBkpB,sBAAsBwC,EAAkBpqB,GACjFsqB,EAAqB1rB,IAAiBsB,YAAYmqB,GAGlDC,EAAoB1rB,IAAiB2rB,cAAcvrB,EAAKsrB,GACvD1rB,IAAiBod,kBAAkBhd,EAAIgZ,GAAIoS,GAG5CA,GACF1rB,IAAkB6hB,cAAc6J,EAAkBprB,GAEhDmrB,IACEG,EACF5rB,IAAkB6hB,cAAc4J,EAAiBG,GAEjD5rB,IAAkBopB,sBAAsBqC,EAAiBnqB,U,KAhO5CiN,EAKZC,sBAAwB,kBAAM9S,KALlB6S,EAMZgD,mBAAqB,SAACxV,GAAD,MAAM0hB,EAAN,uDAAe,GAAf,OAAkC,OAAZhiB,UAAY,IAAZA,KAAA,UAAAA,IAAeM,UAAf,eAAqB4B,OAAQ8f,GAN5DlP,EAOZyH,gCAAkC,SAACD,GAAD,OACvCna,OAAOyF,QAAQ5F,KAAckG,QAAO,mCAAOsU,GAAP,kBAAmBA,EAAO6V,OAAQ7V,EAAO6V,OAAOvY,OAAU,KAAOwC,MARpFxH,EASZwd,qBAAuB,SAACprB,EAAQW,GAAT,QAAkBmc,EAAlB,uDAA2B,GAA3B,OAA8C,OAAZhiB,UAAY,IAAZA,KAAA,UAAAA,IAAekF,UAAf,mBAAwB+S,cAAxB,eAAiCpS,KAAYmc,GAT1FlP,EAUZyd,qBAAuB,SAACrrB,EAAQW,GAAT,QAAkBmc,EAAlB,uDAA2B,KAA3B,OAAgD,OAAZhiB,UAAY,IAAZA,KAAA,UAAAA,IAAekF,UAAf,mBAAwBsrB,aAAxB,eAAgC3qB,KAAYmc,GAV3FlP,EAWZ0L,yBAA2B,SAACtZ,GAAD,MAAS8c,EAAT,uDAAkB,KAAlB,OAAuC,OAAZhiB,UAAY,IAAZA,KAAA,UAAAA,IAAekF,UAAf,eAAwBmS,OAAQ2K,GAX1ElP,EAaZ6E,oBAAsB,kBAAMxX,OAAOpB,KAAKiD,MAb5B8Q,EAcZ2d,oBAAsB,SAAC5qB,GAAD,IAAUmc,EAAV,uDAAmB,GAAnB,OAC3BhgB,IAAkB6D,GAAW7D,IAAkB6D,GAAS3D,KAAO8f,GAf9ClP,EAgBZiN,oBAAsB,SAACla,GAAD,IAAUmc,EAAV,uDAAmB,GAAnB,OAC1Bnc,GAAWgoB,EAAShoB,GAAY,cAAC,IAAD,CAAiBtH,KAAMsvB,EAAShoB,GAAwBlH,UAAU,SAAnBkH,GAAgCmc,GAjB/FlP,EAmBZqL,4BAA8B,SAACtY,GAA0B,IAAjBmc,EAAgB,uDAAP,GACtD,IAAKnc,EAAS,OAAOmc,EACrB,IAAI9f,EArBa4Q,EAqBD2d,oBAAoB5qB,GACpC,IAAK3D,EAAM,OAAO8f,EAClB,IAAI0O,EAvBa5d,EAuBGiN,oBAAoBla,GACxC,OAAK6qB,EACG,iCAAOA,EAAP,IAAkBxuB,KADJ8f,GAxBLlP,EA6BZ6d,aAAe,SAACzrB,GAAD,OAAYlF,IAAakF,GAAUlF,IAAakF,GAAQmrB,OAAS,IA7BpEvd,EAgCZ8d,gBAAkB,kBAAM1wB,KAhCZ4S,EAiCZ+I,iBAAmB,SAACvb,EAAKwb,EAAUvU,GAAuB,IAAD,IAAfya,EAAe,uDAAN,EACpD6O,EAAI,UAAG9vB,IAAsB+a,UAAzB,iBAAG,EAAkCxb,UAArC,aAAG,EAAyCiH,GACpD,OAAIspB,KACC,OAAIvwB,QAAJ,IAAIA,OAAJ,EAAIA,EAAK+Q,SAAS,mBApCNyB,EAqCH+I,iBAAiB,gBAAiBC,EAAUvU,EAAOya,GAC1DA,IAtCUlP,EA0CZge,eAAiB,kBAAM3wB,OAAOpB,KAAK+C,MA1CvBgR,EA2CZ8c,mBAAqB,SAAC9T,GAAD,OAActb,IAAkBsb,GACzDtb,IAAkBsb,GAAUnb,YAAcH,IAAkBsb,GAAUlb,qBAAwB,GA5C9EkS,EA6CZ4c,eAAiB,SAACnoB,EAAOuU,GAAR,OACtB9F,KAAK+R,MAAiB,EAAXjM,EAAevU,GAAS,IA9ClBuL,EA+CZie,wBAA0B,SAAC7X,GAAD,OAC/BA,EAAMsN,SAASlP,QAAO,SAACoX,EAAK9T,GAAN,OACpB8T,GAAO9T,GAAOA,EAAI6B,MAAQ,EAAI,KAAI,IAjDnB3J,EAkDZkc,mBAAqB,SAACgC,EAAYlV,GAAb,OAA2BkV,GAAclV,EACnEha,IAAqBkvB,GAAYlV,GAAY,IAnD5BhJ,EA6HZO,WAAa8a,EAAa9a,WA7HdP,EA+HZ4H,gBAAkB,SAACxV,GAAD,MAAS8c,EAAT,uDAAkB,KAAlB,OACX,OAAZhiB,UAAY,IAAZA,KAAA,UAAAA,IAAekF,UAAf,eAAwBmS,OAAQ2K,GAhIflP,EAiIZ8L,uBAAyB,SAAC1Z,EAAQwZ,GAAT,QAAoBsD,EAApB,uDAA6B,KAA7B,OAC9BrG,aAAU,UAlIO7I,EAkIF4H,gBAAgBxV,UAArB,mBAA+BwZ,UAA/B,eAA2Cvc,QAAS6f,IAlI7ClP,EAoIZmM,4BAA8B,SAAC/Z,EAAQwZ,EAAWhc,GAAmC,IAAnBsf,EAAkB,uDAAT,KAChF,IAAKtf,EAAgB,OAAOsf,EAC5B,IAAIvf,EAtIaqQ,EAsIM+L,gCAAgC3Z,EAAQwZ,GAC/D,IAAKjc,EAAa,OAAOuf,EAHgE,MAInElD,IAAiBqG,mBAAmB1iB,EAAa,QAASC,GAJS,mBAIpFP,EAJoF,KAI7EijB,EAJ6E,KAKzF,OAAKA,EACEjlB,OAAOwF,YAAYxF,OAAOyF,QAAQzD,GAAOnD,KAAI,yCAAgB,CAAhB,UAA4BomB,OAD5DpD,GAzIHlP,EA4IZyT,2BAA6B,SAAClT,GACnC,IAAI4d,EAAoB,GAMxB,OALA9wB,OAAOyF,QAAQyN,GAAYhT,SAAQ,qCAAE6E,EAAF,KAAUoT,EAAV,YACrB,OAAZtY,UAAY,IAAZA,KAAA,UAAAA,IAAekF,UAAf,eAAwBmS,OAAQlX,OAAOyF,QAAQ5F,IAAakF,GAAQmS,MAAMhX,SAAQ,mCAAEqe,EAAF,KAAajC,EAAb,YAChFrC,SAASsE,IAAcpG,EAAOR,QAAU2E,EAAMta,OAAShC,OAAOpB,KAAK0d,EAAMta,OAAO2V,QAChF3X,OAAOyF,QAAQ6W,EAAMta,OAAO9B,SAAQ,mCAAEC,EAAF,KAAO6V,EAAP,YAClC8a,EAAkB1wB,KAAK,CAAED,MAAK6V,qBAC7B8a,GAnJUne,EAqJZ6C,sBAAwB,SAACtC,GAC9B,IAAI4d,EAAoB,GAQxB,OAPA9wB,OAAOyF,QAAQyN,GAAYhT,SAAQ,YAAuB,IAAD,qBAApB6E,EAAoB,KAAZoT,EAAY,KACvD,UAAItY,UAAJ,IAAIA,KAAJ,UAAIA,IAAekF,UAAnB,aAAI,EAAwBmS,KAAM,CAChC,IAAI6Z,EAAa/wB,OAAOpB,KAAKiB,IAAakF,GAAQmS,MAAMnR,QAAO,SAAAwY,GAAS,OAAItE,SAASsE,IAAcpG,EAAOR,UACtGoZ,EAAWpZ,SACbmZ,EAAkB/rB,GAAUgsB,OAG3BD,GA9JUne,EAiKZsM,yBAA2B,SAACla,EAAQwZ,EAAWyS,GAAiC,IAAD,MAAhBnP,EAAgB,uDAAP,GACzEoP,EAAa,OAAGpxB,UAAH,IAAGA,KAAH,UAAGA,IAAekF,UAAlB,iBAAG,EAAwBmS,YAA3B,iBAAG,EAA+BqH,UAAlC,aAAG,EAA2Cvb,KAC/D,OAAKiuB,EACwB,oBAAlBA,EACFA,EAAcD,GACdC,GAEFpP,EALoBA,GAnKVlP,EA0KZ+L,gCAAkC,SAAC3Z,EAAQwZ,GAAT,UAAoBsD,EAApB,uDAA6B,KAA7B,OAC3B,OAAZhiB,UAAY,IAAZA,KAAA,UAAAA,IAAekF,UAAf,mBAAwBmS,YAAxB,mBAA+BqH,UAA/B,eAA2Cjc,cAAeuf,GA3KzClP,EA6KZ4I,4BAA8B,SAACzV,GACpC,IAAIorB,EAAwB,GAwB5B,OAvBAlxB,OAAOyF,QAAQ5F,KAAcK,SAAQ,YAAuB,IAAD,mBAApB6E,EAAoB,KAAZosB,EAAY,KACrDC,EAAY,GACZC,GAAe,EACfF,EAAOja,MACTlX,OAAOyF,QAAQ0rB,EAAOja,MAAMhX,SAAQ,YAAgC,IAAD,mBAA7Bqe,EAA6B,KAAlB+S,EAAkB,KAKjE,GAJIA,EAAatvB,OAAShC,OAAOpB,KAAK0yB,EAAatvB,OAAO2V,OAAS,IACjEyZ,EAAU7S,GAAa/C,YAAU8V,EAAatvB,OAC9CqvB,GAAe,GAEbC,EAAahvB,YAAa,CAC5B,IAAIC,EAAiBoc,IAAiBC,kBAAkB9Y,EAAsB,CAAEG,OAAQlB,EAAQmB,QAASqY,IACzG,GAAIhc,EAAgB,CAClB,IAAIikB,EA3LG7T,EA2LcmM,4BAA4B/Z,EAAQwZ,EAAWhc,GAChEikB,IACF4K,EAAU7S,GAAa/C,YAAUgL,GACjC6K,GAAe,QAKrBA,IACFH,EAAsBnsB,GAAUqsB,MAE7BF,I,sFC/MPnE,GAAY,EACZ/T,EAAmB,GACnBuY,EAAa,EACIjtB,EAEnB,aACE,GADa,oBACT0c,gBAAgB1c,EAClB,MAAMmd,MAAM,2CAJGnd,EAOZ4oB,UAAY,SAACxoB,GAAD,OAChBA,IAAQA,EAAIK,SAAWL,EAAIiX,WAAajX,EAAIgB,UAAYhB,EAAIM,aAR5CV,EASZE,oBAAsB,kBAAMgX,YAAUxC,IAT1B1U,EAUZktB,kBAAoB,kBAAMxxB,OAAOpB,KAAKoa,IAV1B1U,EAWZD,iCAAmC,WACxC,IAAI0oB,EAaJ,OAZA/sB,OAAOpB,KAAKsF,cAAc6B,QAAO,SAAA5F,GAAG,OAAIA,EAAI+Q,SAAS,gBAAchR,SAAQ,SAAAwd,GACzE,IAAK1E,EAAiB0E,GAAK,CACzB,IAAIhZ,EAAMoc,YAAqBpD,GAC/B,IAAKhZ,EAAK,OACV,GAjBaJ,EAiBJ4oB,UAAUxoB,GAEjB,YAnBWJ,EAkBNmtB,mBAAmB/T,GAG1B1E,EAAiB0E,GAAMhZ,MAG3BqoB,GAAY,GACL,GAzBUzoB,EA2BZsB,YAAc,SAAC8X,GAAD,OAAQA,EAAK1E,EAAiB0E,GAAM,MA3BtCpZ,EA4BZotB,eAAiB,SAAChtB,GA5BNJ,EA6BZmtB,mBAAmB/sB,EAAIgZ,KA7BXpZ,EA+BZqtB,YAAc,SAACjtB,GACpB,GAhCiBJ,EAgCR4oB,UAAUxoB,GAAM,OAAO,KAGhC,IADA,IAAIgZ,EAAE,mBAAe6T,KACe,OAA7BrtB,aAAa2jB,QAAQnK,IAC1BA,EAAE,mBAAe6T,KACnB,IAAIK,EAAOpW,YAAU9W,GAIrB,OAHAktB,EAAKlU,GAAKA,EACVuD,YAAmBvD,EAAIkU,GACvB5Y,EAAiB0E,GAAMkU,EAChBlU,GAzCUpZ,EA2CZa,eAAiB,SAACT,GACvB,IA5CiBJ,EA4CR4oB,UAAUxoB,GAAnB,CACA,IAAIgZ,EAAKhZ,EAAIgZ,GACTkU,EAAOpW,YAAU9W,GACrBuc,YAAmBvD,EAAIkU,GACvB5Y,EAAiB0E,GAAMkU,IAhDNttB,EAkDZmtB,mBAAqB,SAACI,UACpB7Y,EAAiB6Y,GACxB3tB,aAAaC,WAAW0tB,IApDPvtB,EAuDZod,kBAAoB,SAAC/b,EAAOf,GACjC,GAAKe,EAAL,CACA,IAAIjB,EAzDaJ,EAyDFsB,YAAYD,GACtBjB,GAAOA,EAAIE,WAAaA,IAC7BF,EAAIE,SAAWA,EA3DEN,EA4DZa,eAAeT,MA5DHJ,EA8DZ2rB,cAAgB,SAAC6B,EAAMC,GAC5B,IAAIC,EAAOF,EAAKltB,SACZqtB,EAAOF,EAAKntB,SAhECN,EAiEZod,kBAAkBoQ,EAAKpU,GAAIuU,GAjEf3tB,EAkEZod,kBAAkBqQ,EAAKrU,GAAIsU,IAlEf1tB,EAoEZ4tB,kBAAoB,SAACC,EAAQC,GAAT,OApER9tB,EAqEZ2rB,cArEY3rB,EAqEOsB,YAAYusB,GArEnB7tB,EAqEiCsB,YAAYwsB,M,sGCvE7CzT,E,WACnB,aAAgB,GAAD,oBAAKqC,gBAAgBrC,EAAkB,MAAM8C,MAAM,0C,mEACzC4Q,EAAcC,GAAY,IAAD,EAC1CrsB,EAAoBqsB,EAApBrsB,OAAQC,EAAYosB,EAAZpsB,QACd,GAAImsB,EACF,OAAO,UAAAA,EAAarO,MAAK,SAAAhe,GAAI,OAAIA,EAAKC,SAAWA,KAAYC,GAAYA,GAAWF,EAAKE,UAAYA,aAA9F,eAA0G3D,iBAAkB,I,qCAEjH8vB,EAAcC,EAAW/vB,GAAiB,IACxD0D,EAAoBqsB,EAApBrsB,OAAQC,EAAYosB,EAAZpsB,QACTmsB,IAAcA,EAAe,IAClC,IAAI3a,EAAQ2a,EAAaE,WAAU,SAAAvsB,GAAI,OAAIA,EAAKC,SAAWA,KAAYC,GAAYA,GAAWF,EAAKE,UAAYA,MAC/G,IAAK3D,GAAkBmV,GAAS,EAE9B2a,EAAaG,OAAO9a,EAAO,OACtB,CACL,IAAI+a,EAAU,CAAExsB,SAAQ1D,kBACpB2D,IAASusB,EAAQvsB,QAAUA,GAC3BwR,GAAS,EACX2a,EAAa3a,GAAS+a,EAEtBJ,EAAajyB,KAAKqyB,GAEtB,OAAOJ,I,yCAEiB/vB,EAAaowB,EAAWnwB,GAAmC,IAAnBsf,EAAkB,uDAAT,CAAC,GAAI,GAC9E,GAAIljB,MAAMgE,QAAQL,GAAc,CAE9B,IAF8B,EAE1BM,EAAyBL,EACzBM,EAAsB,KAHI,cAIDP,GAJC,IAI9B,2BAA0C,CAAC,IAAhCQ,EAA+B,QACxC,KAAIF,EAAyBE,EAAeC,UACvC,CACHF,EAAsBC,EACtB,MAHoDF,GAA0BE,EAAeC,UALnE,8BAW9B,IAAKF,EAAqB,OAAOgf,EACjC,IAAIoD,EAASb,YAAMxhB,EAAwB,EAAGC,EAAoBE,UAClE,MAAO,CAACF,EAAoB6vB,GAAYzN,GAGxC,IAAIA,EAASb,YAAM7hB,EAAgB,EAAGD,EAAYS,UAClD,MAAO,CAACT,EAAYowB,GAAYzN,O,sCCnCvBhlB,IATO,CACpB0P,MAAO,CAAE5N,KAAM,SACfgO,IAAK,CAAEhO,KAAM,OACb+N,QAAS,CAAE/N,KAAM,WACjBiO,MAAO,CAAEjO,KAAM,SACfkO,KAAM,CAAElO,KAAM,QACd6N,KAAM,CAAE7N,KAAM,U,mNCHVyP,EAAW,CAEf9J,QAAS,CAAE3F,KAAM,KAAMwnB,OAAQ,WAC/BzoB,GAAI,CAAEiB,KAAM,KAAMwnB,OAAQ,WAC1BvoB,IAAK,CAAEe,KAAM,KAAMgU,KAAM,IAAKwT,OAAQ,cACtC3hB,SAAU,CAAE7F,KAAM,KAAMwnB,OAAQ,YAEhC1hB,SAAU,CAAE9F,KAAM,MAAOwnB,OAAQ,YACjCxoB,IAAK,CAAEgB,KAAM,MAAOwnB,OAAQ,YAC5BtoB,KAAM,CAAEc,KAAM,MAAOgU,KAAM,IAAKwT,OAAQ,eACxCxhB,UAAW,CAAEhG,KAAM,MAAOwnB,OAAQ,aAClCoJ,WAAY,CAAE5wB,KAAM,aAAcwnB,OAAQ,cAE1CvhB,SAAU,CAAEjG,KAAM,MAAOwnB,OAAQ,YACjC3nB,IAAK,CAAEG,KAAM,MAAOwnB,OAAQ,YAC5BroB,KAAM,CAAEa,KAAM,MAAOgU,KAAM,IAAKwT,OAAQ,eACxCrhB,UAAW,CAAEnG,KAAM,MAAOwnB,OAAQ,aAElCpoB,cAAe,CAAEY,KAAM,qBAAsBgU,KAAM,KACnD6c,QAAS,CAAE7wB,KAAM,eAAgBgU,KAAM,KACvC3U,cAAe,CAAEW,KAAM,YAAagU,KAAM,KAC1C8c,QAAS,CAAE9wB,KAAM,UAAWgU,KAAM,KAClC1U,QAAS,CAAEU,KAAM,qBACjBT,UAAW,CAAES,KAAM,kBAAmBgU,KAAM,KAC5CxU,UAAW,CAAEQ,KAAM,YAAagU,KAAM,KACtCvU,SAAU,CAAEO,KAAM,WAAYgU,KAAM,KACpCtU,UAAW,CAAEM,KAAM,gBAAiBgU,KAAM,KAC1CxO,KAAM,CAAExF,KAAM,WACd+wB,SAAU,CAAE/wB,KAAM,yBAA0BgU,KAAM,KAClDgd,WAAY,CAAEhxB,KAAM,kBAAmBgU,KAAM,KAC7Cid,OAAQ,CAAEjxB,KAAM,YAAagU,KAAM,KAGnCkU,aAAc,CAAEloB,KAAM,qBACtBuoB,aAAc,CAAEvoB,KAAM,sBACtB4oB,WAAY,CAAE5oB,KAAM,uBACpBmoB,kBAAmB,CAAEnoB,KAAM,8BAC3BwoB,kBAAmB,CAAExoB,KAAM,+BAC3B6oB,gBAAiB,CAAE7oB,KAAM,gCACzBooB,iBAAkB,CAAEpoB,KAAM,0BAC1ByoB,iBAAkB,CAAEzoB,KAAM,2BAC1B8oB,eAAgB,CAAE9oB,KAAM,4BACxBkxB,mBAAoB,CAAElxB,KAAM,0BAA2BgU,KAAM,KAC7Dmd,mBAAoB,CAAEnxB,KAAM,2BAA4BgU,KAAM,KAC9Dod,mBAAoB,CAAEpxB,KAAM,0BAA2BgU,KAAM,KAC7Dqd,mBAAoB,CAAErxB,KAAM,2BAA4BgU,KAAM,KAC9DqU,oBAAqB,CAAEroB,KAAM,gCAAiCgU,KAAM,SACpE0U,oBAAqB,CAAE1oB,KAAM,iCAAkCgU,KAAM,SACrEsU,qBAAsB,CAAEtoB,KAAM,qCAAsCgU,KAAM,SAC1E2U,qBAAsB,CAAE3oB,KAAM,sCAAuCgU,KAAM,SAC3E+U,mBAAoB,CAAE/oB,KAAM,uCAAwCgU,KAAM,SAG1EmW,UAAW,CAAEnqB,KAAM,kBACnBuqB,UAAW,CAAEvqB,KAAM,kBACnBoqB,eAAgB,CAAEpqB,KAAM,2BACxBwqB,eAAgB,CAAExqB,KAAM,2BACxBqqB,cAAe,CAAErqB,KAAM,uBACvByqB,cAAe,CAAEzqB,KAAM,uBACvBsxB,gBAAiB,CAAEtxB,KAAM,uBAAwBgU,KAAM,KACvDud,gBAAiB,CAAEvxB,KAAM,uBAAwBgU,KAAM,KACvDwd,gBAAiB,CAAExxB,KAAM,uBAAwBgU,KAAM,KACvDyd,gBAAiB,CAAEzxB,KAAM,uBAAwBgU,KAAM,KACvDsV,iBAAkB,CAAEtpB,KAAM,6BAA8BgU,KAAM,SAC9DuV,iBAAkB,CAAEvpB,KAAM,6BAA8BgU,KAAM,SAC9DsW,kBAAmB,CAAEtqB,KAAM,kCAAmCgU,KAAM,SACpE0W,kBAAmB,CAAE1qB,KAAM,kCAAmCgU,KAAM,SACpE0d,aAAc,CAAE1xB,KAAM,qBAAsBgU,KAAM,KAClD2d,aAAc,CAAE3xB,KAAM,qBAAsBgU,KAAM,KAElDgV,QAAS,CAAEhpB,KAAM,uBACjBipB,aAAc,CAAEjpB,KAAM,gCACtBkpB,YAAa,CAAElpB,KAAM,4BACrBmpB,gBAAiB,CAAEnpB,KAAM,uCAAwCgU,KAAM,SAEvE+V,QAAS,CAAE/pB,KAAM,wBACjBgqB,aAAc,CAAEhqB,KAAM,iCACtBiqB,YAAa,CAAEjqB,KAAM,6BACrBkqB,gBAAiB,CAAElqB,KAAM,wCAAyCgU,KAAM,SAExEoV,eAAgB,CAAEppB,KAAM,sBAAuBgU,KAAM,SACrDqV,WAAY,CAAErpB,KAAM,kBAAmBgU,KAAM,SAC7C4d,IAAK,CAAE5xB,KAAM,UAAWgU,KAAM,KAC9B6d,SAAU,CAAE7xB,KAAM,eAAgBgU,KAAM,KACxC8d,QAAS,CAAE9xB,KAAM,UAAWgU,KAAM,KAClC+d,aAAc,CAAE/xB,KAAM,eAAgBgU,KAAM,KAC5Cge,YAAa,CAAEhyB,KAAM,2BAA4BgU,KAAM,KACvDie,oBAAqB,CAAEjyB,KAAM,mCAAoCgU,KAAM,KACvEke,oBAAqB,CAAElyB,KAAM,0CAA2CgU,KAAM,KAE9Eme,eAAgB,CAAEnyB,KAAM,iBAAkBgU,KAAM,KAChDoe,oBAAqB,CAAEpyB,KAAM,sBAAuBgU,KAAM,KAC1Dqe,iBAAkB,CAAEryB,KAAM,mBAAoBgU,KAAM,KACpDse,YAAa,CAAEtyB,KAAM,iBAAkBgU,KAAM,KAC7Cue,aAAc,CAAEvyB,KAAM,eAAgBgU,KAAM,KAC5Cwe,SAAU,CAAExyB,KAAM,WAAYgU,KAAM,KACpCye,UAAW,CAAEzyB,KAAM,YAAagU,KAAM,KAGtC2Q,aAAc,CAAE3kB,KAAM,wBAAyB3C,QAAS,SACxDq1B,WAAY,CAAE1yB,KAAM,kBAAmB3C,QAAS,GAEhDs1B,YAAa,CAAE3yB,KAAM,eACrBwpB,kBAAmB,CAAExpB,KAAM,yBAA0BgU,KAAM,SAE3D4V,cAAe,CAAE5pB,KAAM,qBAAsBgU,KAAM,IAAK3W,QAAS,IACjEosB,oBAAqB,CAAEzpB,KAAM,gCAAiCgU,KAAM,SACpE0V,mBAAoB,CAAE1pB,KAAM,0BAA2B3C,SAAS,GAChEu1B,cAAe,CAAE5yB,KAAM,sBAAuBgU,KAAM,IAAK3W,QAAS,IAClEstB,oBAAqB,CAAE3qB,KAAM,iCAAkCgU,KAAM,SACrE6e,mBAAoB,CAAE7yB,KAAM,2BAA4B3C,SAAS,IAEnE,SAASy1B,EAAcnJ,GAErB,OADAA,GAAY,KACF,EAAU,EAAIA,EAAM,EACrBA,GAAO,IAAa,GAAW,EAANA,EAAU,GACrC,EAAIA,EAGb,IAAMra,EAAW,CAEfzJ,SAAU,SAACktB,GAAD,OAAOA,EAAEptB,SAAW,EAAIotB,EAAE9zB,IAAM,KAAO8zB,EAAEh0B,IAEnDiH,UAAW,SAAC+sB,GAAD,OAAQA,EAAEjtB,SAAWitB,EAAEnC,aAAe,EAAImC,EAAE7zB,KAAO,KAAO6zB,EAAE/zB,KAEvEmH,UAAW,SAAC4sB,GAAD,OAAOA,EAAE9sB,UAAY,EAAI8sB,EAAE5zB,KAAO,KAAO4zB,EAAElzB,KAGtDqoB,aAAc,SAAC6K,GAAD,OAAOA,EAAE/sB,UAAY+sB,EAAEzK,qBAAuByK,EAAEvJ,kBAAoBuJ,EAAEtJ,qBACpFtB,kBAAmB,SAAC4K,GAAD,OAAOA,EAAE7K,aAAe6K,EAAE3J,gBAC7ChB,iBAAkB,SAAC2K,GAAD,OAAOA,EAAE7K,aAAe6K,EAAE1K,qBAC5CA,oBAAqB,SAAC0K,GAAD,OAAQ,EAAK1Q,YAAM0Q,EAAEvzB,UAAYuzB,EAAE3B,mBAAoB,EAAG,KAAO,IAAO2B,EAAEtzB,SAAW,KAC1G6oB,qBAAsB,SAACyK,GAAD,OAAQ,GAAKA,EAAE3zB,cAAgB2zB,EAAE7B,mBAAqB6B,EAAEnB,KAAO,KAGrFrJ,aAAc,SAACwK,GAAD,OAAOA,EAAE/sB,UAAY+sB,EAAEpK,qBAAuBoK,EAAEvJ,kBAAoBuJ,EAAEtJ,qBACpFjB,kBAAmB,SAACuK,GAAD,OAAOA,EAAExK,aAAewK,EAAE3J,gBAC7CX,iBAAkB,SAACsK,GAAD,OAAOA,EAAExK,aAAewK,EAAErK,qBAC5CA,oBAAqB,SAACqK,GAAD,OAAQ,EAAK1Q,YAAM0Q,EAAEvzB,UAAYuzB,EAAE1B,mBAAoB,EAAG,KAAO,IAAO0B,EAAEtzB,SAAW,KAC1GkpB,qBAAsB,SAACoK,GAAD,OAAQ,GAAKA,EAAE3zB,cAAgB2zB,EAAE5B,mBAAqB4B,EAAEnB,KAAO,KAGrFhJ,WAAY,SAACmK,GAAD,OAAOA,EAAE/J,SACrBH,gBAAiB,SAACkK,GAAD,OAAOA,EAAE9J,cAC1BH,eAAgB,SAACiK,GAAD,OAAOA,EAAE7J,aACzBH,mBAAoB,SAACgK,GAAD,OAAOA,EAAE5J,iBAE7BH,QAAS,SAAC+J,GAAD,OAAOA,EAAE/sB,UAAY+sB,EAAE5J,gBAAkB4J,EAAEvJ,kBAAoBuJ,EAAEtJ,qBAC1ER,aAAc,SAAC8J,GAAD,OAAOA,EAAE/J,QAAU+J,EAAE3J,gBACnCF,YAAa,SAAC6J,GAAD,OAAOA,EAAE/J,QAAU+J,EAAE1J,YAClCF,gBAAiB,SAAC4J,GAAD,OAAQ,GAAKA,EAAE3zB,cAAgB2zB,EAAEnB,KAAO,KAEzDxI,eAAgB,SAAC2J,GAAD,OAAQ,EAAIA,EAAEtzB,SAAW,KACzC4pB,WAAY,SAAC0J,GAAD,OAAQ,EAAK1Q,YAAM0Q,EAAEvzB,UAAW,EAAG,KAAO,KAAQuzB,EAAEtzB,SAAW,MAE3E6pB,iBAAkB,SAACyJ,GAAD,OAAQ,EAAK1Q,YAAM0Q,EAAEvzB,UAAYuzB,EAAEvB,gBAAiB,EAAG,KAAO,IAAOuB,EAAEtzB,SAAW,KACpG8pB,iBAAkB,SAACwJ,GAAD,OAAQ,EAAK1Q,YAAM0Q,EAAEvzB,UAAYuzB,EAAEtB,gBAAiB,EAAG,KAAO,IAAOsB,EAAEtzB,SAAW,KAEpG+pB,kBAAmB,SAACuJ,GAAD,OAAQ,IAAMA,EAAEL,aAAe,IAAMK,EAAEJ,YAAc,IAAMI,EAAEL,aAChFjJ,oBAAqB,SAACsJ,GAAD,OAAOA,EAAErJ,mBAAqB,EAAIoJ,EAAcC,EAAEnJ,iBAInEoJ,EAAc,CAClB9K,aAAc,SAAC6K,EAAGjJ,GAAJ,OAAYiJ,EAAE/sB,UAAY+sB,EAAE,GAAD,OAAIjJ,EAAJ,0BAAkCiJ,EAAEvJ,kBAAoBuJ,EAAE,GAAD,OAAIjJ,EAAJ,0BAClG3B,kBAAmB,SAAC4K,EAAGjJ,GAAJ,OAAYiJ,EAAE,GAAD,OAAIjJ,EAAJ,kBAA0BiJ,EAAE3J,gBAC5DhB,iBAAkB,SAAC2K,EAAGjJ,GAAJ,OAAYiJ,EAAE,GAAD,OAAIjJ,EAAJ,kBAA0BiJ,EAAE1K,qBAC3DC,qBAAsB,SAACyK,EAAGjJ,GAAJ,OAAa,GAAKiJ,EAAE,GAAD,OAAIjJ,EAAJ,mBAA2BiJ,EAAE7B,mBAAqB6B,EAAEnB,KAAO,KAEpGrJ,aAAc,SAACwK,EAAGjJ,GAAJ,OAAYiJ,EAAE/sB,UAAY+sB,EAAE,GAAD,OAAIjJ,EAAJ,0BAAkCiJ,EAAEvJ,kBAAoBuJ,EAAE,GAAD,OAAIjJ,EAAJ,0BAClGtB,kBAAmB,SAACuK,EAAGjJ,GAAJ,OAAYiJ,EAAE,GAAD,OAAIjJ,EAAJ,kBAA0BiJ,EAAE3J,gBAC5DX,iBAAkB,SAACsK,EAAGjJ,GAAJ,OAAYiJ,EAAE,GAAD,OAAIjJ,EAAJ,kBAA0BiJ,EAAErK,qBAC3DC,qBAAsB,SAACoK,EAAGjJ,GAAJ,OAAa,GAAKiJ,EAAE,GAAD,OAAIjJ,EAAJ,mBAA2BiJ,EAAE5B,mBAAqB4B,EAAEnB,KAAO,KAEpGhJ,WAAY,SAACmK,EAAGjJ,GAAJ,OAAYiJ,EAAE,GAAD,OAAIjJ,EAAJ,cACzBjB,gBAAiB,SAACkK,EAAGjJ,GAAJ,OAAYiJ,EAAE,GAAD,OAAIjJ,EAAJ,mBAC9BhB,eAAgB,SAACiK,EAAGjJ,GAAJ,OAAYiJ,EAAE,GAAD,OAAIjJ,EAAJ,kBAC7Bf,mBAAoB,SAACgK,EAAGjJ,GAAJ,OAAYiJ,EAAE,GAAD,OAAIjJ,EAAJ,sBAEjCC,QAAS,SAACgJ,EAAGjJ,GAAJ,OAAYiJ,EAAE/sB,UAAY+sB,EAAE,GAAD,OAAIjJ,EAAJ,qBAA6BiJ,EAAEvJ,kBAAoBuJ,EAAE,GAAD,OAAIjJ,EAAJ,0BACxFE,aAAc,SAAC+I,EAAGjJ,GAAJ,OAAYiJ,EAAE,GAAD,OAAIjJ,EAAJ,aAAqBiJ,EAAE3J,gBAClDa,YAAa,SAAC8I,EAAGjJ,GAAJ,OAAYiJ,EAAE,GAAD,OAAIjJ,EAAJ,aAAqBiJ,EAAE1J,YACjDa,gBAAiB,SAAC6I,EAAGjJ,GAAJ,OAAa,GAAKiJ,EAAE,GAAD,OAAIjJ,EAAJ,mBAA2BiJ,EAAEnB,KAAO,KAExEzH,UAAW,SAAC4I,EAAGjJ,GAAJ,OAAYiJ,EAAE/sB,UAAY+sB,EAAE,GAAD,OAAIjJ,EAAJ,uBAA+BiJ,EAAEvJ,kBAAoBuJ,EAAE,GAAD,OAAIjJ,EAAJ,0BAC5FM,eAAgB,SAAC2I,EAAGjJ,GAAJ,OAAYiJ,EAAE,GAAD,OAAIjJ,EAAJ,eAAuBiJ,EAAE3J,gBACtDiB,cAAe,SAAC0I,EAAGjJ,GAAJ,OAAYiJ,EAAE,GAAD,OAAIjJ,EAAJ,eAAuBiJ,EAAEzJ,kBACrDgB,kBAAmB,SAACyI,EAAGjJ,GAAJ,OAAa,GAAKiJ,EAAE,GAAD,OAAIjJ,EAAJ,mBAA2BiJ,EAAEzB,gBAAkByB,EAAEnB,KAAO,KAE9FrH,UAAW,SAACwI,EAAGjJ,GAAJ,OAAYiJ,EAAE/sB,UAAY+sB,EAAE,GAAD,OAAIjJ,EAAJ,uBAA+BiJ,EAAEvJ,kBAAoBuJ,EAAE,GAAD,OAAIjJ,EAAJ,0BAC5FU,eAAgB,SAACuI,EAAGjJ,GAAJ,OAAYiJ,EAAE,GAAD,OAAIjJ,EAAJ,eAAuBiJ,EAAE3J,gBACtDqB,cAAe,SAACsI,EAAGjJ,GAAJ,OAAYiJ,EAAE,GAAD,OAAIjJ,EAAJ,eAAuBiJ,EAAExJ,kBACrDmB,kBAAmB,SAACqI,EAAGjJ,GAAJ,OAAa,GAAKiJ,EAAE,GAAD,OAAIjJ,EAAJ,mBAA2BiJ,EAAExB,gBAAkBwB,EAAEnB,KAAO,KAE9FjH,oBAAqB,SAACoI,EAAGjJ,GAAJ,OAAYiJ,EAAE,GAAD,OAAIjJ,EAAJ,wBAAgC,EAAIgJ,EAAcC,EAAE,GAAD,OAAIjJ,EAAJ,sBAGvF,CACE,gBAAiB,UAAW,gBAAiB,qBAAsB,UAAW,eAAgB,cAAe,mBAD/G,mBAEK7rB,OAAOpB,KAAK4S,GAAUzL,QAAO,SAAA5F,GAAG,MAAI,CAAC,WAAY,WAAY,UAAUma,MAAK,SAAA0a,GAAG,OAAI70B,EAAI+Q,SAAS8jB,WACnG90B,SAAQ,SAAAC,GACRqR,EAASrR,GAAKmpB,KAAO,sBAAM9qB,UAAU,4BAAhB,SAA6CgT,EAASrR,GAAK4B,OAChFyP,EAASrR,GAAKgD,QAAU,cAG1B,CAAC,gBAAiB,UAAW,gBAAiB,sBAA9C,mBAAuEnD,OAAOpB,KAAKm2B,KAAc70B,SAAQ,SAAAC,GACvG,IAAIsc,EAAMjL,EAASrR,GACnBH,OAAOpB,KAAKqB,KAAeC,SAAQ,SAAA0Y,GACjC,IAAIqc,EAAO,UAAMrc,EAAN,YAAgBzY,GAC3BqR,EAASyjB,GAAWzZ,YAAUiB,GAE5BjL,EAASyjB,GAASlzB,KADR,kBAAR5B,EACF,gBAAkCF,IAAc2Y,GAAQ7W,KAAxD,QACe,wBAAR5B,EACP,gBAAkCF,IAAc2Y,GAAQ7W,KAAxD,mBACe,uBAAR5B,EACP,gBAAkCF,IAAc2Y,GAAQ7W,KAAxD,aAEA,UAA4B9B,IAAc2Y,GAAQ7W,KAAlD,YAA0D0a,EAAI1a,MAChEyP,EAASyjB,GAAS3L,KAAO,sBAAM9qB,UAAS,eAAUoa,EAAV,gBAAf,SAAgDpH,EAASyjB,GAASlzB,OAC3FyP,EAASyjB,GAAS9xB,QAAUyV,QAMhC5Y,OAAOyF,QAAQsvB,GAAa70B,SAAQ,mCAAEC,EAAF,KAAOwsB,EAAP,YAClC3sB,OAAOpB,KAAKqB,KAAeC,SAAQ,SAAA0Y,GAAM,OACvC5Y,OAAO4R,eAAeP,EAAtB,UAAmCuH,EAAnC,YAA6CzY,GAAO,CAClD2R,cAAc,EACd8a,YAAY,EACZC,UAAU,EACVvQ,MAAO,SAACG,GAAD,OAAUkQ,EAAMlQ,EAAK7D,YAGlC,IAAM5H,EAAmB,CACvB8b,iBAAkB,CAChB3sB,IAAK,YACL+0B,QAAS,SAAClM,GAAD,OAAa,SAAC8L,GAAD,OAAQA,EAAEjtB,SAAWitB,EAAEnC,aAAe,EAAImC,EAAE7zB,KAAO,KAAO6zB,EAAE/zB,IAAM+zB,EAAE5sB,WAAa8gB,EAAQ1M,MAAQ,OACvHrL,WAAY,CAAC,WAAY,aAAc,OAAQ,MAAO,YAAa,WAAY,OAAQ,SAK3F,SAASc,EAAmB0K,GAAoB,IAAfuM,EAAc,uDAAJ,GAAI,EACmCA,EAA1E5X,mBADuC,MACzBpR,OAAOpB,KAAKyS,GADa,IACmC2X,EAArCvC,gBADE,MACSzmB,OAAOpB,KAAK4S,GADrB,IAEbiL,EAA1B7L,wBAFuC,MAEpB,GAFoB,EAG7CA,EAAiB1Q,SAAQ,SAAA6Q,GAAoB,IAChCokB,EAAgCpkB,EAArC5Q,IAAyB6oB,EAAYjY,EAAZiY,QADW,EAEnBhY,EAAiBmkB,IAAuB,GAAzDh1B,EAFoC,EAEpCA,IAAK+0B,EAF+B,EAE/BA,QACN9jB,EAAYF,SAAS/Q,KAC1B+0B,EAAUA,EAAQlM,GAClBhpB,OAAO4R,eAAe6K,EAAKtc,EAAK,CAC9B0R,IAAKmX,EAAQ5X,YAAc,kBAAM8jB,EAAQzY,IAAO,WAC9C,IAAIxD,EAAMic,EAAQzY,GAElB,OADAzc,OAAO4R,eAAeoP,KAAM7gB,EAAK,CAAEmc,MAAOrD,IACnCA,GAETnH,cAAc,QAIlBV,EAAYlR,SAAQ,SAAAC,IACjBsc,EAAImK,eAAezmB,IAAQH,OAAO4R,eAAe6K,EAAKtc,EAAK,CAC1D0R,IAAKmX,EAAQ5X,YAAc,kBAAMC,EAASlR,GAAKsc,IAAO,WACpD,IAAIxD,EAAM5H,EAASlR,GAAKsc,GAExB,OADAzc,OAAO4R,eAAeoP,KAAM7gB,EAAK,CAAEmc,MAAOrD,IACnCA,GAETnH,cAAc,OAIlB2U,EAASvmB,SAAQ,SAAAC,GAAG,OAAKsc,EAAImK,eAAezmB,KAASsc,EAAItc,GAAOqR,EAASrR,GAAKf,SAAW,Q,uGCjRtEqT,EAEnB,aAAgB,GAAD,oBAAKuO,gBAAgBvO,EAAQ,MAAMgP,MAAM,2CAFrChP,EAIZC,oBAAsB,kBAAMzT,KAJhBwT,EAKZwB,aAAe,SAAC7N,GAAD,IAAWyb,EAAX,uDAAoB,GAApB,OAA4BviB,IAAc8G,IAAayb,GAL1DpP,EAMZ2iB,cAAgB,SAAChvB,GAAD,OAAc/G,IAAgB2jB,QAAQ5c,IAN1CqM,EAQZgB,cAAgB,SAAC4hB,GAAD,MAAYxT,EAAZ,uDAAqB,GAArB,OAA6B,UAAA7iB,IAAWq2B,UAAX,eAAuBtzB,OAAQ8f,GARhEpP,EASZ6iB,gBAAkB,SAACD,GAAD,MAAYxT,EAAZ,uDAAqB,EAArB,OAA4B,UAAA7iB,IAAWq2B,UAAX,eAAuBnF,SAAUrO,GATnEpP,EAUZ0B,qBAAuB,SAACkhB,GAAD,MAAYxT,EAAZ,uDAAqB,GAArB,OAA6B,UAAA7iB,IAAWq2B,UAAX,eAAuBE,cAAe1T,GAV9EpP,EAWZ+iB,4BAA8B,SAACH,EAAWjgB,EAAa4b,EAAgB1rB,GAAzC,QAAoDuc,EAApD,uDAA6D,GAA7D,OAAqE,UAAA7iB,IAAWq2B,UAAX,mBAAuBI,0BAAvB,sBAA4CrgB,EAAa4b,EAAgB1rB,KAAcuc,GAX9KpP,EAYZijB,qBAAuB,SAACL,GAAD,MAAYxT,EAAZ,uDAAqB,GAArB,OAA6B,UAAA7iB,IAAWq2B,UAAX,eAAuBM,cAAe9T,GAZ9EpP,EAaZmjB,qBAAuB,SAACP,GAAD,MAAYxT,EAAZ,uDAAqB,KAArB,OAA+B,UAAA7iB,IAAWq2B,UAAX,eAAuB/yB,cAAeuf,GAbhFpP,EAgBZojB,qBAAuB,SAACR,EAAWjvB,GAAZ,UAAsByb,EAAtB,uDAA+B,EAA/B,OAAsC,UAAA7iB,IAAWq2B,UAAX,mBAAuBS,iBAAvB,mBAAkCpF,YAAlC,eAhBjDje,EAgB+F2iB,cAAchvB,MAAcyb,GAhB3HpP,EAiBZsjB,oBAAsB,SAACV,EAAWjvB,GAAZ,UAAsByb,EAAtB,uDAA+B,EAA/B,OAAsC,UAAA7iB,IAAWq2B,UAAX,mBAAuBS,iBAAvB,mBAAkCE,WAAlC,eAjBhDvjB,EAiB6F2iB,cAAchvB,MAAcyb,GAjBzHpP,EAkBZoB,oBAAsB,SAACwhB,GAAD,QAAYxT,EAAZ,uDAAqB,GAArB,OAA6B,UAAA7iB,IAAWq2B,UAAX,mBAAuBS,iBAAvB,eAAkCjF,aAAchP,GAlBvFpP,EAmBZ2U,mBAAqB,SAACiO,EAAWjgB,GAAZ,yBAA4BpW,IAAWq2B,UAAvC,iBAA4B,EAAuBrzB,aAAnD,aAA4B,SAA+BoT,IAnBpE3C,EAqBZwjB,iBAAmB,SAACC,GAAD,OAAgBl2B,OAAOwF,YAAYxF,OAAOyF,QAAQzG,KAAY+G,QAAO,oDAAgCmwB,aAAeA,OArB3HzjB,EAsBZ0jB,kBAAoB,SAACD,GAAD,IAAarU,EAAb,uDAAsB,GAAtB,OAA8BtiB,IAAe22B,IAAerU,GAtBpEpP,EAwBZkB,iCAAmC,SAACyiB,GAAD,IAAYvU,EAAZ,uDAAqB,EAArB,OAC/B,OAATuU,QAAS,IAATA,OAAA,EAAAA,EAAWC,kBAzBM5jB,EAyBkBojB,qBAAL,OAA0BO,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAWj2B,IAArC,OAA0Ci2B,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAWhwB,SAAUyb,IAzB5EpP,EA0BZsB,gCAAkC,SAACqiB,GAAD,IAAYvU,EAAZ,uDAAqB,EAArB,OAC9B,OAATuU,QAAS,IAATA,OAAA,EAAAA,EAAWE,iBA3BM7jB,EA2BiBsjB,oBAAL,OAAyBK,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAWj2B,IAApC,OAAyCi2B,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAWhwB,SAAUyb,IA3B1EpP,EA6BZ4U,yBAA2B,SAACgO,EAAWjgB,EAAa7S,GAAmC,IAAnBsf,EAAkB,uDAAT,KAC9Evf,EA9BamQ,EA8BMmjB,qBAAqBP,GAC5C,IAAK/yB,IAAgBC,EAAgB,OAAOsf,EAF+C,MAGrElD,IAAiBqG,mBAAmB1iB,EAAa,QAASC,GAHW,mBAGtFP,EAHsF,KAG/EijB,EAH+E,KAI3F,OAAKA,EACEjlB,OAAOwF,YAAYxF,OAAOyF,QAAQzD,EAAMoT,IAAcvW,KAAI,yCAAgB,CAAhB,UAA4BomB,OADzEpD","file":"static/js/10.1388d394.chunk.js","sourcesContent":["import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = (props) => <span className={props.colored ? \"text-5star\" : \"\"}>\r\n  {props.stars ? [...Array(props.stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport Character from \"./Character/Character\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //remove the old error/prone id lists, if it still exists\r\n  localStorage.removeItem(\"artifact_id_list\")\r\n  localStorage.removeItem(\"character_id_list\")\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  if (CharacterDatabase.populateDatebaseFromLocalStorage() |\r\n    ArtifactDatabase.populateDatebaseFromLocalStorage()) {\r\n    //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n    let arts = ArtifactDatabase.getArtifactDatabase();\r\n    Object.values(arts).forEach(art => {\r\n      let valid = true\r\n      if (art.location && !CharacterDatabase.getCharacter(art.location)) {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n      if (!valid)\r\n        ArtifactDatabase.updateArtifact(art)\r\n    })\r\n\r\n    let chars = CharacterDatabase.getCharacterDatabase();\r\n    Object.values(chars).forEach(character => {\r\n      let valid = true;\r\n      //verify character database equipment validity\r\n      let equippedArtifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([slotKey, artid]) => {\r\n        if (!ArtifactDatabase.getArtifact(artid)) {\r\n          valid = false\r\n          return [slotKey, undefined]\r\n        }\r\n        return [slotKey, artid]\r\n      }))\r\n      if (!valid)\r\n        character.equippedArtifacts = equippedArtifacts\r\n\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      if (character.artifactConditionals) character.artifactConditionals = character.artifactConditionals.filter(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for invalid conditionals from previous iterations where srcKey2 was not used.\r\n      let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n      let ascension = Character.getAscension(levelKey)\r\n      character.talentConditionals = talentConditionals.filter(cond => {\r\n        let { srcKey: talentKey, srcKey2: conditionalKey } = cond\r\n        let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n        let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n        if (!conditional) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n      if (!valid) {\r\n        CharacterDatabase.updateCharacter(character)\r\n      }\r\n    })\r\n  }\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import DullBlade from './Weapon_Dull_Blade.png'\r\nimport SilverSword from './Weapon_Silver_Sword.png'\r\nimport CoolSteel from './Weapon_Cool_Steel.png'\r\nimport DarkIronSword from './Weapon_Dark_Iron_Sword.png'\r\nimport FilletBlade from './Weapon_Fillet_Blade.png'\r\nimport HarbingerOfDawn from './Weapon_Harbinger_of_Dawn.png'\r\nimport SkyriderSword from './Weapon_Skyrider_Sword.png'\r\nimport TravelersHandySword from './Weapon_Traveler\\'s_Handy_Sword.png'\r\nimport BlackcliffLongsword from './Weapon_Blackcliff_Longsword.png'\r\nimport FavoniusSword from './Weapon_Favonius_Sword.png'\r\nimport IronSting from './Weapon_Iron_Sting.png'\r\nimport LionsRoar from './Weapon_Lion\\'s_Roar.png'\r\nimport PrototypeRancour from './Weapon_Prototype_Rancour.png'\r\nimport RoyalLongsword from './Weapon_Royal_Longsword.png'\r\nimport SacrificialSword from './Weapon_Sacrificial_Sword.png'\r\nimport TheAlleyFlash from './Weapon_The_Alley_Flash.png'\r\nimport TheBlackSword from './Weapon_The_Black_Sword.png'\r\nimport TheFlute from './Weapon_The_Flute.png'\r\nimport SwordOfDescension from './Weapon_Sword_of_Descension.png'\r\nimport FesteringDesire from './festering_fang.png'\r\nimport AquilaFavonia from './Weapon_Aquila_Favonia.png'\r\nimport SkywardBlade from './Weapon_Skyward_Blade.png'\r\nimport SummitShaper from './summit_shaper.png'\r\nconst sword = {\r\n  DullBlade,\r\n  SilverSword,\r\n  CoolSteel,\r\n  DarkIronSword,\r\n  FilletBlade,\r\n  HarbingerOfDawn,\r\n  SkyriderSword,\r\n  TravelersHandySword,\r\n  BlackcliffLongsword,\r\n  FavoniusSword,\r\n  IronSting,\r\n  LionsRoar,\r\n  PrototypeRancour,\r\n  RoyalLongsword,\r\n  SacrificialSword,\r\n  TheAlleyFlash,\r\n  TheBlackSword,\r\n  TheFlute,\r\n  SwordOfDescension,\r\n  FesteringDesire,\r\n  AquilaFavonia,\r\n  SkywardBlade,\r\n  SummitShaper,\r\n}\r\nexport default sword","export default __webpack_public_path__ + \"static/media/Weapon_Dull_Blade.f5de06e8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Silver_Sword.e2462179.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Cool_Steel.0c6a9897.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dark_Iron_Sword.8dce5b63.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Fillet_Blade.c8e8ab5f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Harbinger_of_Dawn.26da0d78.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Sword.80e60c22.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Traveler's_Handy_Sword.168a7842.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Longsword.522f4d19.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Sword.cb5df26b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Sting.9f4b4b01.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lion's_Roar.b0e78fa9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Rancour.64965f56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Longsword.5a57f015.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Sword.048703ab.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Alley_Flash.7528f5ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Black_Sword.3987a991.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Flute.82af0cbf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sword_of_Descension.eb67a1df.png\";","export default __webpack_public_path__ + \"static/media/festering_fang.38aa5200.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Aquila_Favonia.7c014114.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Blade.af22a740.png\";","export default __webpack_public_path__ + \"static/media/summit_shaper.5245335d.png\";","import WasterGreatsword from './Weapon_Waster_Greatsword.png'\r\nimport OldMercsPal from './Weapon_Old_Merc\\'s_Pal.png'\r\nimport BloodtaintedGreatsword from './Weapon_Bloodtainted_Greatsword.png'\r\nimport DebateClub from './Weapon_Debate_Club.png'\r\nimport FerrousShadow from './Weapon_Ferrous_Shadow.png'\r\nimport Quartz from './Weapon_Quartz.png'\r\nimport SkyriderGreatsword from './Weapon_Skyrider_Greatsword.png'\r\nimport WhiteIronGreatsword from './Weapon_White_Iron_Greatsword.png'\r\nimport BlackcliffSlasher from './Weapon_Blackcliff_Slasher.png'\r\nimport FavoniusGreatsword from './Weapon_Favonius_Greatsword.png'\r\nimport LithicBlade from './Weapon_Lithic_Blade.png'\r\nimport PrototypeAminus from './Weapon_Prototype_Aminus.png'\r\nimport Rainslasher from './Weapon_Rainslasher.png'\r\nimport RoyalGreatsword from './Weapon_Royal_Greatsword.png'\r\nimport SerpentSpine from './Weapon_Serpent_Spine.png'\r\nimport TheBell from './Weapon_The_Bell.png'\r\nimport Whiteblind from './Weapon_Whiteblind.png'\r\nimport SacrificialGreatsword from './Weapon_Sacrificial_Greatsword.png'\r\nimport SnowTombedStarsilver from './snow_tombed_starsilver.png'\r\nimport SkywardPride from './Weapon_Skyward_Pride.png'\r\nimport WolfsGravestone from './Weapon_Wolf\\'s_Gravestone.png'\r\nimport TheUnforged from './Weapon_The_Unforged.png'\r\nconst claymore = {\r\n  WasterGreatsword,\r\n  OldMercsPal,\r\n  BloodtaintedGreatsword,\r\n  DebateClub,\r\n  FerrousShadow,\r\n  Quartz,\r\n  SkyriderGreatsword,\r\n  WhiteIronGreatsword,\r\n  BlackcliffSlasher,\r\n  FavoniusGreatsword,\r\n  LithicBlade,\r\n  PrototypeAminus,\r\n  Rainslasher,\r\n  RoyalGreatsword,\r\n  SerpentSpine,\r\n  TheBell,\r\n  Whiteblind,\r\n  SacrificialGreatsword,\r\n  SnowTombedStarsilver,\r\n  SkywardPride,\r\n  WolfsGravestone,\r\n  TheUnforged,\r\n}\r\nexport default claymore","export default __webpack_public_path__ + \"static/media/Weapon_Waster_Greatsword.a411f34b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Old_Merc's_Pal.67aa1930.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Bloodtainted_Greatsword.eb68a62c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Debate_Club.be908652.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ferrous_Shadow.ef586057.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Quartz.d41c58b9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Greatsword.46e935cb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Iron_Greatsword.eda6295d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Slasher.4693af54.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Greatsword.bfd288be.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Blade.ab4d4f4f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Aminus.d2bf526a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rainslasher.664c61ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Greatsword.fbc5184a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Serpent_Spine.bb2831b5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Bell.3670f330.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Whiteblind.9c37b7dd.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Greatsword.1b0f0225.png\";","export default __webpack_public_path__ + \"static/media/snow_tombed_starsilver.23f56359.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Pride.66a1b3f7.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wolf's_Gravestone.032b607c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Unforged.f7762a2f.png\";","import BeginnersProtector from './Weapon_Beginner\\'s_Protector.png'\r\nimport IronPoint from './Weapon_Iron_Point.png'\r\nimport BlackTassel from './Weapon_Black_Tassel.png'\r\nimport Halberd from './Weapon_Halberd.png'\r\nimport WhiteTassel from './Weapon_White_Tassel.png'\r\nimport BlackcliffPole from './Weapon_Blackcliff_Pole.png'\r\nimport CrescentPike from './Weapon_Crescent_Pike.png'\r\nimport Deathmatch from './Weapon_Deathmatch.png'\r\nimport DragonsBane from './Weapon_Dragon\\'s_Bane.png'\r\nimport LithicSpear from './Weapon_Lithic_Spear.png'\r\nimport PrototypeGrudge from './Weapon_Prototype_Grudge.png'\r\nimport FavoniusLance from './Weapon_Favonius_Lance.png'\r\nimport RoyalSpear from './Weapon_Royal_Spear.png'\r\nimport DragonspineSpear from './dragonspine_spear.png'\r\nimport VortexVanquisher from './Weapon_Vortex_Vanquisher.png'\r\nimport PrimordialJadeWingedSpear from './Weapon_Primordial_Jade_Winged-Spear.png'\r\nimport SkywardSpine from './Weapon_Skyward_Spine.png'\r\nconst polearms = {\r\n  BeginnersProtector,\r\n  IronPoint,\r\n  BlackTassel,\r\n  Halberd,\r\n  WhiteTassel,\r\n  BlackcliffPole,\r\n  CrescentPike,\r\n  Deathmatch,\r\n  DragonsBane,\r\n  LithicSpear,\r\n  PrototypeGrudge,\r\n  FavoniusLance,\r\n  RoyalSpear,\r\n  DragonspineSpear,\r\n  VortexVanquisher,\r\n  PrimordialJadeWingedSpear,\r\n  SkywardSpine,\r\n}\r\nexport default polearms","export default __webpack_public_path__ + \"static/media/Weapon_Beginner's_Protector.19165915.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Point.8263916c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Black_Tassel.c3103e46.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Halberd.0044e214.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Tassel.a3cc9099.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Pole.1e15a879.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Crescent_Pike.9e473ddb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Deathmatch.9b0e6d8e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dragon's_Bane.7437cf28.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Spear.cfb11b6c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Grudge.64b3a263.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Lance.693335d4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Spear.99058465.png\";","export default __webpack_public_path__ + \"static/media/dragonspine_spear.bb785669.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Vortex_Vanquisher.efad8956.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Primordial_Jade_Winged-Spear.ea10bc42.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Spine.e81931a5.png\";","import HuntersBow from './Weapon_Hunter\\'s_Bow.png'\r\nimport SeasonedHuntersBow from './Weapon_Seasoned_Hunter\\'s_Bow.png'\r\nimport EbonyBow from './Weapon_Ebony_Bow.png'\r\nimport Messenger from './Weapon_Messenger.png'\r\nimport RavenBow from './Weapon_Raven_Bow.png'\r\nimport RecurveBow from './Weapon_Recurve_Bow.png'\r\nimport SharpshootersOath from './Weapon_Sharpshooter\\'s_Oath.png'\r\nimport Slingshot from './Weapon_Slingshot.png'\r\nimport TheStringless from './Weapon_The_Stringless.png'\r\nimport AlleyHunter from './Weapon_Alley_Hunter.png'\r\nimport BlackcliffWarbow from './Weapon_Blackcliff_Warbow.png'\r\nimport CompoundBow from './Weapon_Compound_Bow.png'\r\nimport FavoniusWarbow from './Weapon_Favonius_Warbow.png'\r\nimport PrototypeCrescent from './Weapon_Prototype_Crescent.png'\r\nimport RoyalBow from './Weapon_Royal_Bow.png'\r\nimport Rust from './Weapon_Rust.png'\r\nimport SacrificialBow from './Weapon_Sacrificial_Bow.png'\r\nimport TheViridescentHunt from './Weapon_The_Viridescent_Hunt.png'\r\nimport SkywardHarp from './Weapon_Skyward_Harp.png'\r\nimport AmosBow from './Weapon_Amos\\'_Bow.png'\r\nimport DreamsOfDragonfell from './dreams_of_dragonfell.png'\r\nconst bows = {\r\n  HuntersBow,\r\n  SeasonedHuntersBow,\r\n  EbonyBow,\r\n  Messenger,\r\n  RavenBow,\r\n  RecurveBow,\r\n  SharpshootersOath,\r\n  Slingshot,\r\n  TheStringless,\r\n  AlleyHunter,\r\n  BlackcliffWarbow,\r\n  CompoundBow,\r\n  FavoniusWarbow,\r\n  PrototypeCrescent,\r\n  RoyalBow,\r\n  Rust,\r\n  SacrificialBow,\r\n  TheViridescentHunt,\r\n  SkywardHarp,\r\n  AmosBow,\r\n  DreamsOfDragonfell,\r\n}\r\nexport default bows","export default __webpack_public_path__ + \"static/media/Weapon_Hunter's_Bow.2e941c96.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Seasoned_Hunter's_Bow.bc6a42aa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ebony_Bow.f89cc3cc.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Messenger.939170eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Raven_Bow.b88fe5c0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Recurve_Bow.bafcde86.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sharpshooter's_Oath.1d149cf5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Slingshot.d2eeb3eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Stringless.b718aa93.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Alley_Hunter.8cc323c2.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Warbow.098f24da.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Compound_Bow.a8457f4e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Warbow.19e98358.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Crescent.50a174b0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Bow.06fbac8b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rust.65b7af56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Bow.804b7a38.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Viridescent_Hunt.904062bf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Harp.6961093e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amos'_Bow.e97cd305.png\";","export default __webpack_public_path__ + \"static/media/dreams_of_dragonfell.8aaebb39.png\";","import ApprenticesNotes from './Weapon_Apprentice\\'s_Notes.png'\r\nimport PocketGrimoire from './Weapon_Pocket_Grimoire.png'\r\nimport AmberCatalyst from './Weapon_Amber_Catalyst.png'\r\nimport EmeraldOrb from './Weapon_Emerald_Orb.png'\r\nimport MagicGuide from './Weapon_Magic_Guide.png'\r\nimport OtherworldlyStory from './Weapon_Otherworldly_Story.png'\r\nimport ThrillingTalesOfDragonSlayers from './Weapon_Thrilling_Tales_of_Dragon_Slayers.png'\r\nimport TwinNephrite from './Weapon_Twin_Nephrite.png'\r\nimport BlackcliffAgate from './Weapon_Blackcliff_Amulet.png'\r\nimport FavoniusCodex from './Weapon_Favonius_Codex.png'\r\nimport MappaMare from './Weapon_Mappa_Mare.png'\r\nimport PrototypeMalice from './Weapon_Prototype_Malice.png'\r\nimport RoyalGrimoire from './Weapon_Royal_Grimoire.png'\r\nimport SacrificialFragments from './Weapon_Sacrificial_Fragments.png'\r\nimport SolarPearl from './Weapon_Solar_Pearl.png'\r\nimport TheWidsith from './Weapon_The_Widsith.png'\r\nimport WineAndSong from './Weapon_Wine_and_Song.png'\r\nimport EyeOfPerception from './Weapon_Eye_of_Perception.png'\r\nimport Frostbearer from './Weapon_Frostbearer.png'\r\nimport LostPrayerToTheSacredWinds from './Weapon_Lost_Prayer_to_the_Sacred_Winds.png'\r\nimport SkywardAtlas from './Weapon_Skyward_Atlas.png'\r\nimport MemoryOfDust from './Weapon_Memory_of_Dust.png'\r\nconst catalysts = {\r\n  ApprenticesNotes,\r\n  PocketGrimoire,\r\n  AmberCatalyst,\r\n  EmeraldOrb,\r\n  MagicGuide,\r\n  OtherworldlyStory,\r\n  ThrillingTalesOfDragonSlayers,\r\n  TwinNephrite,\r\n  BlackcliffAgate,\r\n  FavoniusCodex,\r\n  MappaMare,\r\n  PrototypeMalice,\r\n  RoyalGrimoire,\r\n  SacrificialFragments,\r\n  SolarPearl,\r\n  TheWidsith,\r\n  WineAndSong,\r\n  EyeOfPerception,\r\n  Frostbearer,\r\n  LostPrayerToTheSacredWinds,\r\n  SkywardAtlas,\r\n  MemoryOfDust\r\n}\r\nexport default catalysts","export default __webpack_public_path__ + \"static/media/Weapon_Apprentice's_Notes.0b7fb81e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Pocket_Grimoire.536179c5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amber_Catalyst.01ede681.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Emerald_Orb.4008f986.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Magic_Guide.64c777ec.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Otherworldly_Story.48b54293.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Thrilling_Tales_of_Dragon_Slayers.692d45b8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Twin_Nephrite.b0c2488b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Amulet.b97d01eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Codex.6e201cfa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Mappa_Mare.bc35dc35.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Malice.4ab08cb6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Grimoire.2f67eac4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Fragments.4dd54e2d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Solar_Pearl.d629ae58.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Widsith.a6fe1227.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wine_and_Song.0aa416e6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Eye_of_Perception.907a0288.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Frostbearer.bde00061.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lost_Prayer_to_the_Sacred_Winds.45f8ca2a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Atlas.8b4f86fa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Memory_of_Dust.4e45ccbb.png\";","import weapons from './Weapons/Weapons'\r\n\r\nimport anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  weapons,\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","import swords from './Swords/Swords'\r\nimport claymores from './Claymores/Claymores'\r\nimport polearms from './Polearms//Polearms'\r\nimport bows from './Bows/Bows'\r\nimport catalysts from './Catalysts/Catalysts'\r\nconst weapons = {\r\n  ...swords,\r\n  ...claymores,\r\n  ...polearms,\r\n  ...bows,\r\n  ...catalysts,\r\n}\r\nexport default weapons","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { AttachLazyFormulas, Formulas, OverrideFormulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nconst formulaKeyDependency = {}\r\nconst getDependency = (key) => {\r\n  let testObj = {}\r\n  let dependency = []\r\n  Object.keys(StatData).filter(k => k !== key).forEach(k => {\r\n    Object.defineProperty(testObj, k, {\r\n      get: () => {\r\n        dependency.push(k)\r\n        Object.defineProperty(testObj, k, { get: () => 0 })\r\n        return 0\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  AttachLazyFormulas(testObj)\r\n  //use the getter to generate the dependency\r\n  if (typeof testObj[key] === \"number\")\r\n    formulaKeyDependency[key] = dependency\r\n}\r\nObject.keys(Formulas).forEach(key => getDependency(key))\r\n\r\nfunction DependencyStatKeys(key, formulaOverrides = []) {\r\n  let dependencies = GetDependencyStats(key, formulaOverrides) || []\r\n  //add any formula override dependencies\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key, dependency = [] } = OverrideFormulas[formulaOverride.key] || {}\r\n    if (!dependencies.includes(key)) return\r\n    dependencies.push(...dependency)\r\n  })\r\n  dependencies = [...new Set(dependencies)]\r\n  let formulaKeys = Object.keys(Formulas).filter(k => k === key || dependencies.includes(k))\r\n  let statkeys = Object.keys(StatData).filter(k => k === key || dependencies.includes(k))\r\n  return { formulaKeys, statkeys }\r\n}\r\nfunction GetDependencyStats(key, formulaOverrides = []) {\r\n  let dependencies = [key]\r\n  let keyDependencies = null\r\n  for (const formulaOverride of formulaOverrides)\r\n    if (OverrideFormulas[formulaOverride?.key]?.key === key)\r\n      keyDependencies = OverrideFormulas[formulaOverride?.key]?.dependency\r\n  keyDependencies = keyDependencies || formulaKeyDependency[key]\r\n  keyDependencies?.forEach(k => {\r\n    let subdependencies = GetDependencyStats(k, formulaOverrides)\r\n    dependencies.push(...subdependencies)\r\n  })\r\n  return dependencies\r\n}\r\nexport {\r\n  DependencyStatKeys,\r\n  GetDependencyStats,\r\n}\r\n","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport Stat from '../Stat';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nexport default function CharacterCard(props) {\r\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getArtifactDataImport(),\r\n    ]).then(() => forceUpdate())\r\n  }, [])\r\n  let { characterId, onEdit, onDelete } = props\r\n  let character = CharacterDatabase.getCharacter(characterId)\r\n  if (!character) return null;\r\n  let build = Character.calculateBuild(character)\r\n  let { setToSlots } = build\r\n\r\n  let { characterKey, name, weapon, constellation } = character\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponName = Weapon.getWeaponName(weapon.key)\r\n  let weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\r\n  let weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\r\n  let weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const statkeys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\",]\r\n  return (<Card className={props.cardClassName} bg={props.bg ? props.bg : \"darkcontent\"} text=\"lightfont\">\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {props.header ? props.header : <h6><b>{name}</b></h6>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {props.onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {props.onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={onEdit} style={{ cursor: onEdit ? \"pointer\" : \"default\" }}>\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={Character.getThumb(characterKey)} className={`w-100 h-auto grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h4>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h4>\r\n          <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n          <span>{`Lvl. ${Character.getStatValueWithOverride(character, \"char_level\")} C${constellation}`}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {Object.entries(Artifact.getArtifactSetEffects(setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = Artifact.getArtifactSetName(key)\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = build.finalStats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {props.footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        selectedCharacterId: characterId\r\n      }}>\r\n        Generate Builds\r\n        </Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/BuildWorker.19be0b66.worker.js\");\n}\n","import Artifact from \"../Artifact/Artifact\";\r\nimport { ArtifactData, ArtifactSlotsData } from \"../Data/ArtifactData\";\r\n\r\nexport default class Build {\r\n\r\n  //works with id indexed object for database.\r\n  static splitArtifactsBySlot(databaseObj) {\r\n    let ret = {}\r\n    for (let slot in ArtifactSlotsData)\r\n      ret[slot] = Object.values(databaseObj).filter(art => art.slotKey === slot)\r\n    return ret;\r\n\r\n  }\r\n  /**\r\n   * Calculate all the possible set configuration based on the filters.\r\n   * [{Key:X,num:2},{key:Y,num:2},{key:\"\",num:0}]\r\n   * generates XXYYO,XYXYO,XXOYY..... combinations, where O means other. \r\n   * @param {Object} setFilters From BuildDisplay\r\n   */\r\n  static generateAllPossibleArtifactSetPerm(setFilters) {\r\n    let sets = setFilters.filter(filter => filter.key).map(filter => filter.key);\r\n    let useOther = setFilters.reduce((accu, filter) => filter.key ? accu + filter.num : accu, 0) < 5;\r\n    if (useOther) sets.push(\"Other\");\r\n\r\n    let perm = [];\r\n    let slotKeys = Artifact.getArtifactSlotKeys();\r\n    //recursion function to loop through everything.\r\n    let slotPerm = (index, accu) => {\r\n      if (index >= slotKeys.length) {\r\n        let numArtsPerSet = {}\r\n        Object.values(accu).forEach(setKey => {\r\n          if (numArtsPerSet[setKey]) numArtsPerSet[setKey] += 1\r\n          else numArtsPerSet[setKey] = 1\r\n        })\r\n        let valid = true\r\n        for (const setFilter of setFilters) {\r\n          if (setFilter.key && (!numArtsPerSet[setFilter.key] || numArtsPerSet[setFilter.key] < setFilter.num)) {\r\n            valid = false;\r\n            break;\r\n          }\r\n        }\r\n        if (valid) perm.push(accu)\r\n        return;\r\n      }\r\n      let slotKey = slotKeys[index];\r\n      sets.forEach(setKey => {\r\n        //see if this set is valid at this piece slot. some artifacts dont have artifacts at specific slots.\r\n        if (setKey === \"Other\" || (Object.keys(ArtifactData[setKey]?.pieces || {}).includes(slotKey))) {\r\n          accu[slotKey] = setKey;\r\n          slotPerm(index + 1, { ...accu })\r\n        }\r\n      });\r\n    }\r\n    slotPerm(0, {});\r\n    return perm\r\n  }\r\n  static calculateTotalBuildNumber(splitArtifacts, setPerms, setFilters) {\r\n    let setsInFilter = setFilters.filter(filter => filter.key).map(filter => filter.key)\r\n    let splitNumArtsPerSet = {}\r\n    //count the number of arts in setfilter for each slot\r\n    Object.entries(splitArtifacts).forEach(([key, artArr]) => {\r\n      let numArtsPerSet = {}\r\n      artArr.forEach(art => {\r\n        if (setsInFilter.includes(art.setKey))\r\n          numArtsPerSet[art.setKey] = (numArtsPerSet[art.setKey] || 0) + 1\r\n        else\r\n          numArtsPerSet[\"Other\"] = (numArtsPerSet[\"Other\"] || 0) + 1\r\n      })\r\n      splitNumArtsPerSet[key] = numArtsPerSet\r\n    })\r\n    //calculate!\r\n    return setPerms.reduce((accu, setPerm) =>\r\n      accu + Object.entries(setPerm).reduce((permaccu, [key, setKey]) =>\r\n        (splitNumArtsPerSet[key] && splitNumArtsPerSet[key][setKey]) ? permaccu * splitNumArtsPerSet[key][setKey] : 0\r\n        , 1)\r\n      , 0)\r\n  }\r\n}","import { faSortAmountDownAlt, faSortAmountUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy } from 'react';\r\nimport { Alert, Badge, Button, ButtonGroup, Card, Col, Container, Dropdown, DropdownButton, ListGroup, Modal, Row } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\n// eslint-disable-next-line\r\nimport Worker from \"worker-loader!./BuildWorker.js\";\r\nimport Artifact from '../Artifact/Artifact';\r\nimport ArtifactDatabase from '../Artifact/ArtifactDatabase';\r\nimport Character from '../Character/Character';\r\nimport CharacterCard from '../Character/CharacterCard';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\n\r\nimport ConditionalSelector from '../Components/ConditionalSelector';\r\nimport { ArtifactSlotsData } from '../Data/ArtifactData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport Stat from '../Stat';\r\nimport { DependencyStatKeys } from '../StatDependency';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { deepClone, loadFromLocalStorage, saveToLocalStorage } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Build from './Build';\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCardPromise = import('../Character/CharacterDisplayCard');\r\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\r\n\r\nexport default class BuildDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = BuildDisplay.getInitialState();\r\n    if (props.location.selectedCharacterId) {\r\n      this.state = BuildDisplay.getInitialState();\r\n      props.location.selectedCharacterId && (this.state.selectedCharacterId = props.location.selectedCharacterId)\r\n    } else {\r\n      let savedState = loadFromLocalStorage(\"BuildsDisplay.state\")\r\n      if (savedState) {\r\n        let character = CharacterDatabase.getCharacter(savedState.selectedCharacterId)\r\n        if (savedState && character) this.state = savedState\r\n      }\r\n    }\r\n    ReactGA.pageview('/build')\r\n  }\r\n  static initialState = {\r\n    builds: [],\r\n    generatingBuilds: false,\r\n    selectedCharacterId: \"\",\r\n    setFilters: [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }],\r\n    artifactConditionals: [],//{ setKey: \"\", setNumKey: \"\", conditionalNum: 0 }\r\n    mainStat: [\"\", \"\", \"\"],\r\n    buildFilterKey: \"atk_final\",\r\n    asending: false,\r\n    modalBuild: null,\r\n    editCharacter: false,\r\n    maxBuildsToShow: 100,\r\n    maxBuildsToGenerate: 500000\r\n  }\r\n  static maxBuildsToShowList = [100, 50, 25, 5]\r\n  static maxBuildsToGenerateList = [500000, 100000, 50000, 10000, 5000, 1000]\r\n  static getInitialState = () => deepClone(BuildDisplay.initialState)\r\n  static artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"]\r\n  forceUpdateBuildDisplay = () => this.forceUpdate()\r\n\r\n  statsDisplayKeys = (characterKey) => {\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", \"ele_dmg_bonus\"]\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n\r\n    if (!isAutoElemental)\r\n      keys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      keys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      keys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(`${eleKey}_char_atk_avg_dmg`)\r\n\r\n    //show skill/burst at the end\r\n    keys.push(\"skill_avg_dmg\", \"burst_avg_dmg\")\r\n\r\n    return keys.map(key => ([\"ele_dmg_bonus\", \"skill_avg_dmg\", \"burst_avg_dmg\"].includes(key)) ? `${eleKey}_${key}` : key)\r\n  }\r\n\r\n  splitArtifacts = () => {\r\n    if (!this.state.selectedCharacterId) return {};\r\n    let artifactDatabase = ArtifactDatabase.getArtifactDatabase();\r\n    //do not use artifacts that are locked.\r\n    Object.entries(artifactDatabase).forEach(([key, val]) => {\r\n      if (val.lock) delete artifactDatabase[key]\r\n      if (this.state.selectedCharacterId && val.location && val.location !== this.state.selectedCharacterId)\r\n        delete artifactDatabase[key]\r\n    })\r\n    if (this.state.setFilters.every(filter => filter.key)) {\r\n      let filterKeys = this.state.setFilters.map(filter => filter.key)\r\n      //filter database to only filtered artifacts, if all 3 sets are specified\r\n      Object.entries(artifactDatabase).forEach(([key, val]) => {\r\n        if (filterKeys.includes(val.setKey))\r\n          delete artifactDatabase[key]\r\n      })\r\n    }\r\n    let split = Build.splitArtifactsBySlot(artifactDatabase);\r\n    //filter the split slots on the mainstats selected.\r\n    BuildDisplay.artifactsSlotsToSelectMainStats.forEach((slotKey, index) =>\r\n      this.state.mainStat[index] && (split[slotKey] = split[slotKey].filter((art) => art.mainStatKey === this.state.mainStat[index])))\r\n    return split\r\n  }\r\n  changeMainStat = (index, mainStatKey) => {\r\n    this.setState(state => {\r\n      let mainStat = state.mainStat;\r\n      mainStat[index] = mainStatKey;\r\n      return { mainStat }\r\n    }, this.autoGenerateBuilds)\r\n  }\r\n  changeSetFilterKey = (index, newkey, setsNumArr) => this.setState(state => {\r\n    let oldKey = state.setFilters[index].key\r\n    if (oldKey === newkey) return\r\n    //remove conditionals with that key\r\n    let artifactConditionals = state.artifactConditionals?.filter?.(artifactCond => artifactCond.srcKey !== oldKey) || []\r\n    let setFilters = state.setFilters;\r\n    let num = 0\r\n    //automatically select the 1st element from setsNumArr\r\n    if (setsNumArr && setsNumArr[0])\r\n      num = parseInt(setsNumArr[0])\r\n    setFilters[index] = { key: newkey, num }\r\n    return { setFilters, artifactConditionals }\r\n  }, this.autoGenerateBuilds)\r\n\r\n  dropdownitemsForStar = (star, index) =>\r\n    Artifact.getArtifactSetsByMaxStarEntries(star).map(([setKey, setobj]) => {\r\n      if (this.state.setFilters.some(filter => filter.key === setKey)) return false;\r\n      let setsNumArr = Object.keys(Artifact.getArtifactSets(setKey))\r\n      let artsAccountedOther = this.state.setFilters.reduce((accu, cur, ind) => (cur.key && ind !== index) ? accu + cur.num : accu, 0)\r\n      if (setsNumArr.every(num => parseInt(num) + artsAccountedOther > 5)) return false;\r\n      return (<Dropdown.Item key={setKey}\r\n        onClick={() => this.changeSetFilterKey(index, setKey, setsNumArr)}\r\n      >\r\n        {setobj.name}\r\n      </Dropdown.Item>)\r\n    })\r\n  autoGenerateBuilds = () => typeof this.totBuildNumber === \"number\" && this.totBuildNumber <= this.state.maxBuildsToShow && this.generateBuilds()\r\n\r\n  generateBuilds = () => {\r\n    let { split, artifactSetPerms, totBuildNumber } = this\r\n    if (!totBuildNumber) return this.setState({ builds: [] })\r\n    this.setState({ generatingBuilds: true })\r\n    let { setFilters, asending, buildFilterKey, maxBuildsToShow, artifactConditionals } = this.state\r\n    let character = CharacterDatabase.getCharacter(this.state.selectedCharacterId)\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n\r\n    let artifactSetEffects = Artifact.getAllArtifactSetEffectsObj(artifactConditionals)\r\n    let splitArtifacts = deepClone(split)\r\n    //add mainStatVal to each artifact, TODO add main stat assuming fully leveled up\r\n    Object.values(splitArtifacts).forEach(artArr => {\r\n      artArr.forEach(art => {\r\n        art.mainStatVal = Artifact.getMainStatValue(art.mainStatKey, art.numStars, art.level);\r\n      })\r\n    })\r\n    //generate the key dependencies for the formula\r\n    let depdendencyStatKeys = DependencyStatKeys(buildFilterKey, initialStats.formulaOverrides)\r\n\r\n    //create an obj with app the artifact set effects to pass to buildworker.\r\n    let data = {\r\n      splitArtifacts, artifactSetPerms, initialStats, artifactSetEffects, depdendencyStatKeys,\r\n      setFilters, maxBuildsToShow, buildFilterKey, asending,\r\n    }\r\n    if (this.worker) this.worker.terminate()\r\n    this.worker = new Worker();\r\n    this.worker.onmessage = (e) => {\r\n      ReactGA.timing({\r\n        category: \"Build Generation\",\r\n        variable: \"timing\",\r\n        value: e.data.timing,\r\n        label: Build.calculateTotalBuildNumber(split, artifactSetPerms, this.state.setFilters)\r\n      })\r\n      let builds = e.data.builds.map(obj =>\r\n        Character.calculateBuildWithObjs(artifactConditionals, initialStats, obj.artifacts))\r\n      this.setState({ builds, generatingBuilds: false })\r\n      // worker.terminate()\r\n      this.worker.terminate()\r\n      delete this.worker\r\n    }\r\n\r\n    this.worker.postMessage(data)\r\n  }\r\n\r\n  BuildGeneratorEditorCard = (props) => {\r\n    let { setFilters, selectedCharacterId } = this.state\r\n    let { statsDisplayKeys } = props\r\n    let charlist = CharacterDatabase.getCharacterDatabase();\r\n    let selectedCharacter = CharacterDatabase.getCharacter(selectedCharacterId)\r\n    let characterName = selectedCharacter ? selectedCharacter.name : \"Character Name\"\r\n    let artsAccounted = setFilters.reduce((accu, cur) => cur.key ? accu + cur.num : accu, 0)\r\n    //these variables are used for build generator.\r\n    this.split = this.splitArtifacts();\r\n    this.artifactSetPerms = Build.generateAllPossibleArtifactSetPerm(setFilters)\r\n    this.totBuildNumber = Build.calculateTotalBuildNumber(this.split, this.artifactSetPerms, setFilters)\r\n    let { totBuildNumber } = this\r\n\r\n    let buildAlert = totBuildNumber === 0 ?\r\n      <Alert variant=\"warning\" className=\"mb-0\"><span>Current configuration will not generate any builds for <b>{characterName}</b>. Please change your Artifact configurations, or add/unlock more Artifacts.</span></Alert>\r\n      : (totBuildNumber > this.state.maxBuildsToGenerate ?\r\n        <Alert variant=\"danger\" className=\"mb-0\"><span>Current configuration will generate <b>{totBuildNumber}</b> builds for <b>{characterName}</b>. Please restrict artifact configuration to reduce builds to less than {this.state.maxBuildsToGenerate}, or your browser might crash.</span></Alert> :\r\n        <Alert variant=\"success\" className=\"mb-0\"><span>Current configuration {totBuildNumber <= this.state.maxBuildsToShow ? \"generated\" : \"will generate\"} <b>{totBuildNumber}</b> builds for <b>{characterName}</b>.</span></Alert>)\r\n    let characterDropDown = <DropdownButton title={selectedCharacterId ? characterName : \"Select Character\"}>\r\n      <Dropdown.Item onClick={() => this.setState({ selectedCharacterId: \"\", builds: [], buildFilterKey: \"atk_final\" })}>No Character</Dropdown.Item>\r\n      {Object.values(charlist).map((char, i) =>\r\n        <Dropdown.Item key={char.name + i}\r\n          onClick={() => this.setState({ selectedCharacterId: char.id, builds: [], buildFilterKey: \"atk_final\" })}\r\n        >\r\n          {char.name}\r\n        </Dropdown.Item>)}\r\n    </DropdownButton>\r\n    return <Card bg=\"darkcontent\" text=\"lightfont\">\r\n      <Card.Header>Build Generator</Card.Header>\r\n      <Card.Body>\r\n        <Row >\r\n          <Col xs={12} lg={6} className=\"mb-2\">\r\n            {/* character selection */}\r\n            {selectedCharacterId ?\r\n              <CharacterCard header={characterDropDown} characterId={selectedCharacterId} bg={\"lightcontent\"} footer={false} cardClassName=\"mb-2\" onEdit={() => this.setState({ editCharacter: true })} /> :\r\n              <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                <Card.Header>\r\n                  {characterDropDown}\r\n                </Card.Header>\r\n              </Card>}\r\n            {/* main stat selector */}\r\n            <Card bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Main Stat (Optional)</Card.Header>\r\n              <Card.Body>\r\n                {BuildDisplay.artifactsSlotsToSelectMainStats.map((slotKey, index) =>\r\n                (<div className=\"text-inline mb-1 d-flex justify-content-between\" key={slotKey}>\r\n                  <h6 className=\"d-inline mr-2\">\r\n                    {Artifact.getArtifactSlotNameWithIcon(slotKey)}\r\n                  </h6>\r\n                  <DropdownButton\r\n                    title={this.state.mainStat[index] ? Stat.getStatNameWithPercent(this.state.mainStat[index]) : \"Select a mainstat\"}\r\n                    className=\"d-inline\">\r\n                    <Dropdown.Item onClick={() => this.changeMainStat(index, \"\")} >No MainStat</Dropdown.Item>\r\n                    {ArtifactSlotsData[slotKey].stats.map(mainStatKey =>\r\n                      <Dropdown.Item onClick={() => this.changeMainStat(index, mainStatKey)} key={mainStatKey}>\r\n                        {Stat.getStatNameWithPercent(mainStatKey)}\r\n                      </Dropdown.Item>\r\n                    )}\r\n                  </DropdownButton>\r\n                </div>))}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col xs={12} lg={6} className=\"mb-2\"><Row>\r\n            {/* Artifact set picker */}\r\n            {setFilters.map((setFilter, index) => {\r\n              let { key: setKey, num } = setFilter\r\n              let { artifactConditionals } = this.state\r\n              return (<Col className=\"mb-2\" key={index} xs={12}>\r\n                <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n                  <Card.Header>\r\n                    <ButtonGroup>\r\n                      {/* Artifact set */}\r\n                      <DropdownButton as={ButtonGroup} title={Artifact.getArtifactSetName(setFilter.key, \"Set (Optional)\")} >\r\n                        <Dropdown.Item onClick={() => this.changeSetFilterKey(index, \"\")}>Unselect Artifact</Dropdown.Item>\r\n                        <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊🟊</Dropdown.ItemText>\r\n                        {this.dropdownitemsForStar(5, index)}\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊</Dropdown.ItemText>\r\n                        {this.dropdownitemsForStar(4, index)}\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.ItemText>Max Rarity 🟊🟊🟊</Dropdown.ItemText>\r\n                        {this.dropdownitemsForStar(3, index)}\r\n                      </DropdownButton>\r\n                      {/* set number */}\r\n                      <DropdownButton as={ButtonGroup} title={`${setFilter.num}-set`}\r\n                        disabled={!setFilter.key || artsAccounted >= 5}\r\n                      >\r\n                        {setFilter.key && Artifact.getArtifactSetEffectsObj(setFilter.key) && Object.keys(Artifact.getArtifactSetEffectsObj(setFilter.key)).map(num => {\r\n                          let artsAccountedOther = setFilters.reduce((accu, cur) => (cur.key && cur.key !== setFilter.key) ? accu + cur.num : accu, 0)\r\n                          return (parseInt(num) + artsAccountedOther <= 5) &&\r\n                            (<Dropdown.Item key={num}\r\n                              onClick={() => this.setState((state) => {\r\n                                let setFilters = state.setFilters;\r\n                                setFilters[index].num = parseInt(num)\r\n                                return { setFilters }\r\n                              }, this.autoGenerateBuilds)}\r\n                            >\r\n                              {`${num}-set`}\r\n                            </Dropdown.Item>)\r\n                        })}\r\n                      </DropdownButton>\r\n                    </ButtonGroup>\r\n                  </Card.Header>\r\n                  {setKey ? <Card.Body><Row>\r\n                    {Object.keys(Artifact.getArtifactSets(setKey, {})).filter(setNkey => parseInt(setNkey) <= num).map(setNumKey => {\r\n                      let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                      let conditionalNum = 0;\r\n                      let conditional = Artifact.getArtifactSetEffectConditional(setKey, setNumKey)\r\n                      if (conditional) {\r\n                        conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                        let conditionalStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n                        if (conditionalStats) {\r\n                          if (!setStats) setStats = {}\r\n                          Object.entries(conditionalStats).forEach(([statKey, val]) =>\r\n                            setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                        }\r\n                      }\r\n                      let setStateArtifactConditional = (conditionalNum) => this.setState(state =>\r\n                        ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }), this.autoGenerateBuilds)\r\n                      let conditionalElement = <ConditionalSelector\r\n                        conditional={conditional}\r\n                        conditionalNum={conditionalNum}\r\n                        setConditional={setStateArtifactConditional}\r\n                        defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                      />\r\n                      return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                        <h6>{conditionalElement} {Artifact.getArtifactSetEffectText(setKey, setNumKey)}</h6>\r\n                        {setStats ? <Row>\r\n                          {Object.entries(setStats).map(([statKey, val]) =>\r\n                            <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                        </Row> : null}\r\n                      </Col>\r\n                    })}\r\n                  </Row></Card.Body> : null}\r\n                </Card>\r\n              </Col>)\r\n            })}\r\n          </Row></Col>\r\n        </Row>\r\n        <Row className=\"mb-2\">\r\n          <Col>{selectedCharacterId && buildAlert}</Col>\r\n        </Row>\r\n        <Row className=\"d-flex justify-content-between\">\r\n          <Col xs=\"auto\" >\r\n            <Button\r\n              className=\"h-100\"\r\n              disabled={!selectedCharacterId || totBuildNumber > this.state.maxBuildsToGenerate || this.state.generatingBuilds}\r\n              variant={(selectedCharacterId && totBuildNumber <= this.state.maxBuildsToGenerate) ? \"success\" : \"danger\"}\r\n              onClick={this.generateBuilds}\r\n            ><span>Generate Builds</span></Button>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {/* Dropdown to select sorting value */}\r\n            <ButtonGroup>\r\n              <DropdownButton disabled={!selectedCharacterId} title={<span>Sort by <b>{Stat.getStatNameWithPercent(this.state.buildFilterKey)}</b></span>} as={ButtonGroup}>\r\n                {selectedCharacterId && statsDisplayKeys.map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => this.setState({ buildFilterKey: key }, this.autoGenerateBuilds)}>\r\n                    {Stat.getStatNameWithPercent(key)}\r\n                  </Dropdown.Item>\r\n                )}\r\n              </DropdownButton>\r\n              <Button onClick={() => this.setState(state => ({ asending: !state.asending }), this.autoGenerateBuilds)}>\r\n                <FontAwesomeIcon icon={this.state.asending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  }\r\n  ArtifactDisplayItem = (props) => {\r\n    let { build, statsDisplayKeys } = props\r\n    return (<div>\r\n      <ListGroup.Item\r\n        variant={props.index % 2 ? \"customdark\" : \"customdarker\"} className=\"text-white\" action\r\n        onClick={() => this.setState({ modalBuild: build })}\r\n      >\r\n        <Row>\r\n          <Col>{Object.entries(build.setToSlots).sort(([key1, slotarr1], [key2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\r\n            <Badge key={key} variant=\"primary\" className=\"mr-2\">\r\n              {slotarr.map(slotKey => Artifact.getArtifactSlotIcon(slotKey))} {Artifact.getArtifactSetName(key)}\r\n            </Badge>\r\n          )}</Col>\r\n        </Row>\r\n        <Row>\r\n          {statsDisplayKeys.map(key =>\r\n            <Col className=\"text-nowrap\" key={key} xs={12} sm={6} lg={4}>\r\n              <span>{Stat.getStatName(key)}: <span className=\"text-warning\">{build.finalStats[key]?.toFixed(Stat.fixedUnit(key))}{Stat.getStatUnit(key)}</span></span>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </ListGroup.Item>\r\n    </div>)\r\n  }\r\n  closeModal = () => this.setState({ modalBuild: null, editCharacter: false })\r\n  BuildModal = (props) => {\r\n    let { build, characterid } = props\r\n    let { editCharacter } = this.state\r\n    return <Modal show={Boolean(editCharacter || build)} onHide={this.closeModal} size=\"xl\" dialogAs={Container} className=\"pt-3 pb-3\">\r\n      <React.Suspense fallback={<span>Loading...</span>}>\r\n        <CharacterDisplayCard characterId={characterid} newBuild={build}\r\n          onClose={this.closeModal}\r\n          forceUpdate={this.forceUpdateBuildDisplay}\r\n          editable={editCharacter}\r\n          footer={<Button variant=\"danger\" onClick={this.closeModal}>Close</Button>} />\r\n      </React.Suspense>\r\n    </Modal>\r\n  }\r\n\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getArtifactDataImport()\r\n    ]).then(() => {\r\n      this.forceUpdate()\r\n      //try to generate a build at the beginning after mount.\r\n      this.autoGenerateBuilds()\r\n    })\r\n  }\r\n  componentDidUpdate() {\r\n    let state = deepClone(this.state)\r\n    state.builds = [];\r\n    delete state.generatingBuilds\r\n    delete state.modalBuild\r\n    delete state.editCharacter\r\n    saveToLocalStorage(\"BuildsDisplay.state\", state)\r\n  }\r\n  componentWillUnmount() {\r\n    this.worker?.terminate()\r\n    delete this.worker\r\n  }\r\n  render() {\r\n    let { selectedCharacterId, modalBuild, maxBuildsToShow, builds = [] } = this.state\r\n    let selectedCharacter = CharacterDatabase.getCharacter(selectedCharacterId)\r\n    let characterKey = selectedCharacter?.characterKey\r\n    let characterName = Character.getName(characterKey, \"Character Name\")\r\n    let statsDisplayKeys = []\r\n    if (characterKey)\r\n      statsDisplayKeys = this.statsDisplayKeys(characterKey)\r\n    return (<Container>\r\n      <this.BuildModal build={modalBuild} characterid={selectedCharacterId} />\r\n      <Row className=\"mt-2 mb-2\">\r\n        <Col>\r\n          {/* Build Generator Editor */}\r\n          <this.BuildGeneratorEditorCard statsDisplayKeys={statsDisplayKeys} />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <Card bg=\"darkcontent\" text=\"lightfont\">\r\n            <Card.Header>{selectedCharacterId ? `Showing ${builds.length} Builds generated for ${characterName}` : \"Select a character to generate builds.\"}</Card.Header>\r\n            {/* Build List */}\r\n            <ListGroup>\r\n              {builds.map((build, index) =>\r\n                (index < maxBuildsToShow) && <this.ArtifactDisplayItem build={build} character={selectedCharacter} index={index} key={Object.values(build.artifactIds).join(\"_\")} statsDisplayKeys={statsDisplayKeys} />\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>)\r\n  }\r\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { AttachLazyFormulas } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getCDataObj(charKey)?.talent?.[talentKey]?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getCDataObj(charKey)?.talent?.[talentKey]?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getCDataObj(charKey)?.talent?.[talentKey]?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"formulaOverrides\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey } = character\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey)\r\n    if (!elemental) elemental = autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false)\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = this.getElementalKey(characterKey)\r\n    if (eleKey) eleKey = eleKey + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n\r\n  //CHARCTER OBJ\r\n  static hasOverride = (character, statKey) => character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getArtifactSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals, charAndWeapon, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(charAndWeapon)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals && artifactConditionals.forEach(conditional => {\r\n      let { srcKey: setKey, srcKey2: setNumKey } = conditional\r\n      let condStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditional.conditionalNum)\r\n      if (condStats) Object.entries(condStats).forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n    AttachLazyFormulas(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"formulaOverrides\") {\r\n        initialStats.formulaOverrides = [...(initialStats.formulaOverrides || []), ...val]\r\n        return\r\n      }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { Formulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (StatData[key]?.html || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (StatData[key]?.html || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static printFormula = (statKey, stats, expand = true) =>\r\n    FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n    (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n\r\n  static printOverrideFormula = (stats, overrideKey, options, expand = true) =>\r\n    OverrideFormulasText?.[overrideKey] && typeof OverrideFormulasText?.[overrideKey].formulaText === \"function\" &&\r\n    (<span>{OverrideFormulasText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats[statKey]?.toFixed?.(fixedUnit) || stats[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n}\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulasText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.value}%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getArtifactDataImport = () => ArtifactDataImport\r\n  static getArtifactSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getArtifactSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData).filter(([key, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getArtifactPieceName = (setKey, slotKey, defVal = \"\") => ArtifactData?.[setKey]?.pieces?.[slotKey] || defVal;\r\n  static getArtifactPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n  static getArtifactSetEffectsObj = (setKey, defVal = null) => ArtifactData?.[setKey]?.sets || defVal\r\n  //SLOT\r\n  static getArtifactSlotKeys = () => Object.keys(ArtifactSlotsData)\r\n  static getArtifactSlotName = (slotKey, defVal = \"\") =>\r\n    ArtifactSlotsData[slotKey] ? ArtifactSlotsData[slotKey].name : defVal\r\n  static getArtifactSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n\r\n  static getArtifactSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getArtifactSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getArtifactSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n\r\n  //STARS\r\n  static getRarityArr = (setKey) => ArtifactData[setKey] ? ArtifactData[setKey].rarity : []\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => ArtifactMainSlotKeys\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = ArtifactMainStatsData[numStars]?.[key]?.[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData)\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getRolls(value, rollData, float = false) {\r\n    let roll = null;\r\n    let maxNumRoll = Math.round(value / rollData[0])\r\n    if (!maxNumRoll) return null;\r\n    let rollOption = (val, arr) => {\r\n      if (roll) return;\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (float) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val)) {\r\n            roll = arr;\r\n            return;\r\n          }\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val)) {\r\n            roll = arr;\r\n            return\r\n          }\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        rollOption(value, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(value, [])\r\n    return roll;\r\n  }\r\n  static validateSubStat(state, substat) {\r\n    if (!substat || !substat.value) return { valid: true }\r\n    let value = parseFloat(substat.value);\r\n    if (isNaN(value)) return { valid: false, msg: `Invalid Input` }\r\n    let numStars = state.numStars\r\n    if (!numStars) return { valid: false, msg: `Artifact Stars not set.` }\r\n    let isFloat = Stat.getStatUnit(substat.key) === \"%\"\r\n    let rollData = this.getSubstatRollData(substat.key, numStars);\r\n    let rolls = this.getRolls(value, rollData, isFloat)\r\n\r\n    if (!rolls || rolls.length === 0) return { valid: false, msg: `Substat cannot be rolled 0 times.` };\r\n    let totalAllowableRolls = ArtifactStarsData[numStars]?.numUpgradesOrUnlocks - (4 - ArtifactStarsData[numStars]?.subBaseHigh) + 1;//+1 for its base roll\r\n    if (rolls.length > totalAllowableRolls) return { valid: false, msg: `Substat cannot be rolled more than ${totalAllowableRolls} times.` };\r\n\r\n    let min = rollData[0] * rolls.length;\r\n    let max = rollData[rollData.length - 1] * rolls.length;\r\n    return { valid: true, efficiency: clampPercent(((value - min) / (max - min)) * 100), msg: `This substat was rolled ${rolls.length} time(s). Values: [${rolls.join(\", \")}]`, rolls }\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static artifactValidation(state) {\r\n    let currentEfficiency = 0, maximumEfficiency = 0;\r\n    let subStatValidations = state.substats.map(substat => Artifact.validateSubStat(state, substat));\r\n    for (const substat of subStatValidations)\r\n      if (!substat.valid)\r\n        return { subStatValidations, valid: false, msg: \"One of the substat is invalid.\", currentEfficiency, maximumEfficiency }\r\n\r\n    //if a substat has >=2 rolls, when not all of them have been unlocked//if a substat has >=2 rolls, when not all of them have been unlocked\r\n    if (subStatValidations.some(substat => substat?.rolls?.length > 1) && subStatValidations.some((substat) => !substat.rolls))\r\n      return { subStatValidations, valid: false, msg: \"One of the substat have >1 rolls, but not all substats are unlocked.\", currentEfficiency, maximumEfficiency }\r\n    let currentNumOfRolls = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls ? cur.rolls.length : 0), 0);\r\n    let rollsRemaining = Artifact.rollsRemaining(state.level, state.numStars);\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(state.numStars);\r\n\r\n    if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n      return { subStatValidations, valid: false, msg: `Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `, currentEfficiency, maximumEfficiency }\r\n\r\n    let totalCurrentEfficiency = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls && cur.efficiency ? (cur.efficiency * cur.rolls.length) : 0), 0);\r\n    currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { valid: true, subStatValidations, currentNumOfRolls, rollsRemaining, totalPossbleUpgrade: totalPossbleRolls, currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getArtifactSets = (setKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = null) =>\r\n    deepClone(this.getArtifactSets(setKey)?.[setNumKey]?.stats || defVal)\r\n\r\n  static getArtifactConditionalStats = (setKey, setNumKey, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getArtifactSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      ArtifactData?.[setKey]?.sets && Object.entries(ArtifactData[setKey].sets).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getArtifactSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      if (ArtifactData?.[setKey]?.sets) {\r\n        let setNumKeys = Object.keys(ArtifactData[setKey].sets).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n        if (setNumKeys.length)\r\n          artifactSetEffect[setKey] = setNumKeys\r\n      }\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getArtifactSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = ArtifactData?.[setKey]?.sets?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getArtifactSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets?.[setNumKey]?.conditional || defVal\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      let hasSetEffect = false\r\n      if (setObj.sets)\r\n        Object.entries(setObj.sets).forEach(([setNumKey, setEffectObj]) => {\r\n          if (setEffectObj.stats && Object.keys(setEffectObj.stats).length > 0) {\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n            hasSetEffect = true\r\n          }\r\n          if (setEffectObj.conditional) {\r\n            let conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n            if (conditionalNum) {\r\n              let condStats = this.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n              if (condStats) {\r\n                setEffect[setNumKey] = deepClone(condStats)\r\n                hasSetEffect = true\r\n              }\r\n            }\r\n          }\r\n        })\r\n      if (hasSetEffect)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => id ? artifactDatabase[id] : null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null) \r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  dmg: { name: \"All DMG\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n  //elemental\r\n  overloaded_dmg: { name: \"Overloaded DMG\", unit: \"%\" },\r\n  electro_charged_dmg: { name: \"Electro-Charged DMG\", unit: \"%\" },\r\n  superconduct_dmg: { name: \"Superconduct DMG\", unit: \"%\" },\r\n  burning_dmg: { name: \"Overloaded DMG\", unit: \"%\" },\r\n  vaporize_dmg: { name: \"Vaporize DMG\", unit: \"%\" },\r\n  melt_dmg: { name: \"Melt DMG\", unit: \"%\" },\r\n  swirl_dmg: { name: \"Swirl DMG\", unit: \"%\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_final: (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.phy_dmg,\r\n  plunge_crit_dmg: (s) => s.phy_crit_dmg,\r\n  plunge_avg_dmg: (s) => s.phy_avg_dmg,\r\n  plunge_bonus_multi: (s) => s.phy_bonus_multi,\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.dmg) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s[`${ele}_ele_dmg`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_ele_crit_dmg`],\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_ele_avg_dmg`],\r\n  plunge_bonus_multi: (s, ele) => s[`${ele}_ele_bonus_multi`],\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.dmg) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.dmg) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.dmg) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//add html text to physical related stuff with html elements.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].html = <span className=\"text-physical text-nowrap\">{StatData[key].name}</span>\r\n  StatData[key].variant = \"physical\"\r\n});\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].html = <span className={`text-${eleKey} text-nowrap`}>{StatData[ele_key].name}</span>\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulas = {\r\n  noelle_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk + s.def_final * (options.value / 100),\r\n    dependency: [\"atk_base\", \"atk_weapon\", \"atk_\", \"atk\", \"def_final\", \"def_base\", \"def_\", \"def\"],\r\n  }\r\n}\r\n\r\n//the keyfilters are used by build generator to reduce the amount of calculations required\r\nfunction AttachLazyFormulas(obj, options = {}) {\r\n  let { formulaKeys = Object.keys(Formulas), statKeys = Object.keys(StatData) } = options;\r\n  let { formulaOverrides = [] } = obj;\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key: overrideFormulaKey, options } = formulaOverride\r\n    let { key, formula } = OverrideFormulas[overrideFormulaKey] || {}\r\n    if (!formulaKeys.includes(key)) return\r\n    formula = formula(options)\r\n    Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => formula(obj) : function () {\r\n        let val = formula(obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n\r\n  formulaKeys.forEach(key => {\r\n    !obj.hasOwnProperty(key) && Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => Formulas[key](obj) : function () {\r\n        let val = Formulas[key](obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  //assign zeros or default values to the other stats that are not part of the calculations\r\n  statKeys.forEach(key => !obj.hasOwnProperty(key) && (obj[key] = StatData[key].default || 0))\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  OverrideFormulas,\r\n  StatData,\r\n  AttachLazyFormulas,\r\n}","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}"],"sourceRoot":""}