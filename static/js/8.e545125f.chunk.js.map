{"version":3,"sources":["Weapon/Weapon.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","Components/CustomFormControl.js","StatDependency.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","Components/ConditionalSelector.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","../node_modules/react-bootstrap/esm/Badge.js","Data/WeaponData.js","DatabaseUtil.js","Components/StatIcon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","Artifact/ArtifactCard.js","Artifact/PercentBadge.js","Data/CharacterData.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/StatDisplay.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","TestPage/TestDisplay.js","Character/Character.js","Stat.js","Util/Util.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Character/CharacterDatabase.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Util/ConditionalsUtil.js","Artifact/ArtifactDatabase.js","Data/ElementalData.js","StatData.js","Components/StarDisplay.js"],"names":["Weapon","this","Error","getWeaponDataImport","WeaponDataImport","getLevelName","levelKey","defVal","LevelNameData","getLevelIndex","WeaponLevelKeys","indexOf","getWeaponName","weaponKey","WeaponData","name","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","refineIndex","charFinalStats","character","passiveDescription","getWeaponDescription","description","getWeaponConditional","conditional","getWeaponImg","img","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","getWeaponSubStatKey","subStatKey","getWeaponBonusStat","stats","getWeaponsOfType","weaponType","Object","fromEntries","entries","filter","getWeaponTypeName","WeaponTypeData","getWeaponMainStatValWithOverride","weaponObj","overrideMainVal","key","getWeaponSubStatValWithOverride","overrideSubVal","getWeaponConditionalStat","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","map","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","FloatFormControl","placeholder","onValueChange","disabled","useState","focus","setFocus","type","className","toString","onChange","e","target","parseFloat","onFocus","onBlur","IntFormControl","parseInt","formulaKeyDependency","registerDependency","operation","testObj","dependency","Set","keys","StatData","forEach","k","defineProperty","get","add","GetDependencies","initialStats","Formulas","dependencies","modifiers","InsertDependencies","has","Modifiers","s","formula","resolveContainerRef","ref","_ref","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","ConditionalSelector","props","setConditional","defEle","Array","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","i","Fragment","v","stack","tempcount","icon","faCheckSquare","faSquare","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","Badge","React","forwardRef","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","then","imp","default","DatabaseInitAndVerify","localStorage","removeItem","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","values","art","valid","location","getCharacter","artInSlotId","getArtifactIDFromSlot","slotKey","id","equipArtifact","keyMapping","setKey","mainStatKey","endsWith","replace","maximumEfficiency","Artifact","substatsValidation","updateArtifact","chars","getCharacterDatabase","equippedArtifacts","artid","equippedArt","getArtifact","moveToNewLocation","artifactConditionals","cond","srcKey","srcKey2","dmgMode","updateCharacter","StatIcon","hp_base","faTint","hp_final","hp_","hp","atk_base","faFistRaised","atk_final","atk_","atk","def_base","faShieldAlt","def_final","def_","def","ele_mas","faMagic","crit_rate","faDice","crit_dmg","faDiceD20","ener_rech","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","_defineProperty","obj","enumerable","configurable","writable","ArtifactCard","artifactId","artifactObj","forceUpdate","onEdit","onDelete","assumeFull","numStars","level","substats","lock","currentEfficiency","locationChar","locationName","mainStatLevel","assFullColor","mainStatVal","getMainStatValue","Stat","getStatUnit","artifactValid","every","sstat","rolls","length","equipOnChar","charId","equipArtifactOnChar","border","bg","Header","xs","md","src","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Body","Title","getSetName","stars","getStatName","stat","numRolls","efficiency","effOpacity","statName","toFixed","style","opacity","percent","Footer","char","placement","overlay","pointerEvents","faLock","faLockOpen","Boolean","faEdit","faTrashAlt","PercentBadge","children","badgeColor","isNaN","Math","floor","CharacterData","CharacterDataImport","LevelsData","asend","characterStatBase","stam","CharacterSpecializedStatKey","func","index","Children","child","isValidElement","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","TabContext","Provider","SelectableContext","TabContent","decoratedBsPrefix","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","Tab","_React$Component","apply","arguments","_inheritsLoose","prototype","render","Container","Content","Pane","createContext","useAccordionToggle","contextEventKey","AccordionContext","AccordionToggle","accordionOnClick","AccordionCollapse","Collapse","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","_objectWithoutProperties","source","excluded","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","DisplayStats","statVal","build","editable","otherProps","buildVal","finalStats","buildDiff","originalVal","Character","getStatValueWithOverride","diff","diffText","fixedUnit","hasOverride","Col","DisplayNewBuildDiff","equippedBuild","newBuild","unit","CharacterArtifactPane","characterKey","compareAgainstEquipped","setState","showOther","setShowOther","artifactsAssumeFull","statKeys","getDisplayStatKeys","displayStatProps","displayNewBuildProps","formulaKeys","getPrintableFormulaStatKeyList","Row","Card","Button","xl","printStat","printFormula","equipArtifacts","artifactIds","Alert","sm","lg","getSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","getConditionalNum","getConditionalStats","val","conditionalElement","cnum","state","setStateArtifactConditional","getSetEffectText","getSlotKeys","StatInput","prependEle","defaultValue","restProps","InputGroup","Prepend","Text","Append","undefined","OverlayTrigger","Tooltip","faUndo","CharacterOverviewPane","constellation","setOverride","setConstellation","editLevel","setEditLevel","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","getName","Image","getStar","colored","clamp","getLevel","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","conditionalStats","conditionalEle","faQuoteLeft","DropdownButton","title","reverse","star","arr","Dropdown","ItemText","Divider","faGavel","editingOther","SetEditingOther","additionalKeys","displayStatKeys","push","editStatKeys","otherStatKeys","getElementalKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","getStatNameRaw","CharacterTalentPane","ascension","getAscension","skillDisplayProps","ContextAwareToggle","callback","currentEventKey","decoratedOnClick","expanded","faWindowMinimize","faWindowMaximize","ToggleButtonGroup","ToggleButton","href","rel","eleKey","immunityStatKey","elementImmunity","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","autoInfused","ElementToReactionKeys","includes","statsDisplayKeys","ReactionDisplay","tKey","tText","SkillDisplayCard","talentKey","subtitle","getTalent","asc","enabled","onClickTitle","ReactionComponents","superconduct_dmg","electrocharged_dmg","overloaded_dmg","swirl_dmg","shatter_dmg","information","faQuestionCircle","crystalize_dmg","reactionMode","charEleKey","eleInterArr","Ele","talentLimits","header","getTalentLevelKey","talentLvlKey","levelBoost","infuseBtn","getElementalName","tLvl","talentLevelKeys","statsEle","talentStats","getTalentStats","statList","ListGroup","getTalentImg","getTalentName","Subtitle","getTalentDocument","section","talentText","fields","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","FieldDisplay","field","fieldText","fieldVariant","fieldBasic","basicVal","fieldVal","finalVal","fixedVal","fixed","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","CharacterDisplayCard","forceUpdateComponent","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","characterId","getInitialState","Promise","all","getCharacterDataImport","getDataImport","deepClone","addCharacter","footer","onClose","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","faTimes","defaultActiveKey","Nav","Link","getCDataObj","talent","skill","initialState","auto","burst","ListGroupItem","action","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","horizontal","horizontalVariant","initialBsPrefix","AbstractNav","TestDisplay","removeCharacterById","getSpecializedStatKey","getSpeicalizedStatVal","characterObj","baseStat","getIndexFromlevelkey","elementalKey","ElementalData","constellationName","titles","getSpecializedStat","specializeStat","thumbImg","cardImg","constIndex","getTalentLevelBoost","talents","talentBoost","boostEntry","find","withBoost","getTalentFields","getTalentStatsAll","statsArr","getTalentConditional","doc","tempCond","skillKey","elemental","infusable","getTalentStatKeyVariant","atkKeys","startsWith","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","artifacts","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","PreprocessFormulas","char_ele_key","overrides","hasOwnProperty","specialStatKey","addStatsObj","weaponStats","subKey","subVal","bonusStats","htmlStatsData","pretty","getStatVariant","f","expand","ModifiersText","skey","FormulaText","modifiersTextKeys","printModifier","overrideKey","options","formulaText","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_multi","electrocharged","superconduct_multi","superconduct","swirl_multi","swirl","shatter_multi","shattered","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","amp_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","abs","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","noelle_burst_atk","sweep_multiplier","mona_passive2_hydro_ele_dmg_bonus","array","random","getRandomIntInclusive","min","max","ceil","loadFromLocalStorage","data","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","closeEnoughFloat","a","b","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","ownKeys","object","enumerableOnly","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","phy_dmg_bonus","ele_dmg_bonus","2","ArtifactSubStatsData","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","getSubstatEfficiency","getArtifactEfficiency","errMsgs","some","currentNumOfRolls","reduce","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","unequipArtifactOnSlot","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","icons","getSetEffectsObj","setEffects","artifactSetEffect","artArr","setNumKeys","setEffectText","getSlotName","getSlotIcon","getSlotMainStatKeys","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","accu","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","initiated","characterDatabase","charIdIndex","isInvalid","getCharacterIdList","getIdNameList","dchar","charid","equipArtifactBuild","_createForOfIteratorHelper","allowArrayLike","it","F","n","done","_e","err","normalCompletion","didErr","step","next","_e2","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","reactionName","dmgKey","dmgName","str","atkTypeName","dmgModeName","ele_key","hydro_ele_dmg_bonus","formulas","StarIcon","faStar","Stars","_"],"mappings":"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","file":"static/js/8.e545125f.chunk.js","sourcesContent":["import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst FloatFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseFloat(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\n\r\nconst IntFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseInt(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\nexport {\r\n  FloatFormControl,\r\n  IntFormControl\r\n}","import { Formulas, Modifiers, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nconst formulaKeyDependency = {}\r\nconst registerDependency = (name, operation) => {\r\n  let testObj = {}\r\n  let dependency = new Set()\r\n  Object.keys(StatData).forEach(k => {\r\n    Object.defineProperty(testObj, k, {\r\n      get: () => {\r\n        dependency.add(k)\r\n        return 0\r\n      }\r\n    })\r\n  })\r\n  operation(testObj)\r\n  formulaKeyDependency[name] = [...dependency]\r\n}\r\nObject.keys(Formulas).forEach(key => registerDependency(key, s => Formulas[key](s)))\r\nObject.keys(Modifiers).forEach(name => registerDependency(name, s => Modifiers[name].formula({})(s)))\r\n\r\nif (process.env.NODE_ENV === \"development\") console.log(formulaKeyDependency)\r\n\r\nfunction GetDependencies(initialStats, keys = Object.keys(Formulas)) {\r\n  let dependencies = new Set(), { modifiers = {} } = initialStats\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n\r\n  for (const name in modifiers) {\r\n    if (Modifiers[name].key === key) {\r\n      formulaKeyDependency[name].forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n      dependencies.add(name)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  GetDependencies,\r\n}\r\n","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //remove the old error/prone id lists, if it still exists\r\n  localStorage.removeItem(\"artifact_id_list\")\r\n  localStorage.removeItem(\"character_id_list\")\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  if (CharacterDatabase.populateDatebaseFromLocalStorage() |\r\n    ArtifactDatabase.populateDatebaseFromLocalStorage()) {\r\n    //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n    let arts = ArtifactDatabase.getArtifactDatabase();\r\n    Object.values(arts).forEach(art => {\r\n      let valid = true\r\n      if (art.location) {\r\n        const locationChar = CharacterDatabase.getCharacter(art.location)\r\n        if (locationChar) {\r\n          let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\r\n          if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\r\n            CharacterDatabase.equipArtifact(art.location, art)\r\n          } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\r\n            art.location = \"\"\r\n            valid = false\r\n          }\r\n        } else {\r\n          art.location = \"\"\r\n          valid = false\r\n        }\r\n      }\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n      if (!art.maximumEfficiency) {\r\n        Artifact.substatsValidation(art)\r\n        valid = false\r\n      }\r\n      if (!valid)\r\n        ArtifactDatabase.updateArtifact(art)\r\n    })\r\n\r\n    let chars = CharacterDatabase.getCharacterDatabase();\r\n    Object.values(chars).forEach(character => {\r\n      let valid = true;\r\n      //verify character database equipment validity\r\n      Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\r\n        const equippedArt = ArtifactDatabase.getArtifact(artid)\r\n        if (equippedArt && equippedArt.location !== character.id) //the artifact doesnt have the right location...\r\n          ArtifactDatabase.moveToNewLocation(artid, character.id)\r\n        if (!equippedArt) {\r\n          valid = false\r\n          character.equippedArtifacts[slotKey] = \"\"\r\n        }\r\n      })\r\n\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      }) ?? []\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n      if (!valid) {\r\n        CharacterDatabase.updateCharacter(character)\r\n      }\r\n    })\r\n  }\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, artifactObj, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId && !artifactObj) return null;\r\n  let art = artifactObj ? artifactObj : ArtifactDatabase.getArtifact(artifactId);\r\n  if (!art) return null;\r\n  let { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location, lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  let locationChar = CharacterDatabase.getCharacter(location)\r\n  let locationName = locationChar ? locationChar.name : \"Inventory\"\r\n  let mainStatLevel = assumeFull ? numStars * 4 : level\r\n  let assFullColor = assumeFull && level !== numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\r\n  let artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\r\n  const equipOnChar = (charId) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charId)\r\n    forceUpdate?.()\r\n  }\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\r\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let numRolls = stat?.rolls?.length || 0\r\n          let efficiency = stat?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge percent={currentEfficiency} valid={artifactValid}>\r\n          {currentEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge percent={maximumEfficiency} valid={artifactValid}>\r\n          {maximumEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\">{locationName}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar()}>Inventory</Dropdown.Item>\r\n              {Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n                <Dropdown.Item key={id} onClick={() => equipOnChar(id)}>\r\n                  {char.name}\r\n                </Dropdown.Item>)}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><span>Location: {locationName}</span></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={location}\r\n                  style={location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    art.lock = !lock\r\n                    ArtifactDatabase.updateArtifact(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(lock || location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Col } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\nfunction DisplayStats({ statKey, character, build, editable, ...otherProps }) {\r\n  let buildVal = build?.finalStats?.[statKey] || 0\r\n  let statVal, buildDiff = null\r\n  if (typeof buildVal === \"string\") {\r\n    statVal = <span>{buildVal}</span>\r\n  } else {\r\n    let originalVal = Character.getStatValueWithOverride(character, statKey)\r\n    if (statKey === \"hp_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"hp_base\")\r\n    else if (statKey === \"def_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"def_base\")\r\n    else if (statKey === \"atk_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"atk_base\") + Character.getStatValueWithOverride(character, \"atk_weapon\")\r\n\r\n    let diff = buildVal - originalVal\r\n    let diffText = (diff?.toFixed?.(Stat.fixedUnit(statKey)) || diff) + Stat.getStatUnit(statKey)\r\n    if (diff < 0) buildDiff = <span className=\"text-success\">{diffText}</span>\r\n    else if (diff > 0) buildDiff = <span className=\"text-success\"> +{diffText}</span>\r\n\r\n    if (originalVal || !diff) statVal = <span className={editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}>{(originalVal?.toFixed?.(Stat.fixedUnit(statKey)) || originalVal) + Stat.getStatUnit(statKey)}</span>\r\n  }\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className=\"float-right text-right\">{statVal}{buildDiff}</span>\r\n  </Col>\r\n}\r\nconst DisplayNewBuildDiff = ({ statKey, character, equippedBuild, newBuild, editable, ...otherProps }) => {\r\n  let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right ${editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed?.(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed?.(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nexport {\r\n  DisplayStats,\r\n  DisplayNewBuildDiff,\r\n}","import React, { useState } from 'react';\r\nimport { Accordion, Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { DisplayNewBuildDiff, DisplayStats } from '../../Components/StatDisplay';\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from '../../StatDependency';\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState }) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(characterKey)\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  const formulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build.finalStats, statKeys))\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Calculations`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ?\r\n                  statKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                  statKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {formulaKeys.map(key => <Col key={key} xs={12} className=\"mt-2\">\r\n                    <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                      <Card.Header className=\"p-2\">\r\n                        {Stat.printStat(key, build.finalStats)}\r\n                      </Card.Header>\r\n                      <Card.Body className=\"p-2\">\r\n                        <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  )}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n              {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Artifact.getSlotKeys().map(slotKey =>\r\n            build.artifactIds[slotKey] ? <Col sm={6} lg={4} key={build.artifactIds[slotKey]} className=\"mb-2\">\r\n              <ArtifactCard artifactId={build.artifactIds[slotKey]} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport { DisplayNewBuildDiff, DisplayStats } from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"char_level\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={(val) => setOverride(\"char_level\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"char_level\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats, character)}</p>\r\n            <Row>\r\n              <Col xs={12} md={6}>\r\n                <h5>ATK: {weaponDisplayMainVal}</h5>\r\n              </Col>\r\n              {subStatKey && <Col xs={12} md={6}>\r\n                <h5>{Stat.getStatName(subStatKey)}: {weaponDisplaySubVal}{Stat.getStatUnit(subStatKey)}</h5>\r\n              </Col>}\r\n            </Row>\r\n            {<Row>\r\n              {(conditionalStats || weaponBonusStats) && <Col xs={12}><h6 className=\"mb-0\">Bonus Stats:</h6></Col>}\r\n              {weaponBonusStats && Object.entries(weaponBonusStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"bonu\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n              {conditionalStats && Object.entries(conditionalStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"cond\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n            </Row>}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  let { editable, character, character: { compareAgainstEquipped }, setOverride, equippedBuild, newBuild } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  let additionalKeys = [\"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const displayStatKeys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp_base\", \"hp\", \"hp_\", \"atk_base\", \"atk\", \"atk_\", \"def_base\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\", \"skill_crit_rate\", \"burst_crit_rate\", \"all_dmg_bonus\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              displayStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              displayStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              otherStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ?\r\n            miscStatkeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n            miscStatkeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n","import { faCheckSquare, faQuestionCircle, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, ToggleButton, ToggleButtonGroup, Tooltip } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation, dmgMode }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  //choose which one to display stats for\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button\r\n        // style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"norm_atk\", \"char_atk\", \"plunge\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(Character.getTalentStatKey(\"char_atk\", character, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[Character.getElementalKey(characterKey)])\r\n    let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n\r\n    //search for dependency\r\n    return Stat.getPrintableFormulaStatKeyList(GetDependencies(build.finalStats, keys))\r\n  }\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <Accordion>\r\n        <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Options</span>\r\n                <small>Expand below to edit enemy details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ToggleButtonGroup type=\"radio\" value={dmgMode} name=\"dmgOptions\" onChange={(dmgMode) => setState({ dmgMode })}>\r\n                  <ToggleButton value=\"avg_dmg\">Avg. DMG</ToggleButton>\r\n                  <ToggleButton value=\"dmg\">Normal Hit, No Crit</ToggleButton>\r\n                  <ToggleButton value=\"crit_dmg\">Crit Hit DMG</ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Row className=\"mb-2\"><Col>\r\n                <Button variant=\"warning\" >\r\n                  <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                    To get the specific resistance values of enemies, please visit the wiki.\r\n                  </a>\r\n                </Button >\r\n              </Col></Row>\r\n              <Row>\r\n                <Col xs={12} xl={6} className=\"mb-2\">\r\n                  <StatInput\r\n                    name={<b>Enemy Level</b>}\r\n                    value={Character.getStatValueWithOverride(character, \"enemy_level\")}\r\n                    placeholder={Stat.getStatNameRaw(\"enemy_level\")}\r\n                    defaultValue={Character.getBaseStatValue(character, \"enemy_level\")}\r\n                    onValueChange={(val) => setOverride(\"enemy_level\", val)}\r\n                  />\r\n                </Col>\r\n                {[\"physical\", ...Character.getElementalKeys()].map(eleKey => {\r\n                  let statKey = eleKey === \"physical\" ? \"enemy_phy_res\" : `${eleKey}_enemy_ele_res`\r\n                  let immunityStatKey = eleKey === \"physical\" ? \"enemy_phy_immunity\" : `${eleKey}_enemy_ele_immunity`\r\n                  let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                  return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                        <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                      name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                      value={Character.getStatValueWithOverride(character, statKey)}\r\n                      placeholder={Stat.getStatNameRaw(statKey)}\r\n                      defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                      onValueChange={(val) => setOverride(statKey, val)}\r\n                      disabled={elementImmunity}\r\n                    />\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Formulas</span>\r\n                <small>Expand below to see calculation details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n              <Row>\r\n                {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\r\n                  <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                    <Card.Header className=\"p-2\">\r\n                      {Stat.printStat(key, build.finalStats)}\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-2\">\r\n                      <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                )}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {Character.getTalent(characterKey, \"sprint\", false) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_dmg: SuperConductCard,\r\n  electrocharged_dmg: ElectroChargedCard,\r\n  overloaded_dmg: OverloadedCard,\r\n  swirl_dmg: SwirlCard,\r\n  shatter_dmg: ShatteredCard,\r\n  crystalize_dmg: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey, reactionMode = \"none\" }, newBuild, equippedBuild, setState }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let charEleKey = Character.getElementalKey(characterKey)\r\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shatter_dmg\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shatter_dmg\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row>\r\n        <Col ><Row className=\"mb-n2\">\r\n          {eleInterArr.map(key => {\r\n            let Ele = ReactionComponents[key]\r\n            if (!Ele) return null\r\n            let val = build?.finalStats?.[key]\r\n            val = val?.toFixed?.(Stat.fixedUnit(key)) || val\r\n            return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele value={val} /></Col>\r\n          })}\r\n        </Row></Col>\r\n        <Col xs=\"auto\">\r\n          {[\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup\r\n            type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setState({ reactionMode: val === \"none\" ? null : val })}>\r\n            <ToggleButton className=\"p-2\" value={\"none\"}> <h6>No Elemental</h6> <h6>Interactions</h6></ToggleButton >\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Vaporize(Pyro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Pyro)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"hydro\" && <ToggleButton className=\"p-2\" value={\"hydro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Vaporize(Hydro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"cryo\" && <ToggleButton className=\"p-2\" value={\"cryo_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Cryo)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n          </ToggleButtonGroup>}\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"superconduct_dmg\")}</h5>\r\n    <h4 className=\"text-superconduct mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"electrocharged_dmg\")}</h5>\r\n    <h4 className=\"text-electrocharged mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"overloaded_dmg\")}</h5>\r\n    <h4 className=\"text-overloaded mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction SwirlCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"swirl_dmg\")}</h5>\r\n    <h4 className=\"text-swirl mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ value }) {\r\n  let information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"shatter_dmg\")}</h5>\r\n    <h4 className=\"text-shatter mb-0\">\r\n      <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"crystalize_dmg\")}</h5>\r\n    <h4 className=\"text-crystalize mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let { talentLvlKey = undefined, levelBoost = 0 } = Character.getTalentLevelKey(character, talentKey, constellation, true)\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n  if (typeof talentLvlKey === \"number\") {\r\n    if (editable) {\r\n      let setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        let talentLevelKeys = state.talentLevelKeys || {}\r\n        talentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let statsEle = null\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  if (talentStats) {\r\n    let statList = Object.entries(talentStats).map(([statKey, statVal], index) =>\r\n      typeof statVal === \"number\" && <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n        <div>\r\n          <span><b>{Stat.getStatName(statKey)}</b></span>\r\n          <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n        </div>\r\n      </ListGroup.Item>\r\n    ).filter(e => Boolean(e))//filter because modifiers cannot be displayed.\r\n    statsEle = Boolean(statList.length) && <Row><Col>\r\n      <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n        <ListGroup className=\"text-white\" variant=\"flush\">\r\n          {statList}\r\n        </ListGroup>\r\n      </Card>\r\n    </Col></Row>\r\n  }\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalStats = {}\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            //filter out modifiers from rendering\r\n            conditionalStats = Object.fromEntries(Object.entries(conditionalStats).filter(([key, _]) => key !== \"modifiers\"))\r\n            conditionalFields = Character.getTalentConditionalFields(conditional, conditionalNum, [])\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Col xs={12}>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {Object.entries(conditionalStats).map(([statKey, statVal], index) =>\r\n                  <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n                    <div>\r\n                      <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                      <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n                    </div>\r\n                  </ListGroup.Item>\r\n                )}\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i + (conditionalStats?.length || 0)} index={i + (conditionalStats?.length || 0)} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        }\r\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\r\n          <div className=\"mb-2\">{talentText}</div>\r\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n        </Col>{conditionalEle}</Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay(props) {\r\n  let { character, character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldVariant = field.variant || \"\"\r\n  if (typeof fieldVariant === \"function\")\r\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldBasic = field.basicVal\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats, character)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = field.value ? field.value : field.finalVal\r\n  if (typeof fieldVal === \"function\")\r\n    fieldVal = fieldVal?.(talentLvlKey, build.finalStats, character)\r\n  let fixedVal = field.fixed || 0\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.finalVal\r\n\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats, character)?.toFixed?.(fixedVal))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) || fieldVal}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}\r\n","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterId)\r\n      this.state = CharacterDatabase.getCharacter(props.characterId)\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    dmgMode: \"dmg\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey), reactionMode: null, autoInfused: false })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.characterId && this.state.id !== this.props.characterId)\r\n      this.setState(CharacterDatabase.getCharacter(this.props.characterId))\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"char_level\")}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && (Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\"}>Talents {(Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\" && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} setState={this.setSetState} setOverride={this.setOverride} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import { Container } from \"react-bootstrap\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport '../StatDependency'\r\nexport default function TestDisplay(props) {\r\n  DatabaseInitAndVerify()\r\n  return <Container>\r\n    <CharacterDisplayCard editable characterId={\"character_2\"} />\r\n  </Container>\r\n}\r\n","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\nimport { GetDependencies } from \"../StatDependency\"\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    if (skillKey === \"phy\") return `phy_${dmgMode}`\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    if (skillKey === \"phy\") return \"physical\"\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_base\") || false\r\n    return character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats)\r\n    PreprocessFormulas(dependencies, stats.modifiers)(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"modifiers\")\r\n        return initialStats.modifiers = { ...(initialStats.modifiers || {}), ...val }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey, constellation)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, Modifiers, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = []) => {\r\n    //remove keys that will be overriden by the modifier\r\n    for (const statKey of statList)\r\n      if (Object.keys(ModifiersText).includes(statKey))\r\n        statList = statList.filter(skey => skey !== Modifiers[statKey].key)\r\n    let formulaKeys = Object.keys(FormulaText)\r\n    let modifiersTextKeys = Object.keys(ModifiersText)\r\n    return statList.filter(statKey => formulaKeys.includes(statKey) || modifiersTextKeys.includes(statKey))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    if (statKey in ModifiersText)\r\n      return Stat.printModifier(stats, statKey, modifiers[statKey], false)\r\n    return FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n      (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n  }\r\n\r\n  static printModifier = (stats, overrideKey, options, expand = true) =>\r\n    typeof ModifiersText?.[overrideKey]?.formulaText === \"function\" &&\r\n    (<span>{ModifiersText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (Modifiers[statKey]) statKey = Modifiers[statKey].key\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  amp_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(o, \"ele_mas\")} * exp^(-0.000505 * {f(o, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst ModifiersText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.sweep_multiplier * 100}%</span>,\r\n  },\r\n  mona_passive2_hydro_ele_dmg_bonus: {\r\n    formulaText: () => (o) => <span>{f(o, \"hydro_ele_dmg_bonus\")} + {f(o, \"ener_rech\")} * 20%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n  ModifiersText,\r\n};\r\n","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance\r\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {})\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, numStars, rolls) => {\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars);\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let min = rollData[0] * len;\r\n    let max = rollData[rollData.length - 1] * len;\r\n    return clampPercent(((sum - min) / (max - min)) * 100)\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      if (rollArr.length > 1) substat.rollArr = rollArr\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, numStars, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, numStars, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect).length > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n      if (Object.keys(condStats).length > 0) {\r\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n        Object.entries(condStats).forEach(([statKey, value]) =>\r\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\r\n      }\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else if (!conditionalNum && index < 0) { //nothing to change\r\n      return conditionals\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => artifactDatabase[id] || null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  all_dmg_bonus: { name: \"All DMG Bonus\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elemental Mastery Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elemental Mastery Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elemental Mastery Multiplier Z\", unit: \"multi\" },\r\n  amp_reaction_base_multi: { name: \"Amplifying Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_final: (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.phy_dmg,\r\n  plunge_crit_dmg: (s) => s.phy_crit_dmg,\r\n  plunge_avg_dmg: (s) => s.phy_avg_dmg,\r\n  plunge_bonus_multi: (s) => s.phy_bonus_multi,\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  amp_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s[`${ele}_ele_dmg`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_ele_crit_dmg`],\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_ele_avg_dmg`],\r\n  plunge_bonus_multi: (s, ele) => s[`${ele}_ele_bonus_multi`],\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.all_dmg_bonus) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst Modifiers = {\r\n  noelle_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => s.atk_final + s.def_final * options.sweep_multiplier\r\n  },\r\n  mona_passive2_hydro_ele_dmg_bonus: {\r\n    key: \"hydro_ele_dmg_bonus\",\r\n    formula: () => (s) => s.hydro_ele_dmg_bonus + s.ener_rech * 0.2\r\n  }\r\n}\r\n\r\nfunction PreprocessFormulas(formulaKeys, modifiers) {\r\n  let formulas = formulaKeys.map(key => {\r\n    if (key in Modifiers) return [Modifiers[key].key, Modifiers[key].formula(modifiers[key])]\r\n    if (key in Formulas) return [key, Formulas[key]]\r\n    let value = StatData[key][\"default\"] ?? 0\r\n    return [key, (s) => (s[key] ?? value)]\r\n  })\r\n\r\n  return stat => formulas.forEach(([key, formula]) => {\r\n    stat[key] = formula(stat)\r\n  })\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  Modifiers,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  PreprocessFormulas,\r\n}\r\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n"],"sourceRoot":""}