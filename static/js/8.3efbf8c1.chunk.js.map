{"version":3,"sources":["Components/StarDisplay.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/CustomFormControl.js","Data/WeaponData.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/ConditionalSelector.js","../node_modules/react-bootstrap/esm/Badge.js","StatConstants.js","StatDependency.js","Data/CharacterData.js","Components/StatIcon.js","dbV2KeyMap.js","DatabaseUtil.js","Components/CharacterSelection.js","../node_modules/react-bootstrap/esm/ElementChildren.js","Character/CharacterDisplay/DamageOptionsAndCalculation.js","Artifact/ArtifactCard.js","Artifact/PercentBadge.js","Character/StatInput.js","Components/StatDisplay.js","Components/WIPComponent.js","../node_modules/react-bootstrap/esm/ToggleButton.js","Character/CharacterDisplay/StatDisplayComponent.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ToggleButtonGroup.js","TestPage/TestDisplay.js","Util/Util.js","Stat.js","Build/Build.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Character/Character.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Util/ConditionalsUtil.js","Data/ElementalData.js","Artifact/ArtifactDatabase.js","StatData.js","Weapon/Weapon.js"],"names":["StarIcon","icon","faStar","Stars","stars","colored","className","Array","keys","map","_","i","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","CustomFormControl","float","placeholder","value","onValueChange","disabled","allowEmpty","useState","focus","setFocus","props","type","toString","onChange","e","target","parseFloat","parseInt","onFocus","onBlur","aria-label","WeaponData","WeaponDataImport","then","imp","default","WeaponLevelKeys","LevelNameData","WeaponTypeData","_objectWithoutProperties","source","excluded","key","sourceKeys","Object","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","ConditionalSelector","conditional","conditionalNum","setConditional","defEle","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","Badge","React","forwardRef","_ref","ref","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","hitTypes","hit","avgHit","critHit","hitMoves","normal","charged","plunging","skill","burst","hitElements","ElementalData","transformativeReactions","overloaded","name","variants","shattered","physical","electrocharged","superconduct","swirl","amplifyingReactions","vaporize","melt","ReactionMatrix","crystalize","GetFormulaDependency","formula","dependency","Set","Proxy","get","prop","receiver","add","formulaKeyDependency","freeze","fromEntries","Formulas","GetDependencies","modifiers","StatData","dependencies","forEach","InsertDependencies","has","k","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","critRate_","critDMG_","enerRech_","stamina","CharacterSpecializedStatKey","StatIcon","characterHP","faTint","finalHP","hp_","hp","baseATK","faFistRaised","characterATK","finalATK","atk_","atk","characterDEF","faShieldAlt","finalDEF","def_","def","eleMas","faMagic","faDice","faDiceD20","faSync","heal_","faFirstAid","StatIconEle","statKey","changes","char_ele_key","char_level","hp_base","hp_final","atk_character_base","atk_base","atk_final","atk_weapon","def_base","def_final","phy_dmg_bonus","phy_res","anemo_ele_dmg_bonus","geo_ele_dmg_bonus","electro_ele_dmg_bonus","hydro_ele_dmg_bonus","pyro_ele_dmg_bonus","cryo_ele_dmg_bonus","anemo_ele_res","geo_ele_res","electro_ele_res","hydro_ele_res","pyro_ele_res","cryo_ele_res","ener_rech","crit_rate","crit_dmg","stam","heal_bonu","inc_heal","pow_shield","red_cd","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","norm_atk_dmg","char_atk_dmg","plunge_dmg","norm_atk_crit_dmg","char_atk_crit_dmg","plunge_crit_dmg","norm_atk_avg_dmg","char_atk_avg_dmg","plunge_avg_dmg","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","skill_dmg_bonus","burst_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_crit_rate","burst_crit_rate","anemo_skill_dmg","anemo_burst_dmg","anemo_skill_crit_dmg","anemo_burst_crit_dmg","anemo_skill_avg_dmg","anemo_burst_avg_dmg","geo_skill_dmg","geo_burst_dmg","geo_skill_crit_dmg","geo_burst_crit_dmg","geo_skill_avg_dmg","geo_burst_avg_dmg","electro_skill_dmg","electro_burst_dmg","electro_skill_crit_dmg","electro_burst_crit_dmg","electro_skill_avg_dmg","electro_burst_avg_dmg","hydro_skill_dmg","hydro_burst_dmg","hydro_skill_crit_dmg","hydro_burst_crit_dmg","hydro_skill_avg_dmg","hydro_burst_avg_dmg","pyro_skill_dmg","pyro_burst_dmg","pyro_skill_crit_dmg","pyro_burst_crit_dmg","pyro_skill_avg_dmg","pyro_burst_avg_dmg","cryo_skill_dmg","cryo_burst_dmg","cryo_skill_crit_dmg","cryo_burst_crit_dmg","cryo_skill_avg_dmg","cryo_burst_avg_dmg","phy_dmg","phy_crit_dmg","phy_avg_dmg","anemo_ele_dmg","anemo_ele_crit_dmg","anemo_ele_avg_dmg","geo_ele_dmg","geo_ele_crit_dmg","geo_ele_avg_dmg","electro_ele_dmg","electro_ele_crit_dmg","electro_ele_avg_dmg","hydro_ele_dmg","hydro_ele_crit_dmg","hydro_ele_avg_dmg","pyro_ele_dmg","pyro_ele_crit_dmg","pyro_ele_avg_dmg","cryo_ele_dmg","cryo_ele_crit_dmg","cryo_ele_avg_dmg","overload_dmg","overload_dmg_bonus","overload_multi","electrocharged_dmg","electrocharged_dmg_bonus","electrocharged_multi","superconduct_dmg","superconduct_dmg_bonus","superconduct_multi","burning_dmg","burning_dmg_bonus","swirl_dmg","swirl_dmg_bonus","swirl_multi","shatter_dmg","shatter_dmg_bonus","shatter_multi","crystalize_dmg","crystalize_dmg_bonus","melt_dmg_bonus","vaporize_dmg_bonus","pyro_vaporize_normal_dmg","pyro_vaporize_normal_crit_dmg","pyro_vaporize_normal_avg_dmg","pyro_vaporize_chraged_dmg","pyro_vaporize_chraged_crit_dmg","pyro_vaporize_chraged_avg_dmg","pyro_vaporize_plunge_dmg","pyro_vaporize_plunge_crit_dmg","pyro_vaporize_plunge_avg_dmg","pyro_vaporize_skill_dmg","pyro_vaporize_skill_crit_dmg","pyro_vaporize_skill_avg_dmg","pyro_vaporize_burst_dmg","pyro_vaporize_burst_crit_dmg","pyro_vaporize_burst_avg_dmg","pyro_vaporize_ele_dmg","pyro_vaporize_ele_crit_dmg","pyro_vaporize_ele_avg_dmg","hydro_vaporize_normal_dmg","hydro_vaporize_normal_crit_dmg","hydro_vaporize_normal_avg_dmg","hydro_vaporize_chraged_dmg","hydro_vaporize_chraged_crit_dmg","hydro_vaporize_chraged_avg_dmg","hydro_vaporize_plunge_dmg","hydro_vaporize_plunge_crit_dmg","hydro_vaporize_plunge_avg_dmg","hydro_vaporize_skill_dmg","hydro_vaporize_skill_crit_dmg","hydro_vaporize_skill_avg_dmg","hydro_vaporize_burst_dmg","hydro_vaporize_burst_crit_dmg","hydro_vaporize_burst_avg_dmg","hydro_vaporize_ele_dmg","hydro_vaporize_ele_crit_dmg","hydro_vaporize_ele_avg_dmg","pyro_melt_normal_dmg","pyro_melt_normal_crit_dmg","pyro_melt_normal_avg_dmg","pyro_melt_chraged_dmg","pyro_melt_chraged_crit_dmg","pyro_melt_chraged_avg_dmg","pyro_melt_plunge_dmg","pyro_melt_plunge_crit_dmg","pyro_melt_plunge_avg_dmg","pyro_melt_skill_dmg","pyro_melt_skill_crit_dmg","pyro_melt_skill_avg_dmg","pyro_melt_burst_dmg","pyro_melt_burst_crit_dmg","pyro_melt_burst_avg_dmg","pyro_melt_ele_dmg","pyro_melt_ele_crit_dmg","pyro_melt_ele_avg_dmg","cryo_melt_normal_dmg","cryo_melt_normal_crit_dmg","cryo_melt_normal_avg_dmg","cryo_melt_chraged_dmg","cryo_melt_chraged_crit_dmg","cryo_melt_chraged_avg_dmg","cryo_melt_plunge_dmg","cryo_melt_plunge_crit_dmg","cryo_melt_plunge_avg_dmg","cryo_melt_skill_dmg","cryo_melt_skill_crit_dmg","cryo_melt_skill_avg_dmg","cryo_melt_burst_dmg","cryo_melt_burst_crit_dmg","cryo_melt_burst_avg_dmg","cryo_melt_ele_dmg","cryo_melt_ele_crit_dmg","cryo_melt_ele_avg_dmg","enemy_phy_res","enemy_phy_res_multi","enemy_phy_immunity","anemo_enemy_ele_res","anemo_enemy_ele_res_multi","anemo_enemy_ele_immunity","geo_enemy_ele_res","geo_enemy_ele_res_multi","geo_enemy_ele_immunity","electro_enemy_ele_res","electro_enemy_ele_res_multi","electro_enemy_ele_immunity","hydro_enemy_ele_res","hydro_enemy_ele_res_multi","hydro_enemy_ele_immunity","pyro_enemy_ele_res","pyro_enemy_ele_res_multi","pyro_enemy_ele_immunity","cryo_enemy_ele_res","cryo_enemy_ele_res_multi","cryo_enemy_ele_immunity","ele_mas","amp_reaction_base_multi","enemy_level_multi","enemy_level","dmgModeToHitMode","avg_dmg","dmg","DatabaseInitAndVerify","dbVersion","getDatabaseVersion","localStorage","filter","startsWith","character","loadFromLocalStorage","characterKey","equippedArtifacts","dbKey","getItem","id","dmgMode","rest","buildSetting","mainStat","stat","v2change","statFilters","entries","hitMode","saveToLocalStorage","values","artid","art","location","removeItem","ArtifactDisplayState","filterMainStatKey","filterSubstats","charDBJustPopualted","CharacterDatabase","populateDatebaseFromLocalStorage","artDBJustPopualted","ArtifactDatabase","getArtifactDatabase","valid","artInSlotId","getArtifactIDFromSlot","slotKey","equipArtifact","Artifact","substatsValidation","numStars","keyMapping","setKey","mainStatKey","endsWith","replace","substats","obj","updateArtifact","chars","getCharacterDatabase","equippedArt","moveToNewLocation","artifactConditionals","cond","srcKey","srcKey2","updateCharacter","setDatabaseVersion","defVal","version","CharacterSelectionDropdownList","onSelect","getCharacterKeyList","sort","a","b","Character","getName","children","func","index","Children","child","isValidElement","ReactionToggle","reactionMode","setReactionMode","charEleKey","getElementalKey","eleInterArr","ElementToReactionKeys","includes","getWeaponTypeKey","push","defaultValue","val","src","HitModeToggle","setHitMode","DamageOptionsAndCalculation","setState","setOverride","newBuild","equippedBuild","build","ContextAwareToggle","eventKey","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","bg","Header","xs","r","Button","Collapse","Body","href","rel","xl","getStatValueWithOverride","Stat","getStatNameRaw","getBaseStatValue","getElementalKeys","eleKey","immunityStatKey","elementImmunity","prependEle","m","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","finalStats","autoInfused","weaponTypeKey","getPrintableFormulaStatKeyList","statsDisplayKeys","printStat","printFormula","ArtifactCard","artifactId","artifactObj","forceUpdate","onEdit","onDelete","assumeFull","lock","currentEfficiency","maximumEfficiency","mainStatLevel","assFullColor","mainStatVal","getMainStatValue","getStatUnit","artifactValid","every","sstat","rolls","equipOnChar","charKey","equipArtifactOnChar","border","md","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Title","getSetName","getStatName","numRolls","efficiency","effOpacity","statName","toFixed","style","opacity","percent","Footer","Divider","ckey","placement","overlay","pointerEvents","faLock","faLockOpen","Boolean","faEdit","faTrashAlt","PercentBadge","badgeColor","isNaN","Math","floor","StatInput","restProps","Prepend","Text","Append","undefined","faUndo","DisplayStatDiff","label","oldVal","fixed","unit","diff","oldText","diffText","StatDisplay","editable","invalid","fixedUnit","talentKey","sectionIndex","fieldIndex","field","getTalentField","labelVariant","getTalentFieldValue","hasOverride","WIPComponent","noop","ToggleButton","checked","inputRef","_useState","focused","setFocused","handleFocus","useCallback","tagName","handleBlur","active","autoComplete","StatDisplayComponent","cardbg","fields","header","getTalentName","JSON","stringify","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","TabContext","Provider","SelectableContext","TabContent","decoratedBsPrefix","TabPane","_useTabContext","context","shouldTransition","makeEventKey","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","Tab","_React$Component","apply","this","arguments","_inheritsLoose","render","Error","Container","Content","Pane","CharacterArtifactPane","artifactsAssumeFull","statKeys","getDisplayStatKeys","hasTalentPage","Row","Col","Card","equipArtifacts","artifactIds","Alert","sm","lg","getSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","ConditionalsUtil","getConditionalNum","getConditionalStats","conditionalElement","cnum","state","setStateArtifactConditional","getSetEffectText","getSlotKeys","CharacterOverviewPane","constellation","setConstellation","editLevel","setEditLevel","elementKey","Img","getCard","Image","getStar","InputGroup","clamp","getLevel","levelKey","OverlayTrigger","Tooltip","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","StatItem","getStatVariant","WeaponStatsCard","title","stats","mkey","modifier","reduce","accu","multiplier","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","refineIndex","conditionalStats","getWeaponConditionalStat","getWeaponConditional","conditionalEle","faQuoteLeft","getWeaponImg","getWeaponRarity","DropdownButton","getWeaponName","reverse","star","arr","Dropdown","ItemText","getWeaponsOfType","rarity","weaponObj","getLevelName","faGavel","getWeaponPassiveDescription","getWeaponDescription","editingOther","SetEditingOther","editingMisc","SetEditingMisc","additionalKeys","displayStatKeys","editStatKeys","otherStatKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","isPercentSpecialStatSelect","displayNewBuildProps","getStatNamePretty","getStatNameWithPercent","CharacterTalentPane","ascension","getAscension","skillDisplayProps","ReactionDisplay","tKey","tText","SkillDisplayCard","subtitle","getTalent","asc","enabled","onClickTitle","ReactionComponents","superconduct_hit","sKey","electrocharged_hit","overloaded_hit","pyro_swirl_hit","swirlEleToDisplay","setele","element","shattered_hit","information","faQuestionCircle","crystalize_hit","Ele","modifiersToFields","mStatKey","formulaText","statsToFields","statVal","flat","talentLimits","talentLevelKeys","otherProps","infuseBtn","getElementalName","talentLvlKey","talentLvlKeyRaw","levelBoost","getTalentLevelBoost","tLvl","stateTalentLevelKeys","talentStats","getTalentStats","statsEle","ListGroup","FieldDisplay","getTalentImg","Subtitle","getTalentDocument","section","talentText","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","compareAgainstEquipped","fieldText","fieldVariant","fieldBasic","fieldVal","fixedVal","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","CharacterDisplayCard","forceUpdateComponent","setCharacterKey","getInitialState","char","getIntialWeapon","setLevelKey","baseStatOverrides","Promise","all","getCharacterDataImport","getWeaponDataImport","getDataImport","deepClone","prevProps","footer","onClose","tabName","calculateBuild","HeaderIconDisplay","getThumb","commonPaneProps","u","ButtonGroup","DropdownToggle","getAllCharacterKeys","getlevelNames","getlevelKeys","lvlKey","faTimes","defaultActiveKey","Nav","Link","initialState","auto","ToggleButtonGroup","controlledProps","getValues","concat","invariant","toggle","_child$props","childVal","childOnChange","cloneElement","chainFunction","inputVal","event","isActive","n","handleToggle","vertical","TestDisplay","getRandomElementFromArray","array","random","getRandomIntInclusive","min","max","ceil","data","parse","setItem","closeEnoughFloat","abs","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","objMultiplication","multi","htmlStatsData","pretty","f","expand","statList","formulaKeys","FormulaText","newModifiersKeys","x","modifierText","options","statUnit","reactionMatrixElementRenderer","o","sign","disVal","powerText","heal_multi","enemyLevel_multi","res","move","assign","amplificative_dmg_","reaction","baseMulti","transformative_dmg_","crystalize_eleMas_","crystalize_multi","calculateTotalBuildNumber","artifactsBySlot","setFilters","setKeys","filteredArtifactsBySlot","slotKeys","artifactsBySet","artifact","setCount","result","slotPerm","num","artifactSetPermutations","artifacts","skillKey","elemental","characterEle","weaponType","getTalentStatKeyVariant","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","formulaDB","getCDataObj","formulaKey","tk","find","remove","getSpecializedStatKey","getSpeicalizedStatVal","getWeaponMainStatValWithOverride","characterObj","baseStat","getIndexFromlevelkey","elementalKey","getElementalKeysWithoutPhysical","constellationName","getTitles","titles","getSpecializedStat","specializeStat","thumbImg","cardImg","img","constIndex","talent","talents","talentBoost","boostEntry","document","getTalentDocumentSections","getTalentStatsAll","statsArr","getTalentConditional","sections","tempCond","getConditionalProp","stacks","infusable","basicKeys","transReactions","charFormulas","genericAvgHit","reactions","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","PreprocessFormulas","mergeStats","overrides","hasOwnProperty","specialStatKey","s","weaponSubKey","getWeaponSubStatValWithOverride","initiated","characterDatabase","isInvalid","getIdNameList","split","dchar","unequipArtifactOnSlot","equipArtifactBuild","unequipAllArtifacts","clearDatabase","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","physical_dmg_","ele_dmg_","2","ArtifactSubStatsData","ArtifactSubstatsMinMax","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","getSubstatEfficiency","getArtifactEfficiency","errMsgs","some","currentNumOfRolls","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","maxPerRoll","getSubstatAllMax","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","icons","getSetEffectsObj","setEffects","artifactSetEffect","artArr","setNumKeys","charFinalStats","setEffectText","getSlotName","getSlotIcon","getSlotMainStatKeys","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","main","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","_createForOfIteratorHelper","allowArrayLike","it","F","done","_e","err","normalCompletion","didErr","step","next","_e2","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","const","characterLevel","weaponATK","dmg_","weakspotDMG_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","staminaDec_","staminaGlidingDec_","staminaChargedDec_","crystalize_dmg_","burning_dmg_","enemyLevel","enemyDEFRed_","pow","dependencyKeys","debug","constData","formulaList","tmp","constModifier","dynamicModifier","constFunc","dynamicFunc","funcIndicator","console","log","error","moveName","eleName","opt","typeName","getLevelIndex","weaponKey","passiveName","passiveDescription","description","baseStats","sub","getWeaponTypeName","getWeaponTypeKeys"],"mappings":"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","file":"static/js/8.3efbf8c1.chunk.js","sourcesContent":["import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst CustomFormControl = ({ float = false, placeholder, value, onValueChange, disabled, allowEmpty = false }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  let displayValue = value\r\n  if (allowEmpty) displayValue = typeof value === \"number\" ? value : \"\"\r\n  else displayValue = !value && focus ? \"\" : (value?.toString?.() || value)\r\n  const props = {\r\n    type: \"number\",\r\n    className: \"hide-appearance\",\r\n    placeholder,\r\n    value: displayValue,\r\n    disabled,\r\n    onChange: (e) => {\r\n      let value = e.target.value;\r\n      if (float) {\r\n        if (allowEmpty) value = value === \"\" ? null : (parseFloat(value) || 0)\r\n        else value = parseFloat(value) || 0\r\n      } else {\r\n        if (allowEmpty) value = value === \"\" ? null : (parseInt(value) || 0)\r\n        else value = parseInt(value) || 0\r\n      }\r\n      onValueChange?.(value);\r\n    },\r\n    onFocus: () => setFocus(true),\r\n    onBlur: () => setFocus(false),\r\n  }\r\n  return <FormControl {...props} aria-label=\"custom-input\" />\r\n}\r\nexport default CustomFormControl;","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", variants: { pyro: 4 } },\r\n  shattered: { name: \"Shattered\", variants: { physical: 3 } },\r\n  electrocharged: { name: \"Electro-Charged\", variants: { electro: 2.4 } },\r\n  superconduct: { name: \"Superconduct\", variants: { cryo: 1 } },\r\n  swirl: { name: \"Swirl\", variants: { pyro: 1.2, hydro: 1.2, electro: 1.2, cryo: 1.2 } },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\nexport const ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\n","import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key) &&\r\n        console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key => \r\n      !StatData[key]?.const &&\r\n        console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\r\nconst reduceOptimizationTarget = (optimizationTarget) =>\r\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0]] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\r\n\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n  reduceOptimizationTarget,\r\n}\r\n","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","//for DB v2, we changed a bunch of keys.\r\nconst changes = {\r\n  char_ele_key: \"characterEle\",\r\n  char_level: \"characterLevel\",\r\n\r\n  hp_base: \"characterHP\",\r\n  hp_final: \"finalHP\",\r\n  atk_character_base: \"characterATK\",\r\n  atk_base: \"baseATK\",\r\n  atk_final: \"finalATK\",\r\n  atk_weapon: \"weaponATK\",\r\n  def_base: \"characterDEF\",\r\n  def_final: \"finalDEF\",\r\n  phy_dmg_bonus: \"physical_dmg_\",\r\n  phy_res: \"physical_res_\",\r\n  anemo_ele_dmg_bonus: \"anemo_dmg_\",\r\n  geo_ele_dmg_bonus: \"geo_dmg_\",\r\n  electro_ele_dmg_bonus: \"electro_dmg_\",\r\n  hydro_ele_dmg_bonus: \"hydro_dmg_\",\r\n  pyro_ele_dmg_bonus: \"pyro_dmg_\",\r\n  cryo_ele_dmg_bonus: \"cryo_dmg_\",\r\n  anemo_ele_res: \"anemo_res_\",\r\n  geo_ele_res: \"geo_res_\",\r\n  electro_ele_res: \"electro_res_\",\r\n  hydro_ele_res: \"hydro_res_\",\r\n  pyro_ele_res: \"pyro_res_\",\r\n  cryo_ele_res: \"cryo_res_\",\r\n  ener_rech: \"enerRech_\",\r\n  crit_rate: \"critRate_\",\r\n  crit_dmg: \"critDMG_\",\r\n  stam: \"stamina\",\r\n  heal_bonu: \"heal_\",\r\n  inc_heal: \"incHeal_\",\r\n  pow_shield: \"powShield_\",\r\n  red_cd: \"cdRed_\",\r\n  skill_cd_red: \"skillCDRed_\",\r\n  burst_cd_red: \"burstCDRed_\",\r\n  all_dmg_bonus: \"dmg_\",\r\n  move_spd: \"moveSPD_\",\r\n  atk_spd: \"atkSPD_\",\r\n  weakspot_dmg: \"weakspotDMG_\",\r\n  stamina_dec: \"staminaDec_\",\r\n  stamina_gliding_dec: \"staminaGlidingDec_\",\r\n  stamina_charged_dec: \"staminaChargedDec_\",\r\n  ele_mas_multi_x: \"eleMasX\",\r\n  ele_mas_multi_y: \"eleMasY\",\r\n  ele_mas_multi_z: \"eleMasZ\",\r\n\r\n  norm_atk_dmg: \"physical_normal_hit\",\r\n  char_atk_dmg: \"physical_charged_hit\",\r\n  plunge_dmg: \"physical_plunging_hit\",\r\n  norm_atk_crit_dmg: \"physical_normal_critHit\",\r\n  char_atk_crit_dmg: \"physical_charged_critHit\",\r\n  plunge_crit_dmg: \"physical_plunging_critHit\",\r\n  norm_atk_avg_dmg: \"physical_normal_avgHit\",\r\n  char_atk_avg_dmg: \"physical_charged_avgHit\",\r\n  plunge_avg_dmg: \"physical_plunging_avgHit\",\r\n  norm_atk_dmg_bonus: \"normal_dmg_\",\r\n  char_atk_dmg_bonus: \"charged_dmg_\",\r\n  plunge_atk_dmg_bonus: \"plunging_dmg_\",\r\n  skill_dmg_bonus: \"skill_dmg_\",\r\n  burst_dmg_bonus: \"burst_dmg_\",\r\n  norm_atk_crit_rate: \"normal_critRate_\",\r\n  char_atk_crit_rate: \"charged_critRate_\",\r\n  skill_crit_rate: \"skill_critRate_\",\r\n  burst_crit_rate: \"burst_critRate_\",\r\n\r\n  anemo_skill_dmg: \"anemo_skill_hit\",\r\n  anemo_burst_dmg: \"anemo_burst_hit\",\r\n  anemo_skill_crit_dmg: \"anemo_skill_critHit\",\r\n  anemo_burst_crit_dmg: \"anemo_burst_critHit\",\r\n  anemo_skill_avg_dmg: \"anemo_skill_avgHit\",\r\n  anemo_burst_avg_dmg: \"anemo_burst_avgHit\",\r\n  geo_skill_dmg: \"geo_skill_hit\",\r\n  geo_burst_dmg: \"geo_burst_hit\",\r\n  geo_skill_crit_dmg: \"geo_skill_critHit\",\r\n  geo_burst_crit_dmg: \"geo_burst_critHit\",\r\n  geo_skill_avg_dmg: \"geo_skill_avgHit\",\r\n  geo_burst_avg_dmg: \"geo_burst_avgHit\",\r\n  electro_skill_dmg: \"electro_skill_hit\",\r\n  electro_burst_dmg: \"electro_burst_hit\",\r\n  electro_skill_crit_dmg: \"electro_skill_critHit\",\r\n  electro_burst_crit_dmg: \"electro_burst_critHit\",\r\n  electro_skill_avg_dmg: \"electro_skill_avgHit\",\r\n  electro_burst_avg_dmg: \"electro_burst_avgHit\",\r\n  hydro_skill_dmg: \"hydro_skill_hit\",\r\n  hydro_burst_dmg: \"hydro_burst_hit\",\r\n  hydro_skill_crit_dmg: \"hydro_skill_critHit\",\r\n  hydro_burst_crit_dmg: \"hydro_burst_critHit\",\r\n  hydro_skill_avg_dmg: \"hydro_skill_avgHit\",\r\n  hydro_burst_avg_dmg: \"hydro_burst_avgHit\",\r\n  pyro_skill_dmg: \"pyro_skill_hit\",\r\n  pyro_burst_dmg: \"pyro_burst_hit\",\r\n  pyro_skill_crit_dmg: \"pyro_skill_critHit\",\r\n  pyro_burst_crit_dmg: \"pyro_burst_critHit\",\r\n  pyro_skill_avg_dmg: \"pyro_skill_avgHit\",\r\n  pyro_burst_avg_dmg: \"pyro_burst_avgHit\",\r\n  cryo_skill_dmg: \"cryo_skill_hit\",\r\n  cryo_burst_dmg: \"cryo_burst_hit\",\r\n  cryo_skill_crit_dmg: \"cryo_skill_critHit\",\r\n  cryo_burst_crit_dmg: \"cryo_burst_critHit\",\r\n  cryo_skill_avg_dmg: \"cryo_skill_avgHit\",\r\n  cryo_burst_avg_dmg: \"cryo_burst_avgHit\",\r\n\r\n  phy_dmg: \"physical_hit\",\r\n  phy_crit_dmg: \"physical_critHit\",\r\n  phy_avg_dmg: \"physical_avgHit\",\r\n  anemo_ele_dmg: \"anemo_hit\",\r\n  anemo_ele_crit_dmg: \"anemo_critHit\",\r\n  anemo_ele_avg_dmg: \"anemo_avgHit\",\r\n  geo_ele_dmg: \"geo_hit\",\r\n  geo_ele_crit_dmg: \"geo_critHit\",\r\n  geo_ele_avg_dmg: \"geo_avgHit\",\r\n  electro_ele_dmg: \"electro_hit\",\r\n  electro_ele_crit_dmg: \"electro_critHit\",\r\n  electro_ele_avg_dmg: \"electro_avgHit\",\r\n  hydro_ele_dmg: \"hydro_hit\",\r\n  hydro_ele_crit_dmg: \"hydro_critHit\",\r\n  hydro_ele_avg_dmg: \"hydro_avgHit\",\r\n  pyro_ele_dmg: \"pyro_hit\",\r\n  pyro_ele_crit_dmg: \"pyro_critHit\",\r\n  pyro_ele_avg_dmg: \"pyro_avgHit\",\r\n  cryo_ele_dmg: \"cryo_hit\",\r\n  cryo_ele_crit_dmg: \"cryo_critHit\",\r\n  cryo_ele_avg_dmg: \"cryo_avgHit\",\r\n\r\n  overload_dmg: \"overload_hit\",\r\n  overload_dmg_bonus: \"overload_dmg_\",\r\n  overload_multi: \"overload_multi\",\r\n  electrocharged_dmg: \"electrocharged_hit\",\r\n  electrocharged_dmg_bonus: \"electrocharged_dmg_\",\r\n  electrocharged_multi: \"electrocharged_multi\",\r\n  superconduct_dmg: \"superconduct_hit\",\r\n  superconduct_dmg_bonus: \"superconduct_dmg_\",\r\n  superconduct_multi: \"superconduct_multi\",\r\n  burning_dmg: \"burning_hit\",\r\n  burning_dmg_bonus: \"burning_dmg_\",\r\n  swirl_dmg: \"swirl_hit\",\r\n  swirl_dmg_bonus: \"swirl_dmg_\",\r\n  swirl_multi: \"swirl_multi\",\r\n  shatter_dmg: \"shattered_hit\",\r\n  shatter_dmg_bonus: \"shattered_dmg_\",\r\n  shatter_multi: \"shattered_multi\",\r\n  crystalize_dmg: \"crystalize_hit\",\r\n  crystalize_dmg_bonus: \"crystalize_dmg_\",\r\n\r\n  melt_dmg_bonus: \"melt_dmg_\",\r\n  vaporize_dmg_bonus: \"vaporize_dmg_\",\r\n\r\n  pyro_vaporize_normal_dmg: \"pyro_vaporize_normal_hit\",\r\n  pyro_vaporize_normal_crit_dmg: \"pyro_vaporize_normal_critHit\",\r\n  pyro_vaporize_normal_avg_dmg: \"pyro_vaporize_normal_avgHit\",\r\n  pyro_vaporize_chraged_dmg: \"pyro_vaporize_chraged_hit\",\r\n  pyro_vaporize_chraged_crit_dmg: \"pyro_vaporize_chraged_critHit\",\r\n  pyro_vaporize_chraged_avg_dmg: \"pyro_vaporize_chraged_avgHit\",\r\n  pyro_vaporize_plunge_dmg: \"pyro_vaporize_plunging_hit\",\r\n  pyro_vaporize_plunge_crit_dmg: \"pyro_vaporize_plunging_critHit\",\r\n  pyro_vaporize_plunge_avg_dmg: \"pyro_vaporize_plunging_avgHit\",\r\n  pyro_vaporize_skill_dmg: \"pyro_vaporize_skill_hit\",\r\n  pyro_vaporize_skill_crit_dmg: \"pyro_vaporize_skill_critHit\",\r\n  pyro_vaporize_skill_avg_dmg: \"pyro_vaporize_skill_avgHit\",\r\n  pyro_vaporize_burst_dmg: \"pyro_vaporize_burst_hit\",\r\n  pyro_vaporize_burst_crit_dmg: \"pyro_vaporize_burst_critHit\",\r\n  pyro_vaporize_burst_avg_dmg: \"pyro_vaporize_burst_avgHit\",\r\n  pyro_vaporize_ele_dmg: \"pyro_vaporize_hit\",\r\n  pyro_vaporize_ele_crit_dmg: \"pyro_vaporize_critHit\",\r\n  pyro_vaporize_ele_avg_dmg: \"pyro_vaporize_avgHit\",\r\n  hydro_vaporize_normal_dmg: \"hydro_vaporize_normal_hit\",\r\n  hydro_vaporize_normal_crit_dmg: \"hydro_vaporize_normal_critHit\",\r\n  hydro_vaporize_normal_avg_dmg: \"hydro_vaporize_normal_avgHit\",\r\n  hydro_vaporize_chraged_dmg: \"hydro_vaporize_chraged_hit\",\r\n  hydro_vaporize_chraged_crit_dmg: \"hydro_vaporize_chraged_critHit\",\r\n  hydro_vaporize_chraged_avg_dmg: \"hydro_vaporize_chraged_avgHit\",\r\n  hydro_vaporize_plunge_dmg: \"hydro_vaporize_plunging_hit\",\r\n  hydro_vaporize_plunge_crit_dmg: \"hydro_vaporize_plunging_critHit\",\r\n  hydro_vaporize_plunge_avg_dmg: \"hydro_vaporize_plunging_avgHit\",\r\n  hydro_vaporize_skill_dmg: \"hydro_vaporize_skill_hit\",\r\n  hydro_vaporize_skill_crit_dmg: \"hydro_vaporize_skill_critHit\",\r\n  hydro_vaporize_skill_avg_dmg: \"hydro_vaporize_skill_avgHit\",\r\n  hydro_vaporize_burst_dmg: \"hydro_vaporize_burst_hit\",\r\n  hydro_vaporize_burst_crit_dmg: \"hydro_vaporize_burst_critHit\",\r\n  hydro_vaporize_burst_avg_dmg: \"hydro_vaporize_burst_avgHit\",\r\n  hydro_vaporize_ele_dmg: \"hydro_vaporize_hit\",\r\n  hydro_vaporize_ele_crit_dmg: \"hydro_vaporize_critHit\",\r\n  hydro_vaporize_ele_avg_dmg: \"hydro_vaporize_avgHit\",\r\n  pyro_melt_normal_dmg: \"pyro_melt_normal_hit\",\r\n  pyro_melt_normal_crit_dmg: \"pyro_melt_normal_critHit\",\r\n  pyro_melt_normal_avg_dmg: \"pyro_melt_normal_avgHit\",\r\n  pyro_melt_chraged_dmg: \"pyro_melt_chraged_hit\",\r\n  pyro_melt_chraged_crit_dmg: \"pyro_melt_chraged_critHit\",\r\n  pyro_melt_chraged_avg_dmg: \"pyro_melt_chraged_avgHit\",\r\n  pyro_melt_plunge_dmg: \"pyro_melt_plunging_hit\",\r\n  pyro_melt_plunge_crit_dmg: \"pyro_melt_plunging_critHit\",\r\n  pyro_melt_plunge_avg_dmg: \"pyro_melt_plunging_avgHit\",\r\n  pyro_melt_skill_dmg: \"pyro_melt_skill_hit\",\r\n  pyro_melt_skill_crit_dmg: \"pyro_melt_skill_critHit\",\r\n  pyro_melt_skill_avg_dmg: \"pyro_melt_skill_avgHit\",\r\n  pyro_melt_burst_dmg: \"pyro_melt_burst_hit\",\r\n  pyro_melt_burst_crit_dmg: \"pyro_melt_burst_critHit\",\r\n  pyro_melt_burst_avg_dmg: \"pyro_melt_burst_avgHit\",\r\n  pyro_melt_ele_dmg: \"pyro_melt_hit\",\r\n  pyro_melt_ele_crit_dmg: \"pyro_melt_critHit\",\r\n  pyro_melt_ele_avg_dmg: \"pyro_melt_avgHit\",\r\n  cryo_melt_normal_dmg: \"cryo_melt_normal_hit\",\r\n  cryo_melt_normal_crit_dmg: \"cryo_melt_normal_critHit\",\r\n  cryo_melt_normal_avg_dmg: \"cryo_melt_normal_avgHit\",\r\n  cryo_melt_chraged_dmg: \"cryo_melt_chraged_hit\",\r\n  cryo_melt_chraged_crit_dmg: \"cryo_melt_chraged_critHit\",\r\n  cryo_melt_chraged_avg_dmg: \"cryo_melt_chraged_avgHit\",\r\n  cryo_melt_plunge_dmg: \"cryo_melt_plunging_hit\",\r\n  cryo_melt_plunge_crit_dmg: \"cryo_melt_plunging_critHit\",\r\n  cryo_melt_plunge_avg_dmg: \"cryo_melt_plunging_avgHit\",\r\n  cryo_melt_skill_dmg: \"cryo_melt_skill_hit\",\r\n  cryo_melt_skill_crit_dmg: \"cryo_melt_skill_critHit\",\r\n  cryo_melt_skill_avg_dmg: \"cryo_melt_skill_avgHit\",\r\n  cryo_melt_burst_dmg: \"cryo_melt_burst_hit\",\r\n  cryo_melt_burst_crit_dmg: \"cryo_melt_burst_critHit\",\r\n  cryo_melt_burst_avg_dmg: \"cryo_melt_burst_avgHit\",\r\n  cryo_melt_ele_dmg: \"cryo_melt_hit\",\r\n  cryo_melt_ele_crit_dmg: \"cryo_melt_critHit\",\r\n  cryo_melt_ele_avg_dmg: \"cryo_melt_avgHit\",\r\n\r\n  enemy_phy_res: \"physical_enemyRes_\",\r\n  enemy_phy_res_multi: \"physical_enemyRes_multi\",\r\n  enemy_phy_immunity: \"physical_enemyImmunity\",\r\n  anemo_enemy_ele_res: \"anemo_enemyRes_\",\r\n  anemo_enemy_ele_res_multi: \"anemo_enemyRes_multi\",\r\n  anemo_enemy_ele_immunity: \"anemo_enemyImmunity\",\r\n  geo_enemy_ele_res: \"geo_enemyRes_\",\r\n  geo_enemy_ele_res_multi: \"geo_enemyRes_multi\",\r\n  geo_enemy_ele_immunity: \"geo_enemyImmunity\",\r\n  electro_enemy_ele_res: \"electro_enemyRes_\",\r\n  electro_enemy_ele_res_multi: \"electro_enemyRes_multi\",\r\n  electro_enemy_ele_immunity: \"electro_enemyImmunity\",\r\n  hydro_enemy_ele_res: \"hydro_enemyRes_\",\r\n  hydro_enemy_ele_res_multi: \"hydro_enemyRes_multi\",\r\n  hydro_enemy_ele_immunity: \"hydro_enemyImmunity\",\r\n  pyro_enemy_ele_res: \"pyro_enemyRes_\",\r\n  pyro_enemy_ele_res_multi: \"pyro_enemyRes_multi\",\r\n  pyro_enemy_ele_immunity: \"pyro_enemyImmunity\",\r\n  cryo_enemy_ele_res: \"cryo_enemyRes_\",\r\n  cryo_enemy_ele_res_multi: \"cryo_enemyRes_multi\",\r\n  cryo_enemy_ele_immunity: \"cryo_enemyImmunity\",\r\n\r\n  ele_mas: \"eleMas\",\r\n  amp_reaction_base_multi: \"ampReactionBase_multi\",\r\n\r\n  enemy_level_multi: \"enemyLevel_multi\",\r\n  enemy_level: \"enemyLevel\"\r\n}\r\n/*\r\nconst same = [\r\n  hp, hp_, atk, atk_, def, def_, pyro_vaporize_multi, hydro_vaporize_multi, pyro_melt_multi, cryo_melt_multi,\r\n]\r\n\r\nconst removed = [\r\n  norm_atk_crit_multi, char_atk_crit_multi, norm_atk_bonus_multi, char_atk_bonus_multi, plunge_bonus_multi, skill_crit_multi, burst_crit_multi, skill_bonus_multi, burst_bonus_multi, phy_bonus_multi, anemo_ele_bonus_multi, geo_ele_bonus_multi, electro_ele_bonus_multi, hydro_ele_bonus_multi, pyro_ele_bonus_multi, cryo_ele_bonus_multi, crit_dmg_multi, crit_multi,\r\n]\r\n\r\nconst aded = [\r\n  plunging_critRate_, final_normal_critRate_, final_charged_critRate_, final_plunging_critRate_, final_skill_critRate_, final_burst_critRate_,\r\n]\r\n*/\r\n\r\n//renamed dmgMode to hitMode\r\nconst dmgModeToHitMode = {\r\n  avg_dmg: \"avgHit\",\r\n  dmg: \"hit\",\r\n  crit_dmg: \"critHit\"\r\n}\r\nexport { changes, dmgModeToHitMode }","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\nimport { changes as v2change, dmgModeToHitMode } from \"./dbV2KeyMap\";\r\nimport { loadFromLocalStorage, saveToLocalStorage } from \"./Util/Util\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  const dbVersion = getDatabaseVersion()\r\n  //edit the data before the database is populated\r\n  if (dbVersion < 2) {\r\n    //made characters unique, so need to convert character_{NUMBER} to char_{characterKey}. Will only save the 1st instance of a character.\r\n    Object.keys(localStorage).filter(key => key.startsWith(\"character_\")).forEach(key => {\r\n      const character = loadFromLocalStorage(key);\r\n      const { characterKey, equippedArtifacts = {} } = character\r\n      const dbKey = `char_${characterKey}`\r\n      if (localStorage.getItem(dbKey) === null) {\r\n        //if there is no character saved, create a new character\r\n        const { id, name, dmgMode, ...rest } = character\r\n        if (Array.isArray(rest?.buildSetting?.mainStat))\r\n          rest.buildSetting.mainStat = rest.buildSetting.mainStat.map(stat => stat in v2change ? v2change[stat] : stat)\r\n        if (typeof rest?.buildSetting?.statFilters === \"object\")\r\n          rest.buildSetting.statFilters = Object.fromEntries(Object.entries(rest.buildSetting.statFilters).map(([stat, value]) => [stat in v2change ? v2change[stat] : stat, value]))\r\n        rest.hitMode = dmgModeToHitMode[dmgMode] ?? Object.keys(dmgModeToHitMode)[0]\r\n        saveToLocalStorage(dbKey, rest)\r\n        //equip to the new character\r\n        Object.values(equippedArtifacts).forEach(artid => {\r\n          const art = loadFromLocalStorage(artid);\r\n          if (!art) return\r\n          art.location = characterKey\r\n          saveToLocalStorage(artid, art)\r\n        });\r\n      } else {\r\n        //if the character does exist, \"move\" the artifacts equipped to inventory\r\n        Object.values(equippedArtifacts).forEach(artid => {\r\n          const art = loadFromLocalStorage(artid);\r\n          if (!art) return\r\n          art.location = \"\"\r\n          saveToLocalStorage(artid, art)\r\n        });\r\n      }\r\n      //delete the old database\r\n      localStorage.removeItem(key)\r\n    })\r\n    //reset the ArtifactDisplay keys\r\n    const ArtifactDisplayState = loadFromLocalStorage(\"ArtifactDisplay.state\")\r\n    if (ArtifactDisplayState) {\r\n      if (ArtifactDisplayState.filterMainStatKey in v2change)\r\n        ArtifactDisplayState.filterMainStatKey = v2change[ArtifactDisplayState.filterMainStatKey]\r\n      ArtifactDisplayState.filterSubstats = ArtifactDisplayState.filterSubstats.map(stat => stat in v2change ? v2change[stat] : stat)\r\n      saveToLocalStorage(\"ArtifactDisplay.state\", ArtifactDisplayState)\r\n    }\r\n  }\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  const charDBJustPopualted = CharacterDatabase.populateDatebaseFromLocalStorage(),\r\n    artDBJustPopualted = ArtifactDatabase.populateDatebaseFromLocalStorage()\r\n  if (!charDBJustPopualted && !artDBJustPopualted) return\r\n\r\n  Object.values(ArtifactDatabase.getArtifactDatabase()).forEach(art => {\r\n    let valid = true\r\n\r\n    //verify the linking of artifacts and characters\r\n    if (art.location) {\r\n      const locationChar = CharacterDatabase.get(art.location)\r\n      if (locationChar) {\r\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\r\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\r\n          CharacterDatabase.equipArtifact(art.location, art)\r\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\r\n          art.location = \"\"\r\n          valid = false\r\n        }\r\n      } else {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (dbVersion < 1) {\r\n      //generate artifact efficiency again for artifacts\r\n      Artifact.substatsValidation(art)\r\n      valid = false\r\n\r\n      //there was a bug that saved the numStars as strings. convert to number.\r\n      if (typeof art.numStars === \"string\") {\r\n        art.numStars = parseInt(art.numStars)\r\n        valid = false\r\n      }\r\n\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (dbVersion < 2) {\r\n      if (art.mainStatKey in v2change) {\r\n        art.mainStatKey = v2change[art.mainStatKey]\r\n        valid = false\r\n      }\r\n      art?.substats?.forEach((obj, i) => {\r\n        if (obj.key in v2change) {\r\n          art.substats[i].key = v2change[obj.key]\r\n          valid = false\r\n        }\r\n      })\r\n    }\r\n\r\n    //Update any invalid artifacts in DB\r\n    if (!valid) ArtifactDatabase.updateArtifact(art)\r\n  })\r\n\r\n  let chars = CharacterDatabase.getCharacterDatabase();\r\n  Object.values(chars).forEach(character => {\r\n    let valid = true;\r\n    const { characterKey } = character\r\n    //verify character database equipment validity\r\n    if (!character.equippedArtifacts) {\r\n      character.equippedArtifacts = {}\r\n      valid = false\r\n    }\r\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\r\n      const equippedArt = ArtifactDatabase.get(artid)\r\n      if (equippedArt && equippedArt.location !== characterKey) //the artifact doesnt have the right location...\r\n        ArtifactDatabase.moveToNewLocation(artid, characterKey)\r\n      if (!equippedArt) {\r\n        valid = false\r\n        character.equippedArtifacts[slotKey] = \"\"\r\n      }\r\n    })\r\n\r\n    if (dbVersion < 1) {\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      }) ?? []\r\n\r\n      //check for dmgMode\r\n      if (!character.hitMode) {\r\n        character.hitMode = \"hit\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    //update any invalid characters in DB\r\n    if (!valid) CharacterDatabase.updateCharacter(character)\r\n  })\r\n  setDatabaseVersion(2)\r\n}\r\nconst getDatabaseVersion = (defVal = 0) =>\r\n  parseInt(loadFromLocalStorage(\"db_ver\") ?? defVal)\r\n\r\nconst setDatabaseVersion = (version) =>\r\n  saveToLocalStorage(\"db_ver\", version)\r\n\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Character from \"../Character/Character\";\r\nimport CharacterDatabase from \"../Character/CharacterDatabase\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    // names must be equal\r\n    return 0;\r\n  })).map(characterKey =>\r\n    <Dropdown.Item key={characterKey} onClick={() => onSelect(characterKey)}>\r\n      {Character.getName(characterKey)}\r\n    </Dropdown.Item>)\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n};\r\n\r\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Image, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { getTalentStatKey } from \"../../Build/Build\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nfunction ReactionToggle({ character: { characterKey, reactionMode = \"none\" }, setReactionMode, className }) {\r\n  reactionMode === null && (reactionMode = \"none\")\r\n  let charEleKey = Character.getElementalKey(characterKey)\r\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return [\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup className={className}\r\n    type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setReactionMode(val === \"none\" ? null : val)}>\r\n    <ToggleButton value={\"none\"} variant={reactionMode === \"none\" ? \"success\" : \"primary\"}>No Reactions</ToggleButton >\r\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_vaporize\"} variant={reactionMode === \"pyro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Pyro) <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_melt\"} variant={reactionMode === \"pyro_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Pyro) <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"hydro\" && <ToggleButton value={\"hydro_vaporize\"} variant={reactionMode === \"hydro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Hydro) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"cryo\" && <ToggleButton value={\"cryo_melt\"} variant={reactionMode === \"cryo_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Cryo) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n  </ToggleButtonGroup>\r\n}\r\nfunction HitModeToggle({ hitMode, setHitMode, className }) {\r\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={setHitMode} className={className}>\r\n    <ToggleButton value=\"avgHit\" variant={hitMode === \"avgHit\" ? \"success\" : \"primary\"}>Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\" variant={hitMode === \"hit\" ? \"success\" : \"primary\"}>Normal Hit, No Crit</ToggleButton>\r\n    <ToggleButton value=\"critHit\" variant={hitMode === \"critHit\" ? \"success\" : \"primary\"}>Crit Hit DMG</ToggleButton>\r\n  </ToggleButtonGroup>\r\n}\r\n\r\nexport default function DamageOptionsAndCalculation({ character, character: { characterKey, hitMode }, setState, setOverride, newBuild, equippedBuild }) {\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild\r\n\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button onClick={decoratedOnClick} >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"normal\", \"charged\", \"plunging\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(getTalentStatKey(key, build.finalStats)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(getTalentStatKey(key, build.finalStats, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(getTalentStatKey(\"charged\", build.finalStats, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(getTalentStatKey(key, build.finalStats)))\r\n    //show elemental interactions\r\n    keys.push(...(ElementToReactionKeys[Character.getElementalKey(characterKey)] || []))\r\n    let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") keys.push(\"shattered_hit\")\r\n\r\n    //search for dependency\r\n    return Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, keys), build?.finalStats?.modifiers)\r\n  }\r\n  return <Accordion>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span className=\"d-block\">Damage Calculation Options</span>\r\n            <small>Expand below to edit enemy details.</small>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {/* TODO reaction interaction UI */}\r\n            <ReactionToggle {...{ character, setReactionMode: r => setState({ reactionMode: r }) }} />\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"1\">\r\n        <Card.Body>\r\n          <Row className=\"mb-2\"><Col>\r\n            <Button variant=\"warning\" >\r\n              <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                To get the specific resistance values of enemies, please visit the wiki.\r\n          </a>\r\n            </Button >\r\n          </Col></Row>\r\n          <Row>\r\n            <Col xs={12} xl={6} className=\"mb-2\">\r\n              <StatInput\r\n                name={<b>Enemy Level</b>}\r\n                value={Character.getStatValueWithOverride(character, \"enemyLevel\")}\r\n                placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n                defaultValue={Character.getBaseStatValue(character, \"enemyLevel\")}\r\n                onValueChange={(val) => setOverride?.(\"enemyLevel\", val)}\r\n              />\r\n            </Col>\r\n            {Character.getElementalKeys().map(eleKey => {\r\n              let statKey = eleKey === \"physical\" ? \"physical_enemyRes_\" : `${eleKey}_enemyRes_`\r\n              let immunityStatKey = eleKey === \"physical\" ? \"physical_enemyImmunity\" : `${eleKey}_enemyImmunity`\r\n              let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n              return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                <StatInput\r\n                  prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                    <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                </Button>}\r\n                  name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  placeholder={Stat.getStatNameRaw(statKey)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                  onValueChange={(val) => setOverride?.(statKey, val)}\r\n                  disabled={elementImmunity}\r\n                />\r\n              </Col>\r\n            })}\r\n          </Row>\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n\r\n    <Card bg=\"lightcontent\" text=\"lightfont\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span className=\"d-block\">Damage Calculation Formulas</span>\r\n            <small>Expand below to see calculation details.</small>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <HitModeToggle {...{ hitMode, setHitMode: m => setState({ hitMode: m }) }} />\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"2\">\r\n        <Card.Body>\r\n          <Row>\r\n            {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\r\n              <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                <Card.Header className=\"p-2\">\r\n                  {Stat.printStat(key, build.finalStats)}\r\n                </Card.Header>\r\n                <Card.Body className=\"p-2\">\r\n                  <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            )}\r\n          </Row>\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n  </Accordion>\r\n}\r\nexport {\r\n  HitModeToggle,\r\n  ReactionToggle,\r\n};\r\n","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Character from '../Character/Character';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, artifactObj, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId && !artifactObj) return null;\r\n  const art = artifactObj ? artifactObj : ArtifactDatabase.get(artifactId);\r\n  if (!art) return null;\r\n  let { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location = \"\", lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  let mainStatLevel = assumeFull ? numStars * 4 : level\r\n  let assFullColor = assumeFull && level !== numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\r\n  let artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\r\n  const equipOnChar = (charKey) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charKey)\r\n    forceUpdate?.()\r\n  }\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\r\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let numRolls = stat?.rolls?.length || 0\r\n          let efficiency = stat?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge percent={currentEfficiency} valid={artifactValid}>\r\n          {currentEfficiency?.toFixed(2) ?? currentEfficiency + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge percent={maximumEfficiency} valid={artifactValid}>\r\n          {maximumEfficiency?.toFixed(2) ?? maximumEfficiency + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{Character.getName(location, \"Inventory\")}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={ckey => equipOnChar(ckey)} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><b>{Character.getName(location, \"Inventory\")}</b></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={location}\r\n                  style={location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    art.lock = !lock\r\n                    ArtifactDatabase.updateArtifact(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(lock || location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onValueChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText = \"\", diffText = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\r\n\r\n  return <div>\r\n    <b>{label}</b>\r\n    <span className=\"float-right text-right\">{oldText}{diff ? \" \" : \"\"}{diffText}</span>\r\n  </div>\r\n}\r\nexport default function StatDisplay({ character, character: { characterKey }, equippedBuild, newBuild, editable, statKey }) {\r\n  let val, oldVal, fixed, unit, variant;\r\n  let label = \"\"\r\n  if (typeof statKey === \"string\") {//basic statKey\r\n    if (newBuild && equippedBuild) {//comparable\r\n      //newbuild -> val\r\n      //equippedbuild ->old\r\n      val = newBuild?.finalStats?.[statKey] ?? 0\r\n      oldVal = equippedBuild?.finalStats?.[statKey] ?? 0\r\n    } else {\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      //build ->val\r\n      val = build?.finalStats?.[statKey] ?? 0\r\n      //statvaluewith override -> old\r\n      const invalid = \"invalid\"//can't use undeinfed as the defVal, since I want undefined for invalid numbers.\r\n      oldVal = Character.getStatValueWithOverride(character, statKey, invalid)\r\n      oldVal === invalid && (oldVal = undefined)\r\n      if (statKey === \"finalHP\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterHP\")\r\n      else if (statKey === \"finalDEF\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterDEF\")\r\n      else if (statKey === \"finalATK\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterATK\") + Character.getStatValueWithOverride(character, \"weaponATK\")\r\n    }\r\n    unit = Stat.getStatUnit(statKey)\r\n    fixed = Stat.fixedUnit(statKey)\r\n    label = <span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>\r\n  } else {//from character sheet\r\n    const build = newBuild ? newBuild : equippedBuild\r\n    const { talentKey, sectionIndex, fieldIndex } = statKey\r\n    const field = Character.getTalentField(characterKey, talentKey, sectionIndex, fieldIndex)\r\n    const labelVariant = Character.getTalentFieldValue(field, \"variant\", talentKey, build.finalStats)\r\n    label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", talentKey, build.finalStats)}</span>\r\n    fixed = Character.getTalentFieldValue(field, \"fixed\", talentKey, build.finalStats, 0)\r\n    val = Character.getTalentFieldValue(field, \"formula\", talentKey, build.finalStats)\r\n    if (newBuild && equippedBuild) {//comparable\r\n      oldVal = Character.getTalentFieldValue(field, \"formula\", talentKey, equippedBuild.finalStats)\r\n    }\r\n  }\r\n\r\n  if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label }} />\r\n}","import { OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\n\r\nconst WIPComponent = ({ children }) =>\r\n  <OverlayTrigger\r\n    overlay={<Tooltip>Work In Progress</Tooltip>}\r\n  >\r\n    <span>\r\n      {children}\r\n    </span>\r\n  </OverlayTrigger>\r\n\r\nexport default WIPComponent","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","\r\n//take the new statsDisplayKeys, and display the stats.\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport Character from \"../Character\"\r\n\r\nexport default function StatDisplayComponent({ character, character: { characterKey }, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }) {\r\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([talentKey, fields]) => {\r\n    let header = \"\"\r\n    if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n    else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n    else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n    else header = Character.getTalentName(characterKey, talentKey, talentKey)\r\n    return <Col key={talentKey} className=\"mb-2\" xs={12} md={6} xl={4}>\r\n      <Card bg={cardbg} text=\"lightfont\" className=\"h-100\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body>\r\n          {fields.map(field => <StatDisplay key={JSON.stringify(field)} {...{ character, equippedBuild, newBuild, editable, statKey: field }} />)}\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  })}</Row>\r\n}","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\r\nimport { Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport Stat from \"../../Stat\";\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\nimport DamageOptionsAndCalculation from './DamageOptionsAndCalculation';\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState, setOverride }) {\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(characterKey)\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  return <>\r\n    {Character.hasTalentPage(characterKey) && <Row><Col xs={12} className=\"mb-2\">\r\n      <DamageOptionsAndCalculation {...{ character, setState, setOverride, newBuild, equippedBuild }} />\r\n    </Col></Row>}\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Body>\r\n            <StatDisplayComponent {...{ character, equippedBuild, newBuild, statsDisplayKeys: statKeys, build, forceUpdate, setState, setOverride, editable }} />\r\n          </Card.Body>\r\n          {newBuild ? <Card.Footer>\r\n            <Button onClick={() => {\r\n              Character.equipArtifacts(characterKey, newBuild.artifactIds)\r\n              forceUpdate?.()\r\n            }}>Equip All artifacts to current character</Button>\r\n            {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n          </Card.Footer> : null}\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Artifact.getSlotKeys().map(slotKey =>\r\n            build.artifactIds[slotKey] ? <Col sm={6} lg={4} key={build.artifactIds[slotKey]} className=\"mb-2\">\r\n              <ArtifactCard artifactId={build.artifactIds[slotKey]} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport CustomFormControl from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"characterLevel\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <CustomFormControl onValueChange={(val) => setOverride(\"characterLevel\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"characterLevel\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction StatItem({ statKey, val }) {\r\n  if (!statKey) return null\r\n  return <Col xs={12} lg={6} className=\"px-3\">\r\n    <span><b>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</b></span>\r\n    <span className={`float-right text-right text-${Stat.getStatVariant(statKey)}`} >{val?.toFixed?.(Stat.fixedUnit(statKey)) || val}{Stat.getStatUnit(statKey)}</span>\r\n  </Col>\r\n}\r\nfunction WeaponStatsCard({ title, stats = {}, finalStats = {} }) {\r\n  if (Object.keys(stats ?? {}).length === 0) return null\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <Card.Body className=\"py-2 px-0\"><Row>\r\n      {Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? <React.Fragment key={key} >{Object.entries(val ?? {}).map(([mkey, modifier]) =>\r\n        <StatItem key={mkey} statKey={mkey} val={Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0)} />)}</React.Fragment>\r\n        : <StatItem key={key} statKey={key} val={val} />)}\r\n    </Row></Card.Body>\r\n  </Card>\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon = {} }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex, undefined)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum, undefined)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinement</span>\r\n                </Dropdown.ItemText>\r\n                <Dropdown.Divider />\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build?.finalStats, character)}</p>\r\n            <WeaponStatsCard title={\"Main Stats\"} stats={{ atk: weaponDisplayMainVal, [subStatKey]: weaponDisplaySubVal }} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Bonus Stats\"} stats={weaponBonusStats} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Conditional Stats\"} stats={conditionalStats} finalStats={build?.finalStats} />\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  const { editable, character, setOverride, equippedBuild, newBuild } = props\r\n\r\n  const [editing, SetEditing] = useState(false)\r\n  const [editingOther, SetEditingOther] = useState(false)\r\n  const [editingMisc, SetEditingMisc] = useState(false)\r\n\r\n  const additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"characterHP\", \"hp\", \"hp_\", \"characterATK\", \"atk\", \"atk_\", \"characterDEF\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = []\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_dmg_`)\r\n    otherStatKeys.push(`${ele}_res_`)\r\n  })\r\n  otherStatKeys.push(\"stamina\", \"incHeal_\", \"powShield_\")\r\n\r\n  const miscStatkeys = [\r\n    \"normal_dmg_\", \"normal_critRate_\",\r\n    \"charged_dmg_\", \"charged_critRate_\",\r\n    \"skill_dmg_\", \"skill_critRate_\",\r\n    \"burst_dmg_\", \"burst_critRate_\",\r\n    \"dmg_\", \"moveSPD_\", \"atkSPD_\", \"weakspotDMG_\"]\r\n\r\n  const specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  const specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const isPercentSpecialStatSelect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                <CustomFormControl float={isPercentSpecialStatSelect}\r\n                  placeholder=\"Character Special Stat\"\r\n                  value={Character.getStatValueWithOverride(character, \"specializedStatVal\")}\r\n                  onValueChange={(value) => setOverride(\"specializedStatVal\", value)} />\r\n                {isPercentSpecialStatSelect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {displayStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{otherStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingMisc ? \"danger\" : \"info\"} onClick={() => SetEditingMisc(!editingMisc)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingMisc ? faSave : faEdit} /> {editingMisc ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingMisc ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {miscStatkeys.map(statKey =>\r\n              <Col xl={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{miscStatkeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n  </>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from 'react';\r\nimport { useState } from \"react\";\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport DamageOptionsAndCalculation from \"./DamageOptionsAndCalculation\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <DamageOptionsAndCalculation {...{ character, setState, setOverride, newBuild, equippedBuild }} />\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {Character.getTalent(characterKey, \"sprint\", false) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey, reactionMode = \"none\" }, newBuild, equippedBuild, setState }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let charEleKey = Character.getElementalKey(characterKey)\r\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row className=\"mb-n2\">\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele stats={build?.finalStats} /></Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-superconduct\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-electrocharged\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-overloaded\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>\r\n}\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-0\">\r\n    <DropdownButton size=\"sm\" title={swirlEleToDisplay[ele]} className=\"d-inline-block\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <span className={`text-${ele} p-2`}> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  const information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-shattered\">{Stat.getStatName(sKey)} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ stats }) {\r\n  const sKey = \"crystalize_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-crystalize\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nfunction modifiersToFields(modifiers, finalStats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    value: Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0),\r\n    formulaText: <span>{Object.entries(modifier ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, finalStats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey),\r\n    unit: Stat.getStatUnit(mStatKey)\r\n  }))\r\n}\r\nfunction statsToFields(stats, finalStats = {}) {\r\n  return Object.entries(stats).map(([statKey, statVal]) =>\r\n    statKey === \"modifiers\" ? modifiersToFields(statVal, finalStats) : {\r\n      text: Stat.getStatName(statKey),\r\n      variant: Stat.getStatVariant(statKey),\r\n      value: statVal,\r\n      fixed: Stat.fixedUnit(statKey),\r\n      unit: Stat.getStatUnit(statKey)\r\n    }\r\n  ).flat()\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, talentLevelKeys, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n\r\n  let talentLvlKey = 0\r\n  if (talentKey in talentLevelKeys) {\r\n    const talentLvlKeyRaw = talentLevelKeys[talentKey]\r\n    const levelBoost = Character.getTalentLevelBoost(characterKey, talentKey, constellation)\r\n    talentLvlKey = talentLvlKeyRaw + levelBoost\r\n    if (editable) {\r\n      const setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        const stateTalentLevelKeys = state.talentLevelKeys || {}\r\n        stateTalentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys: stateTalentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  const statsEle = talentStats && <Row><Col>\r\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {statsToFields(talentStats, build?.finalStats).map((field, i) =>\r\n          <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            let conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            conditionalFields = [...Character.getTalentConditionalFields(conditional, conditionalNum, []), ...statsToFields(conditionalStats, build?.finalStats)]\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Col xs={12}>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i} index={i} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        }\r\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\r\n          <div className=\"mb-2\">{talentText}</div>\r\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n        </Col>{conditionalEle}</Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay({ character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats)\r\n\r\n  let fieldVariant = field.variant || \"\"\r\n  if (typeof fieldVariant === \"function\")\r\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats)\r\n\r\n  let fieldBasic = field.formulaText\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = null\r\n  if (field.value)\r\n    fieldVal = typeof field.value === \"function\" ? field.value?.(talentLvlKey, build.finalStats) : field.value\r\n  else if (typeof field.formula === \"function\")\r\n    fieldVal = field?.formula?.(talentLvlKey, build.finalStats)?.[0]?.(build.finalStats)\r\n\r\n  let fixedVal = field.fixed || 0\r\n  const unit = typeof field.unit === \"function\" ? field.unit?.(talentLvlKey, build.finalStats) : (field.unit ?? \"\")\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.formula?.(talentLvlKey, equippedBuild.finalStats)?.[0]?.(equippedBuild.finalStats)\r\n\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats)?.toFixed?.(fixedVal))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) || fieldVal}{unit}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}\r\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, Image, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport WIPComponent from '../Components/WIPComponent';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = CharacterDisplayCard.getInitialState()\r\n    const { characterKey } = props\r\n    if (characterKey) {\r\n      const char = CharacterDatabase.get(characterKey) ?? { characterKey, weapon: CharacterDisplayCard.getIntialWeapon(characterKey) }\r\n      this.state = { ...this.state, ...char }\r\n    }\r\n  }\r\n\r\n  static initialState = {\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    hitMode: \"hit\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => deepClone(CharacterDisplayCard.initialState)\r\n  //UI will not update if the character is updated in DB. Components will have to call this to update this UI.\r\n  forceUpdateComponent = () => {\r\n    if (this.state.characterKey)\r\n      this.setState(CharacterDatabase.get(this.state.characterKey))\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setCharacterKey = (characterKey) => {\r\n    let state = CharacterDisplayCard.getInitialState()\r\n    let char = CharacterDatabase.get(characterKey)\r\n    if (char) state = { ...state, ...char }\r\n    else {\r\n      state = { ...state, characterKey, weapon: CharacterDisplayCard.getIntialWeapon(characterKey) }\r\n      this.updateCharacter(this.state)\r\n    }\r\n    this.setState(state)\r\n    this.props?.setCharacterKey?.(characterKey)\r\n  }\r\n\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  updateCharacter(state) {\r\n    state = deepClone(state)\r\n    delete state.compareAgainstEquipped\r\n    CharacterDatabase.updateCharacter(state)\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.characterKey !== this.props.characterKey && this.props.characterKey !== this.state.characterKey)\r\n      this.setCharacterKey(this.props.characterKey)\r\n    if (this.props.editable && this.state.characterKey) {\r\n      //save this.state as character to character db.\r\n      this.updateCharacter(this.state)\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose, tabName } = this.props\r\n    let character = this.state\r\n    //transfer the hitmode/reactions over \r\n    if (newBuild?.finalStats) {\r\n      newBuild = deepClone(newBuild)\r\n      newBuild.finalStats.hitMode = character.hitMode;\r\n      newBuild.finalStats.reactionMode = character.reactionMode;\r\n    }\r\n\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = characterKey ? <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span> : <span>Select a Character</span>\r\n    const commonPaneProps = { character, newBuild, equippedBuild: !newBuild || compareAgainstEquipped ? equippedBuild : undefined, editable, setState: u => this.setState(u), setOverride: this.setOverride, forceUpdate: this.forceUpdateComponent }\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"} className=\"mr-auto\">\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown as={ButtonGroup}>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} disabled={!characterKey} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"characterLevel\")}</span>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      {Boolean(characterKey) && <Card.Body>\r\n        <Tab.Container defaultActiveKey={tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\")} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              {(process.env.NODE_ENV !== \"development\" && !Character.hasTalentPage(characterKey)) ?\r\n                <WIPComponent>\r\n                  <Nav.Link eventKey=\"talent\" disabled>Talents <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n                </WIPComponent> :\r\n                <Nav.Link eventKey=\"talent\">Talents</Nav.Link>\r\n              }\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <WIPComponent>\r\n                <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n              </WIPComponent>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setConstellation={this.setConstellation}\r\n                {...commonPaneProps}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ ...commonPaneProps, newBuild: undefined, equippedBuild, }} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...commonPaneProps} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...commonPaneProps} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>}\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"children\", \"type\", \"name\", \"value\", \"onChange\"]);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    if (!onChange) {\n      return;\n    }\n\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive && onChange) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/React.createElement(ButtonGroup, _extends({}, controlledProps, {\n    ref: ref,\n    toggle: true\n  }), map(children, function (child) {\n    var values = getValues();\n    var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n\n    var handler = function handler(e) {\n      return handleToggle(childVal, e);\n    };\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      type: type,\n      name: child.name || name,\n      checked: values.indexOf(childVal) !== -1,\n      onChange: chainFunction(childOnChange, handler)\n    });\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;","import { Container } from \"react-bootstrap\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport '../StatDependency'\r\nexport default function TestDisplay() {\r\n  DatabaseInitAndVerify()\r\n  return <Container>\r\n    <CharacterDisplayCard editable characterKey=\"amber\" tabName=\"talent\" />\r\n  </Container>\r\n}\r\n","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\n\r\n//multiplies every numberical value in the obj by a multiplier.\r\nfunction objMultiplication(obj, multi) {\r\n  Object.keys(obj).forEach(prop => {\r\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\r\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\r\n  })\r\n}\r\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\r\nconst getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance,\r\n  objMultiplication,\r\n  getObjectKeysRecursive\r\n}","import { Formulas, StatData } from \"./StatData\"\r\nimport { ReactionMatrix, hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\r\n    let formulaKeys = Object.keys(FormulaText)\r\n    let newModifiersKeys = Object.keys(modifiers).filter(x => !formulaKeys.includes(x))\r\n    return [...newModifiersKeys, ...formulaKeys].filter((key) => statList.includes(key))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"characterLevel\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"characterLevel\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n// Base Formula\r\n\r\nconst FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\r\n}\r\n\r\n// Enemy RES\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\n// Crit Rate\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\n// Hit\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_elemental_hit_multi`] = (o) => <span>( 100% + {f(o, `dmg_`)} * {f(o, `${ele}_dmg_`)} ) * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n  FormulaText[`${ele}_elemental_hit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_hit_multi`)}</span>\r\n  FormulaText[`${ele}_elemental_critHit_multi`] = (o) => <span>( 100% + {f(o, `critDMG_`)} ) * {f(o, `${ele}_elemental_hit_multi`)}</span>\r\n  FormulaText[`${ele}_elemental_critHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_critHit_multi`)}</span>\r\n  FormulaText[`${ele}_elemental_avgHit_multi`] = (o) => <span>( 100% + {f(o, `critDMG_`)} * {f(o, `critRate_`)} ) * {f(o, `${ele}_elemental_hit_multi`)}</span>\r\n  FormulaText[`${ele}_elemental_avgHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_avgHit_multi`)}</span>\r\n\r\n  Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>( 100% + {f(o, `dmg_`)} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)} ) * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_hit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>( 100% + {f(o, `critDMG_`)} ) * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_critHit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>( 100% + {f(o, `critDMG_`)} * {f(o, `final_${move}_critRate_`)} ) * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_avgHit_multi`)}</span>\r\n  })\r\n})\r\n\r\n// Reaction\r\n\r\nObject.assign(FormulaText, {\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n})\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    // Move them to the right position\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${reaction}_elemental_${type}`] = (o) => <span>{f(o, `${ele}_elemental_${type}`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, `${ele}_${move}_${type}`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n\r\nObject.assign(FormulaText, {\r\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n})\r\nObject.entries(transformativeReactions).forEach(([reaction, { variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => ReactionMatrix[reaction].map((val, i) => reactionMatrixElementRenderer(o, val, i))\r\n  if (Object.entries(variants).length === 1) {\r\n    const [[ ele ]] = Object.entries(variants)\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>  \r\n  } else {\r\n    Object.keys(variants).forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>  \r\n    })    \r\n  }\r\n})\r\nObject.assign(FormulaText, {\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_multi: (o) => ReactionMatrix[\"crystalize\"].map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n})\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n","import ElementalData from \"../Data/ElementalData\"\r\n\r\n/**\r\n * Generate all set of artifacts-by-slots based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n *\r\n */\r\nexport function artifactSetPermutations(artifactsBySlot, setFilters) {\r\n  const setKeys = new Set(setFilters.map(i => i.key)), filteredArtifactsBySlot = {}\r\n  const slotKeys = Object.keys(artifactsBySlot)\r\n\r\n  for (const slotKey of slotKeys) {\r\n    let artifactsBySet = {}\r\n    for (const artifact of artifactsBySlot[slotKey]) {\r\n      if (setKeys.has(artifact.setKey)) {\r\n        if (artifactsBySet[artifact.setKey]) artifactsBySet[artifact.setKey].push(artifact)\r\n        else artifactsBySet[artifact.setKey] = [artifact]\r\n      } else {\r\n        if (artifactsBySet[null]) artifactsBySet[null].push(artifact)\r\n        else artifactsBySet[null] = [artifact]\r\n      }\r\n    }\r\n    filteredArtifactsBySlot[slotKey] = Object.freeze(artifactsBySet)\r\n  }\r\n\r\n  const setCount = {}, accu = {}, result = []\r\n\r\n  function slotPerm(index) {\r\n    if (index >= slotKeys.length) {\r\n      for (const { key, num } of setFilters)\r\n        if ((setCount[key] ?? 0) < num)\r\n          return\r\n      result.push({ ...accu })\r\n      return\r\n    }\r\n\r\n    const slotKey = slotKeys[index]\r\n    let artifactsBySet = filteredArtifactsBySlot[slotKey]\r\n    for (const setKey in artifactsBySet) {\r\n      setCount[setKey] = (setCount[setKey] ?? 0) + 1\r\n      accu[slotKey] = artifactsBySet[setKey]\r\n      slotPerm(index + 1)\r\n      setCount[setKey] -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0)\r\n  return result\r\n}\r\n\r\n/**\r\n * Compute number of all artifact permutations based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n */\r\nexport function calculateTotalBuildNumber(artifactsBySlot, setFilters) {\r\n  return artifactSetPermutations(artifactsBySlot, setFilters).reduce((accu, artifactsBySlot) =>\r\n    accu + Object.entries(artifactsBySlot).reduce((accu, artifacts) => accu * artifacts[1].length, 1)\r\n    , 0)\r\n}\r\n\r\n/**\r\n * @callback artifactCallback\r\n * @param {Object.<artifactKey, artifact>} artifacts - the list of artifacts\r\n * @param {stats} stats - the total stats for the artifacts\r\n */\r\n\r\n/**\r\n * Generate all artifact permutations and accumulate the stats\r\n * @param {stats} initialStats - initial stats before any artifact is added\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - the list of the set effects\r\n * @param {artifactCallback} callback - the functions called with each permutation\r\n */\r\nexport function artifactPermutations(initialStats, artifactsBySlot, artifactSetEffects, callback) {\r\n  const slotKeys = Object.keys(artifactsBySlot), setCount = {}, accu = {}\r\n  function slotPerm(index, stats) {\r\n    if (index >= slotKeys.length) {\r\n      callback(accu, stats)\r\n      return\r\n    }\r\n\r\n    let slotKey = slotKeys[index]\r\n    for (const artifact of artifactsBySlot[slotKey]) {\r\n      let newStats = { ...stats }\r\n      accumulate(slotKey, artifact, setCount, accu, newStats, artifactSetEffects)\r\n      slotPerm(index + 1, newStats)\r\n      setCount[artifact.setKey] -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0, initialStats)\r\n}\r\n\r\nfunction accumulate(slotKey, art, setCount, accu, stats, artifactSetEffects) {\r\n  let setKey = art.setKey\r\n  accu[slotKey] = art\r\n  setCount[setKey] = (setCount[setKey] ?? 0) + 1\r\n\r\n  // Add artifact stats\r\n  if (art.mainStatKey in stats) stats[art.mainStatKey] += art.mainStatVal\r\n  art.substats.forEach((substat) => {\r\n    if (substat?.key in stats) stats[substat.key] += substat.value\r\n  })\r\n\r\n  // Add set effects\r\n  let setEffect = artifactSetEffects[setKey]?.[setCount[setKey]]\r\n  setEffect && Object.entries(setEffect).forEach(([statKey, val]) => {\r\n    if (statKey in stats) stats[statKey] += val\r\n  })\r\n}\r\n\r\n/**\r\n  * Create statKey in the form of ${ele}_elemental_${type} for elemental DMG, ${ele}_${src}_${type} for talent DMG.\r\n  * @param {string} skillKey - The DMG src. Can be \"norm\",\"skill\". Use an elemental to specify a elemental hit \"physical\" -> physical_elemental_{type}. Use \"elemental\" here to specify a elemental hit of character's element/reactionMode\r\n  * @param {*} stats - The character. Will extract hitMode, autoInfused...\r\n  * @param {*} elemental - Override the hit to be the character's elemental, that is not part of infusion.\r\n  */\r\nexport function getTalentStatKey(skillKey, stats, elemental = false) {\r\n  const { hitMode = \"\", autoInfused = false, reactionMode = null, characterEle = \"anemo\", weaponType = \"sword\" } = stats\r\n  if (Object.keys(ElementalData).includes(skillKey)) return `${skillKey}_elemental_${hitMode}`//elemental DMG\r\n  if (!elemental) elemental = weaponType === \"catalyst\" || autoInfused\r\n  let eleKey = \"physical\"\r\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n    eleKey = (reactionMode ? reactionMode : characterEle)\r\n  return `${eleKey}_${skillKey}_${hitMode}`\r\n}\r\n\r\nexport function getTalentStatKeyVariant(skillKey, stats, elemental = false) {\r\n  if (Object.keys(ElementalData).includes(skillKey)) return skillKey\r\n  const { autoInfused = false, characterEle = \"anemo\", weaponType = \"sword\" } = stats\r\n  let { reactionMode } = stats\r\n  //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n  if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n    reactionMode = \"vaporize\"\r\n  else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n    reactionMode = \"melt\"\r\n  if (!elemental) elemental = weaponType === \"catalyst\" || autoInfused\r\n  let eleKey = \"physical\"\r\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n    eleKey = (reactionMode ? reactionMode : characterEle)\r\n  return eleKey\r\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return this.getLevel(levelKey)\r\n    if (statKey.includes(\"enemyRes_\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getElementalKeysWithoutPhysical = () => this.getElementalKeys().filter(e => e !== \"physical\")\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentDocumentSections = (charKey, talentKey, defVal = []) => {\r\n    const character = CharacterDatabase.get(charKey);\r\n    if (!character) return defVal\r\n    const { constellation = 0, levelKey = Object.keys(LevelsData)[0] } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n    return this.getTalentDocument(charKey, talentKey).map(section => typeof section === \"function\" ? section(constellation, ascension) : section)\r\n  }\r\n  static getTalentField = (charKey, talentKey, sectionIndex, fieldIndex, defVal = {}) => {\r\n    const character = CharacterDatabase.get(charKey);\r\n    if (!character) return defVal\r\n    const { constellation = 0, levelKey = Object.keys(LevelsData)[0] } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n    const field = this.getTalentDocumentSections(charKey, talentKey)?.[sectionIndex]?.fields?.[fieldIndex]\r\n    if (!field) return defVal\r\n    return typeof field === \"function\" ? field(constellation, ascension) : field\r\n  }\r\n  static getTalentFieldValue = (field, key, talentKey, stats = {}, defVal = \"\") => {\r\n    if (!field?.[key]) return defVal\r\n    if (key === \"formula\")\r\n      return field?.formula?.(stats.talentLevelKeys[talentKey], stats)?.[0]?.(stats)\r\n    return typeof field?.[key] === \"function\" ? field[key](stats.talentLevelKeys[talentKey], stats) : field[key]\r\n  }\r\n\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    const sections = this.getTalentDocumentSections(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of sections) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  //look up the formula, and generate the formulaPath to send to worker.\r\n  static getFormulaPath(characterKey, talentKey, formula) {\r\n    const formulaDB = this.getCDataObj(characterKey)?.formula\r\n    if (!formulaDB) return\r\n    let formulaKey\r\n    if (talentKey === \"auto\") {\r\n      for (const tk of [\"normal\", \"charged\", \"plunging\"]) {\r\n        ([formulaKey,] = Object.entries(formulaDB?.[tk] ?? {}).find(([, value]) => value === formula) ?? [])\r\n        if (formulaKey) {\r\n          talentKey = tk\r\n          break;\r\n        }\r\n      }\r\n    } else ([formulaKey,] = Object.entries(formulaDB?.[talentKey] ?? {}).find(([, value]) => value === formula) ?? [])\r\n    if (!formulaKey) return\r\n    return { characterKey, talentKey, formulaKey }\r\n  }\r\n\r\n\r\n  static hasTalentPage = (characterKey) => Boolean(Character.getCDataObj(characterKey)?.talent)\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = { basicKeys: [] }) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    const isAutoElemental = Character.isAutoElemental(characterKey)\r\n    const isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    if (!isAutoElemental)\r\n      basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = ElementToReactionKeys[eleKey]\r\n    const weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    if (this.hasTalentPage(characterKey)) {\r\n      const charFormulas = {}\r\n      Object.keys(Character.getCDataObj(characterKey)?.talent ?? {}).forEach(talentKey =>\r\n        Character.getTalentDocumentSections(characterKey, talentKey)?.forEach((section, sectionIndex) =>\r\n          section?.fields?.forEach((field, fieldIndex) =>\r\n            (field?.formula || this.getTalentField(characterKey, talentKey, sectionIndex, fieldIndex)?.formula) && (charFormulas[talentKey] = [...(charFormulas[talentKey] ?? []), {\r\n              talentKey,\r\n              sectionIndex,\r\n              fieldIndex\r\n            }]))))\r\n      return { basicKeys, ...charFormulas, transReactions }\r\n    } else {\r\n      //generic average hit parameters.\r\n      const genericAvgHit = []\r\n      if (!isAutoElemental) //add phy auto + charged + physical \r\n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\r\n\r\n      if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n        genericAvgHit.push(`${eleKey}_normal_avgHit`, `${eleKey}_charged_avgHit`)\r\n      else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\r\n      }\r\n      //show skill/burst \r\n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\r\n\r\n      //add reactions.\r\n      if (eleKey === \"pyro\") {\r\n        const reactions = []\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n        genericAvgHit.push(...reactions)\r\n      } else if (eleKey === \"cryo\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n      else if (eleKey === \"hydro\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n      return { basicKeys, genericAvgHit, transReactions }\r\n    }\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\r\n    else if (statKey === \"finalDEF\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\r\n    else if (statKey === \"finalATK\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterKey, artifactIds) => {\r\n    let character = CharacterDatabase.get(characterKey)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.get(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterKey) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static remove(characterKey) {\r\n    let character = CharacterDatabase.get(characterKey)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.remove(characterKey)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats).formula(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of Object.entries(val)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of Object.entries(modifier))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\r\n  })\r\n\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    character = deepClone(character)\r\n    const { characterKey, levelKey, hitMode, autoInfused, reactionMode, talentLevelKeys, constellation, talentConditionals = [] } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n\r\n    //generate the initalStats obj with data from Character & overrides\r\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\r\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    initialStats.characterEle = this.getElementalKey(characterKey);\r\n    initialStats.characterKey = characterKey\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.autoInfused = autoInfused && Character.getCDataObj(characterKey)?.talent?.auto?.infusable\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.talentConditionals = talentConditionals\r\n    initialStats.weaponType = this.getWeaponTypeKey(characterKey)\r\n    initialStats.talentLevelKeys = talentLevelKeys;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    for (const key in initialStats.talentLevelKeys)\r\n      initialStats.talentLevelKeys[key] += this.getTalentLevelBoost(character.characterKey, key, constellation);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemyImmunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      const { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      const conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, initialStats.talentLevelKeys[talentKey], constellation, ascension)\r\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    Character.getTalentStatsAll(characterKey, constellation, ascension).forEach(s => this.mergeStats(initialStats, s))\r\n\r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\r\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\r\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\r\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static isInvalid = (char) => !char || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterKeyList = () => Object.keys(characterDatabase);\r\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.startsWith(\"char_\")).forEach(key => {\r\n      let [, characterKey] = key.split(\"char_\")\r\n      if (!characterDatabase[characterKey]) {\r\n        let character = loadFromLocalStorage(key);\r\n        if (!character) return;\r\n        characterDatabase[characterKey] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    const dchar = deepClone(char)\r\n    saveToLocalStorage(`char_${char.characterKey}`, dchar);\r\n    characterDatabase[char.characterKey] = dchar;\r\n  }\r\n  static get = (characterKey) => characterDatabase?.[characterKey] ?? null\r\n\r\n  static remove = (characterKey) => {\r\n    delete characterDatabase[characterKey];\r\n    localStorage.removeItem(`char_${characterKey}`);\r\n  }\r\n  static getArtifactIDFromSlot = (characterKey, slotKey) =>\r\n    this.get(characterKey)?.equippedArtifacts?.[slotKey] ?? null\r\n\r\n  static equipArtifact = (characterKey, art) => {\r\n    const char = this.get(characterKey)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts) char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (characterKey, slotKey) => {\r\n    const char = this.get(characterKey)\r\n    if (!char || !slotKey) return\r\n    if (!char?.equippedArtifacts?.[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterKey, artifactIds) => {\r\n    const character = this.get(characterKey)\r\n    if (!character) return;\r\n    character.equippedArtifacts = artifactIds\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static unequipAllArtifacts = () => {\r\n    Object.values(characterDatabase).forEach(char => {\r\n      char.equippedArtifacts = {}\r\n      this.updateCharacter(char)\r\n    })\r\n  }\r\n  //helper function for testing\r\n  static clearDatabase = () => {\r\n    characterDatabase = {}\r\n    initiated = false\r\n  }\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\r\nimport ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_dmg_`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    eleMas: [13, 17, 22, 27, 32],\r\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    critDMG_: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 1: [24, 30], 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 1: [2], 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 1: [2], 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 1: [1.5, 1.8], 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  eleMas: { 1: [5, 6], 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  enerRech_: { 1: [1.3, 1.6], 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  critRate_: { 1: [0.8, 1], 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  critDMG_: { 1: [1.6, 1.9], 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubStatsData).map(([key, obj]) =>\r\n  [key, {\r\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\r\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\r\n  }]))\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactSubstatsMinMax,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nconst maxStar = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_dmg_\")) // because in the database its still stored as ele_dmg_\r\n      return this.getMainStatValue(\"ele_dmg_\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubstatAllMax = (statKey, numStars = maxStar, defVal = 0) => ArtifactSubstatsMinMax?.[statKey]?.max[numStars] ?? defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => ArtifactSubStatsData?.[subStatKey]?.[numStars] ?? []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, rolls = []) => {\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let max = this.getSubstatAllMax(subStatKey) * len\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      if (rollArr.length > 1) substat.rollArr = rollArr\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(maxStar);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let statKeys = substats.filter(({ key }) => key).map(({ key }) => key)\r\n    let maxPerRoll = 100 * Math.max(...(statKeys.length === 4 ? statKeys : Object.keys(ArtifactSubstatsMinMax)).map(\r\n      key => Artifact.getSubstatAllMax(key, numStars) / Artifact.getSubstatAllMax(key)\r\n    ))\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * maxPerRoll) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect).length > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n      if (Object.keys(condStats).length > 0) {\r\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n        Object.entries(condStats).forEach(([statKey, value]) =>\r\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\r\n      }\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterKey) {\r\n    let art = ArtifactDatabase.get(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterKey || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else if (!conditionalNum && index < 0) { //nothing to change\r\n      return conditionals\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","const ElementalData = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static get = (id) => artifactDatabase[id] ?? null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    if (!id) {//if does not have id, generate ID\r\n      do {\r\n        id = `artifact_${artIdIndex++}`\r\n      } while (localStorage.getItem(id) !== null)\r\n      art.id = id\r\n    }\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.get(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.get(artAid), this.get(artBid))\r\n  static unequipAllArtifacts = () => {\r\n    Object.values(artifactDatabase).forEach(art => {\r\n      art.location = \"\"\r\n      this.updateArtifact(art)\r\n    })\r\n  }\r\n  //helper function for testing\r\n  static clearDatabase = () => {\r\n    artifactDatabase = {}\r\n    initiated = false\r\n    artIdIndex = 1\r\n  }\r\n}","import { clamp } from \"./Util/Util\";\r\nimport { ReactionMatrix, hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nconst StatData = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\r\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\r\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\", pretty: \"HP\" },\r\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\r\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\" },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\" },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\" },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true }\r\n}\r\nconst Formulas = {\r\n  // Basic Stats\r\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\r\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s, c) => ReactionMatrix[\"crystalize\"].reduce((accu, val, i) => accu + val * Math.pow(c.characterLevel, i), 0),\r\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\r\n}\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"crystalize_hit\", \"shattered_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\", \r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, const: true, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n    StatData[`${ele}_elemental_${type}`] = { name: `${eleName} Attack ${typeName}`, ...opt }\r\n    StatData[`${ele}_elemental_${type}_multi`] = { name: `${eleName} Attack ${typeName} Multiplier`, unit: \"multi\" }\r\n\r\n    Formulas[`${ele}_elemental_${type}`] = (s) => s.finalATK * s[`${ele}_elemental_${type}_multi`]\r\n  })\r\n\r\n  Formulas[`${ele}_elemental_hit_multi`] = (s, c) => (1 + (s.dmg_ + s[`${ele}_dmg_`]) / 100) * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\r\n  Formulas[`${ele}_elemental_critHit_multi`] = (s) => s[`${ele}_elemental_hit_multi`] * (1 + s.critDMG_ / 100)\r\n  Formulas[`${ele}_elemental_avgHit_multi`] = (s) => s[`${ele}_elemental_hit_multi`] * (1 + s.critDMG_ * s[`critRate_`] / 10000)\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(c[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => (1 + (s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100) * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * (1 + s.critDMG_ / 100)\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n\r\n  Formulas[`${reaction}_multi`] = (s, c) => ReactionMatrix[reaction].reduce((accu, val, i) => accu + val * Math.pow(c.characterLevel, i), 0)\r\n  if (Object.keys(variants).length === 1) {\r\n    const [ele] = Object.keys(variants), opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${reaction}_elemental_${type}`] = { name: `${name} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${reaction}_elemental_${type}`] = (s) => s[`${ele}_elemental_${type}`] * s[`${ele}_${reaction}_multi`]\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s[`${ele}_${move}_${type}`] * s[`${ele}_${reaction}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\r\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\r\n  const formulaList = dependencyKeys.map(key => {\r\n    const modifier = modifiers[key] ?? {}\r\n    const constModifier = Object.entries(modifier).filter(([k]) => StatData[k]?.const)\r\n    const dynamicModifier = Object.entries(modifier).filter(([k]) => !(StatData[k]?.const))\r\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]) => accu + c[k] * m, 0)\r\n    const dynamicFunc = (s) => dynamicModifier.reduce((accu, [k, m]) => accu + s[k] * m, 0)\r\n\r\n    let funcIndicator = 0\r\n    if (constModifier.length) funcIndicator += 1\r\n    if (dynamicModifier.length) funcIndicator += 2\r\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\r\n\r\n    let tmp\r\n    switch (funcIndicator) {\r\n      case 0: tmp = Formulas[key]; break\r\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\r\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\r\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 4: tmp = (s, c) => c[key]; break\r\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\r\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\r\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 8: tmp = (s, c) => s[key]; break\r\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\r\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\r\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n    }\r\n    const func = tmp\r\n\r\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\r\n\r\n    if (!(key in Formulas))\r\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n\r\n    if (StatData[key]?.const) {\r\n      constData[key] = stats[key]\r\n      constData[key] = func(stats, constData)\r\n      stats[key] = constData[key]\r\n      if (dynamicModifier.length)\r\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\r\n      return null\r\n    }\r\n\r\n    if (!(key in Formulas))\r\n      initialStats[key] = stats[key]\r\n\r\n    return [key, func]\r\n  }).filter((func) => func)\r\n\r\n  if (debug) console.log(initialStats, constData)\r\n\r\n  return {\r\n    initialStats,\r\n    formula: s => {\r\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\r\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\r\n      Object.assign(s, constData)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nimport { objMultiplication } from '../Util/Util.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n  static getWeaponTypeKeys = () => Object.keys(WeaponTypeData)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    stats = stats(refineIndex)\r\n    if (stacks !== 1) objMultiplication(stats, stacks)\r\n    return stats\r\n  }\r\n}"],"sourceRoot":""}