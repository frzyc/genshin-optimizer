{"version":3,"sources":["Weapon/Weapon.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","../node_modules/react-bootstrap/esm/Badge.js","Data/WeaponData.js","DatabaseUtil.js","Components/StatIcon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","Data/CharacterData.js","Character/CharacterCard.js","Character/CharacterDisplay.js","Character/Character.js","Stat.js","Util/Util.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Character/CharacterDatabase.js","Util/ConditionalsUtil.js","Artifact/ArtifactDatabase.js","Data/ElementalData.js","StatData.js","Components/StarDisplay.js"],"names":["Weapon","this","Error","getWeaponDataImport","WeaponDataImport","getLevelName","levelKey","defVal","LevelNameData","getLevelIndex","WeaponLevelKeys","indexOf","getWeaponName","weaponKey","WeaponData","name","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","refineIndex","charFinalStats","character","passiveDescription","getWeaponDescription","description","getWeaponConditional","conditional","getWeaponImg","img","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","getWeaponSubStatKey","subStatKey","getWeaponBonusStat","stats","getWeaponsOfType","weaponType","Object","fromEntries","entries","filter","getWeaponTypeName","WeaponTypeData","getWeaponMainStatValWithOverride","weaponObj","overrideMainVal","key","getWeaponSubStatValWithOverride","overrideSubVal","getWeaponConditionalStat","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","map","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","Badge","React","forwardRef","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","then","imp","default","DatabaseInitAndVerify","localStorage","removeItem","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","values","forEach","art","valid","location","getCharacter","keyMapping","setKey","mainStatKey","endsWith","replace","maximumEfficiency","substats","substat","value","rolls","Artifact","getSubstatRolls","numStars","efficiency","getSubstatEfficiency","getArtifactEfficiency","level","currentEfficiency","updateArtifact","chars","getCharacterDatabase","equippedArtifacts","slotKey","artid","getArtifact","undefined","artifactConditionals","cond","srcKey","srcKey2","dmgMode","updateCharacter","StatIcon","hp_base","faTint","hp_final","hp_","hp","atk_base","faFistRaised","atk_final","atk_","atk","def_base","faShieldAlt","def_final","def_","def","ele_mas","faMagic","crit_rate","faDice","crit_dmg","faDiceD20","ener_rech","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","icon","_defineProperty","obj","defineProperty","enumerable","configurable","writable","CharacterData","CharacterDataImport","LevelsData","asend","characterStatBase","stam","CharacterSpecializedStatKey","CharacterCard","useReducer","x","forceUpdate","useEffect","Promise","all","Character","getCharacterDataImport","getDataImport","characterId","onEdit","onDelete","build","calculateBuild","setToSlots","characterKey","weapon","constellation","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","weaponName","weaponMainVal","weaponSubKey","weaponSubVal","weaponLevelName","weaponPassiveName","cardClassName","bg","text","Header","header","xs","size","onClick","faEdit","faTrashAlt","Body","style","cursor","src","getThumb","getStar","thumbnail","getName","stars","colored","getStatValueWithOverride","Stat","getStatName","getStatUnit","getSetEffects","arr","artifactSetName","getSetName","highestNum","Math","max","unit","statVal","finalStats","toFixed","fixedUnit","footer","Footer","Link","to","pathname","selectedCharacterId","CharacterDisplayCardPromise","CharacterDisplayCard","lazy","CharacterDisplay","deleteCharacter","id","removeCharacter","editCharacter","setState","charIdToEdit","showEditor","scrollRef","current","scrollIntoView","behavior","cancelEditCharacter","state","ReactGA","pageview","createRef","charIdList","getCharacterIdList","Suspense","fallback","editable","onClose","lg","md","faPlus","moveToNewLocation","removeCharacterById","getBaseStatValue","getSpecializedStatKey","getSpeicalizedStatVal","getLevel","includes","characterObj","getCDataObj","baseStat","getIndexFromlevelkey","charKey","getElementalName","elementalKey","ElementalData","getAllCharacterKeys","keys","star","getElementalKeys","getConstellationName","constellationName","getTitles","titles","getlevelKeys","getlevelNames","getAscension","getSpecializedStat","specializeStat","thumbImg","getCard","cardImg","getTalentImg","talentKey","talent","getConstellationImg","constIndex","getTalentName","getTalentLevelBoost","talents","i","talentBoost","boostEntry","find","getTalentLevelKey","withBoost","talentLvlKey","talentLevelKeys","levelBoost","clamp","getTalentDocument","document","getTalentFields","fields","getTalentStats","ascension","getTalentStatsAll","statsArr","push","getTalentConditional","conditionalKey","doc","section","tempCond","getTalentConditionalStats","val","getTalentConditionalFields","getTalentStatKey","skillKey","elemental","autoInfused","reactionMode","charEleKey","isAutoElemental","auto","infusable","eleKey","getTalentStatKeyVariant","isAutoInfusable","getDisplayStatKeys","atkKeys","startsWith","ElementToReactionKeys","hasOverride","baseStatOverrides","equipArtifacts","artifactIds","artIdsOnCharacter","artIdsNotOnCharacter","getSlotKeys","artNotOnChar","artOnChar","notCharLoc","equipArtifact","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","deepClone","getMainStatValue","artifactsAssumeFull","stat","setNumKey","getConditionalStats","AttachLazyFormulas","statKeys","char_ele_key","overrides","hasOwnProperty","specialStatKey","specializedStatVal","addStatsObj","formulaOverrides","talentConditionals","weaponStats","subKey","subVal","bonusStats","conditionalStats","htmlStatsData","StatData","getStatNamePretty","pretty","getStatNameRaw","getStatNameWithPercent","getStatVariant","printStat","f","expand","printFormula","formulaOverride","OverrideFormulas","printOverrideFormula","options","FormulaText","overrideKey","OverrideFormulasText","formulaText","statName","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_dmg","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_dmg","electrocharged_multi","electrocharged","superconduct_dmg","superconduct_multi","superconduct","swirl_dmg","swirl_multi","swirl","shatter_dmg","shatter_multi","shattered","crystalize_dmg","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","trans_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","abs","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","noelle_burst_atk","getRandomElementFromArray","array","floor","random","length","getRandomIntInclusive","min","ceil","loadFromLocalStorage","data","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","closeEnoughFloat","a","b","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","Array","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","arguments","source","getOwnPropertyDescriptors","defineProperties","_createForOfIteratorHelper","allowArrayLike","it","F","s","n","done","e","_e","err","normalCompletion","didErr","step","next","_e2","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","phy_dmg_bonus","ele_dmg_bonus","2","ArtifactSubStatsData","ArtifactSlotsData","ArtifactBase","totalPossbleRolls","totalPossibleRolls","rollsRemaining","totalCurrentEfficiency","reduce","sum","cur","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","getArtifactIDFromSlot","artifactToSwapWith","swapLocations","unequipArtifactOnSlot","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","getPieceName","getPieceIcon","icons","getSetEffectsObj","setEffects","getArtifactSetNumStats","artifactSetEffect","artArr","parseInt","setNumKeys","getSetEffectText","setEffectText","getSetEffectConditional","getSlotName","getSlotIcon","getSlotMainStatKeys","getSlotNameWithIcon","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","getBaseSubRollNumLow","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","accu","v","reverse","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","hasSetEffect","setEffectObj","getConditionalNum","condStats","initiated","characterDatabase","charIdIndex","isInvalid","char","addCharacter","dchar","charid","equipArtifactBuild","conditionals","srcKeyObj","index","findIndex","splice","newCond","fieldName","selectedConditionalNum","selectedConditional","curConditional","maxStack","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","Formulas","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","reactionName","dmgKey","dmgName","some","str","atkTypeName","dmgModeName","ele_key","formula","dependency","formulaKeys","overrideFormulaKey","get","StarIcon","faStar","Stars","_"],"mappings":"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","file":"static/js/9.c8e0ced1.chunk.js","sourcesContent":["import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //remove the old error/prone id lists, if it still exists\r\n  localStorage.removeItem(\"artifact_id_list\")\r\n  localStorage.removeItem(\"character_id_list\")\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  if (CharacterDatabase.populateDatebaseFromLocalStorage() |\r\n    ArtifactDatabase.populateDatebaseFromLocalStorage()) {\r\n    //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n    let arts = ArtifactDatabase.getArtifactDatabase();\r\n    Object.values(arts).forEach(art => {\r\n      let valid = true\r\n      if (art.location && !CharacterDatabase.getCharacter(art.location)) {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n      if (!art.maximumEfficiency) {\r\n        //calculate rolls & efficiency for caching\r\n        for (const substat of art.substats) {\r\n          let { key, value } = substat\r\n          substat.rolls = Artifact.getSubstatRolls(key, value, art.numStars)\r\n          substat.efficiency = Artifact.getSubstatEfficiency(key, art.numStars, substat.rolls)\r\n        }\r\n        let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(art.substats, art.numStars, art.level)\r\n        art.currentEfficiency = currentEfficiency\r\n        art.maximumEfficiency = maximumEfficiency\r\n        valid = false\r\n      }\r\n      if (!valid)\r\n        ArtifactDatabase.updateArtifact(art)\r\n    })\r\n\r\n    let chars = CharacterDatabase.getCharacterDatabase();\r\n    Object.values(chars).forEach(character => {\r\n      let valid = true;\r\n      //verify character database equipment validity\r\n      let equippedArtifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([slotKey, artid]) => {\r\n        if (!ArtifactDatabase.getArtifact(artid)) {\r\n          valid = false\r\n          return [slotKey, undefined]\r\n        }\r\n        return [slotKey, artid]\r\n      }))\r\n      if (!valid)\r\n        character.equippedArtifacts = equippedArtifacts\r\n\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      if (character.artifactConditionals) character.artifactConditionals = character.artifactConditionals.filter(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n      if (!valid) {\r\n        CharacterDatabase.updateCharacter(character)\r\n      }\r\n    })\r\n  }\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport Stat from '../Stat';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nexport default function CharacterCard(props) {\r\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => forceUpdate())\r\n  }, [])\r\n  let { characterId, onEdit, onDelete } = props\r\n  let character = CharacterDatabase.getCharacter(characterId)\r\n  if (!character) return null;\r\n  let build = Character.calculateBuild(character)\r\n  let { setToSlots } = build\r\n\r\n  let { characterKey, name, weapon, constellation } = character\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponName = Weapon.getWeaponName(weapon.key)\r\n  let weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\r\n  let weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\r\n  let weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const statkeys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\",]\r\n  return (<Card className={props.cardClassName} bg={props.bg ? props.bg : \"darkcontent\"} text=\"lightfont\">\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {props.header ? props.header : <h6><b>{name}</b></h6>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {props.onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {props.onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={onEdit} style={{ cursor: onEdit ? \"pointer\" : \"default\" }}>\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={Character.getThumb(characterKey)} className={`w-100 h-auto grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h4>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h4>\r\n          <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n          <span>{`Lvl. ${Character.getStatValueWithOverride(character, \"char_level\")} C${constellation}`}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {Object.entries(Artifact.getSetEffects(setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = Artifact.getSetName(key)\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = build.finalStats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {props.footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        selectedCharacterId: characterId\r\n      }}>\r\n        Generate Builds\r\n        </Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy } from 'react';\r\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport Character from './Character';\r\nimport CharacterCard from './CharacterCard';\r\nimport CharacterDatabase from './CharacterDatabase';\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCardPromise = import('../Character/CharacterDisplayCard');\r\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\r\n\r\nexport default class CharacterDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = {\r\n      charIdToEdit: \"\",\r\n      showEditor: false,\r\n    }\r\n    ReactGA.pageview('/character')\r\n  }\r\n\r\n  deleteCharacter = (id) => {\r\n    Character.removeCharacter(id)\r\n    this.forceUpdate()\r\n  }\r\n\r\n  editCharacter = (id) =>\r\n    this.setState({ charIdToEdit: id, showEditor: true },\r\n      () => this.scrollRef.current.scrollIntoView({ behavior: \"smooth\" }))\r\n\r\n  cancelEditCharacter = () =>\r\n    this.setState({ charIdToEdit: null, showEditor: false })\r\n\r\n  componentDidMount() {\r\n    this.scrollRef = React.createRef()\r\n  }\r\n  render() {\r\n    let charIdList = CharacterDatabase.getCharacterIdList()\r\n    return (<Container ref={this.scrollRef}>\r\n      {/* editor/character detail display */}\r\n      {this.state.showEditor ? <Row className=\"mt-2\"><Col>\r\n        <React.Suspense fallback={<span>Loading...</span>}>\r\n          <CharacterDisplayCard editable\r\n            characterId={this.state.charIdToEdit}\r\n            onClose={this.cancelEditCharacter}\r\n            footer={<Button variant=\"danger\" onClick={this.cancelEditCharacter}>Close</Button>}\r\n          />\r\n        </React.Suspense>\r\n      </Col></Row> : null}\r\n\r\n      <Row className=\"mt-2\">\r\n        {this.state.showEditor ? null : <Col lg={4} md={6} className=\"mb-2\">\r\n          <Card className=\"h-100\" bg=\"darkcontent\" text=\"lightfont\">\r\n            <Card.Header className=\"pr-2\">\r\n              <span>Add New Character</span>\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex flex-column justify-content-center\">\r\n              <Row className=\"d-flex flex-row justify-content-center\">\r\n                <Col xs=\"auto\">\r\n                  <Button onClick={() => this.editCharacter(\"\")}>\r\n                    <h1><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></h1>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>}\r\n        {charIdList.map(id =>\r\n          <Col key={id} lg={4} md={6} className=\"mb-2\">\r\n            <CharacterCard\r\n              cardClassName=\"h-100\"\r\n              characterId={id}\r\n              onDelete={() => this.deleteCharacter(id)}\r\n              onEdit={() => this.editCharacter(id)}\r\n            />\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Container>)\r\n\r\n  }\r\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { AttachLazyFormulas, ElementToReactionKeys } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getCDataObj(charKey)?.talent?.[talentKey]?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getCDataObj(charKey)?.talent?.[talentKey]?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getCDataObj(charKey)?.talent?.[talentKey]?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"formulaOverrides\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    if (skillKey === \"phy\") return `phy_${dmgMode}`\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    if (skillKey === \"phy\") return \"physical\"\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_base\") || false\r\n    return character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals, initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals && artifactConditionals.forEach(conditional => {\r\n      let { srcKey: setKey, srcKey2: setNumKey } = conditional\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditional.conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n    AttachLazyFormulas(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"formulaOverrides\") {\r\n        initialStats.formulaOverrides = [...(initialStats.formulaOverrides || []), ...val]\r\n        return\r\n      }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, OverrideFormulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static printFormula = (statKey, stats, formulaOverrides = [], expand = true) => {\r\n    for (const formulaOverride of formulaOverrides)\r\n      if (OverrideFormulas[formulaOverride?.key]?.key === statKey)\r\n        return Stat.printOverrideFormula(stats, formulaOverride.key, formulaOverride.options, false)\r\n    return FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n      (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n  }\r\n\r\n  static printOverrideFormula = (stats, overrideKey, options, expand = true) =>\r\n    OverrideFormulasText?.[overrideKey] && typeof OverrideFormulasText?.[overrideKey].formulaText === \"function\" &&\r\n    (<span>{OverrideFormulasText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  trans_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(0, \"ele_mas\")} * exp^(-0.000505 * {f(0, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulasText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.value}%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance\r\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {})\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [subStatValue]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (rolls.length) return;\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val)) {\r\n            rolls = arr;\r\n            return;\r\n          }\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val)) {\r\n            rolls = arr;\r\n            return\r\n          }\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, numStars, rolls) => {\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars);\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let min = rollData[0] * len;\r\n    let max = rollData[rollData.length - 1] * len;\r\n    return clampPercent(((sum - min) / (max - min)) * 100)\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      let hasSetEffect = false\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (setEffectObj.stats && Object.keys(setEffectObj.stats).length > 0) {\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n            hasSetEffect = true\r\n          }\r\n          if (setEffectObj.conditional) {\r\n            let conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n            if (conditionalNum) {\r\n              let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n              if (Object.keys(condStats) > 0) {\r\n                setEffect[setNumKey] = deepClone(condStats)\r\n                hasSetEffect = true\r\n              }\r\n            }\r\n          }\r\n        })\r\n      if (hasSetEffect)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => artifactDatabase[id] || null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  all_dmg_bonus: { name: \"All DMG Bonus\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elementry Mastry Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elementry Mastry Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elementry Mastry Multiplier Z\", unit: \"multi\" },\r\n  trans_reaction_base_multi: { name: \"Transformation Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_final: (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.phy_dmg,\r\n  plunge_crit_dmg: (s) => s.phy_crit_dmg,\r\n  plunge_avg_dmg: (s) => s.phy_avg_dmg,\r\n  plunge_bonus_multi: (s) => s.phy_bonus_multi,\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * s.ele_mas_multi_x * 1.5 * s.trans_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * s.ele_mas_multi_x * 2 * s.trans_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * s.ele_mas_multi_x * 2 * s.trans_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * s.ele_mas_multi_x * 1.5 * s.trans_reaction_base_multi,\r\n  trans_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s[`${ele}_ele_dmg`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_ele_crit_dmg`],\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_ele_avg_dmg`],\r\n  plunge_bonus_multi: (s, ele) => s[`${ele}_ele_bonus_multi`],\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.all_dmg_bonus) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulas = {\r\n  noelle_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk + s.def_final * (options.value / 100),\r\n    dependency: [\"atk_base\", \"atk_weapon\", \"atk_\", \"atk\", \"def_final\", \"def_base\", \"def_\", \"def\"],\r\n  }\r\n}\r\n\r\n//the keyfilters are used by build generator to reduce the amount of calculations required\r\nfunction AttachLazyFormulas(obj, options = {}) {\r\n  let { formulaKeys = Object.keys(Formulas), statKeys = Object.keys(StatData) } = options;\r\n  let { formulaOverrides = [] } = obj;\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key: overrideFormulaKey, options } = formulaOverride\r\n    let { key, formula } = OverrideFormulas[overrideFormulaKey] || {}\r\n    if (!formulaKeys.includes(key)) return\r\n    formula = formula(options)\r\n    Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => formula(obj) : function () {\r\n        let val = formula(obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n\r\n  formulaKeys.forEach(key => {\r\n    !obj.hasOwnProperty(key) && Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => Formulas[key](obj) : function () {\r\n        let val = Formulas[key](obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  //assign zeros or default values to the other stats that are not part of the calculations\r\n  statKeys.forEach(key => !obj.hasOwnProperty(key) && (obj[key] = StatData[key].default || 0))\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  OverrideFormulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  AttachLazyFormulas,\r\n}","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = (props) => <span className={props.colored ? \"text-5star\" : \"\"}>\r\n  {props.stars ? [...Array(props.stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n"],"sourceRoot":""}