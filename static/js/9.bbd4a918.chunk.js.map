{"version":3,"sources":["Components/StarDisplay.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/CustomFormControl.js","Data/WeaponData.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/ConditionalSelector.js","../node_modules/react-bootstrap/esm/Badge.js","StatConstants.js","StatDependency.js","Data/CharacterData.js","Components/StatIcon.js","dbV2KeyMap.js","DatabaseUtil.js","Components/CharacterSelection.js","../node_modules/react-bootstrap/esm/ElementChildren.js","Character/CharacterDisplay/DamageOptionsAndCalculation.js","Artifact/ArtifactCard.js","Artifact/PercentBadge.js","Character/StatInput.js","Components/StatDisplay.js","Components/WIPComponent.js","../node_modules/react-bootstrap/esm/ToggleButton.js","Character/CharacterDisplay/StatDisplayComponent.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ToggleButtonGroup.js","TestPage/TestDisplay.js","Stat.js","Util/Util.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Character/Character.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Util/ConditionalsUtil.js","Data/ElementalData.js","Artifact/ArtifactDatabase.js","StatData.js","Weapon/Weapon.js"],"names":["StarIcon","icon","faStar","Stars","stars","colored","className","Array","keys","map","_","i","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","CustomFormControl","float","placeholder","value","onValueChange","disabled","allowEmpty","useState","focus","setFocus","props","type","toString","onChange","e","target","parseFloat","parseInt","onFocus","onBlur","aria-label","WeaponData","WeaponDataImport","then","imp","default","WeaponLevelKeys","LevelNameData","WeaponTypeData","_objectWithoutProperties","source","excluded","key","sourceKeys","Object","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","ConditionalSelector","conditional","conditionalNum","setConditional","defEle","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","Badge","React","forwardRef","_ref","ref","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","hitTypes","hit","avgHit","critHit","hitMoves","normal","charged","plunging","elemental","skill","burst","hitElements","ElementalData","transformativeReactions","overloaded","name","multi","variants","shattered","electrocharged","superconduct","swirl","amplifyingReactions","vaporize","melt","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","GetFormulaDependency","formula","dependency","Set","Proxy","get","prop","receiver","add","formulaKeyDependency","freeze","fromEntries","Formulas","GetDependencies","modifiers","StatData","dependencies","forEach","InsertDependencies","has","k","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","critRate_","critDMG_","enerRech_","stamina","CharacterSpecializedStatKey","StatIcon","characterHP","faTint","finalHP","hp_","hp","baseATK","faFistRaised","characterATK","finalATK","atk_","atk","characterDEF","faShieldAlt","finalDEF","def_","def","eleMas","faMagic","faDice","faDiceD20","faSync","heal_","faFirstAid","StatIconEle","statKey","changes","char_ele_key","char_level","hp_base","hp_final","atk_character_base","atk_base","atk_final","atk_weapon","def_base","def_final","phy_dmg_bonus","phy_res","anemo_ele_dmg_bonus","geo_ele_dmg_bonus","electro_ele_dmg_bonus","hydro_ele_dmg_bonus","pyro_ele_dmg_bonus","cryo_ele_dmg_bonus","anemo_ele_res","geo_ele_res","electro_ele_res","hydro_ele_res","pyro_ele_res","cryo_ele_res","ener_rech","crit_rate","crit_dmg","stam","heal_bonu","inc_heal","pow_shield","red_cd","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","norm_atk_dmg","char_atk_dmg","plunge_dmg","norm_atk_crit_dmg","char_atk_crit_dmg","plunge_crit_dmg","norm_atk_avg_dmg","char_atk_avg_dmg","plunge_avg_dmg","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","skill_dmg_bonus","burst_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_crit_rate","burst_crit_rate","anemo_skill_dmg","anemo_burst_dmg","anemo_skill_crit_dmg","anemo_burst_crit_dmg","anemo_skill_avg_dmg","anemo_burst_avg_dmg","geo_skill_dmg","geo_burst_dmg","geo_skill_crit_dmg","geo_burst_crit_dmg","geo_skill_avg_dmg","geo_burst_avg_dmg","electro_skill_dmg","electro_burst_dmg","electro_skill_crit_dmg","electro_burst_crit_dmg","electro_skill_avg_dmg","electro_burst_avg_dmg","hydro_skill_dmg","hydro_burst_dmg","hydro_skill_crit_dmg","hydro_burst_crit_dmg","hydro_skill_avg_dmg","hydro_burst_avg_dmg","pyro_skill_dmg","pyro_burst_dmg","pyro_skill_crit_dmg","pyro_burst_crit_dmg","pyro_skill_avg_dmg","pyro_burst_avg_dmg","cryo_skill_dmg","cryo_burst_dmg","cryo_skill_crit_dmg","cryo_burst_crit_dmg","cryo_skill_avg_dmg","cryo_burst_avg_dmg","phy_dmg","phy_crit_dmg","phy_avg_dmg","anemo_ele_dmg","anemo_ele_crit_dmg","anemo_ele_avg_dmg","geo_ele_dmg","geo_ele_crit_dmg","geo_ele_avg_dmg","electro_ele_dmg","electro_ele_crit_dmg","electro_ele_avg_dmg","hydro_ele_dmg","hydro_ele_crit_dmg","hydro_ele_avg_dmg","pyro_ele_dmg","pyro_ele_crit_dmg","pyro_ele_avg_dmg","cryo_ele_dmg","cryo_ele_crit_dmg","cryo_ele_avg_dmg","overload_dmg","overload_dmg_bonus","overload_multi","electrocharged_dmg","electrocharged_dmg_bonus","electrocharged_multi","superconduct_dmg","superconduct_dmg_bonus","superconduct_multi","burning_dmg","burning_dmg_bonus","swirl_dmg","swirl_dmg_bonus","swirl_multi","shatter_dmg","shatter_dmg_bonus","shatter_multi","crystalize_dmg","crystalize_dmg_bonus","melt_dmg_bonus","vaporize_dmg_bonus","pyro_vaporize_normal_dmg","pyro_vaporize_normal_crit_dmg","pyro_vaporize_normal_avg_dmg","pyro_vaporize_chraged_dmg","pyro_vaporize_chraged_crit_dmg","pyro_vaporize_chraged_avg_dmg","pyro_vaporize_plunge_dmg","pyro_vaporize_plunge_crit_dmg","pyro_vaporize_plunge_avg_dmg","pyro_vaporize_skill_dmg","pyro_vaporize_skill_crit_dmg","pyro_vaporize_skill_avg_dmg","pyro_vaporize_burst_dmg","pyro_vaporize_burst_crit_dmg","pyro_vaporize_burst_avg_dmg","pyro_vaporize_ele_dmg","pyro_vaporize_ele_crit_dmg","pyro_vaporize_ele_avg_dmg","hydro_vaporize_normal_dmg","hydro_vaporize_normal_crit_dmg","hydro_vaporize_normal_avg_dmg","hydro_vaporize_chraged_dmg","hydro_vaporize_chraged_crit_dmg","hydro_vaporize_chraged_avg_dmg","hydro_vaporize_plunge_dmg","hydro_vaporize_plunge_crit_dmg","hydro_vaporize_plunge_avg_dmg","hydro_vaporize_skill_dmg","hydro_vaporize_skill_crit_dmg","hydro_vaporize_skill_avg_dmg","hydro_vaporize_burst_dmg","hydro_vaporize_burst_crit_dmg","hydro_vaporize_burst_avg_dmg","hydro_vaporize_ele_dmg","hydro_vaporize_ele_crit_dmg","hydro_vaporize_ele_avg_dmg","pyro_melt_normal_dmg","pyro_melt_normal_crit_dmg","pyro_melt_normal_avg_dmg","pyro_melt_chraged_dmg","pyro_melt_chraged_crit_dmg","pyro_melt_chraged_avg_dmg","pyro_melt_plunge_dmg","pyro_melt_plunge_crit_dmg","pyro_melt_plunge_avg_dmg","pyro_melt_skill_dmg","pyro_melt_skill_crit_dmg","pyro_melt_skill_avg_dmg","pyro_melt_burst_dmg","pyro_melt_burst_crit_dmg","pyro_melt_burst_avg_dmg","pyro_melt_ele_dmg","pyro_melt_ele_crit_dmg","pyro_melt_ele_avg_dmg","cryo_melt_normal_dmg","cryo_melt_normal_crit_dmg","cryo_melt_normal_avg_dmg","cryo_melt_chraged_dmg","cryo_melt_chraged_crit_dmg","cryo_melt_chraged_avg_dmg","cryo_melt_plunge_dmg","cryo_melt_plunge_crit_dmg","cryo_melt_plunge_avg_dmg","cryo_melt_skill_dmg","cryo_melt_skill_crit_dmg","cryo_melt_skill_avg_dmg","cryo_melt_burst_dmg","cryo_melt_burst_crit_dmg","cryo_melt_burst_avg_dmg","cryo_melt_ele_dmg","cryo_melt_ele_crit_dmg","cryo_melt_ele_avg_dmg","enemy_phy_res","enemy_phy_res_multi","enemy_phy_immunity","anemo_enemy_ele_res","anemo_enemy_ele_res_multi","anemo_enemy_ele_immunity","geo_enemy_ele_res","geo_enemy_ele_res_multi","geo_enemy_ele_immunity","electro_enemy_ele_res","electro_enemy_ele_res_multi","electro_enemy_ele_immunity","hydro_enemy_ele_res","hydro_enemy_ele_res_multi","hydro_enemy_ele_immunity","pyro_enemy_ele_res","pyro_enemy_ele_res_multi","pyro_enemy_ele_immunity","cryo_enemy_ele_res","cryo_enemy_ele_res_multi","cryo_enemy_ele_immunity","ele_mas","amp_reaction_base_multi","enemy_level_multi","enemy_level","dmgModeToHitMode","avg_dmg","dmg","DatabaseInitAndVerify","dbVersion","getDatabaseVersion","localStorage","filter","startsWith","character","loadFromLocalStorage","characterKey","equippedArtifacts","dbKey","getItem","id","dmgMode","rest","buildSetting","mainStat","stat","v2change","statFilters","entries","hitMode","saveToLocalStorage","values","artid","art","location","removeItem","ArtifactDisplayState","filterMainStatKey","filterSubstats","charDBJustPopualted","CharacterDatabase","populateDatebaseFromLocalStorage","artDBJustPopualted","ArtifactDatabase","getArtifactDatabase","valid","artInSlotId","getArtifactIDFromSlot","slotKey","equipArtifact","Artifact","substatsValidation","numStars","keyMapping","setKey","mainStatKey","endsWith","replace","substats","obj","updateArtifact","chars","getCharacterDatabase","equippedArt","moveToNewLocation","artifactConditionals","cond","srcKey","srcKey2","updateCharacter","setDatabaseVersion","defVal","version","CharacterSelectionDropdownList","onSelect","getCharacterKeyList","sort","a","b","Character","getName","children","func","index","Children","child","isValidElement","ReactionToggle","reactionMode","setReactionMode","charEleKey","getElementalKey","includes","defaultValue","val","src","HitModeToggle","setHitMode","CalculationDisplay","build","getDisplayStatKeys","talentKey","fields","header","getTalentName","bg","Header","Body","field","fieldIndex","subFormulaKeys","Stat","getPrintableFormulaStatKeyList","finalStats","reverse","Boolean","Card","eventKey","printStat","Collapse","subKey","printFormula","talentField","getTalentField","sectionIndex","fieldText","getTalentFieldValue","fieldVariant","fieldFormulaText","fieldFormula","fieldFormulaDependency","fieldValue","toFixed","ContextAwareToggle","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","DamageOptionsAndCalculation","setState","setOverride","newBuild","equippedBuild","xs","r","Button","href","rel","xl","getStatValueWithOverride","getStatNameRaw","getBaseStatValue","getElementalKeys","eleKey","immunityStatKey","elementImmunity","prependEle","m","ArtifactCard","artifactId","artifactObj","forceUpdate","onEdit","onDelete","assumeFull","lock","currentEfficiency","maximumEfficiency","mainStatLevel","assFullColor","mainStatVal","getMainStatValue","getStatUnit","artifactValid","every","sstat","rolls","equipOnChar","charKey","equipArtifactOnChar","border","md","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Title","getSetName","getStatName","numRolls","efficiency","effOpacity","statName","style","opacity","percent","Footer","Divider","ckey","placement","overlay","pointerEvents","faLock","faLockOpen","faEdit","faTrashAlt","PercentBadge","badgeColor","isNaN","Math","floor","StatInput","restProps","Prepend","Text","Append","undefined","faUndo","DisplayStatDiff","label","oldVal","fixed","unit","diff","oldText","diffText","StatDisplay","editable","invalid","fixedUnit","labelVariant","hasOverride","WIPComponent","noop","ToggleButton","checked","inputRef","_useState","focused","setFocused","handleFocus","useCallback","tagName","handleBlur","active","autoComplete","StatDisplayComponent","statsDisplayKeys","cardbg","JSON","stringify","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","TabContext","Provider","SelectableContext","TabContent","decoratedBsPrefix","TabPane","_useTabContext","context","shouldTransition","makeEventKey","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","Tab","_React$Component","apply","this","arguments","_inheritsLoose","render","Error","Container","Content","Pane","CharacterArtifactPane","artifactsAssumeFull","statKeys","hasTalentPage","Row","Col","equipArtifacts","artifactIds","Alert","sm","lg","getSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","ConditionalsUtil","getConditionalNum","getConditionalStats","conditionalElement","cnum","state","setStateArtifactConditional","getSetEffectText","getSlotKeys","CharacterOverviewPane","constellation","setConstellation","editLevel","setEditLevel","elementKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","Image","getStar","InputGroup","clamp","getLevel","levelKey","OverlayTrigger","Tooltip","faSave","getConstellationName","getConstellationImg","roundedCircle","WeaponStatsEditorCard","MainStatsCards","StatItem","getStatVariant","WeaponStatsCard","title","stats","mkey","modifier","reduce","accu","multiplier","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","refineIndex","conditionalStats","getWeaponConditionalStat","getWeaponConditional","conditionalEle","faQuoteLeft","getWeaponImg","getWeaponRarity","DropdownButton","getWeaponName","star","arr","Dropdown","ItemText","getWeaponsOfType","rarity","weaponObj","getLevelName","faGavel","getWeaponPassiveDescription","getWeaponDescription","editingOther","SetEditingOther","editingMisc","SetEditingMisc","additionalKeys","displayStatKeys","push","editStatKeys","otherStatKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","isPercentSpecialStatSelect","displayNewBuildProps","getStatNamePretty","getStatNameWithPercent","CharacterTalentPane","ascension","getAscension","skillDisplayProps","ReactionDisplay","tKey","tText","SkillDisplayCard","subtitle","getTalent","asc","enabled","onClickTitle","ReactionComponents","superconduct_hit","sKey","electrocharged_hit","overloaded_hit","pyro_swirl_hit","swirlEleToDisplay","setele","element","shattered_hit","information","faQuestionCircle","cursor","crystalize_hit","eleInterArr","ElementToReactionKeys","Ele","modifiersToFields","mStatKey","formulaText","statsToFields","statVal","flat","talentLimits","talentLevelKeys","autoInfused","otherProps","infuseBtn","isAutoInfusable","getElementalName","talentLvlKey","talentLvlKeyRaw","levelBoost","getTalentLevelBoost","tLvl","stateTalentLevelKeys","talentStats","getTalentStats","statsEle","ListGroup","FieldDisplay","getTalentImg","Subtitle","getTalentDocument","section","talentText","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","compareAgainstEquipped","fieldBasic","fieldVal","fixedVal","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","CharacterDisplayCard","forceUpdateComponent","setCharacterKey","getInitialState","char","getIntialWeapon","setLevelKey","baseStatOverrides","Promise","all","getCharacterDataImport","getWeaponDataImport","getDataImport","deepClone","prevProps","footer","onClose","tabName","calculateBuild","HeaderIconDisplay","getThumb","commonPaneProps","u","ButtonGroup","DropdownToggle","getAllCharacterKeys","getlevelNames","getlevelKeys","lvlKey","faTimes","defaultActiveKey","Nav","Link","initialState","auto","ToggleButtonGroup","controlledProps","getValues","concat","invariant","toggle","_child$props","childVal","childOnChange","cloneElement","chainFunction","inputVal","event","isActive","n","handleToggle","vertical","TestDisplay","htmlStatsData","pretty","f","expand","statList","FormulaText","modifierText","options","statUnit","o","enemyLevel_multi","heal_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","move","res","reaction","baseMulti","getRandomElementFromArray","array","random","getRandomIntInclusive","min","max","ceil","data","parse","setItem","closeEnoughFloat","abs","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","objMultiplication","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","formulaDB","getCDataObj","formulaKey","tk","find","remove","getSpecializedStatKey","getSpeicalizedStatVal","getWeaponMainStatValWithOverride","characterObj","baseStat","getIndexFromlevelkey","elementalKey","getElementalKeysWithoutPhysical","constellationName","getTitles","titles","getSpecializedStat","specializeStat","thumbImg","cardImg","img","constIndex","talent","talents","talentBoost","boostEntry","document","getTalentDocumentSections","getTalentStatsAll","statsArr","getTalentConditional","sections","tempCond","getConditionalProp","stacks","isAutoElemental","infusable","basicKeys","transReactions","charFormulas","genericAvgHit","reactions","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","PreprocessFormulas","mergeStats","characterEle","weaponType","overrides","hasOwnProperty","specialStatKey","s","weaponSubKey","getWeaponSubStatValWithOverride","initiated","characterDatabase","isInvalid","getIdNameList","split","dchar","unequipArtifactOnSlot","equipArtifactBuild","unequipAllArtifacts","clearDatabase","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","physical_dmg_","ele_dmg_","2","ArtifactSubStatsData","ArtifactSubstatsMinMax","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","getSubstatEfficiency","getArtifactEfficiency","errMsgs","some","currentNumOfRolls","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","maxPerRoll","getSubstatAllMax","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","icons","getSetEffectsObj","setEffects","artifactSetEffect","artArr","setNumKeys","charFinalStats","setEffectText","getSlotName","getSlotIcon","getSlotMainStatKeys","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","main","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","_createForOfIteratorHelper","allowArrayLike","it","F","done","_e","err","normalCompletion","didErr","step","next","_e2","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","physical","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","const","characterLevel","weaponATK","dmg_","critHit_base_multi","weakspotDMG_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","staminaDec_","staminaGlidingDec_","staminaChargedDec_","transformative_level_multi","crystalize_multi","crystalize_dmg_","burning_dmg_","enemyLevel","enemyDEFRed_","dependencyKeys","debug","constData","formulaList","tmp","constModifier","dynamicModifier","constFunc","dynamicFunc","funcIndicator","console","log","error","assign","moveName","eleName","opt","typeName","getLevelIndex","weaponKey","passiveName","passiveDescription","description","baseStats","sub","getWeaponTypeName","getWeaponTypeKeys"],"mappings":"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","file":"static/js/9.bbd4a918.chunk.js","sourcesContent":["import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst CustomFormControl = ({ float = false, placeholder, value, onValueChange, disabled, allowEmpty = false }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  let displayValue = value\r\n  if (allowEmpty) displayValue = typeof value === \"number\" ? value : \"\"\r\n  else displayValue = !value && focus ? \"\" : (value?.toString?.() || value)\r\n  const props = {\r\n    type: \"number\",\r\n    className: \"hide-appearance\",\r\n    placeholder,\r\n    value: displayValue,\r\n    disabled,\r\n    onChange: (e) => {\r\n      let value = e.target.value;\r\n      if (float) {\r\n        if (allowEmpty) value = value === \"\" ? null : (parseFloat(value) || 0)\r\n        else value = parseFloat(value) || 0\r\n      } else {\r\n        if (allowEmpty) value = value === \"\" ? null : (parseInt(value) || 0)\r\n        else value = parseInt(value) || 0\r\n      }\r\n      onValueChange?.(value);\r\n    },\r\n    onFocus: () => setFocus(true),\r\n    onBlur: () => setFocus(false),\r\n  }\r\n  return <FormControl {...props} aria-label=\"custom-input\" />\r\n}\r\nexport default CustomFormControl;","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [ \"pyro\" ] },\r\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [ \"physical\" ] },\r\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [ \"electro\" ] },\r\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [ \"cryo\" ] },\r\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [ \"pyro\", \"hydro\", \"electro\", \"cryo\" ] },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\nexport const transformativeReactionLevelMultipliers = [ 0,\r\n  17.2,  18.5,  19.9,  21.3,  22.6,  24.6,  26.6,  28.9,  31.4,  34.1,\r\n  37.2,  40.7,  44.4,  48.6,  53.7,  59.1,  64.4,  69.7,  75.1,  80.6,\r\n  86.1,  91.7,  97.2, 102.8, 108.4, 113.2, 118.1, 123.0, 129.7, 136.3,\r\n 142.7, 149.0, 155.4, 161.8, 169.1, 176.5, 184.1, 191.7, 199.6, 207.4,\r\n 215.4, 224.2, 233.5, 243.4, 256.1, 268.5, 281.5, 295.0, 309.1, 323.6,\r\n 336.8, 350.5, 364.5, 378.6, 398.6, 416.4, 434.4, 452.6, 471.4, 490.5,\r\n 509.5, 532.8, 556.4, 580.1, 607.9, 630.2, 652.9, 675.2, 697.8, 720.2,\r\n 742.5, 765.2, 784.4, 803.4, 830.9, 854.4, 877.8, 900.1, 923.8, 946.4,\r\n 968.6, 991.0,1013.5,1036.1,1066.6,1090.0,1115.0,1141.7,1171.9,1202.8,\r\n1202.8,1233.9,1264.7,1305.7,1346.1,1468.9,1524.0,1577.0,1627.6,1674.8,\r\n]\r\nexport const crystalizeLevelMultipliers = [ 0,\r\n  91,  99, 106, 114, 121, 129, 136, 144, 151, 159,\r\n 170, 181, 192, 204, 216, 228, 248, 268, 287, 304,\r\n 320, 337, 352, 368, 384, 394, 405, 416, 427, 438,\r\n 448, 459, 470, 481, 490, 499, 513, 529, 544, 557,\r\n 574, 591, 607, 622, 638, 649, 667, 684, 702, 715,\r\n 733, 750, 767, 784, 800, 814, 834, 855, 876, 896,\r\n 915, 936, 956, 982,1003,1017,1036,1057,1075,1096,\r\n1114,1135,1149,1170,1191,1205,1224,1243,1260,1277,\r\n1293,1308,1317,1327,1336,1349,1366,1384,1403,1424,\r\n1450,1478,1507,1543,1570,1580,1589,1673,1682,1691,\r\n]","import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key) &&\r\n        console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key => \r\n      !StatData[key]?.const &&\r\n        console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\r\nconst reduceOptimizationTarget = (optimizationTarget) =>\r\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0]] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\r\n\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n  reduceOptimizationTarget,\r\n}\r\n","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","//for DB v2, we changed a bunch of keys.\r\nconst changes = {\r\n  char_ele_key: \"characterEle\",\r\n  char_level: \"characterLevel\",\r\n\r\n  hp_base: \"characterHP\",\r\n  hp_final: \"finalHP\",\r\n  atk_character_base: \"characterATK\",\r\n  atk_base: \"baseATK\",\r\n  atk_final: \"finalATK\",\r\n  atk_weapon: \"weaponATK\",\r\n  def_base: \"characterDEF\",\r\n  def_final: \"finalDEF\",\r\n  phy_dmg_bonus: \"physical_dmg_\",\r\n  phy_res: \"physical_res_\",\r\n  anemo_ele_dmg_bonus: \"anemo_dmg_\",\r\n  geo_ele_dmg_bonus: \"geo_dmg_\",\r\n  electro_ele_dmg_bonus: \"electro_dmg_\",\r\n  hydro_ele_dmg_bonus: \"hydro_dmg_\",\r\n  pyro_ele_dmg_bonus: \"pyro_dmg_\",\r\n  cryo_ele_dmg_bonus: \"cryo_dmg_\",\r\n  anemo_ele_res: \"anemo_res_\",\r\n  geo_ele_res: \"geo_res_\",\r\n  electro_ele_res: \"electro_res_\",\r\n  hydro_ele_res: \"hydro_res_\",\r\n  pyro_ele_res: \"pyro_res_\",\r\n  cryo_ele_res: \"cryo_res_\",\r\n  ener_rech: \"enerRech_\",\r\n  crit_rate: \"critRate_\",\r\n  crit_dmg: \"critDMG_\",\r\n  stam: \"stamina\",\r\n  heal_bonu: \"heal_\",\r\n  inc_heal: \"incHeal_\",\r\n  pow_shield: \"powShield_\",\r\n  red_cd: \"cdRed_\",\r\n  skill_cd_red: \"skillCDRed_\",\r\n  burst_cd_red: \"burstCDRed_\",\r\n  all_dmg_bonus: \"dmg_\",\r\n  move_spd: \"moveSPD_\",\r\n  atk_spd: \"atkSPD_\",\r\n  weakspot_dmg: \"weakspotDMG_\",\r\n  stamina_dec: \"staminaDec_\",\r\n  stamina_gliding_dec: \"staminaGlidingDec_\",\r\n  stamina_charged_dec: \"staminaChargedDec_\",\r\n  ele_mas_multi_x: \"eleMasX\",\r\n  ele_mas_multi_y: \"eleMasY\",\r\n  ele_mas_multi_z: \"eleMasZ\",\r\n\r\n  norm_atk_dmg: \"physical_normal_hit\",\r\n  char_atk_dmg: \"physical_charged_hit\",\r\n  plunge_dmg: \"physical_plunging_hit\",\r\n  norm_atk_crit_dmg: \"physical_normal_critHit\",\r\n  char_atk_crit_dmg: \"physical_charged_critHit\",\r\n  plunge_crit_dmg: \"physical_plunging_critHit\",\r\n  norm_atk_avg_dmg: \"physical_normal_avgHit\",\r\n  char_atk_avg_dmg: \"physical_charged_avgHit\",\r\n  plunge_avg_dmg: \"physical_plunging_avgHit\",\r\n  norm_atk_dmg_bonus: \"normal_dmg_\",\r\n  char_atk_dmg_bonus: \"charged_dmg_\",\r\n  plunge_atk_dmg_bonus: \"plunging_dmg_\",\r\n  skill_dmg_bonus: \"skill_dmg_\",\r\n  burst_dmg_bonus: \"burst_dmg_\",\r\n  norm_atk_crit_rate: \"normal_critRate_\",\r\n  char_atk_crit_rate: \"charged_critRate_\",\r\n  skill_crit_rate: \"skill_critRate_\",\r\n  burst_crit_rate: \"burst_critRate_\",\r\n\r\n  anemo_skill_dmg: \"anemo_skill_hit\",\r\n  anemo_burst_dmg: \"anemo_burst_hit\",\r\n  anemo_skill_crit_dmg: \"anemo_skill_critHit\",\r\n  anemo_burst_crit_dmg: \"anemo_burst_critHit\",\r\n  anemo_skill_avg_dmg: \"anemo_skill_avgHit\",\r\n  anemo_burst_avg_dmg: \"anemo_burst_avgHit\",\r\n  geo_skill_dmg: \"geo_skill_hit\",\r\n  geo_burst_dmg: \"geo_burst_hit\",\r\n  geo_skill_crit_dmg: \"geo_skill_critHit\",\r\n  geo_burst_crit_dmg: \"geo_burst_critHit\",\r\n  geo_skill_avg_dmg: \"geo_skill_avgHit\",\r\n  geo_burst_avg_dmg: \"geo_burst_avgHit\",\r\n  electro_skill_dmg: \"electro_skill_hit\",\r\n  electro_burst_dmg: \"electro_burst_hit\",\r\n  electro_skill_crit_dmg: \"electro_skill_critHit\",\r\n  electro_burst_crit_dmg: \"electro_burst_critHit\",\r\n  electro_skill_avg_dmg: \"electro_skill_avgHit\",\r\n  electro_burst_avg_dmg: \"electro_burst_avgHit\",\r\n  hydro_skill_dmg: \"hydro_skill_hit\",\r\n  hydro_burst_dmg: \"hydro_burst_hit\",\r\n  hydro_skill_crit_dmg: \"hydro_skill_critHit\",\r\n  hydro_burst_crit_dmg: \"hydro_burst_critHit\",\r\n  hydro_skill_avg_dmg: \"hydro_skill_avgHit\",\r\n  hydro_burst_avg_dmg: \"hydro_burst_avgHit\",\r\n  pyro_skill_dmg: \"pyro_skill_hit\",\r\n  pyro_burst_dmg: \"pyro_burst_hit\",\r\n  pyro_skill_crit_dmg: \"pyro_skill_critHit\",\r\n  pyro_burst_crit_dmg: \"pyro_burst_critHit\",\r\n  pyro_skill_avg_dmg: \"pyro_skill_avgHit\",\r\n  pyro_burst_avg_dmg: \"pyro_burst_avgHit\",\r\n  cryo_skill_dmg: \"cryo_skill_hit\",\r\n  cryo_burst_dmg: \"cryo_burst_hit\",\r\n  cryo_skill_crit_dmg: \"cryo_skill_critHit\",\r\n  cryo_burst_crit_dmg: \"cryo_burst_critHit\",\r\n  cryo_skill_avg_dmg: \"cryo_skill_avgHit\",\r\n  cryo_burst_avg_dmg: \"cryo_burst_avgHit\",\r\n\r\n  phy_dmg: \"physical_hit\",\r\n  phy_crit_dmg: \"physical_critHit\",\r\n  phy_avg_dmg: \"physical_avgHit\",\r\n  anemo_ele_dmg: \"anemo_hit\",\r\n  anemo_ele_crit_dmg: \"anemo_critHit\",\r\n  anemo_ele_avg_dmg: \"anemo_avgHit\",\r\n  geo_ele_dmg: \"geo_hit\",\r\n  geo_ele_crit_dmg: \"geo_critHit\",\r\n  geo_ele_avg_dmg: \"geo_avgHit\",\r\n  electro_ele_dmg: \"electro_hit\",\r\n  electro_ele_crit_dmg: \"electro_critHit\",\r\n  electro_ele_avg_dmg: \"electro_avgHit\",\r\n  hydro_ele_dmg: \"hydro_hit\",\r\n  hydro_ele_crit_dmg: \"hydro_critHit\",\r\n  hydro_ele_avg_dmg: \"hydro_avgHit\",\r\n  pyro_ele_dmg: \"pyro_hit\",\r\n  pyro_ele_crit_dmg: \"pyro_critHit\",\r\n  pyro_ele_avg_dmg: \"pyro_avgHit\",\r\n  cryo_ele_dmg: \"cryo_hit\",\r\n  cryo_ele_crit_dmg: \"cryo_critHit\",\r\n  cryo_ele_avg_dmg: \"cryo_avgHit\",\r\n\r\n  overload_dmg: \"overload_hit\",\r\n  overload_dmg_bonus: \"overload_dmg_\",\r\n  overload_multi: \"overload_multi\",\r\n  electrocharged_dmg: \"electrocharged_hit\",\r\n  electrocharged_dmg_bonus: \"electrocharged_dmg_\",\r\n  electrocharged_multi: \"electrocharged_multi\",\r\n  superconduct_dmg: \"superconduct_hit\",\r\n  superconduct_dmg_bonus: \"superconduct_dmg_\",\r\n  superconduct_multi: \"superconduct_multi\",\r\n  burning_dmg: \"burning_hit\",\r\n  burning_dmg_bonus: \"burning_dmg_\",\r\n  swirl_dmg: \"swirl_hit\",\r\n  swirl_dmg_bonus: \"swirl_dmg_\",\r\n  swirl_multi: \"swirl_multi\",\r\n  shatter_dmg: \"shattered_hit\",\r\n  shatter_dmg_bonus: \"shattered_dmg_\",\r\n  shatter_multi: \"shattered_multi\",\r\n  crystalize_dmg: \"crystalize_hit\",\r\n  crystalize_dmg_bonus: \"crystalize_dmg_\",\r\n\r\n  melt_dmg_bonus: \"melt_dmg_\",\r\n  vaporize_dmg_bonus: \"vaporize_dmg_\",\r\n\r\n  pyro_vaporize_normal_dmg: \"pyro_vaporize_normal_hit\",\r\n  pyro_vaporize_normal_crit_dmg: \"pyro_vaporize_normal_critHit\",\r\n  pyro_vaporize_normal_avg_dmg: \"pyro_vaporize_normal_avgHit\",\r\n  pyro_vaporize_chraged_dmg: \"pyro_vaporize_chraged_hit\",\r\n  pyro_vaporize_chraged_crit_dmg: \"pyro_vaporize_chraged_critHit\",\r\n  pyro_vaporize_chraged_avg_dmg: \"pyro_vaporize_chraged_avgHit\",\r\n  pyro_vaporize_plunge_dmg: \"pyro_vaporize_plunging_hit\",\r\n  pyro_vaporize_plunge_crit_dmg: \"pyro_vaporize_plunging_critHit\",\r\n  pyro_vaporize_plunge_avg_dmg: \"pyro_vaporize_plunging_avgHit\",\r\n  pyro_vaporize_skill_dmg: \"pyro_vaporize_skill_hit\",\r\n  pyro_vaporize_skill_crit_dmg: \"pyro_vaporize_skill_critHit\",\r\n  pyro_vaporize_skill_avg_dmg: \"pyro_vaporize_skill_avgHit\",\r\n  pyro_vaporize_burst_dmg: \"pyro_vaporize_burst_hit\",\r\n  pyro_vaporize_burst_crit_dmg: \"pyro_vaporize_burst_critHit\",\r\n  pyro_vaporize_burst_avg_dmg: \"pyro_vaporize_burst_avgHit\",\r\n  pyro_vaporize_ele_dmg: \"pyro_vaporize_hit\",\r\n  pyro_vaporize_ele_crit_dmg: \"pyro_vaporize_critHit\",\r\n  pyro_vaporize_ele_avg_dmg: \"pyro_vaporize_avgHit\",\r\n  hydro_vaporize_normal_dmg: \"hydro_vaporize_normal_hit\",\r\n  hydro_vaporize_normal_crit_dmg: \"hydro_vaporize_normal_critHit\",\r\n  hydro_vaporize_normal_avg_dmg: \"hydro_vaporize_normal_avgHit\",\r\n  hydro_vaporize_chraged_dmg: \"hydro_vaporize_chraged_hit\",\r\n  hydro_vaporize_chraged_crit_dmg: \"hydro_vaporize_chraged_critHit\",\r\n  hydro_vaporize_chraged_avg_dmg: \"hydro_vaporize_chraged_avgHit\",\r\n  hydro_vaporize_plunge_dmg: \"hydro_vaporize_plunging_hit\",\r\n  hydro_vaporize_plunge_crit_dmg: \"hydro_vaporize_plunging_critHit\",\r\n  hydro_vaporize_plunge_avg_dmg: \"hydro_vaporize_plunging_avgHit\",\r\n  hydro_vaporize_skill_dmg: \"hydro_vaporize_skill_hit\",\r\n  hydro_vaporize_skill_crit_dmg: \"hydro_vaporize_skill_critHit\",\r\n  hydro_vaporize_skill_avg_dmg: \"hydro_vaporize_skill_avgHit\",\r\n  hydro_vaporize_burst_dmg: \"hydro_vaporize_burst_hit\",\r\n  hydro_vaporize_burst_crit_dmg: \"hydro_vaporize_burst_critHit\",\r\n  hydro_vaporize_burst_avg_dmg: \"hydro_vaporize_burst_avgHit\",\r\n  hydro_vaporize_ele_dmg: \"hydro_vaporize_hit\",\r\n  hydro_vaporize_ele_crit_dmg: \"hydro_vaporize_critHit\",\r\n  hydro_vaporize_ele_avg_dmg: \"hydro_vaporize_avgHit\",\r\n  pyro_melt_normal_dmg: \"pyro_melt_normal_hit\",\r\n  pyro_melt_normal_crit_dmg: \"pyro_melt_normal_critHit\",\r\n  pyro_melt_normal_avg_dmg: \"pyro_melt_normal_avgHit\",\r\n  pyro_melt_chraged_dmg: \"pyro_melt_chraged_hit\",\r\n  pyro_melt_chraged_crit_dmg: \"pyro_melt_chraged_critHit\",\r\n  pyro_melt_chraged_avg_dmg: \"pyro_melt_chraged_avgHit\",\r\n  pyro_melt_plunge_dmg: \"pyro_melt_plunging_hit\",\r\n  pyro_melt_plunge_crit_dmg: \"pyro_melt_plunging_critHit\",\r\n  pyro_melt_plunge_avg_dmg: \"pyro_melt_plunging_avgHit\",\r\n  pyro_melt_skill_dmg: \"pyro_melt_skill_hit\",\r\n  pyro_melt_skill_crit_dmg: \"pyro_melt_skill_critHit\",\r\n  pyro_melt_skill_avg_dmg: \"pyro_melt_skill_avgHit\",\r\n  pyro_melt_burst_dmg: \"pyro_melt_burst_hit\",\r\n  pyro_melt_burst_crit_dmg: \"pyro_melt_burst_critHit\",\r\n  pyro_melt_burst_avg_dmg: \"pyro_melt_burst_avgHit\",\r\n  pyro_melt_ele_dmg: \"pyro_melt_hit\",\r\n  pyro_melt_ele_crit_dmg: \"pyro_melt_critHit\",\r\n  pyro_melt_ele_avg_dmg: \"pyro_melt_avgHit\",\r\n  cryo_melt_normal_dmg: \"cryo_melt_normal_hit\",\r\n  cryo_melt_normal_crit_dmg: \"cryo_melt_normal_critHit\",\r\n  cryo_melt_normal_avg_dmg: \"cryo_melt_normal_avgHit\",\r\n  cryo_melt_chraged_dmg: \"cryo_melt_chraged_hit\",\r\n  cryo_melt_chraged_crit_dmg: \"cryo_melt_chraged_critHit\",\r\n  cryo_melt_chraged_avg_dmg: \"cryo_melt_chraged_avgHit\",\r\n  cryo_melt_plunge_dmg: \"cryo_melt_plunging_hit\",\r\n  cryo_melt_plunge_crit_dmg: \"cryo_melt_plunging_critHit\",\r\n  cryo_melt_plunge_avg_dmg: \"cryo_melt_plunging_avgHit\",\r\n  cryo_melt_skill_dmg: \"cryo_melt_skill_hit\",\r\n  cryo_melt_skill_crit_dmg: \"cryo_melt_skill_critHit\",\r\n  cryo_melt_skill_avg_dmg: \"cryo_melt_skill_avgHit\",\r\n  cryo_melt_burst_dmg: \"cryo_melt_burst_hit\",\r\n  cryo_melt_burst_crit_dmg: \"cryo_melt_burst_critHit\",\r\n  cryo_melt_burst_avg_dmg: \"cryo_melt_burst_avgHit\",\r\n  cryo_melt_ele_dmg: \"cryo_melt_hit\",\r\n  cryo_melt_ele_crit_dmg: \"cryo_melt_critHit\",\r\n  cryo_melt_ele_avg_dmg: \"cryo_melt_avgHit\",\r\n\r\n  enemy_phy_res: \"physical_enemyRes_\",\r\n  enemy_phy_res_multi: \"physical_enemyRes_multi\",\r\n  enemy_phy_immunity: \"physical_enemyImmunity\",\r\n  anemo_enemy_ele_res: \"anemo_enemyRes_\",\r\n  anemo_enemy_ele_res_multi: \"anemo_enemyRes_multi\",\r\n  anemo_enemy_ele_immunity: \"anemo_enemyImmunity\",\r\n  geo_enemy_ele_res: \"geo_enemyRes_\",\r\n  geo_enemy_ele_res_multi: \"geo_enemyRes_multi\",\r\n  geo_enemy_ele_immunity: \"geo_enemyImmunity\",\r\n  electro_enemy_ele_res: \"electro_enemyRes_\",\r\n  electro_enemy_ele_res_multi: \"electro_enemyRes_multi\",\r\n  electro_enemy_ele_immunity: \"electro_enemyImmunity\",\r\n  hydro_enemy_ele_res: \"hydro_enemyRes_\",\r\n  hydro_enemy_ele_res_multi: \"hydro_enemyRes_multi\",\r\n  hydro_enemy_ele_immunity: \"hydro_enemyImmunity\",\r\n  pyro_enemy_ele_res: \"pyro_enemyRes_\",\r\n  pyro_enemy_ele_res_multi: \"pyro_enemyRes_multi\",\r\n  pyro_enemy_ele_immunity: \"pyro_enemyImmunity\",\r\n  cryo_enemy_ele_res: \"cryo_enemyRes_\",\r\n  cryo_enemy_ele_res_multi: \"cryo_enemyRes_multi\",\r\n  cryo_enemy_ele_immunity: \"cryo_enemyImmunity\",\r\n\r\n  ele_mas: \"eleMas\",\r\n  amp_reaction_base_multi: \"ampReactionBase_multi\",\r\n\r\n  enemy_level_multi: \"enemyLevel_multi\",\r\n  enemy_level: \"enemyLevel\"\r\n}\r\n/*\r\nconst same = [\r\n  hp, hp_, atk, atk_, def, def_, pyro_vaporize_multi, hydro_vaporize_multi, pyro_melt_multi, cryo_melt_multi,\r\n]\r\n\r\nconst removed = [\r\n  norm_atk_crit_multi, char_atk_crit_multi, norm_atk_bonus_multi, char_atk_bonus_multi, plunge_bonus_multi, skill_crit_multi, burst_crit_multi, skill_bonus_multi, burst_bonus_multi, phy_bonus_multi, anemo_ele_bonus_multi, geo_ele_bonus_multi, electro_ele_bonus_multi, hydro_ele_bonus_multi, pyro_ele_bonus_multi, cryo_ele_bonus_multi, crit_dmg_multi, crit_multi,\r\n]\r\n\r\nconst aded = [\r\n  plunging_critRate_, final_normal_critRate_, final_charged_critRate_, final_plunging_critRate_, final_skill_critRate_, final_burst_critRate_,\r\n]\r\n*/\r\n\r\n//renamed dmgMode to hitMode\r\nconst dmgModeToHitMode = {\r\n  avg_dmg: \"avgHit\",\r\n  dmg: \"hit\",\r\n  crit_dmg: \"critHit\"\r\n}\r\nexport { changes, dmgModeToHitMode }","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\nimport { changes as v2change, dmgModeToHitMode } from \"./dbV2KeyMap\";\r\nimport { loadFromLocalStorage, saveToLocalStorage } from \"./Util/Util\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  const dbVersion = getDatabaseVersion()\r\n  //edit the data before the database is populated\r\n  if (dbVersion < 2) {\r\n    //made characters unique, so need to convert character_{NUMBER} to char_{characterKey}. Will only save the 1st instance of a character.\r\n    Object.keys(localStorage).filter(key => key.startsWith(\"character_\")).forEach(key => {\r\n      const character = loadFromLocalStorage(key);\r\n      const { characterKey, equippedArtifacts = {} } = character\r\n      const dbKey = `char_${characterKey}`\r\n      if (localStorage.getItem(dbKey) === null) {\r\n        //if there is no character saved, create a new character\r\n        const { id, name, dmgMode, ...rest } = character\r\n        if (Array.isArray(rest?.buildSetting?.mainStat))\r\n          rest.buildSetting.mainStat = rest.buildSetting.mainStat.map(stat => stat in v2change ? v2change[stat] : stat)\r\n        if (typeof rest?.buildSetting?.statFilters === \"object\")\r\n          rest.buildSetting.statFilters = Object.fromEntries(Object.entries(rest.buildSetting.statFilters).map(([stat, value]) => [stat in v2change ? v2change[stat] : stat, value]))\r\n        rest.hitMode = dmgModeToHitMode[dmgMode] ?? Object.keys(dmgModeToHitMode)[0]\r\n        saveToLocalStorage(dbKey, rest)\r\n        //equip to the new character\r\n        Object.values(equippedArtifacts).forEach(artid => {\r\n          const art = loadFromLocalStorage(artid);\r\n          if (!art) return\r\n          art.location = characterKey\r\n          saveToLocalStorage(artid, art)\r\n        });\r\n      } else {\r\n        //if the character does exist, \"move\" the artifacts equipped to inventory\r\n        Object.values(equippedArtifacts).forEach(artid => {\r\n          const art = loadFromLocalStorage(artid);\r\n          if (!art) return\r\n          art.location = \"\"\r\n          saveToLocalStorage(artid, art)\r\n        });\r\n      }\r\n      //delete the old database\r\n      localStorage.removeItem(key)\r\n    })\r\n    //reset the ArtifactDisplay keys\r\n    const ArtifactDisplayState = loadFromLocalStorage(\"ArtifactDisplay.state\")\r\n    if (ArtifactDisplayState) {\r\n      if (ArtifactDisplayState.filterMainStatKey in v2change)\r\n        ArtifactDisplayState.filterMainStatKey = v2change[ArtifactDisplayState.filterMainStatKey]\r\n      ArtifactDisplayState.filterSubstats = ArtifactDisplayState.filterSubstats.map(stat => stat in v2change ? v2change[stat] : stat)\r\n      saveToLocalStorage(\"ArtifactDisplay.state\", ArtifactDisplayState)\r\n    }\r\n  }\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  const charDBJustPopualted = CharacterDatabase.populateDatebaseFromLocalStorage(),\r\n    artDBJustPopualted = ArtifactDatabase.populateDatebaseFromLocalStorage()\r\n  if (!charDBJustPopualted && !artDBJustPopualted) return\r\n\r\n  Object.values(ArtifactDatabase.getArtifactDatabase()).forEach(art => {\r\n    let valid = true\r\n\r\n    //verify the linking of artifacts and characters\r\n    if (art.location) {\r\n      const locationChar = CharacterDatabase.get(art.location)\r\n      if (locationChar) {\r\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\r\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\r\n          CharacterDatabase.equipArtifact(art.location, art)\r\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\r\n          art.location = \"\"\r\n          valid = false\r\n        }\r\n      } else {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (dbVersion < 1) {\r\n      //generate artifact efficiency again for artifacts\r\n      Artifact.substatsValidation(art)\r\n      valid = false\r\n\r\n      //there was a bug that saved the numStars as strings. convert to number.\r\n      if (typeof art.numStars === \"string\") {\r\n        art.numStars = parseInt(art.numStars)\r\n        valid = false\r\n      }\r\n\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (dbVersion < 2) {\r\n      if (art.mainStatKey in v2change) {\r\n        art.mainStatKey = v2change[art.mainStatKey]\r\n        valid = false\r\n      }\r\n      art?.substats?.forEach((obj, i) => {\r\n        if (obj.key in v2change) {\r\n          art.substats[i].key = v2change[obj.key]\r\n          valid = false\r\n        }\r\n      })\r\n    }\r\n\r\n    //Update any invalid artifacts in DB\r\n    if (!valid) ArtifactDatabase.updateArtifact(art)\r\n  })\r\n\r\n  let chars = CharacterDatabase.getCharacterDatabase();\r\n  Object.values(chars).forEach(character => {\r\n    let valid = true;\r\n    const { characterKey } = character\r\n    //verify character database equipment validity\r\n    if (!character.equippedArtifacts) {\r\n      character.equippedArtifacts = {}\r\n      valid = false\r\n    }\r\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\r\n      const equippedArt = ArtifactDatabase.get(artid)\r\n      if (equippedArt && equippedArt.location !== characterKey) //the artifact doesnt have the right location...\r\n        ArtifactDatabase.moveToNewLocation(artid, characterKey)\r\n      if (!equippedArt) {\r\n        valid = false\r\n        character.equippedArtifacts[slotKey] = \"\"\r\n      }\r\n    })\r\n\r\n    if (dbVersion < 1) {\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      }) ?? []\r\n\r\n      //check for dmgMode\r\n      if (!character.hitMode) {\r\n        character.hitMode = \"hit\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    //update any invalid characters in DB\r\n    if (!valid) CharacterDatabase.updateCharacter(character)\r\n  })\r\n  setDatabaseVersion(2)\r\n}\r\nconst getDatabaseVersion = (defVal = 0) =>\r\n  parseInt(loadFromLocalStorage(\"db_ver\") ?? defVal)\r\n\r\nconst setDatabaseVersion = (version) =>\r\n  saveToLocalStorage(\"db_ver\", version)\r\n\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Character from \"../Character/Character\";\r\nimport CharacterDatabase from \"../Character/CharacterDatabase\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    // names must be equal\r\n    return 0;\r\n  })).map(characterKey =>\r\n    <Dropdown.Item key={characterKey} onClick={() => onSelect(characterKey)}>\r\n      {Character.getName(characterKey)}\r\n    </Dropdown.Item>)\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n};\r\n\r\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Image, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nfunction ReactionToggle({ character: { characterKey, reactionMode = \"none\" }, setReactionMode, className }) {\r\n  reactionMode === null && (reactionMode = \"none\")\r\n  const charEleKey = Character.getElementalKey(characterKey)\r\n  return [\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup className={className}\r\n    type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setReactionMode(val === \"none\" ? null : val)}>\r\n    <ToggleButton value={\"none\"} variant={reactionMode === \"none\" ? \"success\" : \"primary\"}>No Reactions</ToggleButton >\r\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_vaporize\"} variant={reactionMode === \"pyro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Pyro) <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_melt\"} variant={reactionMode === \"pyro_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Pyro) <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"hydro\" && <ToggleButton value={\"hydro_vaporize\"} variant={reactionMode === \"hydro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Hydro) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"cryo\" && <ToggleButton value={\"cryo_melt\"} variant={reactionMode === \"cryo_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Cryo) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n  </ToggleButtonGroup>\r\n}\r\nfunction HitModeToggle({ hitMode, setHitMode, className }) {\r\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={setHitMode} className={className}>\r\n    <ToggleButton value=\"avgHit\" variant={hitMode === \"avgHit\" ? \"success\" : \"primary\"}>Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\" variant={hitMode === \"hit\" ? \"success\" : \"primary\"}>Normal Hit, No Crit</ToggleButton>\r\n    <ToggleButton value=\"critHit\" variant={hitMode === \"critHit\" ? \"success\" : \"primary\"}>Crit Hit DMG</ToggleButton>\r\n  </ToggleButtonGroup>\r\n}\r\n\r\nfunction CalculationDisplay({ character, character: { characterKey }, build }) {\r\n  return <div>\r\n    {Object.entries(Character.getDisplayStatKeys(character)).map(([talentKey, fields]) => {\r\n      let header = \"\"\r\n      if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n      else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n      else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n      else header = Character.getTalentName(characterKey, talentKey, talentKey)\r\n      return <Card bg=\"darkcontent\" text=\"lightfont\" key={talentKey} className=\"w-100 mb-2\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body className=\"p-2\">\r\n          <Accordion className=\"mb-n2\">\r\n            {fields.map((field, fieldIndex) => {\r\n              //simple statKey field\r\n              if (typeof field === \"string\") {\r\n                const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, [field]), build?.finalStats?.modifiers).reverse()\r\n                return Boolean(subFormulaKeys.length) && <Card key={fieldIndex} bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                  <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                    {Stat.printStat(field, build.finalStats)}\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                    <Card.Body className=\"p-2\">\r\n                      <div className=\"mb-n2\">\r\n                        {subFormulaKeys.map(subKey =>\r\n                          <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build.finalStats)} = <small>{Stat.printFormula(subKey, build.finalStats, build.finalStats.modifiers, false)}</small></p>\r\n                        )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              }\r\n              //fields\r\n              const talentField = Character.getTalentField(character, field.talentKey, field.sectionIndex, field.fieldIndex)\r\n              const fieldText = Character.getTalentFieldValue(talentField, \"text\", talentKey, build.finalStats)\r\n              const fieldVariant = Character.getTalentFieldValue(talentField, \"variant\", talentKey, build.finalStats)\r\n              const fieldFormulaText = Character.getTalentFieldValue(talentField, \"formulaText\", talentKey, build.finalStats)\r\n              const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(talentField, \"formula\", talentKey, build.finalStats, [])\r\n              if (!fieldFormula || !fieldFormulaDependency) return null\r\n              const fieldValue = fieldFormula?.(build.finalStats)?.toFixed?.()\r\n              const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, fieldFormulaDependency), build?.finalStats?.modifiers).reverse()\r\n              return <Card key={fieldIndex} bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                  <b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                  <Card.Body className=\"p-2\">\r\n                    <div className=\"mb-n2\">\r\n                      <p className=\"mb-2\"><b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span> = <small>{fieldFormulaText}</small></p>\r\n                      {subFormulaKeys.map(subKey =>\r\n                        <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build.finalStats)} = <small>{Stat.printFormula(subKey, build.finalStats, build.finalStats.modifiers, false)}</small></p>\r\n                      )}\r\n                    </div>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            })}\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n    })}\r\n  </div>\r\n}\r\n\r\nconst ContextAwareToggle = ({ eventKey, callback }) => {\r\n  const currentEventKey = useContext(AccordionContext);\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey),\r\n  );\r\n  const expanded = currentEventKey === eventKey;\r\n  return (\r\n    <Button onClick={decoratedOnClick} >\r\n      <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n      <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function DamageOptionsAndCalculation({ character, character: { hitMode }, setState, setOverride, newBuild, equippedBuild }) {\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <Accordion>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span className=\"d-block\">Damage Calculation Options</span>\r\n            <small>Expand below to edit enemy details.</small>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {/* TODO reaction interaction UI */}\r\n            <ReactionToggle {...{ character, setReactionMode: r => setState({ reactionMode: r }) }} />\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"1\">\r\n        <Card.Body>\r\n          <Row className=\"mb-2\"><Col>\r\n            <Button variant=\"warning\" >\r\n              <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                To get the specific resistance values of enemies, please visit the wiki.\r\n          </a>\r\n            </Button >\r\n          </Col></Row>\r\n          <Row>\r\n            <Col xs={12} xl={6} className=\"mb-2\">\r\n              <StatInput\r\n                name={<b>Enemy Level</b>}\r\n                value={Character.getStatValueWithOverride(character, \"enemyLevel\")}\r\n                placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n                defaultValue={Character.getBaseStatValue(character, \"enemyLevel\")}\r\n                onValueChange={(val) => setOverride?.(\"enemyLevel\", val)}\r\n              />\r\n            </Col>\r\n            {Character.getElementalKeys().map(eleKey => {\r\n              let statKey = eleKey === \"physical\" ? \"physical_enemyRes_\" : `${eleKey}_enemyRes_`\r\n              let immunityStatKey = eleKey === \"physical\" ? \"physical_enemyImmunity\" : `${eleKey}_enemyImmunity`\r\n              let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n              return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                <StatInput\r\n                  prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                    <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                </Button>}\r\n                  name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  placeholder={Stat.getStatNameRaw(statKey)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                  onValueChange={(val) => setOverride?.(statKey, val)}\r\n                  disabled={elementImmunity}\r\n                />\r\n              </Col>\r\n            })}\r\n          </Row>\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n\r\n    <Card bg=\"lightcontent\" text=\"lightfont\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span className=\"d-block\">Damage Calculation Formulas</span>\r\n            <small>Expand below to see calculation details.</small>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <HitModeToggle {...{ hitMode, setHitMode: m => setState({ hitMode: m }) }} />\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"2\">\r\n        <Card.Body className=\"p-2\">\r\n          <CalculationDisplay character={character} build={build} />\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n  </Accordion>\r\n}\r\nexport {\r\n  HitModeToggle,\r\n  ReactionToggle,\r\n};\r\n\r\n","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Character from '../Character/Character';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, artifactObj, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId && !artifactObj) return null;\r\n  const art = artifactObj ? artifactObj : ArtifactDatabase.get(artifactId);\r\n  if (!art) return null;\r\n  let { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location = \"\", lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  let mainStatLevel = assumeFull ? numStars * 4 : level\r\n  let assFullColor = assumeFull && level !== numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\r\n  let artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\r\n  const equipOnChar = (charKey) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charKey)\r\n    forceUpdate?.()\r\n  }\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\r\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let numRolls = stat?.rolls?.length || 0\r\n          let efficiency = stat?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge percent={currentEfficiency} valid={artifactValid}>\r\n          {currentEfficiency?.toFixed(2) ?? currentEfficiency + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge percent={maximumEfficiency} valid={artifactValid}>\r\n          {maximumEfficiency?.toFixed(2) ?? maximumEfficiency + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{Character.getName(location, \"Inventory\")}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={ckey => equipOnChar(ckey)} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><b>{Character.getName(location, \"Inventory\")}</b></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={location}\r\n                  style={location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    art.lock = !lock\r\n                    ArtifactDatabase.updateArtifact(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(lock || location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onValueChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { Col, Row } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText = \"\", diffText = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\r\n\r\n  return <Col xs=\"12\"><Row>\r\n    <Col><b>{label}</b></Col>\r\n    <Col xs=\"auto\">{oldText}{diff ? \" \" : \"\"}{diffText}</Col>\r\n  </Row></Col>\r\n}\r\nexport default function StatDisplay({ character, character: { characterKey }, equippedBuild, newBuild, editable, statKey }) {\r\n  let val, oldVal, fixed, unit, variant;\r\n  let label = \"\"\r\n  if (typeof statKey === \"string\") {//basic statKey\r\n    if (newBuild && equippedBuild) {//comparable\r\n      //newbuild -> val\r\n      //equippedbuild ->old\r\n      val = newBuild?.finalStats?.[statKey] ?? 0\r\n      oldVal = equippedBuild?.finalStats?.[statKey] ?? 0\r\n    } else {\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      //build ->val\r\n      val = build?.finalStats?.[statKey] ?? 0\r\n      //statvaluewith override -> old\r\n      const invalid = \"invalid\"//can't use undeinfed as the defVal, since I want undefined for invalid numbers.\r\n      oldVal = Character.getStatValueWithOverride(character, statKey, invalid)\r\n      oldVal === invalid && (oldVal = undefined)\r\n      if (statKey === \"finalHP\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterHP\")\r\n      else if (statKey === \"finalDEF\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterDEF\")\r\n      else if (statKey === \"finalATK\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterATK\") + Character.getStatValueWithOverride(character, \"weaponATK\")\r\n    }\r\n    unit = Stat.getStatUnit(statKey)\r\n    fixed = Stat.fixedUnit(statKey)\r\n    label = <span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>\r\n  } else {//from character sheet\r\n    const build = newBuild ? newBuild : equippedBuild\r\n    const { talentKey, sectionIndex, fieldIndex } = statKey\r\n    const field = Character.getTalentField(character, talentKey, sectionIndex, fieldIndex)\r\n    const labelVariant = Character.getTalentFieldValue(field, \"variant\", talentKey, build.finalStats)\r\n    label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", talentKey, build.finalStats)}</span>\r\n    fixed = Character.getTalentFieldValue(field, \"fixed\", talentKey, build.finalStats, 0)\r\n    val = Character.getTalentFieldValue(field, \"formula\", talentKey, build.finalStats)?.[0]?.(build.finalStats)\r\n    if (newBuild && equippedBuild) {//comparable\r\n      oldVal = Character.getTalentFieldValue(field, \"formula\", talentKey, equippedBuild.finalStats)?.[0]?.(equippedBuild.finalStats)\r\n    }\r\n  }\r\n\r\n  if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label }} />\r\n}","import { OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\n\r\nconst WIPComponent = ({ children }) =>\r\n  <OverlayTrigger\r\n    overlay={<Tooltip>Work In Progress</Tooltip>}\r\n  >\r\n    <span>\r\n      {children}\r\n    </span>\r\n  </OverlayTrigger>\r\n\r\nexport default WIPComponent","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","\r\n//take the new statsDisplayKeys, and display the stats.\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport Character from \"../Character\"\r\n\r\nexport default function StatDisplayComponent({ character, character: { characterKey }, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }) {\r\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([talentKey, fields]) => {\r\n    let header = \"\"\r\n    if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n    else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n    else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n    else header = Character.getTalentName(characterKey, talentKey, talentKey)\r\n    return <Col key={talentKey} className=\"mb-2\" xs={12} md={6} xl={4}>\r\n      <Card bg={cardbg} text=\"lightfont\" className=\"h-100\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body>\r\n          <Row>{fields.map(field => <StatDisplay key={JSON.stringify(field)} {...{ character, equippedBuild, newBuild, editable, statKey: field }} />)}</Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  })}</Row>\r\n}","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\r\nimport { Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport Stat from \"../../Stat\";\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\nimport DamageOptionsAndCalculation from './DamageOptionsAndCalculation';\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState, setOverride }) {\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(character)\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  return <>\r\n    {Character.hasTalentPage(characterKey) && <Row><Col xs={12} className=\"mb-2\">\r\n      <DamageOptionsAndCalculation {...{ character, setState, setOverride, newBuild, equippedBuild }} />\r\n    </Col></Row>}\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Body>\r\n            <StatDisplayComponent {...{ character, equippedBuild, newBuild, statsDisplayKeys: statKeys, build, forceUpdate, setState, setOverride, editable }} />\r\n          </Card.Body>\r\n          {newBuild ? <Card.Footer>\r\n            <Button onClick={() => {\r\n              Character.equipArtifacts(characterKey, newBuild.artifactIds)\r\n              forceUpdate?.()\r\n            }}>Equip All artifacts to current character</Button>\r\n            {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n          </Card.Footer> : null}\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Artifact.getSlotKeys().map(slotKey =>\r\n            build.artifactIds[slotKey] ? <Col sm={6} lg={4} key={build.artifactIds[slotKey]} className=\"mb-2\">\r\n              <ArtifactCard artifactId={build.artifactIds[slotKey]} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport CustomFormControl from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"characterLevel\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <CustomFormControl onValueChange={(val) => setOverride(\"characterLevel\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"characterLevel\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"} cursor-pointer`}\r\n                          roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction StatItem({ statKey, val }) {\r\n  if (!statKey) return null\r\n  return <Col xs={12} lg={6} className=\"px-3\">\r\n    <span><b>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</b></span>\r\n    <span className={`float-right text-right text-${Stat.getStatVariant(statKey)}`} >{val?.toFixed?.(Stat.fixedUnit(statKey)) || val}{Stat.getStatUnit(statKey)}</span>\r\n  </Col>\r\n}\r\nfunction WeaponStatsCard({ title, stats = {}, finalStats = {} }) {\r\n  if (Object.keys(stats ?? {}).length === 0) return null\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <Card.Body className=\"py-2 px-0\"><Row>\r\n      {Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? <React.Fragment key={key} >{Object.entries(val ?? {}).map(([mkey, modifier]) =>\r\n        <StatItem key={mkey} statKey={mkey} val={Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0)} />)}</React.Fragment>\r\n        : <StatItem key={key} statKey={key} val={val} />)}\r\n    </Row></Card.Body>\r\n  </Card>\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon = {} }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex, undefined)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum, undefined)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinement</span>\r\n                </Dropdown.ItemText>\r\n                <Dropdown.Divider />\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build?.finalStats, character)}</p>\r\n            <WeaponStatsCard title={\"Main Stats\"} stats={{ atk: weaponDisplayMainVal, [subStatKey]: weaponDisplaySubVal }} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Bonus Stats\"} stats={weaponBonusStats} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Conditional Stats\"} stats={conditionalStats} finalStats={build?.finalStats} />\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  const { editable, character, setOverride, equippedBuild, newBuild } = props\r\n\r\n  const [editing, SetEditing] = useState(false)\r\n  const [editingOther, SetEditingOther] = useState(false)\r\n  const [editingMisc, SetEditingMisc] = useState(false)\r\n\r\n  const additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"characterHP\", \"hp\", \"hp_\", \"characterATK\", \"atk\", \"atk_\", \"characterDEF\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = []\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_dmg_`)\r\n    otherStatKeys.push(`${ele}_res_`)\r\n  })\r\n  otherStatKeys.push(\"stamina\", \"incHeal_\", \"powShield_\")\r\n\r\n  const miscStatkeys = [\r\n    \"normal_dmg_\", \"normal_critRate_\",\r\n    \"charged_dmg_\", \"charged_critRate_\",\r\n    \"skill_dmg_\", \"skill_critRate_\",\r\n    \"burst_dmg_\", \"burst_critRate_\",\r\n    \"dmg_\", \"moveSPD_\", \"atkSPD_\", \"weakspotDMG_\"]\r\n\r\n  const specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  const specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const isPercentSpecialStatSelect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                <CustomFormControl float={isPercentSpecialStatSelect}\r\n                  placeholder=\"Character Special Stat\"\r\n                  value={Character.getStatValueWithOverride(character, \"specializedStatVal\")}\r\n                  onValueChange={(value) => setOverride(\"specializedStatVal\", value)} />\r\n                {isPercentSpecialStatSelect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {displayStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{otherStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingMisc ? \"danger\" : \"info\"} onClick={() => SetEditingMisc(!editingMisc)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingMisc ? faSave : faEdit} /> {editingMisc ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingMisc ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {miscStatkeys.map(statKey =>\r\n              <Col xl={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{miscStatkeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n  </>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from 'react';\r\nimport { useState } from \"react\";\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport DamageOptionsAndCalculation from \"./DamageOptionsAndCalculation\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <DamageOptionsAndCalculation {...{ character, setState, setOverride, newBuild, equippedBuild }} />\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {Character.getTalent(characterKey, \"sprint\", false) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey }, newBuild, equippedBuild }) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  const charEleKey = Character.getElementalKey(characterKey)\r\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row className=\"mb-n2\">\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele stats={build?.finalStats} /></Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-superconduct\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-electrocharged\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-overloaded\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>\r\n}\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-0\">\r\n    <DropdownButton size=\"sm\" title={swirlEleToDisplay[ele]} className=\"d-inline-block\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <span className={`text-${ele} p-2`}> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"shattered_hit\"\r\n  const information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-shattered\">{Stat.getStatName(sKey)} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ stats }) {\r\n  const sKey = \"crystalize_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-crystalize\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nfunction modifiersToFields(modifiers, finalStats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    value: Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0),\r\n    formulaText: <span>{Object.entries(modifier ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, finalStats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey),\r\n    unit: Stat.getStatUnit(mStatKey)\r\n  }))\r\n}\r\nfunction statsToFields(stats, finalStats = {}) {\r\n  return Object.entries(stats).map(([statKey, statVal]) =>\r\n    statKey === \"modifiers\" ? modifiersToFields(statVal, finalStats) : {\r\n      text: Stat.getStatName(statKey),\r\n      variant: Stat.getStatVariant(statKey),\r\n      value: statVal,\r\n      fixed: Stat.fixedUnit(statKey),\r\n      unit: Stat.getStatUnit(statKey)\r\n    }\r\n  ).flat()\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, talentLevelKeys, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n\r\n  let talentLvlKey = 0\r\n  if (talentKey in talentLevelKeys) {\r\n    const talentLvlKeyRaw = talentLevelKeys[talentKey]\r\n    const levelBoost = Character.getTalentLevelBoost(characterKey, talentKey, constellation)\r\n    talentLvlKey = talentLvlKeyRaw + levelBoost\r\n    if (editable) {\r\n      const setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        const stateTalentLevelKeys = state.talentLevelKeys || {}\r\n        stateTalentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys: stateTalentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  const statsEle = talentStats && <Row><Col>\r\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {statsToFields(talentStats, build?.finalStats).map((field, i) =>\r\n          <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className={`d-flex flex-row mb-2 ${(editable && onClickTitle) ? \"cursor-pointer\" : \"\"}`} onClick={onClickTitle} >\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            let conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            conditionalFields = [...Character.getTalentConditionalFields(conditional, conditionalNum, []), ...statsToFields(conditionalStats, build?.finalStats)]\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Col xs={12}>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i} index={i} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        }\r\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\r\n          <div className=\"mb-2\">{talentText}</div>\r\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n        </Col>{conditionalEle}</Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay({ character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats)\r\n\r\n  let fieldVariant = field.variant || \"\"\r\n  if (typeof fieldVariant === \"function\")\r\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats)\r\n\r\n  let fieldBasic = field.formulaText\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = null\r\n  if (field.value)\r\n    fieldVal = typeof field.value === \"function\" ? field.value?.(talentLvlKey, build.finalStats) : field.value\r\n  else if (typeof field.formula === \"function\")\r\n    fieldVal = field?.formula?.(talentLvlKey, build.finalStats)?.[0]?.(build.finalStats)\r\n\r\n  let fixedVal = field.fixed || 0\r\n  const unit = typeof field.unit === \"function\" ? field.unit?.(talentLvlKey, build.finalStats) : (field.unit ?? \"\")\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.formula?.(talentLvlKey, equippedBuild.finalStats)?.[0]?.(equippedBuild.finalStats)\r\n\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats)?.toFixed?.(fixedVal))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) || fieldVal}{unit}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}\r\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, Image, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport WIPComponent from '../Components/WIPComponent';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = CharacterDisplayCard.getInitialState()\r\n    const { characterKey } = props\r\n    if (characterKey) {\r\n      const char = CharacterDatabase.get(characterKey) ?? { characterKey, weapon: CharacterDisplayCard.getIntialWeapon(characterKey) }\r\n      this.state = { ...this.state, ...char }\r\n    }\r\n  }\r\n\r\n  static initialState = {\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    hitMode: \"hit\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => deepClone(CharacterDisplayCard.initialState)\r\n  //UI will not update if the character is updated in DB. Components will have to call this to update this UI.\r\n  forceUpdateComponent = () => {\r\n    if (this.state.characterKey)\r\n      this.setState(CharacterDatabase.get(this.state.characterKey))\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setCharacterKey = (characterKey) => {\r\n    let state = CharacterDisplayCard.getInitialState()\r\n    let char = CharacterDatabase.get(characterKey)\r\n    if (char) state = { ...state, ...char }\r\n    else {\r\n      state = { ...state, characterKey, weapon: CharacterDisplayCard.getIntialWeapon(characterKey) }\r\n      this.updateCharacter(this.state)\r\n    }\r\n    this.setState(state)\r\n    this.props?.setCharacterKey?.(characterKey)\r\n  }\r\n\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  updateCharacter(state) {\r\n    state = deepClone(state)\r\n    delete state.compareAgainstEquipped\r\n    CharacterDatabase.updateCharacter(state)\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.characterKey !== this.props.characterKey && this.props.characterKey !== this.state.characterKey)\r\n      this.setCharacterKey(this.props.characterKey)\r\n    if (this.props.editable && this.state.characterKey) {\r\n      //save this.state as character to character db.\r\n      this.updateCharacter(this.state)\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose, tabName } = this.props\r\n    let character = this.state\r\n    //transfer the hitmode/reactions over \r\n    if (newBuild?.finalStats) {\r\n      newBuild = deepClone(newBuild)\r\n      newBuild.finalStats.hitMode = character.hitMode;\r\n      newBuild.finalStats.reactionMode = character.reactionMode;\r\n    }\r\n\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = characterKey ? <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span> : <span>Select a Character</span>\r\n    const commonPaneProps = { character, newBuild, equippedBuild: !newBuild || compareAgainstEquipped ? equippedBuild : undefined, editable, setState: u => this.setState(u), setOverride: this.setOverride, forceUpdate: this.forceUpdateComponent }\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"} className=\"mr-auto\">\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown as={ButtonGroup}>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} disabled={!characterKey} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"characterLevel\")}</span>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      {Boolean(characterKey) && <Card.Body>\r\n        <Tab.Container defaultActiveKey={tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\")} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              {(process.env.NODE_ENV !== \"development\" && !Character.hasTalentPage(characterKey)) ?\r\n                <WIPComponent>\r\n                  <Nav.Link eventKey=\"talent\" disabled>Talents <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n                </WIPComponent> :\r\n                <Nav.Link eventKey=\"talent\">Talents</Nav.Link>\r\n              }\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <WIPComponent>\r\n                <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n              </WIPComponent>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setConstellation={this.setConstellation}\r\n                {...commonPaneProps}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ ...commonPaneProps, newBuild: undefined, equippedBuild, }} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...commonPaneProps} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...commonPaneProps} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>}\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"children\", \"type\", \"name\", \"value\", \"onChange\"]);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    if (!onChange) {\n      return;\n    }\n\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive && onChange) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/React.createElement(ButtonGroup, _extends({}, controlledProps, {\n    ref: ref,\n    toggle: true\n  }), map(children, function (child) {\n    var values = getValues();\n    var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n\n    var handler = function handler(e) {\n      return handleToggle(childVal, e);\n    };\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      type: type,\n      name: child.name || name,\n      checked: values.indexOf(childVal) !== -1,\n      onChange: chainFunction(childOnChange, handler)\n    });\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;","import { Container } from \"react-bootstrap\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport '../StatDependency'\r\nexport default function TestDisplay() {\r\n  DatabaseInitAndVerify()\r\n  return <Container>\r\n    <CharacterDisplayCard editable characterKey=\"amber\" tabName=\"talent\" />\r\n  </Container>\r\n}\r\n","import { StatData } from \"./StatData\"\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\r\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\r\n    return statList.filter(key => keys.has(key))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nexport const FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\r\n    })\r\n\r\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\r\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} + {f(o, `final_${move}_critRate_`)} </span>\r\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\r\n\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\r\n  if (variants.length === 1) {\r\n    const [ ele ] = variants\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>  \r\n  } else {\r\n    variants.forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>  \r\n    })    \r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\n\r\n//multiplies every numberical value in the obj by a multiplier.\r\nfunction objMultiplication(obj, multi) {\r\n  Object.keys(obj).forEach(prop => {\r\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\r\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\r\n  })\r\n}\r\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\r\nconst getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance,\r\n  objMultiplication,\r\n  getObjectKeysRecursive\r\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return this.getLevel(levelKey)\r\n    if (statKey.includes(\"enemyRes_\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getElementalKeysWithoutPhysical = () => this.getElementalKeys().filter(e => e !== \"physical\")\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentDocumentSections = (charKey, talentKey, defVal = []) => {\r\n    const character = CharacterDatabase.get(charKey);\r\n    if (!character) return defVal\r\n    const { constellation = 0, levelKey = Object.keys(LevelsData)[0] } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n    return this.getTalentDocument(charKey, talentKey).map(section => typeof section === \"function\" ? section(constellation, ascension) : section)\r\n  }\r\n  static getTalentField = (character, talentKey, sectionIndex, fieldIndex, defVal = {}) => {\r\n    if (!character) return defVal\r\n    const { constellation = 0, levelKey = Object.keys(LevelsData)[0] } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n    const field = this.getTalentDocumentSections(character.characterKey, talentKey)?.[sectionIndex]?.fields?.[fieldIndex]\r\n    if (!field) return defVal\r\n    return typeof field === \"function\" ? field(constellation, ascension) : field\r\n  }\r\n  static getTalentFieldValue = (field, key, talentKey, stats = {}, defVal = \"\") => {\r\n    if (!field?.[key]) return defVal\r\n    return typeof field?.[key] === \"function\" ? field[key](stats.talentLevelKeys[talentKey], stats) : field[key]\r\n  }\r\n\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    const sections = this.getTalentDocumentSections(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of sections) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  //look up the formula, and generate the formulaPath to send to worker.\r\n  static getFormulaPath(characterKey, talentKey, formula) {\r\n    const formulaDB = this.getCDataObj(characterKey)?.formula\r\n    if (!formulaDB) return\r\n    let formulaKey\r\n    if (talentKey === \"auto\") {\r\n      for (const tk of [\"normal\", \"charged\", \"plunging\"]) {\r\n        ([formulaKey,] = Object.entries(formulaDB?.[tk] ?? {}).find(([, value]) => value === formula) ?? [])\r\n        if (formulaKey) {\r\n          talentKey = tk\r\n          break;\r\n        }\r\n      }\r\n    } else ([formulaKey,] = Object.entries(formulaDB?.[talentKey] ?? {}).find(([, value]) => value === formula) ?? [])\r\n    if (!formulaKey) return\r\n    return { characterKey, talentKey, formulaKey }\r\n  }\r\n\r\n\r\n  static hasTalentPage = (characterKey) => Boolean(Character.getCDataObj(characterKey)?.talent)\r\n\r\n  static getDisplayStatKeys = (character, defVal = { basicKeys: [] }) => {\r\n    if (!character) return defVal\r\n    const { characterKey } = character\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    const isAutoElemental = Character.isAutoElemental(characterKey)\r\n    const isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    if (!isAutoElemental)\r\n      basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    if (this.hasTalentPage(characterKey)) {\r\n      const charFormulas = {}\r\n      Object.keys(Character.getCDataObj(characterKey)?.talent ?? {}).forEach(talentKey =>\r\n        Character.getTalentDocumentSections(characterKey, talentKey)?.forEach((section, sectionIndex) =>\r\n          section?.fields?.forEach((field, fieldIndex) =>\r\n            (field?.formula || this.getTalentField(character, talentKey, sectionIndex, fieldIndex)?.formula) && (charFormulas[talentKey] = [...(charFormulas[talentKey] ?? []), {\r\n              talentKey,\r\n              sectionIndex,\r\n              fieldIndex\r\n            }]))))\r\n      return { basicKeys, ...charFormulas, transReactions }\r\n    } else {\r\n      //generic average hit parameters.\r\n      const genericAvgHit = []\r\n      if (!isAutoElemental) //add phy auto + charged + physical \r\n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\r\n\r\n      if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n        genericAvgHit.push(`${eleKey}_normal_avgHit`, `${eleKey}_charged_avgHit`)\r\n      else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\r\n      }\r\n      //show skill/burst \r\n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\r\n\r\n      //add reactions.\r\n      if (eleKey === \"pyro\") {\r\n        const reactions = []\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n        genericAvgHit.push(...reactions)\r\n      } else if (eleKey === \"cryo\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n      else if (eleKey === \"hydro\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n      return { basicKeys, genericAvgHit, transReactions }\r\n    }\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\r\n    else if (statKey === \"finalDEF\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\r\n    else if (statKey === \"finalATK\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterKey, artifactIds) => {\r\n    let character = CharacterDatabase.get(characterKey)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.get(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterKey) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static remove(characterKey) {\r\n    let character = CharacterDatabase.get(characterKey)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.remove(characterKey)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats).formula(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of Object.entries(val)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of Object.entries(modifier))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\r\n  })\r\n\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    character = deepClone(character)\r\n    const { characterKey, levelKey, hitMode, autoInfused, reactionMode, talentLevelKeys, constellation, talentConditionals = [] } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n\r\n    //generate the initalStats obj with data from Character & overrides\r\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\r\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    initialStats.characterEle = this.getElementalKey(characterKey);\r\n    initialStats.characterKey = characterKey\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.autoInfused = autoInfused && Character.getCDataObj(characterKey)?.talent?.auto?.infusable\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.talentConditionals = talentConditionals\r\n    initialStats.weaponType = this.getWeaponTypeKey(characterKey)\r\n    initialStats.talentLevelKeys = talentLevelKeys;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    for (const key in initialStats.talentLevelKeys)\r\n      initialStats.talentLevelKeys[key] += this.getTalentLevelBoost(character.characterKey, key, constellation);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemyImmunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      const { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      const conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, initialStats.talentLevelKeys[talentKey], constellation, ascension)\r\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    Character.getTalentStatsAll(characterKey, constellation, ascension).forEach(s => this.mergeStats(initialStats, s))\r\n\r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\r\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\r\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\r\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static isInvalid = (char) => !char || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterKeyList = () => Object.keys(characterDatabase);\r\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.startsWith(\"char_\")).forEach(key => {\r\n      let [, characterKey] = key.split(\"char_\")\r\n      if (!characterDatabase[characterKey]) {\r\n        let character = loadFromLocalStorage(key);\r\n        if (!character) return;\r\n        characterDatabase[characterKey] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    const dchar = deepClone(char)\r\n    saveToLocalStorage(`char_${char.characterKey}`, dchar);\r\n    characterDatabase[char.characterKey] = dchar;\r\n  }\r\n  static get = (characterKey) => characterDatabase?.[characterKey] ?? null\r\n\r\n  static remove = (characterKey) => {\r\n    delete characterDatabase[characterKey];\r\n    localStorage.removeItem(`char_${characterKey}`);\r\n  }\r\n  static getArtifactIDFromSlot = (characterKey, slotKey) =>\r\n    this.get(characterKey)?.equippedArtifacts?.[slotKey] ?? null\r\n\r\n  static equipArtifact = (characterKey, art) => {\r\n    const char = this.get(characterKey)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts) char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (characterKey, slotKey) => {\r\n    const char = this.get(characterKey)\r\n    if (!char || !slotKey) return\r\n    if (!char?.equippedArtifacts?.[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterKey, artifactIds) => {\r\n    const character = this.get(characterKey)\r\n    if (!character) return;\r\n    character.equippedArtifacts = artifactIds\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static unequipAllArtifacts = () => {\r\n    Object.values(characterDatabase).forEach(char => {\r\n      char.equippedArtifacts = {}\r\n      this.updateCharacter(char)\r\n    })\r\n  }\r\n  //helper function for testing\r\n  static clearDatabase = () => {\r\n    characterDatabase = {}\r\n    initiated = false\r\n  }\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\r\nimport ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_dmg_`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    eleMas: [13, 17, 22, 27, 32],\r\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    critDMG_: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 1: [24, 30], 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 1: [2], 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 1: [2], 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 1: [1.5, 1.8], 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  eleMas: { 1: [5, 6], 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  enerRech_: { 1: [1.3, 1.6], 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  critRate_: { 1: [0.8, 1], 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  critDMG_: { 1: [1.6, 1.9], 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubStatsData).map(([key, obj]) =>\r\n  [key, {\r\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\r\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\r\n  }]))\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactSubstatsMinMax,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nconst maxStar = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_dmg_\")) // because in the database its still stored as ele_dmg_\r\n      return this.getMainStatValue(\"ele_dmg_\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubstatAllMax = (statKey, numStars = maxStar, defVal = 0) => ArtifactSubstatsMinMax?.[statKey]?.max[numStars] ?? defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => ArtifactSubStatsData?.[subStatKey]?.[numStars] ?? []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, rolls = []) => {\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let max = this.getSubstatAllMax(subStatKey) * len\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      if (rollArr.length > 1) substat.rollArr = rollArr\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(maxStar);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let statKeys = substats.filter(({ key }) => key).map(({ key }) => key)\r\n    let maxPerRoll = 100 * Math.max(...(statKeys.length === 4 ? statKeys : Object.keys(ArtifactSubstatsMinMax)).map(\r\n      key => Artifact.getSubstatAllMax(key, numStars) / Artifact.getSubstatAllMax(key)\r\n    ))\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * maxPerRoll) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect).length > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n      if (Object.keys(condStats).length > 0) {\r\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n        Object.entries(condStats).forEach(([statKey, value]) =>\r\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\r\n      }\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterKey) {\r\n    let art = ArtifactDatabase.get(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterKey || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else if (!conditionalNum && index < 0) { //nothing to change\r\n      return conditionals\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","const ElementalData = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static get = (id) => artifactDatabase[id] ?? null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    if (!id) {//if does not have id, generate ID\r\n      do {\r\n        id = `artifact_${artIdIndex++}`\r\n      } while (localStorage.getItem(id) !== null)\r\n      art.id = id\r\n    }\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.get(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.get(artAid), this.get(artBid))\r\n  static unequipAllArtifacts = () => {\r\n    Object.values(artifactDatabase).forEach(art => {\r\n      art.location = \"\"\r\n      this.updateArtifact(art)\r\n    })\r\n  }\r\n  //helper function for testing\r\n  static clearDatabase = () => {\r\n    artifactDatabase = {}\r\n    initiated = false\r\n    artIdIndex = 1\r\n  }\r\n}","import { clamp } from \"./Util/Util\";\r\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\r\n\r\nconst StatData = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\r\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\r\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\", pretty: \"HP\" },\r\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\r\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\r\n\r\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true }\r\n}\r\nconst Formulas = {\r\n  // Basic Stats\r\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\r\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\r\n\r\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  transformative_level_multi: (s, c) => transformativeReactionLevelMultipliers[c.characterLevel],\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s, c) => crystalizeLevelMultipliers[c.characterLevel],\r\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\r\n}\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"crystalize_hit\", \"shattered_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\", \r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, const: true, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(c[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\r\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s, c) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => s[`${ele}_${move}_hit_base_multi`] * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  Formulas[`${reaction}_multi`] = (s, c) => multi * c.transformative_level_multi\r\n  if (variants.length === 1) {\r\n    const [ele] = variants, opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    variants.forEach(ele => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n\r\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\r\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\r\n  const formulaList = dependencyKeys.map(key => {\r\n    const modifier = modifiers[key] ?? {}\r\n    const constModifier = Object.entries(modifier).filter(([k]) => StatData[k]?.const)\r\n    const dynamicModifier = Object.entries(modifier).filter(([k]) => !(StatData[k]?.const))\r\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]) => accu + c[k] * m, 0)\r\n    const dynamicFunc = (s) => dynamicModifier.reduce((accu, [k, m]) => accu + s[k] * m, 0)\r\n\r\n    let funcIndicator = 0\r\n    if (constModifier.length) funcIndicator += 1\r\n    if (dynamicModifier.length) funcIndicator += 2\r\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\r\n\r\n    let tmp\r\n    switch (funcIndicator) {\r\n      case 0: tmp = Formulas[key]; break\r\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\r\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\r\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 4: tmp = (s, c) => c[key]; break\r\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\r\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\r\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 8: tmp = (s, c) => s[key]; break\r\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\r\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\r\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n    }\r\n    const func = tmp\r\n\r\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\r\n\r\n    if (!(key in Formulas))\r\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n\r\n    if (StatData[key]?.const) {\r\n      constData[key] = stats[key]\r\n      constData[key] = func(stats, constData)\r\n      stats[key] = constData[key]\r\n      if (dynamicModifier.length)\r\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\r\n      return null\r\n    }\r\n\r\n    if (!(key in Formulas))\r\n      initialStats[key] = stats[key]\r\n\r\n    return [key, func]\r\n  }).filter((func) => func)\r\n\r\n  if (debug) console.log(initialStats, constData)\r\n\r\n  return {\r\n    initialStats,\r\n    formula: s => {\r\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\r\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\r\n      Object.assign(s, constData)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nimport { objMultiplication } from '../Util/Util.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n  static getWeaponTypeKeys = () => Object.keys(WeaponTypeData)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    stats = stats(refineIndex)\r\n    if (stacks !== 1) objMultiplication(stats, stacks)\r\n    return stats\r\n  }\r\n}"],"sourceRoot":""}