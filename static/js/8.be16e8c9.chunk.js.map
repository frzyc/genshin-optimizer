{"version":3,"sources":["StatDependency.js","Components/StarDisplay.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","Data/WeaponData.js","Components/CustomFormControl.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","Components/ConditionalSelector.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","../node_modules/react-bootstrap/esm/Badge.js","Data/CharacterData.js","DatabaseUtil.js","Components/StatIcon.js","Components/CharacterSelection.js","Artifact/ArtifactCard.js","Artifact/PercentBadge.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/StatDisplay.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","TestPage/TestDisplay.js","Character/Character.js","Util/Util.js","Stat.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Util/ConditionalsUtil.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Artifact/ArtifactDatabase.js","Data/ElementalData.js","StatData.js","Weapon/Weapon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"names":["GetFormulaDependency","formula","dependency","Set","Proxy","get","target","prop","receiver","add","formulaKeyDependency","Object","freeze","fromEntries","keys","Formulas","map","key","GetDependencies","modifiers","dependencies","forEach","InsertDependencies","has","k","StarIcon","icon","faStar","Stars","stars","colored","className","Array","_","i","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","WeaponData","WeaponDataImport","then","imp","default","WeaponLevelKeys","LevelNameData","WeaponTypeData","sword","claymore","catalyst","bow","polearm","FloatFormControl","placeholder","onValueChange","disabled","useState","focus","setFocus","type","toString","onChange","e","parseFloat","onFocus","onBlur","IntFormControl","parseInt","resolveContainerRef","ref","_ref","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","ConditionalSelector","props","conditional","conditionalNum","setConditional","defEle","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","resin","fragile","condensed","exp_books","advice","wit","experience","Badge","React","forwardRef","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","CharacterData","CharacterDataImport","LevelsData","name","level","asend","characterStatBase","crit_rate","crit_dmg","ener_rech","stam","CharacterSpecializedStatKey","DatabaseInitAndVerify","charDBJustPopualted","CharacterDatabase","populateDatebaseFromLocalStorage","artDBJustPopualted","ArtifactDatabase","dbVersion","getDatabaseVersion","arts","getArtifactDatabase","values","art","valid","location","getCharacter","artInSlotId","getArtifactIDFromSlot","slotKey","id","equipArtifact","Artifact","substatsValidation","numStars","keyMapping","setKey","mainStatKey","endsWith","replace","updateArtifact","chars","getCharacterDatabase","character","entries","equippedArtifacts","artid","equippedArt","getArtifact","moveToNewLocation","artifactConditionals","filter","cond","srcKey","srcKey2","dmgMode","updateCharacter","setDatabaseVersion","defVal","loadFromLocalStorage","version","saveToLocalStorage","StatIcon","hp_base","faTint","hp_final","hp_","hp","atk_base","faFistRaised","atk_character_base","atk_final","atk_","atk","def_base","faShieldAlt","def_final","def_","def","ele_mas","faMagic","faDice","faDiceD20","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","CharacterSelectionDropdownList","onSelect","char","Character","getName","characterKey","CharacterNameDisplay","flat","locationChar","ArtifactCard","artifactId","artifactObj","forceUpdate","onEdit","onDelete","assumeFull","substats","lock","currentEfficiency","maximumEfficiency","mainStatLevel","assFullColor","mainStatVal","getMainStatValue","Stat","getStatUnit","artifactValid","every","sstat","rolls","length","equipOnChar","charId","equipArtifactOnChar","border","bg","Header","xs","md","src","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Body","Title","getSetName","getStatName","stat","numRolls","efficiency","effOpacity","statName","toFixed","style","opacity","percent","Footer","Divider","cid","placement","overlay","pointerEvents","faLock","faLockOpen","Boolean","faEdit","faTrashAlt","PercentBadge","children","badgeColor","isNaN","Math","floor","func","index","Children","child","isValidElement","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","TabContext","Provider","SelectableContext","TabContent","decoratedBsPrefix","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","Tab","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","Error","Container","Content","Pane","createContext","useAccordionToggle","contextEventKey","AccordionContext","AccordionToggle","accordionOnClick","AccordionCollapse","Collapse","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","_objectWithoutProperties","source","excluded","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","DisplayStats","statVal","build","editable","otherProps","buildVal","finalStats","buildDiff","originalVal","getStatValueWithOverride","diff","diffText","fixedUnit","hasOverride","Col","DisplayNewBuildDiff","equippedBuild","newBuild","unit","CharacterArtifactPane","compareAgainstEquipped","setState","showOther","setShowOther","artifactsAssumeFull","statKeys","getDisplayStatKeys","displayStatProps","displayNewBuildProps","formulaKeys","getPrintableFormulaStatKeyList","Row","Card","Button","xl","printStat","printFormula","equipArtifacts","artifactIds","Alert","sm","lg","getSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","ConditionalsUtil","getConditionalNum","getConditionalStats","val","conditionalElement","cnum","state","setStateArtifactConditional","getSetEffectText","getSlotKeys","StatInput","prependEle","defaultValue","restProps","InputGroup","Prepend","Text","Append","undefined","OverlayTrigger","Tooltip","faUndo","CharacterOverviewPane","constellation","setOverride","setConstellation","editLevel","setEditLevel","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","Image","getStar","clamp","getLevel","levelKey","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","StatItem","getStatVariant","WeaponStatsCard","title","stats","mkey","modifier","reduce","accu","multiplier","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","refineIndex","conditionalStats","getWeaponConditionalStat","getWeaponConditional","conditionalEle","faQuoteLeft","getWeaponImg","getWeaponRarity","DropdownButton","getWeaponName","reverse","star","arr","Dropdown","ItemText","getWeaponsOfType","rarity","weaponObj","getLevelName","faGavel","getWeaponPassiveDescription","getWeaponDescription","editingOther","SetEditingOther","additionalKeys","displayStatKeys","push","editStatKeys","otherStatKeys","getElementalKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","getStatNameRaw","CharacterTalentPane","ascension","getAscension","skillDisplayProps","ContextAwareToggle","callback","currentEventKey","decoratedOnClick","expanded","faWindowMinimize","faWindowMaximize","ToggleButtonGroup","ToggleButton","href","rel","eleKey","immunityStatKey","elementImmunity","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","autoInfused","ElementToReactionKeys","includes","statsDisplayKeys","ReactionDisplay","tKey","tText","SkillDisplayCard","talentKey","subtitle","getTalent","asc","enabled","onClickTitle","ReactionComponents","superconduct_dmg","electrocharged_dmg","overloaded_dmg","swirl_dmg","shatter_dmg","information","faQuestionCircle","crystalize_dmg","reactionMode","charEleKey","eleInterArr","Ele","modifiersToFields","mStatKey","basicVal","fixed","statsToFields","talentLimits","header","getTalentLevelKey","talentLvlKey","levelBoost","infuseBtn","getElementalName","tLvl","talentLevelKeys","talentStats","getTalentStats","statsEle","ListGroup","field","FieldDisplay","getTalentImg","getTalentName","Subtitle","getTalentDocument","section","talentText","fields","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","fieldText","fieldVariant","fieldBasic","fieldVal","finalVal","fixedVal","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","CharacterDisplayCard","forceUpdateComponent","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","characterId","getInitialState","Promise","all","getCharacterDataImport","getWeaponDataImport","getDataImport","deepClone","addCharacter","footer","onClose","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","faTimes","defaultActiveKey","Nav","Link","getCDataObj","talent","skill","initialState","auto","burst","ListGroupItem","action","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","horizontal","horizontalVariant","initialBsPrefix","AbstractNav","TestDisplay","removeCharacterById","getSpecializedStatKey","getSpeicalizedStatVal","getWeaponMainStatValWithOverride","characterObj","baseStat","getIndexFromlevelkey","elementalKey","ElementalData","constellationName","titles","getSpecializedStat","specializeStat","thumbImg","cardImg","img","constIndex","getTalentLevelBoost","talents","talentBoost","boostEntry","find","withBoost","getTalentFields","getTalentStatsAll","statsArr","getTalentConditional","doc","tempCond","getConditionalProp","stacks","skillKey","elemental","infusable","getTalentStatKeyVariant","atkKeys","startsWith","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","PreprocessFormulas","mergeStats","char_ele_key","overrides","hasOwnProperty","specialStatKey","s","weaponSubKey","getWeaponSubStatValWithOverride","array","random","getRandomIntInclusive","min","max","ceil","data","localStorage","getItem","JSON","parse","obj","setItem","stringify","closeEnoughFloat","a","b","abs","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","htmlStatsData","StatData","pretty","f","expand","statList","FormulaText","modifiersKeys","modifierText","options","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_multi","electrocharged","superconduct_multi","superconduct","swirl_multi","swirl","shatter_multi","shattered","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","amp_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","defineProperty","configurable","enumerable","writable","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","ownKeys","object","enumerableOnly","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","getOwnPropertyDescriptors","defineProperties","initiated","characterDatabase","charIdIndex","isInvalid","getCharacterIdList","getIdNameList","dchar","removeItem","charid","unequipArtifactOnSlot","equipArtifactBuild","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","phy_dmg_bonus","ele_dmg_bonus","2","ArtifactSubStatsData","ArtifactSubstatsMinMax","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","getSubstatEfficiency","getArtifactEfficiency","errMsgs","some","currentNumOfRolls","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","maxPerRoll","getSubstatAllMax","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","icons","getSetEffectsObj","setEffects","artifactSetEffect","artArr","setNumKeys","charFinalStats","setEffectText","getSlotName","getSlotIcon","getSlotMainStatKeys","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","main","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","_createForOfIteratorHelper","allowArrayLike","it","F","n","done","_e","err","normalCompletion","didErr","step","next","_e2","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","dependencyKeys","preFormulas","modifierFunc","initial","reactionName","dmgKey","dmgName","str","atkTypeName","dmgModeName","ele_key","getLevelIndex","weaponKey","passiveName","passiveDescription","description","baseStats","sub","weaponType","getWeaponTypeName","_defineProperty"],"mappings":"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","file":"static/js/8.be16e8c9.chunk.js","sourcesContent":["import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  console.log(formulaKeyDependency)\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key) &&\r\n      console.error(\"Formula\", `\"${formulaKey}\"`, \"has dependency with key\", `\"${key}\"`, \"that does not Exist in StatData.\"))\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(Formulas)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n}\r\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst FloatFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseFloat(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\n\r\nconst IntFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseInt(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\nexport {\r\n  FloatFormControl,\r\n  IntFormControl\r\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\nimport { loadFromLocalStorage, saveToLocalStorage } from \"./Util/Util\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //this will only run if neither of the database has been initated.\r\n  const charDBJustPopualted = CharacterDatabase.populateDatebaseFromLocalStorage(),\r\n    artDBJustPopualted = ArtifactDatabase.populateDatebaseFromLocalStorage()\r\n  if (!charDBJustPopualted && !artDBJustPopualted) return\r\n  const dbVersion = getDatabaseVersion()\r\n  //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n  let arts = ArtifactDatabase.getArtifactDatabase();\r\n  Object.values(arts).forEach(art => {\r\n    let valid = true\r\n    if (art.location) {\r\n      const locationChar = CharacterDatabase.getCharacter(art.location)\r\n      if (locationChar) {\r\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\r\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\r\n          CharacterDatabase.equipArtifact(art.location, art)\r\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\r\n          art.location = \"\"\r\n          valid = false\r\n        }\r\n      } else {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (dbVersion < 1) {\r\n      //generate artifact efficiency again for artifacts\r\n      Artifact.substatsValidation(art)\r\n      valid = false\r\n\r\n      //there was a bug that saved the numStars as strings. convert to number.\r\n      if (typeof art.numStars === \"string\") {\r\n        art.numStars = parseInt(art.numStars)\r\n        valid = false\r\n      }\r\n\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (!valid)\r\n      ArtifactDatabase.updateArtifact(art)\r\n  })\r\n\r\n  let chars = CharacterDatabase.getCharacterDatabase();\r\n  Object.values(chars).forEach(character => {\r\n    let valid = true;\r\n    //verify character database equipment validity\r\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\r\n      const equippedArt = ArtifactDatabase.getArtifact(artid)\r\n      if (equippedArt && equippedArt.location !== character.id) //the artifact doesnt have the right location...\r\n        ArtifactDatabase.moveToNewLocation(artid, character.id)\r\n      if (!equippedArt) {\r\n        valid = false\r\n        character.equippedArtifacts[slotKey] = \"\"\r\n      }\r\n    })\r\n\r\n    if (dbVersion < 1) {\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      }) ?? []\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n    }\r\n    if (!valid) {\r\n      CharacterDatabase.updateCharacter(character)\r\n    }\r\n  })\r\n  setDatabaseVersion(1)\r\n}\r\nconst getDatabaseVersion = (defVal = 0) =>\r\n  parseInt(loadFromLocalStorage(\"db_ver\") ?? defVal)\r\n\r\nconst setDatabaseVersion = (version) =>\r\n  saveToLocalStorage(\"db_ver\", version)\r\n\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_character_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Character from \"../Character/Character\";\r\nimport CharacterDatabase from \"../Character/CharacterDatabase\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n    <Dropdown.Item key={id} onClick={() => onSelect(id)}>\r\n      <span>\r\n        <div className=\"mb-n2\"><b>{Character.getName(char.characterKey)}</b></div>\r\n        <small>{char.name}</small>\r\n      </span>\r\n    </Dropdown.Item>)\r\n}\r\nfunction CharacterNameDisplay({ id, flat = false }) {\r\n  let locationChar = CharacterDatabase.getCharacter(id)\r\n  if (locationChar) {\r\n    if (flat) {\r\n      return <span><b>{Character.getName(locationChar.characterKey)}</b> <small>{locationChar?.name}</small></span>\r\n    } else {\r\n      return <span>\r\n        <div className=\"mb-n2\"><b>{Character.getName(locationChar.characterKey)}</b></div>\r\n        <small>{locationChar.name}</small>\r\n      </span>\r\n    }\r\n\r\n  } else {\r\n    return <b>Inventory</b>\r\n  }\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n  CharacterNameDisplay\r\n};\r\n\r\n","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport { CharacterNameDisplay, CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, artifactObj, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId && !artifactObj) return null;\r\n  let art = artifactObj ? artifactObj : ArtifactDatabase.getArtifact(artifactId);\r\n  if (!art) return null;\r\n  let { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location = \"\", lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  let mainStatLevel = assumeFull ? numStars * 4 : level\r\n  let assFullColor = assumeFull && level !== numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\r\n  let artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\r\n  const equipOnChar = (charId) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charId)\r\n    forceUpdate?.()\r\n  }\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\r\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let numRolls = stat?.rolls?.length || 0\r\n          let efficiency = stat?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge percent={currentEfficiency} valid={artifactValid}>\r\n          {currentEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge percent={maximumEfficiency} valid={artifactValid}>\r\n          {maximumEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\"><CharacterNameDisplay id={location} /></Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar()}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={cid => equipOnChar(cid)} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><span><CharacterNameDisplay id={location} /></span></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={location}\r\n                  style={location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    art.lock = !lock\r\n                    ArtifactDatabase.updateArtifact(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(lock || location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Col } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\nfunction DisplayStats({ statKey, character, build, editable, ...otherProps }) {\r\n  let buildVal = build?.finalStats?.[statKey] || 0\r\n  let statVal, buildDiff = null\r\n  if (typeof buildVal === \"string\") {\r\n    statVal = <span>{buildVal}</span>\r\n  } else {\r\n    let originalVal = Character.getStatValueWithOverride(character, statKey)\r\n    if (statKey === \"hp_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"hp_base\")\r\n    else if (statKey === \"def_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"def_base\")\r\n    else if (statKey === \"atk_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"atk_character_base\") + Character.getStatValueWithOverride(character, \"atk_weapon\")\r\n\r\n    let diff = buildVal - originalVal\r\n    let diffText = (diff?.toFixed?.(Stat.fixedUnit(statKey)) || diff) + Stat.getStatUnit(statKey)\r\n    if (diff < 0) buildDiff = <span className=\"text-success\">{diffText}</span>\r\n    else if (diff > 0) buildDiff = <span className=\"text-success\"> +{diffText}</span>\r\n\r\n    if (originalVal || !diff) statVal = <span className={editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}>{(originalVal?.toFixed?.(Stat.fixedUnit(statKey)) || originalVal) + Stat.getStatUnit(statKey)}</span>\r\n  }\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className=\"float-right text-right\">{statVal}{buildDiff}</span>\r\n  </Col>\r\n}\r\nconst DisplayNewBuildDiff = ({ statKey, character, equippedBuild, newBuild, editable, ...otherProps }) => {\r\n  let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right ${editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed?.(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed?.(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nexport {\r\n  DisplayStats,\r\n  DisplayNewBuildDiff,\r\n}","import React, { useState } from 'react';\r\nimport { Accordion, Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { DisplayNewBuildDiff, DisplayStats } from '../../Components/StatDisplay';\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from '../../StatDependency';\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState }) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(characterKey)\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  const formulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, statKeys), build?.finalStats?.modifiers)\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Calculations`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ?\r\n                  statKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                  statKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {formulaKeys.map(key => <Col key={key} xs={12} className=\"mt-2\">\r\n                    <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                      <Card.Header className=\"p-2\">\r\n                        {Stat.printStat(key, build.finalStats)}\r\n                      </Card.Header>\r\n                      <Card.Body className=\"p-2\">\r\n                        <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  )}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n              {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Artifact.getSlotKeys().map(slotKey =>\r\n            build.artifactIds[slotKey] ? <Col sm={6} lg={4} key={build.artifactIds[slotKey]} className=\"mb-2\">\r\n              <ArtifactCard artifactId={build.artifactIds[slotKey]} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport { DisplayNewBuildDiff, DisplayStats } from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"char_level\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={(val) => setOverride(\"char_level\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"char_level\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction StatItem({ statKey, val }) {\r\n  if (!statKey) return null\r\n  return <Col xs={12} lg={6} className=\"px-3\">\r\n    <span><b>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</b></span>\r\n    <span className={`float-right text-right text-${Stat.getStatVariant(statKey)}`} >{val?.toFixed?.(Stat.fixedUnit(statKey)) || val}{Stat.getStatUnit(statKey)}</span>\r\n  </Col>\r\n}\r\nfunction WeaponStatsCard({ title, stats = {}, finalStats = {} }) {\r\n  if (Object.keys(stats ?? {}).length === 0) return null\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <Card.Body className=\"py-2 px-0\"><Row>\r\n      {Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? <React.Fragment key={key} >{Object.entries(val ?? {}).map(([mkey, modifier]) =>\r\n        <StatItem key={mkey} statKey={mkey} val={Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0)} />)}</React.Fragment>\r\n        : <StatItem key={key} statKey={key} val={val} />)}\r\n    </Row></Card.Body>\r\n  </Card>\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon = {} }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex, undefined)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum, undefined)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats, character)}</p>\r\n            <WeaponStatsCard title={\"Main Stats\"} stats={{ atk: weaponDisplayMainVal, [subStatKey]: weaponDisplaySubVal }} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Bonus Stats\"} stats={weaponBonusStats} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Conditional Stats\"} stats={conditionalStats} finalStats={build?.finalStats} />\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  let { editable, character, character: { compareAgainstEquipped }, setOverride, equippedBuild, newBuild } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  let additionalKeys = [\"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const displayStatKeys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp_base\", \"hp\", \"hp_\", \"atk_character_base\", \"atk\", \"atk_\", \"def_base\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\", \"skill_crit_rate\", \"burst_crit_rate\", \"all_dmg_bonus\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              displayStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              displayStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              otherStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ?\r\n            miscStatkeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n            miscStatkeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n","import { faCheckSquare, faQuestionCircle, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, ToggleButton, ToggleButtonGroup, Tooltip } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation, dmgMode }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  //choose which one to display stats for\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button\r\n        // style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"norm_atk\", \"char_atk\", \"plunge\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(Character.getTalentStatKey(\"char_atk\", character, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    //show elemental interactions\r\n    keys.push(...(ElementToReactionKeys[Character.getElementalKey(characterKey)] || []))\r\n    let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n\r\n    //search for dependency\r\n    return Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, keys), build?.finalStats?.modifiers)\r\n  }\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <Accordion>\r\n        <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Options</span>\r\n                <small>Expand below to edit enemy details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ToggleButtonGroup type=\"radio\" value={dmgMode} name=\"dmgOptions\" onChange={(dmgMode) => setState({ dmgMode })}>\r\n                  <ToggleButton value=\"avg_dmg\">Avg. DMG</ToggleButton>\r\n                  <ToggleButton value=\"dmg\">Normal Hit, No Crit</ToggleButton>\r\n                  <ToggleButton value=\"crit_dmg\">Crit Hit DMG</ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Row className=\"mb-2\"><Col>\r\n                <Button variant=\"warning\" >\r\n                  <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                    To get the specific resistance values of enemies, please visit the wiki.\r\n                  </a>\r\n                </Button >\r\n              </Col></Row>\r\n              <Row>\r\n                <Col xs={12} xl={6} className=\"mb-2\">\r\n                  <StatInput\r\n                    name={<b>Enemy Level</b>}\r\n                    value={Character.getStatValueWithOverride(character, \"enemy_level\")}\r\n                    placeholder={Stat.getStatNameRaw(\"enemy_level\")}\r\n                    defaultValue={Character.getBaseStatValue(character, \"enemy_level\")}\r\n                    onValueChange={(val) => setOverride(\"enemy_level\", val)}\r\n                  />\r\n                </Col>\r\n                {[\"physical\", ...Character.getElementalKeys()].map(eleKey => {\r\n                  let statKey = eleKey === \"physical\" ? \"enemy_phy_res\" : `${eleKey}_enemy_ele_res`\r\n                  let immunityStatKey = eleKey === \"physical\" ? \"enemy_phy_immunity\" : `${eleKey}_enemy_ele_immunity`\r\n                  let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                  return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                        <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                      name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                      value={Character.getStatValueWithOverride(character, statKey)}\r\n                      placeholder={Stat.getStatNameRaw(statKey)}\r\n                      defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                      onValueChange={(val) => setOverride(statKey, val)}\r\n                      disabled={elementImmunity}\r\n                    />\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Formulas</span>\r\n                <small>Expand below to see calculation details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n              <Row>\r\n                {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\r\n                  <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                    <Card.Header className=\"p-2\">\r\n                      {Stat.printStat(key, build.finalStats)}\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-2\">\r\n                      <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                )}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {Character.getTalent(characterKey, \"sprint\", false) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_dmg: SuperConductCard,\r\n  electrocharged_dmg: ElectroChargedCard,\r\n  overloaded_dmg: OverloadedCard,\r\n  swirl_dmg: SwirlCard,\r\n  shatter_dmg: ShatteredCard,\r\n  crystalize_dmg: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey, reactionMode = \"none\" }, newBuild, equippedBuild, setState }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let charEleKey = Character.getElementalKey(characterKey)\r\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shatter_dmg\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shatter_dmg\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row>\r\n        <Col ><Row className=\"mb-n2\">\r\n          {eleInterArr.map(key => {\r\n            let Ele = ReactionComponents[key]\r\n            if (!Ele) return null\r\n            let val = build?.finalStats?.[key]\r\n            val = val?.toFixed?.(Stat.fixedUnit(key)) || val\r\n            return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele value={val} /></Col>\r\n          })}\r\n        </Row></Col>\r\n        <Col xs=\"auto\">\r\n          {[\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup\r\n            type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setState({ reactionMode: val === \"none\" ? null : val })}>\r\n            <ToggleButton className=\"p-2\" value={\"none\"}> <h6>No Elemental</h6> <h6>Interactions</h6></ToggleButton >\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Vaporize(Pyro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Pyro)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"hydro\" && <ToggleButton className=\"p-2\" value={\"hydro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Vaporize(Hydro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"cryo\" && <ToggleButton className=\"p-2\" value={\"cryo_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Cryo)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n          </ToggleButtonGroup>}\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"superconduct_dmg\")}</h5>\r\n    <h4 className=\"text-superconduct mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"electrocharged_dmg\")}</h5>\r\n    <h4 className=\"text-electrocharged mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"overloaded_dmg\")}</h5>\r\n    <h4 className=\"text-overloaded mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction SwirlCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"swirl_dmg\")}</h5>\r\n    <h4 className=\"text-swirl mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ value }) {\r\n  let information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"shatter_dmg\")}</h5>\r\n    <h4 className=\"text-shatter mb-0\">\r\n      <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"crystalize_dmg\")}</h5>\r\n    <h4 className=\"text-crystalize mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\n\r\nfunction modifiersToFields(modifiers, finalStats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    value: Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0),\r\n    basicVal: <span>{Object.entries(modifier ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, finalStats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey)\r\n  }))\r\n}\r\nfunction statsToFields(stats, finalStats = {}) {\r\n  return Object.entries(stats).map(([statKey, statVal]) =>\r\n    statKey === \"modifiers\" ? modifiersToFields(statVal, finalStats) : { text: Stat.getStatName(statKey), variant: Stat.getStatVariant(statKey), value: statVal, fixed: Stat.fixedUnit(statKey) }\r\n  ).flat()\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let { talentLvlKey = undefined, levelBoost = 0 } = Character.getTalentLevelKey(character, talentKey, constellation, true)\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n  if (typeof talentLvlKey === \"number\") {\r\n    if (editable) {\r\n      let setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        let talentLevelKeys = state.talentLevelKeys || {}\r\n        talentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  const statsEle = talentStats && <Row><Col>\r\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {statsToFields(talentStats, build?.finalStats).map((field, i) =>\r\n          <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            let conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            conditionalFields = [...Character.getTalentConditionalFields(conditional, conditionalNum, []), ...statsToFields(conditionalStats, build?.finalStats)]\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Col xs={12}>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i} index={i} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        }\r\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\r\n          <div className=\"mb-2\">{talentText}</div>\r\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n        </Col>{conditionalEle}</Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay({ character, character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldVariant = field.variant || \"\"\r\n  if (typeof fieldVariant === \"function\")\r\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldBasic = field.basicVal\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats, character)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = field.value ? field.value : field.finalVal\r\n  if (typeof fieldVal === \"function\")\r\n    fieldVal = fieldVal?.(talentLvlKey, build.finalStats, character)\r\n  let fixedVal = field.fixed || 0\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.finalVal\r\n\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats, character)?.toFixed?.(fixedVal))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) || fieldVal}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}\r\n","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterId)\r\n      this.state = CharacterDatabase.getCharacter(props.characterId)\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    dmgMode: \"dmg\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey), reactionMode: null, autoInfused: false })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.characterId && this.state.id !== this.props.characterId)\r\n      this.setState(CharacterDatabase.getCharacter(this.props.characterId))\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"char_level\")}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && (Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\"}>Talents {(Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\" && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} setState={this.setSetState} setOverride={this.setOverride} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import { Container } from \"react-bootstrap\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport '../StatDependency'\r\nexport default function TestDisplay(props) {\r\n  DatabaseInitAndVerify()\r\n  return <Container>\r\n    <CharacterDisplayCard editable characterId={\"character_2\"} />\r\n  </Container>\r\n}\r\n","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\nimport { GetDependencies } from \"../StatDependency\"\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    if (skillKey === \"phy\") return `phy_${dmgMode}`\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    if (skillKey === \"phy\") return \"physical\"\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_character_base\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats.modifiers)(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of Object.entries(val)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of Object.entries(modifier))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\r\n  })\r\n\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_character_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey, constellation)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    Character.getTalentStatsAll(characterKey, constellation, ascension).forEach(s => this.mergeStats(initialStats, s))\r\n    \r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\r\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\r\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\r\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\r\n    let formulaKeys = Object.keys(FormulaText)\r\n    let modifiersKeys = Object.keys(modifiers)\r\n    return statList.filter(statKey => formulaKeys.includes(statKey) || modifiersKeys.includes(statKey))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_base: (o) => <span>{f(o, \"atk_character_base\")} + {f(o, \"atk_weapon\")} </span>,\r\n  atk_final: (o) => <span>{f(o, \"atk_base\")} * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"plunge_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"plunge_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"plunge_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"plunge_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  amp_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(o, \"ele_mas\")} * exp^(-0.000505 * {f(o, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_plunge_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_plunge_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_plunge_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `plunge_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\r\nimport ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 1: [24, 30], 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 1: [2], 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 1: [2], 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 1: [1.5, 1.8], 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 1: [5, 6], 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 1: [1.3, 1.6], 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 1: [0.8, 1], 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 1: [1.6, 1.9], 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubStatsData).map(([key, obj]) =>\r\n  [key, {\r\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\r\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\r\n  }]))\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactSubstatsMinMax,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nconst maxStar = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubstatAllMax = (statKey, numStars = maxStar, defVal = 0) => ArtifactSubstatsMinMax?.[statKey]?.max[numStars] ?? defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, rolls = []) => {\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let max = this.getSubstatAllMax(subStatKey) * len\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      if (rollArr.length > 1) substat.rollArr = rollArr\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(maxStar);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let statKeys = substats.filter(({ key }) => key).map(({ key }) => key)\r\n    let maxPerRoll = 100 * Math.max(...(statKeys.length === 4 ? statKeys : Object.keys(ArtifactSubstatsMinMax)).map(\r\n      key => Artifact.getSubstatAllMax(key, numStars) / Artifact.getSubstatAllMax(key)\r\n    ))\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * maxPerRoll) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect).length > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n      if (Object.keys(condStats).length > 0) {\r\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n        Object.entries(condStats).forEach(([statKey, value]) =>\r\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\r\n      }\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else if (!conditionalNum && index < 0) { //nothing to change\r\n      return conditionals\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => artifactDatabase[id] || null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_character_base: { name: \"ATK\", pretty: \"ATK Character Base\" },\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  plunge_atk_dmg_bonus: { name: \"Plunging Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  all_dmg_bonus: { name: \"All DMG Bonus\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elemental Mastery Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elemental Mastery Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elemental Mastery Multiplier Z\", unit: \"multi\" },\r\n  amp_reaction_base_multi: { name: \"Amplifying Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_base: (s) => s.atk_character_base + s.atk_weapon,\r\n  atk_final: (s) => s.atk_base * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.atk_final * s.plunge_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  plunge_crit_dmg: (s) => s.plunge_dmg * s.crit_dmg_multi,\r\n  plunge_avg_dmg: (s) => s.plunge_dmg * s.crit_multi,\r\n  plunge_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.plunge_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  amp_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s.atk_final * s[`${ele}_plunge_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_plunge_dmg`] * s.crit_dmg_multi,\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_plunge_dmg`] * s.crit_multi,\r\n  plunge_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.plunge_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.all_dmg_bonus) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, modifiers = {}) {\r\n  const preFormulas = dependencyKeys.map(key => {\r\n    if (modifiers[key]) {\r\n      const modifierFunc = (stat, initial) => Object.entries(modifiers[key]).reduce((accu, [mkey, multiplier]) =>\r\n        accu + stat[mkey] * multiplier, initial)\r\n      if (key in Formulas) return [key, (s) => modifierFunc(s, Formulas[key](s))]\r\n      return [key, (s) => modifierFunc(s, s[key] ?? StatData?.[key]?.default ?? 0)]\r\n    } else {\r\n      if (key in Formulas) return [key, Formulas[key]]\r\n      return [key, (s) => (s[key] ?? StatData?.[key]?.default ?? 0)]\r\n    }\r\n  })\r\n  return stat => preFormulas.forEach(([key, formula]) => stat[key] = formula(stat))\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  PreprocessFormulas,\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"sourceRoot":""}