{"version":3,"sources":["Weapon/Weapon.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","Components/CustomFormControl.js","StatDependency.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","Components/ConditionalSelector.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","../node_modules/react-bootstrap/esm/Badge.js","Data/WeaponData.js","DatabaseUtil.js","Components/StatIcon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","Artifact/ArtifactCard.js","Artifact/PercentBadge.js","Data/CharacterData.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/StatDisplay.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","TestPage/TestDisplay.js","Character/Character.js","Stat.js","Util/Util.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Character/CharacterDatabase.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Util/ConditionalsUtil.js","Artifact/ArtifactDatabase.js","Data/ElementalData.js","StatData.js","Components/StarDisplay.js"],"names":["Weapon","this","Error","getWeaponDataImport","WeaponDataImport","getLevelName","levelKey","defVal","LevelNameData","getLevelIndex","WeaponLevelKeys","indexOf","getWeaponName","weaponKey","WeaponData","name","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","refineIndex","charFinalStats","character","passiveDescription","getWeaponDescription","description","getWeaponConditional","conditional","getWeaponImg","img","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","getWeaponSubStatKey","subStatKey","getWeaponBonusStat","stats","getWeaponsOfType","weaponType","Object","fromEntries","entries","filter","getWeaponTypeName","WeaponTypeData","getWeaponMainStatValWithOverride","weaponObj","overrideMainVal","key","getWeaponSubStatValWithOverride","overrideSubVal","getWeaponConditionalStat","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","map","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","FloatFormControl","placeholder","onValueChange","disabled","useState","focus","setFocus","type","className","toString","onChange","e","target","parseFloat","onFocus","onBlur","IntFormControl","parseInt","formulaKeyDependency","registerDependency","operation","testObj","dependency","Set","keys","StatData","forEach","k","defineProperty","get","add","GetDependencies","initialStats","Formulas","dependencies","modifiers","InsertDependencies","has","Modifiers","s","formula","resolveContainerRef","ref","_ref","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","ConditionalSelector","props","setConditional","defEle","Array","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","i","Fragment","v","stack","tempcount","icon","faCheckSquare","faSquare","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","Badge","React","forwardRef","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","then","imp","default","DatabaseInitAndVerify","localStorage","removeItem","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","values","art","valid","location","getCharacter","keyMapping","setKey","mainStatKey","endsWith","replace","maximumEfficiency","Artifact","substatsValidation","updateArtifact","chars","getCharacterDatabase","equippedArtifacts","slotKey","artid","getArtifact","undefined","artifactConditionals","cond","srcKey","srcKey2","dmgMode","updateCharacter","StatIcon","hp_base","faTint","hp_final","hp_","hp","atk_base","faFistRaised","atk_final","atk_","atk","def_base","faShieldAlt","def_final","def_","def","ele_mas","faMagic","crit_rate","faDice","crit_dmg","faDiceD20","ener_rech","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","_defineProperty","obj","enumerable","configurable","writable","ArtifactCard","artifactId","artifactObj","forceUpdate","onEdit","onDelete","assumeFull","numStars","level","substats","lock","currentEfficiency","locationChar","locationName","mainStatLevel","assFullColor","mainStatVal","getMainStatValue","Stat","getStatUnit","artifactValid","every","sstat","rolls","length","equipOnChar","charId","equipArtifactOnChar","border","bg","Header","xs","md","src","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Body","Title","getSetName","stars","getStatName","stat","numRolls","efficiency","effOpacity","statName","toFixed","style","opacity","percent","Footer","id","char","placement","overlay","pointerEvents","faLock","faLockOpen","Boolean","faEdit","faTrashAlt","PercentBadge","children","badgeColor","isNaN","Math","floor","CharacterData","CharacterDataImport","LevelsData","asend","characterStatBase","stam","CharacterSpecializedStatKey","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","TabContext","Provider","SelectableContext","TabContent","decoratedBsPrefix","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","Tab","_React$Component","apply","arguments","_inheritsLoose","prototype","render","Container","Content","Pane","createContext","useAccordionToggle","contextEventKey","AccordionContext","AccordionToggle","accordionOnClick","AccordionCollapse","Collapse","Children","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","_objectWithoutProperties","source","excluded","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","DisplayStats","statVal","build","editable","otherProps","buildVal","finalStats","buildDiff","originalVal","Character","getStatValueWithOverride","diff","diffText","fixedUnit","hasOverride","Col","DisplayNewBuildDiff","equippedBuild","newBuild","unit","CharacterArtifactPane","characterKey","compareAgainstEquipped","setState","showOther","setShowOther","artifactsAssumeFull","statKeys","getDisplayStatKeys","displayStatProps","displayNewBuildProps","formulaKeys","getPrintableFormulaStatKeyList","Row","Card","Button","xl","printStat","printFormula","equipArtifacts","artifactIds","Alert","sm","lg","getSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","getConditionalNum","getConditionalStats","val","conditionalElement","cnum","state","setStateArtifactConditional","getSetEffectText","getSlotKeys","StatInput","prependEle","defaultValue","restProps","InputGroup","Prepend","Text","Append","OverlayTrigger","Tooltip","faUndo","CharacterOverviewPane","constellation","setOverride","setConstellation","editLevel","setEditLevel","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","getName","Image","getStar","colored","clamp","getLevel","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","conditionalStats","conditionalEle","faQuoteLeft","DropdownButton","title","reverse","star","arr","Dropdown","ItemText","Divider","faGavel","editingOther","SetEditingOther","additionalKeys","displayStatKeys","push","editStatKeys","otherStatKeys","getElementalKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","getStatNameRaw","CharacterTalentPane","ascension","getAscension","skillDisplayProps","ContextAwareToggle","callback","currentEventKey","decoratedOnClick","expanded","faWindowMinimize","faWindowMaximize","ToggleButtonGroup","ToggleButton","href","rel","eleKey","immunityStatKey","elementImmunity","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","autoInfused","statsDisplayKeys","ReactionDisplay","tKey","tText","SkillDisplayCard","talentKey","subtitle","getTalent","asc","enabled","onClickTitle","ReactionComponents","superconduct_dmg","electrocharged_dmg","overloaded_dmg","swirl_dmg","shatter_dmg","information","faQuestionCircle","crystalize_dmg","reactionMode","charEleKey","eleInterArr","ElementToReactionKeys","includes","Ele","talentLimits","header","getTalentLevelKey","talentLvlKey","levelBoost","infuseBtn","getElementalName","tLvl","talentLevelKeys","statsEle","talentStats","getTalentStats","statList","index","ListGroup","getTalentImg","getTalentName","Subtitle","getTalentDocument","section","talentText","fields","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","FieldDisplay","field","fieldText","fieldVariant","fieldBasic","basicVal","fieldVal","finalVal","fixedVal","fixed","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","child","CharacterDisplayCard","forceUpdateComponent","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","characterId","getInitialState","Promise","all","getCharacterDataImport","getDataImport","deepClone","addCharacter","footer","onClose","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","faTimes","defaultActiveKey","Nav","Link","getCDataObj","talent","skill","initialState","auto","burst","ListGroupItem","action","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","horizontal","horizontalVariant","initialBsPrefix","AbstractNav","TestDisplay","moveToNewLocation","removeCharacterById","getSpecializedStatKey","getSpeicalizedStatVal","characterObj","baseStat","getIndexFromlevelkey","elementalKey","ElementalData","constellationName","titles","getSpecializedStat","specializeStat","thumbImg","cardImg","constIndex","getTalentLevelBoost","talents","talentBoost","boostEntry","find","withBoost","getTalentFields","getTalentStatsAll","statsArr","getTalentConditional","doc","tempCond","skillKey","elemental","infusable","getTalentStatKeyVariant","atkKeys","startsWith","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","equipArtifact","artifacts","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","PreprocessFormulas","char_ele_key","overrides","hasOwnProperty","specialStatKey","addStatsObj","weaponStats","subKey","subVal","bonusStats","htmlStatsData","pretty","getStatVariant","f","expand","ModifiersText","skey","FormulaText","modifiersTextKeys","printModifier","overrideKey","options","formulaText","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_multi","electrocharged","superconduct_multi","superconduct","swirl_multi","swirl","shatter_multi","shattered","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","trans_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","abs","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","noelle_burst_atk","sweep_multiplier","mona_passive2_hydro_ele_dmg_bonus","array","random","getRandomIntInclusive","min","max","ceil","loadFromLocalStorage","data","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","closeEnoughFloat","a","b","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","ownKeys","object","enumerableOnly","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","phy_dmg_bonus","ele_dmg_bonus","2","ArtifactSubStatsData","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","getSubstatEfficiency","getArtifactEfficiency","errMsgs","some","currentNumOfRolls","reduce","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","currentLocation","intendedLocation","artifactToSwapWithid","getArtifactIDFromSlot","artifactToSwapWith","swapLocations","unequipArtifactOnSlot","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","icons","getSetEffectsObj","setEffects","artifactSetEffect","artArr","setNumKeys","setEffectText","getSlotName","getSlotIcon","getSlotMainStatKeys","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","accu","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","hasSetEffect","setEffectObj","condStats","initiated","characterDatabase","charIdIndex","isInvalid","getCharacterIdList","dchar","charid","equipArtifactBuild","_createForOfIteratorHelper","allowArrayLike","it","F","n","done","_e","err","normalCompletion","didErr","step","next","_e2","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","reactionName","dmgKey","dmgName","str","atkTypeName","dmgModeName","ele_key","hydro_ele_dmg_bonus","formulas","StarIcon","faStar","Stars","_"],"mappings":"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","file":"static/js/8.153bbe4c.chunk.js","sourcesContent":["import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst FloatFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseFloat(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\n\r\nconst IntFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseInt(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\nexport {\r\n  FloatFormControl,\r\n  IntFormControl\r\n}","import { Formulas, Modifiers, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nconst formulaKeyDependency = {}\r\nconst registerDependency = (name, operation) => {\r\n  let testObj = {}\r\n  let dependency = new Set()\r\n  Object.keys(StatData).forEach(k => {\r\n    Object.defineProperty(testObj, k, {\r\n      get: () => {\r\n        dependency.add(k)\r\n        return 0\r\n      }\r\n    })\r\n  })\r\n  operation(testObj)\r\n  formulaKeyDependency[name] = [...dependency]\r\n}\r\nObject.keys(Formulas).forEach(key => registerDependency(key, s => Formulas[key](s)))\r\nObject.keys(Modifiers).forEach(name => registerDependency(name, s => Modifiers[name].formula({})(s)))\r\n\r\nif (process.env.NODE_ENV === \"development\") console.log(formulaKeyDependency)\r\n\r\nfunction GetDependencies(initialStats, keys = Object.keys(Formulas)) {\r\n  let dependencies = new Set(), { modifiers = {} } = initialStats\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n\r\n  for (const name in modifiers) {\r\n    if (Modifiers[name].key === key) {\r\n      formulaKeyDependency[name].forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n      dependencies.add(name)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  GetDependencies,\r\n}\r\n","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //remove the old error/prone id lists, if it still exists\r\n  localStorage.removeItem(\"artifact_id_list\")\r\n  localStorage.removeItem(\"character_id_list\")\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  if (CharacterDatabase.populateDatebaseFromLocalStorage() |\r\n    ArtifactDatabase.populateDatebaseFromLocalStorage()) {\r\n    //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n    let arts = ArtifactDatabase.getArtifactDatabase();\r\n    Object.values(arts).forEach(art => {\r\n      let valid = true\r\n      if (art.location && !CharacterDatabase.getCharacter(art.location)) {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n      if (!art.maximumEfficiency) {\r\n        Artifact.substatsValidation(art)\r\n        valid = false\r\n      }\r\n      if (!valid)\r\n        ArtifactDatabase.updateArtifact(art)\r\n    })\r\n\r\n    let chars = CharacterDatabase.getCharacterDatabase();\r\n    Object.values(chars).forEach(character => {\r\n      let valid = true;\r\n      //verify character database equipment validity\r\n      let equippedArtifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([slotKey, artid]) => {\r\n        if (!ArtifactDatabase.getArtifact(artid)) {\r\n          valid = false\r\n          return [slotKey, undefined]\r\n        }\r\n        return [slotKey, artid]\r\n      }))\r\n      if (!valid)\r\n        character.equippedArtifacts = equippedArtifacts\r\n\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      if (character.artifactConditionals) character.artifactConditionals = character.artifactConditionals.filter(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n      if (!valid) {\r\n        CharacterDatabase.updateCharacter(character)\r\n      }\r\n    })\r\n  }\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, artifactObj, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId && !artifactObj) return null;\r\n  let art = artifactObj ? artifactObj : ArtifactDatabase.getArtifact(artifactId);\r\n  if (!art) return null;\r\n  let { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location, lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  let locationChar = CharacterDatabase.getCharacter(location)\r\n  let locationName = locationChar ? locationChar.name : \"Inventory\"\r\n  let mainStatLevel = assumeFull ? numStars * 4 : level\r\n  let assFullColor = assumeFull && level !== numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\r\n  let artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\r\n  const equipOnChar = (charId) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charId)\r\n    forceUpdate?.()\r\n  }\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\r\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let numRolls = stat?.rolls?.length || 0\r\n          let efficiency = stat?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge percent={currentEfficiency} valid={artifactValid}>\r\n          {currentEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge percent={maximumEfficiency} valid={artifactValid}>\r\n          {maximumEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\">{locationName}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar()}>Inventory</Dropdown.Item>\r\n              {Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n                <Dropdown.Item key={id} onClick={() => equipOnChar(id)}>\r\n                  {char.name}\r\n                </Dropdown.Item>)}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><span>Location: {locationName}</span></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={location}\r\n                  style={location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    lock = !lock\r\n                    ArtifactDatabase.updateArtifact(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(lock || location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Col } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\nfunction DisplayStats({ statKey, character, build, editable, ...otherProps }) {\r\n  let buildVal = build?.finalStats?.[statKey] || 0\r\n  let statVal, buildDiff = null\r\n  if (typeof buildVal === \"string\") {\r\n    statVal = <span>{buildVal}</span>\r\n  } else {\r\n    let originalVal = Character.getStatValueWithOverride(character, statKey)\r\n    if (statKey === \"hp_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"hp_base\")\r\n    else if (statKey === \"def_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"def_base\")\r\n    else if (statKey === \"atk_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"atk_base\") + Character.getStatValueWithOverride(character, \"atk_weapon\")\r\n\r\n    let diff = buildVal - originalVal\r\n    let diffText = (diff?.toFixed?.(Stat.fixedUnit(statKey)) || diff) + Stat.getStatUnit(statKey)\r\n    if (diff < 0) buildDiff = <span className=\"text-success\">{diffText}</span>\r\n    else if (diff > 0) buildDiff = <span className=\"text-success\"> +{diffText}</span>\r\n\r\n    if (originalVal || !diff) statVal = <span className={editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}>{(originalVal?.toFixed?.(Stat.fixedUnit(statKey)) || originalVal) + Stat.getStatUnit(statKey)}</span>\r\n  }\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className=\"float-right text-right\">{statVal}{buildDiff}</span>\r\n  </Col>\r\n}\r\nconst DisplayNewBuildDiff = ({ statKey, character, equippedBuild, newBuild, editable, ...otherProps }) => {\r\n  let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right ${editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed?.(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed?.(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nexport {\r\n  DisplayStats,\r\n  DisplayNewBuildDiff,\r\n}","import React, { useState } from 'react';\r\nimport { Accordion, Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { DisplayNewBuildDiff, DisplayStats } from '../../Components/StatDisplay';\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from '../../StatDependency';\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState }) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(characterKey)\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  const formulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build.finalStats, statKeys))\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Calculations`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ?\r\n                  statKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                  statKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {formulaKeys.map(key => <Col key={key} xs={12} className=\"mt-2\">\r\n                    <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                      <Card.Header className=\"p-2\">\r\n                        {Stat.printStat(key, build.finalStats)}\r\n                      </Card.Header>\r\n                      <Card.Body className=\"p-2\">\r\n                        <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  )}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n              {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Artifact.getSlotKeys().map(slotKey =>\r\n            build.artifactIds[slotKey] ? <Col sm={6} lg={4} key={build.artifactIds[slotKey]} className=\"mb-2\">\r\n              <ArtifactCard artifactId={build.artifactIds[slotKey]} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport { DisplayNewBuildDiff, DisplayStats } from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"char_level\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={(val) => setOverride(\"char_level\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"char_level\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats, character)}</p>\r\n            <Row>\r\n              <Col xs={12} md={6}>\r\n                <h5>ATK: {weaponDisplayMainVal}</h5>\r\n              </Col>\r\n              {subStatKey && <Col xs={12} md={6}>\r\n                <h5>{Stat.getStatName(subStatKey)}: {weaponDisplaySubVal}{Stat.getStatUnit(subStatKey)}</h5>\r\n              </Col>}\r\n            </Row>\r\n            {<Row>\r\n              {(conditionalStats || weaponBonusStats) && <Col xs={12}><h6 className=\"mb-0\">Bonus Stats:</h6></Col>}\r\n              {weaponBonusStats && Object.entries(weaponBonusStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"bonu\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n              {conditionalStats && Object.entries(conditionalStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"cond\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n            </Row>}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  let { editable, character, character: { compareAgainstEquipped }, setOverride, equippedBuild, newBuild } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  let additionalKeys = [\"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const displayStatKeys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp_base\", \"hp\", \"hp_\", \"atk_base\", \"atk\", \"atk_\", \"def_base\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\", \"skill_crit_rate\", \"burst_crit_rate\", \"all_dmg_bonus\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              displayStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              displayStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              otherStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ?\r\n            miscStatkeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n            miscStatkeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n","import { faCheckSquare, faQuestionCircle, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, ToggleButton, ToggleButtonGroup, Tooltip } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation, dmgMode }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  //choose which one to display stats for\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button\r\n        // style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"norm_atk\", \"char_atk\", \"plunge\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(Character.getTalentStatKey(\"char_atk\", character, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    //search for dependency\r\n    return Stat.getPrintableFormulaStatKeyList(GetDependencies(build.finalStats, keys))\r\n  }\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <Accordion>\r\n        <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Options</span>\r\n                <small>Expand below to edit enemy details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ToggleButtonGroup type=\"radio\" value={dmgMode} name=\"dmgOptions\" onChange={(dmgMode) => setState({ dmgMode })}>\r\n                  <ToggleButton value=\"avg_dmg\">Avg. DMG</ToggleButton>\r\n                  <ToggleButton value=\"dmg\">Normal Hit, No Crit</ToggleButton>\r\n                  <ToggleButton value=\"crit_dmg\">Crit Hit DMG</ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Row className=\"mb-2\"><Col>\r\n                <Button variant=\"warning\" >\r\n                  <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                    To get the specific resistance values of enemies, please visit the wiki.\r\n                  </a>\r\n                </Button >\r\n              </Col></Row>\r\n              <Row>\r\n                <Col xs={12} xl={6} className=\"mb-2\">\r\n                  <StatInput\r\n                    name={<b>Enemy Level</b>}\r\n                    value={Character.getStatValueWithOverride(character, \"enemy_level\")}\r\n                    placeholder={Stat.getStatNameRaw(\"enemy_level\")}\r\n                    defaultValue={Character.getBaseStatValue(character, \"enemy_level\")}\r\n                    onValueChange={(val) => setOverride(\"enemy_level\", val)}\r\n                  />\r\n                </Col>\r\n                {[\"physical\", ...Character.getElementalKeys()].map(eleKey => {\r\n                  let statKey = eleKey === \"physical\" ? \"enemy_phy_res\" : `${eleKey}_enemy_ele_res`\r\n                  let immunityStatKey = eleKey === \"physical\" ? \"enemy_phy_immunity\" : `${eleKey}_enemy_ele_immunity`\r\n                  let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                  return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                        <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                      name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                      value={Character.getStatValueWithOverride(character, statKey)}\r\n                      placeholder={Stat.getStatNameRaw(statKey)}\r\n                      defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                      onValueChange={(val) => setOverride(statKey, val)}\r\n                      disabled={elementImmunity}\r\n                    />\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Formulas</span>\r\n                <small>Expand below to see calculation details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n              <Row>\r\n                {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\r\n                  <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                    <Card.Header className=\"p-2\">\r\n                      {Stat.printStat(key, build.finalStats)}\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-2\">\r\n                      <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                )}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {Character.getTalent(characterKey, \"sprint\", false) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_dmg: SuperConductCard,\r\n  electrocharged_dmg: ElectroChargedCard,\r\n  overloaded_dmg: OverloadedCard,\r\n  swirl_dmg: SwirlCard,\r\n  shatter_dmg: ShatteredCard,\r\n  crystalize_dmg: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey, reactionMode = \"none\" }, newBuild, equippedBuild, setState }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let charEleKey = Character.getElementalKey(characterKey)\r\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shatter_dmg\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shatter_dmg\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row>\r\n        <Col ><Row className=\"mb-n2\">\r\n          {eleInterArr.map(key => {\r\n            let Ele = ReactionComponents[key]\r\n            if (!Ele) return null\r\n            let val = build?.finalStats?.[key]\r\n            val = val?.toFixed?.(Stat.fixedUnit(key)) || val\r\n            return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele value={val} /></Col>\r\n          })}\r\n        </Row></Col>\r\n        <Col xs=\"auto\">\r\n          {[\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup\r\n            type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setState({ reactionMode: val === \"none\" ? null : val })}>\r\n            <ToggleButton className=\"p-2\" value={\"none\"}> <h6>No Elemental</h6> <h6>Interactions</h6></ToggleButton >\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Vaporize(Pyro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Pyro)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"hydro\" && <ToggleButton className=\"p-2\" value={\"hydro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Melt(Pyro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"cryo\" && <ToggleButton className=\"p-2\" value={\"cryo_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Pyro)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n          </ToggleButtonGroup>}\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"superconduct_dmg\")}</h5>\r\n    <h4 className=\"text-superconduct mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"electrocharged_dmg\")}</h5>\r\n    <h4 className=\"text-electrocharged mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"overloaded_dmg\")}</h5>\r\n    <h4 className=\"text-overloaded mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction SwirlCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"swirl_dmg\")}</h5>\r\n    <h4 className=\"text-swirl mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ value }) {\r\n  let information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"shatter_dmg\")}</h5>\r\n    <h4 className=\"text-shatter mb-0\">\r\n      <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"crystalize_dmg\")}</h5>\r\n    <h4 className=\"text-crystalize mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let { talentLvlKey = undefined, levelBoost = 0 } = Character.getTalentLevelKey(character, talentKey, constellation, true)\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n  if (typeof talentLvlKey === \"number\") {\r\n    if (editable) {\r\n      let setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        let talentLevelKeys = state.talentLevelKeys || {}\r\n        talentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let statsEle = null\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  if (talentStats) {\r\n    let statList = Object.entries(talentStats).map(([statKey, statVal], index) =>\r\n      typeof statVal === \"number\" && <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n        <div>\r\n          <span><b>{Stat.getStatName(statKey)}</b></span>\r\n          <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n        </div>\r\n      </ListGroup.Item>\r\n    ).filter(e => Boolean(e))//filter because modifiers cannot be displayed.\r\n    statsEle = Boolean(statList.length) && <Row><Col>\r\n      <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n        <ListGroup className=\"text-white\" variant=\"flush\">\r\n          {statList}\r\n        </ListGroup>\r\n      </Card>\r\n    </Col></Row>\r\n  }\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalStats = {}\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            //filter out modifiers from rendering\r\n            conditionalStats = Object.fromEntries(Object.entries(conditionalStats).filter(([key, _]) => key !== \"modifiers\"))\r\n            conditionalFields = Character.getTalentConditionalFields(conditional, conditionalNum, [])\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Col xs={12}>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {Object.entries(conditionalStats).map(([statKey, statVal], index) =>\r\n                  <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n                    <div>\r\n                      <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                      <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n                    </div>\r\n                  </ListGroup.Item>\r\n                )}\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i + (conditionalStats?.length || 0)} index={i + (conditionalStats?.length || 0)} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        }\r\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\r\n          <div className=\"mb-2\">{talentText}</div>\r\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n        </Col>{conditionalEle}</Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay(props) {\r\n  let { character, character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldVariant = field.variant || \"\"\r\n  if (typeof fieldVariant === \"function\")\r\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldBasic = field.basicVal\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats, character)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = field.value ? field.value : field.finalVal\r\n  if (typeof fieldVal === \"function\")\r\n    fieldVal = fieldVal?.(talentLvlKey, build.finalStats, character)\r\n  let fixedVal = field.fixed || 0\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.finalVal\r\n\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats, character)?.toFixed?.(fixedVal))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) || fieldVal}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}\r\n","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterId)\r\n      this.state = CharacterDatabase.getCharacter(props.characterId)\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    dmgMode: \"dmg\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey), reactionMode: null, autoInfused: false })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.characterId && this.state.id !== this.props.characterId)\r\n      this.setState(CharacterDatabase.getCharacter(this.props.characterId))\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"char_level\")}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && (Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\"}>Talents {(Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\" && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} setState={this.setSetState} setOverride={this.setOverride} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import { Container } from \"react-bootstrap\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport '../StatDependency'\r\nexport default function TestDisplay(props) {\r\n  DatabaseInitAndVerify()\r\n  return <Container>\r\n    <CharacterDisplayCard editable characterId={\"character_2\"} />\r\n  </Container>\r\n}\r\n","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\nimport { GetDependencies } from \"../StatDependency\"\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    if (skillKey === \"phy\") return `phy_${dmgMode}`\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    if (skillKey === \"phy\") return \"physical\"\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_base\") || false\r\n    return character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals, initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals && artifactConditionals.forEach(conditional => {\r\n      let { srcKey: setKey, srcKey2: setNumKey } = conditional\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditional.conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats)\r\n    PreprocessFormulas(dependencies, stats.modifiers)(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"modifiers\")\r\n        return initialStats.modifiers = { ...(initialStats.modifiers || {}), ...val }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey, constellation)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, Modifiers, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = []) => {\r\n    //remove keys that will be overriden by the modifier\r\n    for (const statKey of statList)\r\n      if (Object.keys(ModifiersText).includes(statKey))\r\n        statList = statList.filter(skey => skey !== Modifiers[statKey].key)\r\n    let formulaKeys = Object.keys(FormulaText)\r\n    let modifiersTextKeys = Object.keys(ModifiersText)\r\n    return statList.filter(statKey => formulaKeys.includes(statKey) || modifiersTextKeys.includes(statKey))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    if (statKey in ModifiersText)\r\n      return Stat.printModifier(stats, statKey, modifiers[statKey], false)\r\n    return FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n      (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n  }\r\n\r\n  static printModifier = (stats, overrideKey, options, expand = true) =>\r\n    typeof ModifiersText?.[overrideKey]?.formulaText === \"function\" &&\r\n    (<span>{ModifiersText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (Modifiers[statKey]) statKey = Modifiers[statKey].key\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  trans_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(0, \"ele_mas\")} * exp^(-0.000505 * {f(0, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst ModifiersText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.sweep_multiplier * 100}%</span>,\r\n  },\r\n  mona_passive2_hydro_ele_dmg_bonus: {\r\n    formulaText: () => (o) => <span>{f(o, \"hydro_ele_dmg_bonus\")} + {f(o, \"ener_rech\")} * 20%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n  ModifiersText,\r\n};\r\n","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance\r\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {})\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, numStars, rolls) => {\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars);\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let min = rollData[0] * len;\r\n    let max = rollData[rollData.length - 1] * len;\r\n    return clampPercent(((sum - min) / (max - min)) * 100)\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      if (rollArr.length > 1) substat.rollArr = rollArr\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, numStars, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, numStars, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      let hasSetEffect = false\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (setEffectObj.stats && Object.keys(setEffectObj.stats).length > 0) {\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n            hasSetEffect = true\r\n          }\r\n          if (setEffectObj.conditional) {\r\n            let conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n            if (conditionalNum) {\r\n              let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n              if (Object.keys(condStats) > 0) {\r\n                setEffect[setNumKey] = deepClone(condStats)\r\n                hasSetEffect = true\r\n              }\r\n            }\r\n          }\r\n        })\r\n      if (hasSetEffect)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => artifactDatabase[id] || null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  all_dmg_bonus: { name: \"All DMG Bonus\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elementry Mastery Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elementry Mastery Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elementry Mastery Multiplier Z\", unit: \"multi\" },\r\n  trans_reaction_base_multi: { name: \"Transformation Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_final: (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.phy_dmg,\r\n  plunge_crit_dmg: (s) => s.phy_crit_dmg,\r\n  plunge_avg_dmg: (s) => s.phy_avg_dmg,\r\n  plunge_bonus_multi: (s) => s.phy_bonus_multi,\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * s.ele_mas_multi_x * 1.5 * s.trans_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * s.ele_mas_multi_x * 2 * s.trans_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * s.ele_mas_multi_x * 2 * s.trans_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * s.ele_mas_multi_x * 1.5 * s.trans_reaction_base_multi,\r\n  trans_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s[`${ele}_ele_dmg`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_ele_crit_dmg`],\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_ele_avg_dmg`],\r\n  plunge_bonus_multi: (s, ele) => s[`${ele}_ele_bonus_multi`],\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.all_dmg_bonus) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst Modifiers = {\r\n  noelle_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => s.atk_final + s.def_final * options.sweep_multiplier\r\n  },\r\n  mona_passive2_hydro_ele_dmg_bonus: {\r\n    key: \"hydro_ele_dmg_bonus\",\r\n    formula: () => (s) => s.hydro_ele_dmg_bonus + s.ener_rech * 0.2\r\n  }\r\n}\r\n\r\nfunction PreprocessFormulas(formulaKeys, modifiers) {\r\n  let formulas = formulaKeys.map(key => {\r\n    if (key in Modifiers) return [Modifiers[key].key, Modifiers[key].formula(modifiers[key])]\r\n    if (key in Formulas) return [key, Formulas[key]]\r\n    let value = StatData[key][\"default\"] ?? 0\r\n    return [key, (s) => (s[key] ?? value)]\r\n  })\r\n\r\n  return stat => formulas.forEach(([key, formula]) => {\r\n    stat[key] = formula(stat)\r\n  })\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  Modifiers,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  PreprocessFormulas,\r\n}\r\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = (props) => <span className={props.colored ? \"text-5star\" : \"\"}>\r\n  {props.stars ? [...Array(props.stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n"],"sourceRoot":""}