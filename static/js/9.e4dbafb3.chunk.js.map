{"version":3,"sources":["Weapon/Weapon.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","../node_modules/react-bootstrap/esm/Badge.js","Data/WeaponData.js","DatabaseUtil.js","Components/StatIcon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","Data/CharacterData.js","Character/CharacterCard.js","Character/CharacterDisplay.js","Character/Character.js","Stat.js","Util/Util.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Character/CharacterDatabase.js","Util/ConditionalsUtil.js","Artifact/ArtifactDatabase.js","Data/ElementalData.js","StatData.js","Components/StarDisplay.js"],"names":["Weapon","this","Error","getWeaponDataImport","WeaponDataImport","getLevelName","levelKey","defVal","LevelNameData","getLevelIndex","WeaponLevelKeys","indexOf","getWeaponName","weaponKey","WeaponData","name","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","refineIndex","charFinalStats","character","passiveDescription","getWeaponDescription","description","getWeaponConditional","conditional","getWeaponImg","img","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","getWeaponSubStatKey","subStatKey","getWeaponBonusStat","stats","getWeaponsOfType","weaponType","Object","fromEntries","entries","filter","getWeaponTypeName","WeaponTypeData","getWeaponMainStatValWithOverride","weaponObj","overrideMainVal","key","getWeaponSubStatValWithOverride","overrideSubVal","getWeaponConditionalStat","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","map","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","Badge","React","forwardRef","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","then","imp","default","DatabaseInitAndVerify","localStorage","removeItem","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","values","forEach","art","valid","location","getCharacter","keyMapping","setKey","mainStatKey","endsWith","replace","maximumEfficiency","Artifact","substatsValidation","updateArtifact","chars","getCharacterDatabase","equippedArtifacts","slotKey","artid","getArtifact","undefined","artifactConditionals","cond","srcKey","srcKey2","dmgMode","updateCharacter","StatIcon","hp_base","faTint","hp_final","hp_","hp","atk_base","faFistRaised","atk_final","atk_","atk","def_base","faShieldAlt","def_final","def_","def","ele_mas","faMagic","crit_rate","faDice","crit_dmg","faDiceD20","ener_rech","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","icon","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","stam","CharacterSpecializedStatKey","CharacterCard","useReducer","x","forceUpdate","useEffect","Promise","all","Character","getCharacterDataImport","getDataImport","characterId","onEdit","onDelete","build","calculateBuild","setToSlots","characterKey","weapon","constellation","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","weaponName","weaponMainVal","weaponSubKey","weaponSubVal","weaponLevelName","weaponPassiveName","cardClassName","bg","text","Header","header","xs","size","onClick","faEdit","faTrashAlt","Body","style","cursor","src","getThumb","getStar","thumbnail","getName","stars","colored","getStatValueWithOverride","Stat","getStatName","getStatUnit","getSetEffects","arr","artifactSetName","getSetName","highestNum","Math","max","unit","statVal","finalStats","toFixed","fixedUnit","footer","Footer","Link","to","pathname","selectedCharacterId","CharacterDisplayCardPromise","CharacterDisplayCard","lazy","CharacterDisplay","deleteCharacter","id","removeCharacter","editCharacter","setState","charIdToEdit","showEditor","scrollRef","current","scrollIntoView","behavior","cancelEditCharacter","state","ReactGA","pageview","createRef","charIdList","getCharacterIdList","Suspense","fallback","editable","onClose","lg","md","faPlus","moveToNewLocation","removeCharacterById","getBaseStatValue","getSpecializedStatKey","getSpeicalizedStatVal","getLevel","includes","characterObj","getCDataObj","baseStat","getIndexFromlevelkey","charKey","getElementalName","elementalKey","ElementalData","getAllCharacterKeys","keys","star","getElementalKeys","getConstellationName","constellationName","getTitles","titles","getlevelKeys","getlevelNames","getAscension","getSpecializedStat","specializeStat","thumbImg","getCard","cardImg","getTalentImg","talentKey","talent","getConstellationImg","constIndex","getTalentName","getTalentLevelBoost","talents","i","talentBoost","boostEntry","find","getTalentLevelKey","withBoost","talentLvlKey","talentLevelKeys","levelBoost","clamp","getTalentDocument","document","getTalentFields","fields","getTalentStats","ascension","getTalentStatsAll","statsArr","push","getTalentConditional","conditionalKey","doc","section","tempCond","getTalentConditionalStats","val","getTalentConditionalFields","getTalentStatKey","skillKey","elemental","autoInfused","reactionMode","charEleKey","isAutoElemental","auto","infusable","eleKey","getTalentStatKeyVariant","isAutoInfusable","getDisplayStatKeys","atkKeys","startsWith","ElementToReactionKeys","hasOverride","baseStatOverrides","equipArtifacts","artifactIds","artIdsOnCharacter","artIdsNotOnCharacter","getSlotKeys","artNotOnChar","artOnChar","notCharLoc","equipArtifact","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","deepClone","getMainStatValue","numStars","artifactsAssumeFull","substats","substat","stat","setNumKey","getConditionalStats","AttachLazyFormulas","statKeys","char_ele_key","overrides","hasOwnProperty","specialStatKey","specializedStatVal","addStatsObj","formulaOverrides","talentConditionals","weaponStats","subKey","subVal","bonusStats","conditionalStats","htmlStatsData","StatData","getStatNamePretty","pretty","getStatNameRaw","getStatNameWithPercent","getStatVariant","printStat","f","expand","printFormula","formulaOverride","OverrideFormulas","printOverrideFormula","options","FormulaText","overrideKey","OverrideFormulasText","formulaText","statName","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_dmg","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_dmg","electrocharged_multi","electrocharged","superconduct_dmg","superconduct_multi","superconduct","swirl_dmg","swirl_multi","swirl","shatter_dmg","shatter_multi","shattered","crystalize_dmg","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","trans_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","abs","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","noelle_burst_atk","getRandomElementFromArray","array","floor","random","length","getRandomIntInclusive","min","ceil","loadFromLocalStorage","data","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","closeEnoughFloat","a","b","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","Array","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","arguments","source","getOwnPropertyDescriptors","defineProperties","_createForOfIteratorHelper","allowArrayLike","it","F","s","n","done","e","_e","err","normalCompletion","didErr","step","next","_e2","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","phy_dmg_bonus","ele_dmg_bonus","2","ArtifactSubStatsData","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","rolls","efficiency","getSubstatEfficiency","getArtifactEfficiency","currentEfficiency","errMsgs","some","currentNumOfRolls","reduce","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","getArtifactIDFromSlot","artifactToSwapWith","swapLocations","unequipArtifactOnSlot","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","getPieceName","getPieceIcon","icons","getSetEffectsObj","setEffects","getArtifactSetNumStats","artifactSetEffect","artArr","parseInt","setNumKeys","getSetEffectText","setEffectText","getSetEffectConditional","getSlotName","getSlotIcon","getSlotMainStatKeys","getSlotNameWithIcon","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","accu","v","reverse","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","hasSetEffect","setEffectObj","getConditionalNum","condStats","initiated","characterDatabase","charIdIndex","isInvalid","char","addCharacter","dchar","charid","equipArtifactBuild","conditionals","srcKeyObj","index","findIndex","splice","newCond","fieldName","selectedConditionalNum","selectedConditional","curConditional","maxStack","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","Formulas","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","reactionName","dmgKey","dmgName","str","atkTypeName","dmgModeName","ele_key","formula","dependency","formulaKeys","overrideFormulaKey","get","StarIcon","faStar","Stars","_"],"mappings":"qMAEqBA,EAEnB,aAAgB,GAAD,oBAAKC,gBAAgBD,EAAQ,MAAME,MAAM,2CAFrCF,EAIZG,oBAAsB,kBAAMC,KAJhBJ,EAKZK,aAAe,SAACC,GAAD,IAAWC,EAAX,uDAAoB,GAApB,OAA4BC,IAAcF,IAAaC,GAL1DP,EAMZS,cAAgB,SAACH,GAAD,OAAcI,IAAgBC,QAAQL,IAN1CN,EAQZY,cAAgB,SAACC,GAAD,MAAYN,EAAZ,uDAAqB,GAArB,OAA6B,UAAAO,IAAWD,UAAX,eAAuBE,OAAQR,GARhEP,EASZgB,gBAAkB,SAACH,GAAD,MAAYN,EAAZ,uDAAqB,EAArB,OAA4B,UAAAO,IAAWD,UAAX,eAAuBI,SAAUV,GATnEP,EAUZkB,qBAAuB,SAACL,GAAD,MAAYN,EAAZ,uDAAqB,GAArB,OAA6B,UAAAO,IAAWD,UAAX,eAAuBM,cAAeZ,GAV9EP,EAWZoB,4BAA8B,SAACP,EAAWQ,EAAaC,EAAgBC,GAAzC,QAAoDhB,EAApD,uDAA6D,GAA7D,OAAqE,UAAAO,IAAWD,UAAX,mBAAuBW,0BAAvB,sBAA4CH,EAAaC,EAAgBC,KAAchB,GAX9KP,EAYZyB,qBAAuB,SAACZ,GAAD,MAAYN,EAAZ,uDAAqB,GAArB,OAA6B,UAAAO,IAAWD,UAAX,eAAuBa,cAAenB,GAZ9EP,EAaZ2B,qBAAuB,SAACd,GAAD,MAAYN,EAAZ,uDAAqB,KAArB,OAA+B,UAAAO,IAAWD,UAAX,eAAuBe,cAAerB,GAbhFP,EAcZ6B,aAAe,SAAChB,GAAD,MAAYN,EAAZ,uDAAqB,KAArB,OAA8B,UAAAO,IAAWD,UAAX,eAAuBiB,MAAOvB,GAd/DP,EAiBZ+B,qBAAuB,SAAClB,EAAWP,GAAZ,UAAsBC,EAAtB,uDAA+B,EAA/B,OAAsC,UAAAO,IAAWD,UAAX,mBAAuBmB,iBAAvB,mBAAkCC,YAAlC,eAjBjDjC,EAiB+FS,cAAcH,MAAcC,GAjB3HP,EAkBZkC,oBAAsB,SAACrB,EAAWP,GAAZ,UAAsBC,EAAtB,uDAA+B,EAA/B,OAAsC,UAAAO,IAAWD,UAAX,mBAAuBmB,iBAAvB,mBAAkCG,WAAlC,eAlBhDnC,EAkB6FS,cAAcH,MAAcC,GAlBzHP,EAmBZoC,oBAAsB,SAACvB,GAAD,QAAYN,EAAZ,uDAAqB,GAArB,OAA6B,UAAAO,IAAWD,UAAX,mBAAuBmB,iBAAvB,eAAkCK,aAAc9B,GAnBvFP,EAoBZsC,mBAAqB,SAACzB,EAAWQ,GAAZ,yBAA4BP,IAAWD,UAAvC,iBAA4B,EAAuB0B,aAAnD,aAA4B,SAA+BlB,IApBpErB,EAsBZwC,iBAAmB,SAACC,GAAD,OAAgBC,OAAOC,YAAYD,OAAOE,QAAQ9B,KAAY+B,QAAO,oDAAgCJ,aAAeA,OAtB3HzC,EAuBZ8C,kBAAoB,SAACL,GAAD,IAAalC,EAAb,uDAAsB,GAAtB,OAA8BwC,IAAeN,IAAelC,GAvBpEP,EAyBZgD,iCAAmC,SAACC,GAAD,IAAY1C,EAAZ,uDAAqB,EAArB,OAC/B,OAAT0C,QAAS,IAATA,OAAA,EAAAA,EAAWC,kBA1BMlD,EA0BkB+B,qBAAL,OAA0BkB,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAWE,IAArC,OAA0CF,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAW3C,SAAUC,IA1B5EP,EA2BZoD,gCAAkC,SAACH,GAAD,IAAY1C,EAAZ,uDAAqB,EAArB,OAC9B,OAAT0C,QAAS,IAATA,OAAA,EAAAA,EAAWI,iBA5BMrD,EA4BiBkC,oBAAL,OAAyBe,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAWE,IAApC,OAAyCF,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAW3C,SAAUC,IA5B1EP,EA8BZsD,yBAA2B,SAACzC,EAAWQ,EAAakC,GAAmC,IAAnBhD,EAAkB,uDAAT,KAC9EqB,EA/Ba5B,EA+BM2B,qBAAqBd,GAC5C,IAAKe,IAAgB2B,EAAgB,OAAOhD,EAF+C,MAGrEiD,IAAiBC,mBAAmB7B,EAAa,QAAS2B,GAHW,mBAGtFhB,EAHsF,KAG/EmB,EAH+E,KAI3F,OAAKA,EACEhB,OAAOC,YAAYD,OAAOE,QAAQL,EAAMlB,IAAcsC,KAAI,yCAAgB,CAAhB,UAA4BD,OADzEnD,I,iCCpCT,ICsBXqD,EAAS,CACXC,SAAU,CAAEC,MDvBC,IAA0B,0CCuBpBC,KCvBN,IAA0B,yCDuBdC,OEvBZ,IAA0B,2CFuBNC,QGvBpB,IAA0B,4CHuBGC,IIvB7B,IAA0B,wCJuBQC,MKvBlC,IAA0B,0CLuBeC,KMvBzC,IAA0B,0CNwBvCC,YAAa,CAAEC,IOxBF,IAA0B,kDPwBnBC,SQxBP,IAA0B,uDRwBTC,SSxBjB,IAA0B,uDTwBCC,QUxB3B,IAA0B,sDVwBUC,MWxBpC,IAA0B,qDXyBvCC,MAAO,CACLC,QY1BW,IAA0B,+CZ2BrCC,Ua3BW,IAA0B,kDb6BvCC,UAAW,CACTC,Oc9BW,IAA0B,mDd+BrCC,Ie/BW,IAA0B,4CfgCrCC,WgBhCW,IAA0B,2DhBmC1BrB,O,iCiBnCf,yDAQIsB,EAAqBC,IAAMC,YAAW,SAAUC,EAAMC,GACxD,IAAIC,EAAWF,EAAKE,SAChBC,EAAUH,EAAKG,QACfC,EAAOJ,EAAKI,KACZC,EAAYL,EAAKK,UACjBC,EAAUN,EAAKO,GACfC,OAAwB,IAAZF,EAAqB,OAASA,EAC1CG,EAAQC,YAA8BV,EAAM,CAAC,WAAY,UAAW,OAAQ,YAAa,OAEzFW,EAASC,YAAmBV,EAAU,SAC1C,OAAoBJ,IAAMe,cAAcL,EAAWM,YAAS,CAC1Db,IAAKA,GACJQ,EAAO,CACRJ,UAAWU,IAAWV,EAAWM,EAAQP,GAAQO,EAAS,QAASR,GAAWQ,EAAS,IAAMR,SAGjGN,EAAMmB,YAAc,QACpBnB,EAAMoB,aApBa,CACjBb,MAAM,GAoBOP,O,iCC1Bf,8KAAIpE,EAAa,GACbV,EAAmB,qDACvBA,EAAiBmG,MAAK,SAAAC,GACpB1F,EAAa0F,EAAIC,QACjBrG,EAAmB,QAGrB,IAAMM,EAAkB,CAAC,KAAM,KAAM,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,OAC/LF,EAAgB,CAAE,GAAM,SAAU,GAAM,SAAU,IAAO,UAAW,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,WACjduC,EAAiB,CACrB2B,MAAO,QACPF,SAAU,WACVD,SAAU,WACVD,IAAK,MACLG,QAAS,Y,uGCVX,SAASiC,IAMP,GAJAC,aAAaC,WAAW,oBACxBD,aAAaC,WAAW,qBAGpBC,IAAkBC,mCACpBC,IAAiBD,mCAAoC,CAErD,IAAIE,EAAOD,IAAiBE,sBAC5BvE,OAAOwE,OAAOF,GAAMG,SAAQ,SAAAC,GAAQ,IAAD,IAC7BC,GAAQ,EACRD,EAAIE,WAAaT,IAAkBU,aAAaH,EAAIE,YACtDF,EAAIE,SAAW,GACfD,GAAQ,GAGV,IAAIG,EAAa,CACf,oBAAqB,kBACrB,sBAAuB,qBACvB,kBAAmB,iBACnB,mBAAoB,kBACpB,kBAAmB,iBACnB,iBAAkB,gBAClB,qBAAsB,mBACtB,0BAA2B,uBAC3B,wBAAyB,uBACzB,gBAAiB,eACjB,cAAe,aACf,eAAgB,cAChB,kBAAmB,gBACnB,iBAAkB,gBAClB,0BAA2B,wBAC3B,YAAa,WACb,mBAAoB,kBACpB,YAAa,WACb,oBAAqB,mBACrB,wBAAyB,sBACzB,0BAA2B,yBAC3B,qBAAsB,qBAEpBA,EAAWJ,EAAIK,UACjBL,EAAIK,OAASD,EAAWJ,EAAIK,QAC5BJ,GAAQ,IAGV,OAAID,QAAJ,IAAIA,GAAJ,UAAIA,EAAKM,mBAAT,iBAAI,EAAkBC,gBAAtB,aAAI,SAA6B,cAC/BP,EAAIM,YAAcN,EAAIM,YAAYE,QAAQ,UAAW,iBACrDP,GAAQ,GAGe,aAAlB,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKM,eACPN,EAAIM,YAAc,gBAClBL,GAAQ,GAELD,EAAIS,oBACPC,IAASC,mBAAmBX,GAC5BC,GAAQ,GAELA,GACHN,IAAiBiB,eAAeZ,MAGpC,IAAIa,EAAQpB,IAAkBqB,uBAC9BxF,OAAOwE,OAAOe,GAAOd,SAAQ,SAAA5F,GAC3B,IAAI8F,GAAQ,EAERc,EAAoBzF,OAAOC,YAAYD,OAAOE,QAAQrB,EAAU4G,mBAAmBxE,KAAI,YAAuB,IAAD,mBAApByE,EAAoB,KAAXC,EAAW,KAC/G,OAAKtB,IAAiBuB,YAAYD,GAI3B,CAACD,EAASC,IAHfhB,GAAQ,EACD,CAACe,OAASG,QAIhBlB,IACH9F,EAAU4G,kBAAoBA,GAG5B5G,EAAUiH,uBAAsBjH,EAAUiH,qBAAuBjH,EAAUiH,qBAAqB3F,QAAO,SAAA4F,GACzG,SAAKA,EAAKC,SAAWD,EAAKE,WACxBtB,GAAQ,GACD,OAMN9F,EAAUqH,UACbrH,EAAUqH,QAAU,MACpBvB,GAAQ,GAELA,GACHR,IAAkBgC,gBAAgBtH,S,8FC7FpCuH,EAAW,CACfC,QAASC,IACTC,SAAUD,IACVE,IAAKF,IACLG,GAAIH,IAEJI,SAAUC,IACVC,UAAWD,IACXE,KAAMF,IACNG,IAAKH,IAELI,SAAUC,IACVC,UAAWD,IACXE,KAAMF,IACNG,IAAKH,IAELI,QAASC,IACTC,UAAWC,IACXC,SAAUC,IACVC,UAAWC,IACXC,UAAWC,KAGPC,EAAc,SAACC,GAAD,OAClB3B,EAAS2B,GAAW,cAAC,IAAD,CAAiBC,KAAM5B,EAAS2B,GAAU/E,UAAU,UAAa,O,iCC3BxE,SAASiF,EAAgBC,EAAKzH,EAAK0H,GAYhD,OAXI1H,KAAOyH,EACTlI,OAAOoI,eAAeF,EAAKzH,EAAK,CAC9B0H,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZL,EAAIzH,GAAO0H,EAGND,EAZT,mC,iCCAA,8KAAIM,EAAgB,GAChBC,EAAsB,qDAC1BA,EAAoB5E,MAAK,SAAAC,GACvB0E,EAAgB1E,EAAIC,QACpB0E,EAAsB,QAGxB,IAAMC,EAAa,CACjB,GAAM,CACJrK,KAAM,QACNsK,MAAO,EACPC,MAAO,GAET,IAAO,CACLvK,KAAM,SACNsK,MAAO,GACPC,MAAO,GAET,KAAQ,CACNvK,KAAM,cACNsK,MAAO,GACPC,MAAO,GAGT,IAAO,CACLvK,KAAM,SACNsK,MAAO,GACPC,MAAO,GAET,KAAQ,CACNvK,KAAM,cACNsK,MAAO,GACPC,MAAO,GAGT,IAAO,CACLvK,KAAM,SACNsK,MAAO,GACPC,MAAO,GAET,KAAQ,CACNvK,KAAM,cACNsK,MAAO,GACPC,MAAO,GAET,IAAO,CACLvK,KAAM,SACNsK,MAAO,GACPC,MAAO,GAET,KAAQ,CACNvK,KAAM,cACNsK,MAAO,GACPC,MAAO,GAET,IAAO,CACLvK,KAAM,SACNsK,MAAO,GACPC,MAAO,GAET,KAAQ,CACNvK,KAAM,cACNsK,MAAO,GACPC,MAAO,GAGT,IAAO,CACLvK,KAAM,SACNsK,MAAO,GACPC,MAAO,GAET,KAAQ,CACNvK,KAAM,cACNsK,MAAO,GACPC,MAAO,GAET,IAAO,CACLvK,KAAM,SACNsK,MAAO,GACPC,MAAO,IAILC,EAAoB,CACxBvB,UAAW,EACXE,SAAU,GACVE,UAAW,IACXoB,KAAM,KAEFC,EAA8B,CAAC,MAAO,OAAQ,OAAQ,UAAW,YAAa,YAAa,YAAa,WAAY,gBAAiB,sBAAuB,oBAAqB,wBAAyB,sBAAuB,qBAAsB,uB,kPCxE9O,SAASC,EAAc5F,GAAQ,IAAD,IACnB6F,sBAAW,SAAAC,GAAC,OAAIA,EAAI,IAAG,GAAtCC,EADkC,oBAE3CC,qBAAU,WACRC,QAAQC,IAAI,CACVC,IAAUC,yBACVlM,IAAOG,sBACP2H,IAASqE,kBACR5F,MAAK,kBAAMsF,SACb,IARwC,IASrCO,EAAkCtG,EAAlCsG,YAAaC,EAAqBvG,EAArBuG,OAAQC,EAAaxG,EAAbwG,SACvB/K,EAAYsF,IAAkBU,aAAa6E,GAC/C,IAAK7K,EAAW,OAAO,KACvB,IAAIgL,EAAQN,IAAUO,eAAejL,GAC/BkL,EAAeF,EAAfE,WAEAC,EAA8CnL,EAA9CmL,aAAc3L,EAAgCQ,EAAhCR,KAAM4L,EAA0BpL,EAA1BoL,OAAQC,EAAkBrL,EAAlBqL,cAC9BC,EAAaZ,IAAUa,gBAAgBJ,GACvCK,EAAgBd,IAAUe,iBAAiBN,GAC3CO,EAAajN,IAAOY,cAAc+L,EAAOxJ,KACzC+J,EAAgBlN,IAAOgD,iCAAiC2J,GACxDQ,EAAenN,IAAOoC,oBAAoBuK,EAAOxJ,KACjDiK,EAAepN,IAAOoD,gCAAgCuJ,GACtDU,EAAkBrN,IAAOK,aAAasM,EAAOrM,UAC7CgN,EAAoBtN,IAAOkB,qBAAqByL,EAAOxJ,KAE3D,OAAQ,eAAC,IAAD,CAAMuC,UAAWI,EAAMyH,cAAeC,GAAI1H,EAAM0H,GAAK1H,EAAM0H,GAAK,cAAeC,KAAK,YAApF,UACN,cAAC,IAAKC,OAAN,CAAahI,UAAU,OAAvB,SACE,eAAC,IAAD,CAAKA,UAAU,aAAf,UACE,cAAC,IAAD,UACGI,EAAM6H,OAAS7H,EAAM6H,OAAS,6BAAI,4BAAI5M,QAEzC,cAAC,IAAD,CAAK6M,GAAI,OAAT,SACE,uBAAMlI,UAAU,6BAAhB,UACGI,EAAMuG,QAAU,cAAC,IAAD,CAAQ7G,QAAQ,UAAUqI,KAAK,KAAKnI,UAAU,OAC7DoI,QAASzB,EADM,SAEf,cAAC,IAAD,CAAiB3B,KAAMqD,QAExBjI,EAAMwG,UAAY,cAAC,IAAD,CAAQ9G,QAAQ,SAASqI,KAAK,KAC/CC,QAASxB,EADQ,SAEjB,cAAC,IAAD,CAAiB5B,KAAMsD,kBAMjC,eAAC,IAAKC,KAAN,CAAWH,QAASzB,EAAQ6B,MAAO,CAAEC,OAAQ9B,EAAS,UAAY,WAAlE,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKuB,GAAG,OAAOlI,UAAU,OAAzB,SACE,cAAC,IAAD,CAAO0I,IAAKnC,IAAUoC,SAAS3B,GAAehH,UAAS,4BAAuBuG,IAAUqC,QAAQ5B,GAAzC,YAAkE6B,WAAS,MAEpI,eAAC,IAAD,WACE,+BAAKtC,IAAUuC,QAAQ9B,GAAvB,IAAsC,cAAC,IAAD,CAAO0B,IAAKxK,IAAOC,SAASgJ,GAAanH,UAAU,gBAAzF,IAA0G,cAAC,IAAD,CAAO0I,IAAG,UAAExK,IAAOS,mBAAT,aAAE,EAAqB0I,GAAgBrH,UAAU,mBACrK,6BAAI,cAAC,IAAD,CAAO+I,MAAOxC,IAAUqC,QAAQ5B,GAAegC,SAAO,MAC1D,8CAAezC,IAAU0C,yBAAyBpN,EAAW,cAA7D,aAA+EqL,WAGnF,cAAC,IAAD,CAAKlH,UAAU,OAAf,SACE,eAAC,IAAD,WACE,qBAAIA,UAAU,OAAd,UAAsBuH,EAAYK,GAAiB,WAAQX,EAAOtL,YAAc,EAA7B,KAAnD,IAAuFgM,KACvF,yCAAYH,EAAZ,KAA6BI,GAAqB,iCAAOsB,IAAKC,YAAY1B,GAAxB,KAAyCC,EAAcwB,IAAKE,YAAY3B,cAG9H,cAAC,IAAD,UACE,cAAC,IAAD,UACGzK,OAAOE,QAAQkF,IAASiH,cAActC,IAAa9I,KAAI,YAAiB,IAAD,mBAAdR,EAAc,KAAT6L,EAAS,KAClEC,EAAkBnH,IAASoH,WAAW/L,GACtCgM,EAAaC,KAAKC,IAAL,MAAAD,KAAI,YAAQJ,IAC7B,OAAO,6BAAc,eAAC,IAAD,CAAOxJ,QAAQ,YAAf,UAA4ByJ,EAA5B,IAA6C,cAAC,IAAD,CAAOzJ,QAAQ,UAAf,SAA0B2J,QAA5EhM,UAItB,cAAC,IAAD,UA/Ca,CAAC,WAAY,YAAa,YAAa,UAAW,YAAa,WAAY,aAgD5EQ,KAAI,SAAA8G,GACZ,IAAI6E,EAAOV,IAAKE,YAAYrE,GACxB8E,EAAUhD,EAAMiD,WAAW/E,GAC/B,OAAO,eAAC,IAAD,CAAKmD,GAAI,GAAT,UACL,qBAAIlI,UAAU,WAAd,UAA0B8E,YAAYC,GAAtC,IAAiDmE,IAAKC,YAAYpE,MAClE,sBAAM/E,UAAS,cAAf,UACU,OAAP6J,QAAO,IAAPA,OAAA,EAAAA,EAASE,QAAQb,IAAKc,UAAUjF,KAAY6E,MAHxB7E,WAS9B3E,EAAM6J,QAAU,cAAC,IAAKC,OAAN,UACf,cAAC,IAAD,CAAQhK,GAAIiK,IAAMC,GAAI,CACpBC,SAAU,SACVC,oBAAqB5D,GAFvB,oC,+OC3FA6D,EAA8B,mEAC9BC,EAAuBC,gBAAK,kBAAMF,KAEnBG,E,kDACnB,WAAYtK,GAAQ,IAAD,8BACjB,cAAMA,IASRuK,gBAAkB,SAACC,GACjBrE,IAAUsE,gBAAgBD,GAC1B,EAAKzE,eAZY,EAenB2E,cAAgB,SAACF,GAAD,OACd,EAAKG,SAAS,CAAEC,aAAcJ,EAAIK,YAAY,IAC5C,kBAAM,EAAKC,UAAUC,QAAQC,eAAe,CAAEC,SAAU,eAjBzC,EAmBnBC,oBAAsB,kBACpB,EAAKP,SAAS,CAAEC,aAAc,KAAMC,YAAY,KAlBhDjK,cACA,EAAKuK,MAAQ,CACXP,aAAc,GACdC,YAAY,GAEdO,IAAQC,SAAS,cAPA,E,gEAuBjBlR,KAAK2Q,UAAYzL,IAAMiM,c,+BAEf,IAAD,OACHC,EAAaxK,IAAkByK,qBACnC,OAAQ,eAAC,IAAD,CAAWhM,IAAKrF,KAAK2Q,UAArB,UAEL3Q,KAAKgR,MAAMN,WAAa,cAAC,IAAD,CAAKjL,UAAU,OAAf,SAAsB,cAAC,IAAD,UAC7C,cAAC,IAAM6L,SAAP,CAAgBC,SAAU,8CAA1B,SACE,cAACtB,EAAD,CAAsBuB,UAAQ,EAC5BrF,YAAanM,KAAKgR,MAAMP,aACxBgB,QAASzR,KAAK+Q,oBACdrB,OAAQ,cAAC,IAAD,CAAQnK,QAAQ,SAASsI,QAAS7N,KAAK+Q,oBAAvC,2BAGC,KAEf,eAAC,IAAD,CAAKtL,UAAU,OAAf,UACGzF,KAAKgR,MAAMN,WAAa,KAAO,cAAC,IAAD,CAAKgB,GAAI,EAAGC,GAAI,EAAGlM,UAAU,OAA7B,SAC9B,eAAC,IAAD,CAAMA,UAAU,QAAQ8H,GAAG,cAAcC,KAAK,YAA9C,UACE,cAAC,IAAKC,OAAN,CAAahI,UAAU,OAAvB,SACE,uDAEF,cAAC,IAAKuI,KAAN,CAAWvI,UAAU,4CAArB,SACE,cAAC,IAAD,CAAKA,UAAU,yCAAf,SACE,cAAC,IAAD,CAAKkI,GAAG,OAAR,SACE,cAAC,IAAD,CAAQE,QAAS,kBAAM,EAAK0C,cAAc,KAA1C,SACE,6BAAI,cAAC,IAAD,CAAiB9F,KAAMmH,IAAQnM,UAAU,yBAOxD2L,EAAW1N,KAAI,SAAA2M,GAAE,OAChB,cAAC,IAAD,CAAcqB,GAAI,EAAGC,GAAI,EAAGlM,UAAU,OAAtC,SACE,cAAC,IAAD,CACE6H,cAAc,QACdnB,YAAakE,EACbhE,SAAU,kBAAM,EAAK+D,gBAAgBC,IACrCjE,OAAQ,kBAAM,EAAKmE,cAAcF,OAL3BA,gB,GA1D0BnL,IAAMU,Y,wLCJ/BoG,E,WAEnB,aAAgB,GAAD,oBAAKhM,gBAAgBgM,EAAW,MAAM/L,MAAM,0C,iEAyNpCkM,GACrB,IAAI7K,EAAYsF,IAAkBU,aAAa6E,GAC3C7K,EAAU4G,mBACZzF,OAAOwE,OAAO3F,EAAU4G,mBAAmBhB,SAAQ,SAAAkB,GAAK,OACtDtB,IAAiB+K,kBAAkBzJ,EAAO,OAC9CxB,IAAkBkL,oBAAoB3F,O,KAhOrBH,EAGZC,uBAAyB,kBAAMf,KAHnBc,EAIZ+F,iBAAmB,SAACzQ,EAAWkJ,GAAyB,IAAhBlK,EAAe,uDAAN,EAChDmM,EAA2BnL,EAA3BmL,aAAcpM,EAAaiB,EAAbjB,SACpB,GAAgB,uBAAZmK,EAAkC,OANrBwB,EAMiCgG,sBAAsBvF,GACxE,GAAgB,uBAAZjC,EAAkC,OAPrBwB,EAOiCiG,sBAAsBxF,EAAcpM,GACtF,GAAgB,eAAZmK,EAA0B,OAAOzK,IAAOgD,iCAAP,OAAwCzB,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAWoL,QACxF,GAAgB,eAAZlC,GAAwC,gBAAZA,EAA2B,OAT1CwB,EASsDkG,SAAS7R,GAChF,GAAgB,kBAAZmK,GAA+BA,EAAQ2H,SAAS,iBAAkB,OAAO,GAC7E,GAAI3H,KAAWc,IAAmB,OAAOA,IAAkBd,GAC3D,IAAI4H,EAZapG,EAYOqG,YAAY5F,GACpC,OAAI2F,GAAgB5H,KAAW4H,EAAaE,SAAiBF,EAAaE,SAAS9H,GAblEwB,EAagFuG,qBAAqBlS,IAC/GC,GAdU0L,EAiBZqG,YAAc,SAACG,GAAD,OAAavH,IAAcuH,IAjB7BxG,EAkBZyG,iBAAmB,SAACC,GAAD,MAAepS,EAAf,uDAAwB,GAAxB,MAAgD,aAAjBoS,EAA8B,YAA2B,OAAbC,UAAa,IAAbA,KAAA,UAAAA,IAAgBD,UAAhB,eAA+B5R,OAAQR,GAlBzH0L,EAmBZ4G,oBAAsB,kBAAMnQ,OAAOoQ,KAAK5H,MAnB5Be,EAqBZuC,QAAU,SAACiE,GAAD,MAAUlS,EAAV,uDAAmB,GAAnB,OAA2B,UArBzB0L,EAqB8BqG,YAAYG,UAAjB,eAA2B1R,OAAQR,GArB5D0L,EAsBZqC,QAAU,SAACmE,GAAD,MAAUlS,EAAV,uDAAmB,EAAnB,OAA0B,UAtBxB0L,EAsB6BqG,YAAYG,UAAjB,eAA2BM,OAAQxS,GAtB3D0L,EAuBZa,gBAAkB,SAAC2F,GAAD,MAAUlS,EAAV,uDAAmB,GAAnB,OAA2B,UAvBjC0L,EAuBsCqG,YAAYG,UAAjB,eAA2B5F,aAActM,GAvB1E0L,EAwBZ+G,iBAAmB,kBAAMtQ,OAAOoQ,KAAKF,MAxBzB3G,EAyBZe,iBAAmB,SAACyF,GAAD,MAAUlS,EAAV,uDAAmB,GAAnB,OAA2B,UAzBlC0L,EAyBuCqG,YAAYG,UAAjB,eAA2B1F,gBAAiBxM,GAzB9E0L,EA0BZgH,qBAAuB,SAACR,GAAD,MAAUlS,EAAV,uDAAmB,GAAnB,OAA2B,UA1BtC0L,EA0B2CqG,YAAYG,UAAjB,eAA2BS,oBAAqB3S,GA1BtF0L,EA2BZkH,UAAY,SAACV,GAAD,MAAUlS,EAAV,uDAAmB,GAAnB,OAA2B,UA3B3B0L,EA2BgCqG,YAAYG,UAAjB,eAA2BW,SAAU7S,GA3BhE0L,EA8BZoH,aAAe,kBAAM3Q,OAAOoQ,KAAK1H,MA9BrBa,EA+BZqH,cAAgB,SAAChT,GAAD,MAAWC,EAAX,uDAAoB,GAApB,OAAsC,OAAV6K,UAAU,IAAVA,KAAA,UAAAA,IAAa9K,UAAb,eAAwBS,OAAQR,GA/BhE0L,EAgCZuG,qBAAuB,SAAClS,GAAD,OAhCX2L,EAgC8BoH,eAAe1S,QAAQL,IAhCrD2L,EAiCZkG,SAAW,SAAC7R,GAAD,MAAWC,EAAX,uDAAoB,EAApB,OAAqC,OAAV6K,UAAU,IAAVA,KAAA,UAAAA,IAAa9K,UAAb,eAAwB+K,QAAS9K,GAjC3D0L,EAkCZsH,aAAe,SAACjT,GAAD,MAAWC,EAAX,uDAAoB,EAApB,OAAqC,OAAV6K,UAAU,IAAVA,KAAA,UAAAA,IAAa9K,UAAb,eAAwBgL,QAAS/K,GAlC/D0L,EAqCZuH,mBAAqB,SAACf,GAAD,uBArCTxG,EAqC2BqG,YAAYG,UAA9B,aAAa,EAA2BgB,gBArCjDxH,EAsCZgG,sBAAwB,SAACQ,GAAD,uBAtCZxG,EAsC8BuH,mBAAmBf,UAArC,aAAa,EAAkCtP,KAtC3D8I,EAuCZiG,sBAAwB,SAACO,EAASnS,GAAV,yBAvCZ2L,EAuCwCuH,mBAAmBf,UAA/C,iBAAuB,EAAkC5H,aAAzD,aAAuB,EAvCnCoB,EAuCkFuG,qBAAqBlS,KAvCvG2L,EAyCZoC,SAAW,SAACoE,GAAD,MAAUlS,EAAV,uDAAmB,KAAnB,OAA4B,UAzC3B0L,EAyCgCqG,YAAYG,UAAjB,eAA2BiB,WAAYnT,GAzClE0L,EA0CZ0H,QAAU,SAAClB,GAAD,MAAUlS,EAAV,uDAAmB,KAAnB,OAA4B,UA1C1B0L,EA0C+BqG,YAAYG,UAAjB,eAA2BmB,UAAWrT,GA1ChE0L,EA2CZ4H,aAAe,SAACpB,EAASqB,GAAV,UAAqBvT,EAArB,uDAA8B,KAA9B,OAAuC,UA3C1C0L,EA2C+CqG,YAAYG,UAAjB,mBAA2BsB,cAA3B,mBAAoCD,UAApC,eAAgDhS,MAAOvB,GA3CjG0L,EA4CZ+H,oBAAsB,SAACvB,EAASwB,GAAV,UAAsB1T,EAAtB,uDAA+B,KAA/B,OAAwC,UA5ClD0L,EA4CuDqG,YAAYG,UAAjB,mBAA2BsB,cAA3B,0CAAoDE,EAAa,WAAjE,eAAuEnS,MAAOvB,GA5ChI0L,EA+CZiI,cAAgB,SAACzB,EAASqB,GAAV,UAAqBvT,EAArB,uDAA8B,GAA9B,OAAqC,UA/CzC0L,EA+C8CqG,YAAYG,UAAjB,mBAA2BsB,cAA3B,mBAAoCD,UAApC,eAAgD/S,OAAQR,GA/CjG0L,EAiDZkI,oBAAsB,SAACzH,EAAcoH,EAAWlH,GAA+B,IAAD,EAAfrM,EAAe,uDAAN,EAE7E,GAAkB,UAAduT,GAAuC,UAAdA,EAAuB,OAAOvT,EAE3D,IADA,IAAI6T,GAAU,UApDGnI,EAoDEqG,YAAY5F,UAAjB,eAAgCqH,SAAU,GAC/CM,EAAI,EAAGA,GAAKzH,EAAeyH,IAAK,CAAC,IAAD,EACnCC,GAAc,UAAAF,EAAQ,gBAAD,OAAiBC,WAAxB,eAA8BC,cAAe,GAC3DC,EAAa7R,OAAOE,QAAQ0R,GAAaE,MAAK,mCAAErR,EAAF,iBAAgBA,IAAQ2Q,KAC1E,GAAIS,EAAY,OAAOA,EAAW,GAEpC,OAAOhU,GA1DU0L,EA4DZwI,kBAAoB,SAAClT,EAAWuS,EAAWlH,GAAsC,IAAvB8H,EAAsB,wDACrF,GAAkB,SAAdZ,GAAsC,UAAdA,GAAuC,UAAdA,EAAuB,CAAC,IAAD,EACtEa,GAAwB,OAATpT,QAAS,IAATA,GAAA,UAAAA,EAAWqT,uBAAX,eAA6Bd,KAAc,EAC1De,EA/DW5I,EA+DOkI,oBAAL,OAAyB5S,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAWmL,aAAcoH,EAAWlH,GAE9E,OADA+H,EAAeG,YAAMH,EAAeE,EAAY,EAAG,IAC5CH,EAAY,CAAEC,eAAcE,cAAeF,EAC7C,OAAOD,EAAY,GAAK,MAlEdzI,EAoEZ8I,kBAAoB,SAACtC,EAASqB,GAAV,UAAqBvT,EAArB,uDAA8B,GAA9B,OAAqC,UApE7C0L,EAoEkDqG,YAAYG,UAAjB,mBAA2BsB,cAA3B,mBAAoCD,UAApC,eAAgDkB,WAAYzU,GApEzG0L,EAqEZgJ,gBAAkB,SAACxC,EAASqB,GAAV,UAAqBvT,EAArB,uDAA8B,GAA9B,OAAqC,UArE3C0L,EAqEgDqG,YAAYG,UAAjB,mBAA2BsB,cAA3B,mBAAoCD,UAApC,eAAgDoB,SAAU3U,GArErG0L,EAsEZkJ,eAAiB,SAAC1C,EAASqB,EAAWlH,EAAewI,GAA8B,IAAD,MAAlB7U,EAAkB,uDAAT,KAC1EgC,EAAK,UAvEQ0J,EAuEAqG,YAAYG,UAApB,iBAAG,EAA2BsB,cAA9B,iBAAG,EAAoCD,UAAvC,aAAG,EAAgDvR,MAC5D,MAAqB,oBAAVA,EACFA,EAAMqK,EAAewI,GACvB7S,GAAShC,GA1EC0L,EA4EZoJ,kBAAoB,SAAC5C,EAAS7F,EAAewI,GAAe,IAAD,EAC5DhB,GAAU,UA7EGnI,EA6EEqG,YAAYG,UAAjB,eAA2BsB,SAAU,GAC/CuB,EAAW,GAKf,OAJA5S,OAAOoQ,KAAKsB,GAASjN,SAAQ,SAAA2M,GAC3B,IAAIvR,EAhFW0J,EAgFEkJ,eAAe1C,EAASqB,EAAWlH,EAAewI,GAC/D7S,GAAO+S,EAASC,KAAKhT,MAEpB+S,GAnFUrJ,EAqFZuJ,qBAAuB,SAAC/C,EAASqB,EAAW2B,EAAgBd,EAAc/H,EAAewI,GAA8B,IAAD,EAAlB7U,EAAkB,uDAAT,KAC9GmV,EAtFazJ,EAsFF8I,kBAAkBtC,EAASqB,GACtCrL,EAAO,KAFgH,cAGrGiN,GAHqG,IAG3H,2BAA2B,CAAC,IAAD,EAAhBC,EAAgB,QACrBC,EAAWD,EAAQ/T,YAGvB,GAFwB,oBAAbgU,IACTA,EAAWA,EAASjB,EAAc/H,EAAewI,KACvC,QAAR,EAAAQ,SAAA,eAAUH,kBAAmBA,EAAgB,CAC/ChN,EAAOmN,EACP,QATuH,8BAY3H,OAAOnN,GAAQlI,GAjGE0L,EAmGZ4J,0BAA4B,SAACjU,EAAa2B,GAAmC,IAAnBhD,EAAkB,uDAAT,KACxE,IAAKgD,IAAmB3B,EAAa,OAAOrB,EADqC,MAEtDiD,IAAiBC,mBAAmB7B,EAAa,QAAS2B,GAFJ,0BAE5EhB,OAF4E,MAEpE,GAFoE,EAEhEmB,EAFgE,KAGjF,OAAKA,EACEhB,OAAOC,YAAYD,OAAOE,QAAQL,GAAOoB,KAAI,mCAAER,EAAF,KAAO2S,EAAP,WAAwB,qBAAR3S,EAA6B,CAACA,EAAK2S,GAAO,CAAC3S,EAAK2S,EAAMpS,OADtGnD,GAtGH0L,EAyGZ8J,2BAA6B,SAACnU,EAAa2B,GAAiC,IAAjBhD,EAAgB,uDAAP,GACzE,IAAKgD,IAAmB3B,EAAa,OAAOrB,EAC5C,IAAI2U,EAAS1R,IAAiBC,mBAAmB7B,EAAa,SAAU2B,GAAgB,GACxF,OAAO2R,GAAU3U,GA5GA0L,EA8GZ+J,iBAAmB,SAACC,EAAU1U,GAAkC,IAAD,MAAtB2U,EAAsB,0DACW3U,EAAzEqH,eAD8D,MACpD,GADoD,IACWrH,EAA3D4U,mBADgD,SAC3BzJ,EAAsCnL,EAAtCmL,aAD2B,EACWnL,EAAxB6U,oBADa,MACE,KADF,EAEpE,GAAiB,QAAbH,EAAoB,MAAM,OAAN,OAAcrN,GACtC,IAAIyN,EAjHapK,EAiHKa,gBAAgBJ,GACjCwJ,IAAWA,EAlHCjK,EAkHgBqK,gBAAgB5J,IAAkByJ,KAAgB,UAAAlK,EAAUqG,YAAY5F,UAAtB,mBAAqCqH,cAArC,mBAA6CwC,YAA7C,eAAmDC,aAAa,IACnJ,IAAIC,EAAS,GAIb,OAHiB,QAAbR,GAAmC,UAAbA,GAAqC,UAAbA,GAAwBC,KACxEO,GAAUL,GAA8BC,GAAc,KAElD,GAAN,OAAUI,GAAV,OAAmBR,EAAnB,YAA+BrN,IAvHdqD,EAyHZyK,wBAA0B,SAACT,EAAU1U,GAAkC,IAAD,MAAtB2U,EAAsB,wDAC3E,GAAiB,QAAbD,EAAoB,MAAO,WAD4C,MAEV1U,EAA3D4U,mBAFqE,SAEhDzJ,EAAsCnL,EAAtCmL,aAFgD,EAEVnL,EAAxB6U,oBAFkC,MAEnB,KAFmB,EAGvEC,EA5HapK,EA4HKa,gBAAgBJ,GAElC,CAAC,gBAAiB,kBAAkB0F,SAASgE,GAC/CA,EAAe,WACR,CAAC,YAAa,aAAahE,SAASgE,KAC3CA,EAAe,QACZF,IAAWA,EAlICjK,EAkIgBqK,gBAAgB5J,IAAkByJ,KAAgB,UAAAlK,EAAUqG,YAAY5F,UAAtB,mBAAqCqH,cAArC,mBAA6CwC,YAA7C,eAAmDC,aAAa,IACnJ,IAAIC,EAAS,WAGb,OAFiB,QAAbR,GAAmC,UAAbA,GAAqC,UAAbA,GAAwBC,KACxEO,EAAUL,GAA8BC,GACnCI,GAtIUxK,EAyIZqK,gBAAkB,SAAC7D,GAAD,IAAUlS,EAAV,8DAAgE,aAzItE0L,EAyIwCe,iBAAiByF,IAA2BlS,GAzIpF0L,EA0IZ0K,gBAAkB,SAAClE,GAAD,UAAUlS,EAAV,+DAA6B,UA1InC0L,EA0IwCqG,YAAYG,UAAjB,mBAA2BsB,cAA3B,mBAAmCwC,YAAnC,eAAyCC,YAAajW,GA1IzF0L,EA4IZ2K,mBAAqB,SAAClK,GAA+B,IAAjBnM,EAAgB,uDAAP,GAClD,IAAKmM,EAAc,OAAOnM,EAC1B,IAAIkW,EAASxK,EAAUa,gBAAgBJ,GACvC,IAAK+J,EAAQ,OAAOlW,EACpB,IAAIuS,EAAO,CAAC,WAAY,YAAa,YAAa,UAAW,YAAa,WAAY,YAAa,YAAxF,UAAwG2D,EAAxG,mBAEPH,EAAkBrK,EAAUqK,gBAAgB5J,GAC5CiK,EAAkB1K,EAAU0K,gBAAgBjK,GAC5CmK,EAAU,GACTP,GACHO,EAAQtB,KAAK,iBAEVe,GACHO,EAAQtB,KAAK,mBAAoB,oBAE/Be,GAAmBK,EACrBE,EAAQtB,KAAR,UAAgBkB,EAAhB,+BAA8CA,EAA9C,sBACoD,QAA7CxK,EAAUe,iBAAiBN,IAClCmK,EAAQtB,KAAR,UAAgBkB,EAAhB,sBAGFI,EAAQtB,KAAR,UAAgBkB,EAAhB,4BAA2CA,EAA3C,mBACA3D,EAAKyC,KAAL,MAAAzC,EAAa+D,GACE,SAAXJ,GACF3D,EAAKyC,KAAL,MAAAzC,EAAI,YAAS+D,EAAQhU,QAAO,SAAAM,GAAG,OAAIA,EAAI2T,WAAJ,UAAkBL,EAAlB,SAA8B9S,KAAI,SAAAR,GAAG,OAAIA,EAAIyE,QAAJ,UAAe6O,EAAf,eAA6BA,EAA7B,oBAC5E3D,EAAKyC,KAAL,MAAAzC,EAAI,YAAS+D,EAAQhU,QAAO,SAAAM,GAAG,OAAIA,EAAI2T,WAAJ,UAAkBL,EAAlB,SAA8B9S,KAAI,SAAAR,GAAG,OAAIA,EAAIyE,QAAJ,UAAe6O,EAAf,eAA6BA,EAA7B,iBACxD,SAAXA,EACT3D,EAAKyC,KAAL,MAAAzC,EAAI,YAAS+D,EAAQhU,QAAO,SAAAM,GAAG,OAAIA,EAAI2T,WAAJ,UAAkBL,EAAlB,SAA8B9S,KAAI,SAAAR,GAAG,OAAIA,EAAIyE,QAAJ,UAAe6O,EAAf,eAA6BA,EAA7B,gBAC1D,UAAXA,GACP3D,EAAKyC,KAAL,MAAAzC,EAAI,YAAS+D,EAAQhU,QAAO,SAAAM,GAAG,OAAIA,EAAI2T,WAAJ,UAAkBL,EAAlB,SAA8B9S,KAAI,SAAAR,GAAG,OAAIA,EAAIyE,QAAJ,UAAe6O,EAAf,eAA6BA,EAA7B,oBAG9E3D,EAAKyC,KAAL,MAAAzC,EAAI,YAASiE,IAAsBN,KACnC,IAAI1J,EA7Kad,EA6KQe,iBAAiBN,GAE1C,OADKoG,EAAKV,SAAS,gBAAoC,aAAlBrF,GAA8B+F,EAAKyC,KAAK,eACtEzC,GA/KU7G,EAkLZ+K,YAAc,SAACzV,EAAWkJ,GAC/B,MAAgB,aAAZA,EACKwB,EAAU+K,YAAYzV,EAAW,OAAS0K,EAAU+K,YAAYzV,EAAW,QAAU0K,EAAU+K,YAAYzV,EAAW,aAAc,EACxH,cAAZkJ,EACAwB,EAAU+K,YAAYzV,EAAW,QAAU0K,EAAU+K,YAAYzV,EAAW,SAAW0K,EAAU+K,YAAYzV,EAAW,cAAe,EAC3H,cAAZkJ,EACAwB,EAAU+K,YAAYzV,EAAW,QAAU0K,EAAU+K,YAAYzV,EAAW,SAAW0K,EAAU+K,YAAYzV,EAAW,cAAe,KACzIA,IAAaA,EAAU0V,oBAAqBxM,KAAWlJ,EAAU0V,mBAzLvDhL,EA4LZ0C,yBAA2B,SAACpN,EAAWkJ,GAAyB,IAAD,EAAflK,EAAe,uDAAN,EAC9D,OA7LiB0L,EA6LR+K,YAAYzV,EAAWkJ,GAAU,OAAOlJ,QAAP,IAAOA,GAAP,UAAOA,EAAW0V,yBAAlB,aAAO,EAA+BxM,GA7L/DwB,EA8LA+F,iBAAiBzQ,EAAWkJ,EAASlK,IA9LrC0L,EAkMZiL,eAAiB,SAAC9K,EAAa+K,GACpC,IAAI5V,EAAYsF,IAAkBU,aAAa6E,GAC/C,GAAK7K,EAAL,CACA,IAAI6V,EAAoB7V,EAAU4G,kBAC9BkP,EAAuBF,EAG3BrP,IAASwP,cAAcnQ,SAAQ,SAAAiB,GAC7B,IAAImP,EAAexQ,IAAiBuB,YAAjB,OAA6B+O,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAuBjP,IACvE,GAAImP,EAAajQ,WAAa8E,EAA9B,CACA,IAAIoL,EAAYzQ,IAAiBuB,YAAjB,OAA6B8O,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAoBhP,IAC7DqP,GAA0B,OAAZF,QAAY,IAAZA,OAAA,EAAAA,EAAcjQ,WAAY,GAExCkQ,GAAWzQ,IAAiB+K,kBAAkB0F,EAAUlH,GAAImH,GAE5DA,GAAY5Q,IAAkB6Q,cAAcD,EAAYD,GAExDD,GAAcxQ,IAAiB+K,kBAAkByF,EAAajH,GAAIlE,OAGxE7K,EAAU4G,kBAAoB,GAC9BzF,OAAOE,QAAQuU,GAAahQ,SAAQ,mCAAEhE,EAAF,KAAOkF,EAAP,YAClC9G,EAAU4G,kBAAkBhF,GAAOkF,KACrCxB,IAAkBgC,gBAAgBtH,KAzNjB0K,EAmOZO,eAAiB,SAACjL,GACvB,IAAIoW,EAAYjV,OAAOC,YAAYD,OAAOE,QAAQrB,EAAU4G,mBAAmBxE,KAAI,mCAAER,EAAF,KAAOkF,EAAP,WAAkB,CAAClF,EAAK4D,IAAiBuB,YAAYD,QACpIuP,EAAe3L,EAAU4L,kCAAkCtW,GAC/D,OAtOiB0K,EAsOL6L,uBAAuBvW,EAAUiH,qBAAsBoP,EAAcD,IAtOhE1L,EAyOZ6L,uBAAyB,SAACtP,EAAsBoP,EAAcD,GACnE,IAAIlL,EAAa3E,IAAS2E,WAAWkL,GACjCI,EAA0BjQ,IAASkQ,2BAA2BvL,GAE9DlK,EAAQ0V,YAAUL,GAmBtB,OAjBAlV,OAAOwE,OAAOyQ,GAAWxQ,SAAQ,SAAAC,GAC1BA,IAEL7E,EAAM6E,EAAIM,cAAgBnF,EAAM6E,EAAIM,cAAgB,GAAKI,IAASoQ,iBAAiB9Q,EAAIM,YAAaN,EAAI+Q,SAAU5V,EAAM6V,oBAAqC,EAAfhR,EAAI+Q,SAAe/Q,EAAIiE,OAErKjE,EAAIiR,SAASlR,SAAQ,SAACmR,GAAD,OACnBA,GAAWA,EAAQnV,MAAQZ,EAAM+V,EAAQnV,MAAQZ,EAAM+V,EAAQnV,MAAQ,GAAKmV,EAAQzN,cAGxFkN,EAAwB5Q,SAAQ,SAAAoR,GAAI,OAAIhW,EAAMgW,EAAKpV,MAAQZ,EAAMgW,EAAKpV,MAAQ,GAAKoV,EAAKhJ,WAExF/G,GAAwBA,EAAqBrB,SAAQ,SAAAvF,GAAgB,IACrD6F,EAA+B7F,EAAvC8G,OAAyB8P,EAAc5W,EAAvB+G,QACtBjG,OAAOE,QAAQkF,IAAS2Q,oBAAoBhR,EAAQ+Q,EAAW5W,EAAY2B,iBACxE4D,SAAQ,mCAAEsD,EAAF,KAAWqL,EAAX,YAAoBvT,EAAMkI,IAAYlI,EAAMkI,IAAY,GAAKqL,QAE1E4C,YAAmBnW,GACZ,CACL4U,YAAazU,OAAOC,YAAYD,OAAOE,QAAQ+U,GAAWhU,KAAI,mCAAER,EAAF,KAAO2S,EAAP,WAAgB,CAAC3S,EAAD,OAAM2S,QAAN,IAAMA,OAAN,EAAMA,EAAKxF,QACzF7D,aACA+C,WAAYjN,EACZiG,yBApQeyD,EAuQZ4L,kCAAoC,SAACtW,GAAe,IAAD,YACpDoX,EAAQ,CAAI,UAAW,WAAY,WAAY,aAAc,aAAc,cAAe,gBAAiB,sBAAnG,mBAA4HjW,OAAOoQ,KAAKvH,OAChJqM,EAAelV,OAAOC,YAAYgW,EAAShV,KAAI,SAAAR,GAAG,MAAI,CAACA,EAzQ1C8I,EAyQoD0C,yBAAyBpN,EAAW4B,QAEzGyU,EAAagB,aA3QI3M,EA2QgBa,gBAAgBvL,EAAUmL,cAG3DT,EAAU+G,mBAAmB7L,SAAQ,SAAAsP,GACnC,IAAIhM,EAAO,UAAMgM,EAAN,kBACXmB,EAAanN,GAhREwB,EAgRc0C,yBAAyBpN,EAAWkJ,GACjEA,EAAO,UAAMgM,EAAN,uBACPmB,EAAanN,GAlREwB,EAkRc0C,yBAAyBpN,EAAWkJ,MAInE,IAAIoO,GAAqB,OAATtX,QAAS,IAATA,OAAA,EAAAA,EAAW0V,oBAAqB,GAChDvU,OAAOE,QAAQiW,GAAW1R,SAAQ,mCAAEsD,EAAF,KAAWqL,EAAX,YAAqB8B,EAAakB,eAAerO,KAAamN,EAAanN,GAAWqL,MAGxH,IAAIiD,EAAiB9M,EAAU0C,yBAAyBpN,EAAW,sBACnE,GAAIwX,EAAgB,CAClB,IAAIC,EAAqB/M,EAAU0C,yBAAyBpN,EAAW,sBACvEqW,EAAamB,IAAmBnB,EAAamB,IAAmB,GAAKC,EAGvE,IAAIC,EAAc,SAAA1W,GAAK,OAAIA,GAASG,OAAOE,QAAQL,GAAO4E,SAAQ,YAAiB,IAAD,mBAAdhE,EAAc,KAAT2S,EAAS,KACpE,qBAAR3S,EAIJyU,EAAazU,IAAQyU,EAAazU,IAAQ,GAAK2S,EAH7C8B,EAAasB,iBAAb,sBAAqCtB,EAAasB,kBAAoB,IAAtE,YAA8EpD,QAM5EpJ,EAAmEnL,EAAnEmL,aAAcpM,EAAqDiB,EAArDjB,SAAUsM,EAA2CrL,EAA3CqL,cAjC0B,EAiCiBrL,EAA5B4X,0BAjCW,MAiCU,GAjCV,EAkCpD/D,EAAYnJ,EAAUsH,aAAajT,GAEvC6Y,EAAmBhS,SAAQ,SAAAsB,GAAS,IACpBqL,EAAuDrL,EAA/DC,OAA4B+M,EAAmChN,EAA5CE,QAAyBpF,EAAmBkF,EAAnBlF,eAC9CoR,EAAe1I,EAAUwI,kBAAkBlT,EAAWuS,GACtDlS,EAAcqK,EAAUuJ,qBAAqB9I,EAAcoH,EAAW2B,EAAgBd,EAAc/H,EAAewI,GACvH6D,EAAYhN,EAAU4J,0BAA0BjU,EAAa2B,EAAgB,QAI1D0I,EAAUoJ,kBAAkB3I,EAAcE,EAAewI,GAC/DjO,QAAQ8R,GAGvB,IAAIG,EAAc,CAChBC,OAAQrZ,IAAOoC,oBAAP,OAA2Bb,QAA3B,IAA2BA,GAA3B,UAA2BA,EAAWoL,cAAtC,aAA2B,EAAmBxJ,KACtDmW,OAAQtZ,IAAOoD,gCAAP,OAAuC7B,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAWoL,QAC1D4M,WAAYvZ,IAAOsC,mBAAP,OAA0Bf,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAWoL,cAArC,aAA0B,EAAmBxJ,IAA7C,OAAkD5B,QAAlD,IAAkDA,GAAlD,UAAkDA,EAAWoL,cAA7D,aAAkD,EAAmBtL,aACjFmY,iBAAkBxZ,IAAOsD,yBAAP,OAAgC/B,QAAhC,IAAgCA,GAAhC,UAAgCA,EAAWoL,cAA3C,aAAgC,EAAmBxJ,IAAnD,OAAwD5B,QAAxD,IAAwDA,GAAxD,UAAwDA,EAAWoL,cAAnE,aAAwD,EAAmBtL,YAA3E,OAAwFE,QAAxF,IAAwFA,GAAxF,UAAwFA,EAAWoL,cAAnG,aAAwF,EAAmBpJ,iBAO/H,OALI6V,EAAYC,SACdzB,EAAawB,EAAYC,SAAWzB,EAAawB,EAAYC,SAAW,GAAKD,EAAYE,QACvFF,EAAYG,YAAYN,EAAYG,EAAYG,YAChDH,EAAYI,kBAAkBP,EAAYG,EAAYI,kBAEnD5B,I,uJCzUUhJ,EAEnB,aACE,GADa,oBACT3O,gBAAgB2O,EAClB,MAAM1O,MAAM,2CAJG0O,EAMZC,YAAc,SAAC1L,GAAD,MAAM5C,EAAN,uDAAe,GAAf,OAClBkZ,EAActW,KAAd,UAAsBuW,IAASvW,UAA/B,aAAsB,EAAepC,OAASR,GAP9BqO,EAQZ+K,kBAAoB,SAACxW,GAAD,QAAM5C,EAAN,uDAAe,GAAf,OACxBkZ,EAActW,KAAd,UAAsBuW,IAASvW,UAA/B,aAAsB,EAAeyW,UAArC,UAA+CF,IAASvW,UAAxD,aAA+C,EAAepC,OAASR,GATvDqO,EAUZiL,eAAiB,SAAC1W,GAAD,MAAM5C,EAAN,uDAAe,GAAf,OACtB,UAAAmZ,IAASvW,UAAT,eAAepC,OAAQR,GAXNqO,EAYZkL,uBAAyB,SAAC3W,GAAsB,IAAjB5C,EAAgB,uDAAP,GACzCQ,EAba6N,EAaDC,YAAY1L,EAAK5C,GAGjC,OAFIQ,IAASR,GAAmB,QAAR4C,GAAyB,SAARA,GAA0B,SAARA,IACzDpC,GAAQ,KACHA,GAhBU6N,EAkBZmL,eAAiB,SAAC5W,GAAD,MAAM5C,EAAN,uDAAe,GAAf,OACtB,UAAAmZ,IAASvW,UAAT,eAAeqC,UAAWjF,GAnBTqO,EAoBZE,YAAc,SAAC3L,GAAD,QAAM5C,EAAN,uDAAe,GAAf,MACK,WAAxB,UAAAmZ,IAASvW,UAAT,eAAemM,MAAmB/O,GAAU,UAAAmZ,IAASvW,UAAT,eAAemM,OAAQ/O,GArBlDqO,EAuBZc,UAAY,SAACvM,GAAS,IAAD,EAC1B,MAA4B,WAAxB,UAAAuW,IAASvW,UAAT,eAAemM,MAAyB,EAE5B,MADLV,EAAKE,YAAY3L,GACN,EAAI,GA1BTyL,EA4BZoL,UAAY,SAACvP,EAASlI,GAAV,OACjB0X,EAAE,CAAE1X,QAAO2X,QAAQ,GAASzP,IA7BXmE,EA+BZuL,aAAe,SAAC1P,EAASlI,GAAiD,IAAD,EAAzC2W,EAAyC,uDAAtB,GAAIgB,IAAkB,uEAChDhB,GADgD,IAC9E,kCAAWkB,EAAX,QACE,IAAI,UAAAC,IAAgB,OAACD,QAAD,IAACA,OAAD,EAACA,EAAiBjX,YAAlC,eAAwCA,OAAQsH,EAClD,OAAOmE,EAAK0L,qBAAqB/X,EAAO6X,EAAgBjX,IAAKiX,EAAgBG,SAAS,IAHZ,8BAI9E,OAAkB,OAAXC,QAAW,IAAXA,OAAA,EAAAA,EAAc/P,KAA8C,oBAAlC,OAAO+P,QAAP,IAAOA,OAAP,EAAOA,EAAc/P,KACnD,+BAAO+P,EAAY/P,GAAS,CAAElI,QAAO2X,cApCvBtL,EAuCZ0L,qBAAuB,SAAC/X,EAAOkY,EAAaF,GAArB,IAA8BL,IAA9B,gEACR,OAApBQ,QAAoB,IAApBA,OAAA,EAAAA,EAAuBD,KAA2E,oBAA3D,OAAOC,QAAP,IAAOA,OAAP,EAAOA,EAAuBD,GAAaE,cACjF,+BAAOD,EAAqBD,GAAaE,YAAYJ,EAA9CG,CAAuD,CAAEnY,QAAO2X,cAG5E,IAAMT,EAAgB/W,OAAOC,YAAYD,OAAOE,QAAQ8W,KAAU7W,QAAO,oDAAoB2C,WAAS7B,KAAI,mCAAER,EAAF,KAAOyH,EAAP,WAAgB,CAACzH,EAAM,sBAAMuC,UAAS,eAAUkF,EAAIpF,QAAd,gBAAf,SAAqDoF,EAAI7J,YAE1L,SAASkZ,EAAEM,EAAS9P,GAAU,IAAD,IACrBlI,EAAyBgY,EAAzBhY,MADqB,EACIgY,EAAlBL,OACb,GAAK3X,EAAL,CACA,SAH2B,YAGjB,OAAIiY,QAAJ,IAAIA,OAAJ,EAAIA,EAAc/P,IAC1B,OAAO,sCAAS+P,EAAY/P,GAAS8P,GAA9B,QACT,IAAIK,EAAWhM,EAAK+K,kBAAkBlP,GAClCoQ,EAAWjM,EAAKE,YAAYrE,GAC5BiF,EAAYd,EAAKc,UAAUjF,GAC3BI,GAAa,OAALtI,QAAK,IAALA,GAAA,UAAAA,EAAQkI,UAAR,mBAAkBgF,eAAlB,sBAA4BC,MAA5B,OAA0CnN,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAQkI,IAC9D,OAAO,uBAAM/E,UAAU,cAAhB,UAA8B,4BAAIkV,IAAlC,IAAgD,uBAAMlV,UAAU,YAAhB,UAA6BmF,EAAOgQ,SAG7F,IAAML,EAAc,CAElBvR,SAAU,SAAC6R,GAAD,OAAO,iCAAOb,EAAEa,EAAG,WAAZ,YAAiCb,EAAEa,EAAG,OAAtC,QAAmDb,EAAEa,EAAG,UAEzExR,UAAW,SAACwR,GAAD,OAAO,sCAASb,EAAEa,EAAG,YAAd,MAA8Bb,EAAEa,EAAG,cAAnC,cAA6Db,EAAEa,EAAG,QAAlE,QAAgFb,EAAEa,EAAG,WAEvGnR,UAAW,SAACmR,GAAD,OAAO,iCAAOb,EAAEa,EAAG,YAAZ,YAAkCb,EAAEa,EAAG,QAAvC,QAAqDb,EAAEa,EAAG,WAG5EC,aAAc,SAACD,GAAD,OAAO,iCAAOb,EAAEa,EAAG,aAAZ,MAA6Bb,EAAEa,EAAG,wBAAlC,MAA8Db,EAAEa,EAAG,qBAAnE,MAA4Fb,EAAEa,EAAG,2BACtHE,kBAAmB,SAACF,GAAD,OAAO,iCAAOb,EAAEa,EAAG,gBAAZ,MAAgCb,EAAEa,EAAG,sBAC/DG,iBAAkB,SAACH,GAAD,OAAO,iCAAOb,EAAEa,EAAG,gBAAZ,MAAgCb,EAAEa,EAAG,2BAC9DI,oBAAqB,SAACJ,GAAD,OAAO,gDAAmBb,EAAEa,EAAG,aAAxB,MAAyCb,EAAEa,EAAG,sBAA9C,eAAiFb,EAAEa,EAAG,YAAtF,SAC5BK,qBAAsB,SAACL,GAAD,OAAO,0CAAab,EAAEa,EAAG,iBAAlB,MAAuCb,EAAEa,EAAG,sBAA5C,MAAsEb,EAAEa,EAAG,iBAA3E,SAG7BM,aAAc,SAACN,GAAD,OAAO,iCAAOb,EAAEa,EAAG,aAAZ,MAA6Bb,EAAEa,EAAG,wBAAlC,MAA8Db,EAAEa,EAAG,qBAAnE,MAA4Fb,EAAEa,EAAG,2BACtHO,kBAAmB,SAACP,GAAD,OAAO,iCAAOb,EAAEa,EAAG,gBAAZ,MAAgCb,EAAEa,EAAG,sBAC/DQ,iBAAkB,SAACR,GAAD,OAAO,iCAAOb,EAAEa,EAAG,gBAAZ,MAAgCb,EAAEa,EAAG,2BAC9DS,oBAAqB,SAACT,GAAD,OAAO,gDAAmBb,EAAEa,EAAG,aAAxB,MAAyCb,EAAEa,EAAG,sBAA9C,eAAiFb,EAAEa,EAAG,YAAtF,SAC5BU,qBAAsB,SAACV,GAAD,OAAO,0CAAab,EAAEa,EAAG,iBAAlB,MAAuCb,EAAEa,EAAG,sBAA5C,MAAsEb,EAAEa,EAAG,iBAA3E,SAG7BW,WAAY,SAACX,GAAD,OAAO,+BAAOb,EAAEa,EAAG,cAC/BY,gBAAiB,SAACZ,GAAD,OAAO,+BAAOb,EAAEa,EAAG,mBACpCa,eAAgB,SAACb,GAAD,OAAO,+BAAOb,EAAEa,EAAG,kBACnCc,mBAAoB,SAACd,GAAD,OAAO,+BAAOb,EAAEa,EAAG,sBAEvCe,QAAS,SAACf,GAAD,OAAO,iCAAOb,EAAEa,EAAG,aAAZ,MAA6Bb,EAAEa,EAAG,mBAAlC,MAAyDb,EAAEa,EAAG,qBAA9D,MAAuFb,EAAEa,EAAG,2BAC5GgB,aAAc,SAAChB,GAAD,OAAO,iCAAOb,EAAEa,EAAG,WAAZ,MAA2Bb,EAAEa,EAAG,sBACrDiB,YAAa,SAACjB,GAAD,OAAO,iCAAOb,EAAEa,EAAG,WAAZ,MAA2Bb,EAAEa,EAAG,kBACpDkB,gBAAiB,SAAClB,GAAD,OAAO,0CAAab,EAAEa,EAAG,iBAAlB,MAAuCb,EAAEa,EAAG,iBAA5C,SAExBmB,eAAgB,SAACnB,GAAD,OAAO,0CAAab,EAAEa,EAAG,YAAlB,SACvBoB,WAAY,SAACpB,GAAD,OAAO,+CAAkBb,EAAEa,EAAG,aAAvB,cAAgDb,EAAEa,EAAG,YAArD,SAEnBqB,iBAAkB,SAACrB,GAAD,OAAO,gDAAmBb,EAAEa,EAAG,aAAxB,MAAyCb,EAAEa,EAAG,mBAA9C,eAA8Eb,EAAEa,EAAG,YAAnF,SACzBsB,iBAAkB,SAACtB,GAAD,OAAO,gDAAmBb,EAAEa,EAAG,aAAxB,MAAyCb,EAAEa,EAAG,mBAA9C,eAA8Eb,EAAEa,EAAG,YAAnF,SAEzBuB,kBAAmB,SAACvB,GAAD,OAAO,4CAAeb,EAAEa,EAAG,cAApB,eAA+Cb,EAAEa,EAAG,eAApD,YAA6Eb,EAAEa,EAAG,cAAlF,QAE1BwB,oBAAqB,SAACxB,GAEpB,GADSA,EAAEvY,MAAMga,mBAEf,OAAO,qDACT,IAAIC,GAAO1B,EAAEvY,MAAMka,eAAiB,GAAK,IACzC,OAAID,EAAM,EAAU,yCAAYvC,EAAEa,EAAG,iBAAjB,UACX0B,GAAO,IAAa,2CAAcvC,EAAEa,EAAG,iBAAnB,eACtB,yCAAYb,EAAEa,EAAG,iBAAjB,QAIT4B,eAAgB,SAAC5B,GAAD,OAAO,0CAAab,EAAEa,EAAG,wBAAlB,QAAgDb,EAAEa,EAAG,mBAArD,MAA4Eb,EAAEa,EAAG,oBAAjF,MAAyGb,EAAEa,EAAG,gCACrI6B,iBAAkB,SAAC7B,GAAD,OAAO8B,IAAeC,WAAWlZ,KAAI,SAACmS,EAAKzB,GAAN,OAAYyI,EAA8BhC,EAAGhF,EAAKzB,OACzG0I,mBAAoB,SAACjC,GAAD,OAAO,0CAAab,EAAEa,EAAG,4BAAlB,QAAoDb,EAAEa,EAAG,mBAAzD,MAAgFb,EAAEa,EAAG,wBAArF,MAAiHb,EAAEa,EAAG,mCACjJkC,qBAAsB,SAAClC,GAAD,OAAO8B,IAAeK,eAAetZ,KAAI,SAACmS,EAAKzB,GAAN,OAAYyI,EAA8BhC,EAAGhF,EAAKzB,OACjH6I,iBAAkB,SAACpC,GAAD,OAAO,0CAAab,EAAEa,EAAG,0BAAlB,QAAkDb,EAAEa,EAAG,mBAAvD,MAA8Eb,EAAEa,EAAG,sBAAnF,MAA6Gb,EAAEa,EAAG,gCAC3IqC,mBAAoB,SAACrC,GAAD,OAAO8B,IAAeQ,aAAazZ,KAAI,SAACmS,EAAKzB,GAAN,OAAYyI,EAA8BhC,EAAGhF,EAAKzB,OAE7GgJ,UAAW,SAACvC,GAAD,OAAO,0CAAab,EAAEa,EAAG,mBAAlB,QAA2Cb,EAAEa,EAAG,mBAAhD,MAAuEb,EAAEa,EAAG,eAA5E,MAA+Fb,EAAEa,EAAG,iCACtHwC,YAAa,SAACxC,GAAD,OAAO8B,IAAeW,MAAM5Z,KAAI,SAACmS,EAAKzB,GAAN,OAAYyI,EAA8BhC,EAAGhF,EAAKzB,OAC/FmJ,YAAa,SAAC1C,GAAD,OAAO,0CAAab,EAAEa,EAAG,qBAAlB,QAA6Cb,EAAEa,EAAG,mBAAlD,MAAyEb,EAAEa,EAAG,iBAA9E,MAAmGb,EAAEa,EAAG,2BAC5H2C,cAAe,SAAC3C,GAAD,OAAO8B,IAAec,UAAU/Z,KAAI,SAACmS,EAAKzB,GAAN,OAAYyI,EAA8BhC,EAAGhF,EAAKzB,OACrGsJ,eAAgB,SAAC7C,GAAD,OAAO,0CAAab,EAAEa,EAAG,wBAAlB,QAAgDb,EAAEa,EAAG,mBAArD,MAA4Eb,EAAEa,EAAG,wBACxG8C,iBAAkB,SAAC9C,GAAD,OAAO8B,IAAeiB,WAAWla,KAAI,SAACmS,EAAKzB,GAAN,OAAYyI,EAA8BhC,EAAGhF,EAAKzB,OAEzGyJ,oBAAqB,SAAChD,GAAD,OAAO,0CAAab,EAAEa,EAAG,sBAAlB,QAA8Cb,EAAEa,EAAG,mBAAnD,YAAgFb,EAAEa,EAAG,iCACjHiD,qBAAsB,SAACjD,GAAD,OAAO,0CAAab,EAAEa,EAAG,sBAAlB,QAA8Cb,EAAEa,EAAG,mBAAnD,UAA8Eb,EAAEa,EAAG,iCAEhHkD,gBAAiB,SAAClD,GAAD,OAAO,0CAAab,EAAEa,EAAG,kBAAlB,QAA0Cb,EAAEa,EAAG,mBAA/C,UAA0Eb,EAAEa,EAAG,iCACvGmD,gBAAiB,SAACnD,GAAD,OAAO,0CAAab,EAAEa,EAAG,kBAAlB,QAA0Cb,EAAEa,EAAG,mBAA/C,YAA4Eb,EAAEa,EAAG,iCACzGoD,0BAA2B,SAACpD,GAAD,OAAO,sDAAyBb,EAAE,EAAG,WAA9B,uBAA8DA,EAAE,EAAG,WAAnE,eAElCkE,gBAAiB,SAACrD,GAAD,OAAO,mDAAsBb,EAAEa,EAAG,WAA3B,cAAkDb,EAAEa,EAAG,WAAvD,UACxBsD,gBAAiB,SAACtD,GAAD,OAAO,mDAAsBb,EAAEa,EAAG,WAA3B,cAAkDb,EAAEa,EAAG,WAAvD,UACxBuD,gBAAiB,SAACvD,GAAD,OAAO,mDAAsBb,EAAEa,EAAG,WAA3B,cAAkDb,EAAEa,EAAG,WAAvD,WAE1B,SAASgC,EAA8BhC,EAAGhF,EAAKzB,GAC7C,IAAIiK,EAAOxI,EAAM,EAAI,MAAQ,MACzByI,EAASnP,KAAKoP,IAAI1I,GAClB2I,EAAY,GAGhB,OAFIpK,EAAI,IAAGoK,EAAY,yCAAYxE,EAAEa,EAAG,cAAjB,MAAmCzG,MAChD,IAANA,IAASoK,EAAY,uCAAUxE,EAAEa,EAAG,kBACjC,iCAAewD,EAAMC,EAAQE,IAAlBpK,GAIpB,CAAC,CAAC,gBAAiB,QAAS,CAAC,iBAAkB,SAAU,CAAC,YAAa,QAAS,CAAC,YAAa,SAASlN,SAAQ,YAA6B,IAAD,mBAA1BuX,EAA0B,KAAbC,EAAa,KACzI,CAAC,CAAC,WAAY,gBAAiB,CAAC,WAAY,kBAAmB,CAAC,SAAU,mBAAoB,CAAC,QAAS,cAAe,CAAC,QAAS,cAAe,CAAC,MAAO,cAAcxX,SAAQ,mCAAEyX,EAAF,gBAC5K,CAAC,MAAO,UAAW,YAAYzX,SAAQ,SAAAyB,GACrC,IAAIiW,EAAc,UAAMH,EAAN,YAAqBE,EAArB,YAAgChW,GAC9CkW,EAAO,UAAMH,EAAN,YAAiBC,EAAjB,YAA4BhW,GACvC4R,EAAYqE,GAAkB,SAAC/D,GAAD,OAAO,iCAAOb,EAAEa,EAAD,UAAO4D,EAAP,WAAR,MAAwCzE,EAAEa,EAAGgE,gBAGxF,IAAMC,EAAiB,CACrBhE,aAAc,SAACD,EAAGkE,GAAJ,OAAY,iCAAO/E,EAAEa,EAAD,aAAR,MAA6Bb,EAAEa,EAAD,UAAOkE,EAAP,0BAA9B,MAAqE/E,EAAEa,EAAD,qBAAtE,MAAmGb,EAAEa,EAAD,UAAOkE,EAAP,6BAC9HhE,kBAAmB,SAACF,EAAGkE,GAAJ,OAAY,iCAAO/E,EAAEa,EAAD,UAAOkE,EAAP,kBAAR,MAAuC/E,EAAEa,EAAD,sBACvEG,iBAAkB,SAACH,EAAGkE,GAAJ,OAAY,iCAAO/E,EAAEa,EAAD,UAAOkE,EAAP,kBAAR,MAAuC/E,EAAEa,EAAD,2BACtEK,qBAAsB,SAACL,EAAGkE,GAAJ,OAAY,0CAAa/E,EAAEa,EAAD,UAAOkE,EAAP,mBAAd,MAA8C/E,EAAEa,EAAD,sBAA/C,MAA6Eb,EAAEa,EAAD,iBAA9E,SAElCM,aAAc,SAACN,EAAGkE,GAAJ,OAAY,iCAAO/E,EAAEa,EAAD,aAAR,MAA6Bb,EAAEa,EAAD,UAAOkE,EAAP,0BAA9B,MAAqE/E,EAAEa,EAAD,qBAAtE,MAAmGb,EAAEa,EAAD,UAAOkE,EAAP,6BAC9H3D,kBAAmB,SAACP,EAAGkE,GAAJ,OAAY,iCAAO/E,EAAEa,EAAD,UAAOkE,EAAP,kBAAR,MAAuC/E,EAAEa,EAAD,sBACvEQ,iBAAkB,SAACR,EAAGkE,GAAJ,OAAY,iCAAO/E,EAAEa,EAAD,UAAOkE,EAAP,kBAAR,MAAuC/E,EAAEa,EAAD,2BACtEU,qBAAsB,SAACV,EAAGkE,GAAJ,OAAY,0CAAa/E,EAAEa,EAAD,UAAOkE,EAAP,mBAAd,MAA8C/E,EAAEa,EAAD,sBAA/C,MAA6Eb,EAAEa,EAAD,iBAA9E,SAElCW,WAAY,SAACX,EAAGkE,GAAJ,OAAY,+BAAO/E,EAAEa,EAAD,UAAOkE,EAAP,gBAChCtD,gBAAiB,SAACZ,EAAGkE,GAAJ,OAAY,+BAAO/E,EAAEa,EAAD,UAAOkE,EAAP,qBACrCrD,eAAgB,SAACb,EAAGkE,GAAJ,OAAY,+BAAO/E,EAAEa,EAAD,UAAOkE,EAAP,oBACpCpD,mBAAoB,SAACd,EAAGkE,GAAJ,OAAY,+BAAO/E,EAAEa,EAAD,UAAOkE,EAAP,wBAExCC,QAAS,SAACnE,EAAGkE,GAAJ,OAAY,iCAAO/E,EAAEa,EAAD,aAAR,MAA6Bb,EAAEa,EAAD,UAAOkE,EAAP,qBAA9B,MAAgE/E,EAAEa,EAAD,qBAAjE,MAA8Fb,EAAEa,EAAD,UAAOkE,EAAP,6BACpHE,aAAc,SAACpE,EAAGkE,GAAJ,OAAY,iCAAO/E,EAAEa,EAAD,UAAOkE,EAAP,aAAR,MAAkC/E,EAAEa,EAAD,sBAC7DqE,YAAa,SAACrE,EAAGkE,GAAJ,OAAY,iCAAO/E,EAAEa,EAAD,UAAOkE,EAAP,aAAR,MAAkC/E,EAAEa,EAAD,kBAC5DsE,gBAAiB,SAACtE,EAAGkE,GAAJ,OAAY,0CAAa/E,EAAEa,EAAD,UAAOkE,EAAP,mBAAd,MAA8C/E,EAAEa,EAAD,iBAA/C,SAE7BuE,UAAW,SAACvE,EAAGkE,GAAJ,OAAY,iCAAO/E,EAAEa,EAAD,aAAR,MAA6Bb,EAAEa,EAAD,UAAOkE,EAAP,uBAA9B,MAAkE/E,EAAEa,EAAD,qBAAnE,MAAgGb,EAAEa,EAAD,UAAOkE,EAAP,6BACxHM,eAAgB,SAACxE,EAAGkE,GAAJ,OAAY,iCAAO/E,EAAEa,EAAD,UAAOkE,EAAP,eAAR,MAAoC/E,EAAEa,EAAD,sBACjEyE,cAAe,SAACzE,EAAGkE,GAAJ,OAAY,iCAAO/E,EAAEa,EAAD,UAAOkE,EAAP,eAAR,MAAoC/E,EAAEa,EAAD,wBAChE0E,kBAAmB,SAAC1E,EAAGkE,GAAJ,OAAY,0CAAa/E,EAAEa,EAAD,UAAOkE,EAAP,mBAAd,MAA8C/E,EAAEa,EAAD,mBAA/C,MAA0Eb,EAAEa,EAAD,iBAA3E,SAE/B2E,UAAW,SAAC3E,EAAGkE,GAAJ,OAAY,iCAAO/E,EAAEa,EAAD,aAAR,MAA6Bb,EAAEa,EAAD,UAAOkE,EAAP,uBAA9B,MAAkE/E,EAAEa,EAAD,qBAAnE,MAAgGb,EAAEa,EAAD,UAAOkE,EAAP,6BACxHU,eAAgB,SAAC5E,EAAGkE,GAAJ,OAAY,iCAAO/E,EAAEa,EAAD,UAAOkE,EAAP,eAAR,MAAoC/E,EAAEa,EAAD,sBACjE6E,cAAe,SAAC7E,EAAGkE,GAAJ,OAAY,iCAAO/E,EAAEa,EAAD,UAAOkE,EAAP,eAAR,MAAoC/E,EAAEa,EAAD,wBAChE8E,kBAAmB,SAAC9E,EAAGkE,GAAJ,OAAY,0CAAa/E,EAAEa,EAAD,UAAOkE,EAAP,mBAAd,MAA8C/E,EAAEa,EAAD,mBAA/C,MAA0Eb,EAAEa,EAAD,iBAA3E,SAE/B+E,oBAAqB,SAAC/E,EAAGkE,GAEvB,GADSlE,EAAEvY,MAAF,UAAWyc,EAAX,wBAEP,OAAO,qDACT,IAAIxC,GAAO1B,EAAEvY,MAAF,UAAWyc,EAAX,oBAAmC,GAAK,IACnD,OAAIxC,EAAM,EAAU,yCAAYvC,EAAEa,EAAD,UAAOkE,EAAP,mBAAb,UACXxC,GAAO,IAAa,2CAAcvC,EAAEa,EAAD,UAAOkE,EAAP,mBAAf,eACtB,yCAAY/E,EAAEa,EAAD,UAAOkE,EAAP,mBAAb,SAIXtc,OAAOoQ,KAAKF,KAAezL,SAAQ,SAAAsP,GAAM,OACvC/T,OAAOE,QAAQmc,GAAgB5X,SAAQ,mCAAEhE,EAAF,KAAO2c,EAAP,YACrCpd,OAAOoI,eAAe0P,EAAtB,UAAsC/D,EAAtC,YAAgDtT,GAAO,CACrD6H,cAAc,EACdD,YAAY,EACZE,UAAU,EACVJ,MAAO,SAACD,GAAD,OAAUkV,EAAMlV,EAAK6L,YAGlC,IAAMiE,EAAuB,CAC3BqF,iBAAkB,CAChBpF,YAAa,SAACJ,GAAD,OAAa,SAACO,GAAD,OAAO,sCAASb,EAAEa,EAAG,YAAd,MAA8Bb,EAAEa,EAAG,cAAnC,cAA6Db,EAAEa,EAAG,QAAlE,QAAgFb,EAAEa,EAAG,OAArF,MAAgGb,EAAEa,EAAG,aAArG,MAAsHP,EAAQ1P,MAA9H,Y,gCCjNrC,4ZAAMmV,EAA4B,SAACC,GAAD,OAAWA,EAAM7Q,KAAK8Q,MAAM9Q,KAAK+Q,SAAWF,EAAMG,UAMpF,SAASC,EAAsBC,EAAKjR,GAGlC,OAFAiR,EAAMlR,KAAKmR,KAAKD,GAChBjR,EAAMD,KAAK8Q,MAAM7Q,GACVD,KAAK8Q,MAAM9Q,KAAK+Q,UAAY9Q,EAAMiR,EAAM,GAAKA,GAKtD,IAAME,EAAuB,SAACrd,GAC5B,IAAIsd,EAAO9Z,aAAa+Z,QAAQvd,GAChC,OAAKsd,EACEE,KAAKC,MAAMH,GADA,MAGdI,EAAqB,SAAC1d,EAAKyH,GAAN,OACzBjE,aAAama,QAAQ3d,EAAKwd,KAAKI,UAAUnW,KACrCqN,EAAY,SAACrN,GAAD,OAChB+V,KAAKC,MAAMD,KAAKI,UAAUnW,KAEtBoW,EAAmB,SAACC,EAAGC,GAAJ,OACvB9R,KAAKoP,IAAIyC,EAAIC,IAAM,MAEfC,EAAiB,SAACF,EAAGC,GAAJ,OACrB9R,KAAKoP,IAAIyC,EAAIC,IAAM,GACfpM,EAAQ,SAACgB,EAAKsL,EAAKC,GACvB,OAAIvL,EAAMsL,EAAYA,EAClBtL,EAAMuL,EAAaA,EAChBvL,GAEHwL,EAAoB,SAACtS,GAAD,OACxBA,EAAIoR,OAASpR,EAAIA,EAAIoR,OAAS,GAAK,MAG/BmB,EAAe,SAACzL,GAAD,OAAShB,EAAMgB,EAAK,EAAG,MAG5C,SAAS0L,EAAWC,EAAQC,EAAKtB,GAC/B,OAAQ,IAAIuB,MAAMvB,EAAS,GAAGwB,KAAKF,GAAOD,GAAQI,OAAOzB,GAI3D,SAAS0B,EAAgBC,EAAMC,GAC7B,IAAIC,EAAO,EACXF,EAAOA,EAAKG,cACZF,EAAOA,EAAKE,cACZ,IAAK,IAAI7N,EAAI,EAAG8N,EAAI/S,KAAKC,IAAI0S,EAAK3B,OAAQ4B,EAAK5B,QAAS/L,EAAI8N,EAAG9N,IAAK,CAClE,IAAI+N,GAAQ,EACPL,EAAK1N,IAAO2N,EAAK3N,IAAM0N,EAAK1N,KAAO2N,EAAK3N,KAC3C+N,GAAQ,GACNL,EAAK1N,EAAI,KAAO2N,EAAK3N,IAAM0N,EAAK1N,EAAI,KAAO2N,EAAK3N,KAClD+N,GAAQ,GACLA,GAAOH,IAEd,OAAOA,I,4FCtDM,SAASI,EAAmBrT,GACzC,OCJa,SAA4BA,GACzC,GAAI2S,MAAMW,QAAQtT,GAAM,OAAO,OAAAuT,EAAA,GAAiBvT,GDGzC,CAAkBA,IELZ,SAA0BwT,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYhgB,OAAO8f,GAAO,OAAOb,MAAMgB,KAAKH,GFIvD,CAAgBxT,IAAQ,OAAA4T,EAAA,GAA2B5T,IGLvE,WACb,MAAM,IAAI6T,UAAU,wIHIwE,K,gCIL9F,+CAEA,SAASC,EAAQC,EAAQC,GACvB,IAAIlQ,EAAOpQ,OAAOoQ,KAAKiQ,GAEvB,GAAIrgB,OAAOugB,sBAAuB,CAChC,IAAIC,EAAUxgB,OAAOugB,sBAAsBF,GACvCC,IAAgBE,EAAUA,EAAQrgB,QAAO,SAAUsgB,GACrD,OAAOzgB,OAAO0gB,yBAAyBL,EAAQI,GAAKpY,eAEtD+H,EAAKyC,KAAK8N,MAAMvQ,EAAMoQ,GAGxB,OAAOpQ,EAGM,SAASwQ,EAAeC,GACrC,IAAK,IAAIlP,EAAI,EAAGA,EAAImP,UAAUpD,OAAQ/L,IAAK,CACzC,IAAIoP,EAAyB,MAAhBD,UAAUnP,GAAamP,UAAUnP,GAAK,GAE/CA,EAAI,EACNyO,EAAQpgB,OAAO+gB,IAAS,GAAMtc,SAAQ,SAAUhE,GAC9C,YAAeogB,EAAQpgB,EAAKsgB,EAAOtgB,OAE5BT,OAAOghB,0BAChBhhB,OAAOihB,iBAAiBJ,EAAQ7gB,OAAOghB,0BAA0BD,IAEjEX,EAAQpgB,OAAO+gB,IAAStc,SAAQ,SAAUhE,GACxCT,OAAOoI,eAAeyY,EAAQpgB,EAAKT,OAAO0gB,yBAAyBK,EAAQtgB,OAKjF,OAAOogB,I,gCCjCT,+CACe,SAASK,EAA2B9I,EAAG+I,GACpD,IAAIC,EAEJ,GAAsB,qBAAXrB,QAAgD,MAAtB3H,EAAE2H,OAAOC,UAAmB,CAC/D,GAAIf,MAAMW,QAAQxH,KAAOgJ,EAAK,YAA2BhJ,KAAO+I,GAAkB/I,GAAyB,kBAAbA,EAAEsF,OAAqB,CAC/G0D,IAAIhJ,EAAIgJ,GACZ,IAAIzP,EAAI,EAEJ0P,EAAI,aAER,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAI5P,GAAKyG,EAAEsF,OAAe,CACxB8D,MAAM,GAED,CACLA,MAAM,EACNrZ,MAAOiQ,EAAEzG,OAGb8P,EAAG,SAAWC,GACZ,MAAMA,GAERnK,EAAG8J,GAIP,MAAM,IAAIlB,UAAU,yIAGtB,IAEIwB,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLP,EAAG,WACDF,EAAKhJ,EAAE2H,OAAOC,aAEhBuB,EAAG,WACD,IAAIO,EAAOV,EAAGW,OAEd,OADAH,EAAmBE,EAAKN,KACjBM,GAETL,EAAG,SAAWO,GACZH,GAAS,EACTF,EAAMK,GAERzK,EAAG,WACD,IACOqK,GAAoC,MAAhBR,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIS,EAAQ,MAAMF,O,6IC3CXM,EAPE,CACfC,OAAQC,IACRC,MAAOC,IACPC,MAAOC,IACPC,OAAQC,IACRC,QAASC,K,QCNPC,EAAe,GACfC,EAAqB,qDACzBA,EAAmBhf,MAAK,SAAAC,GACtB8e,EAAe9e,EAAIC,QACnB8e,EAAqB,QAEvB,IAAMC,EAAuB,CAC3B,KAAM,MAAO,MAAO,OAAQ,MAAO,OAAQ,UAAW,YAAa,YAAa,WAAY,YAAa,iBAE3G9iB,OAAOoQ,KAAKF,KAAezL,SAAQ,SAAAhE,GAAG,OAAIqiB,EAAqBjQ,KAArB,UAA6BpS,EAA7B,sBAE1C,IAAMsiB,EAAoB,CAGxBC,EAAG,CAAEC,YAAa,EAAGC,YAAa,EAAGC,qBAAsB,GAC3DC,EAAG,CAAEH,YAAa,EAAGC,YAAa,EAAGC,qBAAsB,GAC3DE,EAAG,CAAEJ,YAAa,EAAGC,YAAa,EAAGC,qBAAsB,IAGvDG,EAAwB,CAC5BC,EAAG,CACD9c,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,KACzBK,IAAK,CAAC,EAAG,GAAI,GAAI,GAAI,IACrBN,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,KAC1BK,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAC3BK,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAC3Bsc,cAAe,CAAC,IAAK,IAAK,IAAK,IAAK,KACpCC,cAAe,CAAC,IAAK,IAAK,IAAK,IAAK,KACpCrc,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,IAC1BM,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,KAChCJ,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,KAChCE,SAAU,CAAC,IAAK,IAAK,IAAK,EAAK,MAC/BI,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,MAElC8b,EAAG,CACDjd,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC7CK,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACtCN,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,EAAG,KAAM,KAAM,KAAM,MAC/CK,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,EAAG,KAAM,KAAM,KAAM,MAChDK,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,MACnDsc,cAAe,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,MAC5DC,cAAe,CAAC,IAAK,IAAK,IAAK,IAAK,EAAG,KAAM,KAAM,KAAM,MACzDrc,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC1CM,UAAW,CAAC,IAAK,EAAG,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,MACrDJ,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,KAClDE,SAAU,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,MACxDI,UAAW,CAAC,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,OAEpDob,EAAG,CACDvc,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACxEK,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,KACxDN,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1EK,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3EK,KAAM,CAAC,IAAK,IAAK,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MAC7Esc,cAAe,CAAC,IAAK,IAAK,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MACtFC,cAAe,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACpFrc,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC1DM,UAAW,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,GAAM,MACjFJ,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,MAC7EE,SAAU,CAAC,EAAK,EAAK,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACjFI,UAAW,CAAC,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,OAEhFwb,EAAG,CACD3c,GAAI,CAAC,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACnGK,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjFN,IAAK,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MACnGK,KAAM,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MACpGK,KAAM,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACtGsc,cAAe,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/GC,cAAe,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MAC7Grc,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/EM,UAAW,CAAC,EAAK,EAAK,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1GJ,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,EAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,MACvGE,SAAU,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1GI,UAAW,CAAC,IAAK,IAAK,IAAK,EAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,OAE1Gyb,EAAG,CACD5c,GAAI,CAAC,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3HK,IAAK,CAAC,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACtGN,IAAK,CAAC,EAAK,EAAK,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5HK,KAAM,CAAC,EAAK,EAAK,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC7HK,KAAM,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1Hsc,cAAe,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAI,KAAM,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACnIC,cAAe,CAAC,EAAK,EAAK,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACtIrc,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACpGM,UAAW,CAAC,IAAK,GAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,MACnIJ,UAAW,CAAC,IAAK,EAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/HE,SAAU,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,MAClII,UAAW,CAAC,IAAK,IAAK,IAAK,GAAM,KAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAI/H+b,EAAuB,CAC3Bld,GAAI,CAAEid,EAAG,CAAC,GAAI,GAAI,IAAKV,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,IAAK,MAC5F7c,IAAK,CAAEkd,EAAG,CAAC,IAAK,EAAG,KAAMV,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,IAAK,MAC9Fvc,IAAK,CAAE4c,EAAG,CAAC,EAAG,EAAG,GAAIV,EAAG,CAAC,EAAG,EAAG,GAAII,EAAG,CAAC,GAAI,GAAI,GAAI,IAAKC,EAAG,CAAC,GAAI,GAAI,GAAI,KACxExc,KAAM,CAAE6c,EAAG,CAAC,IAAK,EAAG,KAAMV,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,IAAK,MAC/Flc,IAAK,CAAEuc,EAAG,CAAC,EAAG,EAAG,GAAIV,EAAG,CAAC,EAAG,EAAG,GAAI,IAAKI,EAAG,CAAC,GAAI,GAAI,GAAI,IAAKC,EAAG,CAAC,GAAI,GAAI,GAAI,KAC7Enc,KAAM,CAAEwc,EAAG,CAAC,EAAG,IAAK,KAAMV,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,IAAK,MAC/Fjc,QAAS,CAAEsc,EAAG,CAAC,EAAG,EAAG,GAAIV,EAAG,CAAC,GAAI,GAAI,GAAI,IAAKI,EAAG,CAAC,GAAI,GAAI,GAAI,IAAKC,EAAG,CAAC,GAAI,GAAI,GAAI,KACnF3b,UAAW,CAAEgc,EAAG,CAAC,IAAK,IAAK,KAAMV,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,IAAK,MACtG/b,UAAW,CAAEoc,EAAG,CAAC,IAAK,IAAK,KAAMV,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,IAAK,MACtG7b,SAAU,CAAEkc,EAAG,CAAC,IAAK,IAAK,KAAMV,EAAG,CAAC,IAAK,IAAK,IAAK,KAAMI,EAAG,CAAC,IAAK,EAAG,IAAK,KAAMC,EAAG,CAAC,IAAK,IAAK,EAAG,OAG7FO,EAAoB,CACxB1B,OAAQ,CAAE7jB,KAAM,iBAAkBwB,MAAO,CAAC,OAC1CuiB,MAAO,CAAE/jB,KAAM,iBAAkBwB,MAAO,CAAC,QACzCyiB,MAAO,CAAEjkB,KAAM,eAAgBwB,MAAO,CAAC,MAAO,OAAQ,OAAQ,UAAW,cACzE2iB,OAAQ,CAAEnkB,KAAM,qBAAsBwB,MAAO,CAAC,MAAO,OAAQ,OAAQ,UAAW,gBAAiB,sBAAuB,oBAAqB,wBAAyB,sBAAuB,qBAAsB,uBACnN6iB,QAAS,CAAErkB,KAAM,mBAAoBwB,MAAO,CAAC,MAAO,OAAQ,OAAQ,UAAW,YAAa,WAAY,e,wBC/GrFgkB,EAEnB,aAAgB,GAAD,oBAAKtmB,gBAAgBsmB,EAAc,MAAMrmB,MAAM,2CAF3CqmB,EAKZ9Z,WAAa,SAACkL,GACnB,IAAIlL,EAAa,GAMjB,OALA/J,OAAOE,QAAQ+U,GAAWxQ,SAAQ,YAAiB,IAAD,mBAAdhE,EAAc,KAATiE,EAAS,KAC3CA,IACDqF,EAAWrF,EAAIK,QAASgF,EAAWrF,EAAIK,QAAQ8N,KAAKpS,GACnDsJ,EAAWrF,EAAIK,QAAU,CAACtE,OAE1BsJ,G,YCFU3E,E,WAEnB,aAAgB,GAAD,oBAAK7H,gBAAgB6H,EAAU,MAAM5H,MAAM,0C,oEAmJhC+Q,GAAQ,IAAD,IACkBA,EAA3CkH,gBADyB,MACd,EADc,IACkBlH,EAA7B5F,aADW,MACH,EADG,IACkB4F,EAAlBoH,gBADA,MACW,GADX,gBAGTA,GAHS,IAG/B,2BAAgC,CAAC,IAAtBC,EAAqB,QACxBnV,EAAemV,EAAfnV,IAAK0H,EAAUyN,EAAVzN,MACP2b,EAAU1e,EAAS2e,gBAAgBtjB,EAAK0H,EAAOsN,IAAa,GAChEG,EAAQoO,MAAQF,EAAQ,IAAM,GAC1BA,EAAQpG,OAAS,IAAG9H,EAAQkO,QAAUA,GAC1ClO,EAAQqO,WAAa7e,EAAS8e,qBAAqBzjB,EAAKgV,EAAUG,EAAQoO,QAR7C,oCAUgB5e,EAAS+e,sBAAsBxO,EAAUF,EAAU9M,GAA5Fyb,EAVyB,EAUzBA,kBAAmBjf,EAVM,EAUNA,kBACzBoJ,EAAM6V,kBAAoBA,EAC1B7V,EAAMpJ,kBAAoBA,EAE1B,IAd+B,EAc3Bkf,EAAU,GAdiB,cAeT1O,GAfS,IAe/B,kCAAWC,EAAX,UACM,UAACA,EAAQoO,aAAT,aAAC,EAAetG,SAAU9H,EAAQnV,KAAOmV,EAAQzN,OACnDkc,EAAQxR,KAAK,mCAjBc,8BAuB/B,IAHKwR,EAAQ3G,QAAU/H,EAAS2O,MAAK,SAAA1O,GAAO,aAAI,UAAAA,EAAQoO,aAAR,eAAetG,QAAS,MAAM/H,EAAS2O,MAAK,SAAC1O,GAAD,cAAa,UAACA,EAAQoO,aAAT,aAAC,EAAetG,YACvH2G,EAAQxR,KAAK,wEAEX4C,EAAU,CACZ,IAAI8O,EAAoB5O,EAAS6O,QAAO,SAACC,EAAKC,GAAN,aAAcD,IAAO,UAAAC,EAAIV,aAAJ,eAAWtG,SAAU,KAAI,GAClFiH,EAAgBvf,EAASwf,qBAAqBnP,GAAY/I,KAAK8Q,MAAM7U,EAAQ,GACjF,GAAI4b,EAAoBI,EAAe,qBACfhP,GADe,2BAC1BC,EAD0B,QAE/BiP,EAAQ,UAAGjP,EAAQoO,aAAX,aAAG,EAAetG,OAC9B,IAAKmH,IAAajP,EAAQkO,QAAS,iBACnC,IAAIgB,EAAYlP,EAAQkO,QAAQ3jB,QAAO,SAAA6jB,GAAK,OAAIA,EAAMtG,OAASmH,KAC/D,GAAIC,EAAUpH,OAAQ,CACpB9H,EAAQoO,MAAQc,EAAU,GAC1BA,EAAUpH,OAAS,EAAK9H,EAAQkO,QAAUgB,SAAqBlP,EAAQkO,QACvElO,EAAQqO,WAAa7e,EAAS8e,qBAAqBtO,EAAQnV,IAAKgV,EAAUG,EAAQoO,OAH9D,MAI2B5e,EAAS+e,sBAAsBxO,EAAUF,EAAU9M,GAA5Fyb,EAJc,EAIdA,kBAAmBjf,EAJL,EAIKA,kBACzBoJ,EAAM6V,kBAAoBA,EAC1B7V,EAAMpJ,kBAAoBA,EAG5B,OADAof,EAAoB5O,EAAS6O,QAAO,SAACC,EAAKC,GAAN,aAAcD,IAAO,UAAAC,EAAIV,aAAJ,eAAWtG,SAAU,KAAI,KACzDiH,EAAe,aAAxC,GAbF,2BAAgC,CAAC,IAAD,qCAaU,OAdL,+BAiBvC,GAAIJ,EAAoBI,EACtBN,EAAQxR,KAAR,wCAA8C8R,EAA9C,0CAA6FJ,EAA7F,gBACG,CACH,IAAIQ,EAAiB3f,EAAS2f,eAAepc,EAAO8M,GAChDuP,EAAoB5f,EAAS6f,mBAAmBxP,GAC/C8O,EAAoBQ,EAAkBC,GACzCX,EAAQxR,KAAR,2CAAiD0R,EAAjD,8CAAwGQ,EAAxG,uEAAqLC,EAArL,QAGN,OAAOX,I,4CAEoB1O,EAAUF,EAAU9M,GAC/C,IAAK8M,EAAU,MAAO,CAAE2O,kBAAmB,EAAGjf,kBAAmB,GACjE,IAAI6f,EAAoB5f,EAAS6f,mBAAmBxP,GAChDsP,EAAiB3f,EAAS2f,eAAepc,EAAO8M,GAChDyP,EAAyBvP,EAAS6O,QAAO,SAACC,EAAKC,GAAN,aAAcD,IAAU,OAAHC,QAAG,IAAHA,OAAA,EAAAA,EAAKT,aAAL,OAAkBS,QAAlB,IAAkBA,GAAlB,UAAkBA,EAAKV,aAAvB,aAAkB,EAAYtG,SAAU,KAAI,GAG9G,MAAO,CAAE0G,kBAFevF,YAAaqG,EAAyBF,GAElC7f,kBADJ0Z,aAAcqG,EAA0C,IAAjBH,GAAwBC,M,0CA4C9DG,EAAYzb,GACrC,IAAIhF,EAAML,IAAiBuB,YAAYuf,GACvC,GAAKzgB,EAAL,CACA,IAAI0gB,EAAkB1gB,EAAIE,SACtBygB,EAAoB3b,GAAe,GACvC,GAAI0b,IAAoBC,EAAxB,CACA,IAAI3f,EAAUhB,EAAIgB,QACd4f,EAAuBnhB,IAAkBohB,sBAAsBF,EAAkB3f,GACjF8f,EAAqBnhB,IAAiBuB,YAAY0f,GAGlDE,EAAoBnhB,IAAiBohB,cAAc/gB,EAAK8gB,GACvDnhB,IAAiB+K,kBAAkB1K,EAAIkJ,GAAIyX,GAG5CA,GACFlhB,IAAkB6Q,cAAcqQ,EAAkB3gB,GAEhD0gB,IACEI,EACFrhB,IAAkB6Q,cAAcoQ,EAAiBI,GAEjDrhB,IAAkBuhB,sBAAsBN,EAAiB1f,U,KAnR5CN,EAKZqE,cAAgB,kBAAMoZ,GALVzd,EAMZugB,WAAa,kBAAM3lB,OAAOoQ,KAAKwS,GAAgB,KANnCxd,EAOZoH,WAAa,SAAC/L,GAAD,MAAM5C,EAAN,uDAAe,GAAf,OAAkC,OAAZ+kB,QAAY,IAAZA,GAAA,UAAAA,EAAeniB,UAAf,eAAqBpC,OAAQR,GAPpDuH,EAQZwgB,wBAA0B,SAACvV,GAAD,OAC/BrQ,OAAOE,QAAQ0iB,GAAgB,IAAIziB,QAAO,gBAAI0lB,EAAJ,2BAAgBA,EAAOtnB,OAAQsnB,EAAOtnB,OAAOmf,OAAU,KAAOrN,MATvFjL,EAUZ0gB,UAAY,SAAC/gB,GAAD,MAASlH,EAAT,uDAAkB,GAAlB,OAAqC,OAAZ+kB,QAAY,IAAZA,GAAA,UAAAA,EAAe7d,UAAf,eAAwBghB,SAAUloB,GAV3DuH,EAWZ4gB,aAAe,SAACjhB,EAAQW,GAAT,IAAkB7H,EAAlB,uDAA2B,GAA3B,OAXHuH,EAW0C0gB,UAAU/gB,GAAQW,IAAY7H,GAXxEuH,EAYZ6gB,aAAe,SAAClhB,EAAQW,GAAT,QAAkB7H,EAAlB,uDAA2B,KAA3B,OAAgD,OAAZ+kB,QAAY,IAAZA,GAAA,UAAAA,EAAe7d,UAAf,mBAAwBmhB,aAAxB,eAAgCxgB,KAAY7H,GAZnFuH,EAeZ+gB,iBAAmB,SAACphB,GAAD,MAASlH,EAAT,uDAAkB,GAAlB,OAAqC,OAAZ+kB,QAAY,IAAZA,GAAA,UAAAA,EAAe7d,UAAf,eAAwBqhB,aAAcvoB,GAftEuH,EAgBZihB,uBAAyB,SAACthB,EAAQ+Q,GAAT,QAAoBjY,EAApB,uDAA6B,GAA7B,OAC9B0X,aAAU,UAjBOnQ,EAiBF+gB,iBAAiBphB,UAAtB,mBAAgC+Q,UAAhC,eAA4CjW,QAAShC,IAjB9CuH,EAkBZkQ,2BAA6B,SAACvL,GACnC,IAAIuc,EAAoB,GAMxB,OALAtmB,OAAOE,QAAQ6J,GAAYtF,SAAQ,mCAAEM,EAAF,KAAUwhB,EAAV,YACjCvmB,OAAOE,QAAQkF,EAAS+gB,iBAAiBphB,IAASN,SAAQ,mCAAEqR,EAAF,KAAa3N,EAAb,YACxDqe,SAAS1Q,IAAcyQ,EAAO7I,QAAUvV,EAAMtI,OAASG,OAAOoQ,KAAKjI,EAAMtI,OAAO6d,QAChF1d,OAAOE,QAAQiI,EAAMtI,OAAO4E,SAAQ,mCAAEhE,EAAF,KAAOoM,EAAP,YAClCyZ,EAAkBzT,KAAK,CAAEpS,MAAKoM,qBAC7ByZ,GAzBUlhB,EA2BZiH,cAAgB,SAACtC,GACtB,IAAIuc,EAAoB,GAMxB,OALAtmB,OAAOE,QAAQ6J,GAAYtF,SAAQ,YAAuB,IAAD,mBAApBM,EAAoB,KAAZwhB,EAAY,KACnDE,EAAazmB,OAAOoQ,KA9BThL,EA8BmB+gB,iBAAiBphB,IAAS5E,QAAO,SAAA2V,GAAS,OAAI0Q,SAAS1Q,IAAcyQ,EAAO7I,UAC1G+I,EAAW/I,SACb4I,EAAkBvhB,GAAU0hB,MAEzBH,GAlCUlhB,EAqCZshB,iBAAmB,SAAC3hB,EAAQ+Q,EAAWlX,GAAiC,IAAD,IAAhBf,EAAgB,uDAAP,GACjE8oB,EAAa,UAtCAvhB,EAsCQ+gB,iBAAiBphB,UAAzB,iBAAG,EAAgC+Q,UAAnC,aAAG,EAA4C/K,KAChE,OAAK4b,EACwB,oBAAlBA,EACFA,EAAc/nB,GACd+nB,GAEF9oB,EALoBA,GAvCVuH,EA8CZwhB,wBAA0B,SAAC7hB,EAAQ+Q,GAAT,QAAoBjY,EAApB,uDAA6B,KAA7B,OAC/B,UA/CiBuH,EA+CZ+gB,iBAAiBphB,UAAtB,mBAAgC+Q,UAAhC,eAA4C5W,cAAerB,GA/C1CuH,EAkDZwP,YAAc,kBAAM5U,OAAOoQ,KAAKwT,GAAqB,KAlDzCxe,EAmDZyhB,YAAc,SAACnhB,GAAD,MAAU7H,EAAV,uDAAmB,GAAnB,OAA2C,OAAjB+lB,QAAiB,IAAjBA,GAAA,UAAAA,EAAoBle,UAApB,eAA8BrH,OAAQR,GAnDlEuH,EAoDZ0hB,YAAc,SAACphB,GAAD,IAAU7H,EAAV,uDAAmB,GAAnB,OAClB6H,GAAWuc,EAASvc,GAAY,cAAC,IAAD,CAAiBsC,KAAMia,EAASvc,GAAwB1C,UAAU,SAAnB0C,GAAgC7H,GArD/FuH,EAsDZ2hB,oBAAsB,SAACrhB,GAAD,MAAU7H,EAAV,uDAAmB,GAAnB,OAA2C,OAAjB+lB,QAAiB,IAAjBA,GAAA,UAAAA,EAAoBle,UAApB,eAA8B7F,QAAShC,GAtD3EuH,EAwDZ4hB,oBAAsB,SAACthB,GAA0B,IAAjB7H,EAAgB,uDAAP,GAC9C,IAAK6H,EAAS,OAAO7H,EACrB,IAAIQ,EA1Da+G,EA0DDyhB,YAAYnhB,GAC5B,IAAKrH,EAAM,OAAOR,EAClB,IAAIopB,EA5Da7hB,EA4DG0hB,YAAYphB,GAChC,OAAKuhB,EACG,iCAAOA,EAAP,IAAkB5oB,KADJR,GA7DLuH,EAgEZ8hB,qBAAuB,SAACC,GAAD,OAC5BnnB,OAAOC,YAjEUmF,EAiEOwP,cAAc3T,KAAI,SAAAyE,GAAO,MAC/C,CAACA,EAAS1F,OAAOwE,OAAO2iB,GAAahnB,QAAO,SAAAuE,GAAG,OAAIA,EAAIgB,UAAYA,WAlEpDN,EAqEZgiB,SAAW,kBAAMpnB,OAAOoQ,KAAK2S,GAAqB,KArEtC3d,EAsEZiiB,aAAe,SAACtiB,GAAD,MAASlH,EAAT,uDAAkB,GAAlB,OAAqC,OAAZ+kB,QAAY,IAAZA,GAAA,UAAAA,EAAe7d,UAAf,eAAwBxG,SAAUV,GAtE9DuH,EAyEZkiB,gBAAkB,kBAAM/R,YAAUuN,IAzEtB1d,EA0EZmiB,kBAAoB,SAACC,EAASzf,GAAV,MAAmBlK,EAAnB,uDAA4B,GAA5B,OACJ,OAArBylB,QAAqB,IAArBA,GAAA,UAAAA,EAAwBkE,UAAxB,eAAmCzf,KAAYlK,GA3E9BuH,EA6EZoQ,iBAAmB,SAAC/U,EAAKgV,EAAU9M,GAAuB,IAAhB9K,EAAe,uDAAN,EACpD0B,EA9Ea6F,EA8EDmiB,kBAAkB9R,EAAUhV,GAAKkI,GACjD,OAAIpJ,KACC,OAAIkB,QAAJ,IAAIA,OAAJ,EAAIA,EAAKiP,SAAS,mBAhFNtK,EAiFHoQ,iBAAiB,gBAAiBC,EAAU9M,EAAO9K,GAC1DA,IAlFUuH,EAsFZwf,qBAAuB,SAACnP,GAAD,MAAW5X,EAAX,uDAAoB,EAApB,OAA2C,OAAjBklB,QAAiB,IAAjBA,GAAA,UAAAA,EAAoBtN,UAApB,eAA+BwN,cAAeplB,GAtFnFuH,EAuFZqiB,sBAAwB,SAAChS,GAAD,MAAW5X,EAAX,uDAAoB,EAApB,OAA2C,OAAjBklB,QAAiB,IAAjBA,GAAA,UAAAA,EAAoBtN,UAApB,eAA+ByN,cAAerlB,GAvFpFuH,EAwFZsiB,wBAA0B,SAACjS,GAAD,MAAW5X,EAAX,uDAAoB,EAApB,OAA2C,OAAjBklB,QAAiB,IAAjBA,GAAA,UAAAA,EAAoBtN,UAApB,eAA+B0N,uBAAwBtlB,GAxF/FuH,EAyFZuiB,eAAiB,kBAAM3nB,OAAOoQ,KAAKuT,GAAwB,KAzF/Cve,EA0FZwiB,mBAAqB,SAACnnB,EAAKonB,EAAQC,GACxC,MAA8B,MAA1B5b,IAAKE,YAAY3L,GACZ6d,YAAiBuJ,EAAQC,GAEzBrJ,YAAeoJ,EAAQC,IA9Ff1iB,EAgGZ6f,mBAAqB,SAACxP,GAAD,OAAcsN,EAAkBtN,GACzDsN,EAAkBtN,GAAUyN,YAAcH,EAAkBtN,GAAU0N,qBAAwB,GAjG9E/d,EAkGZ2f,eAAiB,SAACpc,EAAO8M,GAAR,OACtB/I,KAAKmR,MAAiB,EAAXpI,EAAe9M,GAAS,IAnGlBvD,EAoGZ2iB,wBAA0B,SAACxZ,GAAD,OAC/BA,EAAMoH,SAAS6O,QAAO,SAACC,EAAKC,GAAN,OACpBD,GAAOC,GAAOA,EAAIvc,MAAQ,EAAI,KAAI,IAtGnB/C,EAuGZ4iB,mBAAqB,SAACroB,EAAY8V,GAAb,OAA2B9V,GAAc8V,EACnEkO,EAAqBhkB,GAAY8V,GAAY,IAxG5BrQ,EAyGZ2e,gBAAkB,SAACpkB,EAAYsoB,EAAcxS,GAA2B,IAAjB5X,EAAgB,uDAAP,GACrE,IAAK4X,IAAa9V,GAAsC,kBAAjBsoB,IAA8BA,EAAc,OAAOpqB,EAC1F,IAAIqqB,EA3Ga9iB,EA2GG4iB,mBAAmBroB,EAAY8V,GACnD,IAAKyS,EAASxK,OAAQ,OAAO7f,EAC7B,GAAIqqB,EAASxY,SAASuY,GAAe,MAAO,CAAC,CAACA,IAC9C,GAAIA,EAAgBC,EAASA,EAASxK,OAAS,IA9G9BtY,EA8GyCsiB,wBAAwBjS,GAAY,GAC5F,OAAO5X,EACT,IAAIsqB,EAA2C,MAAjCjc,IAAKE,YAAYzM,GAE3BqkB,EAAQ,GACRoE,EAAa1b,KAAK2b,MAAMJ,EAAeC,EAAS,IACpD,IAAKE,EAAY,OAAOvqB,EACxB,IAAMyqB,EAAa,SAAbA,EAAclV,EAAK9G,GACvB,GAAIA,EAAIoR,OAAQ,CACd,GAAIpR,EAAIoR,OAAS0K,EAAY,OAC7B,IAAI3D,EAAMnY,EAAIkY,QAAO,SAAC+D,EAAMC,GAAP,OAAaD,EAAOC,IAAG,GAC5C,GAAIL,EAAS,CACX,GAAI1D,EAAMrR,GAAO,KAAO,OACxB,GAAIkL,YAAiBmG,EAAKrR,GACxB,OAAO4Q,EAAMnR,KAAKvG,OACf,CACL,GAAImY,EAAMrR,EAAM,EAAG,OACnB,GAAIqL,YAAegG,EAAKrR,GACtB,OAAO4Q,EAAMnR,KAAKvG,IAGxB4b,EAAS/I,QAAQsJ,UAAUhkB,SAAQ,SAAAikB,KAC5Bpc,EAAIoR,QAAUpR,EAAIA,EAAIoR,OAAS,IAAMgL,IACxCJ,EAAWL,EAAD,sBAAmB3b,GAAnB,CAAwBoc,SAIxC,OADAJ,EAAWL,EAAc,IAClBjE,GAzIU5e,EA2IZ8e,qBAAuB,SAACvkB,EAAY8V,EAAUuO,GACnD,IAAIkE,EA5Ia9iB,EA4IG4iB,mBAAmBroB,EAAY8V,GAC/CkT,EAAM3E,EAAMtG,OACZ+G,EAAMT,EAAMQ,QAAO,SAACjG,EAAGqK,GAAJ,OAAUrK,EAAIqK,IAAG,GACpChL,EAAMsK,EAAS,GAAKS,EACpBhc,EAAMub,EAASA,EAASxK,OAAS,GAAKiL,EAC1C,OAAO9J,aAAe4F,EAAM7G,IAAQjR,EAAMiR,GAAQ,MAjJjCxY,EAqNZ2E,WAAa8Z,EAAa9Z,WArNd3E,EAuNZ2Q,oBAAsB,SAAChR,EAAQ+Q,EAAWjV,GAAiC,IAAjBhD,EAAgB,uDAAP,GACxE,IAAKgD,EAAgB,OAAOhD,EAC5B,IAAIqB,EAzNakG,EAyNMwhB,wBAAwB7hB,EAAQ+Q,GACvD,IAAK5W,EAAa,OAAOrB,EAHsD,MAIzDiD,IAAiBC,mBAAmB7B,EAAa,QAAS2B,GAJD,mBAI1EhB,EAJ0E,KAInEmB,EAJmE,KAK/E,OAAKA,EACEhB,OAAOC,YAAYD,OAAOE,QAAQL,GAAOoB,KAAI,yCAAgB,CAAhB,UAA4BD,OAD5DnD,GA5NHuH,EAgOZyjB,4BAA8B,SAAC/iB,GACpC,IAAIgjB,EAAwB,GAwB5B,OAvBA9oB,OAAOE,QAAQ0iB,GAAcne,SAAQ,YAAuB,IAAD,mBAApBM,EAAoB,KAAZgkB,EAAY,KACrDC,EAAY,GACZC,GAAe,EACfF,EAAO3C,YACTpmB,OAAOE,QAAQ6oB,EAAO3C,YAAY3hB,SAAQ,YAAgC,IAAD,mBAA7BqR,EAA6B,KAAlBoT,EAAkB,KAKvE,GAJIA,EAAarpB,OAASG,OAAOoQ,KAAK8Y,EAAarpB,OAAO6d,OAAS,IACjEsL,EAAUlT,GAAaP,YAAU2T,EAAarpB,OAC9CopB,GAAe,GAEbC,EAAahqB,YAAa,CAC5B,IAAI2B,EAAiBC,IAAiBqoB,kBAAkBrjB,EAAsB,CAAEE,OAAQjB,EAAQkB,QAAS6P,IACzG,GAAIjV,EAAgB,CAClB,IAAIuoB,EA9OGhkB,EA8Oc2Q,oBAAoBhR,EAAQ+Q,EAAWjV,GACxDb,OAAOoQ,KAAKgZ,GAAa,IAC3BJ,EAAUlT,GAAaP,YAAU6T,GACjCH,GAAe,QAKrBA,IACFH,EAAsB/jB,GAAUikB,MAE7BF,I,8FClQPO,GAAY,EACZC,EAAoB,GACpBC,EAAc,EAEGplB,EAEnB,aACE,GADa,oBACT5G,gBAAgB4G,EAClB,MAAM3G,MAAM,2CAJG2G,EAOZqlB,UAAY,SAACC,GAAD,OAAWA,IAASA,EAAKprB,OAASorB,EAAKzf,eAAiByf,EAAK7rB,UAP7DuG,EAQZqB,qBAAuB,kBAAM+P,YAAU+T,IAR3BnlB,EASZyK,mBAAqB,kBAAM5O,OAAOoQ,KAAKkZ,IAT3BnlB,EAUZC,iCAAmC,WACxC,IAAIilB,EAiBJ,OAhBArpB,OAAOoQ,KAAKnM,cAAc9D,QAAO,SAAAM,GAAG,OAAIA,EAAIiP,SAAS,iBAAejL,SAAQ,SAAAmJ,GAC1E,IAAK0b,EAAkB1b,GAAK,CAC1B,IAAI/O,EAAYif,YAAqBlQ,GACrC,IAAK/O,EAAW,OAChB,GAhBasF,EAgBJqlB,UAAU3qB,GAEjB,YAlBWsF,EAiBNkL,oBAAoBzB,GAGtB/O,EAAU4G,oBACb5G,EAAU4G,kBAAoB,GAC9B0Y,YAAmBvQ,EAAI/O,IAEzByqB,EAAkB1b,GAAM/O,MAG5BwqB,GAAY,GACL,GA5BUllB,EA8BZulB,aAAe,SAACD,GACrB,IA/BiBtlB,EA+BRqlB,UAAUC,GAAnB,CAGA,IADA,IAAI7b,EAAE,oBAAgB2b,KACc,OAA7BtlB,aAAa+Z,QAAQpQ,IAC1BA,EAAE,oBAAgB2b,KACpB,IAAII,EAAQpU,YAAUkU,GAItB,OAHAE,EAAM/b,GAAKA,EACXuQ,YAAmBvQ,EAAI+b,GACvBL,EAAkB1b,GAAM+b,EACjB/b,IAxCUzJ,EA0CZgC,gBAAkB,SAACsjB,GACxB,IA3CiBtlB,EA2CRqlB,UAAUC,GAAnB,CACA,IAAI7b,EAAK6b,EAAK7b,GACV+b,EAAQpU,YAAUkU,GACtBtL,YAAmBvQ,EAAI+b,GACvBL,EAAkB1b,GAAM+b,IA/CPxlB,EAiDZU,aAAe,SAAC+I,GAAD,OAAQA,EAAK0b,EAAkB1b,GAAM,MAjDxCzJ,EAmDZkL,oBAAsB,SAACzB,UACrB0b,EAAkB1b,GACzB3J,aAAaC,WAAW0J,IArDPzJ,EAuDZohB,sBAAwB,SAACqE,EAAQlkB,GACtC,IAAKkkB,IAAWlkB,EAAS,OAAO,KAChC,IAAI+jB,EAzDatlB,EAyDDU,aAAa+kB,GAC7B,OAAIH,EAAKhkB,kBACAgkB,EAAKhkB,kBAAkBC,QADhC,GA1DiBvB,EA6DZ6Q,cAAgB,SAAC4U,EAAQllB,GAC9B,IAAI+kB,EA9DatlB,EA8DDU,aAAa+kB,GACxBH,GAAS/kB,GAAQA,EAAIgB,UACrB+jB,EAAKhkB,oBACRgkB,EAAKhkB,kBAAoB,IAC3BgkB,EAAKhkB,kBAAkBf,EAAIgB,SAAWhB,EAAIkJ,GAlEzBzJ,EAmEZgC,gBAAgBsjB,KAnEJtlB,EAqEZuhB,sBAAwB,SAACkE,EAAQlkB,GACtC,IAAI+jB,EAtEatlB,EAsEDU,aAAa+kB,GACxBH,GAAS/jB,GACT+jB,EAAKhkB,mBAAsBgkB,EAAKhkB,kBAAkBC,KACvD+jB,EAAKhkB,kBAAkBC,GAAW,GAzEjBvB,EA0EZgC,gBAAgBsjB,KA1EJtlB,EA4EZ0lB,mBAAqB,SAACngB,EAAa+K,GACxC,IAAI5V,EA7EasF,EA6EIU,aAAa6E,GAC7B7K,IACLA,EAAU4G,kBAAoB,GAC9BzF,OAAOE,QAAQuU,GAAahQ,SAAQ,mCAAEhE,EAAF,KAAOkF,EAAP,YAClC9G,EAAU4G,kBAAkBhF,GAAOkF,KACrCxB,EAAkBgC,gBAAgBtH,M,sGCrFjBiC,E,WACnB,aAAgB,GAAD,oBAAKvD,gBAAgBuD,EAAkB,MAAMtD,MAAM,0C,mEACzCssB,EAAcC,GAAY,IAAD,EAC1C/jB,EAAoB+jB,EAApB/jB,OAAQC,EAAY8jB,EAAZ9jB,QACd,GAAI6jB,EACF,OAAO,UAAAA,EAAahY,MAAK,SAAA/L,GAAI,OAAIA,EAAKC,SAAWA,KAAYC,GAAYA,GAAWF,EAAKE,UAAYA,aAA9F,eAA0GpF,iBAAkB,I,qCAEjHipB,EAAcC,EAAWlpB,GAAiB,IACxDmF,EAAoB+jB,EAApB/jB,OAAQC,EAAY8jB,EAAZ9jB,QACT6jB,IAAcA,EAAe,IAClC,IAAIE,EAAQF,EAAaG,WAAU,SAAAlkB,GAAI,OAAIA,EAAKC,SAAWA,KAAYC,GAAYA,GAAWF,EAAKE,UAAYA,MAC/G,IAAKpF,GAAkBmpB,GAAS,EAE9BF,EAAaI,OAAOF,EAAO,OACtB,CACL,IAAIG,EAAU,CAAEnkB,SAAQnF,kBACpBoF,IAASkkB,EAAQlkB,QAAUA,GAC3B+jB,GAAS,EACXF,EAAaE,GAASG,EAEtBL,EAAajX,KAAKsX,GAEtB,OAAOL,I,yCAEiB5qB,EAAakrB,EAAWvpB,GAAmC,IAAnBhD,EAAkB,uDAAT,CAAC,GAAI,GAC9E,GAAIohB,MAAMW,QAAQ1gB,GAAc,CAE9B,IAF8B,EAE1BmrB,EAAyBxpB,EACzBypB,EAAsB,KAHI,cAIDprB,GAJC,IAI9B,2BAA0C,CAAC,IAAhCqrB,EAA+B,QACxC,KAAIF,EAAyBE,EAAeC,UACvC,CACHF,EAAsBC,EACtB,MAHoDF,GAA0BE,EAAeC,UALnE,8BAW9B,IAAKF,EAAqB,OAAOzsB,EACjC,IAAImD,EAASoR,YAAMiY,EAAwB,EAAGC,EAAoBE,UAClE,MAAO,CAACF,EAAoBF,GAAYppB,GAGxC,IAAIA,EAASoR,YAAMvR,EAAgB,EAAG3B,EAAYsrB,UAClD,MAAO,CAACtrB,EAAYkrB,GAAYppB,O,4FC3ClCqoB,GAAY,EACZoB,EAAmB,GACnBC,EAAa,EACIrmB,EAEnB,aACE,GADa,oBACT9G,gBAAgB8G,EAClB,MAAM7G,MAAM,2CAJG6G,EAOZmlB,UAAY,SAAC9kB,GAAD,OAChBA,IAAQA,EAAIK,SAAWL,EAAI+Q,WAAa/Q,EAAIgB,UAAYhB,EAAIM,aAR5CX,EASZE,oBAAsB,kBAAMgR,YAAUkV,IAT1BpmB,EAUZsmB,kBAAoB,kBAAM3qB,OAAOoQ,KAAKqa,IAV1BpmB,EAWZD,iCAAmC,WACxC,IAAIilB,EAaJ,OAZArpB,OAAOoQ,KAAKnM,cAAc9D,QAAO,SAAAM,GAAG,OAAIA,EAAIiP,SAAS,gBAAcjL,SAAQ,SAAAmJ,GACzE,IAAK6c,EAAiB7c,GAAK,CACzB,IAAIlJ,EAAMoZ,YAAqBlQ,GAC/B,IAAKlJ,EAAK,OACV,GAjBaL,EAiBJmlB,UAAU9kB,GAEjB,YAnBWL,EAkBNumB,mBAAmBhd,GAG1B6c,EAAiB7c,GAAMlJ,MAG3B2kB,GAAY,GACL,GAzBUhlB,EA2BZuB,YAAc,SAACgI,GAAD,OAAQ6c,EAAiB7c,IAAO,MA3BlCvJ,EA4BZwmB,eAAiB,SAACnmB,GA5BNL,EA6BZumB,mBAAmBlmB,EAAIkJ,KA7BXvJ,EA+BZymB,YAAc,SAACpmB,GACpB,GAhCiBL,EAgCRmlB,UAAU9kB,GAAM,OAAO,KAGhC,IADA,IAAIkJ,EAAE,mBAAe8c,KACe,OAA7BzmB,aAAa+Z,QAAQpQ,IAC1BA,EAAE,mBAAe8c,KACnB,IAAIK,EAAOxV,YAAU7Q,GAIrB,OAHAqmB,EAAKnd,GAAKA,EACVuQ,YAAmBvQ,EAAImd,GACvBN,EAAiB7c,GAAMmd,EAChBnd,GAzCUvJ,EA2CZiB,eAAiB,SAACZ,GACvB,IA5CiBL,EA4CRmlB,UAAU9kB,GAAnB,CACA,IAAIkJ,EAAKlJ,EAAIkJ,GACTmd,EAAOxV,YAAU7Q,GACrByZ,YAAmBvQ,EAAImd,GACvBN,EAAiB7c,GAAMmd,IAhDN1mB,EAkDZumB,mBAAqB,SAACI,UACpBP,EAAiBO,GACxB/mB,aAAaC,WAAW8mB,IApDP3mB,EAuDZ+K,kBAAoB,SAACzJ,EAAOf,GACjC,GAAKe,EAAL,CACA,IAAIjB,EAzDaL,EAyDFuB,YAAYD,GACtBjB,GAAOA,EAAIE,WAAaA,IAC7BF,EAAIE,SAAWA,EA3DEP,EA4DZiB,eAAeZ,MA5DHL,EA8DZohB,cAAgB,SAACwF,EAAMC,GAC5B,IAAIC,EAAOF,EAAKrmB,SACZwmB,EAAOF,EAAKtmB,SAhECP,EAiEZ+K,kBAAkB6b,EAAKrd,GAAIwd,GAjEf/mB,EAkEZ+K,kBAAkB8b,EAAKtd,GAAIud,IAlEf9mB,EAoEZgnB,kBAAoB,SAACC,EAAQC,GAAT,OApERlnB,EAqEZohB,cArEYphB,EAqEOuB,YAAY0lB,GArEnBjnB,EAqEiCuB,YAAY2lB,M,gCChEnDrb,IATO,CACpB9O,MAAO,CAAE/C,KAAM,SACfmD,IAAK,CAAEnD,KAAM,OACbkD,QAAS,CAAElD,KAAM,WACjBoD,MAAO,CAAEpD,KAAM,SACfqD,KAAM,CAAErD,KAAM,QACdgD,KAAM,CAAEhD,KAAM,U,wRCHV2Y,EAAW,CAEf3Q,QAAS,CAAEhI,KAAM,KAAM6Y,OAAQ,WAC/BzQ,GAAI,CAAEpI,KAAM,KAAM6Y,OAAQ,WAC1B1Q,IAAK,CAAEnI,KAAM,KAAMuO,KAAM,IAAKsK,OAAQ,cACtC3Q,SAAU,CAAElI,KAAM,KAAM6Y,OAAQ,YAEhCxQ,SAAU,CAAErI,KAAM,MAAO6Y,OAAQ,YACjCpQ,IAAK,CAAEzI,KAAM,MAAO6Y,OAAQ,YAC5BrQ,KAAM,CAAExI,KAAM,MAAOuO,KAAM,IAAKsK,OAAQ,eACxCtQ,UAAW,CAAEvI,KAAM,MAAO6Y,OAAQ,aAClCsU,WAAY,CAAEntB,KAAM,aAAc6Y,OAAQ,cAE1CnQ,SAAU,CAAE1I,KAAM,MAAO6Y,OAAQ,YACjC/P,IAAK,CAAE9I,KAAM,MAAO6Y,OAAQ,YAC5BhQ,KAAM,CAAE7I,KAAM,MAAOuO,KAAM,IAAKsK,OAAQ,eACxCjQ,UAAW,CAAE5I,KAAM,MAAO6Y,OAAQ,aAElCsM,cAAe,CAAEnlB,KAAM,qBAAsBuO,KAAM,KACnD6e,QAAS,CAAEptB,KAAM,eAAgBuO,KAAM,KACvC6W,cAAe,CAAEplB,KAAM,YAAauO,KAAM,KAC1C8e,QAAS,CAAErtB,KAAM,UAAWuO,KAAM,KAClCxF,QAAS,CAAE/I,KAAM,qBACjBqJ,UAAW,CAAErJ,KAAM,kBAAmBuO,KAAM,KAC5CtF,UAAW,CAAEjJ,KAAM,YAAauO,KAAM,KACtCpF,SAAU,CAAEnJ,KAAM,WAAYuO,KAAM,KACpChF,UAAW,CAAEvJ,KAAM,gBAAiBuO,KAAM,KAC1C9D,KAAM,CAAEzK,KAAM,WACdstB,SAAU,CAAEttB,KAAM,yBAA0BuO,KAAM,KAClDgf,WAAY,CAAEvtB,KAAM,kBAAmBuO,KAAM,KAC7Cif,OAAQ,CAAExtB,KAAM,YAAauO,KAAM,KAGnCyL,aAAc,CAAEha,KAAM,qBACtBqa,aAAc,CAAEra,KAAM,sBACtB0a,WAAY,CAAE1a,KAAM,uBACpBia,kBAAmB,CAAEja,KAAM,8BAC3Bsa,kBAAmB,CAAEta,KAAM,+BAC3B2a,gBAAiB,CAAE3a,KAAM,gCACzBka,iBAAkB,CAAEla,KAAM,0BAC1Bua,iBAAkB,CAAEva,KAAM,2BAC1B4a,eAAgB,CAAE5a,KAAM,4BACxBytB,mBAAoB,CAAEztB,KAAM,0BAA2BuO,KAAM,KAC7Dmf,mBAAoB,CAAE1tB,KAAM,2BAA4BuO,KAAM,KAC9Dof,mBAAoB,CAAE3tB,KAAM,0BAA2BuO,KAAM,KAC7Dqf,mBAAoB,CAAE5tB,KAAM,2BAA4BuO,KAAM,KAC9D4L,oBAAqB,CAAEna,KAAM,gCAAiCuO,KAAM,SACpEiM,oBAAqB,CAAExa,KAAM,iCAAkCuO,KAAM,SACrE6L,qBAAsB,CAAEpa,KAAM,qCAAsCuO,KAAM,SAC1EkM,qBAAsB,CAAEza,KAAM,sCAAuCuO,KAAM,SAC3EsM,mBAAoB,CAAE7a,KAAM,uCAAwCuO,KAAM,SAG1E+P,UAAW,CAAEte,KAAM,kBACnB0e,UAAW,CAAE1e,KAAM,kBACnBue,eAAgB,CAAEve,KAAM,2BACxB2e,eAAgB,CAAE3e,KAAM,2BACxBwe,cAAe,CAAExe,KAAM,uBACvB4e,cAAe,CAAE5e,KAAM,uBACvB6tB,gBAAiB,CAAE7tB,KAAM,uBAAwBuO,KAAM,KACvDuf,gBAAiB,CAAE9tB,KAAM,uBAAwBuO,KAAM,KACvDwf,gBAAiB,CAAE/tB,KAAM,uBAAwBuO,KAAM,KACvDyf,gBAAiB,CAAEhuB,KAAM,uBAAwBuO,KAAM,KACvD6M,iBAAkB,CAAEpb,KAAM,6BAA8BuO,KAAM,SAC9D8M,iBAAkB,CAAErb,KAAM,6BAA8BuO,KAAM,SAC9DkQ,kBAAmB,CAAEze,KAAM,kCAAmCuO,KAAM,SACpEsQ,kBAAmB,CAAE7e,KAAM,kCAAmCuO,KAAM,SACpE0f,aAAc,CAAEjuB,KAAM,qBAAsBuO,KAAM,KAClD2f,aAAc,CAAEluB,KAAM,qBAAsBuO,KAAM,KAElDuM,QAAS,CAAE9a,KAAM,uBACjB+a,aAAc,CAAE/a,KAAM,gCACtBgb,YAAa,CAAEhb,KAAM,4BACrBib,gBAAiB,CAAEjb,KAAM,uCAAwCuO,KAAM,SAEvE2P,QAAS,CAAEle,KAAM,wBACjBme,aAAc,CAAEne,KAAM,iCACtBoe,YAAa,CAAEpe,KAAM,6BACrBqe,gBAAiB,CAAEre,KAAM,wCAAyCuO,KAAM,SAExE2M,eAAgB,CAAElb,KAAM,sBAAuBuO,KAAM,SACrD4M,WAAY,CAAEnb,KAAM,kBAAmBuO,KAAM,SAC7C4f,cAAe,CAAEnuB,KAAM,gBAAiBuO,KAAM,KAC9C6f,SAAU,CAAEpuB,KAAM,eAAgBuO,KAAM,KACxC8f,QAAS,CAAEruB,KAAM,UAAWuO,KAAM,KAClC+f,aAAc,CAAEtuB,KAAM,eAAgBuO,KAAM,KAC5CggB,YAAa,CAAEvuB,KAAM,2BAA4BuO,KAAM,KACvDigB,oBAAqB,CAAExuB,KAAM,mCAAoCuO,KAAM,KACvEkgB,oBAAqB,CAAEzuB,KAAM,0CAA2CuO,KAAM,KAG9EmgB,eAAgB,CAAE1uB,KAAM,iBAAkBuO,KAAM,IAAK9J,QAAS,QAC9DkqB,mBAAoB,CAAE3uB,KAAM,qBAAsBuO,KAAM,IAAK9J,QAAS,YAEtE2Y,gBAAiB,CAAEpd,KAAM,gCAAiCuO,KAAM,SAChE8O,gBAAiB,CAAErd,KAAM,gCAAiCuO,KAAM,SAChE+O,gBAAiB,CAAEtd,KAAM,gCAAiCuO,KAAM,SAChE4O,0BAA2B,CAAEnd,KAAM,0CAA2CuO,KAAM,SAGpFsJ,aAAc,CAAE7X,KAAM,wBAAyB0F,QAAS,SACxDkpB,WAAY,CAAE5uB,KAAM,kBAAmB0F,QAAS,GAEhDmpB,YAAa,CAAE7uB,KAAM,eACrBsb,kBAAmB,CAAEtb,KAAM,yBAA0BuO,KAAM,SAE3DmN,cAAe,CAAE1b,KAAM,qBAAsBuO,KAAM,IAAK7I,QAAS,IACjE6V,oBAAqB,CAAEvb,KAAM,gCAAiCuO,KAAM,SACpEiN,mBAAoB,CAAExb,KAAM,0BAA2B0F,SAAS,GAChEopB,cAAe,CAAE9uB,KAAM,sBAAuBuO,KAAM,IAAK7I,QAAS,IAClEoZ,oBAAqB,CAAE9e,KAAM,iCAAkCuO,KAAM,SACrEwgB,mBAAoB,CAAE/uB,KAAM,2BAA4B0F,SAAS,IAEnE,SAASspB,EAAcvT,GAErB,OADAA,GAAY,KACF,EAAU,EAAIA,EAAM,EACrBA,GAAO,IAAa,GAAW,EAANA,EAAU,GACrC,EAAIA,EAEb,IAAMzF,EAAwB,CAC5BjT,MAAO,CAAC,aACRI,IAAK,CAAC,iBAAkB,eACxBD,QAAS,CAAC,iBAAkB,qBAAsB,oBAClDE,MAAO,CAAC,qBAAsB,eAC9BC,KAAM,CAAC,kBACPL,KAAM,CAAC,cAAe,qBAGlB6Y,EAAiB,CACrBC,WAAY,CAAC,eAAgB,aAAc,aAAe,YAAc,WAAe,WACvFO,aAAc,CAAC,cAAe,YAAc,aAAe,WAAc,aAAe,UACxFH,eAAgB,CAAC,eAAgB,YAAc,aAAe,YAAc,aAAe,WAC3FS,UAAW,CAAC,eAAgB,aAAc,aAAe,YAAc,aAAe,WACtFH,MAAO,CAAC,eAAgB,aAAc,aAAe,YAAc,aAAe,UAClFM,WAAY,CAAC,UAAW,QAAS,UAAY,UAAY,aAAe,cAM1E,IAAMmS,EAAW,CAEf/mB,SAAU,SAAC+a,GAAD,OAAOA,EAAEjb,SAAW,EAAIib,EAAE9a,IAAM,KAAO8a,EAAE7a,IAEnDG,UAAW,SAAC0a,GAAD,OAAQA,EAAE5a,SAAW4a,EAAEkK,aAAe,EAAIlK,EAAEza,KAAO,KAAOya,EAAExa,KAEvEG,UAAW,SAACqa,GAAD,OAAOA,EAAEva,UAAY,EAAIua,EAAEpa,KAAO,KAAOoa,EAAEna,KAGtDkR,aAAc,SAACiJ,GAAD,OAAOA,EAAE1a,UAAY0a,EAAE7I,qBAAuB6I,EAAE3H,kBAAoB2H,EAAE1H,qBACpFtB,kBAAmB,SAACgJ,GAAD,OAAOA,EAAEjJ,aAAeiJ,EAAE/H,gBAC7ChB,iBAAkB,SAAC+I,GAAD,OAAOA,EAAEjJ,aAAeiJ,EAAE9I,qBAC5CA,oBAAqB,SAAC8I,GAAD,OAAQ,EAAKlP,YAAMkP,EAAEha,UAAYga,EAAE0K,mBAAoB,EAAG,KAAO,IAAO1K,EAAE9Z,SAAW,KAC1GiR,qBAAsB,SAAC6I,GAAD,OAAQ,GAAKA,EAAEkC,cAAgBlC,EAAEwK,mBAAqBxK,EAAEkL,eAAiB,KAG/F9T,aAAc,SAAC4I,GAAD,OAAOA,EAAE1a,UAAY0a,EAAExI,qBAAuBwI,EAAE3H,kBAAoB2H,EAAE1H,qBACpFjB,kBAAmB,SAAC2I,GAAD,OAAOA,EAAE5I,aAAe4I,EAAE/H,gBAC7CX,iBAAkB,SAAC0I,GAAD,OAAOA,EAAE5I,aAAe4I,EAAEzI,qBAC5CA,oBAAqB,SAACyI,GAAD,OAAQ,EAAKlP,YAAMkP,EAAEha,UAAYga,EAAE2K,mBAAoB,EAAG,KAAO,IAAO3K,EAAE9Z,SAAW,KAC1GsR,qBAAsB,SAACwI,GAAD,OAAQ,GAAKA,EAAEkC,cAAgBlC,EAAEyK,mBAAqBzK,EAAEkL,eAAiB,KAG/FzT,WAAY,SAACuI,GAAD,OAAOA,EAAEnI,SACrBH,gBAAiB,SAACsI,GAAD,OAAOA,EAAElI,cAC1BH,eAAgB,SAACqI,GAAD,OAAOA,EAAEjI,aACzBH,mBAAoB,SAACoI,GAAD,OAAOA,EAAEhI,iBAE7BH,QAAS,SAACmI,GAAD,OAAOA,EAAE1a,UAAY0a,EAAEhI,gBAAkBgI,EAAE3H,kBAAoB2H,EAAE1H,qBAC1ER,aAAc,SAACkI,GAAD,OAAOA,EAAEnI,QAAUmI,EAAE/H,gBACnCF,YAAa,SAACiI,GAAD,OAAOA,EAAEnI,QAAUmI,EAAE9H,YAClCF,gBAAiB,SAACgI,GAAD,OAAQ,GAAKA,EAAEkC,cAAgBlC,EAAEkL,eAAiB,KAEnEjT,eAAgB,SAAC+H,GAAD,OAAQ,EAAIA,EAAE9Z,SAAW,KACzCgS,WAAY,SAAC8H,GAAD,OAAQ,EAAKlP,YAAMkP,EAAEha,UAAW,EAAG,KAAO,KAAQga,EAAE9Z,SAAW,MAE3EiS,iBAAkB,SAAC6H,GAAD,OAAQ,EAAKlP,YAAMkP,EAAEha,UAAYga,EAAE8K,gBAAiB,EAAG,KAAO,IAAO9K,EAAE9Z,SAAW,KACpGkS,iBAAkB,SAAC4H,GAAD,OAAQ,EAAKlP,YAAMkP,EAAEha,UAAYga,EAAE+K,gBAAiB,EAAG,KAAO,IAAO/K,EAAE9Z,SAAW,KAEpGmS,kBAAmB,SAAC2H,GAAD,OAAQ,IAAMA,EAAE2L,aAAe,IAAM3L,EAAE4L,YAAc,IAAM5L,EAAE2L,aAChFrT,oBAAqB,SAAC0H,GAAD,OAAOA,EAAEzH,mBAAqB,EAAIwT,EAAc/L,EAAEvH,gBAGvEC,eAAgB,SAACsH,GAAD,OAAQ,EAAIA,EAAEiM,qBAAuB,KAAOjM,EAAE5F,gBAAkB4F,EAAErH,iBAAmBqH,EAAEkM,0BACvGvT,iBAAkB,SAACqH,GAAD,OAAOpH,EAAeC,WAAWqK,QAAO,SAAC+D,EAAMnV,EAAKzB,GAAZ,OAAkB4W,EAAOnV,EAAM1G,KAAK+gB,IAAInM,EAAE2L,WAAYtb,KAAI,IACpH0I,mBAAoB,SAACiH,GAAD,OAAQ,EAAIA,EAAEoM,yBAA2B,KAAOpM,EAAE5F,gBAAkB4F,EAAEhH,qBAAuBgH,EAAEqM,6BACnHrT,qBAAsB,SAACgH,GAAD,OAAOpH,EAAeK,eAAeiK,QAAO,SAAC+D,EAAMnV,EAAKzB,GAAZ,OAAkB4W,EAAOnV,EAAM1G,KAAK+gB,IAAInM,EAAE2L,WAAYtb,KAAI,IAC5H6I,iBAAkB,SAAC8G,GAAD,OAAQ,EAAIA,EAAEsM,uBAAyB,KAAOtM,EAAE5F,gBAAkB4F,EAAE7G,mBAAqB6G,EAAEuM,0BAC7GpT,mBAAoB,SAAC6G,GAAD,OAAOpH,EAAeQ,aAAa8J,QAAO,SAAC+D,EAAMnV,EAAKzB,GAAZ,OAAkB4W,EAAOnV,EAAM1G,KAAK+gB,IAAInM,EAAE2L,WAAYtb,KAAI,IAGxHgJ,UAAW,SAAC2G,GAAD,OAAQ,EAAIA,EAAEwM,gBAAkB,KAAOxM,EAAE5F,gBAAkB4F,EAAE1G,YAAc0G,EAAEyM,2BACxFnT,YAAa,SAAC0G,GAAD,OAAOpH,EAAeW,MAAM2J,QAAO,SAAC+D,EAAMnV,EAAKzB,GAAZ,OAAkB4W,EAAOnV,EAAM1G,KAAK+gB,IAAInM,EAAE2L,WAAYtb,KAAI,IAC1GmJ,YAAa,SAACwG,GAAD,OAAQ,EAAIA,EAAE0M,kBAAoB,KAAO1M,EAAE5F,gBAAkB4F,EAAEvG,cAAgBuG,EAAE1H,qBAC9FmB,cAAe,SAACuG,GAAD,OAAOpH,EAAec,UAAUwJ,QAAO,SAAC+D,EAAMnV,EAAKzB,GAAZ,OAAkB4W,EAAOnV,EAAM1G,KAAK+gB,IAAInM,EAAE2L,WAAYtb,KAAI,IAChHsJ,eAAgB,SAACqG,GAAD,OAAQ,EAAIA,EAAE2M,qBAAuB,KAAO3M,EAAE3F,gBAAkB2F,EAAEpG,kBAClFA,iBAAkB,SAACoG,GAAD,OAAOpH,EAAeiB,WAAWqJ,QAAO,SAAC+D,EAAMnV,EAAKzB,GAAZ,OAAkB4W,EAAOnV,EAAM1G,KAAK+gB,IAAInM,EAAE2L,WAAYtb,KAAI,IAEpHyJ,oBAAqB,SAACkG,GAAD,OAAQ,EAAIA,EAAE0L,mBAAqB,KAAO1L,EAAE7F,gBAAkB,IAAM6F,EAAE9F,2BAC3FH,qBAAsB,SAACiG,GAAD,OAAQ,EAAIA,EAAE0L,mBAAqB,KAAO1L,EAAE7F,gBAAkB,EAAI6F,EAAE9F,2BAE1FF,gBAAiB,SAACgG,GAAD,OAAQ,EAAIA,EAAEyL,eAAiB,KAAOzL,EAAE7F,gBAAkB,EAAI6F,EAAE9F,2BACjFD,gBAAiB,SAAC+F,GAAD,OAAQ,EAAIA,EAAEyL,eAAiB,KAAOzL,EAAE7F,gBAAkB,IAAM6F,EAAE9F,2BACnFA,0BAA2B,SAAC8F,GAAD,OAlEpB,EAAI,YADMla,EAmE2Bka,EAAEla,SAlEXsF,KAAKwhB,KAAK,OAAW9mB,GAAW,IADrE,IAAmBA,GAqEjBqU,gBAAiB,SAAC6F,GAAD,OAAQ,EAAK,GAAK,EAAIA,EAAEla,SAAW,KAAOka,EAAEla,UAC7DsU,gBAAiB,SAAC4F,GAAD,OAAQ,EAAK,GAAK,EAAIA,EAAEla,SAAW,KAAOka,EAAEla,UAC7DuU,gBAAiB,SAAC2F,GAAD,OAAQ,EAAK,GAAK,EAAIA,EAAEla,SAAW,KAAOka,EAAEla,WAIzD+mB,EAAc,CAClB9V,aAAc,SAACiJ,EAAGhF,GAAJ,OAAYgF,EAAE1a,UAAY0a,EAAE,GAAD,OAAIhF,EAAJ,0BAAkCgF,EAAE3H,kBAAoB2H,EAAE,GAAD,OAAIhF,EAAJ,0BAClGhE,kBAAmB,SAACgJ,EAAGhF,GAAJ,OAAYgF,EAAE,GAAD,OAAIhF,EAAJ,kBAA0BgF,EAAE/H,gBAC5DhB,iBAAkB,SAAC+I,EAAGhF,GAAJ,OAAYgF,EAAE,GAAD,OAAIhF,EAAJ,kBAA0BgF,EAAE9I,qBAC3DC,qBAAsB,SAAC6I,EAAGhF,GAAJ,OAAa,GAAKgF,EAAE,GAAD,OAAIhF,EAAJ,mBAA2BgF,EAAEwK,mBAAqBxK,EAAEkL,eAAiB,KAE9G9T,aAAc,SAAC4I,EAAGhF,GAAJ,OAAYgF,EAAE1a,UAAY0a,EAAE,GAAD,OAAIhF,EAAJ,0BAAkCgF,EAAE3H,kBAAoB2H,EAAE,GAAD,OAAIhF,EAAJ,0BAClG3D,kBAAmB,SAAC2I,EAAGhF,GAAJ,OAAYgF,EAAE,GAAD,OAAIhF,EAAJ,kBAA0BgF,EAAE/H,gBAC5DX,iBAAkB,SAAC0I,EAAGhF,GAAJ,OAAYgF,EAAE,GAAD,OAAIhF,EAAJ,kBAA0BgF,EAAEzI,qBAC3DC,qBAAsB,SAACwI,EAAGhF,GAAJ,OAAa,GAAKgF,EAAE,GAAD,OAAIhF,EAAJ,mBAA2BgF,EAAEyK,mBAAqBzK,EAAEkL,eAAiB,KAE9GzT,WAAY,SAACuI,EAAGhF,GAAJ,OAAYgF,EAAE,GAAD,OAAIhF,EAAJ,cACzBtD,gBAAiB,SAACsI,EAAGhF,GAAJ,OAAYgF,EAAE,GAAD,OAAIhF,EAAJ,mBAC9BrD,eAAgB,SAACqI,EAAGhF,GAAJ,OAAYgF,EAAE,GAAD,OAAIhF,EAAJ,kBAC7BpD,mBAAoB,SAACoI,EAAGhF,GAAJ,OAAYgF,EAAE,GAAD,OAAIhF,EAAJ,sBAEjCC,QAAS,SAAC+E,EAAGhF,GAAJ,OAAYgF,EAAE1a,UAAY0a,EAAE,GAAD,OAAIhF,EAAJ,qBAA6BgF,EAAE3H,kBAAoB2H,EAAE,GAAD,OAAIhF,EAAJ,0BACxFE,aAAc,SAAC8E,EAAGhF,GAAJ,OAAYgF,EAAE,GAAD,OAAIhF,EAAJ,aAAqBgF,EAAE/H,gBAClDkD,YAAa,SAAC6E,EAAGhF,GAAJ,OAAYgF,EAAE,GAAD,OAAIhF,EAAJ,aAAqBgF,EAAE9H,YACjDkD,gBAAiB,SAAC4E,EAAGhF,GAAJ,OAAa,GAAKgF,EAAE,GAAD,OAAIhF,EAAJ,mBAA2BgF,EAAEkL,eAAiB,KAElF7P,UAAW,SAAC2E,EAAGhF,GAAJ,OAAYgF,EAAE1a,UAAY0a,EAAE,GAAD,OAAIhF,EAAJ,uBAA+BgF,EAAE3H,kBAAoB2H,EAAE,GAAD,OAAIhF,EAAJ,0BAC5FM,eAAgB,SAAC0E,EAAGhF,GAAJ,OAAYgF,EAAE,GAAD,OAAIhF,EAAJ,eAAuBgF,EAAE/H,gBACtDsD,cAAe,SAACyE,EAAGhF,GAAJ,OAAYgF,EAAE,GAAD,OAAIhF,EAAJ,eAAuBgF,EAAE7H,kBACrDqD,kBAAmB,SAACwE,EAAGhF,GAAJ,OAAa,GAAKgF,EAAE,GAAD,OAAIhF,EAAJ,mBAA2BgF,EAAE4K,gBAAkB5K,EAAEkL,eAAiB,KAExGzP,UAAW,SAACuE,EAAGhF,GAAJ,OAAYgF,EAAE1a,UAAY0a,EAAE,GAAD,OAAIhF,EAAJ,uBAA+BgF,EAAE3H,kBAAoB2H,EAAE,GAAD,OAAIhF,EAAJ,0BAC5FU,eAAgB,SAACsE,EAAGhF,GAAJ,OAAYgF,EAAE,GAAD,OAAIhF,EAAJ,eAAuBgF,EAAE/H,gBACtD0D,cAAe,SAACqE,EAAGhF,GAAJ,OAAYgF,EAAE,GAAD,OAAIhF,EAAJ,eAAuBgF,EAAE5H,kBACrDwD,kBAAmB,SAACoE,EAAGhF,GAAJ,OAAa,GAAKgF,EAAE,GAAD,OAAIhF,EAAJ,mBAA2BgF,EAAE6K,gBAAkB7K,EAAEkL,eAAiB,KAExGrP,oBAAqB,SAACmE,EAAGhF,GAAJ,OAAYgF,EAAE,GAAD,OAAIhF,EAAJ,wBAAgC,EAAI+Q,EAAc/L,EAAE,GAAD,OAAIhF,EAAJ,sBAGvF,CAAC,CAAC,aAAc,cAAe,CAAC,iBAAkB,mBAAoB,CAAC,eAAgB,gBAAiB,CAAC,UAAW,WAAY,CAAC,QAAS,SAAU,CAAC,UAAW,aAAc,CAAC,aAAc,eAAe7X,SAAQ,mCAAEuX,EAAF,KAAeoS,EAAf,WAClN,CAAC,CAAC,MAAO,OAAQ,CAAC,YAAa,YAAa,CAAExhB,KAAM,MAAQ,CAAC,QAAS,aAAc,CAAEA,KAAM,WAAYnI,SAAQ,YAAoC,IAAD,mBAAjC4pB,EAAiC,KAAzBC,EAAyB,YAAhBlrB,OAAgB,MAAR,GAAQ,EACjJ4T,EAAS,GAAD,OAAIgF,EAAJ,YAAmBqS,IAA3B,aACEhwB,KAAK,GAAD,OAAK+vB,EAAL,YAAqBE,GACzBxrB,QAASkZ,GACN5Y,SAKT,CACE,gBAAiB,UAAW,gBAAiB,qBAAsB,UAAW,eAAgB,cAAe,mBAD/G,mBAEKpD,OAAOoQ,KAAK4G,GAAU7W,QAAO,SAAAM,GAAG,MAAI,CAAC,WAAY,WAAY,UAAU6jB,MAAK,SAAAiK,GAAG,OAAI9tB,EAAIiP,SAAS6e,WACnG9pB,SAAQ,SAAAhE,GACRuW,EAASvW,GAAKqC,QAAU,cAI1B,CAAC,CAAC,gBAAiB,iBAAkB,WAAY,QAAS,CAAC,iBAAkB,kBAAmB,WAAY,SAAU,CAAC,YAAa,aAAc,OAAQ,QAAS,CAAC,YAAa,aAAc,OAAQ,SAAS2B,SAAQ,YAAoD,IAAD,mBAAjDuX,EAAiD,KAApCoS,EAAoC,KAAtBtrB,EAAsB,KAAbmZ,EAAa,KACzQ,CAAC,CAAC,QAAS,aAAc,CAAErP,KAAM,WAAYnI,SAAQ,YAAoC,IAAD,mBAAjC4pB,EAAiC,KAAzBC,EAAyB,YAAhBlrB,OAAgB,MAAR,GAAQ,EACtF4T,EAAS,GAAD,OAAIgF,EAAJ,YAAmBqS,IAA3B,aACEhwB,KAAK,GAAD,OAAK+vB,EAAL,YAAqBE,GACzBxrB,WACGM,MAGP,CAAC,CAAC,WAAY,gBAAiB,CAAC,WAAY,kBAAmB,CAAC,SAAU,mBAAoB,CAAC,QAAS,cAAe,CAAC,QAAS,cAAe,CAAC,MAAO,cAAcqB,SAAQ,mCAAEyX,EAAF,KAAWsS,EAAX,WAC5K,CAAC,CAAC,MAAO,OAAQ,CAAC,UAAW,YAAa,CAAC,WAAY,iBAAiB/pB,SAAQ,YAA6B,IAAD,mBAA1ByB,EAA0B,KAAjBuoB,EAAiB,KACtGtS,EAAc,UAAMH,EAAN,YAAqBE,EAArB,YAAgChW,GAClD8Q,EAASmF,GAAkB,CAAE9d,KAAK,GAAD,OAAK+vB,EAAL,YAAqBI,EAArB,YAAoCC,GAAe3rB,WACpF,IAAIsZ,EAAO,UAAMH,EAAN,YAAiBC,EAAjB,YAA4BhW,GACvConB,EAASnR,GAAkB,SAACmF,GAAD,OAAOA,EAAE,GAAD,OAAItF,EAAJ,WAA2BsF,EAAElF,aAKtE,CAAC,gBAAiB,UAAW,gBAAiB,sBAA9C,mBAAuEpc,OAAOoQ,KAAK+d,KAAc1pB,SAAQ,SAAAhE,GACvG,IAAIyH,EAAM8O,EAASvW,GACnBT,OAAOoQ,KAAKF,KAAezL,SAAQ,SAAAsP,GACjC,IAAI2a,EAAO,UAAM3a,EAAN,YAAgBtT,GAC3BuW,EAAS0X,GAAWnZ,YAAUrN,GAE5B8O,EAAS0X,GAASrwB,KADR,kBAARoC,EACF,gBAAkCyP,IAAc6D,GAAQ1V,KAAxD,QACe,wBAARoC,EACP,gBAAkCyP,IAAc6D,GAAQ1V,KAAxD,mBACe,uBAARoC,EACP,gBAAkCyP,IAAc6D,GAAQ1V,KAAxD,aAEA,UAA4B6R,IAAc6D,GAAQ1V,KAAlD,YAA0D6J,EAAI7J,MAChE2Y,EAAS0X,GAAS5rB,QAAUiR,QAOhC/T,OAAOE,QAAQiuB,GAAa1pB,SAAQ,mCAAEhE,EAAF,KAAO2c,EAAP,YAClCpd,OAAOoQ,KAAKF,KAAezL,SAAQ,SAAAsP,GAAM,OACvC/T,OAAOoI,eAAeklB,EAAtB,UAAmCvZ,EAAnC,YAA6CtT,GAAO,CAClD6H,cAAc,EACdD,YAAY,EACZE,UAAU,EACVJ,MAAO,SAACD,GAAD,OAAUkV,EAAMlV,EAAK6L,YAGlC,IAAM4D,EAAmB,CACvB0F,iBAAkB,CAChB5c,IAAK,YACLkuB,QAAS,SAAC9W,GAAD,OAAa,SAACyJ,GAAD,OAAQA,EAAE5a,SAAW4a,EAAEkK,aAAe,EAAIlK,EAAEza,KAAO,KAAOya,EAAExa,IAAMwa,EAAEra,WAAa4Q,EAAQ1P,MAAQ,OACvHymB,WAAY,CAAC,WAAY,aAAc,OAAQ,MAAO,YAAa,WAAY,OAAQ,SAK3F,SAAS5Y,EAAmB9N,GAAoB,IAAf2P,EAAc,uDAAJ,GAAI,EACmCA,EAA1EgX,mBADuC,MACzB7uB,OAAOoQ,KAAKkd,GADa,IACmCzV,EAArC5B,gBADE,MACSjW,OAAOoQ,KAAK4G,GADrB,IAEb9O,EAA1BsO,wBAFuC,MAEpB,GAFoB,EAG7CA,EAAiB/R,SAAQ,SAAAiT,GAAoB,IAChCoX,EAAgCpX,EAArCjX,IAAyBoX,EAAYH,EAAZG,QADW,EAEnBF,EAAiBmX,IAAuB,GAAzDruB,EAFoC,EAEpCA,IAAKkuB,EAF+B,EAE/BA,QACNE,EAAYnf,SAASjP,KAC1BkuB,EAAUA,EAAQ9W,GAClB7X,OAAOoI,eAAeF,EAAKzH,EAAK,CAC9BsuB,IAAKlX,EAAQgX,YAAc,kBAAMF,EAAQzmB,IAAO,WAC9C,IAAIkL,EAAMub,EAAQzmB,GAElB,OADAlI,OAAOoI,eAAe7K,KAAMkD,EAAK,CAAE0H,MAAOiL,IACnCA,GAET9K,cAAc,QAIlBumB,EAAYpqB,SAAQ,SAAAhE,IACjByH,EAAIkO,eAAe3V,IAAQT,OAAOoI,eAAeF,EAAKzH,EAAK,CAC1DsuB,IAAKlX,EAAQgX,YAAc,kBAAMvB,EAAS7sB,GAAKyH,IAAO,WACpD,IAAIkL,EAAMka,EAAS7sB,GAAKyH,GAExB,OADAlI,OAAOoI,eAAe7K,KAAMkD,EAAK,CAAE0H,MAAOiL,IACnCA,GAET9K,cAAc,OAIlB2N,EAASxR,SAAQ,SAAAhE,GAAG,OAAKyH,EAAIkO,eAAe3V,KAASyH,EAAIzH,GAAOuW,EAASvW,GAAKsD,SAAW,Q,qGC5VrFirB,EAAW,kBAAM,cAAC,IAAD,CAAiBhnB,KAAMinB,OACxCC,EAAQ,SAAC9rB,GAAD,OAAW,sBAAMJ,UAAWI,EAAM4I,QAAU,aAAe,GAAhD,SACtB5I,EAAM2I,MAAQ,YAAIkT,MAAM7b,EAAM2I,OAAOqE,QAAQnP,KAAI,SAACkuB,EAAGxd,GAAJ,OAAU,cAACqd,EAAD,GAAerd,MAAS","file":"static/js/9.e4dbafb3.chunk.js","sourcesContent":["import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //remove the old error/prone id lists, if it still exists\r\n  localStorage.removeItem(\"artifact_id_list\")\r\n  localStorage.removeItem(\"character_id_list\")\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  if (CharacterDatabase.populateDatebaseFromLocalStorage() |\r\n    ArtifactDatabase.populateDatebaseFromLocalStorage()) {\r\n    //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n    let arts = ArtifactDatabase.getArtifactDatabase();\r\n    Object.values(arts).forEach(art => {\r\n      let valid = true\r\n      if (art.location && !CharacterDatabase.getCharacter(art.location)) {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n      if (!art.maximumEfficiency) {\r\n        Artifact.substatsValidation(art)\r\n        valid = false\r\n      }\r\n      if (!valid)\r\n        ArtifactDatabase.updateArtifact(art)\r\n    })\r\n\r\n    let chars = CharacterDatabase.getCharacterDatabase();\r\n    Object.values(chars).forEach(character => {\r\n      let valid = true;\r\n      //verify character database equipment validity\r\n      let equippedArtifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([slotKey, artid]) => {\r\n        if (!ArtifactDatabase.getArtifact(artid)) {\r\n          valid = false\r\n          return [slotKey, undefined]\r\n        }\r\n        return [slotKey, artid]\r\n      }))\r\n      if (!valid)\r\n        character.equippedArtifacts = equippedArtifacts\r\n\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      if (character.artifactConditionals) character.artifactConditionals = character.artifactConditionals.filter(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n      if (!valid) {\r\n        CharacterDatabase.updateCharacter(character)\r\n      }\r\n    })\r\n  }\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport Stat from '../Stat';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nexport default function CharacterCard(props) {\r\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => forceUpdate())\r\n  }, [])\r\n  let { characterId, onEdit, onDelete } = props\r\n  let character = CharacterDatabase.getCharacter(characterId)\r\n  if (!character) return null;\r\n  let build = Character.calculateBuild(character)\r\n  let { setToSlots } = build\r\n\r\n  let { characterKey, name, weapon, constellation } = character\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponName = Weapon.getWeaponName(weapon.key)\r\n  let weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\r\n  let weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\r\n  let weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const statkeys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\",]\r\n  return (<Card className={props.cardClassName} bg={props.bg ? props.bg : \"darkcontent\"} text=\"lightfont\">\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {props.header ? props.header : <h6><b>{name}</b></h6>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {props.onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {props.onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={onEdit} style={{ cursor: onEdit ? \"pointer\" : \"default\" }}>\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={Character.getThumb(characterKey)} className={`w-100 h-auto grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h4>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h4>\r\n          <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n          <span>{`Lvl. ${Character.getStatValueWithOverride(character, \"char_level\")} C${constellation}`}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {Object.entries(Artifact.getSetEffects(setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = Artifact.getSetName(key)\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = build.finalStats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {props.footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        selectedCharacterId: characterId\r\n      }}>\r\n        Generate Builds\r\n        </Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy } from 'react';\r\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport Character from './Character';\r\nimport CharacterCard from './CharacterCard';\r\nimport CharacterDatabase from './CharacterDatabase';\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCardPromise = import('../Character/CharacterDisplayCard');\r\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\r\n\r\nexport default class CharacterDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = {\r\n      charIdToEdit: \"\",\r\n      showEditor: false,\r\n    }\r\n    ReactGA.pageview('/character')\r\n  }\r\n\r\n  deleteCharacter = (id) => {\r\n    Character.removeCharacter(id)\r\n    this.forceUpdate()\r\n  }\r\n\r\n  editCharacter = (id) =>\r\n    this.setState({ charIdToEdit: id, showEditor: true },\r\n      () => this.scrollRef.current.scrollIntoView({ behavior: \"smooth\" }))\r\n\r\n  cancelEditCharacter = () =>\r\n    this.setState({ charIdToEdit: null, showEditor: false })\r\n\r\n  componentDidMount() {\r\n    this.scrollRef = React.createRef()\r\n  }\r\n  render() {\r\n    let charIdList = CharacterDatabase.getCharacterIdList()\r\n    return (<Container ref={this.scrollRef}>\r\n      {/* editor/character detail display */}\r\n      {this.state.showEditor ? <Row className=\"mt-2\"><Col>\r\n        <React.Suspense fallback={<span>Loading...</span>}>\r\n          <CharacterDisplayCard editable\r\n            characterId={this.state.charIdToEdit}\r\n            onClose={this.cancelEditCharacter}\r\n            footer={<Button variant=\"danger\" onClick={this.cancelEditCharacter}>Close</Button>}\r\n          />\r\n        </React.Suspense>\r\n      </Col></Row> : null}\r\n\r\n      <Row className=\"mt-2\">\r\n        {this.state.showEditor ? null : <Col lg={4} md={6} className=\"mb-2\">\r\n          <Card className=\"h-100\" bg=\"darkcontent\" text=\"lightfont\">\r\n            <Card.Header className=\"pr-2\">\r\n              <span>Add New Character</span>\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex flex-column justify-content-center\">\r\n              <Row className=\"d-flex flex-row justify-content-center\">\r\n                <Col xs=\"auto\">\r\n                  <Button onClick={() => this.editCharacter(\"\")}>\r\n                    <h1><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></h1>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>}\r\n        {charIdList.map(id =>\r\n          <Col key={id} lg={4} md={6} className=\"mb-2\">\r\n            <CharacterCard\r\n              cardClassName=\"h-100\"\r\n              characterId={id}\r\n              onDelete={() => this.deleteCharacter(id)}\r\n              onEdit={() => this.editCharacter(id)}\r\n            />\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Container>)\r\n\r\n  }\r\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { AttachLazyFormulas, ElementToReactionKeys } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getCDataObj(charKey)?.talent?.[talentKey]?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getCDataObj(charKey)?.talent?.[talentKey]?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getCDataObj(charKey)?.talent?.[talentKey]?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"formulaOverrides\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    if (skillKey === \"phy\") return `phy_${dmgMode}`\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    if (skillKey === \"phy\") return \"physical\"\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_base\") || false\r\n    return character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals, initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals && artifactConditionals.forEach(conditional => {\r\n      let { srcKey: setKey, srcKey2: setNumKey } = conditional\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditional.conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n    AttachLazyFormulas(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"formulaOverrides\") {\r\n        initialStats.formulaOverrides = [...(initialStats.formulaOverrides || []), ...val]\r\n        return\r\n      }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, OverrideFormulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static printFormula = (statKey, stats, formulaOverrides = [], expand = true) => {\r\n    for (const formulaOverride of formulaOverrides)\r\n      if (OverrideFormulas[formulaOverride?.key]?.key === statKey)\r\n        return Stat.printOverrideFormula(stats, formulaOverride.key, formulaOverride.options, false)\r\n    return FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n      (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n  }\r\n\r\n  static printOverrideFormula = (stats, overrideKey, options, expand = true) =>\r\n    OverrideFormulasText?.[overrideKey] && typeof OverrideFormulasText?.[overrideKey].formulaText === \"function\" &&\r\n    (<span>{OverrideFormulasText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  trans_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(0, \"ele_mas\")} * exp^(-0.000505 * {f(0, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulasText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.value}%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance\r\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {})\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, numStars, rolls) => {\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars);\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let min = rollData[0] * len;\r\n    let max = rollData[rollData.length - 1] * len;\r\n    return clampPercent(((sum - min) / (max - min)) * 100)\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      if (rollArr.length > 1) substat.rollArr = rollArr\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, numStars, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, numStars, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      let hasSetEffect = false\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (setEffectObj.stats && Object.keys(setEffectObj.stats).length > 0) {\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n            hasSetEffect = true\r\n          }\r\n          if (setEffectObj.conditional) {\r\n            let conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n            if (conditionalNum) {\r\n              let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n              if (Object.keys(condStats) > 0) {\r\n                setEffect[setNumKey] = deepClone(condStats)\r\n                hasSetEffect = true\r\n              }\r\n            }\r\n          }\r\n        })\r\n      if (hasSetEffect)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => artifactDatabase[id] || null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  all_dmg_bonus: { name: \"All DMG Bonus\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elementry Mastry Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elementry Mastry Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elementry Mastry Multiplier Z\", unit: \"multi\" },\r\n  trans_reaction_base_multi: { name: \"Transformation Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_final: (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.phy_dmg,\r\n  plunge_crit_dmg: (s) => s.phy_crit_dmg,\r\n  plunge_avg_dmg: (s) => s.phy_avg_dmg,\r\n  plunge_bonus_multi: (s) => s.phy_bonus_multi,\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * s.ele_mas_multi_x * 1.5 * s.trans_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * s.ele_mas_multi_x * 2 * s.trans_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * s.ele_mas_multi_x * 2 * s.trans_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * s.ele_mas_multi_x * 1.5 * s.trans_reaction_base_multi,\r\n  trans_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s[`${ele}_ele_dmg`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_ele_crit_dmg`],\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_ele_avg_dmg`],\r\n  plunge_bonus_multi: (s, ele) => s[`${ele}_ele_bonus_multi`],\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.all_dmg_bonus) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulas = {\r\n  noelle_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk + s.def_final * (options.value / 100),\r\n    dependency: [\"atk_base\", \"atk_weapon\", \"atk_\", \"atk\", \"def_final\", \"def_base\", \"def_\", \"def\"],\r\n  }\r\n}\r\n\r\n//the keyfilters are used by build generator to reduce the amount of calculations required\r\nfunction AttachLazyFormulas(obj, options = {}) {\r\n  let { formulaKeys = Object.keys(Formulas), statKeys = Object.keys(StatData) } = options;\r\n  let { formulaOverrides = [] } = obj;\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key: overrideFormulaKey, options } = formulaOverride\r\n    let { key, formula } = OverrideFormulas[overrideFormulaKey] || {}\r\n    if (!formulaKeys.includes(key)) return\r\n    formula = formula(options)\r\n    Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => formula(obj) : function () {\r\n        let val = formula(obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n\r\n  formulaKeys.forEach(key => {\r\n    !obj.hasOwnProperty(key) && Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => Formulas[key](obj) : function () {\r\n        let val = Formulas[key](obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  //assign zeros or default values to the other stats that are not part of the calculations\r\n  statKeys.forEach(key => !obj.hasOwnProperty(key) && (obj[key] = StatData[key].default || 0))\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  OverrideFormulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  AttachLazyFormulas,\r\n}","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = (props) => <span className={props.colored ? \"text-5star\" : \"\"}>\r\n  {props.stars ? [...Array(props.stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n"],"sourceRoot":""}