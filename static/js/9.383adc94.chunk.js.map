{"version":3,"sources":["Components/StarDisplay.js","Components/CustomFormControl.js","Data/WeaponData.js","Components/ConditionalSelector.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","../node_modules/react-bootstrap/esm/Badge.js","Data/CharacterData.js","DatabaseUtil.js","Components/StatIcon.js","Components/CharacterSelection.js","Artifact/ArtifactCard.js","Artifact/PercentBadge.js","../node_modules/react-bootstrap/esm/ElementChildren.js","Components/StatDisplay.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","TestPage/TestDisplay.js","Character/Character.js","Util/Util.js","Stat.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Util/ConditionalsUtil.js","Artifact/ArtifactDatabase.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Data/ElementalData.js","StatData.js","Weapon/Weapon.js","StatDependency.js"],"names":["StarIcon","icon","faStar","Stars","stars","colored","className","Array","keys","map","_","i","CustomFormControl","float","placeholder","value","onValueChange","disabled","allowEmpty","useState","focus","setFocus","props","type","toString","onChange","e","target","parseFloat","parseInt","onFocus","onBlur","aria-label","WeaponData","WeaponDataImport","then","imp","default","WeaponLevelKeys","LevelNameData","WeaponTypeData","sword","claymore","catalyst","bow","polearm","ConditionalSelector","conditional","conditionalNum","setConditional","defEle","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","resin","fragile","condensed","exp_books","advice","wit","experience","useWillUnmount","fn","onUnmount","valueRef","useRef","current","useUpdatedRef","useEffect","resolveContainerRef","ref","_ref","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","Badge","React","forwardRef","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","CharacterData","CharacterDataImport","LevelsData","name","level","asend","characterStatBase","crit_rate","crit_dmg","ener_rech","stam","CharacterSpecializedStatKey","DatabaseInitAndVerify","charDBJustPopualted","CharacterDatabase","populateDatebaseFromLocalStorage","artDBJustPopualted","ArtifactDatabase","dbVersion","getDatabaseVersion","arts","getArtifactDatabase","Object","values","forEach","art","valid","location","getCharacter","artInSlotId","getArtifactIDFromSlot","slotKey","id","equipArtifact","Artifact","substatsValidation","numStars","keyMapping","setKey","mainStatKey","endsWith","replace","updateArtifact","chars","getCharacterDatabase","character","entries","equippedArtifacts","artid","equippedArt","getArtifact","moveToNewLocation","artifactConditionals","filter","cond","srcKey","srcKey2","dmgMode","updateCharacter","setDatabaseVersion","defVal","loadFromLocalStorage","version","saveToLocalStorage","StatIcon","hp_base","faTint","hp_final","hp_","hp","atk_base","faFistRaised","atk_character_base","atk_final","atk_","atk","def_base","faShieldAlt","def_final","def_","def","ele_mas","faMagic","faDice","faDiceD20","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","CharacterSelectionDropdownList","onSelect","char","Character","getName","characterKey","CharacterNameDisplay","flat","locationChar","ArtifactCard","artifactId","artifactObj","forceUpdate","onEdit","onDelete","assumeFull","substats","lock","currentEfficiency","maximumEfficiency","mainStatLevel","assFullColor","mainStatVal","getMainStatValue","Stat","getStatUnit","artifactValid","every","sstat","key","rolls","length","equipOnChar","charId","equipArtifactOnChar","border","bg","Header","xs","md","src","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Body","Title","getSetName","getStatName","stat","numRolls","efficiency","effOpacity","statName","toFixed","style","opacity","percent","Footer","Divider","cid","placement","overlay","pointerEvents","faLock","faLockOpen","Boolean","faEdit","faTrashAlt","PercentBadge","children","badgeColor","isNaN","Math","floor","func","index","Children","child","isValidElement","DisplayStats","statVal","build","editable","otherProps","buildVal","finalStats","buildDiff","originalVal","getStatValueWithOverride","diff","diffText","fixedUnit","hasOverride","Col","DisplayNewBuildDiff","equippedBuild","newBuild","unit","CharacterArtifactPane","compareAgainstEquipped","setState","showOther","setShowOther","artifactsAssumeFull","statKeys","getDisplayStatKeys","displayStatProps","displayNewBuildProps","formulaKeys","getPrintableFormulaStatKeyList","GetDependencies","modifiers","Row","Accordion","Card","Button","eventKey","xl","Collapse","printStat","printFormula","equipArtifacts","artifactIds","Alert","sm","lg","getSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","ConditionalsUtil","getConditionalNum","getConditionalStats","val","conditionalElement","cnum","state","setStateArtifactConditional","getSetEffectText","getSlotKeys","StatInput","prependEle","defaultValue","restProps","InputGroup","Prepend","Text","Append","undefined","OverlayTrigger","Tooltip","faUndo","CharacterOverviewPane","constellation","setOverride","setConstellation","editLevel","setEditLevel","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","Image","getStar","clamp","getLevel","levelKey","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","StatItem","getStatVariant","WeaponStatsCard","title","stats","mkey","modifier","reduce","accu","multiplier","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","refineIndex","conditionalStats","getWeaponConditionalStat","getWeaponConditional","conditionalEle","faQuoteLeft","getWeaponImg","getWeaponRarity","DropdownButton","getWeaponName","reverse","star","arr","Dropdown","ItemText","getWeaponsOfType","rarity","weaponObj","getLevelName","faGavel","getWeaponPassiveDescription","getWeaponDescription","editingOther","SetEditingOther","additionalKeys","displayStatKeys","push","editStatKeys","otherStatKeys","getElementalKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","isPercentSpecialStatSelect","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","getStatNameRaw","CharacterTalentPane","ascension","getAscension","skillDisplayProps","ContextAwareToggle","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","ToggleButtonGroup","ToggleButton","href","rel","eleKey","immunityStatKey","elementImmunity","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","autoInfused","ElementToReactionKeys","includes","statsDisplayKeys","ReactionDisplay","tKey","tText","SkillDisplayCard","talentKey","subtitle","getTalent","asc","enabled","onClickTitle","ReactionComponents","superconduct_dmg","electrocharged_dmg","overloaded_dmg","swirl_dmg","shatter_dmg","information","faQuestionCircle","crystalize_dmg","reactionMode","charEleKey","eleInterArr","Ele","modifiersToFields","mStatKey","basicVal","fixed","statsToFields","talentLimits","header","getTalentLevelKey","talentLvlKey","levelBoost","infuseBtn","getElementalName","tLvl","talentLevelKeys","talentStats","getTalentStats","statsEle","ListGroup","field","FieldDisplay","getTalentImg","getTalentName","Subtitle","getTalentDocument","section","talentText","fields","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","fieldText","fieldVariant","fieldBasic","fieldVal","finalVal","fixedVal","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","CharacterDisplayCard","forceUpdateComponent","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","characterId","getInitialState","Promise","all","getCharacterDataImport","getWeaponDataImport","getDataImport","this","deepClone","addCharacter","footer","onClose","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","faTimes","Tab","Container","defaultActiveKey","mountOnEnter","unmountOnExit","Nav","Link","getCDataObj","talent","skill","Content","Pane","initialState","auto","burst","active","ListGroupItem","action","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","makeEventKey","horizontal","horizontalVariant","_useUncontrolled","useUncontrolled","activeKey","initialBsPrefix","_useUncontrolled$as","controlledProps","AbstractNav","TestDisplay","Error","removeCharacterById","getSpecializedStatKey","getSpeicalizedStatVal","getWeaponMainStatValWithOverride","characterObj","baseStat","getIndexFromlevelkey","elementalKey","ElementalData","constellationName","titles","indexOf","getSpecializedStat","specializeStat","thumbImg","cardImg","img","constIndex","getTalentLevelBoost","talents","talentBoost","boostEntry","find","withBoost","getTalentFields","getTalentStatsAll","statsArr","getTalentConditional","doc","tempCond","getConditionalProp","stacks","fromEntries","skillKey","elemental","infusable","getTalentStatKeyVariant","atkKeys","startsWith","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","dependencies","PreprocessFormulas","mergeStats","char_ele_key","overrides","hasOwnProperty","specialStatKey","s","weaponSubKey","getWeaponSubStatValWithOverride","array","random","getRandomIntInclusive","min","max","ceil","data","localStorage","getItem","JSON","parse","obj","setItem","stringify","closeEnoughFloat","a","b","abs","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","htmlStatsData","StatData","pretty","f","expand","statList","FormulaText","modifiersKeys","modifierText","options","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_multi","electrocharged","superconduct_multi","superconduct","swirl_multi","swirl","shatter_multi","shattered","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","amp_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","defineProperty","configurable","enumerable","writable","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","initiated","characterDatabase","charIdIndex","isInvalid","getCharacterIdList","getIdNameList","dchar","removeItem","charid","unequipArtifactOnSlot","equipArtifactBuild","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","phy_dmg_bonus","ele_dmg_bonus","2","ArtifactSubStatsData","ArtifactSubstatsMinMax","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","getSubstatEfficiency","getArtifactEfficiency","errMsgs","some","currentNumOfRolls","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","maxPerRoll","getSubstatAllMax","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","icons","getSetEffectsObj","setEffects","artifactSetEffect","artArr","setNumKeys","charFinalStats","setEffectText","getSlotName","getSlotIcon","getSlotMainStatKeys","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","main","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","_createForOfIteratorHelper","allowArrayLike","it","F","n","done","_e","err","normalCompletion","didErr","step","next","_e2","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","Formulas","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","dependencyKeys","preFormulas","modifierFunc","initial","formula","reactionName","dmgKey","dmgName","str","atkTypeName","dmgModeName","ele_key","getLevelIndex","weaponKey","passiveName","passiveDescription","description","baseStats","sub","weaponType","getWeaponTypeName","GetFormulaDependency","dependency","Set","Proxy","get","prop","receiver","add","formulaKeyDependency","freeze","InsertDependencies","has","k"],"mappings":"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","file":"static/js/9.383adc94.chunk.js","sourcesContent":["import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst CustomFormControl = ({ float = false, placeholder, value, onValueChange, disabled, allowEmpty = false }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  let displayValue = value\r\n  if (allowEmpty) displayValue = typeof value === \"number\" ? value : \"\"\r\n  else displayValue = !value && focus ? \"\" : (value?.toString?.() || value)\r\n  const props = {\r\n    type: \"number\",\r\n    className: \"hide-appearance\",\r\n    placeholder,\r\n    value: displayValue,\r\n    disabled,\r\n    onChange: (e) => {\r\n      let value = e.target.value;\r\n      if (float) {\r\n        if (allowEmpty) value = value === \"\" ? null : (parseFloat(value) || 0)\r\n        else value = parseFloat(value) || 0\r\n      } else {\r\n        if (allowEmpty) value = value === \"\" ? null : (parseInt(value) || 0)\r\n        else value = parseInt(value) || 0\r\n      }\r\n      onValueChange?.(value);\r\n    },\r\n    onFocus: () => setFocus(true),\r\n    onBlur: () => setFocus(false),\r\n  }\r\n  return <FormControl {...props} aria-label=\"custom-input\" />\r\n}\r\nexport default CustomFormControl;","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\nimport { loadFromLocalStorage, saveToLocalStorage } from \"./Util/Util\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //this will only run if neither of the database has been initated.\r\n  const charDBJustPopualted = CharacterDatabase.populateDatebaseFromLocalStorage(),\r\n    artDBJustPopualted = ArtifactDatabase.populateDatebaseFromLocalStorage()\r\n  if (!charDBJustPopualted && !artDBJustPopualted) return\r\n  const dbVersion = getDatabaseVersion()\r\n  //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n  let arts = ArtifactDatabase.getArtifactDatabase();\r\n  Object.values(arts).forEach(art => {\r\n    let valid = true\r\n    if (art.location) {\r\n      const locationChar = CharacterDatabase.getCharacter(art.location)\r\n      if (locationChar) {\r\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\r\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\r\n          CharacterDatabase.equipArtifact(art.location, art)\r\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\r\n          art.location = \"\"\r\n          valid = false\r\n        }\r\n      } else {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (dbVersion < 1) {\r\n      //generate artifact efficiency again for artifacts\r\n      Artifact.substatsValidation(art)\r\n      valid = false\r\n\r\n      //there was a bug that saved the numStars as strings. convert to number.\r\n      if (typeof art.numStars === \"string\") {\r\n        art.numStars = parseInt(art.numStars)\r\n        valid = false\r\n      }\r\n\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (!valid)\r\n      ArtifactDatabase.updateArtifact(art)\r\n  })\r\n\r\n  let chars = CharacterDatabase.getCharacterDatabase();\r\n  Object.values(chars).forEach(character => {\r\n    let valid = true;\r\n    //verify character database equipment validity\r\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\r\n      const equippedArt = ArtifactDatabase.getArtifact(artid)\r\n      if (equippedArt && equippedArt.location !== character.id) //the artifact doesnt have the right location...\r\n        ArtifactDatabase.moveToNewLocation(artid, character.id)\r\n      if (!equippedArt) {\r\n        valid = false\r\n        character.equippedArtifacts[slotKey] = \"\"\r\n      }\r\n    })\r\n\r\n    if (dbVersion < 1) {\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      }) ?? []\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n    }\r\n    if (!valid) {\r\n      CharacterDatabase.updateCharacter(character)\r\n    }\r\n  })\r\n  setDatabaseVersion(1)\r\n}\r\nconst getDatabaseVersion = (defVal = 0) =>\r\n  parseInt(loadFromLocalStorage(\"db_ver\") ?? defVal)\r\n\r\nconst setDatabaseVersion = (version) =>\r\n  saveToLocalStorage(\"db_ver\", version)\r\n\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_character_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Character from \"../Character/Character\";\r\nimport CharacterDatabase from \"../Character/CharacterDatabase\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n    <Dropdown.Item key={id} onClick={() => onSelect(id)}>\r\n      <span>\r\n        <div className=\"mb-n2\"><b>{Character.getName(char.characterKey)}</b></div>\r\n        <small>{char.name}</small>\r\n      </span>\r\n    </Dropdown.Item>)\r\n}\r\nfunction CharacterNameDisplay({ id, flat = false }) {\r\n  let locationChar = CharacterDatabase.getCharacter(id)\r\n  if (locationChar) {\r\n    if (flat) {\r\n      return <span><b>{Character.getName(locationChar.characterKey)}</b> <small>{locationChar?.name}</small></span>\r\n    } else {\r\n      return <span>\r\n        <div className=\"mb-n2\"><b>{Character.getName(locationChar.characterKey)}</b></div>\r\n        <small>{locationChar.name}</small>\r\n      </span>\r\n    }\r\n\r\n  } else {\r\n    return <b>Inventory</b>\r\n  }\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n  CharacterNameDisplay\r\n};\r\n\r\n","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport { CharacterNameDisplay, CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, artifactObj, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId && !artifactObj) return null;\r\n  let art = artifactObj ? artifactObj : ArtifactDatabase.getArtifact(artifactId);\r\n  if (!art) return null;\r\n  let { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location = \"\", lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  let mainStatLevel = assumeFull ? numStars * 4 : level\r\n  let assFullColor = assumeFull && level !== numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\r\n  let artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\r\n  const equipOnChar = (charId) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charId)\r\n    forceUpdate?.()\r\n  }\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\r\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let numRolls = stat?.rolls?.length || 0\r\n          let efficiency = stat?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge percent={currentEfficiency} valid={artifactValid}>\r\n          {currentEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge percent={maximumEfficiency} valid={artifactValid}>\r\n          {maximumEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\"><CharacterNameDisplay id={location} /></Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar()}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={cid => equipOnChar(cid)} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><span><CharacterNameDisplay id={location} /></span></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={location}\r\n                  style={location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    art.lock = !lock\r\n                    ArtifactDatabase.updateArtifact(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(lock || location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import { Col } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\nfunction DisplayStats({ statKey, character, build, editable, ...otherProps }) {\r\n  let buildVal = build?.finalStats?.[statKey] || 0\r\n  let statVal, buildDiff = null\r\n  if (typeof buildVal === \"string\") {\r\n    statVal = <span>{buildVal}</span>\r\n  } else {\r\n    let originalVal = Character.getStatValueWithOverride(character, statKey)\r\n    if (statKey === \"hp_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"hp_base\")\r\n    else if (statKey === \"def_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"def_base\")\r\n    else if (statKey === \"atk_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"atk_character_base\") + Character.getStatValueWithOverride(character, \"atk_weapon\")\r\n\r\n    let diff = buildVal - originalVal\r\n    let diffText = (diff?.toFixed?.(Stat.fixedUnit(statKey)) || diff) + Stat.getStatUnit(statKey)\r\n    if (diff < 0) buildDiff = <span className=\"text-success\">{diffText}</span>\r\n    else if (diff > 0) buildDiff = <span className=\"text-success\"> +{diffText}</span>\r\n\r\n    if (originalVal || !diff) statVal = <span className={editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}>{(originalVal?.toFixed?.(Stat.fixedUnit(statKey)) || originalVal) + Stat.getStatUnit(statKey)}</span>\r\n  }\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className=\"float-right text-right\">{statVal}{buildDiff}</span>\r\n  </Col>\r\n}\r\nconst DisplayNewBuildDiff = ({ statKey, character, equippedBuild, newBuild, editable, ...otherProps }) => {\r\n  let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right ${editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed?.(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed?.(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nexport {\r\n  DisplayStats,\r\n  DisplayNewBuildDiff,\r\n}","import React, { useState } from 'react';\r\nimport { Accordion, Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { DisplayNewBuildDiff, DisplayStats } from '../../Components/StatDisplay';\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from '../../StatDependency';\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState }) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(characterKey)\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  const formulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, statKeys), build?.finalStats?.modifiers)\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Calculations`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ?\r\n                  statKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                  statKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {formulaKeys.map(key => <Col key={key} xs={12} className=\"mt-2\">\r\n                    <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                      <Card.Header className=\"p-2\">\r\n                        {Stat.printStat(key, build.finalStats)}\r\n                      </Card.Header>\r\n                      <Card.Body className=\"p-2\">\r\n                        <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  )}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n              {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Artifact.getSlotKeys().map(slotKey =>\r\n            build.artifactIds[slotKey] ? <Col sm={6} lg={4} key={build.artifactIds[slotKey]} className=\"mb-2\">\r\n              <ArtifactCard artifactId={build.artifactIds[slotKey]} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onValueChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport CustomFormControl from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport { DisplayNewBuildDiff, DisplayStats } from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"char_level\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <CustomFormControl onValueChange={(val) => setOverride(\"char_level\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"char_level\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction StatItem({ statKey, val }) {\r\n  if (!statKey) return null\r\n  return <Col xs={12} lg={6} className=\"px-3\">\r\n    <span><b>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</b></span>\r\n    <span className={`float-right text-right text-${Stat.getStatVariant(statKey)}`} >{val?.toFixed?.(Stat.fixedUnit(statKey)) || val}{Stat.getStatUnit(statKey)}</span>\r\n  </Col>\r\n}\r\nfunction WeaponStatsCard({ title, stats = {}, finalStats = {} }) {\r\n  if (Object.keys(stats ?? {}).length === 0) return null\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <Card.Body className=\"py-2 px-0\"><Row>\r\n      {Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? <React.Fragment key={key} >{Object.entries(val ?? {}).map(([mkey, modifier]) =>\r\n        <StatItem key={mkey} statKey={mkey} val={Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0)} />)}</React.Fragment>\r\n        : <StatItem key={key} statKey={key} val={val} />)}\r\n    </Row></Card.Body>\r\n  </Card>\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon = {} }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex, undefined)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum, undefined)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinement</span>\r\n                </Dropdown.ItemText>\r\n                <Dropdown.Divider />\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats, character)}</p>\r\n            <WeaponStatsCard title={\"Main Stats\"} stats={{ atk: weaponDisplayMainVal, [subStatKey]: weaponDisplaySubVal }} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Bonus Stats\"} stats={weaponBonusStats} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Conditional Stats\"} stats={conditionalStats} finalStats={build?.finalStats} />\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  let { editable, character, character: { compareAgainstEquipped }, setOverride, equippedBuild, newBuild } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  let additionalKeys = [\"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const displayStatKeys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp_base\", \"hp\", \"hp_\", \"atk_character_base\", \"atk\", \"atk_\", \"def_base\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\", \"skill_crit_rate\", \"burst_crit_rate\", \"all_dmg_bonus\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const isPercentSpecialStatSelect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                <CustomFormControl float={isPercentSpecialStatSelect}\r\n                  placeholder=\"Character Special Stat\"\r\n                  value={Character.getStatValueWithOverride(character, \"specializedStatVal\")}\r\n                  onValueChange={(value) => setOverride(\"specializedStatVal\", value)} />\r\n                {isPercentSpecialStatSelect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              displayStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              displayStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              otherStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ?\r\n            miscStatkeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n            miscStatkeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n","import { faCheckSquare, faQuestionCircle, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, ToggleButton, ToggleButtonGroup, Tooltip } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation, dmgMode }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  //choose which one to display stats for\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button\r\n        // style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"norm_atk\", \"char_atk\", \"plunge\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(Character.getTalentStatKey(\"char_atk\", character, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    //show elemental interactions\r\n    keys.push(...(ElementToReactionKeys[Character.getElementalKey(characterKey)] || []))\r\n    let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n\r\n    //search for dependency\r\n    return Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, keys), build?.finalStats?.modifiers)\r\n  }\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <Accordion>\r\n        <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Options</span>\r\n                <small>Expand below to edit enemy details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ToggleButtonGroup type=\"radio\" value={dmgMode} name=\"dmgOptions\" onChange={(dmgMode) => setState({ dmgMode })}>\r\n                  <ToggleButton value=\"avg_dmg\">Avg. DMG</ToggleButton>\r\n                  <ToggleButton value=\"dmg\">Normal Hit, No Crit</ToggleButton>\r\n                  <ToggleButton value=\"crit_dmg\">Crit Hit DMG</ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Row className=\"mb-2\"><Col>\r\n                <Button variant=\"warning\" >\r\n                  <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                    To get the specific resistance values of enemies, please visit the wiki.\r\n                  </a>\r\n                </Button >\r\n              </Col></Row>\r\n              <Row>\r\n                <Col xs={12} xl={6} className=\"mb-2\">\r\n                  <StatInput\r\n                    name={<b>Enemy Level</b>}\r\n                    value={Character.getStatValueWithOverride(character, \"enemy_level\")}\r\n                    placeholder={Stat.getStatNameRaw(\"enemy_level\")}\r\n                    defaultValue={Character.getBaseStatValue(character, \"enemy_level\")}\r\n                    onValueChange={(val) => setOverride(\"enemy_level\", val)}\r\n                  />\r\n                </Col>\r\n                {[\"physical\", ...Character.getElementalKeys()].map(eleKey => {\r\n                  let statKey = eleKey === \"physical\" ? \"enemy_phy_res\" : `${eleKey}_enemy_ele_res`\r\n                  let immunityStatKey = eleKey === \"physical\" ? \"enemy_phy_immunity\" : `${eleKey}_enemy_ele_immunity`\r\n                  let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                  return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                        <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                      name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                      value={Character.getStatValueWithOverride(character, statKey)}\r\n                      placeholder={Stat.getStatNameRaw(statKey)}\r\n                      defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                      onValueChange={(val) => setOverride(statKey, val)}\r\n                      disabled={elementImmunity}\r\n                    />\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Formulas</span>\r\n                <small>Expand below to see calculation details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n              <Row>\r\n                {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\r\n                  <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                    <Card.Header className=\"p-2\">\r\n                      {Stat.printStat(key, build.finalStats)}\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-2\">\r\n                      <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                )}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {Character.getTalent(characterKey, \"sprint\", false) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_dmg: SuperConductCard,\r\n  electrocharged_dmg: ElectroChargedCard,\r\n  overloaded_dmg: OverloadedCard,\r\n  swirl_dmg: SwirlCard,\r\n  shatter_dmg: ShatteredCard,\r\n  crystalize_dmg: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey, reactionMode = \"none\" }, newBuild, equippedBuild, setState }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let charEleKey = Character.getElementalKey(characterKey)\r\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shatter_dmg\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shatter_dmg\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row>\r\n        <Col ><Row className=\"mb-n2\">\r\n          {eleInterArr.map(key => {\r\n            let Ele = ReactionComponents[key]\r\n            if (!Ele) return null\r\n            let val = build?.finalStats?.[key]\r\n            val = val?.toFixed?.(Stat.fixedUnit(key)) || val\r\n            return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele value={val} /></Col>\r\n          })}\r\n        </Row></Col>\r\n        <Col xs=\"auto\">\r\n          {[\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup\r\n            type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setState({ reactionMode: val === \"none\" ? null : val })}>\r\n            <ToggleButton className=\"p-2\" value={\"none\"}> <h6>No Elemental</h6> <h6>Interactions</h6></ToggleButton >\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Vaporize(Pyro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Pyro)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"hydro\" && <ToggleButton className=\"p-2\" value={\"hydro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Vaporize(Hydro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"cryo\" && <ToggleButton className=\"p-2\" value={\"cryo_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Cryo)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n          </ToggleButtonGroup>}\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"superconduct_dmg\")}</h5>\r\n    <h4 className=\"text-superconduct mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"electrocharged_dmg\")}</h5>\r\n    <h4 className=\"text-electrocharged mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"overloaded_dmg\")}</h5>\r\n    <h4 className=\"text-overloaded mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction SwirlCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"swirl_dmg\")}</h5>\r\n    <h4 className=\"text-swirl mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ value }) {\r\n  let information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"shatter_dmg\")}</h5>\r\n    <h4 className=\"text-shatter mb-0\">\r\n      <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"crystalize_dmg\")}</h5>\r\n    <h4 className=\"text-crystalize mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\n\r\nfunction modifiersToFields(modifiers, finalStats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    value: Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0),\r\n    basicVal: <span>{Object.entries(modifier ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, finalStats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey)\r\n  }))\r\n}\r\nfunction statsToFields(stats, finalStats = {}) {\r\n  return Object.entries(stats).map(([statKey, statVal]) =>\r\n    statKey === \"modifiers\" ? modifiersToFields(statVal, finalStats) : { text: Stat.getStatName(statKey), variant: Stat.getStatVariant(statKey), value: statVal, fixed: Stat.fixedUnit(statKey) }\r\n  ).flat()\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let { talentLvlKey = undefined, levelBoost = 0 } = Character.getTalentLevelKey(character, talentKey, constellation, true)\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n  if (typeof talentLvlKey === \"number\") {\r\n    if (editable) {\r\n      let setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        let talentLevelKeys = state.talentLevelKeys || {}\r\n        talentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  const statsEle = talentStats && <Row><Col>\r\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {statsToFields(talentStats, build?.finalStats).map((field, i) =>\r\n          <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            let conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            conditionalFields = [...Character.getTalentConditionalFields(conditional, conditionalNum, []), ...statsToFields(conditionalStats, build?.finalStats)]\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Col xs={12}>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i} index={i} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        }\r\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\r\n          <div className=\"mb-2\">{talentText}</div>\r\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n        </Col>{conditionalEle}</Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay({ character, character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldVariant = field.variant || \"\"\r\n  if (typeof fieldVariant === \"function\")\r\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldBasic = field.basicVal\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats, character)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = field.value ? field.value : field.finalVal\r\n  if (typeof fieldVal === \"function\")\r\n    fieldVal = fieldVal?.(talentLvlKey, build.finalStats, character)\r\n  let fixedVal = field.fixed || 0\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.finalVal\r\n\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats, character)?.toFixed?.(fixedVal))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) || fieldVal}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}\r\n","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterId)\r\n      this.state = CharacterDatabase.getCharacter(props.characterId)\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    dmgMode: \"dmg\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey), reactionMode: null, autoInfused: false })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.characterId && this.state.id !== this.props.characterId)\r\n      this.setState(CharacterDatabase.getCharacter(this.props.characterId))\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"char_level\")}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && (Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\"}>Talents {(Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\" && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} setState={this.setSetState} setOverride={this.setOverride} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import { Container } from \"react-bootstrap\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport '../StatDependency'\r\nexport default function TestDisplay(props) {\r\n  DatabaseInitAndVerify()\r\n  return <Container>\r\n    <CharacterDisplayCard editable characterId={\"character_2\"} />\r\n  </Container>\r\n}\r\n","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\nimport { GetDependencies } from \"../StatDependency\"\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    if (skillKey === \"phy\") return `phy_${dmgMode}`\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    if (skillKey === \"phy\") return \"physical\"\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_character_base\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats.modifiers)(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of Object.entries(val)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of Object.entries(modifier))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\r\n  })\r\n\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_character_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey, constellation)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    Character.getTalentStatsAll(characterKey, constellation, ascension).forEach(s => this.mergeStats(initialStats, s))\r\n    \r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\r\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\r\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\r\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\r\n    let formulaKeys = Object.keys(FormulaText)\r\n    let modifiersKeys = Object.keys(modifiers)\r\n    return statList.filter(statKey => formulaKeys.includes(statKey) || modifiersKeys.includes(statKey))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_base: (o) => <span>{f(o, \"atk_character_base\")} + {f(o, \"atk_weapon\")} </span>,\r\n  atk_final: (o) => <span>{f(o, \"atk_base\")} * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"plunge_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"plunge_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"plunge_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"plunge_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  amp_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(o, \"ele_mas\")} * exp^(-0.000505 * {f(o, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_plunge_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_plunge_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_plunge_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `plunge_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\r\nimport ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 1: [24, 30], 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 1: [2], 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 1: [2], 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 1: [1.5, 1.8], 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 1: [5, 6], 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 1: [1.3, 1.6], 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 1: [0.8, 1], 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 1: [1.6, 1.9], 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubStatsData).map(([key, obj]) =>\r\n  [key, {\r\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\r\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\r\n  }]))\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactSubstatsMinMax,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nconst maxStar = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubstatAllMax = (statKey, numStars = maxStar, defVal = 0) => ArtifactSubstatsMinMax?.[statKey]?.max[numStars] ?? defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, rolls = []) => {\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let max = this.getSubstatAllMax(subStatKey) * len\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      if (rollArr.length > 1) substat.rollArr = rollArr\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(maxStar);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let statKeys = substats.filter(({ key }) => key).map(({ key }) => key)\r\n    let maxPerRoll = 100 * Math.max(...(statKeys.length === 4 ? statKeys : Object.keys(ArtifactSubstatsMinMax)).map(\r\n      key => Artifact.getSubstatAllMax(key, numStars) / Artifact.getSubstatAllMax(key)\r\n    ))\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * maxPerRoll) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect).length > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n      if (Object.keys(condStats).length > 0) {\r\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n        Object.entries(condStats).forEach(([statKey, value]) =>\r\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\r\n      }\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else if (!conditionalNum && index < 0) { //nothing to change\r\n      return conditionals\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => artifactDatabase[id] || null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_character_base: { name: \"ATK\", pretty: \"ATK Character Base\" },\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  plunge_atk_dmg_bonus: { name: \"Plunging Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  all_dmg_bonus: { name: \"All DMG Bonus\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elemental Mastery Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elemental Mastery Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elemental Mastery Multiplier Z\", unit: \"multi\" },\r\n  amp_reaction_base_multi: { name: \"Amplifying Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_base: (s) => s.atk_character_base + s.atk_weapon,\r\n  atk_final: (s) => s.atk_base * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.atk_final * s.plunge_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  plunge_crit_dmg: (s) => s.plunge_dmg * s.crit_dmg_multi,\r\n  plunge_avg_dmg: (s) => s.plunge_dmg * s.crit_multi,\r\n  plunge_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.plunge_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  amp_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s.atk_final * s[`${ele}_plunge_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_plunge_dmg`] * s.crit_dmg_multi,\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_plunge_dmg`] * s.crit_multi,\r\n  plunge_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.plunge_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.all_dmg_bonus) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, modifiers = {}) {\r\n  const preFormulas = dependencyKeys.map(key => {\r\n    if (modifiers[key]) {\r\n      const modifierFunc = (stat, initial) => Object.entries(modifiers[key]).reduce((accu, [mkey, multiplier]) =>\r\n        accu + stat[mkey] * multiplier, initial)\r\n      if (key in Formulas) return [key, (s) => modifierFunc(s, Formulas[key](s))]\r\n      return [key, (s) => modifierFunc(s, s[key] ?? StatData?.[key]?.default ?? 0)]\r\n    } else {\r\n      if (key in Formulas) return [key, Formulas[key]]\r\n      return [key, (s) => (s[key] ?? StatData?.[key]?.default ?? 0)]\r\n    }\r\n  })\r\n  return stat => preFormulas.forEach(([key, formula]) => stat[key] = formula(stat))\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  PreprocessFormulas,\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  console.log(formulaKeyDependency)\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key) &&\r\n      console.error(\"Formula\", `\"${formulaKey}\"`, \"has dependency with key\", `\"${key}\"`, \"that does not Exist in StatData.\"))\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n}\r\n"],"sourceRoot":""}