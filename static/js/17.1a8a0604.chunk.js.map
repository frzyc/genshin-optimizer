{"version":3,"sources":["Components/CustomFormControl.js","Artifact/ArtifactCard.js","Artifact/PercentBadge.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/StatDisplay.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js"],"names":["FloatFormControl","placeholder","value","onValueChange","disabled","useState","focus","setFocus","type","className","toString","onChange","e","target","parseFloat","onFocus","onBlur","IntFormControl","parseInt","ArtifactCard","artifactId","artifactObj","forceUpdate","onEdit","onDelete","assumeFull","art","ArtifactDatabase","getArtifact","setKey","slotKey","numStars","level","mainStatKey","substats","location","lock","currentEfficiency","maximumEfficiency","locationChar","CharacterDatabase","getCharacter","locationName","name","mainStatLevel","assFullColor","mainStatVal","Artifact","getMainStatValue","Stat","getStatUnit","artifactValid","every","sstat","key","rolls","length","equipOnChar","charId","equipArtifactOnChar","border","bg","text","Header","xs","md","src","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Body","Title","getSetName","stars","getStatName","map","stat","i","numRolls","efficiency","effOpacity","statName","variant","toFixed","style","opacity","percent","valid","Footer","Toggle","size","Menu","Item","onClick","Object","entries","getCharacterDatabase","id","char","placement","overlay","pointerEvents","updateArtifact","icon","faLock","faLockOpen","Boolean","faEdit","faTrashAlt","PercentBadge","props","children","badgeColor","isNaN","Math","floor","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","React","createElement","TabContext","Provider","SelectableContext","TabContent","forwardRef","_ref","ref","bsPrefix","_ref$as","as","Component","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","_extends","classNames","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","in","displayName","Tab","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","Error","Container","Content","Pane","createContext","useAccordionToggle","contextEventKey","AccordionContext","AccordionToggle","accordionOnClick","AccordionCollapse","Collapse","Children","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","_objectWithoutProperties","source","excluded","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","DisplayStats","statVal","statKey","character","build","editable","otherProps","buildVal","finalStats","buildDiff","originalVal","Character","getStatValueWithOverride","diff","diffText","fixedUnit","hasOverride","Col","StatIconEle","DisplayNewBuildDiff","equippedBuild","newBuild","unit","CharacterArtifactPane","characterKey","compareAgainstEquipped","artifactConditionals","setState","showOther","setShowOther","artifactsAssumeFull","statKeys","getDisplayStatKeys","displayStatProps","displayNewBuildProps","formulaDependencyKeys","Set","GetDependencyStats","formulaOverrides","flat","formulaKeys","FormulaText","filter","includes","Row","Card","Button","xl","printStat","printFormula","equipArtifacts","artifactIds","Alert","sm","lg","getSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","conditionalNum","conditional","getSetEffectConditional","ConditionalsUtil","getConditionalNum","srcKey","srcKey2","getConditionalStats","forEach","val","conditionalElement","ConditionalSelector","setConditional","cnum","state","setStateArtifactConditional","defEle","Badge","getSetEffectText","getSlotKeys","StatInput","prependEle","defaultValue","restProps","InputGroup","Prepend","Text","Append","undefined","OverlayTrigger","Tooltip","faUndo","CharacterOverviewPane","constellation","setOverride","setConstellation","editLevel","setEditLevel","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","getName","Image","Assets","elements","weaponTypes","getStar","colored","clamp","getLevel","levelKey","faSave","getConstellationName","Array","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","refineIndex","conditionalStats","getWeaponConditionalStat","getWeaponConditional","conditionalEle","faQuoteLeft","getWeaponImg","getWeaponRarity","DropdownButton","title","getWeaponName","reverse","star","arr","Fragment","Dropdown","ItemText","getWeaponsOfType","rarity","weaponObj","Divider","getLevelName","LevelNameData","faGavel","getWeaponPassiveDescription","getWeaponDescription","editingOther","SetEditingOther","additionalKeys","displayStatKeys","push","editStatKeys","otherStatKeys","getElementalKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","CharacterSpecializedStatKey","getStatNameRaw","CharacterTalentPane","dmgMode","ascension","getAscension","skillDisplayProps","ContextAwareToggle","callback","currentEventKey","decoratedOnClick","expanded","faWindowMinimize","faWindowMaximize","ToggleButtonGroup","ToggleButton","href","rel","eleKey","immunityStatKey","elementImmunity","faCheckSquare","faSquare","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","autoInfused","statsDisplayKeys","ReactionDisplay","tKey","tText","SkillDisplayCard","talentKey","subtitle","asc","enabled","onClickTitle","ReactionComponents","superconduct_dmg","electro","cryo","electrocharged_dmg","hydro","overloaded_dmg","pyro","swirl_dmg","anemo","shatter_dmg","information","faQuestionCircle","crystalize_dmg","geo","reactionMode","charEleKey","eleInterArr","ElementToReactionKeys","Ele","talentLimits","header","getTalentLevelKey","talentLvlKey","levelBoost","infuseBtn","getElementalName","tLvl","talentLevelKeys","statsEle","talentStats","getTalentStats","ListGroup","index","getTalentImg","getTalentName","Subtitle","getTalentDocument","section","talentText","fields","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","fromEntries","getTalentConditionalFields","condition","condField","FieldDisplay","field","fieldText","fieldVariant","fieldBasic","basicVal","fieldVal","finalVal","round","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","child","CharacterDisplayCard","forceUpdateComponent","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","DatabaseInitAndVerify","characterId","getInitialState","Promise","all","getCharacterDataImport","getWeaponDataImport","getDataImport","then","deepClone","updateCharacter","addCharacter","footer","onClose","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","faTimes","defaultActiveKey","Nav","Link","getCDataObj","talent","skill","initialState","equippedArtifacts","WeaponLevelKeys","auto","burst"],"mappings":"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","file":"static/js/17.1a8a0604.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst FloatFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseFloat(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\n\r\nconst IntFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseInt(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\nexport {\r\n  FloatFormControl,\r\n  IntFormControl\r\n}","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, artifactObj, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId && !artifactObj) return null;\r\n  let art = artifactObj ? artifactObj : ArtifactDatabase.getArtifact(artifactId);\r\n  if (!art) return null;\r\n  let { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location, lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  let locationChar = CharacterDatabase.getCharacter(location)\r\n  let locationName = locationChar ? locationChar.name : \"Inventory\"\r\n  let mainStatLevel = assumeFull ? numStars * 4 : level\r\n  let assFullColor = assumeFull && level !== numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\r\n  let artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\r\n  const equipOnChar = (charId) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charId)\r\n    forceUpdate?.()\r\n  }\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\r\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let numRolls = stat?.rolls?.length || 0\r\n          let efficiency = stat?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge percent={currentEfficiency} valid={artifactValid}>\r\n          {currentEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge percent={maximumEfficiency} valid={artifactValid}>\r\n          {maximumEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\">{locationName}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar()}>Inventory</Dropdown.Item>\r\n              {Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n                <Dropdown.Item key={id} onClick={() => equipOnChar(id)}>\r\n                  {char.name}\r\n                </Dropdown.Item>)}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><span>Location: {locationName}</span></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={location}\r\n                  style={location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    lock = !lock\r\n                    ArtifactDatabase.updateArtifact(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(lock || location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Col } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\nfunction DisplayStats({ statKey, character, build, editable, ...otherProps }) {\r\n  let buildVal = build?.finalStats?.[statKey] || 0\r\n  let statVal, buildDiff = null\r\n  if (typeof buildVal === \"string\") {\r\n    statVal = <span>{buildVal}</span>\r\n  } else {\r\n    let originalVal = Character.getStatValueWithOverride(character, statKey)\r\n    if (statKey === \"hp_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"hp_base\")\r\n    else if (statKey === \"def_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"def_base\")\r\n    else if (statKey === \"atk_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"atk_base\") + Character.getStatValueWithOverride(character, \"atk_weapon\")\r\n\r\n    let diff = buildVal - originalVal\r\n    let diffText = (diff?.toFixed?.(Stat.fixedUnit(statKey)) || diff) + Stat.getStatUnit(statKey)\r\n    if (diff < 0) buildDiff = <span className=\"text-success\">{diffText}</span>\r\n    else if (diff > 0) buildDiff = <span className=\"text-success\"> +{diffText}</span>\r\n\r\n    if (originalVal || !diff) statVal = <span className={editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}>{(originalVal?.toFixed?.(Stat.fixedUnit(statKey)) || originalVal) + Stat.getStatUnit(statKey)}</span>\r\n  }\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className=\"float-right text-right\">{statVal}{buildDiff}</span>\r\n  </Col>\r\n}\r\nconst DisplayNewBuildDiff = ({ statKey, character, equippedBuild, newBuild, editable, ...otherProps }) => {\r\n  let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right ${editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed?.(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed?.(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nexport {\r\n  DisplayStats,\r\n  DisplayNewBuildDiff,\r\n}","import React, { useState } from 'react';\r\nimport { Accordion, Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { DisplayNewBuildDiff, DisplayStats } from '../../Components/StatDisplay';\r\nimport Stat, { FormulaText } from \"../../Stat\";\r\nimport { GetDependencyStats } from '../../StatDependency';\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState }) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(characterKey)\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  const formulaDependencyKeys = [...new Set(statKeys.map(key => GetDependencyStats(key, build.finalStats?.formulaOverrides)).flat())]\r\n  const formulaKeys = Object.keys(FormulaText).filter(key => formulaDependencyKeys.includes(key))\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Calculations`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ?\r\n                  statKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                  statKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {formulaKeys.map(key => <Col key={key} xs={12} className=\"mt-2\">\r\n                    <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                      <Card.Header className=\"p-2\">\r\n                        {Stat.printStat(key, build.finalStats)}\r\n                      </Card.Header>\r\n                      <Card.Body className=\"p-2\">\r\n                        <small>{Stat.printFormula(key, build.finalStats, build.finalStats.formulaOverrides, false)}</small>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  )}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n              {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Artifact.getSlotKeys().map(slotKey =>\r\n            build.artifactIds[slotKey] ? <Col sm={6} lg={4} key={build.artifactIds[slotKey]} className=\"mb-2\">\r\n              <ArtifactCard artifactId={build.artifactIds[slotKey]} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport { DisplayNewBuildDiff, DisplayStats } from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"char_level\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={(val) => setOverride(\"char_level\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"char_level\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats, character)}</p>\r\n            <Row>\r\n              <Col xs={12} md={6}>\r\n                <h5>ATK: {weaponDisplayMainVal}</h5>\r\n              </Col>\r\n              {subStatKey && <Col xs={12} md={6}>\r\n                <h5>{Stat.getStatName(subStatKey)}: {weaponDisplaySubVal}{Stat.getStatUnit(subStatKey)}</h5>\r\n              </Col>}\r\n            </Row>\r\n            {<Row>\r\n              {(conditionalStats || weaponBonusStats) && <Col xs={12}><h6 className=\"mb-0\">Bonus Stats:</h6></Col>}\r\n              {weaponBonusStats && Object.entries(weaponBonusStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"bonu\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n              {conditionalStats && Object.entries(conditionalStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"cond\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n            </Row>}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  let { editable, character, character: { compareAgainstEquipped }, setOverride, equippedBuild, newBuild } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  let additionalKeys = [\"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const displayStatKeys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp_base\", \"hp\", \"hp_\", \"atk_base\", \"atk\", \"atk_\", \"def_base\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\", \"skill_crit_rate\", \"burst_crit_rate\", \"all_dmg_bonus\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              displayStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              displayStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              otherStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ?\r\n            miscStatkeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n            miscStatkeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n","import { faCheckSquare, faQuestionCircle, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, ToggleButton, ToggleButtonGroup, Tooltip } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat, { FormulaText } from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { GetDependencyStats } from \"../../StatDependency\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation, dmgMode }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  //choose which one to display stats for\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button\r\n        // style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"norm_atk\", \"char_atk\", \"plunge\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(Character.getTalentStatKey(\"char_atk\", character, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    //search for dependency, and flatten, isolate unique keys\r\n    keys = [...new Set(keys.map(key => GetDependencyStats(key, build.finalStats?.formulaOverrides)).flat())]\r\n    //return keys that are part of the formula text, in the order in which they appear.\r\n    return Object.keys(FormulaText).filter(key => keys.includes(key))\r\n  }\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <Accordion>\r\n        <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Options</span>\r\n                <small>Expand below to edit enemy details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ToggleButtonGroup type=\"radio\" value={dmgMode} name=\"dmgOptions\" onChange={(dmgMode) => setState({ dmgMode })}>\r\n                  <ToggleButton value=\"avg_dmg\">Avg. DMG</ToggleButton>\r\n                  <ToggleButton value=\"dmg\">Normal Hit, No Crit</ToggleButton>\r\n                  <ToggleButton value=\"crit_dmg\">Crit Hit DMG</ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Row className=\"mb-2\"><Col>\r\n                <Button variant=\"warning\" >\r\n                  <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                    To get the specific resistance values of enemies, please visit the wiki.\r\n                  </a>\r\n                </Button >\r\n              </Col></Row>\r\n              <Row>\r\n                <Col xs={12} xl={6} className=\"mb-2\">\r\n                  <StatInput\r\n                    name={<b>Enemy Level</b>}\r\n                    value={Character.getStatValueWithOverride(character, \"enemy_level\")}\r\n                    placeholder={Stat.getStatNameRaw(\"enemy_level\")}\r\n                    defaultValue={Character.getBaseStatValue(character, \"enemy_level\")}\r\n                    onValueChange={(val) => setOverride(\"enemy_level\", val)}\r\n                  />\r\n                </Col>\r\n                {[\"physical\", ...Character.getElementalKeys()].map(eleKey => {\r\n                  let statKey = eleKey === \"physical\" ? \"enemy_phy_res\" : `${eleKey}_enemy_ele_res`\r\n                  let immunityStatKey = eleKey === \"physical\" ? \"enemy_phy_immunity\" : `${eleKey}_enemy_ele_immunity`\r\n                  let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                  return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                        <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                      name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                      value={Character.getStatValueWithOverride(character, statKey)}\r\n                      placeholder={Stat.getStatNameRaw(statKey)}\r\n                      defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                      onValueChange={(val) => setOverride(statKey, val)}\r\n                      disabled={elementImmunity}\r\n                    />\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Formulas</span>\r\n                <small>Expand below to see calculation details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n              <Row>\r\n                {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\r\n                  <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                    <Card.Header className=\"p-2\">\r\n                      {Stat.printStat(key, build.finalStats)}\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-2\">\r\n                      <small>{Stat.printFormula(key, build.finalStats, build.finalStats.formulaOverrides, false)}</small>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                )}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_dmg: SuperConductCard,\r\n  electrocharged_dmg: ElectroChargedCard,\r\n  overloaded_dmg: OverloadedCard,\r\n  swirl_dmg: SwirlCard,\r\n  shatter_dmg: ShatteredCard,\r\n  crystalize_dmg: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey, reactionMode = \"none\" }, newBuild, equippedBuild, setState }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let charEleKey = Character.getElementalKey(characterKey)\r\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shatter_dmg\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shatter_dmg\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row>\r\n        <Col ><Row className=\"mb-n2\">\r\n          {eleInterArr.map(key => {\r\n            let Ele = ReactionComponents[key]\r\n            if (!Ele) return null\r\n            let val = build?.finalStats?.[key]\r\n            val = val?.toFixed?.(Stat.fixedUnit(key)) || val\r\n            return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele value={val} /></Col>\r\n          })}\r\n        </Row></Col>\r\n        <Col xs=\"auto\">\r\n          {[\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup\r\n            type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setState({ reactionMode: val === \"none\" ? null : val })}>\r\n            <ToggleButton className=\"p-2\" value={\"none\"}> <h6>No Elemental</h6> <h6>Interactions</h6></ToggleButton >\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Vaporize(Pyro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Pyro)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"hydro\" && <ToggleButton className=\"p-2\" value={\"hydro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Melt(Pyro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"cryo\" && <ToggleButton className=\"p-2\" value={\"cryo_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Pyro)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n          </ToggleButtonGroup>}\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"superconduct_dmg\")}</h5>\r\n    <h4 className=\"text-superconduct mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"electrocharged_dmg\")}</h5>\r\n    <h4 className=\"text-electrocharged mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"overloaded_dmg\")}</h5>\r\n    <h4 className=\"text-overloaded mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction SwirlCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"swirl_dmg\")}</h5>\r\n    <h4 className=\"text-swirl mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ value }) {\r\n  let information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"shatter_dmg\")}</h5>\r\n    <h4 className=\"text-shatter mb-0\">\r\n      <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"crystalize_dmg\")}</h5>\r\n    <h4 className=\"text-crystalize mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let { talentLvlKey = undefined, levelBoost = 0 } = Character.getTalentLevelKey(character, talentKey, constellation, true)\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n  if (typeof talentLvlKey === \"number\") {\r\n    if (editable) {\r\n      let setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        let talentLevelKeys = state.talentLevelKeys || {}\r\n        talentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let statsEle = null\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  if (talentStats) {\r\n    statsEle = <Row><Col>\r\n      <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n        <ListGroup className=\"text-white\" variant=\"flush\">\r\n          {Object.entries(talentStats).map(([statKey, statVal], index) =>\r\n            <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n              <div>\r\n                <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n              </div>\r\n            </ListGroup.Item>\r\n          )}\r\n        </ListGroup>\r\n      </Card>\r\n    </Col></Row>\r\n  }\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalStats = {}\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            //filter out formulaOverrides from rendering\r\n            conditionalStats = Object.fromEntries(Object.entries(conditionalStats).filter(([key, _]) => key !== \"formulaOverrides\"))\r\n            conditionalFields = Character.getTalentConditionalFields(conditional, conditionalNum, [])\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Col xs={12}>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {Object.entries(conditionalStats).map(([statKey, statVal], index) =>\r\n                  <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n                    <div>\r\n                      <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                      <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n                    </div>\r\n                  </ListGroup.Item>\r\n                )}\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i + (conditionalStats?.length || 0)} index={i + (conditionalStats?.length || 0)} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        }\r\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\r\n          <div className=\"mb-2\">{talentText}</div>\r\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n        </Col>{conditionalEle}</Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay(props) {\r\n  let { character, character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldVariant = field.variant || \"\"\r\n  if (typeof fieldVariant === \"function\")\r\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldBasic = field.basicVal\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats, character)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = field.value ? field.value : field.finalVal\r\n  if (typeof fieldVal === \"function\") {\r\n    fieldVal = fieldVal?.(talentLvlKey, build.finalStats, character)\r\n  }\r\n  if (typeof fieldVal === \"number\")\r\n    fieldVal = Math.round(fieldVal)\r\n\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.finalVal\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats, character)?.toFixed?.(0))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterId)\r\n      this.state = CharacterDatabase.getCharacter(props.characterId)\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    dmgMode: \"dmg\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey), reactionMode: null, autoInfused: false })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.characterId && this.state.id !== this.props.characterId)\r\n      this.setState(CharacterDatabase.getCharacter(this.props.characterId))\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"char_level\")}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && (Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\"}>Talents {(Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\" && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} setState={this.setSetState} setOverride={this.setOverride} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n"],"sourceRoot":""}