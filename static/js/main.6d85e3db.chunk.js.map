{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Home","lazy","ArtifactDisplay","CharacterDisplay","BuildDisplay","FAQ","App","className","id","Navbar","bg","variant","expand","Brand","as","Link","to","Nav","process","OutboundLink","eventLabel","target","href","icon","faPaypal","faPatreon","faDiscord","fallback","Container","Card","text","Body","Spinner","animation","path","component","Row","Col","xs","version","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactGA","initialize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d85e3db.chunk.js","sourcesContent":["import { faDiscord, faPatreon, faPaypal } from '@fortawesome/free-brands-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { Suspense, lazy } from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport { Link, Route, Switch, HashRouter } from \"react-router-dom\";\r\nimport './App.scss';\r\nimport './Assets/Image.scss'\r\nimport { version } from \"../package.json\"\r\nimport ReactGA from 'react-ga';\r\n\r\nconst Home = lazy(() => import('./Home/HomeDisplay'))\r\nconst ArtifactDisplay = lazy(() => import('./Artifact/ArtifactDisplay'))\r\nconst CharacterDisplay = lazy(() => import('./Character/CharacterDisplay'))\r\nconst BuildDisplay = lazy(() => import('./Build/BuildDisplay'))\r\nconst FAQ = lazy(() => import('./FAQ/FAQDisplay'))\r\nconst TestDisplay = lazy(() => import('./TestPage/TestDisplay'))\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <div className=\"h-100 d-flex flex-column\">\r\n        <div id=\"content\" className=\"flex-grow-1\">\r\n          <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n            <Navbar.Brand as={Link} to=\"/\">Genshin Optimizer</Navbar.Brand>\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link as={Link} to=\"/artifact\">\r\n                Artifacts</Nav.Link>\r\n              <Nav.Link as={Link} to=\"/character\">Characters</Nav.Link>\r\n              <Nav.Link as={Link} to=\"/build\">Builds</Nav.Link>\r\n              <Nav.Link as={Link} to=\"/faq\">FAQ</Nav.Link>\r\n              {process.env.NODE_ENV === \"development\" && <Nav.Link as={Link} to=\"/test\">TEST</Nav.Link>}\r\n            </Nav>\r\n            <Nav>\r\n              <ReactGA.OutboundLink eventLabel=\"paypal\" target=\"_blank\">\r\n                <Nav.Link href={process.env.REACT_APP_PAYPAL_LINK} target=\"_blank\" >\r\n                  <span><FontAwesomeIcon icon={faPaypal} className=\"fa-fw\" /> PayPal</span>\r\n                </Nav.Link>\r\n              </ReactGA.OutboundLink>\r\n              <ReactGA.OutboundLink eventLabel=\"patreon\" target=\"_blank\">\r\n                <Nav.Link href={process.env.REACT_APP_PATREON_LINK} target=\"_blank\" >\r\n                  <span><FontAwesomeIcon icon={faPatreon} className=\"fa-fw\" /> Patreon</span>\r\n                </Nav.Link>\r\n              </ReactGA.OutboundLink>\r\n              <ReactGA.OutboundLink eventLabel=\"discord\" target=\"_blank\">\r\n                <Nav.Link href={process.env.REACT_APP_DISCORD_LINK} target=\"_blank\" >\r\n                  <span><FontAwesomeIcon icon={faDiscord} className=\"fa-fw\" /> Discord</span>\r\n                </Nav.Link>\r\n              </ReactGA.OutboundLink>\r\n            </Nav>\r\n          </Navbar>\r\n          <Suspense fallback={<Container>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2\">\r\n              <Card.Body>\r\n                <h3 className=\"text-center\">Loading... <Spinner animation=\"border\" variant=\"primary\" /></h3>\r\n              </Card.Body>\r\n            </Card></Container>}>\r\n            <Switch>\r\n              <Route path=\"/artifact\" component={ArtifactDisplay} />\r\n              <Route path=\"/character\" component={CharacterDisplay} />\r\n              <Route path=\"/build\" component={BuildDisplay} />\r\n              <Route path=\"/faq\" component={FAQ} />\r\n              {process.env.NODE_ENV === \"development\" && <Route path=\"/test\" component={TestDisplay} />}\r\n              <Route path=\"/\" component={Home} />\r\n              {/* <Route exact path=\"/\" component={Home} /> */}\r\n            </Switch>\r\n          </Suspense>\r\n        </div>\r\n        <Nav id=\"footer\" className=\"bg-dark\">\r\n          <Row className=\"w-100 ml-0 mr-0 mb-2 text-light d-flex justify-content-between\">\r\n            <Col xs={\"auto\"}>\r\n              <span > <small>Genshin Optimizer is not affiliated with or endorsed by miHoYo. </small></span>\r\n            </Col>\r\n            <Col xs={\"auto\"}>\r\n              <span  ><small > Genshin Optimizer Ver:{version} </small></span>\r\n            </Col>\r\n          </Row>\r\n        </Nav>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport ReactGA from 'react-ga';\r\nReactGA.initialize(process.env.REACT_APP_GA_TRACKINGID, {\r\n  // debug: process.env.NODE_ENV === \"development\"\r\n});\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}