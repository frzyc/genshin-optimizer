{"version":3,"sources":["Components/StarDisplay.js","Data/WeaponData.js","Data/ArtifactData.js","DatabaseUtil.js","Data/CharacterData.js","Components/StatIcon.js","Assets/Weapons/Swords/Swords.js","Assets/Weapons/Swords/Weapon_Dull_Blade.png","Assets/Weapons/Swords/Weapon_Silver_Sword.png","Assets/Weapons/Swords/Weapon_Cool_Steel.png","Assets/Weapons/Swords/Weapon_Dark_Iron_Sword.png","Assets/Weapons/Swords/Weapon_Fillet_Blade.png","Assets/Weapons/Swords/Weapon_Harbinger_of_Dawn.png","Assets/Weapons/Swords/Weapon_Skyrider_Sword.png","Assets/Weapons/Swords/Weapon_Traveler's_Handy_Sword.png","Assets/Weapons/Swords/Weapon_Blackcliff_Longsword.png","Assets/Weapons/Swords/Weapon_Favonius_Sword.png","Assets/Weapons/Swords/Weapon_Iron_Sting.png","Assets/Weapons/Swords/Weapon_Lion's_Roar.png","Assets/Weapons/Swords/Weapon_Prototype_Rancour.png","Assets/Weapons/Swords/Weapon_Royal_Longsword.png","Assets/Weapons/Swords/Weapon_Sacrificial_Sword.png","Assets/Weapons/Swords/Weapon_The_Alley_Flash.png","Assets/Weapons/Swords/Weapon_The_Black_Sword.png","Assets/Weapons/Swords/Weapon_The_Flute.png","Assets/Weapons/Swords/Weapon_Sword_of_Descension.png","Assets/Weapons/Swords/festering_fang.png","Assets/Weapons/Swords/Weapon_Aquila_Favonia.png","Assets/Weapons/Swords/Weapon_Skyward_Blade.png","Assets/Weapons/Swords/summit_shaper.png","Assets/Weapons/Claymores/Claymores.js","Assets/Weapons/Claymores/Weapon_Waster_Greatsword.png","Assets/Weapons/Claymores/Weapon_Old_Merc's_Pal.png","Assets/Weapons/Claymores/Weapon_Bloodtainted_Greatsword.png","Assets/Weapons/Claymores/Weapon_Debate_Club.png","Assets/Weapons/Claymores/Weapon_Ferrous_Shadow.png","Assets/Weapons/Claymores/Weapon_Quartz.png","Assets/Weapons/Claymores/Weapon_Skyrider_Greatsword.png","Assets/Weapons/Claymores/Weapon_White_Iron_Greatsword.png","Assets/Weapons/Claymores/Weapon_Blackcliff_Slasher.png","Assets/Weapons/Claymores/Weapon_Favonius_Greatsword.png","Assets/Weapons/Claymores/Weapon_Lithic_Blade.png","Assets/Weapons/Claymores/Weapon_Prototype_Aminus.png","Assets/Weapons/Claymores/Weapon_Rainslasher.png","Assets/Weapons/Claymores/Weapon_Royal_Greatsword.png","Assets/Weapons/Claymores/Weapon_Serpent_Spine.png","Assets/Weapons/Claymores/Weapon_The_Bell.png","Assets/Weapons/Claymores/Weapon_Whiteblind.png","Assets/Weapons/Claymores/Weapon_Sacrificial_Greatsword.png","Assets/Weapons/Claymores/snow_tombed_starsilver.png","Assets/Weapons/Claymores/Weapon_Skyward_Pride.png","Assets/Weapons/Claymores/Weapon_Wolf's_Gravestone.png","Assets/Weapons/Claymores/Weapon_The_Unforged.png","Assets/Weapons/Polearms/Polearms.js","Assets/Weapons/Polearms/Weapon_Beginner's_Protector.png","Assets/Weapons/Polearms/Weapon_Iron_Point.png","Assets/Weapons/Polearms/Weapon_Black_Tassel.png","Assets/Weapons/Polearms/Weapon_Halberd.png","Assets/Weapons/Polearms/Weapon_White_Tassel.png","Assets/Weapons/Polearms/Weapon_Blackcliff_Pole.png","Assets/Weapons/Polearms/Weapon_Crescent_Pike.png","Assets/Weapons/Polearms/Weapon_Deathmatch.png","Assets/Weapons/Polearms/Weapon_Dragon's_Bane.png","Assets/Weapons/Polearms/Weapon_Lithic_Spear.png","Assets/Weapons/Polearms/Weapon_Prototype_Grudge.png","Assets/Weapons/Polearms/Weapon_Favonius_Lance.png","Assets/Weapons/Polearms/Weapon_Royal_Spear.png","Assets/Weapons/Polearms/dragonspine_spear.png","Assets/Weapons/Polearms/Weapon_Vortex_Vanquisher.png","Assets/Weapons/Polearms/Weapon_Primordial_Jade_Winged-Spear.png","Assets/Weapons/Polearms/Weapon_Skyward_Spine.png","Assets/Weapons/Bows/Bows.js","Assets/Weapons/Bows/Weapon_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Seasoned_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Ebony_Bow.png","Assets/Weapons/Bows/Weapon_Messenger.png","Assets/Weapons/Bows/Weapon_Raven_Bow.png","Assets/Weapons/Bows/Weapon_Recurve_Bow.png","Assets/Weapons/Bows/Weapon_Sharpshooter's_Oath.png","Assets/Weapons/Bows/Weapon_Slingshot.png","Assets/Weapons/Bows/Weapon_The_Stringless.png","Assets/Weapons/Bows/Weapon_Alley_Hunter.png","Assets/Weapons/Bows/Weapon_Blackcliff_Warbow.png","Assets/Weapons/Bows/Weapon_Compound_Bow.png","Assets/Weapons/Bows/Weapon_Favonius_Warbow.png","Assets/Weapons/Bows/Weapon_Prototype_Crescent.png","Assets/Weapons/Bows/Weapon_Royal_Bow.png","Assets/Weapons/Bows/Weapon_Rust.png","Assets/Weapons/Bows/Weapon_Sacrificial_Bow.png","Assets/Weapons/Bows/Weapon_The_Viridescent_Hunt.png","Assets/Weapons/Bows/Weapon_Skyward_Harp.png","Assets/Weapons/Bows/Weapon_Amos'_Bow.png","Assets/Weapons/Bows/dreams_of_dragonfell.png","Assets/Weapons/Catalysts/Catalysts.js","Assets/Weapons/Catalysts/Weapon_Apprentice's_Notes.png","Assets/Weapons/Catalysts/Weapon_Pocket_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Amber_Catalyst.png","Assets/Weapons/Catalysts/Weapon_Emerald_Orb.png","Assets/Weapons/Catalysts/Weapon_Magic_Guide.png","Assets/Weapons/Catalysts/Weapon_Otherworldly_Story.png","Assets/Weapons/Catalysts/Weapon_Thrilling_Tales_of_Dragon_Slayers.png","Assets/Weapons/Catalysts/Weapon_Twin_Nephrite.png","Assets/Weapons/Catalysts/Weapon_Blackcliff_Amulet.png","Assets/Weapons/Catalysts/Weapon_Favonius_Codex.png","Assets/Weapons/Catalysts/Weapon_Mappa_Mare.png","Assets/Weapons/Catalysts/Weapon_Prototype_Malice.png","Assets/Weapons/Catalysts/Weapon_Royal_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Sacrificial_Fragments.png","Assets/Weapons/Catalysts/Weapon_Solar_Pearl.png","Assets/Weapons/Catalysts/Weapon_The_Widsith.png","Assets/Weapons/Catalysts/Weapon_Wine_and_Song.png","Assets/Weapons/Catalysts/Weapon_Eye_of_Perception.png","Assets/Weapons/Catalysts/Weapon_Frostbearer.png","Assets/Weapons/Catalysts/Weapon_Lost_Prayer_to_the_Sacred_Winds.png","Assets/Weapons/Catalysts/Weapon_Skyward_Atlas.png","Assets/Weapons/Catalysts/Weapon_Memory_of_Dust.png","Assets/Assets.js","Assets/Weapons/Weapons.js","Assets/Element_Anemo.png","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","../node_modules/react-bootstrap/esm/Badge.js","Character/CharacterCard.js","Character/CharacterDisplay.js","Character/Character.js","Util/Util.js","Stat.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Artifact/ArtifactDatabase.js","Util/ConditionalsUtil.js","Data/ElementalData.js","StatData.js","Weapon/Weapon.js"],"names":["StarIcon","icon","faStar","Stars","props","className","colored","stars","Array","keys","map","_","i","WeaponData","WeaponDataImport","then","imp","default","WeaponLevelKeys","LevelNameData","WeaponTypeData","sword","claymore","catalyst","bow","polearm","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","Object","ElementalData","forEach","key","push","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","hp","atk","hp_","atk_","def_","phy_dmg_bonus","ele_dmg_bonus","ele_mas","ener_rech","crit_rate","crit_dmg","heal_bonu","2","ArtifactSubStatsData","def","ArtifactSlotsData","flower","name","stats","plume","sands","goblet","circlet","DatabaseInitAndVerify","localStorage","removeItem","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","values","art","valid","location","getCharacter","keyMapping","setKey","mainStatKey","endsWith","replace","updateArtifact","chars","getCharacterDatabase","character","equippedArtifacts","fromEntries","entries","slotKey","artid","getArtifact","undefined","artifactConditionals","filter","cond","srcKey","srcKey2","characterKey","levelKey","constellation","talentConditionals","ascension","Character","getAscension","talentKey","conditionalKey","talentLvlKey","getTalentLevelKey","getTalentConditional","dmgMode","updateCharacter","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","stam","CharacterSpecializedStatKey","StatIcon","hp_base","faTint","hp_final","atk_base","faFistRaised","atk_final","def_base","faShieldAlt","def_final","faMagic","faDice","faDiceD20","faSync","faFirstAid","StatIconEle","statKey","DullBlade","SilverSword","CoolSteel","DarkIronSword","FilletBlade","HarbingerOfDawn","SkyriderSword","TravelersHandySword","BlackcliffLongsword","FavoniusSword","IronSting","LionsRoar","PrototypeRancour","RoyalLongsword","SacrificialSword","TheAlleyFlash","TheBlackSword","TheFlute","SwordOfDescension","FesteringDesire","AquilaFavonia","SkywardBlade","SummitShaper","WasterGreatsword","OldMercsPal","BloodtaintedGreatsword","DebateClub","FerrousShadow","Quartz","SkyriderGreatsword","WhiteIronGreatsword","BlackcliffSlasher","FavoniusGreatsword","LithicBlade","PrototypeAminus","Rainslasher","RoyalGreatsword","SerpentSpine","TheBell","Whiteblind","SacrificialGreatsword","SnowTombedStarsilver","SkywardPride","WolfsGravestone","TheUnforged","polearms","BeginnersProtector","IronPoint","BlackTassel","Halberd","WhiteTassel","BlackcliffPole","CrescentPike","Deathmatch","DragonsBane","LithicSpear","PrototypeGrudge","FavoniusLance","RoyalSpear","DragonspineSpear","VortexVanquisher","PrimordialJadeWingedSpear","SkywardSpine","bows","HuntersBow","SeasonedHuntersBow","EbonyBow","Messenger","RavenBow","RecurveBow","SharpshootersOath","Slingshot","TheStringless","AlleyHunter","BlackcliffWarbow","CompoundBow","FavoniusWarbow","PrototypeCrescent","RoyalBow","Rust","SacrificialBow","TheViridescentHunt","SkywardHarp","AmosBow","DreamsOfDragonfell","catalysts","ApprenticesNotes","PocketGrimoire","AmberCatalyst","EmeraldOrb","MagicGuide","OtherworldlyStory","ThrillingTalesOfDragonSlayers","TwinNephrite","BlackcliffAgate","FavoniusCodex","MappaMare","PrototypeMalice","RoyalGrimoire","SacrificialFragments","SolarPearl","TheWidsith","WineAndSong","EyeOfPerception","Frostbearer","LostPrayerToTheSacredWinds","SkywardAtlas","MemoryOfDust","Assets","weapons","swords","claymores","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","resin","fragile","condensed","exp_books","advice","wit","experience","Badge","React","forwardRef","_ref","ref","bsPrefix","variant","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","CharacterCard","useReducer","x","forceUpdate","useEffect","Promise","all","getCharacterDataImport","Weapon","getWeaponDataImport","Artifact","getArtifactDataImport","characterId","onEdit","onDelete","build","calculateBuild","setToSlots","weapon","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","weaponName","getWeaponName","weaponMainVal","getWeaponMainStatValWithOverride","weaponSubKey","getWeaponSubStatKey","weaponSubVal","getWeaponSubStatValWithOverride","weaponLevelName","getLevelName","weaponPassiveName","getWeaponPassiveName","cardClassName","bg","text","Header","header","xs","size","onClick","faEdit","faTrashAlt","Body","style","cursor","src","getThumb","getStar","thumbnail","getName","getStatValueWithOverride","refineIndex","Stat","getStatName","getStatUnit","getArtifactSetEffects","arr","artifactSetName","getArtifactSetName","highestNum","Math","max","unit","statVal","finalStats","toFixed","fixedUnit","footer","Footer","Link","to","pathname","selectedCharacterId","CharacterDisplayCardPromise","CharacterDisplayCard","lazy","CharacterDisplay","deleteCharacter","id","removeCharacter","editCharacter","setState","charIdToEdit","showEditor","scrollRef","current","scrollIntoView","behavior","cancelEditCharacter","state","ReactGA","pageview","this","createRef","charIdList","getCharacterIdList","Suspense","fallback","editable","onClose","lg","md","faPlus","Error","moveToNewLocation","removeCharacterById","getBaseStatValue","defVal","getSpecializedStatKey","getSpeicalizedStatVal","getLevel","includes","characterObj","getCDataObj","baseStat","getIndexFromlevelkey","charKey","getElementalName","elementalKey","getAllCharacterKeys","star","getElementalKeys","getConstellationName","constellationName","getTitles","titles","getlevelKeys","getlevelNames","indexOf","getSpecializedStat","specializeStat","value","thumbImg","getCard","cardImg","getTalentImg","talent","img","getConstellationImg","constIndex","getTalentName","getTalentLevelBoost","talents","talentBoost","boostEntry","find","withBoost","talentLevelKeys","levelBoost","clamp","getTalentDocument","document","getTalentFields","fields","getTalentStats","getTalentStatsAll","statsArr","doc","section","tempCond","conditional","getTalentConditionalStats","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","val","getTalentConditionalFields","isAutoElemental","isAutoInfusable","auto","infusable","getTalentStatKey","skillKey","elemental","autoInfused","eleKey","hasOverride","baseStatOverrides","equipArtifacts","artifactIds","artIdsOnCharacter","artIdsNotOnCharacter","getArtifactSlotKeys","artNotOnChar","artOnChar","notCharLoc","equipArtifact","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","charAndWeapon","artifactSetEffectsStats","getArtifactSetEffectsStats","deepClone","getMainStatValue","numStars","substats","substat","stat","setNumKey","condStats","getArtifactConditionalStats","AttachLazyFormulas","statKeys","char_ele_key","overrides","hasOwnProperty","specialStatKey","specializedStatVal","addStatsObj","formulaOverrides","weaponStats","subKey","subVal","bonusStats","getWeaponBonusStat","conditionalStats","getWeaponConditionalStat","getRandomElementFromArray","array","floor","random","length","getRandomIntInclusive","min","ceil","loadFromLocalStorage","data","getItem","JSON","parse","saveToLocalStorage","obj","setItem","stringify","closeEnoughFloat","a","b","abs","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","f","options","expand","FormulaText","statName","getStatNamePretty","statUnit","StatData","html","pretty","getStatNameRaw","getStatNameWithPercent","getStatVariant","printStat","printFormula","printOverrideFormula","overrideKey","OverrideFormulasText","formulaText","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","eleFormulaText","ele","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","defineProperty","configurable","enumerable","writable","noelle_burst_atk","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","_createForOfIteratorHelper","allowArrayLike","it","F","s","n","done","e","_e","err","normalCompletion","didErr","step","next","_e2","initiated","characterDatabase","charIdIndex","isInvalid","char","addCharacter","dchar","getArtifactIDFromSlot","charid","unequipArtifactOnSlot","equipArtifactBuild","SlotIcon","faBahai","faFeatherAlt","faHourglass","faWineGlass","faCrown","ArtifactBase","rollData","float","roll","maxNumRoll","round","rollOption","sum","reduce","accu","v","reverse","parseFloat","isNaN","msg","isFloat","getSubstatRollData","rolls","getRolls","totalAllowableRolls","efficiency","currentEfficiency","maximumEfficiency","subStatValidations","validateSubStat","some","currentNumOfRolls","cur","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","totalPossbleUpgrade","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getArtifactSetsByMaxStarEntries","setobj","rarity","getArtifactPieceName","pieces","getArtifactPieceIcon","icons","getArtifactSetEffectsObj","sets","getArtifactSlotName","getArtifactSlotIcon","getArtifactSlotNameWithIcon","slotIcon","getRarityArr","getMainStatKeys","main","getSubStatKeys","numberOfSubstatUnlocked","subStatKey","getArtifactSets","getArtifactSetNumStats","getArtifactSetEffectConditional","artifactSetEffect","artArr","parseInt","setNumKeys","getArtifactSetEffectText","charFinalStats","setEffectText","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","hasSetEffect","setEffectObj","getConditionalNum","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","conditionals","srcKeyObj","index","findIndex","splice","newCond","fieldName","selectedConditionalNum","selectedConditional","curConditional","maxStack","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","dmg","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","overloaded_dmg","electro_charged_dmg","superconduct_dmg","burning_dmg","vaporize_dmg","melt_dmg","swirl_dmg","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","Formulas","eleFormulas","str","ele_key","OverrideFormulas","formula","dependency","formulaKeys","formulaOverride","overrideFormulaKey","get","getLevelIndex","weaponKey","getWeaponRarity","passiveName","getWeaponPassiveDescription","passiveDescription","getWeaponDescription","description","getWeaponConditional","getWeaponMainStatVal","baseStats","getWeaponSubStatVal","sub","getWeaponsOfType","weaponType","getWeaponTypeName","weaponObj","overrideMainVal","overrideSubVal"],"mappings":"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CvCC,SkBzCa,IAA0B,6ClB0CvCC,kBmB1Ca,IAA0B,uDnB2CvCC,gBoB3Ca,IAA0B,2CpB4CvCC,cqB5Ca,IAA0B,kDrB6CvCC,asB7Ca,IAA0B,iDtB8CvCC,auB9Ca,IAA0B,2CC8C1B3I,EAxBE,CACf4I,iBCvBa,IAA0B,qDDwBvCC,YExBa,IAA0B,kDFyBvCC,uBGzBa,IAA0B,2DH0BvCC,WI1Ba,IAA0B,+CJ2BvCC,cK3Ba,IAA0B,kDL4BvCC,OM5Ba,IAA0B,0CN6BvCC,mBO7Ba,IAA0B,uDP8BvCC,oBQ9Ba,IAA0B,yDR+BvCC,kBS/Ba,IAA0B,sDTgCvCC,mBUhCa,IAA0B,uDViCvCC,YWjCa,IAA0B,gDXkCvCC,gBYlCa,IAA0B,oDZmCvCC,YanCa,IAA0B,+CboCvCC,gBcpCa,IAA0B,oDdqCvCC,aerCa,IAA0B,iDfsCvCC,QgBtCa,IAA0B,4ChBuCvCC,WiBvCa,IAA0B,8CjBwCvCC,sBkBxCa,IAA0B,0DlByCvCC,qBmBzCa,IAA0B,mDnB0CvCC,aoB1Ca,IAA0B,iDpB2CvCC,gBqB3Ca,IAA0B,qDrB4CvCC,YsB5Ca,IAA0B,iDCoC1BC,EAnBE,CACfC,mBClBa,IAA0B,wDDmBvCC,UEnBa,IAA0B,8CFoBvCC,YGpBa,IAA0B,gDHqBvCC,QIrBa,IAA0B,2CJsBvCC,YKtBa,IAA0B,gDLuBvCC,eMvBa,IAA0B,mDNwBvCC,aOxBa,IAA0B,iDPyBvCC,WQzBa,IAA0B,8CR0BvCC,YS1Ba,IAA0B,iDT2BvCC,YU3Ba,IAA0B,gDV4BvCC,gBW5Ba,IAA0B,oDX6BvCC,cY7Ba,IAA0B,kDZ8BvCC,Wa9Ba,IAA0B,+Cb+BvCC,iBc/Ba,IAA0B,8CdgCvCC,iBehCa,IAA0B,qDfiCvCC,0BgBjCa,IAA0B,gEhBkCvCC,aiBlCa,IAA0B,kDC4C1BC,EAvBF,CACXC,WCtBa,IAA0B,gDDuBvCC,mBEvBa,IAA0B,yDFwBvCC,SGxBa,IAA0B,6CHyBvCC,UIzBa,IAA0B,6CJ0BvCC,SK1Ba,IAA0B,6CL2BvCC,WM3Ba,IAA0B,+CN4BvCC,kBO5Ba,IAA0B,uDP6BvCC,UQ7Ba,IAA0B,6CR8BvCC,cS9Ba,IAA0B,kDT+BvCC,YU/Ba,IAA0B,gDVgCvCC,iBWhCa,IAA0B,qDXiCvCC,YYjCa,IAA0B,gDZkCvCC,ealCa,IAA0B,mDbmCvCC,kBcnCa,IAA0B,sDdoCvCC,SepCa,IAA0B,6CfqCvCC,KgBrCa,IAA0B,wChBsCvCC,eiBtCa,IAA0B,mDjBuCvCC,mBkBvCa,IAA0B,wDlBwCvCC,YmBxCa,IAA0B,gDnByCvCC,QoBzCa,IAA0B,6CpB0CvCC,mBqB1Ca,IAA0B,kDC8C1BC,EAxBG,CAChBC,iBCvBa,IAA0B,sDDwBvCC,eExBa,IAA0B,mDFyBvCC,cGzBa,IAA0B,kDH0BvCC,WI1Ba,IAA0B,+CJ2BvCC,WK3Ba,IAA0B,+CL4BvCC,kBM5Ba,IAA0B,sDN6BvCC,8BO7Ba,IAA0B,qEP8BvCC,aQ9Ba,IAA0B,iDR+BvCC,gBS/Ba,IAA0B,qDTgCvCC,cUhCa,IAA0B,kDViCvCC,UWjCa,IAA0B,8CXkCvCC,gBYlCa,IAA0B,oDZmCvCC,canCa,IAA0B,kDboCvCC,qBcpCa,IAA0B,yDdqCvCC,WerCa,IAA0B,+CfsCvCC,WgBtCa,IAA0B,+ChBuCvCC,YiBvCa,IAA0B,iDjBwCvCC,gBkBxCa,IAA0B,qDlByCvCC,YmBzCa,IAA0B,+CnB0CvCC,2BoB1Ca,IAA0B,mEpB2CvCC,aqB3Ca,IAA0B,iDrB4CvCC,asB5Ca,IAA0B,mDCwBrCC,EAAS,CACXC,QCpBW,+DACRC,GACAC,GACAlE,GACAkB,GACAsB,GDgBH2B,SAAU,CAAEC,ME1BC,IAA0B,0CF0BpBC,KG1BN,IAA0B,yCH0BdC,OI1BZ,IAA0B,2CJ0BNC,QK1BpB,IAA0B,4CL0BGC,IM1B7B,IAA0B,wCN0BQC,MO1BlC,IAA0B,0CP0BeC,KQ1BzC,IAA0B,0CR2BvCC,YAAa,CAAE3O,IS3BF,IAA0B,kDT2BnBD,SU3BP,IAA0B,uDV2BTD,SW3BjB,IAA0B,uDX2BCG,QY3B3B,IAA0B,sDZ2BUJ,Ma3BpC,IAA0B,qDb4BvC+O,MAAO,CACLC,Qc7BW,IAA0B,+Cd8BrCC,Ue9BW,IAA0B,kDfgCvCC,UAAW,CACTC,OgBjCW,IAA0B,mD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","file":"static/js/9.f664aa90.chunk.js","sourcesContent":["import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = (props) => <span className={props.colored ? \"text-5star\" : \"\"}>\r\n  {props.stars ? [...Array(props.stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport Character from \"./Character/Character\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //remove the old error/prone id lists, if it still exists\r\n  localStorage.removeItem(\"artifact_id_list\")\r\n  localStorage.removeItem(\"character_id_list\")\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  if (CharacterDatabase.populateDatebaseFromLocalStorage() |\r\n    ArtifactDatabase.populateDatebaseFromLocalStorage()) {\r\n    //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n    let arts = ArtifactDatabase.getArtifactDatabase();\r\n    Object.values(arts).forEach(art => {\r\n      let valid = true\r\n      if (art.location && !CharacterDatabase.getCharacter(art.location)) {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n      if (!valid)\r\n        ArtifactDatabase.updateArtifact(art)\r\n    })\r\n\r\n    let chars = CharacterDatabase.getCharacterDatabase();\r\n    Object.values(chars).forEach(character => {\r\n      let valid = true;\r\n      //verify character database equipment validity\r\n      let equippedArtifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([slotKey, artid]) => {\r\n        if (!ArtifactDatabase.getArtifact(artid)) {\r\n          valid = false\r\n          return [slotKey, undefined]\r\n        }\r\n        return [slotKey, artid]\r\n      }))\r\n      if (!valid)\r\n        character.equippedArtifacts = equippedArtifacts\r\n\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      if (character.artifactConditionals) character.artifactConditionals = character.artifactConditionals.filter(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for invalid conditionals from previous iterations where srcKey2 was not used.\r\n      let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n      let ascension = Character.getAscension(levelKey)\r\n      character.talentConditionals = talentConditionals.filter(cond => {\r\n        let { srcKey: talentKey, srcKey2: conditionalKey } = cond\r\n        let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n        let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n        if (!conditional) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n      if (!valid) {\r\n        CharacterDatabase.updateCharacter(character)\r\n      }\r\n    })\r\n  }\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import DullBlade from './Weapon_Dull_Blade.png'\r\nimport SilverSword from './Weapon_Silver_Sword.png'\r\nimport CoolSteel from './Weapon_Cool_Steel.png'\r\nimport DarkIronSword from './Weapon_Dark_Iron_Sword.png'\r\nimport FilletBlade from './Weapon_Fillet_Blade.png'\r\nimport HarbingerOfDawn from './Weapon_Harbinger_of_Dawn.png'\r\nimport SkyriderSword from './Weapon_Skyrider_Sword.png'\r\nimport TravelersHandySword from './Weapon_Traveler\\'s_Handy_Sword.png'\r\nimport BlackcliffLongsword from './Weapon_Blackcliff_Longsword.png'\r\nimport FavoniusSword from './Weapon_Favonius_Sword.png'\r\nimport IronSting from './Weapon_Iron_Sting.png'\r\nimport LionsRoar from './Weapon_Lion\\'s_Roar.png'\r\nimport PrototypeRancour from './Weapon_Prototype_Rancour.png'\r\nimport RoyalLongsword from './Weapon_Royal_Longsword.png'\r\nimport SacrificialSword from './Weapon_Sacrificial_Sword.png'\r\nimport TheAlleyFlash from './Weapon_The_Alley_Flash.png'\r\nimport TheBlackSword from './Weapon_The_Black_Sword.png'\r\nimport TheFlute from './Weapon_The_Flute.png'\r\nimport SwordOfDescension from './Weapon_Sword_of_Descension.png'\r\nimport FesteringDesire from './festering_fang.png'\r\nimport AquilaFavonia from './Weapon_Aquila_Favonia.png'\r\nimport SkywardBlade from './Weapon_Skyward_Blade.png'\r\nimport SummitShaper from './summit_shaper.png'\r\nconst sword = {\r\n  DullBlade,\r\n  SilverSword,\r\n  CoolSteel,\r\n  DarkIronSword,\r\n  FilletBlade,\r\n  HarbingerOfDawn,\r\n  SkyriderSword,\r\n  TravelersHandySword,\r\n  BlackcliffLongsword,\r\n  FavoniusSword,\r\n  IronSting,\r\n  LionsRoar,\r\n  PrototypeRancour,\r\n  RoyalLongsword,\r\n  SacrificialSword,\r\n  TheAlleyFlash,\r\n  TheBlackSword,\r\n  TheFlute,\r\n  SwordOfDescension,\r\n  FesteringDesire,\r\n  AquilaFavonia,\r\n  SkywardBlade,\r\n  SummitShaper,\r\n}\r\nexport default sword","export default __webpack_public_path__ + \"static/media/Weapon_Dull_Blade.f5de06e8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Silver_Sword.e2462179.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Cool_Steel.0c6a9897.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dark_Iron_Sword.8dce5b63.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Fillet_Blade.c8e8ab5f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Harbinger_of_Dawn.26da0d78.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Sword.80e60c22.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Traveler's_Handy_Sword.168a7842.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Longsword.522f4d19.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Sword.cb5df26b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Sting.9f4b4b01.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lion's_Roar.b0e78fa9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Rancour.64965f56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Longsword.5a57f015.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Sword.048703ab.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Alley_Flash.7528f5ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Black_Sword.3987a991.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Flute.82af0cbf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sword_of_Descension.eb67a1df.png\";","export default __webpack_public_path__ + \"static/media/festering_fang.38aa5200.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Aquila_Favonia.7c014114.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Blade.af22a740.png\";","export default __webpack_public_path__ + \"static/media/summit_shaper.5245335d.png\";","import WasterGreatsword from './Weapon_Waster_Greatsword.png'\r\nimport OldMercsPal from './Weapon_Old_Merc\\'s_Pal.png'\r\nimport BloodtaintedGreatsword from './Weapon_Bloodtainted_Greatsword.png'\r\nimport DebateClub from './Weapon_Debate_Club.png'\r\nimport FerrousShadow from './Weapon_Ferrous_Shadow.png'\r\nimport Quartz from './Weapon_Quartz.png'\r\nimport SkyriderGreatsword from './Weapon_Skyrider_Greatsword.png'\r\nimport WhiteIronGreatsword from './Weapon_White_Iron_Greatsword.png'\r\nimport BlackcliffSlasher from './Weapon_Blackcliff_Slasher.png'\r\nimport FavoniusGreatsword from './Weapon_Favonius_Greatsword.png'\r\nimport LithicBlade from './Weapon_Lithic_Blade.png'\r\nimport PrototypeAminus from './Weapon_Prototype_Aminus.png'\r\nimport Rainslasher from './Weapon_Rainslasher.png'\r\nimport RoyalGreatsword from './Weapon_Royal_Greatsword.png'\r\nimport SerpentSpine from './Weapon_Serpent_Spine.png'\r\nimport TheBell from './Weapon_The_Bell.png'\r\nimport Whiteblind from './Weapon_Whiteblind.png'\r\nimport SacrificialGreatsword from './Weapon_Sacrificial_Greatsword.png'\r\nimport SnowTombedStarsilver from './snow_tombed_starsilver.png'\r\nimport SkywardPride from './Weapon_Skyward_Pride.png'\r\nimport WolfsGravestone from './Weapon_Wolf\\'s_Gravestone.png'\r\nimport TheUnforged from './Weapon_The_Unforged.png'\r\nconst claymore = {\r\n  WasterGreatsword,\r\n  OldMercsPal,\r\n  BloodtaintedGreatsword,\r\n  DebateClub,\r\n  FerrousShadow,\r\n  Quartz,\r\n  SkyriderGreatsword,\r\n  WhiteIronGreatsword,\r\n  BlackcliffSlasher,\r\n  FavoniusGreatsword,\r\n  LithicBlade,\r\n  PrototypeAminus,\r\n  Rainslasher,\r\n  RoyalGreatsword,\r\n  SerpentSpine,\r\n  TheBell,\r\n  Whiteblind,\r\n  SacrificialGreatsword,\r\n  SnowTombedStarsilver,\r\n  SkywardPride,\r\n  WolfsGravestone,\r\n  TheUnforged,\r\n}\r\nexport default claymore","export default __webpack_public_path__ + \"static/media/Weapon_Waster_Greatsword.a411f34b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Old_Merc's_Pal.67aa1930.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Bloodtainted_Greatsword.eb68a62c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Debate_Club.be908652.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ferrous_Shadow.ef586057.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Quartz.d41c58b9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Greatsword.46e935cb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Iron_Greatsword.eda6295d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Slasher.4693af54.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Greatsword.bfd288be.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Blade.ab4d4f4f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Aminus.d2bf526a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rainslasher.664c61ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Greatsword.fbc5184a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Serpent_Spine.bb2831b5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Bell.3670f330.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Whiteblind.9c37b7dd.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Greatsword.1b0f0225.png\";","export default __webpack_public_path__ + \"static/media/snow_tombed_starsilver.23f56359.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Pride.66a1b3f7.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wolf's_Gravestone.032b607c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Unforged.f7762a2f.png\";","import BeginnersProtector from './Weapon_Beginner\\'s_Protector.png'\r\nimport IronPoint from './Weapon_Iron_Point.png'\r\nimport BlackTassel from './Weapon_Black_Tassel.png'\r\nimport Halberd from './Weapon_Halberd.png'\r\nimport WhiteTassel from './Weapon_White_Tassel.png'\r\nimport BlackcliffPole from './Weapon_Blackcliff_Pole.png'\r\nimport CrescentPike from './Weapon_Crescent_Pike.png'\r\nimport Deathmatch from './Weapon_Deathmatch.png'\r\nimport DragonsBane from './Weapon_Dragon\\'s_Bane.png'\r\nimport LithicSpear from './Weapon_Lithic_Spear.png'\r\nimport PrototypeGrudge from './Weapon_Prototype_Grudge.png'\r\nimport FavoniusLance from './Weapon_Favonius_Lance.png'\r\nimport RoyalSpear from './Weapon_Royal_Spear.png'\r\nimport DragonspineSpear from './dragonspine_spear.png'\r\nimport VortexVanquisher from './Weapon_Vortex_Vanquisher.png'\r\nimport PrimordialJadeWingedSpear from './Weapon_Primordial_Jade_Winged-Spear.png'\r\nimport SkywardSpine from './Weapon_Skyward_Spine.png'\r\nconst polearms = {\r\n  BeginnersProtector,\r\n  IronPoint,\r\n  BlackTassel,\r\n  Halberd,\r\n  WhiteTassel,\r\n  BlackcliffPole,\r\n  CrescentPike,\r\n  Deathmatch,\r\n  DragonsBane,\r\n  LithicSpear,\r\n  PrototypeGrudge,\r\n  FavoniusLance,\r\n  RoyalSpear,\r\n  DragonspineSpear,\r\n  VortexVanquisher,\r\n  PrimordialJadeWingedSpear,\r\n  SkywardSpine,\r\n}\r\nexport default polearms","export default __webpack_public_path__ + \"static/media/Weapon_Beginner's_Protector.19165915.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Point.8263916c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Black_Tassel.c3103e46.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Halberd.0044e214.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Tassel.a3cc9099.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Pole.1e15a879.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Crescent_Pike.9e473ddb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Deathmatch.9b0e6d8e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dragon's_Bane.7437cf28.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Spear.cfb11b6c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Grudge.64b3a263.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Lance.693335d4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Spear.99058465.png\";","export default __webpack_public_path__ + \"static/media/dragonspine_spear.bb785669.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Vortex_Vanquisher.efad8956.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Primordial_Jade_Winged-Spear.ea10bc42.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Spine.e81931a5.png\";","import HuntersBow from './Weapon_Hunter\\'s_Bow.png'\r\nimport SeasonedHuntersBow from './Weapon_Seasoned_Hunter\\'s_Bow.png'\r\nimport EbonyBow from './Weapon_Ebony_Bow.png'\r\nimport Messenger from './Weapon_Messenger.png'\r\nimport RavenBow from './Weapon_Raven_Bow.png'\r\nimport RecurveBow from './Weapon_Recurve_Bow.png'\r\nimport SharpshootersOath from './Weapon_Sharpshooter\\'s_Oath.png'\r\nimport Slingshot from './Weapon_Slingshot.png'\r\nimport TheStringless from './Weapon_The_Stringless.png'\r\nimport AlleyHunter from './Weapon_Alley_Hunter.png'\r\nimport BlackcliffWarbow from './Weapon_Blackcliff_Warbow.png'\r\nimport CompoundBow from './Weapon_Compound_Bow.png'\r\nimport FavoniusWarbow from './Weapon_Favonius_Warbow.png'\r\nimport PrototypeCrescent from './Weapon_Prototype_Crescent.png'\r\nimport RoyalBow from './Weapon_Royal_Bow.png'\r\nimport Rust from './Weapon_Rust.png'\r\nimport SacrificialBow from './Weapon_Sacrificial_Bow.png'\r\nimport TheViridescentHunt from './Weapon_The_Viridescent_Hunt.png'\r\nimport SkywardHarp from './Weapon_Skyward_Harp.png'\r\nimport AmosBow from './Weapon_Amos\\'_Bow.png'\r\nimport DreamsOfDragonfell from './dreams_of_dragonfell.png'\r\nconst bows = {\r\n  HuntersBow,\r\n  SeasonedHuntersBow,\r\n  EbonyBow,\r\n  Messenger,\r\n  RavenBow,\r\n  RecurveBow,\r\n  SharpshootersOath,\r\n  Slingshot,\r\n  TheStringless,\r\n  AlleyHunter,\r\n  BlackcliffWarbow,\r\n  CompoundBow,\r\n  FavoniusWarbow,\r\n  PrototypeCrescent,\r\n  RoyalBow,\r\n  Rust,\r\n  SacrificialBow,\r\n  TheViridescentHunt,\r\n  SkywardHarp,\r\n  AmosBow,\r\n  DreamsOfDragonfell,\r\n}\r\nexport default bows","export default __webpack_public_path__ + \"static/media/Weapon_Hunter's_Bow.2e941c96.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Seasoned_Hunter's_Bow.bc6a42aa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ebony_Bow.f89cc3cc.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Messenger.939170eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Raven_Bow.b88fe5c0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Recurve_Bow.bafcde86.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sharpshooter's_Oath.1d149cf5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Slingshot.d2eeb3eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Stringless.b718aa93.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Alley_Hunter.8cc323c2.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Warbow.098f24da.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Compound_Bow.a8457f4e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Warbow.19e98358.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Crescent.50a174b0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Bow.06fbac8b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rust.65b7af56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Bow.804b7a38.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Viridescent_Hunt.904062bf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Harp.6961093e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amos'_Bow.e97cd305.png\";","export default __webpack_public_path__ + \"static/media/dreams_of_dragonfell.8aaebb39.png\";","import ApprenticesNotes from './Weapon_Apprentice\\'s_Notes.png'\r\nimport PocketGrimoire from './Weapon_Pocket_Grimoire.png'\r\nimport AmberCatalyst from './Weapon_Amber_Catalyst.png'\r\nimport EmeraldOrb from './Weapon_Emerald_Orb.png'\r\nimport MagicGuide from './Weapon_Magic_Guide.png'\r\nimport OtherworldlyStory from './Weapon_Otherworldly_Story.png'\r\nimport ThrillingTalesOfDragonSlayers from './Weapon_Thrilling_Tales_of_Dragon_Slayers.png'\r\nimport TwinNephrite from './Weapon_Twin_Nephrite.png'\r\nimport BlackcliffAgate from './Weapon_Blackcliff_Amulet.png'\r\nimport FavoniusCodex from './Weapon_Favonius_Codex.png'\r\nimport MappaMare from './Weapon_Mappa_Mare.png'\r\nimport PrototypeMalice from './Weapon_Prototype_Malice.png'\r\nimport RoyalGrimoire from './Weapon_Royal_Grimoire.png'\r\nimport SacrificialFragments from './Weapon_Sacrificial_Fragments.png'\r\nimport SolarPearl from './Weapon_Solar_Pearl.png'\r\nimport TheWidsith from './Weapon_The_Widsith.png'\r\nimport WineAndSong from './Weapon_Wine_and_Song.png'\r\nimport EyeOfPerception from './Weapon_Eye_of_Perception.png'\r\nimport Frostbearer from './Weapon_Frostbearer.png'\r\nimport LostPrayerToTheSacredWinds from './Weapon_Lost_Prayer_to_the_Sacred_Winds.png'\r\nimport SkywardAtlas from './Weapon_Skyward_Atlas.png'\r\nimport MemoryOfDust from './Weapon_Memory_of_Dust.png'\r\nconst catalysts = {\r\n  ApprenticesNotes,\r\n  PocketGrimoire,\r\n  AmberCatalyst,\r\n  EmeraldOrb,\r\n  MagicGuide,\r\n  OtherworldlyStory,\r\n  ThrillingTalesOfDragonSlayers,\r\n  TwinNephrite,\r\n  BlackcliffAgate,\r\n  FavoniusCodex,\r\n  MappaMare,\r\n  PrototypeMalice,\r\n  RoyalGrimoire,\r\n  SacrificialFragments,\r\n  SolarPearl,\r\n  TheWidsith,\r\n  WineAndSong,\r\n  EyeOfPerception,\r\n  Frostbearer,\r\n  LostPrayerToTheSacredWinds,\r\n  SkywardAtlas,\r\n  MemoryOfDust\r\n}\r\nexport default catalysts","export default __webpack_public_path__ + \"static/media/Weapon_Apprentice's_Notes.0b7fb81e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Pocket_Grimoire.536179c5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amber_Catalyst.01ede681.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Emerald_Orb.4008f986.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Magic_Guide.64c777ec.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Otherworldly_Story.48b54293.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Thrilling_Tales_of_Dragon_Slayers.692d45b8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Twin_Nephrite.b0c2488b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Amulet.b97d01eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Codex.6e201cfa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Mappa_Mare.bc35dc35.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Malice.4ab08cb6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Grimoire.2f67eac4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Fragments.4dd54e2d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Solar_Pearl.d629ae58.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Widsith.a6fe1227.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wine_and_Song.0aa416e6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Eye_of_Perception.907a0288.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Frostbearer.bde00061.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lost_Prayer_to_the_Sacred_Winds.45f8ca2a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Atlas.8b4f86fa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Memory_of_Dust.4e45ccbb.png\";","import weapons from './Weapons/Weapons'\r\n\r\nimport anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  weapons,\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","import swords from './Swords/Swords'\r\nimport claymores from './Claymores/Claymores'\r\nimport polearms from './Polearms//Polearms'\r\nimport bows from './Bows/Bows'\r\nimport catalysts from './Catalysts/Catalysts'\r\nconst weapons = {\r\n  ...swords,\r\n  ...claymores,\r\n  ...polearms,\r\n  ...bows,\r\n  ...catalysts,\r\n}\r\nexport default weapons","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport Stat from '../Stat';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nexport default function CharacterCard(props) {\r\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getArtifactDataImport(),\r\n    ]).then(() => forceUpdate())\r\n  }, [])\r\n  let { characterId, onEdit, onDelete } = props\r\n  let character = CharacterDatabase.getCharacter(characterId)\r\n  if (!character) return null;\r\n  let build = Character.calculateBuild(character)\r\n  let { setToSlots } = build\r\n\r\n  let { characterKey, name, weapon, constellation } = character\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponName = Weapon.getWeaponName(weapon.key)\r\n  let weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\r\n  let weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\r\n  let weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const statkeys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\",]\r\n  return (<Card className={props.cardClassName} bg={props.bg ? props.bg : \"darkcontent\"} text=\"lightfont\">\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {props.header ? props.header : <h6><b>{name}</b></h6>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {props.onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {props.onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={onEdit} style={{ cursor: onEdit ? \"pointer\" : \"default\" }}>\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={Character.getThumb(characterKey)} className={`w-100 h-auto grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h4>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h4>\r\n          <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n          <span>{`Lvl. ${Character.getStatValueWithOverride(character, \"char_level\")} C${constellation}`}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {Object.entries(Artifact.getArtifactSetEffects(setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = Artifact.getArtifactSetName(key)\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = build.finalStats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {props.footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        selectedCharacterId: characterId\r\n      }}>\r\n        Generate Builds\r\n        </Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy } from 'react';\r\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport Character from './Character';\r\nimport CharacterCard from './CharacterCard';\r\nimport CharacterDatabase from './CharacterDatabase';\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCardPromise = import('../Character/CharacterDisplayCard');\r\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\r\n\r\nexport default class CharacterDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = {\r\n      charIdToEdit: \"\",\r\n      showEditor: false,\r\n    }\r\n    ReactGA.pageview('/character')\r\n  }\r\n\r\n  deleteCharacter = (id) => {\r\n    Character.removeCharacter(id)\r\n    this.forceUpdate()\r\n  }\r\n\r\n  editCharacter = (id) =>\r\n    this.setState({ charIdToEdit: id, showEditor: true },\r\n      () => this.scrollRef.current.scrollIntoView({ behavior: \"smooth\" }))\r\n\r\n  cancelEditCharacter = () =>\r\n    this.setState({ charIdToEdit: null, showEditor: false })\r\n\r\n  componentDidMount() {\r\n    this.scrollRef = React.createRef()\r\n  }\r\n  render() {\r\n    let charIdList = CharacterDatabase.getCharacterIdList()\r\n    return (<Container ref={this.scrollRef}>\r\n      {/* editor/character detail display */}\r\n      {this.state.showEditor ? <Row className=\"mt-2\"><Col>\r\n        <React.Suspense fallback={<span>Loading...</span>}>\r\n          <CharacterDisplayCard editable\r\n            characterId={this.state.charIdToEdit}\r\n            onClose={this.cancelEditCharacter}\r\n            footer={<Button variant=\"danger\" onClick={this.cancelEditCharacter}>Close</Button>}\r\n          />\r\n        </React.Suspense>\r\n      </Col></Row> : null}\r\n\r\n      <Row className=\"mt-2\">\r\n        {this.state.showEditor ? null : <Col lg={4} md={6} className=\"mb-2\">\r\n          <Card className=\"h-100\" bg=\"darkcontent\" text=\"lightfont\">\r\n            <Card.Header className=\"pr-2\">\r\n              <span>Add New Character</span>\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex flex-column justify-content-center\">\r\n              <Row className=\"d-flex flex-row justify-content-center\">\r\n                <Col xs=\"auto\">\r\n                  <Button onClick={() => this.editCharacter(\"\")}>\r\n                    <h1><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></h1>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>}\r\n        {charIdList.map(id =>\r\n          <Col key={id} lg={4} md={6} className=\"mb-2\">\r\n            <CharacterCard\r\n              cardClassName=\"h-100\"\r\n              characterId={id}\r\n              onDelete={() => this.deleteCharacter(id)}\r\n              onEdit={() => this.editCharacter(id)}\r\n            />\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Container>)\r\n\r\n  }\r\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { AttachLazyFormulas } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getCDataObj(charKey)?.talent?.[talentKey]?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getCDataObj(charKey)?.talent?.[talentKey]?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getCDataObj(charKey)?.talent?.[talentKey]?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"formulaOverrides\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey } = character\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey)\r\n    if (!elemental) elemental = autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false)\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = this.getElementalKey(characterKey)\r\n    if (eleKey) eleKey = eleKey + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n\r\n  //CHARCTER OBJ\r\n  static hasOverride = (character, statKey) => character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getArtifactSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals, charAndWeapon, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(charAndWeapon)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals && artifactConditionals.forEach(conditional => {\r\n      let { srcKey: setKey, srcKey2: setNumKey } = conditional\r\n      let condStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditional.conditionalNum)\r\n      if (condStats) Object.entries(condStats).forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n    AttachLazyFormulas(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"formulaOverrides\") {\r\n        initialStats.formulaOverrides = [...(initialStats.formulaOverrides || []), ...val]\r\n        return\r\n      }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { Formulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (StatData[key]?.html || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (StatData[key]?.html || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static printFormula = (statKey, stats, expand = true) =>\r\n    FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n    (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n\r\n  static printOverrideFormula = (stats, overrideKey, options, expand = true) =>\r\n    OverrideFormulasText?.[overrideKey] && typeof OverrideFormulasText?.[overrideKey].formulaText === \"function\" &&\r\n    (<span>{OverrideFormulasText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats[statKey]?.toFixed?.(fixedUnit) || stats[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n}\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulasText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.value}%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getArtifactDataImport = () => ArtifactDataImport\r\n  static getArtifactSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getArtifactSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData).filter(([key, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getArtifactPieceName = (setKey, slotKey, defVal = \"\") => ArtifactData?.[setKey]?.pieces?.[slotKey] || defVal;\r\n  static getArtifactPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n  static getArtifactSetEffectsObj = (setKey, defVal = null) => ArtifactData?.[setKey]?.sets || defVal\r\n  //SLOT\r\n  static getArtifactSlotKeys = () => Object.keys(ArtifactSlotsData)\r\n  static getArtifactSlotName = (slotKey, defVal = \"\") =>\r\n    ArtifactSlotsData[slotKey] ? ArtifactSlotsData[slotKey].name : defVal\r\n  static getArtifactSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n\r\n  static getArtifactSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getArtifactSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getArtifactSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n\r\n  //STARS\r\n  static getRarityArr = (setKey) => ArtifactData[setKey] ? ArtifactData[setKey].rarity : []\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => ArtifactMainSlotKeys\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = ArtifactMainStatsData[numStars]?.[key]?.[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData)\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getRolls(value, rollData, float = false) {\r\n    let roll = null;\r\n    let maxNumRoll = Math.round(value / rollData[0])\r\n    if (!maxNumRoll) return null;\r\n    let rollOption = (val, arr) => {\r\n      if (roll) return;\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (float) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val)) {\r\n            roll = arr;\r\n            return;\r\n          }\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val)) {\r\n            roll = arr;\r\n            return\r\n          }\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        rollOption(value, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(value, [])\r\n    return roll;\r\n  }\r\n  static validateSubStat(state, substat) {\r\n    if (!substat || !substat.value) return { valid: true }\r\n    let value = parseFloat(substat.value);\r\n    if (isNaN(value)) return { valid: false, msg: `Invalid Input` }\r\n    let numStars = state.numStars\r\n    if (!numStars) return { valid: false, msg: `Artifact Stars not set.` }\r\n    let isFloat = Stat.getStatUnit(substat.key) === \"%\"\r\n    let rollData = this.getSubstatRollData(substat.key, numStars);\r\n    let rolls = this.getRolls(value, rollData, isFloat)\r\n\r\n    if (!rolls || rolls.length === 0) return { valid: false, msg: `Substat cannot be rolled 0 times.` };\r\n    let totalAllowableRolls = ArtifactStarsData[numStars]?.numUpgradesOrUnlocks - (4 - ArtifactStarsData[numStars]?.subBaseHigh) + 1;//+1 for its base roll\r\n    if (rolls.length > totalAllowableRolls) return { valid: false, msg: `Substat cannot be rolled more than ${totalAllowableRolls} times.` };\r\n\r\n    let min = rollData[0] * rolls.length;\r\n    let max = rollData[rollData.length - 1] * rolls.length;\r\n    return { valid: true, efficiency: clampPercent(((value - min) / (max - min)) * 100), msg: `This substat was rolled ${rolls.length} time(s). Values: [${rolls.join(\", \")}]`, rolls }\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static artifactValidation(state) {\r\n    let currentEfficiency = 0, maximumEfficiency = 0;\r\n    let subStatValidations = state.substats.map(substat => Artifact.validateSubStat(state, substat));\r\n    for (const substat of subStatValidations)\r\n      if (!substat.valid)\r\n        return { subStatValidations, valid: false, msg: \"One of the substat is invalid.\", currentEfficiency, maximumEfficiency }\r\n\r\n    //if a substat has >=2 rolls, when not all of them have been unlocked//if a substat has >=2 rolls, when not all of them have been unlocked\r\n    if (subStatValidations.some(substat => substat?.rolls?.length > 1) && subStatValidations.some((substat) => !substat.rolls))\r\n      return { subStatValidations, valid: false, msg: \"One of the substat have >1 rolls, but not all substats are unlocked.\", currentEfficiency, maximumEfficiency }\r\n    let currentNumOfRolls = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls ? cur.rolls.length : 0), 0);\r\n    let rollsRemaining = Artifact.rollsRemaining(state.level, state.numStars);\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(state.numStars);\r\n\r\n    if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n      return { subStatValidations, valid: false, msg: `Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `, currentEfficiency, maximumEfficiency }\r\n\r\n    let totalCurrentEfficiency = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls && cur.efficiency ? (cur.efficiency * cur.rolls.length) : 0), 0);\r\n    currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { valid: true, subStatValidations, currentNumOfRolls, rollsRemaining, totalPossbleUpgrade: totalPossbleRolls, currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getArtifactSets = (setKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = null) =>\r\n    deepClone(this.getArtifactSets(setKey)?.[setNumKey]?.stats || defVal)\r\n\r\n  static getArtifactConditionalStats = (setKey, setNumKey, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getArtifactSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      ArtifactData?.[setKey]?.sets && Object.entries(ArtifactData[setKey].sets).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getArtifactSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      if (ArtifactData?.[setKey]?.sets) {\r\n        let setNumKeys = Object.keys(ArtifactData[setKey].sets).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n        if (setNumKeys.length)\r\n          artifactSetEffect[setKey] = setNumKeys\r\n      }\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getArtifactSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = ArtifactData?.[setKey]?.sets?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getArtifactSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets?.[setNumKey]?.conditional || defVal\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      let hasSetEffect = false\r\n      if (setObj.sets)\r\n        Object.entries(setObj.sets).forEach(([setNumKey, setEffectObj]) => {\r\n          if (setEffectObj.stats && Object.keys(setEffectObj.stats).length > 0) {\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n            hasSetEffect = true\r\n          }\r\n          if (setEffectObj.conditional) {\r\n            let conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n            if (conditionalNum) {\r\n              let condStats = this.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n              if (condStats) {\r\n                setEffect[setNumKey] = deepClone(condStats)\r\n                hasSetEffect = true\r\n              }\r\n            }\r\n          }\r\n        })\r\n      if (hasSetEffect)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => id ? artifactDatabase[id] : null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null) \r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  dmg: { name: \"All DMG\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n  //elemental\r\n  overloaded_dmg: { name: \"Overloaded DMG\", unit: \"%\" },\r\n  electro_charged_dmg: { name: \"Electro-Charged DMG\", unit: \"%\" },\r\n  superconduct_dmg: { name: \"Superconduct DMG\", unit: \"%\" },\r\n  burning_dmg: { name: \"Overloaded DMG\", unit: \"%\" },\r\n  vaporize_dmg: { name: \"Vaporize DMG\", unit: \"%\" },\r\n  melt_dmg: { name: \"Melt DMG\", unit: \"%\" },\r\n  swirl_dmg: { name: \"Swirl DMG\", unit: \"%\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_final: (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.phy_dmg,\r\n  plunge_crit_dmg: (s) => s.phy_crit_dmg,\r\n  plunge_avg_dmg: (s) => s.phy_avg_dmg,\r\n  plunge_bonus_multi: (s) => s.phy_bonus_multi,\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.dmg) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s[`${ele}_ele_dmg`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_ele_crit_dmg`],\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_ele_avg_dmg`],\r\n  plunge_bonus_multi: (s, ele) => s[`${ele}_ele_bonus_multi`],\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.dmg) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.dmg) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.dmg) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//add html text to physical related stuff with html elements.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].html = <span className=\"text-physical text-nowrap\">{StatData[key].name}</span>\r\n  StatData[key].variant = \"physical\"\r\n});\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].html = <span className={`text-${eleKey} text-nowrap`}>{StatData[ele_key].name}</span>\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulas = {\r\n  noelle_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk + s.def_final * (options.value / 100),\r\n    dependency: [\"atk_base\", \"atk_weapon\", \"atk_\", \"atk\", \"def_final\", \"def_base\", \"def_\", \"def\"],\r\n  }\r\n}\r\n\r\n//the keyfilters are used by build generator to reduce the amount of calculations required\r\nfunction AttachLazyFormulas(obj, options = {}) {\r\n  let { formulaKeys = Object.keys(Formulas), statKeys = Object.keys(StatData) } = options;\r\n  let { formulaOverrides = [] } = obj;\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key: overrideFormulaKey, options } = formulaOverride\r\n    let { key, formula } = OverrideFormulas[overrideFormulaKey] || {}\r\n    if (!formulaKeys.includes(key)) return\r\n    formula = formula(options)\r\n    Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => formula(obj) : function () {\r\n        let val = formula(obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n\r\n  formulaKeys.forEach(key => {\r\n    !obj.hasOwnProperty(key) && Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => Formulas[key](obj) : function () {\r\n        let val = Formulas[key](obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  //assign zeros or default values to the other stats that are not part of the calculations\r\n  statKeys.forEach(key => !obj.hasOwnProperty(key) && (obj[key] = StatData[key].default || 0))\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  OverrideFormulas,\r\n  StatData,\r\n  AttachLazyFormulas,\r\n}","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}"],"sourceRoot":""}