{"version":3,"sources":["Components/StarDisplay.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","Data/WeaponData.js","Components/CustomFormControl.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","Components/ConditionalSelector.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","../node_modules/react-bootstrap/esm/Badge.js","Data/CharacterData.js","DatabaseUtil.js","Components/StatIcon.js","Components/CharacterSelection.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","Artifact/ArtifactCard.js","Artifact/PercentBadge.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/StatDisplay.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","TestPage/TestDisplay.js","Character/Character.js","Stat.js","Util/Util.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Character/CharacterDatabase.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Util/ConditionalsUtil.js","Artifact/ArtifactDatabase.js","Data/ElementalData.js","StatData.js","Weapon/Weapon.js","StatDependency.js"],"names":["StarIcon","icon","faStar","Stars","stars","colored","className","Array","keys","map","_","i","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","WeaponData","WeaponDataImport","then","imp","default","WeaponLevelKeys","LevelNameData","WeaponTypeData","sword","claymore","catalyst","bow","polearm","FloatFormControl","placeholder","onValueChange","disabled","useState","focus","setFocus","type","toString","onChange","e","target","parseFloat","onFocus","onBlur","IntFormControl","parseInt","resolveContainerRef","ref","_ref","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","ConditionalSelector","props","conditional","conditionalNum","setConditional","defEle","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","resin","fragile","condensed","exp_books","advice","wit","experience","Badge","React","forwardRef","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","CharacterData","CharacterDataImport","LevelsData","name","level","asend","characterStatBase","crit_rate","crit_dmg","ener_rech","stam","CharacterSpecializedStatKey","DatabaseInitAndVerify","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","Object","values","forEach","art","valid","location","getCharacter","artInSlotId","getArtifactIDFromSlot","slotKey","id","equipArtifact","keyMapping","setKey","mainStatKey","endsWith","replace","maximumEfficiency","Artifact","substatsValidation","updateArtifact","chars","getCharacterDatabase","character","entries","equippedArtifacts","artid","equippedArt","getArtifact","moveToNewLocation","artifactConditionals","filter","cond","srcKey","srcKey2","dmgMode","updateCharacter","StatIcon","hp_base","faTint","hp_final","hp_","hp","atk_base","faFistRaised","atk_final","atk_","atk","def_base","faShieldAlt","def_final","def_","def","ele_mas","faMagic","faDice","faDiceD20","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","CharacterSelectionDropdownList","onSelect","char","Character","getName","characterKey","CharacterNameDisplay","flat","locationChar","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","ArtifactCard","artifactId","artifactObj","forceUpdate","onEdit","onDelete","assumeFull","numStars","substats","lock","currentEfficiency","mainStatLevel","assFullColor","mainStatVal","getMainStatValue","Stat","getStatUnit","artifactValid","every","sstat","rolls","length","equipOnChar","charId","equipArtifactOnChar","border","bg","Header","xs","md","src","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Body","Title","getSetName","getStatName","stat","numRolls","efficiency","effOpacity","statName","toFixed","style","opacity","percent","Footer","Divider","cid","placement","overlay","pointerEvents","faLock","faLockOpen","Boolean","faEdit","faTrashAlt","PercentBadge","children","badgeColor","isNaN","Math","floor","func","index","Children","child","isValidElement","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","TabContext","Provider","SelectableContext","TabContent","decoratedBsPrefix","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","Tab","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","Error","Container","Content","Pane","createContext","useAccordionToggle","contextEventKey","AccordionContext","AccordionToggle","accordionOnClick","AccordionCollapse","Collapse","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","_objectWithoutProperties","source","excluded","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","DisplayStats","statVal","build","editable","otherProps","buildVal","finalStats","buildDiff","originalVal","getStatValueWithOverride","diff","diffText","fixedUnit","hasOverride","Col","DisplayNewBuildDiff","equippedBuild","newBuild","unit","CharacterArtifactPane","compareAgainstEquipped","setState","showOther","setShowOther","artifactsAssumeFull","statKeys","getDisplayStatKeys","displayStatProps","displayNewBuildProps","formulaKeys","getPrintableFormulaStatKeyList","GetDependencies","Row","Card","Button","xl","printStat","printFormula","modifiers","equipArtifacts","artifactIds","Alert","sm","lg","getSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","ConditionalsUtil","getConditionalNum","getConditionalStats","val","conditionalElement","cnum","state","setStateArtifactConditional","getSetEffectText","getSlotKeys","StatInput","prependEle","defaultValue","restProps","InputGroup","Prepend","Text","Append","undefined","OverlayTrigger","Tooltip","faUndo","CharacterOverviewPane","constellation","setOverride","setConstellation","editLevel","setEditLevel","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","Image","getStar","clamp","getLevel","levelKey","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","refineIndex","conditionalStats","getWeaponConditionalStat","getWeaponConditional","conditionalEle","faQuoteLeft","getWeaponImg","getWeaponRarity","DropdownButton","title","getWeaponName","reverse","star","arr","Dropdown","ItemText","getWeaponsOfType","rarity","weaponObj","getLevelName","faGavel","getWeaponPassiveDescription","getWeaponDescription","editingOther","SetEditingOther","additionalKeys","displayStatKeys","push","editStatKeys","otherStatKeys","getElementalKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","getStatNameRaw","CharacterTalentPane","ascension","getAscension","skillDisplayProps","ContextAwareToggle","callback","currentEventKey","decoratedOnClick","expanded","faWindowMinimize","faWindowMaximize","ToggleButtonGroup","ToggleButton","href","rel","eleKey","immunityStatKey","elementImmunity","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","autoInfused","ElementToReactionKeys","includes","statsDisplayKeys","ReactionDisplay","tKey","tText","SkillDisplayCard","talentKey","subtitle","getTalent","asc","enabled","onClickTitle","ReactionComponents","superconduct_dmg","electrocharged_dmg","overloaded_dmg","swirl_dmg","shatter_dmg","information","faQuestionCircle","crystalize_dmg","reactionMode","charEleKey","eleInterArr","Ele","talentLimits","header","getTalentLevelKey","talentLvlKey","levelBoost","infuseBtn","getElementalName","tLvl","talentLevelKeys","statsEle","talentStats","getTalentStats","statList","ListGroup","getTalentImg","getTalentName","Subtitle","getTalentDocument","section","talentText","fields","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","fromEntries","getTalentConditionalFields","condField","FieldDisplay","field","fieldText","fieldVariant","fieldBasic","basicVal","fieldVal","finalVal","fixedVal","fixed","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","CharacterDisplayCard","forceUpdateComponent","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","characterId","getInitialState","Promise","all","getCharacterDataImport","getWeaponDataImport","getDataImport","deepClone","addCharacter","footer","onClose","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","faTimes","defaultActiveKey","Nav","Link","getCDataObj","talent","skill","initialState","auto","burst","ListGroupItem","action","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","horizontal","horizontalVariant","initialBsPrefix","AbstractNav","TestDisplay","removeCharacterById","defVal","getSpecializedStatKey","getSpeicalizedStatVal","getWeaponMainStatValWithOverride","characterObj","baseStat","getIndexFromlevelkey","elementalKey","ElementalData","constellationName","titles","getSpecializedStat","specializeStat","thumbImg","cardImg","img","constIndex","getTalentLevelBoost","talents","talentBoost","boostEntry","find","withBoost","getTalentFields","stats","getTalentStatsAll","statsArr","getTalentConditional","doc","tempCond","getConditionalProp","stacks","skillKey","elemental","infusable","getTalentStatKeyVariant","atkKeys","startsWith","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","dependencies","PreprocessFormulas","char_ele_key","overrides","hasOwnProperty","specialStatKey","addStatsObj","weaponStats","subKey","subVal","getWeaponSubStatValWithOverride","bonusStats","htmlStatsData","StatData","pretty","getStatVariant","f","expand","ModifiersText","skey","Modifiers","FormulaText","modifiersTextKeys","printModifier","overrideKey","options","formulaText","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_multi","electrocharged","superconduct_multi","superconduct","swirl_multi","swirl","shatter_multi","shattered","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","amp_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","abs","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","noelle_burst_atk","sweep_multiplier","mona_passive2_hydro_ele_dmg_bonus","bennett_burst_atk","atk_multiplier","array","random","getRandomIntInclusive","min","max","ceil","loadFromLocalStorage","data","localStorage","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","closeEnoughFloat","a","b","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","ownKeys","object","enumerableOnly","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","phy_dmg_bonus","ele_dmg_bonus","2","ArtifactSubStatsData","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","getSubstatEfficiency","getArtifactEfficiency","errMsgs","some","currentNumOfRolls","reduce","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","unequipArtifactOnSlot","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","icons","getSetEffectsObj","setEffects","artifactSetEffect","artArr","setNumKeys","charFinalStats","setEffectText","getSlotName","getSlotIcon","getSlotMainStatKeys","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","main","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","accu","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","initiated","characterDatabase","charIdIndex","isInvalid","getCharacterIdList","getIdNameList","dchar","removeItem","charid","equipArtifactBuild","_createForOfIteratorHelper","allowArrayLike","it","F","s","n","done","_e","err","normalCompletion","didErr","step","next","_e2","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","Formulas","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","reactionName","dmgKey","dmgName","str","atkTypeName","dmgModeName","ele_key","formula","hydro_ele_dmg_bonus","formulas","getLevelIndex","weaponKey","passiveName","passiveDescription","description","baseStats","sub","weaponType","getWeaponTypeName","formulaKeyDependency","registerDependency","operation","testObj","dependency","Set","k","get","add","InsertDependencies","has"],"mappings":"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","file":"static/js/8.91b92a2d.chunk.js","sourcesContent":["import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst FloatFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseFloat(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\n\r\nconst IntFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseInt(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\nexport {\r\n  FloatFormControl,\r\n  IntFormControl\r\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //this will only run if neither of the database has been initated.\r\n  if (!CharacterDatabase.populateDatebaseFromLocalStorage() & !ArtifactDatabase.populateDatebaseFromLocalStorage()) return\r\n  //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n  let arts = ArtifactDatabase.getArtifactDatabase();\r\n  Object.values(arts).forEach(art => {\r\n    let valid = true\r\n    if (art.location) {\r\n      const locationChar = CharacterDatabase.getCharacter(art.location)\r\n      if (locationChar) {\r\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\r\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\r\n          CharacterDatabase.equipArtifact(art.location, art)\r\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\r\n          art.location = \"\"\r\n          valid = false\r\n        }\r\n      } else {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n    }\r\n    //the set keys were changed to camelcase, need to convert for old databases.\r\n    let keyMapping = {\r\n      \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n      \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n      \"Thundering Fury\": \"ThunderingFury\",\r\n      \"Retracing Bolide\": \"RetracingBolide\",\r\n      \"Noblesse Oblige\": \"NoblesseOblige\",\r\n      \"Maiden Beloved\": \"MaidenBeloved\",\r\n      \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n      \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n      \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n      \"Archaic Petra\": \"ArchaicPetra\",\r\n      \"Brave Heart\": \"BraveHeart\",\r\n      \"Tiny Miracle\": \"TinyMiracle\",\r\n      \"Defender's Will\": \"DefendersWill\",\r\n      \"Martial Artist\": \"MartialArtist\",\r\n      \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n      \"The Exile\": \"TheExile\",\r\n      \"Traveling Doctor\": \"TravelingDoctor\",\r\n      \"Lucky Dog\": \"LuckyDog\",\r\n      \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n      \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n      \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n      \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n    }\r\n    if (keyMapping[art.setKey]) {\r\n      art.setKey = keyMapping[art.setKey]\r\n      valid = false\r\n    }\r\n    //key names were changed. convert old DB\r\n    if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n      art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n      valid = false\r\n    }\r\n    //key names were changed. convert old DB\r\n    if (art?.mainStatKey === \"phy_dmg\") {\r\n      art.mainStatKey = \"phy_dmg_bonus\"\r\n      valid = false\r\n    }\r\n    if (!art.maximumEfficiency) {\r\n      Artifact.substatsValidation(art)\r\n      valid = false\r\n    }\r\n    if (!valid)\r\n      ArtifactDatabase.updateArtifact(art)\r\n  })\r\n\r\n  let chars = CharacterDatabase.getCharacterDatabase();\r\n  Object.values(chars).forEach(character => {\r\n    let valid = true;\r\n    //verify character database equipment validity\r\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\r\n      const equippedArt = ArtifactDatabase.getArtifact(artid)\r\n      if (equippedArt && equippedArt.location !== character.id) //the artifact doesnt have the right location...\r\n        ArtifactDatabase.moveToNewLocation(artid, character.id)\r\n      if (!equippedArt) {\r\n        valid = false\r\n        character.equippedArtifacts[slotKey] = \"\"\r\n      }\r\n    })\r\n\r\n    //conditional format was refactored. this makes sure there is no error when using old DB.\r\n    character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\r\n      if (!cond.srcKey || !cond.srcKey2) {\r\n        valid = false\r\n        return false\r\n      }\r\n      return true\r\n    }) ?? []\r\n\r\n    //check for dmgMode\r\n    if (!character.dmgMode) {\r\n      character.dmgMode = \"dmg\"\r\n      valid = false\r\n    }\r\n    if (!valid) {\r\n      CharacterDatabase.updateCharacter(character)\r\n    }\r\n  })\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Character from \"../Character/Character\";\r\nimport CharacterDatabase from \"../Character/CharacterDatabase\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n    <Dropdown.Item key={id} onClick={() => onSelect(id)}>\r\n      <span>\r\n        <div className=\"mb-n2\"><b>{Character.getName(char.characterKey)}</b></div>\r\n        <small>{char.name}</small>\r\n      </span>\r\n    </Dropdown.Item>)\r\n}\r\nfunction CharacterNameDisplay({ id, flat = false }) {\r\n  let locationChar = CharacterDatabase.getCharacter(id)\r\n  if (locationChar) {\r\n    if (flat) {\r\n      return <span><b>{Character.getName(locationChar.characterKey)}</b> <small>{locationChar?.name}</small></span>\r\n    } else {\r\n      return <span>\r\n        <div className=\"mb-n2\"><b>{Character.getName(locationChar.characterKey)}</b></div>\r\n        <small>{locationChar.name}</small>\r\n      </span>\r\n    }\r\n\r\n  } else {\r\n    return <b>Inventory</b>\r\n  }\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n  CharacterNameDisplay\r\n};\r\n\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport { CharacterNameDisplay, CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, artifactObj, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId && !artifactObj) return null;\r\n  let art = artifactObj ? artifactObj : ArtifactDatabase.getArtifact(artifactId);\r\n  if (!art) return null;\r\n  let { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location = \"\", lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  let mainStatLevel = assumeFull ? numStars * 4 : level\r\n  let assFullColor = assumeFull && level !== numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\r\n  let artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\r\n  const equipOnChar = (charId) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charId)\r\n    forceUpdate?.()\r\n  }\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\r\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let numRolls = stat?.rolls?.length || 0\r\n          let efficiency = stat?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge percent={currentEfficiency} valid={artifactValid}>\r\n          {currentEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge percent={maximumEfficiency} valid={artifactValid}>\r\n          {maximumEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\"><CharacterNameDisplay id={location} /></Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar()}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={cid => equipOnChar(cid)} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><span><CharacterNameDisplay id={location} /></span></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={location}\r\n                  style={location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    art.lock = !lock\r\n                    ArtifactDatabase.updateArtifact(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(lock || location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Col } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\nfunction DisplayStats({ statKey, character, build, editable, ...otherProps }) {\r\n  let buildVal = build?.finalStats?.[statKey] || 0\r\n  let statVal, buildDiff = null\r\n  if (typeof buildVal === \"string\") {\r\n    statVal = <span>{buildVal}</span>\r\n  } else {\r\n    let originalVal = Character.getStatValueWithOverride(character, statKey)\r\n    if (statKey === \"hp_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"hp_base\")\r\n    else if (statKey === \"def_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"def_base\")\r\n    else if (statKey === \"atk_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"atk_base\") + Character.getStatValueWithOverride(character, \"atk_weapon\")\r\n\r\n    let diff = buildVal - originalVal\r\n    let diffText = (diff?.toFixed?.(Stat.fixedUnit(statKey)) || diff) + Stat.getStatUnit(statKey)\r\n    if (diff < 0) buildDiff = <span className=\"text-success\">{diffText}</span>\r\n    else if (diff > 0) buildDiff = <span className=\"text-success\"> +{diffText}</span>\r\n\r\n    if (originalVal || !diff) statVal = <span className={editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}>{(originalVal?.toFixed?.(Stat.fixedUnit(statKey)) || originalVal) + Stat.getStatUnit(statKey)}</span>\r\n  }\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className=\"float-right text-right\">{statVal}{buildDiff}</span>\r\n  </Col>\r\n}\r\nconst DisplayNewBuildDiff = ({ statKey, character, equippedBuild, newBuild, editable, ...otherProps }) => {\r\n  let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right ${editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed?.(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed?.(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nexport {\r\n  DisplayStats,\r\n  DisplayNewBuildDiff,\r\n}","import React, { useState } from 'react';\r\nimport { Accordion, Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { DisplayNewBuildDiff, DisplayStats } from '../../Components/StatDisplay';\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from '../../StatDependency';\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState }) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(characterKey)\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  const formulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build.finalStats, statKeys))\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Calculations`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ?\r\n                  statKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                  statKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {formulaKeys.map(key => <Col key={key} xs={12} className=\"mt-2\">\r\n                    <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                      <Card.Header className=\"p-2\">\r\n                        {Stat.printStat(key, build.finalStats)}\r\n                      </Card.Header>\r\n                      <Card.Body className=\"p-2\">\r\n                        <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  )}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n              {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Artifact.getSlotKeys().map(slotKey =>\r\n            build.artifactIds[slotKey] ? <Col sm={6} lg={4} key={build.artifactIds[slotKey]} className=\"mb-2\">\r\n              <ArtifactCard artifactId={build.artifactIds[slotKey]} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport { DisplayNewBuildDiff, DisplayStats } from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"char_level\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={(val) => setOverride(\"char_level\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"char_level\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon = {} }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats, character)}</p>\r\n            <Row>\r\n              <Col xs={12} md={6}>\r\n                <h5>ATK: {weaponDisplayMainVal}</h5>\r\n              </Col>\r\n              {subStatKey && <Col xs={12} md={6}>\r\n                <h5>{Stat.getStatName(subStatKey)}: {weaponDisplaySubVal}{Stat.getStatUnit(subStatKey)}</h5>\r\n              </Col>}\r\n            </Row>\r\n            {<Row>\r\n              {(conditionalStats || weaponBonusStats) && <Col xs={12}><h6 className=\"mb-0\">Bonus Stats:</h6></Col>}\r\n              {weaponBonusStats && Object.entries(weaponBonusStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"bonu\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n              {conditionalStats && Object.entries(conditionalStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"cond\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n            </Row>}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  let { editable, character, character: { compareAgainstEquipped }, setOverride, equippedBuild, newBuild } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  let additionalKeys = [\"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const displayStatKeys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp_base\", \"hp\", \"hp_\", \"atk_base\", \"atk\", \"atk_\", \"def_base\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\", \"skill_crit_rate\", \"burst_crit_rate\", \"all_dmg_bonus\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              displayStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              displayStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              otherStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ?\r\n            miscStatkeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n            miscStatkeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n","import { faCheckSquare, faQuestionCircle, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, ToggleButton, ToggleButtonGroup, Tooltip } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation, dmgMode }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  //choose which one to display stats for\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button\r\n        // style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"norm_atk\", \"char_atk\", \"plunge\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(Character.getTalentStatKey(\"char_atk\", character, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    //show elemental interactions\r\n    keys.push(...(ElementToReactionKeys[Character.getElementalKey(characterKey)] || []))\r\n    let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n\r\n    //search for dependency\r\n    return Stat.getPrintableFormulaStatKeyList(GetDependencies(build.finalStats, keys))\r\n  }\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <Accordion>\r\n        <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Options</span>\r\n                <small>Expand below to edit enemy details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ToggleButtonGroup type=\"radio\" value={dmgMode} name=\"dmgOptions\" onChange={(dmgMode) => setState({ dmgMode })}>\r\n                  <ToggleButton value=\"avg_dmg\">Avg. DMG</ToggleButton>\r\n                  <ToggleButton value=\"dmg\">Normal Hit, No Crit</ToggleButton>\r\n                  <ToggleButton value=\"crit_dmg\">Crit Hit DMG</ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Row className=\"mb-2\"><Col>\r\n                <Button variant=\"warning\" >\r\n                  <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                    To get the specific resistance values of enemies, please visit the wiki.\r\n                  </a>\r\n                </Button >\r\n              </Col></Row>\r\n              <Row>\r\n                <Col xs={12} xl={6} className=\"mb-2\">\r\n                  <StatInput\r\n                    name={<b>Enemy Level</b>}\r\n                    value={Character.getStatValueWithOverride(character, \"enemy_level\")}\r\n                    placeholder={Stat.getStatNameRaw(\"enemy_level\")}\r\n                    defaultValue={Character.getBaseStatValue(character, \"enemy_level\")}\r\n                    onValueChange={(val) => setOverride(\"enemy_level\", val)}\r\n                  />\r\n                </Col>\r\n                {[\"physical\", ...Character.getElementalKeys()].map(eleKey => {\r\n                  let statKey = eleKey === \"physical\" ? \"enemy_phy_res\" : `${eleKey}_enemy_ele_res`\r\n                  let immunityStatKey = eleKey === \"physical\" ? \"enemy_phy_immunity\" : `${eleKey}_enemy_ele_immunity`\r\n                  let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                  return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                        <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                      name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                      value={Character.getStatValueWithOverride(character, statKey)}\r\n                      placeholder={Stat.getStatNameRaw(statKey)}\r\n                      defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                      onValueChange={(val) => setOverride(statKey, val)}\r\n                      disabled={elementImmunity}\r\n                    />\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Formulas</span>\r\n                <small>Expand below to see calculation details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n              <Row>\r\n                {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\r\n                  <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                    <Card.Header className=\"p-2\">\r\n                      {Stat.printStat(key, build.finalStats)}\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-2\">\r\n                      <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                )}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {Character.getTalent(characterKey, \"sprint\", false) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_dmg: SuperConductCard,\r\n  electrocharged_dmg: ElectroChargedCard,\r\n  overloaded_dmg: OverloadedCard,\r\n  swirl_dmg: SwirlCard,\r\n  shatter_dmg: ShatteredCard,\r\n  crystalize_dmg: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey, reactionMode = \"none\" }, newBuild, equippedBuild, setState }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let charEleKey = Character.getElementalKey(characterKey)\r\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shatter_dmg\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shatter_dmg\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row>\r\n        <Col ><Row className=\"mb-n2\">\r\n          {eleInterArr.map(key => {\r\n            let Ele = ReactionComponents[key]\r\n            if (!Ele) return null\r\n            let val = build?.finalStats?.[key]\r\n            val = val?.toFixed?.(Stat.fixedUnit(key)) || val\r\n            return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele value={val} /></Col>\r\n          })}\r\n        </Row></Col>\r\n        <Col xs=\"auto\">\r\n          {[\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup\r\n            type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setState({ reactionMode: val === \"none\" ? null : val })}>\r\n            <ToggleButton className=\"p-2\" value={\"none\"}> <h6>No Elemental</h6> <h6>Interactions</h6></ToggleButton >\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Vaporize(Pyro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Pyro)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"hydro\" && <ToggleButton className=\"p-2\" value={\"hydro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Vaporize(Hydro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"cryo\" && <ToggleButton className=\"p-2\" value={\"cryo_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Cryo)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n          </ToggleButtonGroup>}\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"superconduct_dmg\")}</h5>\r\n    <h4 className=\"text-superconduct mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"electrocharged_dmg\")}</h5>\r\n    <h4 className=\"text-electrocharged mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"overloaded_dmg\")}</h5>\r\n    <h4 className=\"text-overloaded mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction SwirlCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"swirl_dmg\")}</h5>\r\n    <h4 className=\"text-swirl mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ value }) {\r\n  let information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"shatter_dmg\")}</h5>\r\n    <h4 className=\"text-shatter mb-0\">\r\n      <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"crystalize_dmg\")}</h5>\r\n    <h4 className=\"text-crystalize mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let { talentLvlKey = undefined, levelBoost = 0 } = Character.getTalentLevelKey(character, talentKey, constellation, true)\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n  if (typeof talentLvlKey === \"number\") {\r\n    if (editable) {\r\n      let setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        let talentLevelKeys = state.talentLevelKeys || {}\r\n        talentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let statsEle = null\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  if (talentStats) {\r\n    let statList = Object.entries(talentStats).map(([statKey, statVal], index) =>\r\n      typeof statVal === \"number\" && <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n        <div>\r\n          <span><b>{Stat.getStatName(statKey)}</b></span>\r\n          <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n        </div>\r\n      </ListGroup.Item>\r\n    ).filter(e => Boolean(e))//filter because modifiers cannot be displayed.\r\n    statsEle = Boolean(statList.length) && <Row><Col>\r\n      <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n        <ListGroup className=\"text-white\" variant=\"flush\">\r\n          {statList}\r\n        </ListGroup>\r\n      </Card>\r\n    </Col></Row>\r\n  }\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalStats = {}\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            //filter out modifiers from rendering\r\n            conditionalStats = Object.fromEntries(Object.entries(conditionalStats).filter(([key, _]) => key !== \"modifiers\"))\r\n            conditionalFields = Character.getTalentConditionalFields(conditional, conditionalNum, [])\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Col xs={12}>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {Object.entries(conditionalStats).map(([statKey, statVal], index) =>\r\n                  <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n                    <div>\r\n                      <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                      <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n                    </div>\r\n                  </ListGroup.Item>\r\n                )}\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i + (conditionalStats?.length || 0)} index={i + (conditionalStats?.length || 0)} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        }\r\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\r\n          <div className=\"mb-2\">{talentText}</div>\r\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n        </Col>{conditionalEle}</Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay(props) {\r\n  let { character, character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldVariant = field.variant || \"\"\r\n  if (typeof fieldVariant === \"function\")\r\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldBasic = field.basicVal\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats, character)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = field.value ? field.value : field.finalVal\r\n  if (typeof fieldVal === \"function\")\r\n    fieldVal = fieldVal?.(talentLvlKey, build.finalStats, character)\r\n  let fixedVal = field.fixed || 0\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.finalVal\r\n\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats, character)?.toFixed?.(fixedVal))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) || fieldVal}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}\r\n","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterId)\r\n      this.state = CharacterDatabase.getCharacter(props.characterId)\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    dmgMode: \"dmg\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey), reactionMode: null, autoInfused: false })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.characterId && this.state.id !== this.props.characterId)\r\n      this.setState(CharacterDatabase.getCharacter(this.props.characterId))\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"char_level\")}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && (Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\"}>Talents {(Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\" && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} setState={this.setSetState} setOverride={this.setOverride} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import { Container } from \"react-bootstrap\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport '../StatDependency'\r\nexport default function TestDisplay(props) {\r\n  DatabaseInitAndVerify()\r\n  return <Container>\r\n    <CharacterDisplayCard editable characterId={\"character_2\"} />\r\n  </Container>\r\n}\r\n","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\nimport { GetDependencies } from \"../StatDependency\"\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    if (skillKey === \"phy\") return `phy_${dmgMode}`\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    if (skillKey === \"phy\") return \"physical\"\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_base\") || false\r\n    return character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats)\r\n    PreprocessFormulas(dependencies, stats.modifiers)(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"modifiers\")\r\n        return initialStats.modifiers = { ...(initialStats.modifiers || {}), ...val }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey, constellation)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, Modifiers, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = []) => {\r\n    //remove keys that will be overriden by the modifier\r\n    for (const statKey of statList)\r\n      if (Object.keys(ModifiersText).includes(statKey))\r\n        statList = statList.filter(skey => skey !== Modifiers[statKey].key)\r\n    let formulaKeys = Object.keys(FormulaText)\r\n    let modifiersTextKeys = Object.keys(ModifiersText)\r\n    return statList.filter(statKey => formulaKeys.includes(statKey) || modifiersTextKeys.includes(statKey))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    if (statKey in ModifiersText)\r\n      return Stat.printModifier(stats, statKey, modifiers[statKey], false)\r\n    return FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n      (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n  }\r\n\r\n  static printModifier = (stats, overrideKey, options, expand = true) =>\r\n    typeof ModifiersText?.[overrideKey]?.formulaText === \"function\" &&\r\n    (<span>{ModifiersText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (Modifiers[statKey]) statKey = Modifiers[statKey].key\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"plunge_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"plunge_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"plunge_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"plunge_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  amp_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(o, \"ele_mas\")} * exp^(-0.000505 * {f(o, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_plunge_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_plunge_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_plunge_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `plunge_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst ModifiersText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.sweep_multiplier * 100}%</span>,\r\n  },\r\n  mona_passive2_hydro_ele_dmg_bonus: {\r\n    formulaText: () => (o) => <span>{f(o, \"hydro_ele_dmg_bonus\")} + {f(o, \"ener_rech\")} * 20%</span>,\r\n  },\r\n\r\n  bennett_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + ( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * {options.atk_multiplier * 100}%</span>,\r\n  },\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n  ModifiersText,\r\n};\r\n","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance\r\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {})\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, numStars, rolls) => {\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars);\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let min = rollData[0] * len;\r\n    let max = rollData[rollData.length - 1] * len;\r\n    return clampPercent(((sum - min) / (max - min)) * 100)\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      if (rollArr.length > 1) substat.rollArr = rollArr\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, numStars, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, numStars, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect).length > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n      if (Object.keys(condStats).length > 0) {\r\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n        Object.entries(condStats).forEach(([statKey, value]) =>\r\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\r\n      }\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else if (!conditionalNum && index < 0) { //nothing to change\r\n      return conditionals\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => artifactDatabase[id] || null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  plunge_atk_dmg_bonus: { name: \"Plunging Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  all_dmg_bonus: { name: \"All DMG Bonus\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elemental Mastery Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elemental Mastery Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elemental Mastery Multiplier Z\", unit: \"multi\" },\r\n  amp_reaction_base_multi: { name: \"Amplifying Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_final: (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.atk_final * s.plunge_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  plunge_crit_dmg: (s) => s.plunge_dmg * s.crit_dmg_multi,\r\n  plunge_avg_dmg: (s) => s.plunge_dmg * s.crit_multi,\r\n  plunge_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.plunge_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  amp_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s.atk_final * s[`${ele}_plunge_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_plunge_dmg`] * s.crit_dmg_multi,\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_plunge_dmg`] * s.crit_multi,\r\n  plunge_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.plunge_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.all_dmg_bonus) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst Modifiers = {\r\n  noelle_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => s.atk_final + s.def_final * options.sweep_multiplier\r\n  },\r\n  mona_passive2_hydro_ele_dmg_bonus: {\r\n    key: \"hydro_ele_dmg_bonus\",\r\n    formula: () => (s) => s.hydro_ele_dmg_bonus + s.ener_rech * 0.2\r\n  },\r\n  bennett_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => s.atk_final + (s.atk_base + s.atk_weapon) * options.atk_multiplier\r\n  },\r\n}\r\n\r\nfunction PreprocessFormulas(formulaKeys, modifiers) {\r\n  let formulas = formulaKeys.map(key => {\r\n    if (key in Modifiers) return [Modifiers[key].key, Modifiers[key].formula(modifiers[key])]\r\n    if (key in Formulas) return [key, Formulas[key]]\r\n    let value = StatData[key][\"default\"] ?? 0\r\n    return [key, (s) => (s[key] ?? value)]\r\n  })\r\n\r\n  return stat => formulas.forEach(([key, formula]) => {\r\n    stat[key] = formula(stat)\r\n  })\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  Modifiers,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  PreprocessFormulas,\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","import { Formulas, Modifiers, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nconst formulaKeyDependency = {}\r\nconst registerDependency = (name, operation) => {\r\n  let testObj = {}\r\n  let dependency = new Set()\r\n  Object.keys(StatData).forEach(k => {\r\n    Object.defineProperty(testObj, k, {\r\n      get: () => {\r\n        dependency.add(k)\r\n        return 0\r\n      }\r\n    })\r\n  })\r\n  operation(testObj)\r\n  formulaKeyDependency[name] = [...dependency]\r\n}\r\nObject.keys(Formulas).forEach(key => registerDependency(key, s => Formulas[key](s)))\r\nObject.keys(Modifiers).forEach(name => registerDependency(name, s => Modifiers[name].formula({})(s)))\r\n\r\nif (process.env.NODE_ENV === \"development\") console.log(formulaKeyDependency)\r\n\r\nfunction GetDependencies(initialStats, keys = Object.keys(Formulas)) {\r\n  let dependencies = new Set(), { modifiers = {} } = initialStats\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n\r\n  for (const name in modifiers) {\r\n    if (Modifiers[name].key === key) {\r\n      formulaKeyDependency[name].forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n      dependencies.add(name)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  GetDependencies,\r\n}\r\n"],"sourceRoot":""}