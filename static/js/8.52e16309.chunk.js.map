{"version":3,"sources":["StatDependency.js","Components/StarDisplay.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","Data/WeaponData.js","Components/CustomFormControl.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","Components/ConditionalSelector.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","../node_modules/react-bootstrap/esm/Badge.js","Data/CharacterData.js","DatabaseUtil.js","Components/StatIcon.js","Components/CharacterSelection.js","Artifact/ArtifactCard.js","Artifact/PercentBadge.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/StatDisplay.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","TestPage/TestDisplay.js","Character/Character.js","Stat.js","Util/Util.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Character/CharacterDatabase.js","Util/ConditionalsUtil.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Artifact/ArtifactDatabase.js","Data/ElementalData.js","StatData.js","Weapon/Weapon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"names":["formulaKeyDependency","GetDependencies","modifiers","keys","Object","Formulas","dependencies","Set","entries","forEach","key","modifier","includes","map","mkey","InsertDependencies","has","k","add","formula","dependency","Proxy","get","target","prop","receiver","GetFormulaDependency","s","StarIcon","icon","faStar","Stars","stars","colored","className","Array","_","i","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","WeaponData","WeaponDataImport","then","imp","default","WeaponLevelKeys","LevelNameData","WeaponTypeData","sword","claymore","catalyst","bow","polearm","FloatFormControl","placeholder","onValueChange","disabled","useState","focus","setFocus","type","toString","onChange","e","parseFloat","onFocus","onBlur","IntFormControl","parseInt","resolveContainerRef","ref","_ref","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","ConditionalSelector","props","conditional","conditionalNum","setConditional","defEle","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","resin","fragile","condensed","exp_books","advice","wit","experience","Badge","React","forwardRef","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","CharacterData","CharacterDataImport","LevelsData","name","level","asend","characterStatBase","crit_rate","crit_dmg","ener_rech","stam","CharacterSpecializedStatKey","DatabaseInitAndVerify","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","values","art","valid","location","getCharacter","artInSlotId","getArtifactIDFromSlot","slotKey","id","equipArtifact","numStars","keyMapping","setKey","mainStatKey","endsWith","replace","maximumEfficiency","Artifact","substatsValidation","updateArtifact","chars","getCharacterDatabase","character","equippedArtifacts","artid","equippedArt","getArtifact","moveToNewLocation","artifactConditionals","filter","cond","srcKey","srcKey2","dmgMode","updateCharacter","StatIcon","hp_base","faTint","hp_final","hp_","hp","atk_base","faFistRaised","atk_character_base","atk_final","atk_","atk","def_base","faShieldAlt","def_final","def_","def","ele_mas","faMagic","faDice","faDiceD20","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","CharacterSelectionDropdownList","onSelect","char","Character","getName","characterKey","CharacterNameDisplay","flat","locationChar","ArtifactCard","artifactId","artifactObj","forceUpdate","onEdit","onDelete","assumeFull","substats","lock","currentEfficiency","mainStatLevel","assFullColor","mainStatVal","getMainStatValue","Stat","getStatUnit","artifactValid","every","sstat","rolls","length","equipOnChar","charId","equipArtifactOnChar","border","bg","Header","xs","md","src","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Body","Title","getSetName","getStatName","stat","numRolls","efficiency","effOpacity","statName","toFixed","style","opacity","percent","Footer","Divider","cid","placement","overlay","pointerEvents","faLock","faLockOpen","Boolean","faEdit","faTrashAlt","PercentBadge","children","badgeColor","isNaN","Math","floor","func","index","Children","child","isValidElement","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","TabContext","Provider","SelectableContext","TabContent","decoratedBsPrefix","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","Tab","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","Error","Container","Content","Pane","createContext","useAccordionToggle","contextEventKey","AccordionContext","AccordionToggle","accordionOnClick","AccordionCollapse","Collapse","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","_objectWithoutProperties","source","excluded","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","DisplayStats","statVal","build","editable","otherProps","buildVal","finalStats","buildDiff","originalVal","getStatValueWithOverride","diff","diffText","fixedUnit","hasOverride","Col","DisplayNewBuildDiff","equippedBuild","newBuild","unit","CharacterArtifactPane","compareAgainstEquipped","setState","showOther","setShowOther","artifactsAssumeFull","statKeys","getDisplayStatKeys","displayStatProps","displayNewBuildProps","formulaKeys","getPrintableFormulaStatKeyList","Row","Card","Button","xl","printStat","printFormula","equipArtifacts","artifactIds","Alert","sm","lg","getSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","ConditionalsUtil","getConditionalNum","getConditionalStats","val","conditionalElement","cnum","state","setStateArtifactConditional","getSetEffectText","getSlotKeys","StatInput","prependEle","defaultValue","restProps","InputGroup","Prepend","Text","Append","undefined","OverlayTrigger","Tooltip","faUndo","CharacterOverviewPane","constellation","setOverride","setConstellation","editLevel","setEditLevel","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","Image","getStar","clamp","getLevel","levelKey","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","StatItem","getStatVariant","WeaponStatsCard","title","stats","reduce","accu","multiplier","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","refineIndex","conditionalStats","getWeaponConditionalStat","getWeaponConditional","conditionalEle","faQuoteLeft","getWeaponImg","getWeaponRarity","DropdownButton","getWeaponName","reverse","star","arr","Dropdown","ItemText","getWeaponsOfType","rarity","weaponObj","getLevelName","faGavel","getWeaponPassiveDescription","getWeaponDescription","editingOther","SetEditingOther","additionalKeys","displayStatKeys","push","editStatKeys","otherStatKeys","getElementalKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","getStatNameRaw","CharacterTalentPane","ascension","getAscension","skillDisplayProps","ContextAwareToggle","callback","currentEventKey","decoratedOnClick","expanded","faWindowMinimize","faWindowMaximize","ToggleButtonGroup","ToggleButton","href","rel","eleKey","immunityStatKey","elementImmunity","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","autoInfused","ElementToReactionKeys","statsDisplayKeys","ReactionDisplay","tKey","tText","SkillDisplayCard","talentKey","subtitle","getTalent","asc","enabled","onClickTitle","ReactionComponents","superconduct_dmg","electrocharged_dmg","overloaded_dmg","swirl_dmg","shatter_dmg","information","faQuestionCircle","crystalize_dmg","reactionMode","charEleKey","eleInterArr","Ele","modifiersToFields","mStatKey","basicVal","fixed","statsToFields","talentLimits","header","getTalentLevelKey","talentLvlKey","levelBoost","infuseBtn","getElementalName","tLvl","talentLevelKeys","talentStats","getTalentStats","statsEle","ListGroup","field","FieldDisplay","getTalentImg","getTalentName","Subtitle","getTalentDocument","section","talentText","fields","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","fieldText","fieldVariant","fieldBasic","fieldVal","finalVal","fixedVal","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","CharacterDisplayCard","forceUpdateComponent","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","characterId","getInitialState","Promise","all","getCharacterDataImport","getWeaponDataImport","getDataImport","deepClone","addCharacter","footer","onClose","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","faTimes","defaultActiveKey","Nav","Link","getCDataObj","talent","skill","initialState","auto","burst","ListGroupItem","action","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","horizontal","horizontalVariant","initialBsPrefix","AbstractNav","TestDisplay","removeCharacterById","defVal","getSpecializedStatKey","getSpeicalizedStatVal","getWeaponMainStatValWithOverride","characterObj","baseStat","getIndexFromlevelkey","elementalKey","ElementalData","constellationName","titles","getSpecializedStat","specializeStat","thumbImg","cardImg","img","constIndex","getTalentLevelBoost","talents","talentBoost","boostEntry","find","withBoost","getTalentFields","getTalentStatsAll","statsArr","getTalentConditional","doc","tempCond","getConditionalProp","stacks","fromEntries","skillKey","elemental","infusable","getTalentStatKeyVariant","atkKeys","startsWith","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","PreprocessFormulas","mergeStats","char_ele_key","overrides","hasOwnProperty","specialStatKey","weaponSubKey","getWeaponSubStatValWithOverride","htmlStatsData","StatData","pretty","f","expand","statList","FormulaText","modifiersKeys","modifierText","obj","options","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_multi","electrocharged","superconduct_multi","superconduct","swirl_multi","swirl","shatter_multi","shattered","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","amp_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","abs","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","defineProperty","configurable","enumerable","writable","array","random","getRandomIntInclusive","min","max","ceil","loadFromLocalStorage","data","localStorage","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","closeEnoughFloat","a","b","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","ownKeys","object","enumerableOnly","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","getOwnPropertyDescriptors","defineProperties","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","phy_dmg_bonus","ele_dmg_bonus","2","ArtifactSubStatsData","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","getSubstatEfficiency","getArtifactEfficiency","errMsgs","some","currentNumOfRolls","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","unequipArtifactOnSlot","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","icons","getSetEffectsObj","setEffects","artifactSetEffect","artArr","setNumKeys","charFinalStats","setEffectText","getSlotName","getSlotIcon","getSlotMainStatKeys","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","main","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","initiated","characterDatabase","charIdIndex","isInvalid","getCharacterIdList","getIdNameList","dchar","removeItem","charid","equipArtifactBuild","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","_createForOfIteratorHelper","allowArrayLike","it","F","n","done","_e","err","normalCompletion","didErr","step","next","_e2","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","dependencyKeys","preFormulas","modifierFunc","initial","reactionName","dmgKey","dmgName","str","atkTypeName","dmgModeName","ele_key","getLevelIndex","weaponKey","passiveName","passiveDescription","description","baseStats","sub","weaponType","getWeaponTypeName","_defineProperty"],"mappings":"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","file":"static/js/8.52e16309.chunk.js","sourcesContent":["import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nconst formulaKeyDependency = {}\r\nconst GetFormulaDependency = (formula) => {\r\n  const dependency = new Set()\r\n  formula(new Proxy({}, { get: (target, prop, receiver) => dependency.add(prop) }))\r\n  return [...dependency]\r\n}\r\nObject.keys(Formulas).forEach(key => formulaKeyDependency[key] = GetFormulaDependency(s => Formulas[key](s)))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  console.log(formulaKeyDependency)\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key) &&\r\n      console.error(\"Formula\", `\"${formulaKey}\"`, \"has dependency with key\", `\"${key}\"`, \"that does not Exist in StatData.\"))\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(Formulas)) {\r\n  let dependencies = new Set()\r\n  Object.entries(modifiers).forEach(([key, modifier]) =>\r\n    keys.includes(key) && Object.keys(modifier).map(mkey => InsertDependencies(mkey, dependencies)))\r\n  keys.forEach(key => InsertDependencies(key, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, dependencies = new Set()) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, dependencies))\r\n  dependencies.add(key)\r\n  return dependencies\r\n}\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n  InsertDependencies\r\n}\r\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst FloatFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseFloat(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\n\r\nconst IntFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseInt(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\nexport {\r\n  FloatFormControl,\r\n  IntFormControl\r\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //this will only run if neither of the database has been initated.\r\n  if (!CharacterDatabase.populateDatebaseFromLocalStorage() & !ArtifactDatabase.populateDatebaseFromLocalStorage()) return\r\n  //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n  let arts = ArtifactDatabase.getArtifactDatabase();\r\n  Object.values(arts).forEach(art => {\r\n    let valid = true\r\n    if (art.location) {\r\n      const locationChar = CharacterDatabase.getCharacter(art.location)\r\n      if (locationChar) {\r\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\r\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\r\n          CharacterDatabase.equipArtifact(art.location, art)\r\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\r\n          art.location = \"\"\r\n          valid = false\r\n        }\r\n      } else {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    //there was a bug that saved the numStars as strings. convert to number.\r\n    if (typeof art.numStars === \"string\") {\r\n      art.numStars = parseInt(art.numStars)\r\n      valid = false\r\n    }\r\n\r\n    //the set keys were changed to camelcase, need to convert for old databases.\r\n    let keyMapping = {\r\n      \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n      \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n      \"Thundering Fury\": \"ThunderingFury\",\r\n      \"Retracing Bolide\": \"RetracingBolide\",\r\n      \"Noblesse Oblige\": \"NoblesseOblige\",\r\n      \"Maiden Beloved\": \"MaidenBeloved\",\r\n      \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n      \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n      \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n      \"Archaic Petra\": \"ArchaicPetra\",\r\n      \"Brave Heart\": \"BraveHeart\",\r\n      \"Tiny Miracle\": \"TinyMiracle\",\r\n      \"Defender's Will\": \"DefendersWill\",\r\n      \"Martial Artist\": \"MartialArtist\",\r\n      \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n      \"The Exile\": \"TheExile\",\r\n      \"Traveling Doctor\": \"TravelingDoctor\",\r\n      \"Lucky Dog\": \"LuckyDog\",\r\n      \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n      \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n      \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n      \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n    }\r\n    if (keyMapping[art.setKey]) {\r\n      art.setKey = keyMapping[art.setKey]\r\n      valid = false\r\n    }\r\n    //key names were changed. convert old DB\r\n    if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n      art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n      valid = false\r\n    }\r\n    //key names were changed. convert old DB\r\n    if (art?.mainStatKey === \"phy_dmg\") {\r\n      art.mainStatKey = \"phy_dmg_bonus\"\r\n      valid = false\r\n    }\r\n    if (!art.maximumEfficiency) {\r\n      Artifact.substatsValidation(art)\r\n      valid = false\r\n    }\r\n    if (!valid)\r\n      ArtifactDatabase.updateArtifact(art)\r\n  })\r\n\r\n  let chars = CharacterDatabase.getCharacterDatabase();\r\n  Object.values(chars).forEach(character => {\r\n    let valid = true;\r\n    //verify character database equipment validity\r\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\r\n      const equippedArt = ArtifactDatabase.getArtifact(artid)\r\n      if (equippedArt && equippedArt.location !== character.id) //the artifact doesnt have the right location...\r\n        ArtifactDatabase.moveToNewLocation(artid, character.id)\r\n      if (!equippedArt) {\r\n        valid = false\r\n        character.equippedArtifacts[slotKey] = \"\"\r\n      }\r\n    })\r\n\r\n    //conditional format was refactored. this makes sure there is no error when using old DB.\r\n    character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\r\n      if (!cond.srcKey || !cond.srcKey2) {\r\n        valid = false\r\n        return false\r\n      }\r\n      return true\r\n    }) ?? []\r\n\r\n    //check for dmgMode\r\n    if (!character.dmgMode) {\r\n      character.dmgMode = \"dmg\"\r\n      valid = false\r\n    }\r\n    if (!valid) {\r\n      CharacterDatabase.updateCharacter(character)\r\n    }\r\n  })\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_character_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Character from \"../Character/Character\";\r\nimport CharacterDatabase from \"../Character/CharacterDatabase\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n    <Dropdown.Item key={id} onClick={() => onSelect(id)}>\r\n      <span>\r\n        <div className=\"mb-n2\"><b>{Character.getName(char.characterKey)}</b></div>\r\n        <small>{char.name}</small>\r\n      </span>\r\n    </Dropdown.Item>)\r\n}\r\nfunction CharacterNameDisplay({ id, flat = false }) {\r\n  let locationChar = CharacterDatabase.getCharacter(id)\r\n  if (locationChar) {\r\n    if (flat) {\r\n      return <span><b>{Character.getName(locationChar.characterKey)}</b> <small>{locationChar?.name}</small></span>\r\n    } else {\r\n      return <span>\r\n        <div className=\"mb-n2\"><b>{Character.getName(locationChar.characterKey)}</b></div>\r\n        <small>{locationChar.name}</small>\r\n      </span>\r\n    }\r\n\r\n  } else {\r\n    return <b>Inventory</b>\r\n  }\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n  CharacterNameDisplay\r\n};\r\n\r\n","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport { CharacterNameDisplay, CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, artifactObj, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId && !artifactObj) return null;\r\n  let art = artifactObj ? artifactObj : ArtifactDatabase.getArtifact(artifactId);\r\n  if (!art) return null;\r\n  let { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location = \"\", lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  let mainStatLevel = assumeFull ? numStars * 4 : level\r\n  let assFullColor = assumeFull && level !== numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\r\n  let artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\r\n  const equipOnChar = (charId) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charId)\r\n    forceUpdate?.()\r\n  }\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\r\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let numRolls = stat?.rolls?.length || 0\r\n          let efficiency = stat?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge percent={currentEfficiency} valid={artifactValid}>\r\n          {currentEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge percent={maximumEfficiency} valid={artifactValid}>\r\n          {maximumEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\"><CharacterNameDisplay id={location} /></Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar()}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={cid => equipOnChar(cid)} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><span><CharacterNameDisplay id={location} /></span></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={location}\r\n                  style={location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    art.lock = !lock\r\n                    ArtifactDatabase.updateArtifact(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(lock || location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Col } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\nfunction DisplayStats({ statKey, character, build, editable, ...otherProps }) {\r\n  let buildVal = build?.finalStats?.[statKey] || 0\r\n  let statVal, buildDiff = null\r\n  if (typeof buildVal === \"string\") {\r\n    statVal = <span>{buildVal}</span>\r\n  } else {\r\n    let originalVal = Character.getStatValueWithOverride(character, statKey)\r\n    if (statKey === \"hp_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"hp_base\")\r\n    else if (statKey === \"def_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"def_base\")\r\n    else if (statKey === \"atk_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"atk_character_base\") + Character.getStatValueWithOverride(character, \"atk_weapon\")\r\n\r\n    let diff = buildVal - originalVal\r\n    let diffText = (diff?.toFixed?.(Stat.fixedUnit(statKey)) || diff) + Stat.getStatUnit(statKey)\r\n    if (diff < 0) buildDiff = <span className=\"text-success\">{diffText}</span>\r\n    else if (diff > 0) buildDiff = <span className=\"text-success\"> +{diffText}</span>\r\n\r\n    if (originalVal || !diff) statVal = <span className={editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}>{(originalVal?.toFixed?.(Stat.fixedUnit(statKey)) || originalVal) + Stat.getStatUnit(statKey)}</span>\r\n  }\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className=\"float-right text-right\">{statVal}{buildDiff}</span>\r\n  </Col>\r\n}\r\nconst DisplayNewBuildDiff = ({ statKey, character, equippedBuild, newBuild, editable, ...otherProps }) => {\r\n  let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right ${editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed?.(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed?.(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nexport {\r\n  DisplayStats,\r\n  DisplayNewBuildDiff,\r\n}","import React, { useState } from 'react';\r\nimport { Accordion, Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { DisplayNewBuildDiff, DisplayStats } from '../../Components/StatDisplay';\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from '../../StatDependency';\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState }) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(characterKey)\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  const formulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, statKeys), build?.finalStats?.modifiers)\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Calculations`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ?\r\n                  statKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                  statKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {formulaKeys.map(key => <Col key={key} xs={12} className=\"mt-2\">\r\n                    <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                      <Card.Header className=\"p-2\">\r\n                        {Stat.printStat(key, build.finalStats)}\r\n                      </Card.Header>\r\n                      <Card.Body className=\"p-2\">\r\n                        <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  )}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n              {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Artifact.getSlotKeys().map(slotKey =>\r\n            build.artifactIds[slotKey] ? <Col sm={6} lg={4} key={build.artifactIds[slotKey]} className=\"mb-2\">\r\n              <ArtifactCard artifactId={build.artifactIds[slotKey]} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport { DisplayNewBuildDiff, DisplayStats } from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"char_level\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={(val) => setOverride(\"char_level\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"char_level\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction StatItem({ statKey, val }) {\r\n  if (!statKey) return null\r\n  return <Col xs={12} lg={6} className=\"px-3\">\r\n    <span><b>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</b></span>\r\n    <span className={`float-right text-right text-${Stat.getStatVariant(statKey)}`} >{val?.toFixed?.(Stat.fixedUnit(statKey)) || val}{Stat.getStatUnit(statKey)}</span>\r\n  </Col>\r\n}\r\nfunction WeaponStatsCard({ title, stats = {}, finalStats = {} }) {\r\n  if (Object.keys(stats ?? {}).length === 0) return null\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <Card.Body className=\"py-2 px-0\"><Row>\r\n      {Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? <React.Fragment key={key} >{Object.entries(val ?? {}).map(([mkey, modifier]) =>\r\n        <StatItem key={mkey} statKey={mkey} val={Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0)} />)}</React.Fragment>\r\n        : <StatItem key={key} statKey={key} val={val} />)}\r\n    </Row></Card.Body>\r\n  </Card>\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon = {} }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex, undefined)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum, undefined)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats, character)}</p>\r\n            <WeaponStatsCard title={\"Main Stats\"} stats={{ atk: weaponDisplayMainVal, [subStatKey]: weaponDisplaySubVal }} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Bonus Stats\"} stats={weaponBonusStats} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Conditional Stats\"} stats={conditionalStats} finalStats={build?.finalStats} />\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  let { editable, character, character: { compareAgainstEquipped }, setOverride, equippedBuild, newBuild } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  let additionalKeys = [\"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const displayStatKeys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp_base\", \"hp\", \"hp_\", \"atk_character_base\", \"atk\", \"atk_\", \"def_base\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\", \"skill_crit_rate\", \"burst_crit_rate\", \"all_dmg_bonus\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              displayStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              displayStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              otherStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ?\r\n            miscStatkeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n            miscStatkeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n","import { faCheckSquare, faQuestionCircle, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, ToggleButton, ToggleButtonGroup, Tooltip } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation, dmgMode }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  //choose which one to display stats for\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button\r\n        // style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"norm_atk\", \"char_atk\", \"plunge\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(Character.getTalentStatKey(\"char_atk\", character, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    //show elemental interactions\r\n    keys.push(...(ElementToReactionKeys[Character.getElementalKey(characterKey)] || []))\r\n    let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n\r\n    //search for dependency\r\n    return Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, keys), build?.finalStats?.modifiers)\r\n  }\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <Accordion>\r\n        <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Options</span>\r\n                <small>Expand below to edit enemy details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ToggleButtonGroup type=\"radio\" value={dmgMode} name=\"dmgOptions\" onChange={(dmgMode) => setState({ dmgMode })}>\r\n                  <ToggleButton value=\"avg_dmg\">Avg. DMG</ToggleButton>\r\n                  <ToggleButton value=\"dmg\">Normal Hit, No Crit</ToggleButton>\r\n                  <ToggleButton value=\"crit_dmg\">Crit Hit DMG</ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Row className=\"mb-2\"><Col>\r\n                <Button variant=\"warning\" >\r\n                  <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                    To get the specific resistance values of enemies, please visit the wiki.\r\n                  </a>\r\n                </Button >\r\n              </Col></Row>\r\n              <Row>\r\n                <Col xs={12} xl={6} className=\"mb-2\">\r\n                  <StatInput\r\n                    name={<b>Enemy Level</b>}\r\n                    value={Character.getStatValueWithOverride(character, \"enemy_level\")}\r\n                    placeholder={Stat.getStatNameRaw(\"enemy_level\")}\r\n                    defaultValue={Character.getBaseStatValue(character, \"enemy_level\")}\r\n                    onValueChange={(val) => setOverride(\"enemy_level\", val)}\r\n                  />\r\n                </Col>\r\n                {[\"physical\", ...Character.getElementalKeys()].map(eleKey => {\r\n                  let statKey = eleKey === \"physical\" ? \"enemy_phy_res\" : `${eleKey}_enemy_ele_res`\r\n                  let immunityStatKey = eleKey === \"physical\" ? \"enemy_phy_immunity\" : `${eleKey}_enemy_ele_immunity`\r\n                  let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                  return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                        <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                      name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                      value={Character.getStatValueWithOverride(character, statKey)}\r\n                      placeholder={Stat.getStatNameRaw(statKey)}\r\n                      defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                      onValueChange={(val) => setOverride(statKey, val)}\r\n                      disabled={elementImmunity}\r\n                    />\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Formulas</span>\r\n                <small>Expand below to see calculation details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n              <Row>\r\n                {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\r\n                  <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                    <Card.Header className=\"p-2\">\r\n                      {Stat.printStat(key, build.finalStats)}\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-2\">\r\n                      <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                )}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {Character.getTalent(characterKey, \"sprint\", false) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_dmg: SuperConductCard,\r\n  electrocharged_dmg: ElectroChargedCard,\r\n  overloaded_dmg: OverloadedCard,\r\n  swirl_dmg: SwirlCard,\r\n  shatter_dmg: ShatteredCard,\r\n  crystalize_dmg: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey, reactionMode = \"none\" }, newBuild, equippedBuild, setState }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let charEleKey = Character.getElementalKey(characterKey)\r\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shatter_dmg\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shatter_dmg\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row>\r\n        <Col ><Row className=\"mb-n2\">\r\n          {eleInterArr.map(key => {\r\n            let Ele = ReactionComponents[key]\r\n            if (!Ele) return null\r\n            let val = build?.finalStats?.[key]\r\n            val = val?.toFixed?.(Stat.fixedUnit(key)) || val\r\n            return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele value={val} /></Col>\r\n          })}\r\n        </Row></Col>\r\n        <Col xs=\"auto\">\r\n          {[\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup\r\n            type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setState({ reactionMode: val === \"none\" ? null : val })}>\r\n            <ToggleButton className=\"p-2\" value={\"none\"}> <h6>No Elemental</h6> <h6>Interactions</h6></ToggleButton >\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Vaporize(Pyro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Pyro)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"hydro\" && <ToggleButton className=\"p-2\" value={\"hydro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Vaporize(Hydro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"cryo\" && <ToggleButton className=\"p-2\" value={\"cryo_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Cryo)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n          </ToggleButtonGroup>}\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"superconduct_dmg\")}</h5>\r\n    <h4 className=\"text-superconduct mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"electrocharged_dmg\")}</h5>\r\n    <h4 className=\"text-electrocharged mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"overloaded_dmg\")}</h5>\r\n    <h4 className=\"text-overloaded mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction SwirlCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"swirl_dmg\")}</h5>\r\n    <h4 className=\"text-swirl mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ value }) {\r\n  let information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"shatter_dmg\")}</h5>\r\n    <h4 className=\"text-shatter mb-0\">\r\n      <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"crystalize_dmg\")}</h5>\r\n    <h4 className=\"text-crystalize mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\n\r\nfunction modifiersToFields(modifiers, finalStats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    value: Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0),\r\n    basicVal: <span>{Object.entries(modifier ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, finalStats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey)\r\n  }))\r\n}\r\nfunction statsToFields(stats, finalStats = {}) {\r\n  return Object.entries(stats).map(([statKey, statVal]) =>\r\n    statKey === \"modifiers\" ? modifiersToFields(statVal, finalStats) : { text: Stat.getStatName(statKey), variant: Stat.getStatVariant(statKey), value: statVal, fixed: Stat.fixedUnit(statKey) }\r\n  ).flat()\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let { talentLvlKey = undefined, levelBoost = 0 } = Character.getTalentLevelKey(character, talentKey, constellation, true)\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n  if (typeof talentLvlKey === \"number\") {\r\n    if (editable) {\r\n      let setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        let talentLevelKeys = state.talentLevelKeys || {}\r\n        talentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  const statsEle = talentStats && <Row><Col>\r\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {statsToFields(talentStats, build?.finalStats).map((field, i) =>\r\n          <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            let conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            conditionalFields = [...Character.getTalentConditionalFields(conditional, conditionalNum, []), ...statsToFields(conditionalStats, build?.finalStats)]\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Col xs={12}>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i} index={i} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        }\r\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\r\n          <div className=\"mb-2\">{talentText}</div>\r\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n        </Col>{conditionalEle}</Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay({ character, character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldVariant = field.variant || \"\"\r\n  if (typeof fieldVariant === \"function\")\r\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldBasic = field.basicVal\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats, character)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = field.value ? field.value : field.finalVal\r\n  if (typeof fieldVal === \"function\")\r\n    fieldVal = fieldVal?.(talentLvlKey, build.finalStats, character)\r\n  let fixedVal = field.fixed || 0\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.finalVal\r\n\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats, character)?.toFixed?.(fixedVal))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) || fieldVal}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}\r\n","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterId)\r\n      this.state = CharacterDatabase.getCharacter(props.characterId)\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    dmgMode: \"dmg\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey), reactionMode: null, autoInfused: false })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.characterId && this.state.id !== this.props.characterId)\r\n      this.setState(CharacterDatabase.getCharacter(this.props.characterId))\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"char_level\")}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && (Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\"}>Talents {(Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\" && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} setState={this.setSetState} setOverride={this.setOverride} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import { Container } from \"react-bootstrap\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport '../StatDependency'\r\nexport default function TestDisplay(props) {\r\n  DatabaseInitAndVerify()\r\n  return <Container>\r\n    <CharacterDisplayCard editable characterId={\"character_2\"} />\r\n  </Container>\r\n}\r\n","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\nimport { GetDependencies } from \"../StatDependency\"\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    if (skillKey === \"phy\") return `phy_${dmgMode}`\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    if (skillKey === \"phy\") return \"physical\"\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_character_base\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats.modifiers)(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of Object.entries(val)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of Object.entries(modifier))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\r\n  })\r\n\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_character_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey, constellation)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    Character.getTalentStatsAll(characterKey, constellation, ascension).forEach(s => this.mergeStats(initialStats, s))\r\n    \r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\r\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\r\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\r\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\r\n    let formulaKeys = Object.keys(FormulaText)\r\n    let modifiersKeys = Object.keys(modifiers)\r\n    return statList.filter(statKey => formulaKeys.includes(statKey) || modifiersKeys.includes(statKey))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_base: (o) => <span>{f(o, \"atk_character_base\")} + {f(o, \"atk_weapon\")} </span>,\r\n  atk_final: (o) => <span>{f(o, \"atk_base\")} * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"plunge_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"plunge_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"plunge_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"plunge_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  amp_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(o, \"ele_mas\")} * exp^(-0.000505 * {f(o, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_plunge_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_plunge_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_plunge_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `plunge_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};\r\n","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance\r\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, numStars, rolls) => {\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars);\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let min = rollData[0] * len;\r\n    let max = rollData[rollData.length - 1] * len;\r\n    return clampPercent(((sum - min) / (max - min)) * 100)\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      if (rollArr.length > 1) substat.rollArr = rollArr\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, numStars, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, numStars, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect).length > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n      if (Object.keys(condStats).length > 0) {\r\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n        Object.entries(condStats).forEach(([statKey, value]) =>\r\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\r\n      }\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else if (!conditionalNum && index < 0) { //nothing to change\r\n      return conditionals\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => artifactDatabase[id] || null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_character_base: { name: \"ATK\", pretty: \"ATK Character Base\" },\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  plunge_atk_dmg_bonus: { name: \"Plunging Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  all_dmg_bonus: { name: \"All DMG Bonus\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elemental Mastery Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elemental Mastery Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elemental Mastery Multiplier Z\", unit: \"multi\" },\r\n  amp_reaction_base_multi: { name: \"Amplifying Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_base: (s) => s.atk_character_base + s.atk_weapon,\r\n  atk_final: (s) => s.atk_base * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.atk_final * s.plunge_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  plunge_crit_dmg: (s) => s.plunge_dmg * s.crit_dmg_multi,\r\n  plunge_avg_dmg: (s) => s.plunge_dmg * s.crit_multi,\r\n  plunge_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.plunge_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  amp_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s.atk_final * s[`${ele}_plunge_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_plunge_dmg`] * s.crit_dmg_multi,\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_plunge_dmg`] * s.crit_multi,\r\n  plunge_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.plunge_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.all_dmg_bonus) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, modifiers = {}) {\r\n  const preFormulas = dependencyKeys.map(key => {\r\n    if (modifiers[key]) {\r\n      const modifierFunc = (stat, initial) => Object.entries(modifiers[key]).reduce((accu, [mkey, multiplier]) =>\r\n        accu + stat[mkey] * multiplier, initial)\r\n      if (key in Formulas) return [key, (s) => modifierFunc(s, Formulas[key](s))]\r\n      return [key, (s) => modifierFunc(s, s[key] ?? StatData?.[key]?.default ?? 0)]\r\n    } else {\r\n      if (key in Formulas) return [key, Formulas[key]]\r\n      return [key, (s) => (s[key] ?? StatData?.[key]?.default ?? 0)]\r\n    }\r\n  })\r\n  return stat => preFormulas.forEach(([key, formula]) => stat[key] = formula(stat))\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  PreprocessFormulas,\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"sourceRoot":""}