{"version":3,"sources":["Components/StatIcon.js","Components/ConditionalSelector.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","Character/CharacterDisplay/CharacterArtifactPane.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js"],"names":["StatIcon","hp","faTint","hp_","atk","faFistRaised","atk_","def","faShieldAlt","def_","ele_mas","faMagic","crit_rate","faDice","crit_dmg","faDiceD20","ener_rech","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","icon","className","ConditionalSelector","props","conditional","conditionalNum","setConditional","defEle","disabled","Array","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","map","condial","Fragment","keys","v","stack","tempcount","faCheckSquare","faSquare","TabContainer","_useUncontrolled","useUncontrolled","activeKey","id","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","children","useMemo","key","type","tabContext","getControlledId","getControllerId","React","createElement","TabContext","Provider","value","SelectableContext","TabContent","forwardRef","_ref","ref","bsPrefix","_ref$as","as","Component","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","_extends","classNames","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","in","displayName","Tab","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","Error","Container","Content","Pane","createContext","AccordionToggle","accordionOnClick","contextEventKey","AccordionContext","e","useAccordionToggle","AccordionCollapse","Collapse","Children","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","CharacterArtifactPane","useState","showOther","setShowOther","character","characterKey","compareAgainstEquipped","artifactConditionals","equippedBuild","newBuild","editable","forceUpdate","setState","build","eleKey","Character","getElementalKey","statKeys","push","otherStatKeys","getElementalKeys","forEach","ele","filter","includes","displayStats","statVal","getStatValueWithOverride","unit","Stat","getStatUnit","buildDiff","finalStats","Col","xs","md","lg","getStatName","hasOverride","toFixed","fixedUnit","displayNewBuildDiff","Row","Card","bg","Header","Button","Body","Footer","equipArtifacts","artifactIds","sm","Object","entries","Artifact","getArtifactSetEffects","setToSlots","setKey","setNumKeyArr","getArtifactSetName","setNumKey","setStats","getArtifactSetNumStats","getArtifactSetEffectConditional","ArtifactConditionals","getConditionalNum","conditionalStats","getArtifactConditionalStats","val","conditionalElement","cnum","state","setStateArtifactConditional","Badge","getArtifactSetEffectText","values","artid","ArtifactCard","artifactId","_objectWithoutProperties","source","excluded","i","target","sourceKeys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","StatInput","placeholder","defaultValue","onValueChange","percent","restProps","InputGroup","Prepend","Text","name","Append","undefined","OverlayTrigger","placement","overlay","Tooltip","style","pointerEvents","faUndo","CharacterOverviewPane","constellation","setOverridelevel","setConstellation","editLevel","setEditLevel","elementKey","weaponTypeKey","getWeaponTypeKey","level","getLevelWithOverride","Img","src","getCard","getName","Image","Assets","elements","weaponTypes","stars","getStar","colored","faSave","faEdit","getConstellationName","characters","con","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCard","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","levelKey","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","refineIndex","getWeaponConditionalStat","getWeaponConditional","conditionalEle","faQuoteLeft","weapons","thumbnail","DropdownButton","title","getWeaponName","reverse","star","arr","Dropdown","ItemText","getWeaponsOfType","rarity","weaponObj","Divider","getLevelName","LevelNameData","faGavel","getWeaponRarity","getWeaponPassiveDescription","getWeaponDescription","editingOther","SetEditingOther","miscStatkeys","setOverride","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","StatOverrideInput","getStatNameWithPercent","CharacterSpecializedStatKey","getBaseStatValue","CharacterTalentPane","talent","img","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","child","CharacterDisplayCard","forceUpdateComponent","CharacterDatabase","getCharacter","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","deepClone","baseLevel","getLevel","overrideLevel","DatabaseInitAndVerify","characterToEdit","getInitialState","updateCharacter","addCharacter","footer","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","onChange","Title","onClose","faTimes","defaultActiveKey","Nav","Link","process","initialState","equippedArtifacts","WeaponLevelKeys"],"mappings":"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","file":"static/js/2.3542b8d6.chunk.js","sourcesContent":["import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp: faTint,\r\n  hp_: faTint,\r\n  atk: faFistRaised,\r\n  atk_: faFistRaised,\r\n  def: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, Button, Dropdown } from 'react-bootstrap';\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (selectedConditional.condition + (selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\"))\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown disabled={disabled}>\r\n      <Dropdown.Toggle size=\"sm\">\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map(condial =>\r\n          <React.Fragment key={condial.condition}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown disabled={disabled}>\r\n      <Dropdown.Toggle size=\"sm\">\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import React, { useState } from 'react';\r\nimport { Accordion, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { StatIconEle } from '../../Components/StatIcon';\r\nimport Stat from \"../../Stat\";\r\nimport ArtifactConditionals from '../../Util/ArtifactConditionals';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane(props) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  let { character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState } = props\r\n  let { character } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  let eleKey = Character.getElementalKey(characterKey)\r\n  const statKeys = [\"hp\", \"atk\", \"def\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"crit_multi\", \"ener_rech\", \"heal_bonu\", \"phy_dmg\", \"phy_atk\",]\r\n  statKeys.push(`${eleKey}_ele_dmg`)\r\n  statKeys.push(`${eleKey}_ele_atk`)\r\n\r\n  let otherStatKeys = [\"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg\", \"phy_res\", \"norm_atk_dmg\", \"char_atk_dmg\", \"skill_dmg\", \"burst_dmg\"]\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  otherStatKeys = otherStatKeys.filter(key => !statKeys.includes(key))\r\n\r\n  const displayStats = (statKey) => {\r\n    let statVal = Character.getStatValueWithOverride(character, statKey)\r\n    let unit = Stat.getStatUnit(statKey)\r\n    let buildDiff = (build?.finalStats?.[statKey] || 0) - statVal\r\n\r\n    return <Col xs={12} md={6} lg={4} key={statKey}>\r\n      <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n      <span className={`float-right ${(editable && Character.hasOverride(character, statKey)) ? \"text-warning\" : \"\"}`}>\r\n        {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n        {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> {buildDiff > 0 && \"+\"}{buildDiff?.toFixed(Stat.fixedUnit(statKey)) + unit}</span> : null}\r\n      </span>\r\n    </Col>\r\n  }\r\n  const displayNewBuildDiff = (statKey) => {\r\n    let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n    let unit = Stat.getStatUnit(statKey)\r\n    let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n    return <Col xs={12} md={6} lg={4} key={statKey}>\r\n      <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n      <span className={`float-right ${(editable && Character.hasOverride(character, statKey)) ? \"text-warning\" : \"\"}`}>\r\n        {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n        {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 ? \"+\" : \"\"}{buildDiff?.toFixed(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n      </span>\r\n    </Col>\r\n  }\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState(state =>\r\n    ({ artifactConditionals: ArtifactConditionals.setConditional(state.artifactConditionals, setKey, setNumKey, conditionalNum) }))\r\n\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-3\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Other Stats`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ? statKeys.map(displayNewBuildDiff) : statKeys.map(displayStats)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {(newBuild && compareAgainstEquipped) ? otherStatKeys.map(displayNewBuildDiff) : otherStatKeys.map(displayStats)}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button size=\"sm\" onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-3\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getArtifactSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-3\">\r\n                      <h5>{Artifact.getArtifactSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getArtifactSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ArtifactConditionals.getConditionalNum(artifactConditionals, setKey, setNumKey)\r\n                            let conditionalStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n                            if (conditionalStats) {\r\n                              if (!setStats) setStats = {}\r\n                              Object.entries(conditionalStats).forEach(([statKey, val]) =>\r\n                                setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                            }\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-3\">\r\n                            <h6>{conditionalElement} {Artifact.getArtifactSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Object.values(build.artifactIds).map(artid =>\r\n            artid ? <Col sm={6} lg={4} key={artid} className=\"mb-3 testname\">\r\n              <ArtifactCard artifactId={artid} forceUpdate={forceUpdate} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Button, InputGroup, OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nfunction StatInput(props) {\r\n  let { value, placeholder, defaultValue, onValueChange, percent, ...restProps } = props\r\n  return (<InputGroup {...restProps}>\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{props.name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>)\r\n}\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport StatIcon, { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character: { characterKey, constellation }, editable, setOverridelevel, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getLevelWithOverride(props.character)\r\n  return <Row>\r\n    <Col xs={12} lg={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={setOverridelevel} value={level} />\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Changes the display level. Cosmetic only.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {Assets.characters?.[characterKey]?.constellation?.map((con, i) =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={con} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} lg={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCard {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character: { characterKey, weapon }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<h6 className=\"d-inline mb-0\">{weaponPassiveName}</h6>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Assets.weapons[weapon.key]} className=\"w-100 h-auto\" thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats)}</p>\r\n            <Row>\r\n              <Col xs={12} md={6}>\r\n                <h5>ATK: {weaponDisplayMainVal}</h5>\r\n              </Col>\r\n              {subStatKey && <Col xs={12} md={6}>\r\n                <h5>{Stat.getStatName(subStatKey)}: {weaponDisplaySubVal}{Stat.getStatUnit(subStatKey)}</h5>\r\n              </Col>}\r\n            </Row>\r\n            {<Row>\r\n              {(conditionalStats || weaponBonusStats) && <Col xs={12}><h6 className=\"mb-0\">Bonus Stats:</h6></Col>}\r\n              {weaponBonusStats && Object.entries(weaponBonusStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"bonu\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n              {conditionalStats && Object.entries(conditionalStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"cond\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n            </Row>}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  const statKeys = [\"hp\", \"atk\", \"def\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg\", \"char_atk_dmg\", \"skill_dmg\", \"burst_dmg\", \"skill_crit_rate\", \"burst_crit_rate\", \"crit_multi\", \"dmg\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let { editable, character, setOverride, equippedBuild, newBuild } = props\r\n  let { character: { compareAgainstEquipped } } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  const displayStats = (statKey) => {\r\n    let statVal = Character.getStatValueWithOverride(character, statKey)\r\n    let unit = Stat.getStatUnit(statKey)\r\n    let buildDiff = (build?.finalStats?.[statKey] || 0) - statVal\r\n    return <Col xs={12} lg={6} key={statKey}>\r\n      <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n      <span className={`float-right ${(editable && Character.hasOverride(character, statKey)) ? \"text-warning\" : \"\"}`}>\r\n        {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n        {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> {buildDiff > 0 && \"+\"}{buildDiff?.toFixed(Stat.fixedUnit(statKey)) + unit}</span> : null}\r\n      </span>\r\n    </Col>\r\n  }\r\n  const displayNewBuildDiff = (statKey) => {\r\n    let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n    let unit = Stat.getStatUnit(statKey)\r\n    let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n    return <Col xs={12} lg={6} key={statKey}>\r\n      <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n      <span className={`float-right ${(editable && Character.hasOverride(character, statKey)) ? \"text-warning\" : \"\"}`}>\r\n        {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n        {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n      </span>\r\n    </Col>\r\n  }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {statKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}><StatOverrideInput {...props} {...{ statKey, icon: StatIcon[statKey] }} /></Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ? statKeys.map(displayNewBuildDiff) : statKeys.map(displayStats)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}><StatOverrideInput {...props} {...{ statKey, icon: StatIcon[statKey] }} /></Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ? otherStatKeys.map(displayNewBuildDiff) : otherStatKeys.map(displayStats)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ? miscStatkeys.map(displayNewBuildDiff) : miscStatkeys.map(displayStats)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n\r\n\r\nfunction StatOverrideInput(props) {\r\n  let { character: { characterKey, levelKey }, statKey, icon, setOverride } = props\r\n  return <StatInput\r\n    className=\"mb-2\"\r\n    name={<span>{icon && <FontAwesomeIcon icon={icon} className=\"fa-fw\" />} {Stat.getStatName(statKey)}</span>}\r\n    placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n    value={Character.getStatValueWithOverride(props.character, statKey)}\r\n    percent={false}\r\n    onValueChange={(value) => setOverride(statKey, value)}\r\n    defaultValue={Character.getBaseStatValue(characterKey, levelKey, statKey)}\r\n  />\r\n}\r\n","import { Image, Row } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\n//TODO\r\nfunction CharacterTalentPane(props) {\r\n  let { character: { characterKey } } = props\r\n  let talent = Assets.characters?.[characterKey]?.talent\r\n  return <Row>\r\n    {talent && Object.entries(talent).map(([key, img]) => \r\n      <Image src={img} key={key} />\r\n    )}\r\n\r\n  </Row>\r\n}\r\nexport default CharacterTalentPane","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map(child => <Col xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterToEdit)\r\n      this.state = props.characterToEdit\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    overrideLevel: 0,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey) })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey, baseStatOverrides: {} })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = deepClone(state.baseStatOverrides)\r\n    let baseStatVal = Character.getBaseStatValue(this.state.characterKey, this.state.levelKey, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n  setOverridelevel = (level) => this.setState(state => {\r\n    let baseLevel = Character.getLevel(state.levelKey)\r\n    if (level === baseLevel)\r\n      return { overrideLevel: 0 }\r\n    else return { overrideLevel: level }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.characterToEdit && this.state.id !== this.props.characterToEdit.id)\r\n      this.setState(this.props.characterToEdit)\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className=\"thumb-small my-n1\" roundedCircle />\r\n                        <h6 className=\"d-inline\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getLevelWithOverride(this.state)}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant=\"success\" disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artiact Stats</small>\r\n              </Button>\r\n              <Button variant=\"info\" disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={this.props?.onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\"}>Talents <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setOverridelevel={this.setOverridelevel}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n"],"sourceRoot":""}