{"version":3,"sources":["Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/StarDisplay.js","Components/CustomFormControl.js","Data/WeaponData.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/ConditionalSelector.js","../node_modules/react-bootstrap/esm/Badge.js","StatConstants.js","StatDependency.js","Data/CharacterData.js","Components/StatIcon.js","dbV2KeyMap.js","DatabaseUtil.js","Components/CharacterSelection.js","../node_modules/react-bootstrap/esm/ElementChildren.js","Character/CharacterDisplay/DamageOptionsAndCalculation.js","Character/StatInput.js","Components/StatDisplay.js","../node_modules/react-bootstrap/esm/ToggleButton.js","Character/CharacterDisplay/StatDisplayComponent.js","../node_modules/react-bootstrap/esm/ToggleButtonGroup.js","Character/CharacterCard.js","Util/TimeUtil.js","../node_modules/react-bootstrap/esm/ProgressBar.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/dom-helpers/esm/isWindow.js","../node_modules/dom-helpers/esm/isDocument.js","../node_modules/react-overlays/esm/isOverflowing.js","../node_modules/react-overlays/esm/manageAriaHidden.js","../node_modules/react-overlays/esm/ModalManager.js","../node_modules/react-overlays/esm/Modal.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/react-bootstrap/esm/ModalTitle.js","Build/BuildWorker.js","Build/BuildDisplay.js","Util/Util.js","Stat.js","Build/Build.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Character/Character.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Util/ConditionalsUtil.js","Data/ElementalData.js","Artifact/ArtifactDatabase.js","StatData.js","Weapon/Weapon.js"],"names":["Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","StarIcon","icon","faStar","Stars","stars","colored","className","Array","keys","map","_","i","CustomFormControl","float","placeholder","value","onValueChange","disabled","allowEmpty","useState","focus","setFocus","props","type","toString","onChange","e","target","parseFloat","parseInt","onFocus","onBlur","aria-label","WeaponData","WeaponDataImport","then","imp","default","WeaponLevelKeys","LevelNameData","WeaponTypeData","_objectWithoutProperties","source","excluded","key","sourceKeys","Object","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","ConditionalSelector","conditional","conditionalNum","setConditional","defEle","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","Badge","React","forwardRef","_ref","ref","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","hitTypes","hit","avgHit","critHit","hitMoves","normal","charged","plunging","skill","burst","hitElements","ElementalData","transformativeReactions","overloaded","shattered","electrocharged","superconduct","swirl","amplifyingReactions","vaporize","melt","ReactionMatrix","crystalize","GetFormulaDependency","formula","dependency","Set","Proxy","get","prop","receiver","add","formulaKeyDependency","freeze","fromEntries","Formulas","GetDependencies","modifiers","StatData","dependencies","forEach","InsertDependencies","has","k","CharacterData","CharacterDataImport","LevelsData","name","level","asend","characterStatBase","critRate_","critDMG_","enerRech_","stamina","CharacterSpecializedStatKey","StatIcon","characterHP","faTint","finalHP","hp_","hp","baseATK","faFistRaised","characterATK","finalATK","atk_","atk","characterDEF","faShieldAlt","finalDEF","def_","def","eleMas","faMagic","faDice","faDiceD20","faSync","heal_","faFirstAid","StatIconEle","statKey","changes","char_ele_key","char_level","hp_base","hp_final","atk_character_base","atk_base","atk_final","atk_weapon","def_base","def_final","phy_dmg_bonus","phy_res","anemo_ele_dmg_bonus","geo_ele_dmg_bonus","electro_ele_dmg_bonus","hydro_ele_dmg_bonus","pyro_ele_dmg_bonus","cryo_ele_dmg_bonus","anemo_ele_res","geo_ele_res","electro_ele_res","hydro_ele_res","pyro_ele_res","cryo_ele_res","ener_rech","crit_rate","crit_dmg","stam","heal_bonu","inc_heal","pow_shield","red_cd","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","norm_atk_dmg","char_atk_dmg","plunge_dmg","norm_atk_crit_dmg","char_atk_crit_dmg","plunge_crit_dmg","norm_atk_avg_dmg","char_atk_avg_dmg","plunge_avg_dmg","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","skill_dmg_bonus","burst_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_crit_rate","burst_crit_rate","anemo_skill_dmg","anemo_burst_dmg","anemo_skill_crit_dmg","anemo_burst_crit_dmg","anemo_skill_avg_dmg","anemo_burst_avg_dmg","geo_skill_dmg","geo_burst_dmg","geo_skill_crit_dmg","geo_burst_crit_dmg","geo_skill_avg_dmg","geo_burst_avg_dmg","electro_skill_dmg","electro_burst_dmg","electro_skill_crit_dmg","electro_burst_crit_dmg","electro_skill_avg_dmg","electro_burst_avg_dmg","hydro_skill_dmg","hydro_burst_dmg","hydro_skill_crit_dmg","hydro_burst_crit_dmg","hydro_skill_avg_dmg","hydro_burst_avg_dmg","pyro_skill_dmg","pyro_burst_dmg","pyro_skill_crit_dmg","pyro_burst_crit_dmg","pyro_skill_avg_dmg","pyro_burst_avg_dmg","cryo_skill_dmg","cryo_burst_dmg","cryo_skill_crit_dmg","cryo_burst_crit_dmg","cryo_skill_avg_dmg","cryo_burst_avg_dmg","phy_dmg","phy_crit_dmg","phy_avg_dmg","anemo_ele_dmg","anemo_ele_crit_dmg","anemo_ele_avg_dmg","geo_ele_dmg","geo_ele_crit_dmg","geo_ele_avg_dmg","electro_ele_dmg","electro_ele_crit_dmg","electro_ele_avg_dmg","hydro_ele_dmg","hydro_ele_crit_dmg","hydro_ele_avg_dmg","pyro_ele_dmg","pyro_ele_crit_dmg","pyro_ele_avg_dmg","cryo_ele_dmg","cryo_ele_crit_dmg","cryo_ele_avg_dmg","overload_dmg","overload_dmg_bonus","overload_multi","electrocharged_dmg","electrocharged_dmg_bonus","electrocharged_multi","superconduct_dmg","superconduct_dmg_bonus","superconduct_multi","burning_dmg","burning_dmg_bonus","swirl_dmg","swirl_dmg_bonus","swirl_multi","shatter_dmg","shatter_dmg_bonus","shatter_multi","crystalize_dmg","crystalize_dmg_bonus","melt_dmg_bonus","vaporize_dmg_bonus","pyro_vaporize_normal_dmg","pyro_vaporize_normal_crit_dmg","pyro_vaporize_normal_avg_dmg","pyro_vaporize_chraged_dmg","pyro_vaporize_chraged_crit_dmg","pyro_vaporize_chraged_avg_dmg","pyro_vaporize_plunge_dmg","pyro_vaporize_plunge_crit_dmg","pyro_vaporize_plunge_avg_dmg","pyro_vaporize_skill_dmg","pyro_vaporize_skill_crit_dmg","pyro_vaporize_skill_avg_dmg","pyro_vaporize_burst_dmg","pyro_vaporize_burst_crit_dmg","pyro_vaporize_burst_avg_dmg","pyro_vaporize_ele_dmg","pyro_vaporize_ele_crit_dmg","pyro_vaporize_ele_avg_dmg","hydro_vaporize_normal_dmg","hydro_vaporize_normal_crit_dmg","hydro_vaporize_normal_avg_dmg","hydro_vaporize_chraged_dmg","hydro_vaporize_chraged_crit_dmg","hydro_vaporize_chraged_avg_dmg","hydro_vaporize_plunge_dmg","hydro_vaporize_plunge_crit_dmg","hydro_vaporize_plunge_avg_dmg","hydro_vaporize_skill_dmg","hydro_vaporize_skill_crit_dmg","hydro_vaporize_skill_avg_dmg","hydro_vaporize_burst_dmg","hydro_vaporize_burst_crit_dmg","hydro_vaporize_burst_avg_dmg","hydro_vaporize_ele_dmg","hydro_vaporize_ele_crit_dmg","hydro_vaporize_ele_avg_dmg","pyro_melt_normal_dmg","pyro_melt_normal_crit_dmg","pyro_melt_normal_avg_dmg","pyro_melt_chraged_dmg","pyro_melt_chraged_crit_dmg","pyro_melt_chraged_avg_dmg","pyro_melt_plunge_dmg","pyro_melt_plunge_crit_dmg","pyro_melt_plunge_avg_dmg","pyro_melt_skill_dmg","pyro_melt_skill_crit_dmg","pyro_melt_skill_avg_dmg","pyro_melt_burst_dmg","pyro_melt_burst_crit_dmg","pyro_melt_burst_avg_dmg","pyro_melt_ele_dmg","pyro_melt_ele_crit_dmg","pyro_melt_ele_avg_dmg","cryo_melt_normal_dmg","cryo_melt_normal_crit_dmg","cryo_melt_normal_avg_dmg","cryo_melt_chraged_dmg","cryo_melt_chraged_crit_dmg","cryo_melt_chraged_avg_dmg","cryo_melt_plunge_dmg","cryo_melt_plunge_crit_dmg","cryo_melt_plunge_avg_dmg","cryo_melt_skill_dmg","cryo_melt_skill_crit_dmg","cryo_melt_skill_avg_dmg","cryo_melt_burst_dmg","cryo_melt_burst_crit_dmg","cryo_melt_burst_avg_dmg","cryo_melt_ele_dmg","cryo_melt_ele_crit_dmg","cryo_melt_ele_avg_dmg","enemy_phy_res","enemy_phy_res_multi","enemy_phy_immunity","anemo_enemy_ele_res","anemo_enemy_ele_res_multi","anemo_enemy_ele_immunity","geo_enemy_ele_res","geo_enemy_ele_res_multi","geo_enemy_ele_immunity","electro_enemy_ele_res","electro_enemy_ele_res_multi","electro_enemy_ele_immunity","hydro_enemy_ele_res","hydro_enemy_ele_res_multi","hydro_enemy_ele_immunity","pyro_enemy_ele_res","pyro_enemy_ele_res_multi","pyro_enemy_ele_immunity","cryo_enemy_ele_res","cryo_enemy_ele_res_multi","cryo_enemy_ele_immunity","ele_mas","amp_reaction_base_multi","enemy_level_multi","enemy_level","dmgModeToHitMode","avg_dmg","dmg","DatabaseInitAndVerify","dbVersion","getDatabaseVersion","localStorage","filter","startsWith","character","loadFromLocalStorage","characterKey","equippedArtifacts","dbKey","getItem","id","dmgMode","rest","buildSetting","mainStat","stat","v2change","statFilters","entries","hitMode","saveToLocalStorage","values","artid","art","location","removeItem","ArtifactDisplayState","filterMainStatKey","filterSubstats","charDBJustPopualted","CharacterDatabase","populateDatebaseFromLocalStorage","artDBJustPopualted","ArtifactDatabase","getArtifactDatabase","valid","artInSlotId","getArtifactIDFromSlot","slotKey","equipArtifact","Artifact","substatsValidation","numStars","keyMapping","setKey","mainStatKey","endsWith","replace","substats","obj","updateArtifact","chars","getCharacterDatabase","equippedArt","moveToNewLocation","artifactConditionals","cond","srcKey","srcKey2","updateCharacter","setDatabaseVersion","defVal","version","CharacterSelectionDropdownList","onSelect","getCharacterKeyList","sort","a","b","Character","getName","children","func","index","Children","child","isValidElement","ReactionToggle","reactionMode","setReactionMode","charEleKey","getElementalKey","eleInterArr","ElementToReactionKeys","includes","getWeaponTypeKey","push","defaultValue","val","src","HitModeToggle","setHitMode","DamageOptionsAndCalculation","setState","setOverride","newBuild","equippedBuild","build","ContextAwareToggle","eventKey","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","bg","Header","xs","r","Button","Collapse","Body","href","rel","xl","getStatValueWithOverride","Stat","getStatNameRaw","getBaseStatValue","getElementalKeys","eleKey","immunityStatKey","elementImmunity","prependEle","m","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","finalStats","autoInfused","weaponTypeKey","getPrintableFormulaStatKeyList","statsDisplayKeys","printStat","printFormula","StatInput","percent","restProps","Prepend","Text","Append","undefined","placement","overlay","style","pointerEvents","faUndo","DisplayStatDiff","label","oldVal","fixed","unit","diff","oldText","diffText","toFixed","StatDisplay","editable","invalid","getStatUnit","fixedUnit","getStatName","talentKey","sectionIndex","fieldIndex","field","getTalentField","labelVariant","getTalentFieldValue","hasOverride","noop","ToggleButton","checked","inputRef","_useState","focused","setFocused","handleFocus","useCallback","tagName","handleBlur","active","autoComplete","StatDisplayComponent","cardbg","fields","header","getTalentName","md","JSON","stringify","ToggleButtonGroup","_useUncontrolled","useUncontrolled","controlledProps","getValues","concat","invariant","ButtonGroup","toggle","_child$props","childVal","childOnChange","cloneElement","chainFunction","inputVal","event","isActive","n","handleToggle","vertical","CharacterCard","onEdit","onDelete","cardClassName","footer","useReducer","x","forceUpdate","useEffect","Promise","all","getCharacterDataImport","Weapon","getWeaponDataImport","getDataImport","calculateBuild","setToSlots","weapon","constellation","elementKey","weaponName","getWeaponName","weaponMainVal","getWeaponMainStatValWithOverride","weaponSubKey","getWeaponSubStatKey","weaponSubVal","getWeaponSubStatValWithOverride","weaponLevelName","getLevelName","levelKey","weaponPassiveName","getWeaponPassiveName","faEdit","faTrashAlt","cursor","getThumb","getStar","thumbnail","refineIndex","getSetEffects","arr","artifactSetName","getSetName","highestNum","Math","max","statVal","Footer","Link","to","pathname","msToUnits","ms","milliseconds","seconds","floor","minutes","hours","timeString","timeText","strPadLeft","timeStringMs","getPercentage","now","min","percentage","round","renderProgressBar","_classNames","srOnly","striped","animated","role","width","ProgressBar","_ref2","isChild","wrapperProps","scrollbarSize","recalc","canUseDOM","scrollDiv","document","position","top","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","activeElement","doc","ownerDocument","nodeName","addClass","element","classList","hasClass","setAttribute","baseVal","replaceClassName","origClass","classToRemove","RegExp","removeClass","remove","isWindow","node","window","nodeType","DOCUMENT_NODE","defaultView","isOverflowing","container","toLowerCase","win","innerWidth","bodyIsOverflowing","scrollHeight","clientHeight","BLACKLIST","siblings","exclude","cb","isHidable","ariaHidden","hide","removeAttribute","manager","ModalManager","_temp","_ref$hideSiblingNodes","hideSiblingNodes","_ref$handleContainerO","handleContainerOverflow","this","modals","containers","data","getScrollbarSize","_proto","isContainerOverflowing","modal","containerIndexFromModal","overflowing","idx","some","d","findIndexOf","setContainerStyle","containerState","paddingRight","css","removeContainerStyle","assign","modalIdx","containerIdx","dialog","backdrop","hideSiblings","classes","split","bind","splice","_ref3","showSiblings","_data$modals","isTopModal","useModalManager","provided","modalManager","useRef","current","setDialogRef","setBackdropRef","Modal","_ref$show","show","_ref$role","_ref$backdrop","_ref$keyboard","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","_ref$autoFocus","autoFocus","_ref$enforceFocus","enforceFocus","_ref$restoreFocus","restoreFocus","restoreFocusOptions","renderDialog","_ref$renderBackdrop","renderBackdrop","providedManager","containerRef","containerClassName","onShow","_ref$onHide","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","contains","handleHide","_lastFocusRef$current","useWillUnmount","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","tabIndex","appear","unmountOnExit","_len","arguments","args","_key","apply","backdropElement","BackdropTransition","ReactDOM","createPortal","propTypes","PropTypes","bool","any","oneOfType","oneOf","string","elementType","shape","preventScroll","instanceOf","Manager","Selector","BootstrapModalManager","_ModalManager","_inheritsLoose","adjustAndStore","adjust","_css","actual","dataset","restore","_css2","_this","qsa","el","_this2","createWithBsPrefix","ModalContext","createContext","ModalDialog","contentClassName","centered","scrollable","dialogClass","ModalHeader","closeLabel","closeButton","context","handleClick","CloseButton","DivStyledAsH4","divWithClassName","animation","dialogAs","DialogTransition","Fade","dialogClassName","Dialog","ariaLabelledby","backdropClassName","propsManager","modalStyle","setStyle","_useState2","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","_useCallbackRef","useCallbackRef","setModalRef","modalContext","useMemo","getModalManager","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","documentElement","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","Provider","BaseModal","preventDefault","_len3","_key3","addEventListener","_len2","_key2","_len4","_key4","onMouseUp","onMouseDown","ModalBody","Title","ModalTitle","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","Worker_fn","Worker","CharacterDisplayCardPromise","CharacterDisplayCard","lazy","warningBuildNumber","maxBuildsToShowList","BuildDisplay","forceUpdateBuildDisplay","selectCharacter","getInitialState","state","maxBuildsToShow","showCharacterModal","splitArtifacts","getSlotKeys","artifactDatabase","useLockedArts","lock","splitArtifactsBySlot","artifactsSlotsToSelectMainStats","changeMainStat","autoGenerateBuilds","changeSetFilterKey","newkey","setsNumArr","setFilters","num","dropdownitemsForStar","star","getSetsByMaxStarEntries","setobj","getSetEffectsObj","artsAccountedOther","reduce","accu","cur","ind","every","Dropdown","totBuildNumber","generateBuilds","builds","generationProgress","generationDuration","generatingBuilds","ascending","optimizationTarget","artifactsAssumeFull","getFormulaPath","initialStats","calculateCharacterWithWeaponStats","artifactSetEffects","getAllArtifactSetEffectsObj","deepClone","artArr","mainStatVal","getMainStatValue","minFilters","maxFilters","worker","terminate","onmessage","progress","timing","ReactGA","category","variable","calculateBuildWithObjs","artifacts","postMessage","BuildGeneratorEditorCard","characterName","artsAccounted","calculateTotalBuildNumber","totalBuildNumberString","toLocaleString","generationProgressString","buildAlert","progPercent","Alert","characterDropDown","DropdownButton","title","Divider","CharacterSelection","cKey","Card","Row","Col","lg","hasTalentPage","HitModeCard","StatFilterCard","setStatFilters","sFs","showArtCondModal","Boolean","setNum","ItemText","setNkey","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","ConditionalsUtil","getConditionalNum","getConditionalStats","conditionalElement","getSetEffectText","getSlotNameWithIcon","getStatNameWithPercent","getSlotMainStatKeys","SortByStatDropdown","updater","closeModal","modalBuild","BuildModal","Suspense","fallback","setCharacterKey","onClose","closeArtCondModal","ArtConditionalModal","artSetKeyList","s","flat","faTimes","getPieceIcon","getPieces","getRarityArr","pop","Image","componentDidUpdate","prevProps","prevState","pageview","getDisplayStatKeys","Container","ListGroup","ArtifactDisplayItem","artifactIds","join","sortByText","talentLevelKeys","getStatVariant","getStatNamePretty","drop","align","minWidth","talentField","faSortAmountDownAlt","faSortAmountUp","StatFilterItem","statKeys","close","setFilter","isFloat","inputProps","minInputProps","maxInputProps","InputGroup","sKey","faTrash","char","basicKeys","remainingKeys","action","slotarr1","slotarr","getSlotIcon","initialState","getRandomElementFromArray","array","random","getRandomIntInclusive","ceil","parse","setItem","closeEnoughFloat","abs","closeEnoughInt","clamp","low","high","getArrLastElement","clampPercent","pad","slice","hammingDistance","str1","str2","dist","j","match","objMultiplication","multi","Error","htmlStatsData","pretty","stats","f","expand","statList","formulaKeys","FormulaText","newModifiersKeys","modifierText","mkey","multiplier","options","statName","statUnit","reactionMatrixElementRenderer","o","sign","disVal","powerText","heal_multi","enemyLevel_multi","ele","res","move","amplificative_dmg_","reaction","variants","baseMulti","transformative_dmg_","crystalize_eleMas_","crystalize_multi","crystalize_hit","artifactsBySlot","setKeys","filteredArtifactsBySlot","slotKeys","artifactsBySet","artifact","setCount","result","slotPerm","artifactSetPermutations","skillKey","elemental","characterEle","weaponType","getTalentStatKeyVariant","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","formulaDB","getCDataObj","formulaKey","tk","find","getSpecializedStatKey","getSpeicalizedStatVal","getLevel","characterObj","baseStat","getIndexFromlevelkey","charKey","getElementalName","elementalKey","getAllCharacterKeys","getElementalKeysWithoutPhysical","getConstellationName","constellationName","getTitles","titles","getlevelKeys","getlevelNames","getAscension","getSpecializedStat","specializeStat","thumbImg","getCard","cardImg","getTalentImg","getTalent","img","getConstellationImg","constIndex","talent","getTalentLevelBoost","talents","talentBoost","boostEntry","getTalentDocument","getTalentDocumentSections","ascension","section","getTalentStats","getTalentStatsAll","statsArr","getTalentConditional","conditionalKey","talentLvlKey","sections","tempCond","getTalentConditionalStats","getConditionalProp","stacks","getTalentConditionalFields","auto","infusable","transReactions","charFormulas","genericAvgHit","reactions","baseStatOverrides","equipArtifacts","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","PreprocessFormulas","mergeStats","modifier","talentConditionals","overrides","hasOwnProperty","specializedStatVal","specialStatKey","getWeaponBonusStat","getWeaponConditionalStat","initiated","characterDatabase","isInvalid","getIdNameList","dchar","unequipArtifactOnSlot","equipArtifactBuild","clearDatabase","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","physical_dmg_","ele_dmg_","2","ArtifactSubStatsData","ArtifactSubstatsMinMax","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","rolls","efficiency","getSubstatEfficiency","getArtifactEfficiency","currentEfficiency","maximumEfficiency","errMsgs","currentNumOfRolls","sum","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","maxPerRoll","getSubstatAllMax","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getSetKeys","rarity","pieces","getPieceName","icons","setEffects","artifactSetEffect","setNumKeys","charFinalStats","setEffectText","getSlotName","slotIcon","databaseObj","getStars","getMainStatKeys","getMainStatValues","numStar","main","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatKey","subStatValue","rollData","maxNumRoll","rollOption","reverse","roll","len","c","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","_createForOfIteratorHelper","allowArrayLike","it","F","done","_e","err","normalCompletion","didErr","step","next","_e2","conditionals","srcKeyObj","findIndex","newCond","fieldName","physical","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","const","characterLevel","weaponATK","dmg_","weakspotDMG_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","staminaDec_","staminaGlidingDec_","staminaChargedDec_","crystalize_dmg_","burning_dmg_","enemyLevel","pow","dependencyKeys","debug","constData","formulaList","tmp","constModifier","dynamicModifier","constFunc","dynamicFunc","funcIndicator","console","log","error","moveName","eleName","opt","typeName","reactionName","getLevelIndex","weaponKey","getWeaponRarity","passiveName","getWeaponPassiveDescription","passiveDescription","getWeaponDescription","description","getWeaponConditional","getWeaponImg","getWeaponMainStatVal","baseStats","getWeaponSubStatVal","sub","getWeaponsOfType","getWeaponTypeName","getWeaponTypeKeys","weaponObj","overrideMainVal","overrideSubVal"],"mappings":"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","file":"static/js/8.636eb210.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst CustomFormControl = ({ float = false, placeholder, value, onValueChange, disabled, allowEmpty = false }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  let displayValue = value\r\n  if (allowEmpty) displayValue = typeof value === \"number\" ? value : \"\"\r\n  else displayValue = !value && focus ? \"\" : (value?.toString?.() || value)\r\n  const props = {\r\n    type: \"number\",\r\n    className: \"hide-appearance\",\r\n    placeholder,\r\n    value: displayValue,\r\n    disabled,\r\n    onChange: (e) => {\r\n      let value = e.target.value;\r\n      if (float) {\r\n        if (allowEmpty) value = value === \"\" ? null : (parseFloat(value) || 0)\r\n        else value = parseFloat(value) || 0\r\n      } else {\r\n        if (allowEmpty) value = value === \"\" ? null : (parseInt(value) || 0)\r\n        else value = parseInt(value) || 0\r\n      }\r\n      onValueChange?.(value);\r\n    },\r\n    onFocus: () => setFocus(true),\r\n    onBlur: () => setFocus(false),\r\n  }\r\n  return <FormControl {...props} aria-label=\"custom-input\" />\r\n}\r\nexport default CustomFormControl;","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: [ \"Overloaded\", \"pyro\", 4 ],\r\n  shattered: [ \"Shattered\", \"physical\", 3 ],\r\n  electrocharged: [ \"Electro-Charged\", \"electro\", 2.4 ],\r\n  superconduct: [ \"Superconduct\", \"cryo\", 1 ],\r\n  swirl: [ \"Swirl\", \"anemo\", 1.2 ],\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: [\"Vaporize\", { pyro: 1.5, hydro: 2 }],\r\n  melt: [\"Melt\", { pyro: 2, cryo: 1.5 }],\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\nexport const ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\n","import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key) &&\r\n        console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key => \r\n      !StatData[key]?.const &&\r\n        console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\r\nconst reduceOptimizationTarget = (optimizationTarget) =>\r\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0]] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\r\n\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n  reduceOptimizationTarget,\r\n}\r\n","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","//for DB v2, we changed a bunch of keys.\r\nconst changes = {\r\n  char_ele_key: \"characterEle\",\r\n  char_level: \"characterLevel\",\r\n\r\n  hp_base: \"characterHP\",\r\n  hp_final: \"finalHP\",\r\n  atk_character_base: \"characterATK\",\r\n  atk_base: \"baseATK\",\r\n  atk_final: \"finalATK\",\r\n  atk_weapon: \"weaponATK\",\r\n  def_base: \"characterDEF\",\r\n  def_final: \"finalDEF\",\r\n  phy_dmg_bonus: \"physical_dmg_\",\r\n  phy_res: \"physical_res_\",\r\n  anemo_ele_dmg_bonus: \"anemo_dmg_\",\r\n  geo_ele_dmg_bonus: \"geo_dmg_\",\r\n  electro_ele_dmg_bonus: \"electro_dmg_\",\r\n  hydro_ele_dmg_bonus: \"hydro_dmg_\",\r\n  pyro_ele_dmg_bonus: \"pyro_dmg_\",\r\n  cryo_ele_dmg_bonus: \"cryo_dmg_\",\r\n  anemo_ele_res: \"anemo_res_\",\r\n  geo_ele_res: \"geo_res_\",\r\n  electro_ele_res: \"electro_res_\",\r\n  hydro_ele_res: \"hydro_res_\",\r\n  pyro_ele_res: \"pyro_res_\",\r\n  cryo_ele_res: \"cryo_res_\",\r\n  ener_rech: \"enerRech_\",\r\n  crit_rate: \"critRate_\",\r\n  crit_dmg: \"critDMG_\",\r\n  stam: \"stamina\",\r\n  heal_bonu: \"heal_\",\r\n  inc_heal: \"incHeal_\",\r\n  pow_shield: \"powShield_\",\r\n  red_cd: \"cdRed_\",\r\n  skill_cd_red: \"skillCDRed_\",\r\n  burst_cd_red: \"burstCDRed_\",\r\n  all_dmg_bonus: \"dmg_\",\r\n  move_spd: \"moveSPD_\",\r\n  atk_spd: \"atkSPD_\",\r\n  weakspot_dmg: \"weakspotDMG_\",\r\n  stamina_dec: \"staminaDec_\",\r\n  stamina_gliding_dec: \"staminaGlidingDec_\",\r\n  stamina_charged_dec: \"staminaChargedDec_\",\r\n  ele_mas_multi_x: \"eleMasX\",\r\n  ele_mas_multi_y: \"eleMasY\",\r\n  ele_mas_multi_z: \"eleMasZ\",\r\n\r\n  norm_atk_dmg: \"physical_normal_hit\",\r\n  char_atk_dmg: \"physical_charged_hit\",\r\n  plunge_dmg: \"physical_plunging_hit\",\r\n  norm_atk_crit_dmg: \"physical_normal_critHit\",\r\n  char_atk_crit_dmg: \"physical_charged_critHit\",\r\n  plunge_crit_dmg: \"physical_plunging_critHit\",\r\n  norm_atk_avg_dmg: \"physical_normal_avgHit\",\r\n  char_atk_avg_dmg: \"physical_charged_avgHit\",\r\n  plunge_avg_dmg: \"physical_plunging_avgHit\",\r\n  norm_atk_dmg_bonus: \"normal_dmg_\",\r\n  char_atk_dmg_bonus: \"charged_dmg_\",\r\n  plunge_atk_dmg_bonus: \"plunging_dmg_\",\r\n  skill_dmg_bonus: \"skill_dmg_\",\r\n  burst_dmg_bonus: \"burst_dmg_\",\r\n  norm_atk_crit_rate: \"normal_critRate_\",\r\n  char_atk_crit_rate: \"charged_critRate_\",\r\n  skill_crit_rate: \"skill_critRate_\",\r\n  burst_crit_rate: \"burst_critRate_\",\r\n\r\n  anemo_skill_dmg: \"anemo_skill_hit\",\r\n  anemo_burst_dmg: \"anemo_burst_hit\",\r\n  anemo_skill_crit_dmg: \"anemo_skill_critHit\",\r\n  anemo_burst_crit_dmg: \"anemo_burst_critHit\",\r\n  anemo_skill_avg_dmg: \"anemo_skill_avgHit\",\r\n  anemo_burst_avg_dmg: \"anemo_burst_avgHit\",\r\n  geo_skill_dmg: \"geo_skill_hit\",\r\n  geo_burst_dmg: \"geo_burst_hit\",\r\n  geo_skill_crit_dmg: \"geo_skill_critHit\",\r\n  geo_burst_crit_dmg: \"geo_burst_critHit\",\r\n  geo_skill_avg_dmg: \"geo_skill_avgHit\",\r\n  geo_burst_avg_dmg: \"geo_burst_avgHit\",\r\n  electro_skill_dmg: \"electro_skill_hit\",\r\n  electro_burst_dmg: \"electro_burst_hit\",\r\n  electro_skill_crit_dmg: \"electro_skill_critHit\",\r\n  electro_burst_crit_dmg: \"electro_burst_critHit\",\r\n  electro_skill_avg_dmg: \"electro_skill_avgHit\",\r\n  electro_burst_avg_dmg: \"electro_burst_avgHit\",\r\n  hydro_skill_dmg: \"hydro_skill_hit\",\r\n  hydro_burst_dmg: \"hydro_burst_hit\",\r\n  hydro_skill_crit_dmg: \"hydro_skill_critHit\",\r\n  hydro_burst_crit_dmg: \"hydro_burst_critHit\",\r\n  hydro_skill_avg_dmg: \"hydro_skill_avgHit\",\r\n  hydro_burst_avg_dmg: \"hydro_burst_avgHit\",\r\n  pyro_skill_dmg: \"pyro_skill_hit\",\r\n  pyro_burst_dmg: \"pyro_burst_hit\",\r\n  pyro_skill_crit_dmg: \"pyro_skill_critHit\",\r\n  pyro_burst_crit_dmg: \"pyro_burst_critHit\",\r\n  pyro_skill_avg_dmg: \"pyro_skill_avgHit\",\r\n  pyro_burst_avg_dmg: \"pyro_burst_avgHit\",\r\n  cryo_skill_dmg: \"cryo_skill_hit\",\r\n  cryo_burst_dmg: \"cryo_burst_hit\",\r\n  cryo_skill_crit_dmg: \"cryo_skill_critHit\",\r\n  cryo_burst_crit_dmg: \"cryo_burst_critHit\",\r\n  cryo_skill_avg_dmg: \"cryo_skill_avgHit\",\r\n  cryo_burst_avg_dmg: \"cryo_burst_avgHit\",\r\n\r\n  phy_dmg: \"physical_hit\",\r\n  phy_crit_dmg: \"physical_critHit\",\r\n  phy_avg_dmg: \"physical_avgHit\",\r\n  anemo_ele_dmg: \"anemo_hit\",\r\n  anemo_ele_crit_dmg: \"anemo_critHit\",\r\n  anemo_ele_avg_dmg: \"anemo_avgHit\",\r\n  geo_ele_dmg: \"geo_hit\",\r\n  geo_ele_crit_dmg: \"geo_critHit\",\r\n  geo_ele_avg_dmg: \"geo_avgHit\",\r\n  electro_ele_dmg: \"electro_hit\",\r\n  electro_ele_crit_dmg: \"electro_critHit\",\r\n  electro_ele_avg_dmg: \"electro_avgHit\",\r\n  hydro_ele_dmg: \"hydro_hit\",\r\n  hydro_ele_crit_dmg: \"hydro_critHit\",\r\n  hydro_ele_avg_dmg: \"hydro_avgHit\",\r\n  pyro_ele_dmg: \"pyro_hit\",\r\n  pyro_ele_crit_dmg: \"pyro_critHit\",\r\n  pyro_ele_avg_dmg: \"pyro_avgHit\",\r\n  cryo_ele_dmg: \"cryo_hit\",\r\n  cryo_ele_crit_dmg: \"cryo_critHit\",\r\n  cryo_ele_avg_dmg: \"cryo_avgHit\",\r\n\r\n  overload_dmg: \"overload_hit\",\r\n  overload_dmg_bonus: \"overload_dmg_\",\r\n  overload_multi: \"overload_multi\",\r\n  electrocharged_dmg: \"electrocharged_hit\",\r\n  electrocharged_dmg_bonus: \"electrocharged_dmg_\",\r\n  electrocharged_multi: \"electrocharged_multi\",\r\n  superconduct_dmg: \"superconduct_hit\",\r\n  superconduct_dmg_bonus: \"superconduct_dmg_\",\r\n  superconduct_multi: \"superconduct_multi\",\r\n  burning_dmg: \"burning_hit\",\r\n  burning_dmg_bonus: \"burning_dmg_\",\r\n  swirl_dmg: \"swirl_hit\",\r\n  swirl_dmg_bonus: \"swirl_dmg_\",\r\n  swirl_multi: \"swirl_multi\",\r\n  shatter_dmg: \"shattered_hit\",\r\n  shatter_dmg_bonus: \"shattered_dmg_\",\r\n  shatter_multi: \"shattered_multi\",\r\n  crystalize_dmg: \"crystalize_hit\",\r\n  crystalize_dmg_bonus: \"crystalize_dmg_\",\r\n\r\n  melt_dmg_bonus: \"melt_dmg_\",\r\n  vaporize_dmg_bonus: \"vaporize_dmg_\",\r\n\r\n  pyro_vaporize_normal_dmg: \"pyro_vaporize_normal_hit\",\r\n  pyro_vaporize_normal_crit_dmg: \"pyro_vaporize_normal_critHit\",\r\n  pyro_vaporize_normal_avg_dmg: \"pyro_vaporize_normal_avgHit\",\r\n  pyro_vaporize_chraged_dmg: \"pyro_vaporize_chraged_hit\",\r\n  pyro_vaporize_chraged_crit_dmg: \"pyro_vaporize_chraged_critHit\",\r\n  pyro_vaporize_chraged_avg_dmg: \"pyro_vaporize_chraged_avgHit\",\r\n  pyro_vaporize_plunge_dmg: \"pyro_vaporize_plunging_hit\",\r\n  pyro_vaporize_plunge_crit_dmg: \"pyro_vaporize_plunging_critHit\",\r\n  pyro_vaporize_plunge_avg_dmg: \"pyro_vaporize_plunging_avgHit\",\r\n  pyro_vaporize_skill_dmg: \"pyro_vaporize_skill_hit\",\r\n  pyro_vaporize_skill_crit_dmg: \"pyro_vaporize_skill_critHit\",\r\n  pyro_vaporize_skill_avg_dmg: \"pyro_vaporize_skill_avgHit\",\r\n  pyro_vaporize_burst_dmg: \"pyro_vaporize_burst_hit\",\r\n  pyro_vaporize_burst_crit_dmg: \"pyro_vaporize_burst_critHit\",\r\n  pyro_vaporize_burst_avg_dmg: \"pyro_vaporize_burst_avgHit\",\r\n  pyro_vaporize_ele_dmg: \"pyro_vaporize_hit\",\r\n  pyro_vaporize_ele_crit_dmg: \"pyro_vaporize_critHit\",\r\n  pyro_vaporize_ele_avg_dmg: \"pyro_vaporize_avgHit\",\r\n  hydro_vaporize_normal_dmg: \"hydro_vaporize_normal_hit\",\r\n  hydro_vaporize_normal_crit_dmg: \"hydro_vaporize_normal_critHit\",\r\n  hydro_vaporize_normal_avg_dmg: \"hydro_vaporize_normal_avgHit\",\r\n  hydro_vaporize_chraged_dmg: \"hydro_vaporize_chraged_hit\",\r\n  hydro_vaporize_chraged_crit_dmg: \"hydro_vaporize_chraged_critHit\",\r\n  hydro_vaporize_chraged_avg_dmg: \"hydro_vaporize_chraged_avgHit\",\r\n  hydro_vaporize_plunge_dmg: \"hydro_vaporize_plunging_hit\",\r\n  hydro_vaporize_plunge_crit_dmg: \"hydro_vaporize_plunging_critHit\",\r\n  hydro_vaporize_plunge_avg_dmg: \"hydro_vaporize_plunging_avgHit\",\r\n  hydro_vaporize_skill_dmg: \"hydro_vaporize_skill_hit\",\r\n  hydro_vaporize_skill_crit_dmg: \"hydro_vaporize_skill_critHit\",\r\n  hydro_vaporize_skill_avg_dmg: \"hydro_vaporize_skill_avgHit\",\r\n  hydro_vaporize_burst_dmg: \"hydro_vaporize_burst_hit\",\r\n  hydro_vaporize_burst_crit_dmg: \"hydro_vaporize_burst_critHit\",\r\n  hydro_vaporize_burst_avg_dmg: \"hydro_vaporize_burst_avgHit\",\r\n  hydro_vaporize_ele_dmg: \"hydro_vaporize_hit\",\r\n  hydro_vaporize_ele_crit_dmg: \"hydro_vaporize_critHit\",\r\n  hydro_vaporize_ele_avg_dmg: \"hydro_vaporize_avgHit\",\r\n  pyro_melt_normal_dmg: \"pyro_melt_normal_hit\",\r\n  pyro_melt_normal_crit_dmg: \"pyro_melt_normal_critHit\",\r\n  pyro_melt_normal_avg_dmg: \"pyro_melt_normal_avgHit\",\r\n  pyro_melt_chraged_dmg: \"pyro_melt_chraged_hit\",\r\n  pyro_melt_chraged_crit_dmg: \"pyro_melt_chraged_critHit\",\r\n  pyro_melt_chraged_avg_dmg: \"pyro_melt_chraged_avgHit\",\r\n  pyro_melt_plunge_dmg: \"pyro_melt_plunging_hit\",\r\n  pyro_melt_plunge_crit_dmg: \"pyro_melt_plunging_critHit\",\r\n  pyro_melt_plunge_avg_dmg: \"pyro_melt_plunging_avgHit\",\r\n  pyro_melt_skill_dmg: \"pyro_melt_skill_hit\",\r\n  pyro_melt_skill_crit_dmg: \"pyro_melt_skill_critHit\",\r\n  pyro_melt_skill_avg_dmg: \"pyro_melt_skill_avgHit\",\r\n  pyro_melt_burst_dmg: \"pyro_melt_burst_hit\",\r\n  pyro_melt_burst_crit_dmg: \"pyro_melt_burst_critHit\",\r\n  pyro_melt_burst_avg_dmg: \"pyro_melt_burst_avgHit\",\r\n  pyro_melt_ele_dmg: \"pyro_melt_hit\",\r\n  pyro_melt_ele_crit_dmg: \"pyro_melt_critHit\",\r\n  pyro_melt_ele_avg_dmg: \"pyro_melt_avgHit\",\r\n  cryo_melt_normal_dmg: \"cryo_melt_normal_hit\",\r\n  cryo_melt_normal_crit_dmg: \"cryo_melt_normal_critHit\",\r\n  cryo_melt_normal_avg_dmg: \"cryo_melt_normal_avgHit\",\r\n  cryo_melt_chraged_dmg: \"cryo_melt_chraged_hit\",\r\n  cryo_melt_chraged_crit_dmg: \"cryo_melt_chraged_critHit\",\r\n  cryo_melt_chraged_avg_dmg: \"cryo_melt_chraged_avgHit\",\r\n  cryo_melt_plunge_dmg: \"cryo_melt_plunging_hit\",\r\n  cryo_melt_plunge_crit_dmg: \"cryo_melt_plunging_critHit\",\r\n  cryo_melt_plunge_avg_dmg: \"cryo_melt_plunging_avgHit\",\r\n  cryo_melt_skill_dmg: \"cryo_melt_skill_hit\",\r\n  cryo_melt_skill_crit_dmg: \"cryo_melt_skill_critHit\",\r\n  cryo_melt_skill_avg_dmg: \"cryo_melt_skill_avgHit\",\r\n  cryo_melt_burst_dmg: \"cryo_melt_burst_hit\",\r\n  cryo_melt_burst_crit_dmg: \"cryo_melt_burst_critHit\",\r\n  cryo_melt_burst_avg_dmg: \"cryo_melt_burst_avgHit\",\r\n  cryo_melt_ele_dmg: \"cryo_melt_hit\",\r\n  cryo_melt_ele_crit_dmg: \"cryo_melt_critHit\",\r\n  cryo_melt_ele_avg_dmg: \"cryo_melt_avgHit\",\r\n\r\n  enemy_phy_res: \"physical_enemyRes_\",\r\n  enemy_phy_res_multi: \"physical_enemyRes_multi\",\r\n  enemy_phy_immunity: \"physical_enemyImmunity\",\r\n  anemo_enemy_ele_res: \"anemo_enemyRes_\",\r\n  anemo_enemy_ele_res_multi: \"anemo_enemyRes_multi\",\r\n  anemo_enemy_ele_immunity: \"anemo_enemyImmunity\",\r\n  geo_enemy_ele_res: \"geo_enemyRes_\",\r\n  geo_enemy_ele_res_multi: \"geo_enemyRes_multi\",\r\n  geo_enemy_ele_immunity: \"geo_enemyImmunity\",\r\n  electro_enemy_ele_res: \"electro_enemyRes_\",\r\n  electro_enemy_ele_res_multi: \"electro_enemyRes_multi\",\r\n  electro_enemy_ele_immunity: \"electro_enemyImmunity\",\r\n  hydro_enemy_ele_res: \"hydro_enemyRes_\",\r\n  hydro_enemy_ele_res_multi: \"hydro_enemyRes_multi\",\r\n  hydro_enemy_ele_immunity: \"hydro_enemyImmunity\",\r\n  pyro_enemy_ele_res: \"pyro_enemyRes_\",\r\n  pyro_enemy_ele_res_multi: \"pyro_enemyRes_multi\",\r\n  pyro_enemy_ele_immunity: \"pyro_enemyImmunity\",\r\n  cryo_enemy_ele_res: \"cryo_enemyRes_\",\r\n  cryo_enemy_ele_res_multi: \"cryo_enemyRes_multi\",\r\n  cryo_enemy_ele_immunity: \"cryo_enemyImmunity\",\r\n\r\n  ele_mas: \"eleMas\",\r\n  amp_reaction_base_multi: \"ampReactionBase_multi\",\r\n\r\n  enemy_level_multi: \"enemyLevel_multi\",\r\n  enemy_level: \"enemyLevel\"\r\n}\r\n/*\r\nconst same = [\r\n  hp, hp_, atk, atk_, def, def_, pyro_vaporize_multi, hydro_vaporize_multi, pyro_melt_multi, cryo_melt_multi,\r\n]\r\n\r\nconst removed = [\r\n  norm_atk_crit_multi, char_atk_crit_multi, norm_atk_bonus_multi, char_atk_bonus_multi, plunge_bonus_multi, skill_crit_multi, burst_crit_multi, skill_bonus_multi, burst_bonus_multi, phy_bonus_multi, anemo_ele_bonus_multi, geo_ele_bonus_multi, electro_ele_bonus_multi, hydro_ele_bonus_multi, pyro_ele_bonus_multi, cryo_ele_bonus_multi, crit_dmg_multi, crit_multi,\r\n]\r\n\r\nconst aded = [\r\n  plunging_critRate_, final_normal_critRate_, final_charged_critRate_, final_plunging_critRate_, final_skill_critRate_, final_burst_critRate_,\r\n]\r\n*/\r\n\r\n//renamed dmgMode to hitMode\r\nconst dmgModeToHitMode = {\r\n  avg_dmg: \"avgHit\",\r\n  dmg: \"hit\",\r\n  crit_dmg: \"critHit\"\r\n}\r\nexport { changes, dmgModeToHitMode }","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\nimport { changes as v2change, dmgModeToHitMode } from \"./dbV2KeyMap\";\r\nimport { loadFromLocalStorage, saveToLocalStorage } from \"./Util/Util\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  const dbVersion = getDatabaseVersion()\r\n  //edit the data before the database is populated\r\n  if (dbVersion < 2) {\r\n    //made characters unique, so need to convert character_{NUMBER} to char_{characterKey}. Will only save the 1st instance of a character.\r\n    Object.keys(localStorage).filter(key => key.startsWith(\"character_\")).forEach(key => {\r\n      const character = loadFromLocalStorage(key);\r\n      const { characterKey, equippedArtifacts = {} } = character\r\n      const dbKey = `char_${characterKey}`\r\n      if (localStorage.getItem(dbKey) === null) {\r\n        //if there is no character saved, create a new character\r\n        const { id, name, dmgMode, ...rest } = character\r\n        if (Array.isArray(rest?.buildSetting?.mainStat))\r\n          rest.buildSetting.mainStat = rest.buildSetting.mainStat.map(stat => stat in v2change ? v2change[stat] : stat)\r\n        if (typeof rest?.buildSetting?.statFilters === \"object\")\r\n          rest.buildSetting.statFilters = Object.fromEntries(Object.entries(rest.buildSetting.statFilters).map(([stat, value]) => [stat in v2change ? v2change[stat] : stat, value]))\r\n        rest.hitMode = dmgModeToHitMode[dmgMode] ?? Object.keys(dmgModeToHitMode)[0]\r\n        saveToLocalStorage(dbKey, rest)\r\n        //equip to the new character\r\n        Object.values(equippedArtifacts).forEach(artid => {\r\n          const art = loadFromLocalStorage(artid);\r\n          if (!art) return\r\n          art.location = characterKey\r\n          saveToLocalStorage(artid, art)\r\n        });\r\n      } else {\r\n        //if the character does exist, \"move\" the artifacts equipped to inventory\r\n        Object.values(equippedArtifacts).forEach(artid => {\r\n          const art = loadFromLocalStorage(artid);\r\n          if (!art) return\r\n          art.location = \"\"\r\n          saveToLocalStorage(artid, art)\r\n        });\r\n      }\r\n      //delete the old database\r\n      localStorage.removeItem(key)\r\n    })\r\n    //reset the ArtifactDisplay keys\r\n    const ArtifactDisplayState = loadFromLocalStorage(\"ArtifactDisplay.state\")\r\n    if (ArtifactDisplayState) {\r\n      if (ArtifactDisplayState.filterMainStatKey in v2change)\r\n        ArtifactDisplayState.filterMainStatKey = v2change[ArtifactDisplayState.filterMainStatKey]\r\n      ArtifactDisplayState.filterSubstats = ArtifactDisplayState.filterSubstats.map(stat => stat in v2change ? v2change[stat] : stat)\r\n      saveToLocalStorage(\"ArtifactDisplay.state\", ArtifactDisplayState)\r\n    }\r\n  }\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  const charDBJustPopualted = CharacterDatabase.populateDatebaseFromLocalStorage(),\r\n    artDBJustPopualted = ArtifactDatabase.populateDatebaseFromLocalStorage()\r\n  if (!charDBJustPopualted && !artDBJustPopualted) return\r\n\r\n  Object.values(ArtifactDatabase.getArtifactDatabase()).forEach(art => {\r\n    let valid = true\r\n\r\n    //verify the linking of artifacts and characters\r\n    if (art.location) {\r\n      const locationChar = CharacterDatabase.get(art.location)\r\n      if (locationChar) {\r\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\r\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\r\n          CharacterDatabase.equipArtifact(art.location, art)\r\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\r\n          art.location = \"\"\r\n          valid = false\r\n        }\r\n      } else {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (dbVersion < 1) {\r\n      //generate artifact efficiency again for artifacts\r\n      Artifact.substatsValidation(art)\r\n      valid = false\r\n\r\n      //there was a bug that saved the numStars as strings. convert to number.\r\n      if (typeof art.numStars === \"string\") {\r\n        art.numStars = parseInt(art.numStars)\r\n        valid = false\r\n      }\r\n\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (dbVersion < 2) {\r\n      if (art.mainStatKey in v2change) {\r\n        art.mainStatKey = v2change[art.mainStatKey]\r\n        valid = false\r\n      }\r\n      art?.substats?.forEach((obj, i) => {\r\n        if (obj.key in v2change) {\r\n          art.substats[i].key = v2change[obj.key]\r\n          valid = false\r\n        }\r\n      })\r\n    }\r\n\r\n    //Update any invalid artifacts in DB\r\n    if (!valid) ArtifactDatabase.updateArtifact(art)\r\n  })\r\n\r\n  let chars = CharacterDatabase.getCharacterDatabase();\r\n  Object.values(chars).forEach(character => {\r\n    let valid = true;\r\n    const { characterKey } = character\r\n    //verify character database equipment validity\r\n    if (!character.equippedArtifacts) {\r\n      character.equippedArtifacts = {}\r\n      valid = false\r\n    }\r\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\r\n      const equippedArt = ArtifactDatabase.get(artid)\r\n      if (equippedArt && equippedArt.location !== characterKey) //the artifact doesnt have the right location...\r\n        ArtifactDatabase.moveToNewLocation(artid, characterKey)\r\n      if (!equippedArt) {\r\n        valid = false\r\n        character.equippedArtifacts[slotKey] = \"\"\r\n      }\r\n    })\r\n\r\n    if (dbVersion < 1) {\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      }) ?? []\r\n\r\n      //check for dmgMode\r\n      if (!character.hitMode) {\r\n        character.hitMode = \"hit\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    //update any invalid characters in DB\r\n    if (!valid) CharacterDatabase.updateCharacter(character)\r\n  })\r\n  setDatabaseVersion(2)\r\n}\r\nconst getDatabaseVersion = (defVal = 0) =>\r\n  parseInt(loadFromLocalStorage(\"db_ver\") ?? defVal)\r\n\r\nconst setDatabaseVersion = (version) =>\r\n  saveToLocalStorage(\"db_ver\", version)\r\n\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Character from \"../Character/Character\";\r\nimport CharacterDatabase from \"../Character/CharacterDatabase\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    // names must be equal\r\n    return 0;\r\n  })).map(characterKey =>\r\n    <Dropdown.Item key={characterKey} onClick={() => onSelect(characterKey)}>\r\n      {Character.getName(characterKey)}\r\n    </Dropdown.Item>)\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n};\r\n\r\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Image, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { getTalentStatKey } from \"../../Build/Build\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nfunction ReactionToggle({ character: { characterKey, reactionMode = \"none\" }, setReactionMode, className }) {\r\n  reactionMode === null && (reactionMode = \"none\")\r\n  let charEleKey = Character.getElementalKey(characterKey)\r\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return [\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup className={className}\r\n    type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setReactionMode(val === \"none\" ? null : val)}>\r\n    <ToggleButton value={\"none\"} variant={reactionMode === \"none\" ? \"success\" : \"primary\"}>No Reactions</ToggleButton >\r\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_vaporize\"} variant={reactionMode === \"pyro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Pyro) <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_melt\"} variant={reactionMode === \"pyro_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Pyro) <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"hydro\" && <ToggleButton value={\"hydro_vaporize\"} variant={reactionMode === \"hydro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Hydro) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"cryo\" && <ToggleButton value={\"cryo_melt\"} variant={reactionMode === \"cryo_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Cryo) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n  </ToggleButtonGroup>\r\n}\r\nfunction HitModeToggle({ hitMode, setHitMode, className }) {\r\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={setHitMode} className={className}>\r\n    <ToggleButton value=\"avgHit\" variant={hitMode === \"avgHit\" ? \"success\" : \"primary\"}>Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\" variant={hitMode === \"hit\" ? \"success\" : \"primary\"}>Normal Hit, No Crit</ToggleButton>\r\n    <ToggleButton value=\"critHit\" variant={hitMode === \"critHit\" ? \"success\" : \"primary\"}>Crit Hit DMG</ToggleButton>\r\n  </ToggleButtonGroup>\r\n}\r\n\r\nexport default function DamageOptionsAndCalculation({ character, character: { characterKey, hitMode }, setState, setOverride, newBuild, equippedBuild }) {\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild\r\n\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button onClick={decoratedOnClick} >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"normal\", \"charged\", \"plunging\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(getTalentStatKey(key, build.finalStats)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(getTalentStatKey(key, build.finalStats, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(getTalentStatKey(\"charged\", build.finalStats, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(getTalentStatKey(key, build.finalStats)))\r\n    //show elemental interactions\r\n    keys.push(...(ElementToReactionKeys[Character.getElementalKey(characterKey)] || []))\r\n    let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") keys.push(\"shattered_hit\")\r\n\r\n    //search for dependency\r\n    return Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, keys), build?.finalStats?.modifiers)\r\n  }\r\n  return <Accordion>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span className=\"d-block\">Damage Calculation Options</span>\r\n            <small>Expand below to edit enemy details.</small>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {/* TODO reaction interaction UI */}\r\n            <ReactionToggle {...{ character, setReactionMode: r => setState({ reactionMode: r }) }} />\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"1\">\r\n        <Card.Body>\r\n          <Row className=\"mb-2\"><Col>\r\n            <Button variant=\"warning\" >\r\n              <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                To get the specific resistance values of enemies, please visit the wiki.\r\n          </a>\r\n            </Button >\r\n          </Col></Row>\r\n          <Row>\r\n            <Col xs={12} xl={6} className=\"mb-2\">\r\n              <StatInput\r\n                name={<b>Enemy Level</b>}\r\n                value={Character.getStatValueWithOverride(character, \"enemyLevel\")}\r\n                placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n                defaultValue={Character.getBaseStatValue(character, \"enemyLevel\")}\r\n                onValueChange={(val) => setOverride?.(\"enemyLevel\", val)}\r\n              />\r\n            </Col>\r\n            {Character.getElementalKeys().map(eleKey => {\r\n              let statKey = eleKey === \"physical\" ? \"physical_enemyRes_\" : `${eleKey}_enemyRes_`\r\n              let immunityStatKey = eleKey === \"physical\" ? \"physical_enemyImmunity\" : `${eleKey}_enemyImmunity`\r\n              let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n              return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                <StatInput\r\n                  prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                    <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                </Button>}\r\n                  name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  placeholder={Stat.getStatNameRaw(statKey)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                  onValueChange={(val) => setOverride?.(statKey, val)}\r\n                  disabled={elementImmunity}\r\n                />\r\n              </Col>\r\n            })}\r\n          </Row>\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n\r\n    <Card bg=\"lightcontent\" text=\"lightfont\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span className=\"d-block\">Damage Calculation Formulas</span>\r\n            <small>Expand below to see calculation details.</small>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <HitModeToggle {...{ hitMode, setHitMode: m => setState({ hitMode: m }) }} />\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"2\">\r\n        <Card.Body>\r\n          <Row>\r\n            {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\r\n              <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                <Card.Header className=\"p-2\">\r\n                  {Stat.printStat(key, build.finalStats)}\r\n                </Card.Header>\r\n                <Card.Body className=\"p-2\">\r\n                  <small>{Stat.printFormula(key, build.finalStats, build.finalStats.modifiers, false)}</small>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            )}\r\n          </Row>\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n  </Accordion>\r\n}\r\nexport {\r\n  HitModeToggle,\r\n  ReactionToggle,\r\n};\r\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onValueChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText = \"\", diffText = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\r\n\r\n  return <div>\r\n    <b>{label}</b>\r\n    <span className=\"float-right text-right\">{oldText}{diff ? \" \" : \"\"}{diffText}</span>\r\n  </div>\r\n}\r\nexport default function StatDisplay({ character, character: { characterKey }, equippedBuild, newBuild, editable, statKey }) {\r\n  let val, oldVal, fixed, unit, variant;\r\n  let label = \"\"\r\n  if (typeof statKey === \"string\") {//basic statKey\r\n    if (newBuild && equippedBuild) {//comparable\r\n      //newbuild -> val\r\n      //equippedbuild ->old\r\n      val = newBuild?.finalStats?.[statKey] ?? 0\r\n      oldVal = equippedBuild?.finalStats?.[statKey] ?? 0\r\n    } else {\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      //build ->val\r\n      val = build?.finalStats?.[statKey] ?? 0\r\n      //statvaluewith override -> old\r\n      const invalid = \"invalid\"//can't use undeinfed as the defVal, since I want undefined for invalid numbers.\r\n      oldVal = Character.getStatValueWithOverride(character, statKey, invalid)\r\n      oldVal === invalid && (oldVal = undefined)\r\n      if (statKey === \"finalHP\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterHP\")\r\n      else if (statKey === \"finalDEF\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterDEF\")\r\n      else if (statKey === \"finalATK\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterATK\") + Character.getStatValueWithOverride(character, \"weaponATK\")\r\n    }\r\n    unit = Stat.getStatUnit(statKey)\r\n    fixed = Stat.fixedUnit(statKey)\r\n    label = <span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>\r\n  } else {//from character sheet\r\n    const build = newBuild ? newBuild : equippedBuild\r\n    const { talentKey, sectionIndex, fieldIndex } = statKey\r\n    const field = Character.getTalentField(characterKey, talentKey, sectionIndex, fieldIndex)\r\n    const labelVariant = Character.getTalentFieldValue(field, \"variant\", talentKey, build.finalStats)\r\n    label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", talentKey, build.finalStats)}</span>\r\n    fixed = Character.getTalentFieldValue(field, \"fixed\", talentKey, build.finalStats, 0)\r\n    val = Character.getTalentFieldValue(field, \"formula\", talentKey, build.finalStats)\r\n    if (newBuild && equippedBuild) {//comparable\r\n      oldVal = Character.getTalentFieldValue(field, \"formula\", talentKey, equippedBuild.finalStats)\r\n    }\r\n  }\r\n\r\n  if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label }} />\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","\r\n//take the new statsDisplayKeys, and display the stats.\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport Character from \"../Character\"\r\n\r\nexport default function StatDisplayComponent({ character, character: { characterKey }, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }) {\r\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([talentKey, fields]) => {\r\n    let header = \"\"\r\n    if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n    else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n    else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n    else header = Character.getTalentName(characterKey, talentKey, talentKey)\r\n    return <Col key={talentKey} className=\"mb-2\" xs={12} md={6} xl={4}>\r\n      <Card bg={cardbg} text=\"lightfont\" className=\"h-100\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body>\r\n          {fields.map(field => <StatDisplay key={JSON.stringify(field)} {...{ character, equippedBuild, newBuild, editable, statKey: field }} />)}\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  })}</Row>\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"children\", \"type\", \"name\", \"value\", \"onChange\"]);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    if (!onChange) {\n      return;\n    }\n\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive && onChange) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/React.createElement(ButtonGroup, _extends({}, controlledProps, {\n    ref: ref,\n    toggle: true\n  }), map(children, function (child) {\n    var values = getValues();\n    var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n\n    var handler = function handler(e) {\n      return handleToggle(childVal, e);\n    };\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      type: type,\n      name: child.name || name,\n      checked: values.indexOf(childVal) !== -1,\n      onChange: chainFunction(childOnChange, handler)\n    });\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport Stat from '../Stat';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nexport default function CharacterCard({ characterKey, onEdit, onDelete, cardClassName = \"\", bg = \"\", header, footer }) {\r\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => forceUpdate())\r\n  }, [])\r\n  const character = CharacterDatabase.get(characterKey)\r\n  if (!character) return null;\r\n  const build = Character.calculateBuild(character)\r\n  const { setToSlots } = build\r\n\r\n  const { weapon = {}, constellation } = character\r\n  const name = Character.getName(characterKey)\r\n  const elementKey = Character.getElementalKey(characterKey)\r\n  const weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  const weaponName = Weapon.getWeaponName(weapon.key)\r\n  const weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\r\n  const weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  const weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\r\n  const weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  const weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const statkeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\",]\r\n  return (<Card className={cardClassName} bg={bg ? bg : \"darkcontent\"} text=\"lightfont\">\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {header ? header : <h5><b>{name}</b></h5>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={onEdit} style={{ cursor: onEdit ? \"pointer\" : \"default\" }}>\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={Character.getThumb(characterKey)} className={`thumb-big grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h3 className=\"mb-0\">{`Lvl. ${Character.getStatValueWithOverride(character, \"characterLevel\")} C${constellation}`}</h3>\r\n          <h5 className=\"mb-0\"><Stars stars={Character.getStar(characterKey)} colored /></h5>\r\n          <h2 className=\"mb-0\"><Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h2>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {Object.entries(Artifact.getSetEffects(setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = Artifact.getSetName(key)\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = build.finalStats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        characterKey\r\n      }}>\r\n        Generate Builds\r\n        </Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { strPadLeft } from \"./Util\"\r\n\r\nfunction msToUnits(ms) {\r\n  let milliseconds = ms % 1000\r\n  let seconds = Math.floor((ms / 1000) % 60)\r\n  let minutes = Math.floor((ms / (1000 * 60)) % 60)\r\n  let hours = Math.floor((ms / (1000 * 60 * 60)))\r\n  return { hours, minutes, seconds, milliseconds }\r\n}\r\nfunction timeString(ms) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds } = msToUnits(ms, \"hours\")\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)} ${timeText}`;\r\n}\r\nfunction timeStringMs(ms) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds, milliseconds } = msToUnits(ms, \"hours\")\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)}.${strPadLeft(milliseconds, '0', 3)} ${timeText}`;\r\n}\r\nexport {\r\n  msToUnits,\r\n  timeString,\r\n  timeStringMs\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nvar ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  var children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  var error = null;\n  React.Children.forEach(children, function (child) {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n\n\n    var element = /*#__PURE__*/React.createElement(ProgressBar, null);\n    if (child.type === element.type) return;\n    var childType = child.type;\n    var childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(\"Children of \" + componentName + \" can contain only ProgressBar \" + (\"components. Found \" + childIdentifier + \".\"));\n  });\n  return error;\n}\n\nvar defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  srOnly: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  var percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar(_ref, ref) {\n  var _classNames;\n\n  var min = _ref.min,\n      now = _ref.now,\n      max = _ref.max,\n      label = _ref.label,\n      srOnly = _ref.srOnly,\n      striped = _ref.striped,\n      animated = _ref.animated,\n      className = _ref.className,\n      style = _ref.style,\n      variant = _ref.variant,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"className\", \"style\", \"variant\", \"bsPrefix\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, props, {\n    role: \"progressbar\",\n    className: classNames(className, bsPrefix + \"-bar\", (_classNames = {}, _classNames[\"bg-\" + variant] = variant, _classNames[bsPrefix + \"-bar-animated\"] = animated, _classNames[bsPrefix + \"-bar-striped\"] = animated || striped, _classNames)),\n    style: _extends({\n      width: getPercentage(now, min, max) + \"%\"\n    }, style),\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max\n  }), srOnly ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, label) : label);\n}\n\nvar ProgressBar = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var isChild = _ref2.isChild,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"isChild\"]);\n\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  var min = props.min,\n      now = props.now,\n      max = props.max,\n      label = props.label,\n      srOnly = props.srOnly,\n      striped = props.striped,\n      animated = props.animated,\n      bsPrefix = props.bsPrefix,\n      variant = props.variant,\n      className = props.className,\n      children = props.children,\n      wrapperProps = _objectWithoutPropertiesLoose(props, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"bsPrefix\", \"variant\", \"className\", \"children\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, wrapperProps, {\n    className: classNames(className, bsPrefix)\n  }), children ? map(children, function (child) {\n    return /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    });\n  }) : renderProgressBar({\n    min: min,\n    now: now,\n    max: max,\n    label: label,\n    srOnly: srOnly,\n    striped: striped,\n    animated: animated,\n    bsPrefix: bsPrefix,\n    variant: variant\n  }, ref));\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import ownerDocument from './ownerDocument';\n/**\n * Return the actively focused element safely.\n *\n * @param doc the document to checl\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import hasClass from './hasClass';\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    ;\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import isDocument from './isDocument';\nexport default function isWindow(node) {\n  if ('window' in node && node.window === node) return node;\n  if (isDocument(node)) return node.defaultView || false;\n  return false;\n}","export default function isDocument(element) {\n  return 'nodeType' in element && element.nodeType === document.DOCUMENT_NODE;\n}","import isWindow from 'dom-helpers/isWindow';\nimport ownerDocument from 'dom-helpers/ownerDocument';\n\nfunction isBody(node) {\n  return node && node.tagName.toLowerCase() === 'body';\n}\n\nfunction bodyIsOverflowing(node) {\n  var doc = isWindow(node) ? ownerDocument() : ownerDocument(node);\n  var win = isWindow(node) || doc.defaultView;\n  return doc.body.clientWidth < win.innerWidth;\n}\n\nexport default function isOverflowing(container) {\n  var win = isWindow(container);\n  return win || isBody(container) ? bodyIsOverflowing(container) : container.scrollHeight > container.clientHeight;\n}","var BLACKLIST = ['template', 'script', 'style'];\n\nvar isHidable = function isHidable(_ref) {\n  var nodeType = _ref.nodeType,\n      tagName = _ref.tagName;\n  return nodeType === 1 && BLACKLIST.indexOf(tagName.toLowerCase()) === -1;\n};\n\nvar siblings = function siblings(container, exclude, cb) {\n  [].forEach.call(container.children, function (node) {\n    if (exclude.indexOf(node) === -1 && isHidable(node)) {\n      cb(node);\n    }\n  });\n};\n\nexport function ariaHidden(hide, node) {\n  if (!node) return;\n\n  if (hide) {\n    node.setAttribute('aria-hidden', 'true');\n  } else {\n    node.removeAttribute('aria-hidden');\n  }\n}\nexport function hideSiblings(container, _ref2) {\n  var dialog = _ref2.dialog,\n      backdrop = _ref2.backdrop;\n  siblings(container, [dialog, backdrop], function (node) {\n    return ariaHidden(true, node);\n  });\n}\nexport function showSiblings(container, _ref3) {\n  var dialog = _ref3.dialog,\n      backdrop = _ref3.backdrop;\n  siblings(container, [dialog, backdrop], function (node) {\n    return ariaHidden(false, node);\n  });\n}","import addClass from 'dom-helpers/addClass';\nimport removeClass from 'dom-helpers/removeClass';\nimport css from 'dom-helpers/css';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport isOverflowing from './isOverflowing';\nimport { ariaHidden, hideSiblings, showSiblings } from './manageAriaHidden';\n\nfunction findIndexOf(arr, cb) {\n  var idx = -1;\n  arr.some(function (d, i) {\n    if (cb(d, i)) {\n      idx = i;\n      return true;\n    }\n\n    return false;\n  });\n  return idx;\n}\n\n/**\n * Proper state management for containers and the modals in those containers.\n *\n * @internal Used by the Modal to ensure proper styling of containers.\n */\nvar ModalManager = /*#__PURE__*/function () {\n  function ModalManager(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$hideSiblingNodes = _ref.hideSiblingNodes,\n        hideSiblingNodes = _ref$hideSiblingNodes === void 0 ? true : _ref$hideSiblingNodes,\n        _ref$handleContainerO = _ref.handleContainerOverflow,\n        handleContainerOverflow = _ref$handleContainerO === void 0 ? true : _ref$handleContainerO;\n\n    this.hideSiblingNodes = void 0;\n    this.handleContainerOverflow = void 0;\n    this.modals = void 0;\n    this.containers = void 0;\n    this.data = void 0;\n    this.scrollbarSize = void 0;\n    this.hideSiblingNodes = hideSiblingNodes;\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.modals = [];\n    this.containers = [];\n    this.data = [];\n    this.scrollbarSize = getScrollbarSize();\n  }\n\n  var _proto = ModalManager.prototype;\n\n  _proto.isContainerOverflowing = function isContainerOverflowing(modal) {\n    var data = this.data[this.containerIndexFromModal(modal)];\n    return data && data.overflowing;\n  };\n\n  _proto.containerIndexFromModal = function containerIndexFromModal(modal) {\n    return findIndexOf(this.data, function (d) {\n      return d.modals.indexOf(modal) !== -1;\n    });\n  };\n\n  _proto.setContainerStyle = function setContainerStyle(containerState, container) {\n    var style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    containerState.style = {\n      overflow: container.style.overflow,\n      paddingRight: container.style.paddingRight\n    };\n\n    if (containerState.overflowing) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style.paddingRight = parseInt(css(container, 'paddingRight') || '0', 10) + this.scrollbarSize + \"px\";\n    }\n\n    css(container, style);\n  };\n\n  _proto.removeContainerStyle = function removeContainerStyle(containerState, container) {\n    Object.assign(container.style, containerState.style);\n  };\n\n  _proto.add = function add(modal, container, className) {\n    var modalIdx = this.modals.indexOf(modal);\n    var containerIdx = this.containers.indexOf(container);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n\n    if (this.hideSiblingNodes) {\n      hideSiblings(container, modal);\n    }\n\n    if (containerIdx !== -1) {\n      this.data[containerIdx].modals.push(modal);\n      return modalIdx;\n    }\n\n    var data = {\n      modals: [modal],\n      // right now only the first modal of a container will have its classes applied\n      classes: className ? className.split(/\\s+/) : [],\n      overflowing: isOverflowing(container)\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(data, container);\n    }\n\n    data.classes.forEach(addClass.bind(null, container));\n    this.containers.push(container);\n    this.data.push(data);\n    return modalIdx;\n  };\n\n  _proto.remove = function remove(modal) {\n    var modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    var containerIdx = this.containerIndexFromModal(modal);\n    var data = this.data[containerIdx];\n    var container = this.containers[containerIdx];\n    data.modals.splice(data.modals.indexOf(modal), 1);\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (data.modals.length === 0) {\n      data.classes.forEach(removeClass.bind(null, container));\n\n      if (this.handleContainerOverflow) {\n        this.removeContainerStyle(data, container);\n      }\n\n      if (this.hideSiblingNodes) {\n        showSiblings(container, modal);\n      }\n\n      this.containers.splice(containerIdx, 1);\n      this.data.splice(containerIdx, 1);\n    } else if (this.hideSiblingNodes) {\n      // otherwise make sure the next top modal is visible to a SR\n      var _data$modals = data.modals[data.modals.length - 1],\n          backdrop = _data$modals.backdrop,\n          dialog = _data$modals.dialog;\n      ariaHidden(false, dialog);\n      ariaHidden(false, backdrop);\n    }\n  };\n\n  _proto.isTopModal = function isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  };\n\n  return ModalManager;\n}();\n\nexport default ModalManager;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport PropTypes from 'prop-types';\nimport React, { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nvar manager;\n\nfunction getManager() {\n  if (!manager) manager = new ModalManager();\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  var modalManager = provided || getManager();\n  var modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: function add(container, className) {\n      return modalManager.add(modal.current, container, className);\n    },\n    remove: function remove() {\n      return modalManager.remove(modal.current);\n    },\n    isTopModal: function isTopModal() {\n      return modalManager.isTopModal(modal.current);\n    },\n    setDialogRef: useCallback(function (ref) {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(function (ref) {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nvar Modal = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$show = _ref.show,\n      show = _ref$show === void 0 ? false : _ref$show,\n      _ref$role = _ref.role,\n      role = _ref$role === void 0 ? 'dialog' : _ref$role,\n      className = _ref.className,\n      style = _ref.style,\n      children = _ref.children,\n      _ref$backdrop = _ref.backdrop,\n      backdrop = _ref$backdrop === void 0 ? true : _ref$backdrop,\n      _ref$keyboard = _ref.keyboard,\n      keyboard = _ref$keyboard === void 0 ? true : _ref$keyboard,\n      onBackdropClick = _ref.onBackdropClick,\n      onEscapeKeyDown = _ref.onEscapeKeyDown,\n      transition = _ref.transition,\n      backdropTransition = _ref.backdropTransition,\n      _ref$autoFocus = _ref.autoFocus,\n      autoFocus = _ref$autoFocus === void 0 ? true : _ref$autoFocus,\n      _ref$enforceFocus = _ref.enforceFocus,\n      enforceFocus = _ref$enforceFocus === void 0 ? true : _ref$enforceFocus,\n      _ref$restoreFocus = _ref.restoreFocus,\n      restoreFocus = _ref$restoreFocus === void 0 ? true : _ref$restoreFocus,\n      restoreFocusOptions = _ref.restoreFocusOptions,\n      renderDialog = _ref.renderDialog,\n      _ref$renderBackdrop = _ref.renderBackdrop,\n      renderBackdrop = _ref$renderBackdrop === void 0 ? function (props) {\n    return /*#__PURE__*/React.createElement(\"div\", props);\n  } : _ref$renderBackdrop,\n      providedManager = _ref.manager,\n      containerRef = _ref.container,\n      containerClassName = _ref.containerClassName,\n      onShow = _ref.onShow,\n      _ref$onHide = _ref.onHide,\n      onHide = _ref$onHide === void 0 ? function () {} : _ref$onHide,\n      onExit = _ref.onExit,\n      onExited = _ref.onExited,\n      onExiting = _ref.onExiting,\n      onEnter = _ref.onEnter,\n      onEntering = _ref.onEntering,\n      onEntered = _ref.onEntered,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"containerClassName\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"]);\n\n  var container = useWaitForDOMRef(containerRef);\n  var modal = useModalManager(providedManager);\n  var isMounted = useMounted();\n  var prevShow = usePrevious(show);\n\n  var _useState = useState(!show),\n      exited = _useState[0],\n      setExited = _useState[1];\n\n  var lastFocusRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return modal;\n  }, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  var handleShow = useEventCallback(function () {\n    modal.add(container, containerClassName);\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    function () {\n      return setTimeout(handleEnforceFocus);\n    }, true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      var currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  var handleHide = useEventCallback(function () {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(function () {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(function () {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(function () {\n    handleHide();\n  }); // --------------------------------\n\n  var handleEnforceFocus = useEventCallback(function () {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    var currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  var handleBackdropClick = useEventCallback(function (e) {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  var handleDocumentKeyDown = useEventCallback(function (e) {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  var removeFocusListenerRef = useRef();\n  var removeKeydownListenerRef = useRef();\n\n  var handleHidden = function handleHidden() {\n    setExited(true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    onExited == null ? void 0 : onExited.apply(void 0, args);\n  };\n\n  var Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  var dialogProps = _extends({\n    role: role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style: style,\n    className: className,\n    tabIndex: -1\n  });\n\n  var dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/React.createElement(\"div\", dialogProps, /*#__PURE__*/React.cloneElement(children, {\n    role: 'document'\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/React.createElement(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      \"in\": !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered\n    }, dialog);\n  }\n\n  var backdropElement = null;\n\n  if (backdrop) {\n    var BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/React.createElement(BackdropTransition, {\n        appear: true,\n        \"in\": !!show\n      }, backdropElement);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, backdropElement, dialog), container));\n});\nvar propTypes = {\n  /**\n   * Set the visibility of the Modal\n   */\n  show: PropTypes.bool,\n\n  /**\n   * A DOM element, a `ref` to an element, or function that returns either. The Modal is appended to it's `container` element.\n   *\n   * For the sake of assistive technologies, the container should usually be the document body, so that the rest of the\n   * page content can be placed behind a virtual backdrop as well as a visual one.\n   */\n  container: PropTypes.any,\n\n  /**\n   * A callback fired when the Modal is opening.\n   */\n  onShow: PropTypes.func,\n\n  /**\n   * A callback fired when either the backdrop is clicked, or the escape key is pressed.\n   *\n   * The `onHide` callback only signals intent from the Modal,\n   * you must actually set the `show` prop to `false` for the Modal to close.\n   */\n  onHide: PropTypes.func,\n\n  /**\n   * Include a backdrop component.\n   */\n  backdrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['static'])]),\n\n  /**\n   * A function that returns the dialog component. Useful for custom\n   * rendering. **Note:** the component should make sure to apply the provided ref.\n   *\n   * ```js static\n   * renderDialog={props => <MyDialog {...props} />}\n   * ```\n   */\n  renderDialog: PropTypes.func,\n\n  /**\n   * A function that returns a backdrop component. Useful for custom\n   * backdrop rendering.\n   *\n   * ```js\n   *  renderBackdrop={props => <MyBackdrop {...props} />}\n   * ```\n   */\n  renderBackdrop: PropTypes.func,\n\n  /**\n   * A callback fired when the escape key, if specified in `keyboard`, is pressed.\n   *\n   * If preventDefault() is called on the keyboard event, closing the modal will be cancelled.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * A callback fired when the backdrop, if specified, is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * A css class or set of classes applied to the modal container when the modal is open,\n   * and removed when it is closed.\n   */\n  containerClassName: PropTypes.string,\n\n  /**\n   * Close the modal when escape key is pressed\n   */\n  keyboard: PropTypes.bool,\n\n  /**\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\n   * to control animations for the dialog component.\n   */\n  transition: PropTypes.elementType,\n\n  /**\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\n   * to control animations for the backdrop components.\n   */\n  backdropTransition: PropTypes.elementType,\n\n  /**\n   * When `true` The modal will automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes. This also\n   * works correctly with any Modal children that have the `autoFocus` prop.\n   *\n   * Generally this should never be set to `false` as it makes the Modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will prevent focus from leaving the Modal while open.\n   *\n   * Generally this should never be set to `false` as it makes the Modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  enforceFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will restore focus to previously focused element once\n   * modal is hidden\n   */\n  restoreFocus: PropTypes.bool,\n\n  /**\n   * Options passed to focus function when `restoreFocus` is set to `true`\n   *\n   * @link  https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus#Parameters\n   */\n  restoreFocusOptions: PropTypes.shape({\n    preventScroll: PropTypes.bool\n  }),\n\n  /**\n   * Callback fired before the Modal transitions in\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired as the Modal begins to transition in\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the Modal finishes transitioning in\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired right before the Modal transitions out\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired as the Modal begins to transition out\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the Modal finishes transitioning out\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * A ModalManager instance used to track and manage the state of open\n   * Modals. Useful when customizing how modals interact within a container\n   */\n  manager: PropTypes.instanceOf(ModalManager)\n};\nModal.displayName = 'Modal';\nModal.propTypes = propTypes;\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport ModalManager from 'react-overlays/ModalManager';\nvar Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nvar BootstrapModalManager = /*#__PURE__*/function (_ModalManager) {\n  _inheritsLoose(BootstrapModalManager, _ModalManager);\n\n  function BootstrapModalManager() {\n    return _ModalManager.apply(this, arguments) || this;\n  }\n\n  var _proto = BootstrapModalManager.prototype;\n\n  _proto.adjustAndStore = function adjustAndStore(prop, element, adjust) {\n    var _css;\n\n    var actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, (_css = {}, _css[prop] = parseFloat(css(element, prop)) + adjust + \"px\", _css));\n  };\n\n  _proto.restore = function restore(prop, element) {\n    var value = element.dataset[prop];\n\n    if (value !== undefined) {\n      var _css2;\n\n      delete element.dataset[prop];\n      css(element, (_css2 = {}, _css2[prop] = value, _css2));\n    }\n  };\n\n  _proto.setContainerStyle = function setContainerStyle(containerState, container) {\n    var _this = this;\n\n    _ModalManager.prototype.setContainerStyle.call(this, containerState, container);\n\n    if (!containerState.overflowing) return;\n    var size = getScrollbarSize();\n    qsa(container, Selector.FIXED_CONTENT).forEach(function (el) {\n      return _this.adjustAndStore('paddingRight', el, size);\n    });\n    qsa(container, Selector.STICKY_CONTENT).forEach(function (el) {\n      return _this.adjustAndStore('marginRight', el, -size);\n    });\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(function (el) {\n      return _this.adjustAndStore('marginRight', el, size);\n    });\n  };\n\n  _proto.removeContainerStyle = function removeContainerStyle(containerState, container) {\n    var _this2 = this;\n\n    _ModalManager.prototype.removeContainerStyle.call(this, containerState, container);\n\n    qsa(container, Selector.FIXED_CONTENT).forEach(function (el) {\n      return _this2.restore('paddingRight', el);\n    });\n    qsa(container, Selector.STICKY_CONTENT).forEach(function (el) {\n      return _this2.restore('marginRight', el);\n    });\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(function (el) {\n      return _this2.restore('marginRight', el);\n    });\n  };\n\n  return BootstrapModalManager;\n}(ModalManager);\n\nexport { BootstrapModalManager as default };","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import React from 'react';\nvar ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide: function onHide() {}\n});\nexport default ModalContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar ModalDialog = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      contentClassName = _ref.contentClassName,\n      centered = _ref.centered,\n      size = _ref.size,\n      children = _ref.children,\n      scrollable = _ref.scrollable,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"contentClassName\", \"centered\", \"size\", \"children\", \"scrollable\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  var dialogClass = bsPrefix + \"-dialog\";\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, props, {\n    ref: ref,\n    className: classNames(dialogClass, className, size && bsPrefix + \"-\" + size, centered && dialogClass + \"-centered\", scrollable && dialogClass + \"-scrollable\")\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(bsPrefix + \"-content\", contentClassName)\n  }, children));\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nvar defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nvar ModalHeader = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      closeLabel = _ref.closeLabel,\n      closeButton = _ref.closeButton,\n      onHide = _ref.onHide,\n      className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"closeLabel\", \"closeButton\", \"onHide\", \"className\", \"children\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  var context = useContext(ModalContext);\n  var handleClick = useEventCallback(function () {\n    if (context) context.onHide();\n    if (onHide) onHide();\n  });\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix)\n  }), children, closeButton && /*#__PURE__*/React.createElement(CloseButton, {\n    label: closeLabel,\n    onClick: handleClick\n  }));\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport React, { useCallback, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport BaseModal from 'react-overlays/Modal';\nimport warning from 'warning';\nimport BootstrapModalManager from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar manager;\nvar defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/React.createElement(Fade, props);\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/React.createElement(Fade, props);\n}\n/* eslint-enable no-use-before-define */\n\n\nvar Modal = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      style = _ref.style,\n      dialogClassName = _ref.dialogClassName,\n      contentClassName = _ref.contentClassName,\n      children = _ref.children,\n      Dialog = _ref.dialogAs,\n      ariaLabelledby = _ref['aria-labelledby'],\n      show = _ref.show,\n      animation = _ref.animation,\n      backdrop = _ref.backdrop,\n      keyboard = _ref.keyboard,\n      onEscapeKeyDown = _ref.onEscapeKeyDown,\n      onShow = _ref.onShow,\n      onHide = _ref.onHide,\n      container = _ref.container,\n      autoFocus = _ref.autoFocus,\n      enforceFocus = _ref.enforceFocus,\n      restoreFocus = _ref.restoreFocus,\n      restoreFocusOptions = _ref.restoreFocusOptions,\n      onEntered = _ref.onEntered,\n      onExit = _ref.onExit,\n      onExiting = _ref.onExiting,\n      onEnter = _ref.onEnter,\n      onEntering = _ref.onEntering,\n      onExited = _ref.onExited,\n      backdropClassName = _ref.backdropClassName,\n      propsManager = _ref.manager,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"style\", \"dialogClassName\", \"contentClassName\", \"children\", \"dialogAs\", \"aria-labelledby\", \"show\", \"animation\", \"backdrop\", \"keyboard\", \"onEscapeKeyDown\", \"onShow\", \"onHide\", \"container\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"onEntered\", \"onExit\", \"onExiting\", \"onEnter\", \"onEntering\", \"onExited\", \"backdropClassName\", \"manager\"]);\n\n  var _useState = useState({}),\n      modalStyle = _useState[0],\n      setStyle = _useState[1];\n\n  var _useState2 = useState(false),\n      animateStaticModal = _useState2[0],\n      setAnimateStaticModal = _useState2[1];\n\n  var waitingForMouseUpRef = useRef(false);\n  var ignoreBackdropClickRef = useRef(false);\n  var removeStaticModalAnimationRef = useRef(null); // TODO: what's this type\n\n  var _useCallbackRef = useCallbackRef(),\n      modal = _useCallbackRef[0],\n      setModalRef = _useCallbackRef[1];\n\n  var handleHide = useEventCallback(onHide);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  useImperativeHandle(ref, function () {\n    return {\n      get _modal() {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Accessing `_modal` is not supported and will be removed in a future release') : void 0;\n        return modal;\n      }\n\n    };\n  }, [modal]);\n  var modalContext = useMemo(function () {\n    return {\n      onHide: handleHide\n    };\n  }, [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    if (!manager) manager = new BootstrapModalManager();\n    return manager;\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    var containerIsOverflowing = getModalManager().isContainerOverflowing(modal);\n    var modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  var handleWindowResize = useEventCallback(function () {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(function () {\n    removeEventListener(window, 'resize', handleWindowResize);\n\n    if (removeStaticModalAnimationRef.current) {\n      removeStaticModalAnimationRef.current();\n    }\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  var handleDialogMouseDown = function handleDialogMouseDown() {\n    waitingForMouseUpRef.current = true;\n  };\n\n  var handleMouseUp = function handleMouseUp(e) {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  var handleStaticModalAnimation = function handleStaticModalAnimation() {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, function () {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  var handleStaticBackdropClick = function handleStaticBackdropClick(e) {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  var handleClick = function handleClick(e) {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide();\n  };\n\n  var handleEscapeKeyDown = function handleEscapeKeyDown(e) {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in react-overlays,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  var handleEnter = function handleEnter(node) {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (onEnter) onEnter.apply(void 0, [node].concat(args));\n  };\n\n  var handleExit = function handleExit(node) {\n    if (removeStaticModalAnimationRef.current) {\n      removeStaticModalAnimationRef.current();\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    if (onExit) onExit.apply(void 0, [node].concat(args));\n  };\n\n  var handleEntering = function handleEntering(node) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    if (onEntering) onEntering.apply(void 0, [node].concat(args)); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  var handleExited = function handleExited(node) {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      args[_key4 - 1] = arguments[_key4];\n    }\n\n    if (onExited) onExited.apply(void 0, args); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  var renderBackdrop = useCallback(function (backdropProps) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, backdropProps, {\n      className: classNames(bsPrefix + \"-backdrop\", backdropClassName, !animation && 'show')\n    }));\n  }, [animation, backdropClassName, bsPrefix]);\n\n  var baseModalStyle = _extends({}, style, modalStyle); // Sets `display` always block when `animation` is false\n\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  var renderDialog = function renderDialog(dialogProps) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      role: \"dialog\"\n    }, dialogProps, {\n      style: baseModalStyle,\n      className: classNames(className, bsPrefix, animateStaticModal && bsPrefix + \"-static\"),\n      onClick: backdrop ? handleClick : undefined,\n      onMouseUp: handleMouseUp,\n      \"aria-labelledby\": ariaLabelledby\n    }), /*#__PURE__*/React.createElement(Dialog, _extends({}, props, {\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName\n    }), children));\n  };\n\n  return /*#__PURE__*/React.createElement(ModalContext.Provider, {\n    value: modalContext\n  }, /*#__PURE__*/React.createElement(BaseModal, {\n    show: show,\n    ref: setModalRef,\n    backdrop: backdrop,\n    container: container,\n    keyboard: true // Always set true - see handleEscapeKeyDown\n    ,\n    autoFocus: autoFocus,\n    enforceFocus: enforceFocus,\n    restoreFocus: restoreFocus,\n    restoreFocusOptions: restoreFocusOptions,\n    onEscapeKeyDown: handleEscapeKeyDown,\n    onShow: onShow,\n    onHide: onHide,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: onEntered,\n    onExit: handleExit,\n    onExiting: onExiting,\n    onExited: handleExited,\n    manager: getModalManager(),\n    containerClassName: bsPrefix + \"-open\",\n    transition: animation ? DialogTransition : undefined,\n    backdropTransition: animation ? BackdropTransition : undefined,\n    renderBackdrop: renderBackdrop,\n    renderDialog: renderDialog\n  }));\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nModal.Body = ModalBody;\nModal.Header = ModalHeader;\nModal.Title = ModalTitle;\nModal.Footer = ModalFooter;\nModal.Dialog = ModalDialog;\nModal.TRANSITION_DURATION = 300;\nModal.BACKDROP_TRANSITION_DURATION = 150;\nexport default Modal;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nvar DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/BuildWorker.78be3f84.worker.js\");\n}\n","import { faCheckSquare, faSortAmountDownAlt, faSortAmountUp, faSquare, faTimes, faTrash, faUndo } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy } from 'react';\r\nimport { Alert, Badge, Button, ButtonGroup, Card, Col, Container, Dropdown, DropdownButton, Image, InputGroup, ListGroup, Modal, ProgressBar, Row } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\n// eslint-disable-next-line\r\nimport Worker from \"worker-loader!./BuildWorker.js\";\r\nimport Artifact from '../Artifact/Artifact';\r\nimport ArtifactDatabase from '../Artifact/ArtifactDatabase';\r\nimport Character from '../Character/Character';\r\nimport CharacterCard from '../Character/CharacterCard';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport { HitModeToggle, ReactionToggle } from '../Character/CharacterDisplay/DamageOptionsAndCalculation';\r\nimport StatDisplayComponent from '../Character/CharacterDisplay/StatDisplayComponent';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport ConditionalSelector from '../Components/ConditionalSelector';\r\nimport CustomFormControl from '../Components/CustomFormControl';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { timeStringMs } from '../Util/TimeUtil';\r\nimport { deepClone, loadFromLocalStorage, saveToLocalStorage } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport { calculateTotalBuildNumber } from './Build';\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCardPromise = import('../Character/CharacterDisplayCard');\r\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\r\n\r\nconst warningBuildNumber = 10000000\r\nconst maxBuildsToShowList = [50, 25, 10, 5]\r\nconst maxBuildsToShowDefault = 25\r\nconst autoBuildGenLimit = 100\r\nexport default class BuildDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = BuildDisplay.getInitialState();\r\n    if (\"BuildsDisplay.state\" in localStorage) {\r\n      const { characterKey = \"\", maxBuildsToShow = maxBuildsToShowDefault } = loadFromLocalStorage(\"BuildsDisplay.state\")\r\n      this.state = { ...this.state, characterKey, maxBuildsToShow }\r\n    }\r\n    if (props.location.characterKey) //override the one stored in BuildsDisplay.state\r\n      this.state.characterKey = props.location.characterKey\r\n\r\n    if (this.state.characterKey) {\r\n      const character = CharacterDatabase.get(this.state.characterKey)\r\n      if (character)\r\n        this.state = { ...this.state, ...(character?.buildSetting ?? {}) }\r\n      else\r\n        this.state.characterKey = \"\"\r\n    }\r\n\r\n    ReactGA.pageview('/build')\r\n  }\r\n  static initialState = {\r\n    builds: [],\r\n    generatingBuilds: false,\r\n    characterKey: \"\",\r\n    setFilters: [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }],\r\n    statFilters: {},\r\n    artifactConditionals: [],//{ setKey: \"\", setNumKey: \"\", conditionalNum: 0 }\r\n    mainStat: [\"\", \"\", \"\"],\r\n    optimizationTarget: \"finalATK\",\r\n    artifactsAssumeFull: false,\r\n    useLockedArts: false,\r\n    ascending: false,\r\n    modalBuild: null,\r\n    showArtCondModal: false,\r\n    showCharacterModal: false,\r\n    maxBuildsToShow: maxBuildsToShowDefault,\r\n    generationProgress: 0,\r\n    generationDuration: 0,//in ms\r\n  }\r\n\r\n  static getInitialState = () => deepClone(BuildDisplay.initialState)\r\n  static artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"]\r\n  forceUpdateBuildDisplay = () => this.forceUpdate()\r\n\r\n  selectCharacter = (characterKey = \"\") => {\r\n    if (!characterKey)\r\n      return this.setState({ ...BuildDisplay.getInitialState(), characterKey: \"\" })\r\n    const character = CharacterDatabase.get(characterKey)\r\n    if (character)\r\n      return this.setState(state => ({ ...BuildDisplay.getInitialState(), characterKey, maxBuildsToShow: state.maxBuildsToShow, ...(character?.buildSetting ?? {}), showCharacterModal: state.showCharacterModal }))\r\n  }\r\n  splitArtifacts = () => {\r\n    if (!this.state.characterKey) // Make sure we have all slotKeys\r\n      return Object.fromEntries(Artifact.getSlotKeys().map(slotKey => [slotKey, []]))\r\n    let artifactDatabase = ArtifactDatabase.getArtifactDatabase();\r\n    //do not use artifacts that are locked.\r\n    if (!this.state.useLockedArts)\r\n      Object.entries(artifactDatabase).forEach(([key, val]) => {\r\n        //if its equipped on the selected character, bypass the lock check\r\n        if (this.state.characterKey && val.location === this.state.characterKey) return\r\n        //if its locked, or equipped, remove from consideration\r\n        if (val.lock || val.location)\r\n          delete artifactDatabase[key]\r\n      })\r\n    let split = Artifact.splitArtifactsBySlot(artifactDatabase);\r\n    //filter the split slots on the mainstats selected.\r\n    BuildDisplay.artifactsSlotsToSelectMainStats.forEach((slotKey, index) =>\r\n      this.state.mainStat[index] && (split[slotKey] = split[slotKey].filter((art) => art.mainStatKey === this.state.mainStat[index])))\r\n    return split\r\n  }\r\n  changeMainStat = (index, mainStatKey) => {\r\n    this.setState(state => {\r\n      let mainStat = state.mainStat;\r\n      mainStat[index] = mainStatKey;\r\n      return { mainStat }\r\n    }, this.autoGenerateBuilds)\r\n  }\r\n  changeSetFilterKey = (index, newkey, setsNumArr) => this.setState(state => {\r\n    let oldKey = state.setFilters[index].key\r\n    if (oldKey === newkey) return\r\n    let setFilters = state.setFilters;\r\n    let num = 0\r\n    //automatically select the 1st element from setsNumArr\r\n    if (setsNumArr && setsNumArr[0])\r\n      num = parseInt(setsNumArr[0])\r\n    setFilters[index] = { key: newkey, num }\r\n    return { setFilters }\r\n  }, this.autoGenerateBuilds)\r\n\r\n  dropdownitemsForStar = (star, index) =>\r\n    Artifact.getSetsByMaxStarEntries(star).map(([setKey, setobj]) => {\r\n      if (this.state.setFilters.some(filter => filter.key === setKey)) return false;\r\n      let setsNumArr = Object.keys(Artifact.getSetEffectsObj(setKey))\r\n      let artsAccountedOther = this.state.setFilters.reduce((accu, cur, ind) => (cur.key && ind !== index) ? accu + cur.num : accu, 0)\r\n      if (setsNumArr.every(num => parseInt(num) + artsAccountedOther > 5)) return false;\r\n      return (<Dropdown.Item key={setKey}\r\n        onClick={() => this.changeSetFilterKey(index, setKey, setsNumArr)}\r\n      >\r\n        {setobj.name}\r\n      </Dropdown.Item>)\r\n    })\r\n  autoGenerateBuilds = () => {\r\n    if (typeof this.totBuildNumber === \"number\" && this.totBuildNumber <= autoBuildGenLimit)\r\n      this.generateBuilds()\r\n    else if (this.state.builds.length) this.setState({ builds: [], generationProgress: 0, generationDuration: 0 })\r\n  }\r\n\r\n  generateBuilds = () => {\r\n    let { split, totBuildNumber } = this\r\n    if (!totBuildNumber) return this.setState({ builds: [] })\r\n    this.setState({ generatingBuilds: true, builds: [], generationDuration: 0, generationProgress: 0 })\r\n    let { characterKey, setFilters, statFilters = {}, ascending, optimizationTarget, maxBuildsToShow, artifactConditionals, artifactsAssumeFull } = this.state\r\n    const character = CharacterDatabase.get(characterKey)\r\n    //get the formula for this targer\r\n    if (typeof optimizationTarget === \"object\") {\r\n      const { talentKey, sectionIndex, fieldIndex } = optimizationTarget\r\n      let { formula } = Character.getTalentField(characterKey, talentKey, sectionIndex, fieldIndex)\r\n      optimizationTarget = Character.getFormulaPath(characterKey, talentKey, formula)\r\n    }\r\n\r\n    const initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    initialStats.artifactsAssumeFull = artifactsAssumeFull\r\n\r\n    let artifactSetEffects = Artifact.getAllArtifactSetEffectsObj(artifactConditionals)\r\n    let splitArtifacts = deepClone(split)\r\n    //add mainStatVal to each artifact\r\n    Object.values(splitArtifacts).forEach(artArr => {\r\n      artArr.forEach(art => {\r\n        art.mainStatVal = Artifact.getMainStatValue(art.mainStatKey, art.numStars, artifactsAssumeFull ? art.numStars * 4 : art.level);\r\n      })\r\n    })\r\n    //generate the key dependencies for the formula\r\n    const minFilters = Object.fromEntries(Object.entries(statFilters).map(([statKey, { min }]) => [statKey, min]).filter(([, min]) => typeof min === \"number\"))\r\n    const maxFilters = Object.fromEntries(Object.entries(statFilters).map(([statKey, { max }]) => [statKey, max]).filter(([, max]) => typeof max === \"number\"))\r\n    //create an obj with app the artifact set effects to pass to buildworker.\r\n    let data = {\r\n      splitArtifacts, initialStats, artifactSetEffects,\r\n      setFilters, minFilters, maxFilters, maxBuildsToShow, optimizationTarget, ascending,\r\n    }\r\n    if (this.worker) this.worker.terminate()\r\n    this.worker = new Worker();\r\n    this.worker.onmessage = (e) => {\r\n      if (typeof e.data.progress === \"number\") {\r\n        const { progress = 0, timing = 0 } = e.data\r\n        return this.setState({ generationProgress: progress, generationDuration: timing })\r\n      }\r\n      ReactGA.timing({\r\n        category: \"Build Generation\",\r\n        variable: \"timing\",\r\n        value: e.data.timing,\r\n        label: this.totBuildNumber\r\n      })\r\n      let builds = e.data.builds.map(obj =>\r\n        Character.calculateBuildWithObjs(artifactConditionals, initialStats, obj.artifacts))\r\n      this.setState({ builds, generatingBuilds: false })\r\n      // worker.terminate()\r\n      this.worker.terminate()\r\n      delete this.worker\r\n    }\r\n\r\n    this.worker.postMessage(data)\r\n  }\r\n\r\n  BuildGeneratorEditorCard = ({ statsDisplayKeys }) => {\r\n    let { setFilters, statFilters = {}, characterKey, artifactsAssumeFull, artifactConditionals, useLockedArts, generatingBuilds, generationProgress, generationDuration, optimizationTarget, ascending } = this.state\r\n    let characterName = Character.getName(characterKey, \"Character Name\")\r\n    let artsAccounted = setFilters.reduce((accu, cur) => cur.key ? accu + cur.num : accu, 0)\r\n    //these variables are used for build generator.\r\n    this.split = this.splitArtifacts();\r\n    this.totBuildNumber = calculateTotalBuildNumber(this.split, setFilters)\r\n    let { totBuildNumber } = this\r\n    let totalBuildNumberString = totBuildNumber?.toLocaleString() ?? totBuildNumber\r\n    let generationProgressString = generationProgress?.toLocaleString() ?? generationProgress\r\n    let buildAlert = null\r\n    if (generatingBuilds) {\r\n      let progPercent = generationProgress * 100 / totBuildNumber\r\n      buildAlert = <Alert variant=\"success\">\r\n        <span>Generating and testing <b>{generationProgressString}/{totalBuildNumberString}</b> Build configurations against the criteria for <b>{characterName}</b></span>\r\n        <h6>Time elapsed: {timeStringMs(generationDuration)}</h6>\r\n        <ProgressBar now={progPercent} label={`${progPercent.toFixed(1)}%`} />\r\n      </Alert>\r\n    } else if (!generatingBuilds && generationProgress) {//done\r\n      buildAlert = <Alert variant=\"success\">\r\n        <span>Generated and tested <b>{totalBuildNumberString}</b> Build configurations against the criteria for <b>{characterName}</b></span>\r\n        <h6>Time elapsed: {timeStringMs(generationDuration)}</h6>\r\n        <ProgressBar now={100} variant=\"success\" label=\"100%\" />\r\n      </Alert>\r\n    } else {\r\n      buildAlert = totBuildNumber === 0 ?\r\n        <Alert variant=\"warning\" className=\"mb-0\"><span>Current configuration will not generate any builds for <b>{characterName}</b>. Please change your Artifact configurations, or add/unlock more Artifacts.</span></Alert>\r\n        : (totBuildNumber > warningBuildNumber ?\r\n          <Alert variant=\"warning\" className=\"mb-0\"><span>Current configuration will generate <b>{totalBuildNumberString}</b> builds for <b>{characterName}</b>. This might take quite awhile to generate...</span></Alert> :\r\n          <Alert variant=\"success\" className=\"mb-0\"><span>Current configuration {totBuildNumber <= this.state.maxBuildsToShow ? \"generated\" : \"will generate\"} <b>{totalBuildNumberString}</b> builds for <b>{characterName}</b>.</span></Alert>)\r\n    }\r\n    let characterDropDown = <DropdownButton title={Character.getName(characterKey, \"Select Character\")} disabled={generatingBuilds}>\r\n      <Dropdown.Item onClick={() => this.selectCharacter(\"\")}>Unselect Character</Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <CharacterSelectionDropdownList onSelect={cKey => this.selectCharacter(cKey)} />\r\n    </DropdownButton>\r\n    const toggleArtifactsAssumeFull = () => this.setState(state => ({ artifactsAssumeFull: !state.artifactsAssumeFull }), this.autoGenerateBuilds)\r\n    return <Card bg=\"darkcontent\" text=\"lightfont\">\r\n      <Card.Header>Build Generator</Card.Header>\r\n      <Card.Body>\r\n        <Row >\r\n          <Col xs={12} lg={6}>\r\n            {/* character selection */}\r\n            {characterKey ?\r\n              <CharacterCard header={characterDropDown} characterKey={characterKey} bg={\"lightcontent\"} footer={false} cardClassName=\"mb-2\" onEdit={!generatingBuilds ? () => this.setState({ showCharacterModal: true }) : null} /> :\r\n              <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                <Card.Header>\r\n                  {characterDropDown}\r\n                </Card.Header>\r\n              </Card>}\r\n            {/* Hit mode options */}\r\n            {Character.hasTalentPage(characterKey) && <HitModeCard className=\"mb-2\" characterKey={characterKey} forceUpdate={() => { this.forceUpdateBuildDisplay(); this.autoGenerateBuilds() }} />}\r\n            {/* Final Stat Filter */}\r\n            <StatFilterCard className=\"mb-2\" statFilters={statFilters} statsDisplayKeys={statsDisplayKeys} setStatFilters={sFs => this.setState({ statFilters: sFs })} />\r\n          </Col>\r\n          <Col xs={12} lg={6}><Row>\r\n            <Col className=\"mb-2\" xs={12}>\r\n              <Card bg=\"lightcontent\" text=\"lightfont\"><Card.Body>\r\n                <Button className=\"w-100\" onClick={() => this.setState({ showArtCondModal: true })} disabled={generatingBuilds}>\r\n                  <span>Default Artifact Set Effects {Boolean(artifactConditionals.length) && <Badge variant=\"success\">{artifactConditionals.length} Selected</Badge>}</span>\r\n                </Button>\r\n              </Card.Body></Card>\r\n            </Col>\r\n            {/* Artifact set picker */}\r\n            {setFilters.map(({ key: setKey, num: setNum }, index) => <Col className=\"mb-2\" key={index} xs={12}>\r\n              <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n                <Card.Header>\r\n                  <ButtonGroup>\r\n                    {/* Artifact set */}\r\n                    <DropdownButton as={ButtonGroup} title={Artifact.getSetName(setKey, \"Artifact Set Filter\")} disabled={generatingBuilds}>\r\n                      <Dropdown.Item onClick={() => this.changeSetFilterKey(index, \"\")}>Unselect Artifact</Dropdown.Item>\r\n                      <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊🟊</Dropdown.ItemText>\r\n                      {this.dropdownitemsForStar(5, index)}\r\n                      <Dropdown.Divider />\r\n                      <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊</Dropdown.ItemText>\r\n                      {this.dropdownitemsForStar(4, index)}\r\n                      <Dropdown.Divider />\r\n                      <Dropdown.ItemText>Max Rarity 🟊🟊🟊</Dropdown.ItemText>\r\n                      {this.dropdownitemsForStar(3, index)}\r\n                    </DropdownButton>\r\n                    {/* set number */}\r\n                    <DropdownButton as={ButtonGroup} title={`${setNum}-set`}\r\n                      disabled={generatingBuilds || !setKey || artsAccounted >= 5}\r\n                    >\r\n                      {Object.keys(Artifact.getSetEffectsObj(setKey)).map(num => {\r\n                        let artsAccountedOther = setFilters.reduce((accu, cur) => (cur.key && cur.key !== setKey) ? accu + cur.num : accu, 0)\r\n                        return (parseInt(num) + artsAccountedOther <= 5) &&\r\n                          (<Dropdown.Item key={num}\r\n                            onClick={() => this.setState((state) => {\r\n                              let setFilters = state.setFilters;\r\n                              setFilters[index].num = parseInt(num)\r\n                              return { setFilters }\r\n                            }, this.autoGenerateBuilds)}\r\n                          >\r\n                            {`${num}-set`}\r\n                          </Dropdown.Item>)\r\n                      })}\r\n                    </DropdownButton>\r\n                  </ButtonGroup>\r\n                </Card.Header>\r\n                {setKey ? <Card.Body><Row>\r\n                  {Object.keys(Artifact.getSetEffectsObj(setKey)).filter(setNkey => parseInt(setNkey) <= setNum).map(setNumKey => {\r\n                    let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                    let conditionalNum = 0;\r\n                    let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                    if (conditional) {\r\n                      conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                        setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                    }\r\n                    let setStateArtifactConditional = (conditionalNum) => this.setState(state =>\r\n                      ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }), this.autoGenerateBuilds)\r\n                    let conditionalElement = <ConditionalSelector\r\n                      conditional={conditional}\r\n                      conditionalNum={conditionalNum}\r\n                      setConditional={setStateArtifactConditional}\r\n                      defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                    />\r\n                    return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                      <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey)}</h6>\r\n                      {setStats ? <Row>\r\n                        {Object.entries(setStats).map(([statKey, val]) =>\r\n                          <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                      </Row> : null}\r\n                    </Col>\r\n                  })}\r\n                </Row></Card.Body> : null}\r\n              </Card>\r\n            </Col>)}\r\n            <Col className=\"mb-2\" xs={12}>\r\n              <Card bg=\"lightcontent\" text=\"lightfont\"><Card.Body>\r\n                <Button className=\"w-100\" onClick={() => this.setState(state => ({ useLockedArts: !state.useLockedArts }), this.autoGenerateBuilds)} disabled={generatingBuilds}>\r\n                  <span><FontAwesomeIcon icon={useLockedArts ? faCheckSquare : faSquare} /> {useLockedArts ? \"Use Locked & Equipped Artifacts\" : \"Do not use Locked & Equipped Artifacts\"}</span>\r\n                </Button>\r\n              </Card.Body></Card>\r\n            </Col>\r\n            {/* main stat selector */}\r\n            <Col className=\"mb-2\" xs={12}>\r\n              <Card bg=\"lightcontent\" text=\"lightfont\">\r\n                <Card.Header>\r\n                  <span>Artifact Main Stat</span>\r\n                  <Button className=\"float-right text-right\" variant={artifactsAssumeFull ? \"orange\" : \"primary\"} onClick={toggleArtifactsAssumeFull} disabled={generatingBuilds}>\r\n                    <span><FontAwesomeIcon icon={artifactsAssumeFull ? faCheckSquare : faSquare} className=\"fa-fw\" /> Assume Fully Leveled</span>\r\n                  </Button>\r\n                </Card.Header>\r\n                <Card.Body className=\"mb-n2\">\r\n                  {BuildDisplay.artifactsSlotsToSelectMainStats.map((slotKey, index) =>\r\n                  (<div className=\"text-inline mb-1 d-flex justify-content-between\" key={slotKey}>\r\n                    <h6 className=\"d-inline mb-0\">\r\n                      {Artifact.getSlotNameWithIcon(slotKey)}\r\n                    </h6>\r\n                    <DropdownButton disabled={generatingBuilds} size=\"sm\"\r\n                      title={this.state.mainStat[index] ? Stat.getStatNameWithPercent(this.state.mainStat[index]) : \"Select a mainstat\"}\r\n                      className=\"d-inline\">\r\n                      <Dropdown.Item onClick={() => this.changeMainStat(index, \"\")} >No MainStat</Dropdown.Item>\r\n                      {Artifact.getSlotMainStatKeys(slotKey).map(mainStatKey =>\r\n                        <Dropdown.Item onClick={() => this.changeMainStat(index, mainStatKey)} key={mainStatKey}>\r\n                          {Stat.getStatNameWithPercent(mainStatKey)}\r\n                        </Dropdown.Item>\r\n                      )}\r\n                    </DropdownButton>\r\n                  </div>))}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row></Col>\r\n        </Row>\r\n        <Row className=\"mb-2\">\r\n          <Col>{characterKey && buildAlert}</Col>\r\n        </Row>\r\n        <Row className=\"d-flex justify-content-between\">\r\n          <Col xs=\"auto\" >\r\n            <ButtonGroup>\r\n              <Button\r\n                className=\"h-100\"\r\n                disabled={!characterKey || generatingBuilds}\r\n                variant={(characterKey && totBuildNumber <= warningBuildNumber) ? \"success\" : \"warning\"}\r\n                onClick={this.generateBuilds}\r\n              ><span>Generate Builds</span></Button>\r\n              <Button\r\n                className=\"h-100\"\r\n                disabled={!generatingBuilds}\r\n                variant=\"danger\"\r\n                onClick={() => {\r\n                  if (this.worker) {\r\n                    this.worker.terminate()\r\n                    delete this.worker\r\n                    this.setState({ generatingBuilds: false, builds: [], generationDuration: 0, generationProgress: 0 })\r\n                  }\r\n                }}\r\n              ><span>Cancel</span></Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {/* Dropdown to select sorting value */}\r\n            <SortByStatDropdown\r\n              characterKey={characterKey}\r\n              disabled={generatingBuilds || !characterKey}\r\n              autoGenerateBuilds={this.autoGenerateBuilds}\r\n              setState={(updater) => this.setState(updater, this.autoGenerateBuilds)}\r\n              optimizationTarget={optimizationTarget}\r\n              ascending={ascending}\r\n              statsDisplayKeys={statsDisplayKeys}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  }\r\n  closeModal = () => this.setState({ modalBuild: null, showCharacterModal: false })\r\n  BuildModal = ({ build, characterKey }) => {\r\n    let { showCharacterModal } = this.state\r\n    return <Modal show={Boolean(showCharacterModal || build)} onHide={this.closeModal} size=\"xl\" contentClassName=\"bg-transparent\">\r\n      <React.Suspense fallback={<span>Loading...</span>}>\r\n        <CharacterDisplayCard\r\n          characterKey={characterKey}\r\n          setCharacterKey={cKey => this.selectCharacter(cKey)}\r\n          newBuild={build}\r\n          onClose={this.closeModal}\r\n          forceUpdate={this.forceUpdateBuildDisplay}\r\n          editable={showCharacterModal}\r\n          footer={<Button variant=\"danger\" onClick={this.closeModal}>Close</Button>} />\r\n      </React.Suspense>\r\n    </Modal>\r\n  }\r\n  closeArtCondModal = () => this.setState({ showArtCondModal: false })\r\n  ArtConditionalModal = () => {\r\n    let { showArtCondModal, artifactConditionals } = this.state\r\n    let artSetKeyList = [5, 4, 3].map(s => Artifact.getSetsByMaxStarEntries(s).map(([key]) => key)).flat()\r\n    return <Modal show={showArtCondModal} onHide={this.closeArtCondModal} size=\"xl\" contentClassName=\"bg-transparent\">\r\n      <Card bg=\"darkcontent\" text=\"lightfont\" >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <h5>Default Artifact Set Effects  {Boolean(artifactConditionals.length) && <Badge variant=\"success\">{artifactConditionals.length} Selected</Badge>}</h5>\r\n            </Col>\r\n            <Col xs=\"auto\" >\r\n              <Button onClick={() => this.setState({ artifactConditionals: [] })}><span><FontAwesomeIcon icon={faUndo} /> Reset All</span></Button>\r\n            </Col>\r\n            <Col xs=\"auto\" >\r\n              <Button variant=\"danger\" onClick={this.closeArtCondModal}>\r\n                <FontAwesomeIcon icon={faTimes} /></Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Row>\r\n            {artSetKeyList.map(setKey => {\r\n              let icon = Artifact.getPieceIcon(setKey, Object.keys(Artifact.getPieces(setKey))?.[0])\r\n              let numStars = [...Artifact.getRarityArr(setKey)].pop() || 1\r\n              return <Col className=\"mb-2\" key={setKey} xs={12} lg={6} xl={4}>\r\n                <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n                  <Card.Header >\r\n                    <Row>\r\n                      <Col xs=\"auto\" className=\"ml-n3 my-n2\">\r\n                        <Image src={icon} className={`thumb-mid grad-${numStars}star m-1`} thumbnail />\r\n                      </Col>\r\n                      <Col >\r\n                        <h6><b>{Artifact.getSetName(setKey)}</b></h6>\r\n                        <span><Stars stars={numStars} /></span>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Header>\r\n                  <Card.Body><Row>\r\n                    {Object.keys(Artifact.getSetEffectsObj(setKey)).map(setNumKey => {\r\n                      let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                      let conditionalNum = 0;\r\n                      let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                      if (conditional) {\r\n                        conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                        Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                          setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                      }\r\n                      let setStateArtifactConditional = (conditionalNum) => this.setState(state =>\r\n                        ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }),\r\n                        this.autoGenerateBuilds())\r\n                      let conditionalElement = <ConditionalSelector\r\n                        conditional={conditional}\r\n                        conditionalNum={conditionalNum}\r\n                        setConditional={setStateArtifactConditional}\r\n                        defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                      />\r\n                      return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                        <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey)}</h6>\r\n                        {setStats ? <Row>\r\n                          {Object.entries(setStats).map(([statKey, val]) =>\r\n                            <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                        </Row> : null}\r\n                      </Col>\r\n                    })}\r\n                  </Row></Card.Body>\r\n                </Card>\r\n              </Col>\r\n            })}\r\n          </Row>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Button variant=\"danger\" onClick={this.closeArtCondModal}>\r\n            <FontAwesomeIcon icon={faTimes} /> CLOSE</Button>\r\n        </Card.Footer>\r\n      </Card>\r\n    </Modal>\r\n  }\r\n\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport()\r\n    ]).then(() => {\r\n      this.forceUpdate()\r\n      //try to generate a build at the beginning after mount.\r\n      this.autoGenerateBuilds()\r\n    })\r\n  }\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if (prevState.characterKey !== this.state.characterKey || prevState.maxBuildsToShow !== this.state.maxBuildsToShow) {\r\n      let { characterKey, maxBuildsToShow } = this.state\r\n      saveToLocalStorage(\"BuildsDisplay.state\", { characterKey, maxBuildsToShow })\r\n    }\r\n\r\n    if (this.state.characterKey) {\r\n      let character = CharacterDatabase.get(this.state.characterKey)\r\n      if (!character) return\r\n      const { setFilters, statFilters, artifactConditionals, mainStat, optimizationTarget, artifactsAssumeFull, useLockedArts, ascending } = deepClone(this.state)\r\n      character.buildSetting = { setFilters, statFilters, artifactConditionals, mainStat, optimizationTarget, artifactsAssumeFull, useLockedArts, ascending }\r\n      CharacterDatabase.updateCharacter(character)\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.worker?.terminate()\r\n    delete this.worker\r\n  }\r\n  render() {\r\n    let { characterKey, modalBuild, maxBuildsToShow, builds = [] } = this.state\r\n    let characterName = Character.getName(characterKey, \"Character Name\")\r\n    let statsDisplayKeys = Character.getDisplayStatKeys(characterKey)\r\n    return (<Container>\r\n      <this.BuildModal build={modalBuild} characterKey={characterKey} />\r\n      <this.ArtConditionalModal />\r\n      <Row className=\"mt-2 mb-2\">\r\n        <Col>\r\n          {/* Build Generator Editor */}\r\n          <this.BuildGeneratorEditorCard statsDisplayKeys={statsDisplayKeys} />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <Card bg=\"darkcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>{characterKey ? <span>Showing <b>{builds.length}</b> Builds generated for {characterName}</span> : <span>Select a character to generate builds.</span>}</Col>\r\n                <Col xs=\"auto\">\r\n                  <DropdownButton title={<span>Max builds to show: <b>{maxBuildsToShow}</b></span>} size=\"sm\">\r\n                    {maxBuildsToShowList.map(v => <Dropdown.Item key={v} onClick={() => this.setState({ maxBuildsToShow: v }, this.autoGenerateBuilds)}>{v}</Dropdown.Item>)}\r\n                  </DropdownButton>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            {/* Build List */}\r\n            <ListGroup>\r\n              {builds.map((build, index) =>\r\n                (index < maxBuildsToShow) && <ArtifactDisplayItem build={build} characterKey={characterKey} index={index} key={Object.values(build.artifactIds).join(\"_\")} statsDisplayKeys={statsDisplayKeys} setState={s => this.setState(s)} />\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>)\r\n  }\r\n}\r\nfunction SortByStatDropdown({ characterKey, statsDisplayKeys, disabled, optimizationTarget, ascending, setState }) {\r\n  const character = CharacterDatabase.get(characterKey)\r\n  if (!character) return null\r\n  const initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n  let sortByText = \"VALUE\"\r\n  if (typeof optimizationTarget === \"object\") {\r\n    const { talentKey, sectionIndex, fieldIndex } = optimizationTarget\r\n    let { variant = \"\", text } = Character.getTalentField(characterKey, talentKey, sectionIndex, fieldIndex) ?? {}\r\n    variant = typeof variant === \"function\" ? variant?.(initialStats.talentLevelKeys[talentKey], initialStats) : variant\r\n    sortByText = <b>{Character.getTalentName(characterKey, talentKey)}: <span className={`text-${variant}`}>{text}</span></b>\r\n  } else\r\n    sortByText = <b>Basic Stat: <span className={`text-${Stat.getStatVariant(optimizationTarget)}`}>{Stat.getStatNamePretty(optimizationTarget)}</span></b>\r\n\r\n  return <ButtonGroup>\r\n    <Dropdown as={ButtonGroup}>\r\n      <Dropdown.Toggle disabled={disabled} >\r\n        <span>Sort by {sortByText}</span>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu drop=\"up\" align=\"right\" style={{ minWidth: \"35rem\" }} >\r\n        <Row>\r\n          {Object.entries(statsDisplayKeys).map(([talentKey, fields]) => {\r\n            let header = \"\"\r\n            if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n            else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n            else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n            else header = Character.getTalentName(characterKey, talentKey, talentKey)\r\n            return <Col xs={12} md={6} key={talentKey}>\r\n              <Dropdown.Header><b>{header}</b></Dropdown.Header>\r\n              {fields.map((field, i) => {\r\n                if (typeof field === \"string\")\r\n                  return <Dropdown.Item key={i} onClick={() => setState({ optimizationTarget: field })}>{Stat.getStatNamePretty(field)}</Dropdown.Item>\r\n                const talentField = Character.getTalentField(characterKey, field.talentKey, field.sectionIndex, field.fieldIndex)\r\n                return <Dropdown.Item key={i} onClick={() => setState({ optimizationTarget: field })}>\r\n                  <span className={`text-${Character.getTalentFieldValue(talentField, \"variant\", talentKey, initialStats)}`}>{Character.getTalentFieldValue(talentField, \"text\", talentKey, initialStats)}</span>\r\n                </Dropdown.Item>\r\n              })}\r\n            </Col>\r\n          })}\r\n        </Row>\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n    <Button onClick={() => setState(state => ({ ascending: !state.ascending }))} disabled={disabled}>\r\n      <FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />\r\n    </Button>\r\n  </ButtonGroup >\r\n}\r\nfunction StatFilterItem({ statKey, statKeys = [], min, max, close, setFilter }) {\r\n  const isFloat = Stat.getStatUnit(statKey) === \"%\"\r\n  const inputProps = {\r\n    disabled: !statKey,\r\n    allowEmpty: true,\r\n    float: isFloat,\r\n  }\r\n  const minInputProps = {\r\n    ...inputProps,\r\n    placeholder: \"MIN\",\r\n    value: min,\r\n    onValueChange: (s) => setFilter(statKey, s, max)\r\n  }\r\n  const maxInputProps = {\r\n    ...inputProps,\r\n    placeholder: \"MAX\",\r\n    value: max,\r\n    onValueChange: (s) => setFilter(statKey, min, s)\r\n  }\r\n  return <InputGroup className=\"mb-2\">\r\n    <DropdownButton\r\n      as={InputGroup.Prepend}\r\n      title={Stat.getStatNamePretty(statKey, \"New Stat\")}\r\n      id=\"input-group-dropdown-1\"\r\n    >\r\n      {statKeys.map(sKey => <Dropdown.Item key={sKey} onClick={() => { close?.(); setFilter(sKey, min, max) }}>{Stat.getStatNamePretty(sKey)}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <CustomFormControl {...minInputProps} />\r\n    <CustomFormControl {...maxInputProps} />\r\n    {Boolean(close) && <InputGroup.Append>\r\n      <Button variant=\"danger\" onClick={close}><FontAwesomeIcon icon={faTrash} /></Button>\r\n    </InputGroup.Append>}\r\n  </InputGroup>\r\n}\r\n\r\nfunction HitModeCard({ characterKey, forceUpdate, className }) {\r\n  const character = CharacterDatabase.get(characterKey)\r\n  if (!character) return null\r\n  const { hitMode } = character\r\n  const setHitmode = v => {\r\n    const char = CharacterDatabase.get(characterKey)\r\n    char.hitMode = v;\r\n    CharacterDatabase.updateCharacter(char)\r\n    forceUpdate()\r\n  }\r\n  const setReactionMode = r => {\r\n    const char = CharacterDatabase.get(characterKey)\r\n    char.reactionMode = r;\r\n    CharacterDatabase.updateCharacter(char)\r\n    forceUpdate()\r\n  }\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className={className}>\r\n    <Card.Header>Hit Mode Options</Card.Header>\r\n    <Card.Body>\r\n      <HitModeToggle hitMode={hitMode} setHitMode={setHitmode} className=\"w-100\" />\r\n      <ReactionToggle character={character} setReactionMode={setReactionMode} className=\"w-100 mt-2\" />\r\n    </Card.Body>\r\n  </Card >\r\n}\r\n\r\nfunction StatFilterCard({ statsDisplayKeys = { basicKeys: [] }, statFilters = {}, setStatFilters, className }) {\r\n  const remainingKeys = statsDisplayKeys.basicKeys.filter(key => !Object.keys(statFilters).some(k => k === key))\r\n  const setFilter = (sKey, min, max) => setStatFilters({ ...statFilters, [sKey]: { min, max } })\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className={className}>\r\n    <Card.Header>Final Stat Filter</Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-n2\">\r\n        {Object.entries(statFilters).map(([statKey, { min, max }]) => {\r\n          return <Col xs={12} key={statKey} ><StatFilterItem statKey={statKey} statKeys={remainingKeys} setFilter={setFilter} min={min} max={max} close={() => {\r\n            delete statFilters[statKey]\r\n            setStatFilters({ ...statFilters })\r\n          }} /></Col>\r\n        })}\r\n        <Col xs={12}>\r\n          <StatFilterItem statKeys={remainingKeys} setFilter={setFilter} />\r\n        </Col>\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\n//for displaying each artifact build\r\nfunction ArtifactDisplayItem({ index, characterKey, build, statsDisplayKeys, setState }) {\r\n  return (<div>\r\n    <ListGroup.Item\r\n      variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"text-white\" action\r\n      onClick={() => setState({ modalBuild: build })}\r\n    >\r\n      <h5>{Object.entries(build.setToSlots).sort(([key1, slotarr1], [key2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\r\n        <Badge key={key} variant=\"primary\" className=\"mr-2\">\r\n          {slotarr.map(slotKey => Artifact.getSlotIcon(slotKey))} {Artifact.getSetName(key)}\r\n        </Badge>\r\n      )}</h5>\r\n      <StatDisplayComponent {...{ character: CharacterDatabase.get(characterKey), newBuild: build, statsDisplayKeys, cardbg: (index % 2 ? \"lightcontent\" : \"darkcontent\") }} />\r\n    </ListGroup.Item>\r\n  </div>)\r\n}","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\n\r\n//multiplies every numberical value in the obj by a multiplier.\r\nfunction objMultiplication(obj, multi) {\r\n  Object.keys(obj).forEach(prop => {\r\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\r\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\r\n  })\r\n}\r\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\r\nconst getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance,\r\n  objMultiplication,\r\n  getObjectKeysRecursive\r\n}","import { Formulas, StatData } from \"./StatData\"\r\nimport { ReactionMatrix, hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\r\n    let formulaKeys = Object.keys(FormulaText)\r\n    let newModifiersKeys = Object.keys(modifiers).filter(x => !formulaKeys.includes(x))\r\n    return [...newModifiersKeys, ...formulaKeys].filter((key) => statList.includes(key))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"characterLevel\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"characterLevel\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n// Base Formula\r\n\r\nconst FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  heal_multi: (o) => <span>( 1 + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( 100 + {f(o, \"enemyLevel\")} + 100 + {f(o, \"characterLevel\")} )</span>,\r\n}\r\n\r\n// Enemy RES\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\n// Crit Rate\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\n// Hit\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_elemental_hit_multi`] = (o) => <span>( 1 + {f(o, `dmg_`)} * {f(o, `${ele}_dmg_`)} ) * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n  FormulaText[`${ele}_elemental_hit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_hit_multi`)}</span>\r\n  FormulaText[`${ele}_elemental_critHit_multi`] = (o) => <span>( 1 + {f(o, `critDMG_`)} ) * {f(o, `${ele}_elemental_hit_multi`)}</span>\r\n  FormulaText[`${ele}_elemental_critHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_critHit_multi`)}</span>\r\n  FormulaText[`${ele}_elemental_avgHit_multi`] = (o) => <span>( 1 + {f(o, `critDMG_`)} * {f(o, `critRate_`)} ) * {f(o, `${ele}_elemental_hit_multi`)}</span>\r\n  FormulaText[`${ele}_elemental_avgHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_avgHit_multi`)}</span>\r\n\r\n  Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>( 1 + {f(o, `dmg_`)} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)} ) * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_hit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>( 1 + {f(o, `critDMG_`)} ) * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_critHit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>( 1 + {f(o, `critDMG_`)} * {f(o, `final_${move}_critRate_`)} ) * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_avgHit_multi`)}</span>\r\n  })\r\n})\r\n\r\n// Reaction\r\n\r\nObject.assign(FormulaText, {\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n})\r\nObject.entries(amplifyingReactions).forEach(([reaction, [name, variants]]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    // Move them to the right position\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${reaction}_elemental_${type}`] = (o) => <span>{f(o, `${ele}_elemental_${type}`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, `${ele}_${move}_${type}`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n\r\nObject.assign(FormulaText, {\r\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n})\r\nObject.entries(transformativeReactions).forEach(([reaction, [reactionName, ele, baseMulti]]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => ReactionMatrix[reaction].map((val, i) => reactionMatrixElementRenderer(o, val, i))\r\n  FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n})\r\nObject.assign(FormulaText, {\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_multi: (o) => ReactionMatrix[\"crystalize\"].map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n})\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n","import ElementalData from \"../Data/ElementalData\"\r\n\r\n/**\r\n * Generate all set of artifacts-by-slots based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n *\r\n */\r\nexport function artifactSetPermutations(artifactsBySlot, setFilters) {\r\n  const setKeys = new Set(setFilters.map(i => i.key)), filteredArtifactsBySlot = {}\r\n  const slotKeys = Object.keys(artifactsBySlot)\r\n\r\n  for (const slotKey of slotKeys) {\r\n    let artifactsBySet = {}\r\n    for (const artifact of artifactsBySlot[slotKey]) {\r\n      if (setKeys.has(artifact.setKey)) {\r\n        if (artifactsBySet[artifact.setKey]) artifactsBySet[artifact.setKey].push(artifact)\r\n        else artifactsBySet[artifact.setKey] = [artifact]\r\n      } else {\r\n        if (artifactsBySet[null]) artifactsBySet[null].push(artifact)\r\n        else artifactsBySet[null] = [artifact]\r\n      }\r\n    }\r\n    filteredArtifactsBySlot[slotKey] = Object.freeze(artifactsBySet)\r\n  }\r\n\r\n  const setCount = {}, accu = {}, result = []\r\n\r\n  function slotPerm(index) {\r\n    if (index >= slotKeys.length) {\r\n      for (const { key, num } of setFilters)\r\n        if ((setCount[key] ?? 0) < num)\r\n          return\r\n      result.push({ ...accu })\r\n      return\r\n    }\r\n\r\n    const slotKey = slotKeys[index]\r\n    let artifactsBySet = filteredArtifactsBySlot[slotKey]\r\n    for (const setKey in artifactsBySet) {\r\n      setCount[setKey] = (setCount[setKey] ?? 0) + 1\r\n      accu[slotKey] = artifactsBySet[setKey]\r\n      slotPerm(index + 1)\r\n      setCount[setKey] -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0)\r\n  return result\r\n}\r\n\r\n/**\r\n * Compute number of all artifact permutations based on the filters\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, number>} setFilters - minimum number of artifacts in each set\r\n */\r\nexport function calculateTotalBuildNumber(artifactsBySlot, setFilters) {\r\n  return artifactSetPermutations(artifactsBySlot, setFilters).reduce((accu, artifactsBySlot) =>\r\n    accu + Object.entries(artifactsBySlot).reduce((accu, artifacts) => accu * artifacts[1].length, 1)\r\n    , 0)\r\n}\r\n\r\n/**\r\n * @callback artifactCallback\r\n * @param {Object.<artifactKey, artifact>} artifacts - the list of artifacts\r\n * @param {stats} stats - the total stats for the artifacts\r\n */\r\n\r\n/**\r\n * Generate all artifact permutations and accumulate the stats\r\n * @param {stats} initialStats - initial stats before any artifact is added\r\n * @param {Object.<slotKey, artifact[]>} artifactsBySlot - list of artifacts, separated by slots\r\n * @param {Object.<setKey, Object.<number, Object.<statKey, statValue>>>} artifactSetEffects - the list of the set effects\r\n * @param {artifactCallback} callback - the functions called with each permutation\r\n */\r\nexport function artifactPermutations(initialStats, artifactsBySlot, artifactSetEffects, callback) {\r\n  const slotKeys = Object.keys(artifactsBySlot), setCount = {}, accu = {}\r\n  function slotPerm(index, stats) {\r\n    if (index >= slotKeys.length) {\r\n      callback(accu, stats)\r\n      return\r\n    }\r\n\r\n    let slotKey = slotKeys[index]\r\n    for (const artifact of artifactsBySlot[slotKey]) {\r\n      let newStats = { ...stats }\r\n      accumulate(slotKey, artifact, setCount, accu, newStats, artifactSetEffects)\r\n      slotPerm(index + 1, newStats)\r\n      setCount[artifact.setKey] -= 1\r\n    }\r\n  }\r\n\r\n  slotPerm(0, initialStats)\r\n}\r\n\r\nfunction accumulate(slotKey, art, setCount, accu, stats, artifactSetEffects) {\r\n  let setKey = art.setKey\r\n  accu[slotKey] = art\r\n  setCount[setKey] = (setCount[setKey] ?? 0) + 1\r\n\r\n  // Add artifact stats\r\n  if (art.mainStatKey in stats) stats[art.mainStatKey] += art.mainStatVal\r\n  art.substats.forEach((substat) => {\r\n    if (substat?.key in stats) stats[substat.key] += substat.value\r\n  })\r\n\r\n  // Add set effects\r\n  let setEffect = artifactSetEffects[setKey]?.[setCount[setKey]]\r\n  setEffect && Object.entries(setEffect).forEach(([statKey, val]) => {\r\n    if (statKey in stats) stats[statKey] += val\r\n  })\r\n}\r\n\r\n/**\r\n  * Create statKey in the form of ${ele}_elemental_${type} for elemental DMG, ${ele}_${src}_${type} for talent DMG.\r\n  * @param {string} skillKey - The DMG src. Can be \"norm\",\"skill\". Use an elemental to specify a elemental hit \"physical\" -> physical_elemental_{type}. Use \"elemental\" here to specify a elemental hit of character's element/reactionMode\r\n  * @param {*} stats - The character. Will extract hitMode, autoInfused...\r\n  * @param {*} elemental - Override the hit to be the character's elemental, that is not part of infusion.\r\n  */\r\nexport function getTalentStatKey(skillKey, stats, elemental = false) {\r\n  const { hitMode = \"\", autoInfused = false, reactionMode = null, characterEle = \"anemo\", weaponType = \"sword\" } = stats\r\n  if (Object.keys(ElementalData).includes(skillKey)) return `${skillKey}_elemental_${hitMode}`//elemental DMG\r\n  if (!elemental) elemental = weaponType === \"catalyst\" || autoInfused\r\n  let eleKey = \"physical\"\r\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n    eleKey = (reactionMode ? reactionMode : characterEle)\r\n  return `${eleKey}_${skillKey}_${hitMode}`\r\n}\r\n\r\nexport function getTalentStatKeyVariant(skillKey, stats, elemental = false) {\r\n  if (Object.keys(ElementalData).includes(skillKey)) return skillKey\r\n  const { autoInfused = false, characterEle = \"anemo\", weaponType = \"sword\" } = stats\r\n  let { reactionMode } = stats\r\n  //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n  if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n    reactionMode = \"vaporize\"\r\n  else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n    reactionMode = \"melt\"\r\n  if (!elemental) elemental = weaponType === \"catalyst\" || autoInfused\r\n  let eleKey = \"physical\"\r\n  if (skillKey === \"elemental\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n    eleKey = (reactionMode ? reactionMode : characterEle)\r\n  return eleKey\r\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return this.getLevel(levelKey)\r\n    if (statKey.includes(\"enemyRes_\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getElementalKeysWithoutPhysical = () => this.getElementalKeys().filter(e => e !== \"physical\")\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentDocumentSections = (charKey, talentKey, defVal = []) => {\r\n    const character = CharacterDatabase.get(charKey);\r\n    if (!character) return defVal\r\n    const { constellation = 0, levelKey = Object.keys(LevelsData)[0] } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n    return this.getTalentDocument(charKey, talentKey).map(section => typeof section === \"function\" ? section(constellation, ascension) : section)\r\n  }\r\n  static getTalentField = (charKey, talentKey, sectionIndex, fieldIndex, defVal = {}) => {\r\n    const character = CharacterDatabase.get(charKey);\r\n    if (!character) return defVal\r\n    const { constellation = 0, levelKey = Object.keys(LevelsData)[0] } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n    const field = this.getTalentDocumentSections(charKey, talentKey)?.[sectionIndex]?.fields?.[fieldIndex]\r\n    if (!field) return defVal\r\n    return typeof field === \"function\" ? field(constellation, ascension) : field\r\n  }\r\n  static getTalentFieldValue = (field, key, talentKey, stats = {}, defVal = \"\") => {\r\n    if (!field?.[key]) return defVal\r\n    if (key === \"formula\")\r\n      return field?.formula?.(stats.talentLevelKeys[talentKey], stats)?.[0]?.(stats)\r\n    return typeof field?.[key] === \"function\" ? field[key](stats.talentLevelKeys[talentKey], stats) : field[key]\r\n  }\r\n\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    const sections = this.getTalentDocumentSections(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of sections) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  //look up the formula, and generate the formulaPath to send to worker.\r\n  static getFormulaPath(characterKey, talentKey, formula) {\r\n    const formulaDB = this.getCDataObj(characterKey)?.formula\r\n    if (!formulaDB) return\r\n    let formulaKey\r\n    if (talentKey === \"auto\") {\r\n      for (const tk of [\"normal\", \"charged\", \"plunging\"]) {\r\n        ([formulaKey,] = Object.entries(formulaDB?.[tk] ?? {}).find(([, value]) => value === formula) ?? [])\r\n        if (formulaKey) {\r\n          talentKey = tk\r\n          break;\r\n        }\r\n      }\r\n    } else ([formulaKey,] = Object.entries(formulaDB?.[talentKey] ?? {}).find(([, value]) => value === formula) ?? [])\r\n    if (!formulaKey) return\r\n    return { characterKey, talentKey, formulaKey }\r\n  }\r\n\r\n\r\n  static hasTalentPage = (characterKey) => Boolean(Character.getCDataObj(characterKey)?.talent)\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = { basicKeys: [] }) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    const isAutoElemental = Character.isAutoElemental(characterKey)\r\n    const isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    if (!isAutoElemental)\r\n      basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = ElementToReactionKeys[eleKey]\r\n    const weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    if (this.hasTalentPage(characterKey)) {\r\n      const charFormulas = {}\r\n      Object.keys(Character.getCDataObj(characterKey)?.talent ?? {}).forEach(talentKey =>\r\n        Character.getTalentDocumentSections(characterKey, talentKey)?.forEach((section, sectionIndex) =>\r\n          section?.fields?.forEach((field, fieldIndex) =>\r\n            (field?.formula || this.getTalentField(characterKey, talentKey, sectionIndex, fieldIndex)?.formula) && (charFormulas[talentKey] = [...(charFormulas[talentKey] ?? []), {\r\n              talentKey,\r\n              sectionIndex,\r\n              fieldIndex\r\n            }]))))\r\n      return { basicKeys, ...charFormulas, transReactions }\r\n    } else {\r\n      //generic average hit parameters.\r\n      const genericAvgHit = []\r\n      if (!isAutoElemental) //add phy auto + charged + physical \r\n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\r\n\r\n      if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n        genericAvgHit.push(`${eleKey}_normal_avgHit`, `${eleKey}_charged_avgHit`)\r\n      else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\r\n      }\r\n      //show skill/burst \r\n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\r\n\r\n      //add reactions.\r\n      if (eleKey === \"pyro\") {\r\n        const reactions = []\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n        genericAvgHit.push(...reactions)\r\n      } else if (eleKey === \"cryo\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n      else if (eleKey === \"hydro\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n      return { basicKeys, genericAvgHit, transReactions }\r\n    }\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\r\n    else if (statKey === \"finalDEF\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\r\n    else if (statKey === \"finalATK\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterKey, artifactIds) => {\r\n    let character = CharacterDatabase.get(characterKey)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.get(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterKey) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static remove(characterKey) {\r\n    let character = CharacterDatabase.get(characterKey)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.remove(characterKey)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats).formula(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of Object.entries(val)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of Object.entries(modifier))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\r\n  })\r\n\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    character = deepClone(character)\r\n    const { characterKey, levelKey, hitMode, autoInfused, reactionMode, talentLevelKeys, constellation, talentConditionals = [] } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n\r\n    //generate the initalStats obj with data from Character & overrides\r\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\r\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    initialStats.characterEle = this.getElementalKey(characterKey);\r\n    initialStats.characterKey = characterKey\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.autoInfused = autoInfused && Character.getCDataObj(characterKey)?.talent?.auto?.infusable\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.talentConditionals = talentConditionals\r\n    initialStats.weaponType = this.getWeaponTypeKey(characterKey)\r\n    initialStats.talentLevelKeys = talentLevelKeys;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    for (const key in initialStats.talentLevelKeys)\r\n      initialStats.talentLevelKeys[key] += this.getTalentLevelBoost(character.characterKey, key, constellation);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemyImmunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      const { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      const conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, initialStats.talentLevelKeys[talentKey], constellation, ascension)\r\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    Character.getTalentStatsAll(characterKey, constellation, ascension).forEach(s => this.mergeStats(initialStats, s))\r\n\r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\r\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\r\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\r\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static isInvalid = (char) => !char || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterKeyList = () => Object.keys(characterDatabase);\r\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.startsWith(\"char_\")).forEach(key => {\r\n      let [, characterKey] = key.split(\"char_\")\r\n      if (!characterDatabase[characterKey]) {\r\n        let character = loadFromLocalStorage(key);\r\n        if (!character) return;\r\n        characterDatabase[characterKey] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    const dchar = deepClone(char)\r\n    saveToLocalStorage(`char_${char.characterKey}`, dchar);\r\n    characterDatabase[char.characterKey] = dchar;\r\n  }\r\n  static get = (characterKey) => characterDatabase?.[characterKey] ?? null\r\n\r\n  static remove = (characterKey) => {\r\n    delete characterDatabase[characterKey];\r\n    localStorage.removeItem(`char_${characterKey}`);\r\n  }\r\n  static getArtifactIDFromSlot = (characterKey, slotKey) =>\r\n    this.get(characterKey)?.equippedArtifacts?.[slotKey] ?? null\r\n\r\n  static equipArtifact = (characterKey, art) => {\r\n    const char = this.get(characterKey)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts) char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (characterKey, slotKey) => {\r\n    const char = this.get(characterKey)\r\n    if (!char || !slotKey) return\r\n    if (!char?.equippedArtifacts?.[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterKey, artifactIds) => {\r\n    const character = this.get(characterKey)\r\n    if (!character) return;\r\n    character.equippedArtifacts = artifactIds\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  //helper function for testing\r\n  static clearDatabase = () => {\r\n    characterDatabase = {}\r\n    initiated = false\r\n  }\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\r\nimport ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_dmg_`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    eleMas: [13, 17, 22, 27, 32],\r\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    critDMG_: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 1: [24, 30], 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 1: [2], 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 1: [2], 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 1: [1.5, 1.8], 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  eleMas: { 1: [5, 6], 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  enerRech_: { 1: [1.3, 1.6], 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  critRate_: { 1: [0.8, 1], 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  critDMG_: { 1: [1.6, 1.9], 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubStatsData).map(([key, obj]) =>\r\n  [key, {\r\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\r\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\r\n  }]))\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactSubstatsMinMax,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nconst maxStar = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_dmg_\")) // because in the database its still stored as ele_dmg_\r\n      return this.getMainStatValue(\"ele_dmg_\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubstatAllMax = (statKey, numStars = maxStar, defVal = 0) => ArtifactSubstatsMinMax?.[statKey]?.max[numStars] ?? defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => ArtifactSubStatsData?.[subStatKey]?.[numStars] ?? []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, rolls = []) => {\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let max = this.getSubstatAllMax(subStatKey) * len\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      if (rollArr.length > 1) substat.rollArr = rollArr\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(maxStar);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let statKeys = substats.filter(({ key }) => key).map(({ key }) => key)\r\n    let maxPerRoll = 100 * Math.max(...(statKeys.length === 4 ? statKeys : Object.keys(ArtifactSubstatsMinMax)).map(\r\n      key => Artifact.getSubstatAllMax(key, numStars) / Artifact.getSubstatAllMax(key)\r\n    ))\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * maxPerRoll) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect).length > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n      if (Object.keys(condStats).length > 0) {\r\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n        Object.entries(condStats).forEach(([statKey, value]) =>\r\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\r\n      }\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterKey) {\r\n    let art = ArtifactDatabase.get(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterKey || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else if (!conditionalNum && index < 0) { //nothing to change\r\n      return conditionals\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","const ElementalData = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static get = (id) => artifactDatabase[id] ?? null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    if (!id) {//if does not have id, generate ID\r\n      do {\r\n        id = `artifact_${artIdIndex++}`\r\n      } while (localStorage.getItem(id) !== null)\r\n      art.id = id\r\n    }\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.get(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.get(artAid), this.get(artBid))\r\n  //helper function for testing\r\n  static clearDatabase = () => {\r\n    artifactDatabase = {}\r\n    initiated = false\r\n    artIdIndex = 1\r\n  }\r\n}","import { clamp } from \"./Util/Util\";\r\nimport { ReactionMatrix, hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nconst StatData = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\r\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\r\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\", pretty: \"HP\" },\r\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\r\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\" },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\" },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\" },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Powerful Shield\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n}\r\nconst Formulas = {\r\n  // Basic Stats\r\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\r\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / (100 + c.enemyLevel + 100 + c.characterLevel),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s, c) => ReactionMatrix[\"crystalize\"].reduce((accu, val, i) => accu + val * Math.pow(c.characterLevel, i), 0),\r\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\r\n}\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"swirl_hit\"],\r\n  geo: [\"crystalize_hit\", \"shattered_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\", \r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, const: true, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n    StatData[`${ele}_elemental_${type}`] = { name: `${eleName} Attack ${typeName}`, ...opt }\r\n    StatData[`${ele}_elemental_${type}_multi`] = { name: `${eleName} Attack ${typeName} Multiplier`, unit: \"multi\" }\r\n\r\n    Formulas[`${ele}_elemental_${type}`] = (s) => s.finalATK * s[`${ele}_elemental_${type}_multi`]\r\n  })\r\n\r\n  Formulas[`${ele}_elemental_hit_multi`] = (s, c) => (1 + (s.dmg_ + s[`${ele}_dmg_`]) / 100) * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\r\n  Formulas[`${ele}_elemental_critHit_multi`] = (s) => s[`${ele}_elemental_hit_multi`] * (1 + s.critDMG_ / 100)\r\n  Formulas[`${ele}_elemental_avgHit_multi`] = (s) => s[`${ele}_elemental_hit_multi`] * (1 + s.critDMG_ * s[`critRate_`] / 10000)\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(c[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => (1 + (s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100) * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * (1 + s.critDMG_ / 100)\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, [reactionName, ele, baseMulti]]) => {\r\n  let opt = {}\r\n  if (ele) opt.variant = reaction\r\n  StatData[`${reaction}_hit`] = { name: `${reactionName} DMG`, ...opt }\r\n  StatData[`${reaction}_dmg_`] = { name: `${reactionName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${reactionName} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n\r\n  Formulas[`${reaction}_multi`] = (s, c) => ReactionMatrix[reaction].reduce((accu, val, i) => accu + val * Math.pow(c.characterLevel, i), 0)\r\n  Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, [name, variants]]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${reaction}_elemental_${type}`] = { name: `${name} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${reaction}_elemental_${type}`] = (s) => s[`${ele}_elemental_${type}`] * s[`${ele}_${reaction}_multi`]\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s[`${ele}_${move}_${type}`] * s[`${ele}_${reaction}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\r\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\r\n  const formulaList = dependencyKeys.map(key => {\r\n    const modifier = modifiers[key] ?? {}\r\n    const constModifier = Object.entries(modifier).filter(([k]) => StatData[k]?.const)\r\n    const dynamicModifier = Object.entries(modifier).filter(([k]) => !(StatData[k]?.const))\r\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]) => accu + c[k] * m, 0)\r\n    const dynamicFunc = (s) => dynamicModifier.reduce((accu, [k, m]) => accu + s[k] * m, 0)\r\n\r\n    let funcIndicator = 0\r\n    if (constModifier.length) funcIndicator += 1\r\n    if (dynamicModifier.length) funcIndicator += 2\r\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\r\n\r\n    let tmp\r\n    switch (funcIndicator) {\r\n      case 0: tmp = Formulas[key]; break\r\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\r\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\r\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 4: tmp = (s, c) => c[key]; break\r\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\r\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\r\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 8: tmp = (s, c) => s[key]; break\r\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\r\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\r\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n    }\r\n    const func = tmp\r\n\r\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\r\n\r\n    if (!(key in Formulas))\r\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n\r\n    if (StatData[key]?.const) {\r\n      constData[key] = stats[key]\r\n      constData[key] = func(stats, constData)\r\n      stats[key] = constData[key]\r\n      if (dynamicModifier.length)\r\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\r\n      return null\r\n    }\r\n\r\n    if (!(key in Formulas))\r\n      initialStats[key] = stats[key]\r\n\r\n    return [key, func]\r\n  }).filter((func) => func)\r\n\r\n  if (debug) console.log(initialStats, constData)\r\n\r\n  return {\r\n    initialStats,\r\n    formula: s => {\r\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\r\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\r\n      Object.assign(s, constData)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nimport { objMultiplication } from '../Util/Util.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n  static getWeaponTypeKeys = () => Object.keys(WeaponTypeData)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    stats = stats(refineIndex)\r\n    if (stacks !== 1) objMultiplication(stats, stacks)\r\n    return stats\r\n  }\r\n}"],"sourceRoot":""}