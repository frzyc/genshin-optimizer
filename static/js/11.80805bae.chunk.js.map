{"version":3,"sources":["Components/StarDisplay.js","Weapon/Weapon.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","Components/CustomFormControl.js","Data/ArtifactData.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","Components/ConditionalSelector.js","Assets/Weapons/Swords/Swords.js","Assets/Weapons/Swords/Weapon_Dull_Blade.png","Assets/Weapons/Swords/Weapon_Silver_Sword.png","Assets/Weapons/Swords/Weapon_Cool_Steel.png","Assets/Weapons/Swords/Weapon_Dark_Iron_Sword.png","Assets/Weapons/Swords/Weapon_Fillet_Blade.png","Assets/Weapons/Swords/Weapon_Harbinger_of_Dawn.png","Assets/Weapons/Swords/Weapon_Skyrider_Sword.png","Assets/Weapons/Swords/Weapon_Traveler's_Handy_Sword.png","Assets/Weapons/Swords/Weapon_Blackcliff_Longsword.png","Assets/Weapons/Swords/Weapon_Favonius_Sword.png","Assets/Weapons/Swords/Weapon_Iron_Sting.png","Assets/Weapons/Swords/Weapon_Lion's_Roar.png","Assets/Weapons/Swords/Weapon_Prototype_Rancour.png","Assets/Weapons/Swords/Weapon_Royal_Longsword.png","Assets/Weapons/Swords/Weapon_Sacrificial_Sword.png","Assets/Weapons/Swords/Weapon_The_Alley_Flash.png","Assets/Weapons/Swords/Weapon_The_Black_Sword.png","Assets/Weapons/Swords/Weapon_The_Flute.png","Assets/Weapons/Swords/Weapon_Sword_of_Descension.png","Assets/Weapons/Swords/festering_fang.png","Assets/Weapons/Swords/Weapon_Aquila_Favonia.png","Assets/Weapons/Swords/Weapon_Skyward_Blade.png","Assets/Weapons/Swords/summit_shaper.png","Assets/Weapons/Claymores/Claymores.js","Assets/Weapons/Claymores/Weapon_Waster_Greatsword.png","Assets/Weapons/Claymores/Weapon_Old_Merc's_Pal.png","Assets/Weapons/Claymores/Weapon_Bloodtainted_Greatsword.png","Assets/Weapons/Claymores/Weapon_Debate_Club.png","Assets/Weapons/Claymores/Weapon_Ferrous_Shadow.png","Assets/Weapons/Claymores/Weapon_Quartz.png","Assets/Weapons/Claymores/Weapon_Skyrider_Greatsword.png","Assets/Weapons/Claymores/Weapon_White_Iron_Greatsword.png","Assets/Weapons/Claymores/Weapon_Blackcliff_Slasher.png","Assets/Weapons/Claymores/Weapon_Favonius_Greatsword.png","Assets/Weapons/Claymores/Weapon_Lithic_Blade.png","Assets/Weapons/Claymores/Weapon_Prototype_Aminus.png","Assets/Weapons/Claymores/Weapon_Rainslasher.png","Assets/Weapons/Claymores/Weapon_Royal_Greatsword.png","Assets/Weapons/Claymores/Weapon_Serpent_Spine.png","Assets/Weapons/Claymores/Weapon_The_Bell.png","Assets/Weapons/Claymores/Weapon_Whiteblind.png","Assets/Weapons/Claymores/Weapon_Sacrificial_Greatsword.png","Assets/Weapons/Claymores/snow_tombed_starsilver.png","Assets/Weapons/Claymores/Weapon_Skyward_Pride.png","Assets/Weapons/Claymores/Weapon_Wolf's_Gravestone.png","Assets/Weapons/Claymores/Weapon_The_Unforged.png","Assets/Weapons/Polearms/Polearms.js","Assets/Weapons/Polearms/Weapon_Beginner's_Protector.png","Assets/Weapons/Polearms/Weapon_Iron_Point.png","Assets/Weapons/Polearms/Weapon_Black_Tassel.png","Assets/Weapons/Polearms/Weapon_Halberd.png","Assets/Weapons/Polearms/Weapon_White_Tassel.png","Assets/Weapons/Polearms/Weapon_Blackcliff_Pole.png","Assets/Weapons/Polearms/Weapon_Crescent_Pike.png","Assets/Weapons/Polearms/Weapon_Deathmatch.png","Assets/Weapons/Polearms/Weapon_Dragon's_Bane.png","Assets/Weapons/Polearms/Weapon_Lithic_Spear.png","Assets/Weapons/Polearms/Weapon_Prototype_Grudge.png","Assets/Weapons/Polearms/Weapon_Favonius_Lance.png","Assets/Weapons/Polearms/Weapon_Royal_Spear.png","Assets/Weapons/Polearms/dragonspine_spear.png","Assets/Weapons/Polearms/Weapon_Vortex_Vanquisher.png","Assets/Weapons/Polearms/Weapon_Primordial_Jade_Winged-Spear.png","Assets/Weapons/Polearms/Weapon_Skyward_Spine.png","Assets/Weapons/Bows/Bows.js","Assets/Weapons/Bows/Weapon_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Seasoned_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Ebony_Bow.png","Assets/Weapons/Bows/Weapon_Messenger.png","Assets/Weapons/Bows/Weapon_Raven_Bow.png","Assets/Weapons/Bows/Weapon_Recurve_Bow.png","Assets/Weapons/Bows/Weapon_Sharpshooter's_Oath.png","Assets/Weapons/Bows/Weapon_Slingshot.png","Assets/Weapons/Bows/Weapon_The_Stringless.png","Assets/Weapons/Bows/Weapon_Alley_Hunter.png","Assets/Weapons/Bows/Weapon_Blackcliff_Warbow.png","Assets/Weapons/Bows/Weapon_Compound_Bow.png","Assets/Weapons/Bows/Weapon_Favonius_Warbow.png","Assets/Weapons/Bows/Weapon_Prototype_Crescent.png","Assets/Weapons/Bows/Weapon_Royal_Bow.png","Assets/Weapons/Bows/Weapon_Rust.png","Assets/Weapons/Bows/Weapon_Sacrificial_Bow.png","Assets/Weapons/Bows/Weapon_The_Viridescent_Hunt.png","Assets/Weapons/Bows/Weapon_Skyward_Harp.png","Assets/Weapons/Bows/Weapon_Amos'_Bow.png","Assets/Weapons/Bows/dreams_of_dragonfell.png","Assets/Weapons/Catalysts/Catalysts.js","Assets/Weapons/Catalysts/Weapon_Apprentice's_Notes.png","Assets/Weapons/Catalysts/Weapon_Pocket_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Amber_Catalyst.png","Assets/Weapons/Catalysts/Weapon_Emerald_Orb.png","Assets/Weapons/Catalysts/Weapon_Magic_Guide.png","Assets/Weapons/Catalysts/Weapon_Otherworldly_Story.png","Assets/Weapons/Catalysts/Weapon_Thrilling_Tales_of_Dragon_Slayers.png","Assets/Weapons/Catalysts/Weapon_Twin_Nephrite.png","Assets/Weapons/Catalysts/Weapon_Blackcliff_Amulet.png","Assets/Weapons/Catalysts/Weapon_Favonius_Codex.png","Assets/Weapons/Catalysts/Weapon_Mappa_Mare.png","Assets/Weapons/Catalysts/Weapon_Prototype_Malice.png","Assets/Weapons/Catalysts/Weapon_Royal_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Sacrificial_Fragments.png","Assets/Weapons/Catalysts/Weapon_Solar_Pearl.png","Assets/Weapons/Catalysts/Weapon_The_Widsith.png","Assets/Weapons/Catalysts/Weapon_Wine_and_Song.png","Assets/Weapons/Catalysts/Weapon_Eye_of_Perception.png","Assets/Weapons/Catalysts/Weapon_Frostbearer.png","Assets/Weapons/Catalysts/Weapon_Lost_Prayer_to_the_Sacred_Winds.png","Assets/Weapons/Catalysts/Weapon_Skyward_Atlas.png","Assets/Weapons/Catalysts/Weapon_Memory_of_Dust.png","Assets/Assets.js","Assets/Weapons/Weapons.js","Assets/Element_Anemo.png","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Data/WeaponData.js","Components/StatIcon.js","Artifact/PercentBadge.js","Data/CharacterData.js","../node_modules/react-bootstrap/esm/Badge.js","Artifact/ArtifactCard.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/StatDisplay.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","Character/Character.js","Stat.js","Components/SlotIcon.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Util/ConditionalsUtil.js"],"names":["StarIcon","icon","faStar","Stars","props","className","colored","stars","Array","keys","map","_","i","Weapon","this","Error","getWeaponDataImport","WeaponDataImport","getLevelName","levelKey","defVal","LevelNameData","getLevelIndex","WeaponLevelKeys","indexOf","getWeaponName","weaponKey","WeaponData","name","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","refineIndex","charFinalStats","character","passiveDescription","getWeaponDescription","description","getWeaponConditional","conditional","getWeaponImg","img","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","getWeaponSubStatKey","subStatKey","getWeaponBonusStat","stats","getWeaponsOfType","weaponType","Object","fromEntries","entries","filter","getWeaponTypeName","WeaponTypeData","getWeaponMainStatValWithOverride","weaponObj","overrideMainVal","key","getWeaponSubStatValWithOverride","overrideSubVal","getWeaponConditionalStat","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","FloatFormControl","placeholder","onValueChange","disabled","useState","focus","setFocus","type","toString","onChange","e","target","parseFloat","onFocus","onBlur","IntFormControl","parseInt","ArtifactData","ArtifactDataImport","then","imp","default","ArtifactMainSlotKeys","ElementalData","forEach","push","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","hp","atk","hp_","atk_","def_","phy_dmg_bonus","ele_dmg_bonus","ele_mas","ener_rech","crit_rate","crit_dmg","heal_bonu","2","ArtifactSubStatsData","def","ArtifactSlotsData","flower","plume","sands","goblet","circlet","resolveContainerRef","ref","_ref","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","ConditionalSelector","setConditional","defEle","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","sword","DullBlade","SilverSword","CoolSteel","DarkIronSword","FilletBlade","HarbingerOfDawn","SkyriderSword","TravelersHandySword","BlackcliffLongsword","FavoniusSword","IronSting","LionsRoar","PrototypeRancour","RoyalLongsword","SacrificialSword","TheAlleyFlash","TheBlackSword","TheFlute","SwordOfDescension","FesteringDesire","AquilaFavonia","SkywardBlade","SummitShaper","claymore","WasterGreatsword","OldMercsPal","BloodtaintedGreatsword","DebateClub","FerrousShadow","Quartz","SkyriderGreatsword","WhiteIronGreatsword","BlackcliffSlasher","FavoniusGreatsword","LithicBlade","PrototypeAminus","Rainslasher","RoyalGreatsword","SerpentSpine","TheBell","Whiteblind","SacrificialGreatsword","SnowTombedStarsilver","SkywardPride","WolfsGravestone","TheUnforged","polearms","BeginnersProtector","IronPoint","BlackTassel","Halberd","WhiteTassel","BlackcliffPole","CrescentPike","Deathmatch","DragonsBane","LithicSpear","PrototypeGrudge","FavoniusLance","RoyalSpear","DragonspineSpear","VortexVanquisher","PrimordialJadeWingedSpear","SkywardSpine","bows","HuntersBow","SeasonedHuntersBow","EbonyBow","Messenger","RavenBow","RecurveBow","SharpshootersOath","Slingshot","TheStringless","AlleyHunter","BlackcliffWarbow","CompoundBow","FavoniusWarbow","PrototypeCrescent","RoyalBow","Rust","SacrificialBow","TheViridescentHunt","SkywardHarp","AmosBow","DreamsOfDragonfell","catalysts","ApprenticesNotes","PocketGrimoire","AmberCatalyst","EmeraldOrb","MagicGuide","OtherworldlyStory","ThrillingTalesOfDragonSlayers","TwinNephrite","BlackcliffAgate","FavoniusCodex","MappaMare","PrototypeMalice","RoyalGrimoire","SacrificialFragments","SolarPearl","TheWidsith","WineAndSong","EyeOfPerception","Frostbearer","LostPrayerToTheSacredWinds","SkywardAtlas","MemoryOfDust","Assets","weapons","swords","claymores","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","polearm","resin","fragile","condensed","exp_books","advice","wit","experience","StatIcon","hp_base","faTint","hp_final","atk_base","faFistRaised","atk_final","def_base","faShieldAlt","def_final","faMagic","faDice","faDiceD20","faSync","faFirstAid","StatIconEle","statKey","PercentBadge","percent","valid","children","badgeColor","isNaN","Math","floor","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","stam","CharacterSpecializedStatKey","Badge","React","forwardRef","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","ArtifactCard","artifactId","forceUpdate","onEdit","onDelete","assumeFull","equipOnChar","charId","Artifact","equipArtifactOnChar","art","ArtifactDatabase","getArtifact","artifactValidation","locationChar","CharacterDatabase","getCharacter","location","mainStatLevel","numStars","assFullColor","mainStatVal","getMainStatValue","mainStatKey","Stat","getStatUnit","border","bg","Header","xs","md","src","getArtifactPieceIcon","setKey","slotKey","thumbnail","getArtifactPieceName","getArtifactSlotNameWithIcon","Body","Title","getArtifactSetName","getStatName","substats","stat","subStatValidation","subStatValidations","numRolls","rolls","length","efficiency","effOpacity","statName","toFixed","style","opacity","tooltip","msg","currentEfficiency","maximumEfficiency","Footer","getCharacterDatabase","id","char","placement","overlay","pointerEvents","lock","updateArtifact","faLock","faLockOpen","Boolean","faEdit","faTrashAlt","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","TabContext","Provider","SelectableContext","TabContent","decoratedBsPrefix","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","Tab","_React$Component","apply","arguments","_inheritsLoose","prototype","render","Container","Content","Pane","createContext","useAccordionToggle","contextEventKey","AccordionContext","AccordionToggle","accordionOnClick","AccordionCollapse","Collapse","Children","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","_objectWithoutProperties","source","excluded","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","DisplayStats","statVal","build","editable","otherProps","buildVal","finalStats","buildDiff","originalVal","Character","getStatValueWithOverride","diff","diffText","fixedUnit","hasOverride","Col","DisplayNewBuildDiff","equippedBuild","newBuild","unit","CharacterArtifactPane","characterKey","compareAgainstEquipped","artifactConditionals","setState","showOther","setShowOther","artifactsAssumeFull","statKeys","getDisplayStatKeys","displayStatProps","displayNewBuildProps","formulaDependencyKeys","Set","GetDependencyStats","formulaOverrides","flat","formulaKeys","FormulaText","includes","Row","Card","Button","xl","printStat","printFormula","equipArtifacts","artifactIds","Alert","sm","lg","getArtifactSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getArtifactSetEffectConditional","getConditionalNum","srcKey","srcKey2","conditionalStats","getArtifactConditionalStats","val","conditionalElement","cnum","state","setStateArtifactConditional","getArtifactSetEffectText","values","artid","StatInput","prependEle","defaultValue","restProps","InputGroup","Prepend","Text","Append","undefined","OverlayTrigger","Tooltip","faUndo","CharacterOverviewPane","constellation","setOverride","setConstellation","editLevel","setEditLevel","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","getName","Image","getStar","clamp","getLevel","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","conditionalEle","faQuoteLeft","DropdownButton","title","reverse","star","arr","Dropdown","ItemText","Divider","faGavel","editingOther","SetEditingOther","additionalKeys","displayStatKeys","editStatKeys","otherStatKeys","getElementalKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","getStatNameRaw","CharacterTalentPane","dmgMode","ascension","getAscension","skillDisplayProps","ContextAwareToggle","callback","currentEventKey","decoratedOnClick","expanded","faWindowMinimize","faWindowMaximize","ToggleButtonGroup","ToggleButton","href","rel","eleKey","immunityStatKey","elementImmunity","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","autoInfused","statsDisplayKeys","ReactionDisplay","tKey","tText","SkillDisplayCard","talentKey","subtitle","asc","enabled","onClickTitle","ReactionComponents","superconduct_dmg","electrocharged_dmg","overloaded_dmg","swirl_dmg","shatter_dmg","information","faQuestionCircle","crystalize_dmg","reactionMode","charEleKey","eleInterArr","ElementToReactionKeys","Ele","talentLimits","header","getTalentLevelKey","talentLvlKey","levelBoost","infuseBtn","getElementalName","tLvl","talentLevelKeys","statsEle","talentStats","getTalentStats","ListGroup","index","getTalentImg","getTalentName","Subtitle","getTalentDocument","section","talentText","fields","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","FieldDisplay","field","fieldText","fieldVariant","fieldBasic","basicVal","fieldVal","finalVal","round","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","child","CharacterDisplayCard","forceUpdateComponent","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","DatabaseInitAndVerify","characterId","getInitialState","Promise","all","getCharacterDataImport","getArtifactDataImport","deepClone","updateCharacter","addCharacter","footer","onClose","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","faTimes","defaultActiveKey","Nav","Link","getCDataObj","talent","skill","initialState","equippedArtifacts","auto","burst","ListGroupItem","action","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","horizontal","horizontalVariant","initialBsPrefix","AbstractNav","moveToNewLocation","removeCharacterById","getSpecializedStatKey","getSpeicalizedStatVal","characterObj","baseStat","getIndexFromlevelkey","elementalKey","constellationName","titles","getSpecializedStat","specializeStat","thumbImg","cardImg","constIndex","getTalentLevelBoost","talents","talentBoost","boostEntry","find","withBoost","getTalentFields","getTalentStatsAll","statsArr","getTalentConditional","doc","cond","tempCond","skillKey","elemental","infusable","getTalentStatKeyVariant","atkKeys","startsWith","replace","artIdsOnCharacter","artIdsNotOnCharacter","getArtifactSlotKeys","artNotOnChar","artOnChar","notCharLoc","equipArtifact","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","condStats","AttachLazyFormulas","char_ele_key","overrides","hasOwnProperty","specialStatKey","addStatsObj","weaponStats","subKey","subVal","bonusStats","htmlStatsData","StatData","pretty","getStatVariant","f","expand","formulaOverride","OverrideFormulas","printOverrideFormula","options","overrideKey","OverrideFormulasText","formulaText","obj","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_multi","electrocharged","superconduct_multi","superconduct","swirl_multi","swirl","shatter_multi","shattered","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","trans_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","abs","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","defineProperty","configurable","enumerable","writable","noelle_burst_atk","SlotIcon","faBahai","faFeatherAlt","faHourglass","faWineGlass","faCrown","ArtifactBase","rollData","float","roll","maxNumRoll","rollOption","sum","reduce","accu","closeEnoughFloat","closeEnoughInt","slice","isFloat","getSubstatRollData","getRolls","totalAllowableRolls","min","max","clampPercent","join","validateSubStat","some","currentNumOfRolls","cur","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","totalPossbleUpgrade","currentLocation","intendedLocation","artifactToSwapWithid","getArtifactIDFromSlot","artifactToSwapWith","swapLocations","unequipArtifactOnSlot","getArtifactSetsByMaxStarEntries","setobj","pieces","icons","getArtifactSetEffectsObj","sets","getArtifactSlotName","getArtifactSlotIcon","slotIcon","getRarityArr","getMainStatKeys","getSubStatKeys","ceil","numberOfSubstatUnlocked","getArtifactSets","artifactSetEffect","artArr","setNumKeys","setEffectText","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","hasSetEffect","setEffectObj","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName"],"mappings":"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,IAA0B,2CpB4CvCC,cqB5Ca,IAA0B,kDrB6CvCC,asB7Ca,IAA0B,iDtB8CvCC,auB9Ca,IAA0B,2CC8C1BC,EAxBE,CACfC,iBCvBa,IAA0B,qDDwBvCC,YExBa,IAA0B,kDFyBvCC,uBGzBa,IAA0B,2DH0BvCC,WI1Ba,IAA0B,+CJ2BvCC,cK3Ba,IAA0B,kDL4BvCC,OM5Ba,IAA0B,0CN6BvCC,mBO7Ba,IAA0B,uDP8BvCC,oBQ9Ba,IAA0B,yDR+BvCC,kBS/Ba,IAA0B,sDTgCvCC,mBUhCa,IAA0B,uDViCvCC,YWjCa,IAA0B,gDXkCvCC,gBYlCa,IAA0B,oDZmCvCC,YanCa,IAA0B,+CboCvCC,gBcpCa,IAA0B,oDdqCvCC,aerCa,IAA0B,iDfsCvCC,QgBtCa,IAA0B,4ChBuCvCC,WiBvCa,IAA0B,8CjBwCvCC,sBkBxCa,IAA0B,0DlByCvCC,qBmBzCa,IAA0B,mDnB0CvCC,aoB1Ca,IAA0B,iDpB2CvCC,gBqB3Ca,IAA0B,qDrB4CvCC,YsB5Ca,IAA0B,iDCoC1BC,EAnBE,CACfC,mBClBa,IAA0B,wDDmBvCC,UEnBa,IAA0B,8CFoBvCC,YGpBa,IAA0B,gDHqBvCC,QIrBa,IAA0B,2CJsBvCC,YKtBa,IAA0B,gDLuBvCC,eMvBa,IAA0B,mDNwBvCC,aOxBa,IAA0B,iDPyBvCC,WQzBa,IAA0B,8CR0BvCC,YS1Ba,IAA0B,iDT2BvCC,YU3Ba,IAA0B,gDV4BvCC,gBW5Ba,IAA0B,oDX6BvCC,cY7Ba,IAA0B,kDZ8BvCC,Wa9Ba,IAA0B,+Cb+BvCC,iBc/Ba,IAA0B,8CdgCvCC,iBehCa,IAA0B,qDfiCvCC,0BgBjCa,IAA0B,gEhBkCvCC,aiBlCa,IAA0B,kDC4C1BC,EAvBF,CACXC,WCtBa,IAA0B,gDDuBvCC,mBEvBa,IAA0B,yDFwBvCC,SGxBa,IAA0B,6CHyBvCC,UIzBa,IAA0B,6CJ0BvCC,SK1Ba,IAA0B,6CL2BvCC,WM3Ba,IAA0B,+CN4BvCC,kBO5Ba,IAA0B,uDP6BvCC,UQ7Ba,IAA0B,6CR8BvCC,cS9Ba,IAA0B,kDT+BvCC,YU/Ba,IAA0B,gDVgCvCC,iBWhCa,IAA0B,qDXiCvCC,YYjCa,IAA0B,gDZkCvCC,ealCa,IAA0B,mDbmCvCC,kBcnCa,IAA0B,sDdoCvCC,SepCa,IAA0B,6CfqCvCC,KgBrCa,IAA0B,wChBsCvCC,eiBtCa,IAA0B,mDjBuCvCC,mBkBvCa,IAA0B,wDlBwCvCC,YmBxCa,IAA0B,gDnByCvCC,QoBzCa,IAA0B,6CpB0CvCC,mBqB1Ca,IAA0B,kDC8C1BC,EAxBG,CAChBC,iBCvBa,IAA0B,sDDwBvCC,eExBa,IAA0B,mDFyBvCC,cGzBa,IAA0B,kDH0BvCC,WI1Ba,IAA0B,+CJ2BvCC,WK3Ba,IAA0B,+CL4BvCC,kBM5Ba,IAA0B,sDN6BvCC,8BO7Ba,IAA0B,qEP8BvCC,aQ9Ba,IAA0B,iDR+BvCC,gBS/Ba,IAA0B,qDTgCvCC,cUhCa,IAA0B,kDViCvCC,UWjCa,IAA0B,8CXkCvCC,gBYlCa,IAA0B,oDZmCvCC,canCa,IAA0B,kDboCvCC,qBcpCa,IAA0B,yDdqCvCC,WerCa,IAA0B,+CfsCvCC,WgBtCa,IAA0B,+ChBuCvCC,YiBvCa,IAA0B,iDjBwCvCC,gBkBxCa,IAA0B,qDlByCvCC,YmBzCa,IAA0B,+CnB0CvCC,2BoB1Ca,IAA0B,mEpB2CvCC,aqB3Ca,IAA0B,iDrB4CvCC,asB5Ca,IAA0B,mDCwBrCC,EAAS,CACXC,QCpBW,+DACRC,GACAC,GACAlE,GACAkB,GACAsB,GDgBH2B,SAAU,CAAEC,ME1BC,IAA0B,0CF0BpBC,KG1BN,IAA0B,yCH0BdC,OI1BZ,IAA0B,2CJ0BNC,QK1BpB,IAA0B,4CL0BGC,IM1B7B,IAA0B,wCN0BQC,MO1BlC,IAA0B,0CP0BeC,KQ1BzC,IAA0B,0CR2BvCC,YAAa,CAAEC,IS3BF,IAA0B,kDT2BnBC,SU3BP,IAA0B,uDV2BTpG,SW3BjB,IAA0B,uDX2BCqG,QY3B3B,IAA0B,sDZ2BU7H,Ma3BpC,IAA0B,qDb4BvC8H,MAAO,CACLC,Qc7BW,IAA0B,+Cd8BrCC,Ue9BW,IAA0B,kDfgCvCC,UAAW,CACTC,OgBjCW,IAA0B,mDhBkCrCC,IiBlCW,IAA0B,4CjBmCrCC,WkBnCW,IAA0B,2DlBsC1BtB,O,iCmBtCf,8KAAInQ,EAAa,GACbV,EAAmB,qDACvBA,EAAiBmF,MAAK,SAAAC,GACpB1E,EAAa0E,EAAIC,QACjBrF,EAAmB,QAGrB,IAAMM,EAAkB,CAAC,KAAM,KAAM,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,OAC/LF,EAAgB,CAAE,GAAM,SAAU,GAAM,SAAU,IAAO,UAAW,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,UAAW,KAAQ,WAAY,IAAO,UAAW,IAAO,WACjduC,EAAiB,CACrBoH,MAAO,QACPwB,SAAU,WACVoG,SAAU,WACVD,IAAK,MACLE,QAAS,Y,8FCXLQ,EAAW,CACfC,QAASC,IACTC,SAAUD,IACVjM,IAAKiM,IACLnM,GAAImM,IAEJE,SAAUC,IACVC,UAAWD,IACXnM,KAAMmM,IACNrM,IAAKqM,IAELE,SAAUC,IACVC,UAAWD,IACXrM,KAAMqM,IACN3L,IAAK2L,IAELlM,QAASoM,IACTlM,UAAWmM,IACXlM,SAAUmM,IACVrM,UAAWsM,IACXnM,UAAWoM,KAGPC,EAAc,SAACC,GAAD,OAClBhB,EAASgB,GAAW,cAAC,IAAD,CAAiBpU,KAAMoT,EAASgB,GAAUhU,UAAU,UAAa,O,uFCzBxE,SAASiU,EAAalU,GAAQ,IACrCmU,EAA6BnU,EAA7BmU,QAASC,EAAoBpU,EAApBoU,MAAOC,EAAarU,EAAbqU,SAClBC,EAAcF,EAAoBG,MAAMJ,GAAW,YAAjB,UAAkCK,KAAKC,MAAgB,IAAVN,GAAkB,EAA/D,QAAZ,SAC1B,OAAO,cAAC,IAAD,CAAOrK,QAASwK,EAAYrU,UAA0B,cAAfqU,EAA6B,GAAK,mBAAzE,SAA8FD,M,iCCLvG,8KAAIK,EAAgB,GAChBC,EAAsB,qDAC1BA,EAAoB3O,MAAK,SAAAC,GACvByO,EAAgBzO,EAAIC,QACpByO,EAAsB,QAGxB,IAAMC,EAAa,CACjB,GAAM,CACJpT,KAAM,QACNqT,MAAO,EACPC,MAAO,GAET,IAAO,CACLtT,KAAM,SACNqT,MAAO,GACPC,MAAO,GAET,KAAQ,CACNtT,KAAM,cACNqT,MAAO,GACPC,MAAO,GAGT,IAAO,CACLtT,KAAM,SACNqT,MAAO,GACPC,MAAO,GAET,KAAQ,CACNtT,KAAM,cACNqT,MAAO,GACPC,MAAO,GAGT,IAAO,CACLtT,KAAM,SACNqT,MAAO,GACPC,MAAO,GAET,KAAQ,CACNtT,KAAM,cACNqT,MAAO,GACPC,MAAO,GAET,IAAO,CACLtT,KAAM,SACNqT,MAAO,GACPC,MAAO,GAET,KAAQ,CACNtT,KAAM,cACNqT,MAAO,GACPC,MAAO,GAET,IAAO,CACLtT,KAAM,SACNqT,MAAO,GACPC,MAAO,GAET,KAAQ,CACNtT,KAAM,cACNqT,MAAO,GACPC,MAAO,GAGT,IAAO,CACLtT,KAAM,SACNqT,MAAO,GACPC,MAAO,GAET,KAAQ,CACNtT,KAAM,cACNqT,MAAO,GACPC,MAAO,GAET,IAAO,CACLtT,KAAM,SACNqT,MAAO,GACPC,MAAO,IAILC,EAAoB,CACxBtN,UAAW,EACXC,SAAU,GACVF,UAAW,IACXwN,KAAM,KAEFC,EAA8B,CAAC,MAAO,OAAQ,OAAQ,UAAW,YAAa,YAAa,YAAa,WAAY,gBAAiB,sBAAuB,oBAAqB,wBAAyB,sBAAuB,qBAAsB,uB,iCCzF7P,yDAQIC,EAAqBC,IAAMC,YAAW,SAAU7M,EAAMD,GACxD,IAAI+M,EAAW9M,EAAK8M,SAChBvL,EAAUvB,EAAKuB,QACfwL,EAAO/M,EAAK+M,KACZrV,EAAYsI,EAAKtI,UACjBsV,EAAUhN,EAAKiN,GACfC,OAAwB,IAAZF,EAAqB,OAASA,EAC1CvV,EAAQ0V,YAA8BnN,EAAM,CAAC,WAAY,UAAW,OAAQ,YAAa,OAEzFoN,EAASC,YAAmBP,EAAU,SAC1C,OAAoBF,IAAMU,cAAcJ,EAAWK,YAAS,CAC1DxN,IAAKA,GACJtI,EAAO,CACRC,UAAW8V,IAAW9V,EAAW0V,EAAQL,GAAQK,EAAS,QAAS7L,GAAW6L,EAAS,IAAM7L,SAGjGoL,EAAMc,YAAc,QACpBd,EAAMe,aApBa,CACjBX,MAAM,GAoBOJ,O,qPCZA,SAASgB,EAAT,GAA0F,IAAlEC,EAAiE,EAAjEA,WAAYC,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,SAAgC,IAAtBC,kBAAsB,SACtG,IAAKJ,EAAY,OAAO,KACxB,IAAMK,EAAc,SAACC,GACnBC,IAASC,oBAAoBR,EAAYM,GAC9B,OAAXL,QAAW,IAAXA,QAGEQ,EAAMC,IAAiBC,YAAYX,GACnCY,EAAqBL,IAASK,mBAAmBH,GACjDI,EAAeC,IAAkBC,aAAaN,EAAIO,UAClDA,EAAWH,EAAeA,EAAaxV,KAAO,YAC9C4V,EAAgBb,EAA4B,EAAfK,EAAIS,SAAeT,EAAI/B,MACpDyC,EAAef,GAAcK,EAAI/B,QAAyB,EAAf+B,EAAIS,SAC/CE,EAAc,uBAAMtX,UAAWqX,EAAe,cAAgB,GAAhD,UAAqDZ,IAASc,iBAAiBZ,EAAIa,YAAab,EAAIS,SAAUD,EAAe,IAAKM,IAAKC,YAAYf,EAAIa,gBACzK,OAAQ,eAAC,IAAD,CAAMxX,UAAU,QAAQ2X,OAAM,UAAKhB,EAAIS,SAAT,QAAyBQ,GAAG,eAAelO,KAAK,YAA9E,UACN,cAAC,IAAKmO,OAAN,CAAa7X,UAAU,MAAvB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAK8X,GAAI,EAAGC,GAAI,EAAhB,SACE,cAAC,IAAD,CAAOC,IAAKvB,IAASwB,qBAAqBtB,EAAIuB,OAAQvB,EAAIwB,SAAUnY,UAAS,4BAAuB2W,EAAIS,SAA3B,YAA+CgB,WAAS,MAEvI,eAAC,IAAD,CAAKpY,UAAU,OAAf,UACE,6BAAI,sCAAOyW,IAAS4B,qBAAqB1B,EAAIuB,OAAQvB,EAAIwB,QAAS,2BAClE,gCAAM1B,IAAS6B,4BAA4B3B,EAAIwB,SAA/C,YAA8DxB,EAAI/B,kBAIxE,eAAC,IAAK2D,KAAN,CAAWvY,UAAU,0BAArB,UACE,eAAC,IAAKwY,MAAN,WACE,8BAAM/B,IAASgC,mBAAmB9B,EAAIuB,OAAQ,kBAC9C,uBAAOlY,UAAU,gBAAjB,SAAiC,cAAC,IAAD,CAAOE,MAAOyW,EAAIS,gBAErD,oBAAIpX,UAAU,OAAd,SACE,8BAAIyX,IAAKiB,YAAY/B,EAAIa,aAAzB,IAAwCF,OAE1C,cAAC,IAAD,CAAKtX,UAAU,OAAf,SACG2W,EAAIgC,SAAWhC,EAAIgC,SAAStY,KAAI,SAACuY,EAAMrY,GAAO,IAAD,EAC5C,IAAKqY,IAASA,EAAKtU,MAAO,OAAO,KACjC,IAAIuU,EAAoB/B,EAAmBgC,mBAAmBvY,GAC1DwY,GAA4B,OAAjBF,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBG,aAAnB,eAA0BC,SAAU,EAC/CC,GAA8B,OAAjBL,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBK,aAAc,EAC9CC,EAAa,GAAmB,GAAbD,EACnBE,EAAW3B,IAAKiB,YAAYE,EAAKjV,KACrC,OAAQ,eAAC,IAAD,CAAamU,GAAI,GAAjB,UACN,cAAC,IAAD,CAAOjO,QAASiN,EAAmB3C,MAAnB,UAA8B4E,EAA9B,QAA+C,SAAU/Y,UAAU,mBAAnF,SAAsG,4BAAI8W,EAAmB3C,MAAQ4E,EAAW,QAAiB,IACjK,uBAAM/Y,UAAS,eAAU+Y,EAAV,QAAf,UAA0CK,EAA1C,WAAwD3B,IAAKC,YAAYkB,EAAKjV,KAAOiV,EAAKtU,MAAM+U,QAAQ,GAAKT,EAAKtU,OAAlH,OAA0HmT,IAAKC,YAAYkB,EAAKjV,SAChJ,uBAAM3D,UAAU,cAAcsZ,MAAO,CAAEC,QAASJ,GAAhD,UAA+DD,EAAWG,QAAQ,GAAlF,SAHgB9Y,MAMhB,OAEN,sBAAKP,UAAU,UAAf,UACE,sBAAMA,UAAU,YAAhB,2BACA,cAAC,IAAD,CAAcwZ,QAAS1C,EAAmB2C,IAAKtF,MAAO2C,EAAmB3C,MAAOD,QAAS4C,EAAmB4C,kBAA5G,UACI5C,EAAmB4C,kBAAoB5C,EAAmB4C,kBAAoB,GAAGL,QAAQ,GAAK,MAElG,4BAAI,QACJ,cAAC,IAAD,CAAcG,QAAS1C,EAAmB2C,IAAKtF,MAAO2C,EAAmB3C,MAAOD,QAAS4C,EAAmB6C,kBAA5G,UACI7C,EAAmB6C,kBAAoB7C,EAAmB6C,kBAAoB,GAAGN,QAAQ,GAAK,YAKtG,cAAC,IAAKO,OAAN,CAAa5Z,UAAU,OAAvB,SACE,eAAC,IAAD,CAAKA,UAAU,4CAAf,UACGmW,EAAc,cAAC,IAAD,CAAK2B,GAAG,OAAR,SACb,eAAC,IAAD,WACE,cAAC,IAAS/N,OAAV,CAAiBC,KAAK,KAAtB,SAA4BkN,IAC5B,eAAC,IAASjN,KAAV,WACE,cAAC,IAASC,KAAV,CAAeC,QAAS,kBAAMoM,KAA9B,uBACCrT,OAAOE,QAAQ4T,IAAkB6C,wBAAwBxZ,KAAI,mCAAEyZ,EAAF,KAAMC,EAAN,YAC5D,cAAC,IAAS7P,KAAV,CAAwBC,QAAS,kBAAMoM,EAAYuD,IAAnD,SACGC,EAAKxY,MADYuY,cAKnB,cAAC,IAAD,CAAKhC,GAAG,OAAR,SAAe,8CAAiBZ,OACzC,cAAC,IAAD,CAAKY,GAAG,OAAR,SACE,eAAC,IAAD,WACG3B,EAAc,cAAC,IAAD,CAAgB6D,UAAU,MACvCC,QAAS,cAAC,IAAD,6IADI,SAEb,sBAAMja,UAAU,iBAAhB,SACE,cAAC,IAAD,CAAQgK,KAAK,KACXjF,SAAU4R,EAAIO,SACdoC,MAAO3C,EAAIO,SAAW,CAAEgD,cAAe,QAAW,GAClD/P,QAAS,WACPwM,EAAIwD,MAAQxD,EAAIwD,KAChBvD,IAAiBwD,eAAezD,GACrB,OAAXR,QAAW,IAAXA,QANJ,SAQE,cAAC,IAAD,CAAiBvW,KAAO+W,EAAIwD,MAAQxD,EAAIO,SAAYmD,IAASC,IAAYta,UAAU,gBAGrE,KACnBua,QAAQnE,IAAW,cAAC,IAAD,CAAQvM,QAAQ,OAAOG,KAAK,KAC9CG,QAAS,kBAAMiM,KADG,SAElB,cAAC,IAAD,CAAiBxW,KAAM4a,IAAQxa,UAAU,YAE1Cua,QAAQlE,IAAa,cAAC,IAAD,CAAQxM,QAAQ,SAASG,KAAK,KAClDG,QAAS,kBAAMkM,KADK,SAEpB,cAAC,IAAD,CAAiBzW,KAAM6a,IAAYza,UAAU,2B,2PCpE5C0a,EAxCI,SAAsB3a,GACvC,IAAI4a,EAAmBC,YAAgB7a,EAAO,CAC5C8a,UAAW,aAETf,EAAKa,EAAiBb,GACtBgB,EAAwBH,EAAiBI,gBACzCC,EAAWL,EAAiBK,SAC5BH,EAAYF,EAAiBE,UAC7BI,EAAaN,EAAiBM,WAC9BC,EAAeP,EAAiBO,aAChCC,EAAgBR,EAAiBQ,cACjC/G,EAAWuG,EAAiBvG,SAE5B2G,EAAkBK,mBAAQ,WAC5B,OAAON,GAAyB,SAAUnX,EAAKwB,GAC7C,OAAO2U,EAAKA,EAAK,IAAM3U,EAAO,IAAMxB,EAAM,QAE3C,CAACmW,EAAIgB,IACJO,EAAaD,mBAAQ,WACvB,MAAO,CACLJ,SAAUA,EACVH,UAAWA,EACXI,WAAYA,EACZC,aAAcA,IAAgB,EAC9BC,cAAeA,IAAiB,EAChCG,gBAAiB,SAAyB3X,GACxC,OAAOoX,EAAgBpX,EAAK,YAE9B4X,gBAAiB,SAAyB5X,GACxC,OAAOoX,EAAgBpX,EAAK,WAG/B,CAACqX,EAAUH,EAAWI,EAAYC,EAAcC,EAAeJ,IAClE,OAAoB7F,IAAMU,cAAc4F,IAAWC,SAAU,CAC3DnX,MAAO+W,GACOnG,IAAMU,cAAc8F,IAAkBD,SAAU,CAC9DnX,MAAO0W,GAAY,MAClB5G,K,qCCvBUuH,EAdezG,IAAMC,YAAW,SAAU7M,EAAMD,GAC7D,IAAI+M,EAAW9M,EAAK8M,SAChBE,EAAUhN,EAAKiN,GACfC,OAAwB,IAAZF,EAAqB,MAAQA,EACzCtV,EAAYsI,EAAKtI,UACjBD,EAAQ0V,YAA8BnN,EAAM,CAAC,WAAY,KAAM,cAE/DsT,EAAoBjG,YAAmBP,EAAU,eACrD,OAAoBF,IAAMU,cAAcJ,EAAWK,YAAS,CAC1DxN,IAAKA,GACJtI,EAAO,CACRC,UAAW8V,IAAW9V,EAAW4b,S,SCcrC,IAAIC,EAAuB3G,IAAMC,YAAW,SAAUpV,EAAOsI,GAC3D,IAAIyT,EAtBN,SAAuB/b,GACrB,IAAIgc,EAAUC,qBAAWR,KACzB,IAAKO,EAAS,OAAOhc,EAErB,IAAI8a,EAAYkB,EAAQlB,UACpBS,EAAkBS,EAAQT,gBAC1BC,EAAkBQ,EAAQR,gBAC1BU,EAAOxG,YAA8BsG,EAAS,CAAC,YAAa,kBAAmB,oBAE/EG,GAAwC,IAArBnc,EAAMkb,aAA4C,IAApBgB,EAAKhB,WACtDtX,EAAMwY,YAAapc,EAAMqc,UAC7B,OAAOvG,YAAS,GAAI9V,EAAO,CACzBsc,OAAwB,MAAhBtc,EAAMsc,QAAyB,MAAP1Y,EAAcwY,YAAatB,KAAelX,EAAM5D,EAAMsc,OACtFvC,GAAIwB,EAAgBvb,EAAMqc,UAC1B,kBAAmBb,EAAgBxb,EAAMqc,UACzCnB,WAAYiB,IAAqBnc,EAAMkb,YAAcgB,EAAKhB,YAAcqB,KACxEpB,aAAoC,MAAtBnb,EAAMmb,aAAuBnb,EAAMmb,aAAee,EAAKf,aACrEC,cAAsC,MAAvBpb,EAAMob,cAAwBpb,EAAMob,cAAgBc,EAAKd,gBAKrDoB,CAAcxc,GAC/BqV,EAAW0G,EAAe1G,SAC1BpV,EAAY8b,EAAe9b,UAC3Bqc,EAASP,EAAeO,OACxBG,EAAUV,EAAeU,QACzBC,EAAaX,EAAeW,WAC5BC,EAAYZ,EAAeY,UAC3BC,EAASb,EAAea,OACxBC,EAAYd,EAAec,UAC3BC,EAAWf,EAAee,SAC1B3B,EAAeY,EAAeZ,aAC9BC,EAAgBW,EAAeX,cAC/B2B,EAAahB,EAAeb,WAC5B8B,EAAoBjB,EAAevG,GACnCC,OAAkC,IAAtBuH,EAA+B,MAAQA,EAEnDd,GADIH,EAAeM,SACZ3G,YAA8BqG,EAAgB,CAAC,WAAY,YAAa,SAAU,UAAW,aAAc,YAAa,SAAU,YAAa,WAAY,eAAgB,gBAAiB,aAAc,KAAM,cAEvNpG,EAASC,YAAmBP,EAAU,YAC1C,IAAKiH,IAAWS,GAAc3B,EAAe,OAAO,KACpD,IAAI6B,EAAoB9H,IAAMU,cAAcJ,EAAWK,YAAS,GAAIoG,EAAM,CACxE5T,IAAKA,EACL4U,KAAM,WACN,eAAgBZ,EAChBrc,UAAW8V,IAAW9V,EAAW0V,EAAQ,CACvC2G,OAAQA,OAgBZ,OAbIS,IAAYE,EAAoB9H,IAAMU,cAAckH,EAAY,CAClEI,GAAIb,EACJG,QAASA,EACTC,WAAYA,EACZC,UAAWA,EACXC,OAAQA,EACRC,UAAWA,EACXC,SAAUA,EACV3B,aAAcA,EACdC,cAAeA,GACd6B,IAGiB9H,IAAMU,cAAc4F,IAAWC,SAAU,CAC3DnX,MAAO,MACO4Q,IAAMU,cAAc8F,IAAkBD,SAAU,CAC9DnX,MAAO,MACN0Y,OAELnB,EAAQ9F,YAAc,UACP8F,QCxEXsB,EAAmB,SAAUC,GAG/B,SAASD,IACP,OAAOC,EAAiBC,MAAM5c,KAAM6c,YAAc7c,KAUpD,OAbA8c,YAAeJ,EAAKC,GAMPD,EAAIK,UAEVC,OAAS,WACd,MAAM,IAAI/c,MAAM,gOAIXyc,EAdc,CAerBjI,IAAMM,WAER2H,EAAIO,UAAYhD,EAChByC,EAAIQ,QAAUhC,EACdwB,EAAIS,KAAO/B,EACIsB,Q,qIC1BXpB,EAAuB7G,IAAM2I,cAAc,MAC/C9B,EAAQhG,YAAc,mBACPgG,QCER,SAAS+B,EAAmB1B,EAAUjS,GAC3C,IAAI4T,EAAkB/B,qBAAWgC,GAC7BhD,EAAWgB,qBAAWN,KAC1B,OAAO,SAAUpW,GAMX0V,GAAUA,EADOoB,IAAa2B,EAAkB,KAAO3B,EACpB9W,GACnC6E,GAASA,EAAQ7E,IAGzB,IAmBe2Y,GAnBoB/I,IAAMC,YAAW,SAAU7M,EAAMD,GAClE,IAAIiN,EAAUhN,EAAKiN,GACfC,OAAwB,IAAZF,EAAqB,SAAWA,EAC5ClB,EAAW9L,EAAK8L,SAChBgI,EAAW9T,EAAK8T,SAChBjS,EAAU7B,EAAK6B,QACfpK,EAAQ0V,YAA8BnN,EAAM,CAAC,KAAM,WAAY,WAAY,YAE3E4V,EAAmBJ,EAAmB1B,EAAUjS,GAMpD,MAJkB,WAAdqL,IACFzV,EAAMoF,KAAO,UAGK+P,IAAMU,cAAcJ,EAAWK,YAAS,CAC1DxN,IAAKA,EACL8B,QAAS+T,GACRne,GAAQqU,M,SC7BT+J,GAAiCjJ,IAAMC,YAAW,SAAU7M,EAAMD,GACpE,IAAI+L,EAAW9L,EAAK8L,SAChBgI,EAAW9T,EAAK8T,SAChBrc,EAAQ0V,YAA8BnN,EAAM,CAAC,WAAY,aAEzDyV,EAAkB/B,qBAAWgC,GAGjC,OAAoB9I,IAAMU,cAAc8F,IAAkBD,SAAU,CAClEnX,MAAO,MACO4Q,IAAMU,cAAcwI,KAAUvI,YAAS,CACrDxN,IAAKA,EACL6U,GAAIa,IAAoB3B,GACvBrc,GAAqBmV,IAAMU,cAAc,MAAO,KAAMV,IAAMmJ,SAASC,KAAKlK,SAE/E+J,GAAkBpI,YAAc,oBACjBoI,UCZXI,GAAyBrJ,IAAMC,YAAW,SAAUpV,EAAOsI,GAC7D,IAAIsS,EAAmBC,YAAgB7a,EAAO,CAC5C8a,UAAW,aAET2D,EAAsB7D,EAAiBpF,GACvCC,OAAoC,IAAxBgJ,EAAiC,MAAQA,EACrD3D,EAAYF,EAAiBE,UAC7BzF,EAAWuF,EAAiBvF,SAC5BhB,EAAWuG,EAAiBvG,SAC5BpU,EAAY2a,EAAiB3a,UAC7Bgb,EAAWL,EAAiBK,SAC5ByD,EAAkBhJ,YAA8BkF,EAAkB,CAAC,KAAM,YAAa,WAAY,WAAY,YAAa,aAE3H+D,EAAiB5I,IAAW9V,EAAW2V,YAAmBP,EAAU,cACxE,OAAoBF,IAAMU,cAAcoI,EAAiBvC,SAAU,CACjEnX,MAAOuW,GAAa,MACN3F,IAAMU,cAAc8F,IAAkBD,SAAU,CAC9DnX,MAAO0W,GAAY,MACL9F,IAAMU,cAAcJ,EAAWK,YAAS,CACtDxN,IAAKA,GACJoW,EAAiB,CAClBze,UAAW0e,IACTtK,QAENmK,GAAUxI,YAAc,YACxBwI,GAAUxU,OAASkU,GACnBM,GAAUH,SAAWD,GACNI,U,8BCpCA,SAASI,GAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIjb,EAAKpD,EADLgF,ECHS,SAAuCqZ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIjb,EAAKpD,EAFLgF,EAAS,GACTuZ,EAAa5b,OAAO9C,KAAKwe,GAG7B,IAAKre,EAAI,EAAGA,EAAIue,EAAW7F,OAAQ1Y,IACjCoD,EAAMmb,EAAWve,GACbse,EAAS1d,QAAQwC,IAAQ,IAC7B4B,EAAO5B,GAAOib,EAAOjb,IAGvB,OAAO4B,EDTM,CAA6BqZ,EAAQC,GAGlD,GAAI3b,OAAO6b,sBAAuB,CAChC,IAAIC,EAAmB9b,OAAO6b,sBAAsBH,GAEpD,IAAKre,EAAI,EAAGA,EAAIye,EAAiB/F,OAAQ1Y,IACvCoD,EAAMqb,EAAiBze,GACnBse,EAAS1d,QAAQwC,IAAQ,GACxBT,OAAOsa,UAAUyB,qBAAqBC,KAAKN,EAAQjb,KACxD4B,EAAO5B,GAAOib,EAAOjb,IAIzB,OAAO4B,E,uBEbT,SAAS4Z,GAAT,GAA+E,IAAD,EAExEC,EAFkBpL,EAAsD,EAAtDA,QAASjS,EAA6C,EAA7CA,UAAWsd,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAaC,EAAc,iDACxEC,GAAgB,OAALH,QAAK,IAALA,GAAA,UAAAA,EAAOI,kBAAP,eAAoBzL,KAAY,EAClC0L,EAAY,KACzB,GAAwB,kBAAbF,EACTJ,EAAU,+BAAOI,QACZ,CAAC,IAAD,MACDG,EAAcC,IAAUC,yBAAyB9d,EAAWiS,GAChD,aAAZA,EACF2L,EAAcC,IAAUC,yBAAyB9d,EAAW,WACzC,cAAZiS,EACP2L,EAAcC,IAAUC,yBAAyB9d,EAAW,YACzC,cAAZiS,IACP2L,EAAcC,IAAUC,yBAAyB9d,EAAW,YAAc6d,IAAUC,yBAAyB9d,EAAW,eAE1H,IAAI+d,EAAON,EAAWG,EAClBI,IAAgB,OAAJD,QAAI,IAAJA,GAAA,UAAAA,EAAMzG,eAAN,oBAAAyG,EAAgBrI,KAAKuI,UAAUhM,MAAa8L,GAAQrI,KAAKC,YAAY1D,GACjF8L,EAAO,EAAGJ,EAAY,sBAAM1f,UAAU,eAAhB,SAAgC+f,IACjDD,EAAO,IAAGJ,EAAY,uBAAM1f,UAAU,eAAhB,eAAkC+f,OAE7DJ,GAAgBG,IAAMV,EAAU,sBAAMpf,UAAWsf,GAAYM,IAAUK,YAAYle,EAAWiS,GAAW,eAAiB,GAA1F,WAA2G,QAAX,EAAA2L,SAAA,mBAAatG,eAAb,sBAAuB5B,KAAKuI,UAAUhM,MAAa2L,GAAelI,KAAKC,YAAY1D,MAEzN,OAAO,eAACkM,EAAA,EAAD,2BAASX,GAAT,cACL,qBAAIvf,UAAU,WAAd,UAA0B+T,aAAYC,GAAtC,IAAiDyD,KAAKiB,YAAY1E,MAClE,uBAAMhU,UAAU,yBAAhB,UAA0Cof,EAASM,SAGvD,IAAMS,GAAsB,SAAC,GAA8E,IAAD,UAA3EnM,EAA2E,EAA3EA,QAASjS,EAAkE,EAAlEA,UAAWqe,EAAuD,EAAvDA,cAAeC,EAAwC,EAAxCA,SAAUf,EAA8B,EAA9BA,SAAaC,EAAiB,oEACpGH,GAAwB,OAAbgB,QAAa,IAAbA,GAAA,UAAAA,EAAeX,kBAAf,eAA4BzL,KAAY4L,IAAUC,yBAAyB9d,EAAWiS,GACjGsM,EAAO7I,KAAKC,YAAY1D,GACxB0L,IAAqB,OAARW,QAAQ,IAARA,GAAA,UAAAA,EAAUZ,kBAAV,eAAuBzL,KAAY,KAAmB,OAAboM,QAAa,IAAbA,GAAA,UAAAA,EAAeX,kBAAf,eAA4BzL,KAAY,GAElG,OAAO,eAACkM,EAAA,EAAD,2BAASX,GAAT,cACL,qBAAIvf,UAAU,WAAd,UAA0B+T,aAAYC,GAAtC,IAAiDyD,KAAKiB,YAAY1E,MAClE,uBAAMhU,UAAS,sBAAiBsf,GAAYM,IAAUK,YAAYle,EAAWiS,GAAW,eAAiB,IAAzG,UACGoL,IAAYM,GAAmB,OAAPN,QAAO,IAAPA,GAAA,UAAAA,EAAS/F,eAAT,oBAAA+F,EAAmB3H,KAAKuI,UAAUhM,KAAYsM,EAAO,KAC7EZ,EAAY,uBAAM1f,UAAW0f,EAAY,EAAI,eAAiB,cAAlD,eAAoEA,EAAY,GAAK,KAAc,OAATA,QAAS,IAATA,GAAA,UAAAA,EAAWrG,eAAX,oBAAAqG,EAAqBjI,KAAKuI,UAAUhM,KAAYsM,EAA1I,OAA0J,a,mBC8F9JC,OA1Hf,YAAoL,IAAD,EAAlJxe,EAAkJ,EAAlJA,UAAkJ,IAAvIA,UAAaye,EAA0H,EAA1HA,aAAcC,EAA4G,EAA5GA,uBAAwBC,EAAoF,EAApFA,qBAAwBN,EAA4D,EAA5DA,cAAeC,EAA6C,EAA7CA,SAAUf,EAAmC,EAAnCA,SAAUnJ,EAAyB,EAAzBA,YAAawK,EAAY,EAAZA,SAAY,EACjJ3b,oBAAS,GADwI,mBAC5K4b,EAD4K,KACjKC,EADiK,KAG7KxB,EAAQgB,GAAsBD,EAC9BU,EAAsBT,EAAQ,UAAGA,EAASZ,kBAAZ,aAAG,EAAqBqB,oBAAsB/e,EAAU+e,oBACtFT,IAAUK,EAAuBL,EAASK,sBAC9C,IAAMK,EAAWnB,IAAUoB,mBAAmBR,GAE1CS,EAAmB,CAAElf,YAAWsd,QAAOC,YACvC4B,EAAuB,CAAEnf,YAAWqe,gBAAeC,WAAUf,YAI3D6B,EAAqB,YAAO,IAAIC,IAAIL,EAAS1gB,KAAI,SAAAsD,GAAG,aAAI0d,aAAmB1d,EAAD,UAAM0b,EAAMI,kBAAZ,aAAM,EAAkB6B,qBAAmBC,SACrHC,EAActe,OAAO9C,KAAKqhB,MAAape,QAAO,SAAAM,GAAG,OAAIwd,EAAsBO,SAAS/d,MAC1F,OAAO,qCACL,cAACge,EAAA,EAAD,UACE,cAACzB,EAAA,EAAD,CAAKlgB,UAAU,OAAf,SACE,cAAC,GAAD,UACE,eAAC4hB,EAAA,EAAD,CAAM5hB,UAAU,QAAQ4X,GAAG,eAAelO,KAAK,YAA/C,UACE,cAACkY,EAAA,EAAK/J,OAAN,UACE,eAAC8J,EAAA,EAAD,WACE,cAACzB,EAAA,EAAD,UACE,qDAEF,cAACA,EAAA,EAAD,CAAKpI,GAAG,OAAR,SACE,cAAC,GAAU/N,OAAX,CAAkBwL,GAAIsM,IAAQhY,QAAQ,OAAOuS,SAAS,iBAAiBjS,QAAS,kBAAM0W,GAAcD,IAAY5W,KAAK,KAArH,mBACM4W,EAAY,OAAS,OAD3B,0BAMN,eAACgB,EAAA,EAAKrJ,KAAN,WACE,cAACoJ,EAAA,EAAD,UACItB,GAAYI,EACZM,EAAS1gB,KAAI,SAAA2T,GAAO,OAAI,cAAC,GAAD,aAAqB8D,GAAI,GAAIC,GAAI,EAAG+J,GAAI,GAAxC,2BAAkEZ,GAAlE,IAAwFlN,aAAxCA,MACxE+M,EAAS1gB,KAAI,SAAA2T,GAAO,OAAI,cAACmL,GAAD,aAAcrH,GAAI,GAAIC,GAAI,EAAG+J,GAAI,GAAjC,2BAA2Db,GAA3D,IAA6EjN,aAApCA,QAErE,cAAC,GAAUoK,SAAX,CAAoBhC,SAAS,iBAA7B,SACE,cAACuF,EAAA,EAAD,UACGH,EAAYnhB,KAAI,SAAAsD,GAAG,OAAI,cAACuc,EAAA,EAAD,CAAepI,GAAI,GAAI9X,UAAU,OAAjC,SACtB,eAAC4hB,EAAA,EAAD,CAAMhK,GAAG,cAAclO,KAAK,YAA5B,UACE,cAACkY,EAAA,EAAK/J,OAAN,CAAa7X,UAAU,MAAvB,SACGyX,KAAKsK,UAAUpe,EAAK0b,EAAMI,cAE7B,cAACmC,EAAA,EAAKrJ,KAAN,CAAWvY,UAAU,MAArB,SACE,gCAAQyX,KAAKuK,aAAare,EAAK0b,EAAMI,WAAYJ,EAAMI,WAAW6B,kBAAkB,WANxD3d,aAcvC0c,EAAW,eAACuB,EAAA,EAAKhI,OAAN,WACV,cAACiI,EAAA,EAAD,CAAQ1X,QAAS,WACfyV,IAAUqC,eAAelgB,EAAU+X,GAAIuG,EAAS6B,aACrC,OAAX/L,QAAW,IAAXA,QAFF,sDAIC2K,GAAuB,cAACqB,GAAA,EAAD,CAAOniB,UAAU,mCAAmC6J,QAAQ,SAA5D,SAAsE,yEAC/E,cAKzB,cAAC8X,EAAA,EAAD,UACE,cAACzB,EAAA,EAAD,UACE,eAACyB,EAAA,EAAD,WACE,cAACzB,EAAA,EAAD,CAAKkC,GAAI,EAAGC,GAAI,EAAGriB,UAAU,OAA7B,SACE,eAAC4hB,EAAA,EAAD,CAAM5hB,UAAU,2BAA2B4X,GAAG,eAAelO,KAAK,YAAlE,UACE,cAACkY,EAAA,EAAK/J,OAAN,mCACA,cAAC+J,EAAA,EAAKrJ,KAAN,CAAWvY,UAAU,cAArB,SACE,cAAC2hB,EAAA,EAAD,UACGze,OAAOE,QAAQqT,IAAS6L,sBAAsBjD,EAAMkD,aAAaliB,KAAI,mCAAE6X,EAAF,KAAUsK,EAAV,YACpE,eAACtC,EAAA,EAAD,CAAkBpI,GAAI,GAAI9X,UAAU,OAApC,UACE,6BAAKyW,IAASgC,mBAAmBP,KACjC,cAACyJ,EAAA,EAAD,UACGa,EAAaniB,KAAI,SAAAoiB,GAChB,IAAIC,EAAWjM,IAASkM,uBAAuBzK,EAAQuK,GACnD1e,EAAiB,EACjB3B,EAAcqU,IAASmM,gCAAgC1K,EAAQuK,GACnE,GAAIrgB,EAAa,CACf2B,EAAiBC,KAAiB6e,kBAAkBnC,EAAsB,CAAEoC,OAAQ5K,EAAQ6K,QAASN,IACrG,IAAIO,EAAmBvM,IAASwM,4BAA4B/K,EAAQuK,EAAW1e,GAC3Eif,IACGN,IAAUA,EAAW,IAC1Bxf,OAAOE,QAAQ4f,GAAkB5c,SAAQ,mCAAE4N,EAAF,KAAWkP,EAAX,YACvCR,EAAS1O,IAAY0O,EAAS1O,IAAY,GAAKkP,MAGrD,IAAIC,EAAqB,cAACja,GAAA,EAAD,CACvBnE,WAAUsb,EACVje,YAAaA,EACb2B,eAAgBA,EAChBoF,eAAgB,SAACia,GAAD,OAnFN,SAAClL,EAAQuK,EAAW1e,GAApB,cAAuC4c,QAAvC,IAAuCA,OAAvC,EAAuCA,GAAW,SAAA0C,GAAK,MACxF,CAAE3C,qBAAsB1c,KAAiBmF,eAAeka,EAAM3C,qBAAsB,CAAEoC,OAAQ5K,EAAQ6K,QAASN,GAAa1e,OAkF3Euf,CAA4BpL,EAAQuK,EAAWW,IACzEha,OAAQ,eAAC6L,EAAA,EAAD,CAAOpL,QAAQ,UAAf,UAA0B4Y,EAA1B,YAEV,OAAO,eAACvC,EAAA,EAAD,CAAqBpI,GAAI,GAAI9X,UAAU,OAAvC,UACL,+BAAKmjB,EAAL,IAA0B1M,IAAS8M,yBAAyBrL,EAAQuK,EAAWpD,EAAMI,eACpFiD,EAAW,cAACf,EAAA,EAAD,UACTze,OAAOE,QAAQsf,GAAUriB,KAAI,mCAAE2T,EAAF,KAAWkP,EAAX,YAC5B,eAAChD,EAAA,EAAD,CAAKpI,GAAI,GAAT,UAA4BL,KAAKiB,YAAY1E,GAA7C,KAAyDkP,EAAKzL,KAAKC,YAAY1D,KAA7DA,QACb,OALMyO,UAvBbvK,eAsCnBhV,OAAOsgB,OAAOnE,EAAM6C,aAAa7hB,KAAI,SAAAojB,GAAK,OACzCA,EAAQ,cAACvD,EAAA,EAAD,CAAKkC,GAAI,EAAGC,GAAI,EAAeriB,UAAU,OAAzC,SACN,cAACiW,GAAA,EAAD,CAAcC,WAAYuN,EAAOtN,YAAaA,EAAaG,WAAYwK,KADzC2C,GAEvB,mB,4DCtFNC,GAhCG,SAAC,GAAD,IAAGniB,EAAH,EAAGA,KAAMoiB,EAAT,EAASA,WAAYrf,EAArB,EAAqBA,MAAOO,EAA5B,EAA4BA,YAAa+e,EAAzC,EAAyCA,aAAc9e,EAAvD,EAAuDA,cAAeoP,EAAtE,EAAsEA,QAASnP,EAA/E,EAA+EA,SAAa8e,EAA5F,6GAChB,eAACC,EAAA,EAAD,2BAAgBD,GAAhB,cACGF,EAAa,cAACG,EAAA,EAAWC,QAAZ,UAAqBJ,IAAmC,KACtE,cAACG,EAAA,EAAWC,QAAZ,UACE,cAACD,EAAA,EAAWE,KAAZ,UAAkBziB,MAEnB2S,EACC,cAAC,KAAD,CACErP,YAAaA,EACbP,MAAOA,EACPQ,cAAeA,EACfC,SAAUA,IACP,cAAC,KAAD,CACHF,YAAaA,EACbP,MAAOA,EACPQ,cAAeA,EACfC,SAAUA,IAEbmP,EAAW,cAAC4P,EAAA,EAAWG,OAAZ,UACV,cAACH,EAAA,EAAWE,KAAZ,kBACsB,UACNE,IAAjBN,EAA6B,cAACE,EAAA,EAAWG,OAAZ,UAC5B,cAACE,GAAA,EAAD,CAAgBnK,UAAU,MACxBC,QAAS,cAACmK,GAAA,EAAD,wDADX,SAEE,sBAAMpkB,UAAU,iBAAhB,SACE,cAAC6hB,EAAA,EAAD,CAAQ1X,QAAS,kBAAMrF,EAAc8e,IAAe7e,SAAUA,GAAYT,IAAUsf,EAActK,MAAOhV,IAAUsf,EAAe,CAAE1J,cAAe,QAAW,GAA9J,SACE,cAAC,IAAD,CAAiBta,KAAMykB,cAIR,UCrBZ,SAASC,GAAsBvkB,GAAQ,IAAD,EAC7CgC,EAAmGhC,EAAnGgC,UAD6C,EACsDhC,EAAxFgC,UAAaye,EADqB,EACrBA,aAAc+D,EADO,EACPA,cAAiBjF,EAA4Cvf,EAA5Cuf,SAAUkF,EAAkCzkB,EAAlCykB,YAAaC,EAAqB1kB,EAArB0kB,iBADjC,EAEnBzf,oBAAS,GAFU,mBAE9C0f,EAF8C,KAEnCC,EAFmC,KAG/CC,EAAahF,IAAUiF,gBAAgBrE,GACvCsE,EAAgBlF,IAAUmF,iBAAiBvE,GAC3C5L,EAAQgL,IAAUC,yBAAyB9d,EAAW,cAC1D,OAAO,eAAC4f,EAAA,EAAD,WACL,cAACzB,EAAA,EAAD,CAAKpI,GAAI,GAAIC,GAAI,EAAjB,SAEE,eAAC6J,EAAA,EAAD,CAAMhK,GAAG,eAAelO,KAAK,YAAY1J,UAAU,OAAnD,UACE,cAAC4hB,EAAA,EAAKoD,IAAN,CAAUhN,IAAK4H,IAAUqF,QAAQzE,GAAexgB,UAAU,iBAC1D,cAAC4hB,EAAA,EAAKrJ,KAAN,UACE,eAACoJ,EAAA,EAAD,WACE,eAACzB,EAAA,EAAD,CAAKpI,GAAI,GAAT,UACE,+BAAK8H,IAAUsF,QAAQ1E,GAAvB,IAAsC,cAAC2E,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAAS+S,GAAa5kB,UAAU,gBAAzF,IAA0G,cAACmlB,EAAA,EAAD,CAAOnN,IAAG,UAAEvG,KAAOY,mBAAT,aAAE,EAAqByS,GAAgB9kB,UAAU,mBACrK,6BAAI,cAAC,KAAD,CAAOE,MAAO0f,IAAUwF,QAAQ5E,GAAevgB,SAAO,SAE5D,cAACigB,EAAA,EAAD,UACGwE,EAAY,cAAC/C,EAAA,EAAD,UAAK,cAACzB,EAAA,EAAD,UAChB,eAAC4D,EAAA,EAAD,WACE,cAACA,EAAA,EAAWC,QAAZ,UACE,cAACD,EAAA,EAAWE,KAAZ,qBAEF,cAAC,KAAD,CAAgBlf,cAAe,SAACoe,GAAD,OAASsB,EAAY,aAAca,YAAMnC,EAAK,EAAG,MAAM5e,MAAOsQ,IAC7F,cAACkP,EAAA,EAAWG,OAAZ,UACE,cAACpC,EAAA,EAAD,UACE,cAAC,IAAD,CAAiBjiB,KAAMykB,IAAQra,KAAK,KAAKG,QAAS,kBAAMqa,EAAY,aAAc5E,IAAU0F,SAASvjB,EAAUjB,kBAGnH,cAACgjB,EAAA,EAAWG,OAAZ,UACE,cAACE,GAAA,EAAD,CACEnK,UAAU,SACVC,QAAS,cAACmK,GAAA,EAAD,gFAFX,SAIE,cAACvC,EAAA,EAAD,CAAQhY,QAAQ,SAASM,QAAS,kBAAMwa,GAAcD,IAAY1a,KAAK,KAAvE,SACE,+BAAM,cAAC,IAAD,CAAiBpK,KAAM2lB,qBAMrC,eAAC5D,EAAA,EAAD,WACE,cAACzB,EAAA,EAAD,UACE,yCAAYtL,OAEb0K,EAAW,cAACY,EAAA,EAAD,CAAKpI,GAAG,OAAO9X,UAAU,YAAzB,SACV,cAAC6hB,EAAA,EAAD,CAAQhY,QAAQ,OAAOM,QAAS,kBAAMwa,GAAcD,IAAY1a,KAAK,KAArE,SACE,+BAAM,cAAC,IAAD,CAAiBpK,KAAM4a,YAExB,UAGf,cAAC0F,EAAA,EAAD,CAAKpI,GAAI,GAAT,SACE,eAAC6J,EAAA,EAAD,WACE,cAACzB,EAAA,EAAD,CAAKpI,GAAI,GAAT,SAAa,6BAAK8H,IAAU4F,qBAAqBhF,OACjD,cAACN,EAAA,EAAD,UACE,cAACyB,EAAA,EAAD,CAAK3hB,UAAU,OAAf,SACG,YAAIG,MAAM,GAAGC,QAAQC,KAAI,SAAAE,GAAC,OACzB,cAAC2f,EAAA,EAAD,CAAKpI,GAAI,EAAG9X,UAAU,MAAtB,SACE,cAACmlB,EAAA,EAAD,CAAOnN,IAAK4H,IAAU6F,oBAAoBjF,EAAcjgB,GAAIP,UAAS,uBAAkBukB,EAAgBhkB,EAAI,GAAK,gBAC9G+Y,MAAO,CAAEoM,OAAQ,WAAaC,eAAa,EAACxb,QAASmV,EAAY,kBAC/DmF,EAAkBlkB,EAAI,IAAOgkB,EAAgBhkB,EAAIA,EAAI,IAAM,QAHhCA,yBAanD,eAAC2f,EAAA,EAAD,CAAKpI,GAAI,GAAIC,GAAI,EAAjB,UACE,cAAC6N,GAAD,eAA2B7lB,IAC3B,cAAC8lB,GAAD,eAAoB9lB,UAI1B,SAAS6lB,GAAsB7lB,GAAQ,IAAD,EACRiF,oBAAS,GADD,mBAC/B8gB,EAD+B,KACtBC,EADsB,OAEQ/gB,oBAAS,GAFjB,mBAE/BghB,EAF+B,KAEdC,EAFc,KAG9BlkB,EAAgGhC,EAAhGgC,UAH8B,EAGkEhC,EAArFgC,UAAaye,EAHM,EAGNA,aAAc0F,EAHR,EAGQA,OAAU5G,EAAgDvf,EAAhDuf,SAAUqB,EAAsC5gB,EAAtC4gB,SAAUP,EAA4BrgB,EAA5BqgB,cAAeC,EAAatgB,EAAbsgB,SAGrFhB,EAAQgB,GAAsBD,EAE5B+F,EAAiB,SAACxiB,EAAKW,GAAN,OAAgBqc,GAAS,SAAA0C,GAI9C,MAFY,QAAR1f,IAAe0f,EAAM6C,OAAOniB,eAAiB,GACjDsf,EAAM6C,OAAOviB,GAAOW,EACb,CAAE4hB,OAAQ7C,EAAM6C,YAErBrjB,EAAarC,IAAOoC,oBAAoBsjB,EAAOviB,KAC/CmhB,EAAgBlF,IAAUmF,iBAAiBvE,GAC3C4F,EAAuBF,EAAOxiB,iBAAmBlD,IAAO+B,qBAAqB2jB,EAAOviB,IAAKuiB,EAAOplB,UAChGulB,EAAsBH,EAAOriB,gBAAkBrD,IAAOkC,oBAAoBwjB,EAAOviB,IAAKuiB,EAAOplB,UAC7FwlB,EAAoB9lB,IAAOkB,qBAAqBwkB,EAAOviB,KACvD4iB,EAAmB/lB,IAAOsC,mBAAmBojB,EAAOviB,IAAKuiB,EAAOrkB,aAChEmhB,EAAmBxiB,IAAOsD,yBAAyBoiB,EAAOviB,IAAKuiB,EAAOrkB,YAAaqkB,EAAOniB,gBAC1F3B,EAAc5B,IAAO2B,qBAAqB+jB,EAAOviB,KACjDI,EAAiBmiB,EAAOniB,eACxByiB,EAAiB,cAACtd,GAAA,EAAD,CACnB9G,YAAaA,EACb2B,eAAgBA,EAChBoF,eAAgB,SAACia,GAAD,OAAU+C,EAAe,iBAAkB/C,IAC3Dha,OAAQ,+BAAOkd,MAGjB,OAAO,eAAC1E,EAAA,EAAD,CAAMhK,GAAG,eAAelO,KAAK,YAAY1J,UAAU,OAAnD,UACL,cAAC4hB,EAAA,EAAK/J,OAAN,UACE,eAAC8J,EAAA,EAAD,WACE,cAACzB,EAAA,EAAD,UACE,4CAEF,cAACA,EAAA,EAAD,CAAKpI,GAAG,OAAR,SACE,cAAC+J,EAAA,EAAD,CAAQhY,QAAQ,OAAOG,KAAK,KAAKG,QAAS,kBAAM8b,GAAoBD,IAApE,SACE,iCAAM,cAAC,IAAD,CAAiBpmB,KAAM6mB,MAA7B,IAA8CT,EAAkB,aAAe,oBAGlF1G,EAAW,cAACY,EAAA,EAAD,CAAKpI,GAAG,OAAR,SACV,cAAC+J,EAAA,EAAD,CAAQhY,QAASic,EAAU,SAAW,OAAQ3b,QAAS,kBAAM4b,GAAYD,IAAU9b,KAAK,KAAxF,SACE,iCAAM,cAAC,IAAD,CAAiBpK,KAAMkmB,EAAUP,IAAS/K,MAAhD,IAA4DsL,EAAU,OAAS,cAE1E,UAGb,eAAClE,EAAA,EAAKrJ,KAAN,WACE,eAACoJ,EAAA,EAAD,CAAK3hB,UAAU,OAAf,UACE,cAACkgB,EAAA,EAAD,CAAKpI,GAAI,GAAIC,GAAI,EAAjB,SACE,cAACoN,EAAA,EAAD,CAAOnN,IAAKvG,KAAOC,QAAQwU,EAAOviB,KAAM3D,UAAS,4BAAuBQ,IAAOgB,gBAAgB0kB,EAAOviB,KAArD,QAAiEyU,WAAS,MAE5H0N,EAAU,cAAC5F,EAAA,EAAD,UACT,eAACyB,EAAA,EAAD,WACE,cAACzB,EAAA,EAAD,CAAKmC,GAAG,OAAOvK,GAAI,EAAG9X,UAAU,YAAhC,SACE,cAAC0mB,EAAA,EAAD,CAAgBC,MAAOnmB,IAAOY,cAAc8kB,EAAOviB,KAAnD,SACG,YAAIxD,MAAM,GAAGC,QAAQwmB,UAAUvmB,KAAI,SAAAsD,GAAG,OAAIA,EAAM,KAAGtD,KAAI,SAACwmB,EAAMtmB,EAAGumB,GAAV,OAAkB,eAAC,IAAMzc,SAAP,WACxE,cAAC0c,EAAA,EAASC,SAAV,UAAuC,cAAC,KAAD,CAAO9mB,MAAO2mB,KAA7B,OAASA,GAChC3jB,OAAOE,QAAQ5C,IAAOwC,iBAAiB8hB,IAAgBzhB,QAAO,oDAAgC5B,SAAWolB,KAAMxmB,KAAI,mCAAEsD,EAAF,KAAOF,EAAP,YAClH,cAACsjB,EAAA,EAAS7c,KAAV,CAAyBC,QAAS,kBAAMgc,EAAe,MAAOxiB,IAA9D,SACGF,EAAUlC,MADOoC,MAIpBpD,IAAMumB,EAAI7N,OAAS,GAAM,cAAE8N,EAAA,EAASE,QAAX,MAPkEJ,UAWnG,cAAC3G,EAAA,EAAD,CAAKmC,GAAG,OAAOvK,GAAI,EAAG9X,UAAU,YAAhC,SACE,eAAC0mB,EAAA,EAAD,CAAgBC,MAAOnmB,IAAOK,aAAaqlB,EAAOplB,UAAlD,UACE,cAACimB,EAAA,EAASC,SAAV,UACE,yDAED9jB,OAAOE,QAAQpC,KAAeX,KAAI,mCAAEsD,EAAF,KAAOpC,EAAP,YACjC,cAACwlB,EAAA,EAAS7c,KAAV,CAAyBC,QAAS,kBAAMgc,EAAe,WAAYxiB,IAAnE,SACGpC,GADiBoC,WAKzB2iB,GAAqB,cAACpG,EAAA,EAAD,CAAKmC,GAAG,OAAOvK,GAAI,EAAG9X,UAAU,OAAhC,SACpB,eAAC0mB,EAAA,EAAD,CAAgBC,MAAK,qBAAgBT,EAAOrkB,YAAc,GAAK7B,UAAU,QAAzE,UACE,cAAC+mB,EAAA,EAASC,SAAV,UACE,6DAED,YAAI7mB,MAAM,GAAGC,QAAQC,KAAI,SAAAsD,GAAG,OAC3B,cAACojB,EAAA,EAAS7c,KAAV,CAAyBC,QAAS,kBAAMgc,EAAe,cAAexiB,IAAtE,8BACiBA,EAAM,IADHA,WAK1B,cAACuc,EAAA,EAAD,CAAKpI,GAAI,GAAI9X,UAAU,OAAvB,SACE,cAAC,GAAD,CACEuB,KAAM,iCAAM,cAAC,IAAD,CAAiB3B,KAAMsnB,IAASlnB,UAAU,SAAhD,SACN6E,YAAY,gBACZP,MAAO8hB,EACPlS,SAAS,EACTpP,cAAe,SAACR,GAAD,OAAW6hB,EAAe,kBAAmB7hB,IAC5Dsf,aAAcpjB,IAAO+B,qBAAqB2jB,EAAOviB,IAAKuiB,EAAOplB,cAGhE+B,GAAc,cAACqd,EAAA,EAAD,CAAKpI,GAAI,GAAI9X,UAAU,OAAvB,SACb,cAAC,GAAD,CACEuB,KAAM,iCAAM,sBAAMvB,UAAU,OAAhB,SAAwB+T,aAAYlR,KAAoB4U,KAAKiB,YAAY7V,MACrFgC,YAAY,iBACZP,MAAO+hB,EACPnS,QAA0C,MAAjCuD,KAAKC,YAAY7U,GAC1BiC,cAAe,SAACR,GAAD,OAAW6hB,EAAe,iBAAkB7hB,IAC3Dsf,aAAcpjB,IAAOkC,oBAAoBwjB,EAAOviB,IAAKuiB,EAAOplB,mBAKlE,eAACof,EAAA,EAAD,WACE,cAACyB,EAAA,EAAD,CAAK3hB,UAAU,OAAf,SAAsB,eAACkgB,EAAA,EAAD,WACpB,qBAAIlgB,UAAU,OAAd,UAAsBQ,IAAOY,cAAc8kB,EAAOviB,KAAlD,IAAyDnD,IAAOK,aAAaqlB,EAAOplB,UAApF,IAAgGwlB,GAAiB,sBAAmBJ,EAAOrkB,YAAc,EAAxC,QACjH,gCAAQ,cAAC,KAAD,CAAO3B,MAAOM,IAAOgB,gBAAgB0kB,EAAOviB,cAEtD,cAACge,EAAA,EAAD,UACE,cAACzB,EAAA,EAAD,UAAMsG,MAGR,4BAAIF,GAAqB9lB,IAAOoB,4BAA4BskB,EAAOviB,IAAKuiB,EAAOrkB,YAAawd,EAAMI,WAAY1d,KAC9G,eAAC4f,EAAA,EAAD,WACE,cAACzB,EAAA,EAAD,CAAKpI,GAAI,GAAIC,GAAI,EAAjB,SACE,uCAAUqO,OAEXvjB,GAAc,cAACqd,EAAA,EAAD,CAAKpI,GAAI,GAAIC,GAAI,EAAjB,SACb,+BAAKN,KAAKiB,YAAY7V,GAAtB,KAAqCwjB,EAAqB5O,KAAKC,YAAY7U,WAG9E,eAAC8e,EAAA,EAAD,YACGqB,GAAoBuD,IAAqB,cAACrG,EAAA,EAAD,CAAKpI,GAAI,GAAT,SAAa,oBAAI9X,UAAU,OAAd,4BACvDumB,GAAoBrjB,OAAOE,QAAQmjB,GAAkBlmB,KAAI,mCAAEsD,EAAF,KAAOuf,EAAP,YACxD,eAAChD,EAAA,EAAD,CAAKpI,GAAI,GAAIC,GAAI,EAAjB,UAAwCN,KAAKiB,YAAY/U,GAAzD,KAAiEuf,EAAKzL,KAAKC,YAAY/T,KAA9D,OAASA,MAEnCqf,GAAoB9f,OAAOE,QAAQ4f,GAAkB3iB,KAAI,mCAAEsD,EAAF,KAAOuf,EAAP,YACxD,eAAChD,EAAA,EAAD,CAAKpI,GAAI,GAAIC,GAAI,EAAjB,UAAwCN,KAAKiB,YAAY/U,GAAzD,KAAiEuf,EAAKzL,KAAKC,YAAY/T,KAA9D,OAASA,eAK3CqiB,GAAmB,cAACrE,EAAA,EAAD,UAAK,cAACzB,EAAA,EAAD,UAAK,gCAAQ1f,IAAOyB,qBAAqBikB,EAAOviB,iBAK/E,SAASkiB,GAAe9lB,GAAQ,IACxBuf,EAAqGvf,EAArGuf,SAAUvd,EAA2FhC,EAA3FgC,UAAwB0e,EAAmE1gB,EAAhFgC,UAAa0e,uBAA0B+D,EAAyCzkB,EAAzCykB,YAAapE,EAA4BrgB,EAA5BqgB,cAAeC,EAAatgB,EAAbsgB,SAE1FhB,EAAQgB,GAAsBD,EAHL,EAKDpb,oBAAS,GALR,mBAKxB8gB,EALwB,KAKfC,EALe,OAMS/gB,oBAAS,GANlB,mBAMxBmiB,EANwB,KAMVC,EANU,KAQzBC,EAAiB,CAAC,UAAW,YAAa,WAAY,YAAa,aACjEC,EAAkB,CAAC,WAAY,YAAa,aAClDA,EAAgBjhB,KAAhB,MAAAihB,EAAwBD,GACxB,IAAME,EAAe,CAAC,UAAW,KAAM,MAAO,WAAY,MAAO,OAAQ,WAAY,MAAO,QAC5FA,EAAalhB,KAAb,MAAAkhB,EAAqBF,GACrB,IAAMG,EAAgB,CAAC,OAAQ,WAAY,aAAc,SAAU,gBAAiB,WAEpF5H,IAAU6H,mBAAmBrhB,SAAQ,SAAAshB,GACnCF,EAAcnhB,KAAd,UAAsBqhB,EAAtB,mBACAF,EAAcnhB,KAAd,UAAsBqhB,EAAtB,gBAEF,IAAMC,EAAe,CAAC,qBAAsB,qBAAsB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,gBAAiB,WAAY,UAAW,gBAElLC,EAAqBhI,IAAUC,yBAAyB9d,EAAW,sBACnE8lB,EAAqBjI,IAAUC,yBAAyB9d,EAAW,sBACnE+lB,EAAsBrQ,KAAKC,YAAYkQ,GAEvCG,EAAmE,MAAzCtQ,KAAKC,YAAYkQ,GAC3CI,EAAmB,CACrBnjB,YAAa,yBACbP,MAAOsb,IAAUC,yBAAyB9d,EAAW,sBACrD+C,cAAe,SAACR,GAAD,OAAWkgB,EAAY,qBAAsBlgB,KAE1D2jB,EAAmBF,EACrB,cAAC,KAAD,eAAsBC,IACpB,cAAC,KAAD,eAAoBA,IAEpB/G,EAAmB,CAAElf,YAAWsd,QAAOC,YACvC4B,EAAuB,CAAEnf,YAAWqe,gBAAeC,WAAUf,YACjE,OAAO,qCACL,eAACsC,EAAA,EAAD,CAAMhK,GAAG,eAAelO,KAAK,YAAY1J,UAAU,OAAnD,UACE,cAAC4hB,EAAA,EAAK/J,OAAN,UACE,eAAC8J,EAAA,EAAD,WACE,cAACzB,EAAA,EAAD,UACE,qDAEDZ,EAAW,cAACY,EAAA,EAAD,CAAKpI,GAAG,OAAR,SACV,cAAC+J,EAAA,EAAD,CAAQhY,QAASic,EAAU,SAAW,OAAQ3b,QAAS,kBAAM4b,GAAYD,IAAU9b,KAAK,KAAxF,SACE,iCAAM,cAAC,IAAD,CAAiBpK,KAAMkmB,EAAUP,IAAS/K,MAAhD,IAA4DsL,EAAU,OAAS,cAE1E,UAGZA,EACC,cAAClE,EAAA,EAAKrJ,KAAN,UACE,eAACoJ,EAAA,EAAD,CAAK3hB,UAAU,OAAf,UACGunB,EAAalnB,KAAI,SAAA2T,GAAO,OACvB,cAACkM,EAAA,EAAD,CAAKmC,GAAI,EAAGvK,GAAI,GAAhB,SACE,cAAC,GAAD,CACE9X,UAAU,OACVuB,KAAM,iCAAOwS,aAAYC,GAAnB,IAA8ByD,KAAKyQ,kBAAkBlU,MAC3DnP,YAAW,eAAU4S,KAAKiB,YAAY1E,IACtC1P,MAAOsb,IAAUC,yBAAyB9d,EAAWiS,GACrDE,QAAuC,MAA9BuD,KAAKC,YAAY1D,GAC1BlP,cAAe,SAACR,GAAD,OAAWkgB,EAAYxQ,EAAS1P,IAC/Csf,aAAchE,IAAUuI,iBAAiBpmB,EAAWiS,MAR/BA,MAY3B,cAACkM,EAAA,EAAD,CAAKmC,GAAI,EAAGvK,GAAI,GAAhB,SACE,eAACgM,EAAA,EAAD,WACE,eAAC4C,EAAA,EAAD,CACEC,MAAOlP,KAAK2Q,uBAAuBR,EAAoB,oBACvDrS,GAAIuO,IAAWC,QAFjB,UAIE,cAACgD,EAAA,EAASC,SAAV,uCACChS,KAA4B3U,KAAI,SAAAsD,GAAG,OAClC,cAACojB,EAAA,EAAS7c,KAAV,CAAyBC,QAAS,kBAAMqa,EAAY,qBAAsB7gB,IAA1E,SACG8T,KAAK2Q,uBAAuBzkB,IADXA,SAIvBskB,EACAF,GAA4B,cAACjE,EAAA,EAAWG,OAAZ,UAC3B,cAACH,EAAA,EAAWE,KAAZ,4BAMV,cAACpC,EAAA,EAAKrJ,KAAN,UACE,eAACoJ,EAAA,EAAD,CAAK3hB,UAAU,OAAf,UACIqgB,GAAYI,EACZ6G,EAAgBjnB,KAAI,SAAA2T,GAAO,OAAI,cAAC,GAAD,aAAqB8D,GAAI,GAAIuK,GAAI,GAAjC,2BAA2DnB,GAA3D,IAAiFlN,aAAxCA,MACxEsT,EAAgBjnB,KAAI,SAAA2T,GAAO,OAAI,cAACmL,GAAD,aAAcrH,GAAI,GAAIuK,GAAI,GAA1B,2BAAoDpB,GAApD,IAAsEjN,aAApCA,MAClE6T,EAAqB,eAAC3H,EAAA,EAAD,CAAKmC,GAAI,EAAGvK,GAAI,GAAhB,UACpB,iCAAM,6CAAN,IAA0B,sBAAM9X,UAAW4f,IAAUK,YAAYle,EAAW,sBAAwB,eAAiB,GAA3F,SAAgG0V,KAAKiB,YAAYkP,QAC3I,sBAAM5nB,UAAS,sBAAiB4f,IAAUK,YAAYle,EAAW,sBAAwB,eAAiB,IAA1G,mBAAoH8lB,GAApH,OAAyIC,QAClI,aAKjB,eAAClG,EAAA,EAAD,CAAMhK,GAAG,eAAelO,KAAK,YAAY1J,UAAU,OAAnD,UACE,cAAC4hB,EAAA,EAAK/J,OAAN,UACE,eAAC8J,EAAA,EAAD,WACE,cAACzB,EAAA,EAAD,UACE,iDAEDZ,EAAW,cAACY,EAAA,EAAD,CAAKpI,GAAG,OAAR,SACV,cAAC+J,EAAA,EAAD,CAAQhY,QAASsd,EAAe,SAAW,OAAQhd,QAAS,kBAAMid,GAAiBD,IAAend,KAAK,KAAvG,SACE,iCAAM,cAAC,IAAD,CAAiBpK,KAAMunB,EAAe5B,IAAS/K,MAArD,IAAiE2M,EAAe,OAAS,cAEpF,UAGZA,EACC,cAACvF,EAAA,EAAKrJ,KAAN,UACE,cAACoJ,EAAA,EAAD,CAAK3hB,UAAU,OAAf,SACGwnB,EAAcnnB,KAAI,SAAA2T,GAAO,OACxB,cAACkM,EAAA,EAAD,CAAKmC,GAAI,EAAGvK,GAAI,GAAhB,SACE,cAAC,GAAD,CACE9X,UAAU,OACVuB,KAAM,iCAAOwS,aAAYC,GAAnB,IAA8ByD,KAAKiB,YAAY1E,MACrDnP,YAAW,eAAU4S,KAAK4Q,eAAerU,IACzC1P,MAAOsb,IAAUC,yBAAyB9d,EAAWiS,GACrDE,QAAuC,MAA9BuD,KAAKC,YAAY1D,GAC1BlP,cAAe,SAACR,GAAD,OAAWkgB,EAAYxQ,EAAS1P,IAC/Csf,aAAchE,IAAUuI,iBAAiBpmB,EAAWiS,MAR/BA,UAa/B,cAAC4N,EAAA,EAAKrJ,KAAN,UACE,cAACoJ,EAAA,EAAD,CAAK3hB,UAAU,OAAf,SACIqgB,GAAYI,EACZ+G,EAAcnnB,KAAI,SAAA2T,GAAO,OAAI,cAAC,GAAD,aAAqB8D,GAAI,GAAIuK,GAAI,GAAjC,2BAA2DnB,GAA3D,IAAiFlN,aAAxCA,MACtEwT,EAAcnnB,KAAI,SAAA2T,GAAO,OAAI,cAACmL,GAAD,aAAcrH,GAAI,GAAIuK,GAAI,GAA1B,2BAAoDpB,GAApD,IAAsEjN,aAApCA,aAKzE,eAAC4N,EAAA,EAAD,CAAMhK,GAAG,eAAelO,KAAK,YAAY1J,UAAU,OAAnD,UACE,cAAC4hB,EAAA,EAAK/J,OAAN,UACE,cAAC8J,EAAA,EAAD,UACE,cAACzB,EAAA,EAAD,UACE,oDAIN,cAAC0B,EAAA,EAAKrJ,KAAN,UACE,cAACoJ,EAAA,EAAD,CAAK3hB,UAAU,OAAf,SACIqgB,GAAYI,EACZkH,EAAatnB,KAAI,SAAA2T,GAAO,OAAI,cAAC,GAAD,aAAqB8D,GAAI,GAAIuK,GAAI,GAAjC,2BAA2DnB,GAA3D,IAAiFlN,aAAxCA,MACrE2T,EAAatnB,KAAI,SAAA2T,GAAO,OAAI,cAACmL,GAAD,aAAcrH,GAAI,GAAIuK,GAAI,GAA1B,2BAAoDpB,GAApD,IAAsEjN,aAApCA,gB,2CCzX3D,SAASsU,GAAoBvoB,GAAQ,IAC5CgC,EAAuIhC,EAAvIgC,UAD2C,EAC4FhC,EAA5HgC,UAAaye,EADmB,EACnBA,aAAc1f,EADK,EACLA,SAAUyjB,EADL,EACKA,cAAegE,EADpB,EACoBA,QAAWjJ,EAA6Dvf,EAA7Duf,SAAUqB,EAAmD5gB,EAAnD4gB,SAAU6D,EAAyCzkB,EAAzCykB,YAAanE,EAA4BtgB,EAA5BsgB,SAAUD,EAAkBrgB,EAAlBqgB,cACvHf,EAAQgB,GAAsBD,EAE9BoI,EAAY5I,IAAU6I,aAAa3nB,GAMnC4nB,EAAiB,2BAAQ3oB,GAAR,IAAeyoB,cAC9BG,EAAqB,SAAC,GAA4B,IAA1BvM,EAAyB,EAAzBA,SAAUwM,EAAe,EAAfA,SAChCC,EAAkB7M,qBAAWgC,GAC7B8K,EAAmBhL,EACvB1B,GACA,kBAAMwM,GAAYA,EAASxM,MAEvB2M,EAAWF,IAAoBzM,EACrC,OACE,eAACyF,EAAA,EAAD,CAEE1X,QAAS2e,EAFX,UAIE,cAAC,IAAD,CAAiBlpB,KAAMmpB,EAAWC,IAAmBC,IAAkBjpB,UAAS,gBAAW+oB,EAAW,gBAAkB,MACxH,qCAAeA,EAAW,UAAY,aAwB5C,OAAO,qCACL,cAACpH,EAAA,EAAD,UAAK,cAACzB,EAAA,EAAD,CAAKpI,GAAI,GAAI9X,UAAU,OAAvB,SACH,eAAC,GAAD,WACE,eAAC4hB,EAAA,EAAD,CAAMhK,GAAG,eAAelO,KAAK,YAAY1J,UAAU,OAAnD,UACE,cAAC4hB,EAAA,EAAK/J,OAAN,UACE,eAAC8J,EAAA,EAAD,WACE,eAACzB,EAAA,EAAD,WACE,sBAAMlgB,UAAU,UAAhB,wCACA,2EAEF,cAACkgB,EAAA,EAAD,CAAKpI,GAAG,OAAR,SACE,eAACoR,GAAA,EAAD,CAAmB/jB,KAAK,QAAQb,MAAOikB,EAAShnB,KAAK,aAAa8D,SAAU,SAACkjB,GAAD,OAAa5H,EAAS,CAAE4H,aAApG,UACE,cAACY,GAAA,EAAD,CAAc7kB,MAAM,UAApB,sBACA,cAAC6kB,GAAA,EAAD,CAAc7kB,MAAM,MAApB,iCACA,cAAC6kB,GAAA,EAAD,CAAc7kB,MAAM,WAApB,+BAGJ,cAAC4b,EAAA,EAAD,CAAKpI,GAAG,OAAR,SACE,cAAC6Q,EAAD,CAAoBpT,GAAIsM,IAAQzF,SAAS,aAI/C,cAAC,GAAUgC,SAAX,CAAoBhC,SAAS,IAA7B,SACE,eAACwF,EAAA,EAAKrJ,KAAN,WACE,cAACoJ,EAAA,EAAD,CAAK3hB,UAAU,OAAf,SAAsB,cAACkgB,EAAA,EAAD,UACpB,cAAC2B,EAAA,EAAD,CAAQhY,QAAQ,UAAhB,SACE,mBAAGuf,KAAK,uEAAuE7jB,OAAO,SAAS8jB,IAAI,aAAnG,4FAKJ,eAAC1H,EAAA,EAAD,WACE,cAACzB,EAAA,EAAD,CAAKpI,GAAI,GAAIgK,GAAI,EAAG9hB,UAAU,OAA9B,SACE,cAAC,GAAD,CACEuB,KAAM,4CACN+C,MAAOsb,IAAUC,yBAAyB9d,EAAW,eACrD8C,YAAa4S,KAAK4Q,eAAe,eACjCzE,aAAchE,IAAUuI,iBAAiBpmB,EAAW,eACpD+C,cAAe,SAACoe,GAAD,OAASsB,EAAY,cAAetB,QAGtD,CAAC,YAAD,mBAAgBtD,IAAU6H,qBAAoBpnB,KAAI,SAAAipB,GACjD,IAAItV,EAAqB,aAAXsV,EAAwB,gBAAxB,UAA6CA,EAA7C,kBACVC,EAA6B,aAAXD,EAAwB,qBAAxB,UAAkDA,EAAlD,uBAClBE,EAAkB5J,IAAUC,yBAAyB9d,EAAWwnB,GACpE,OAAO,cAACrJ,EAAA,EAAD,CAAKpI,GAAI,GAAIgK,GAAI,EAAgB9hB,UAAU,OAA3C,SACL,cAAC,GAAD,CACE2jB,WAAY,eAAC9B,EAAA,EAAD,CAAQhY,QAASyf,EAAQnf,QAAS,kBAAMqa,EAAY+E,GAAkBC,IAAkBxpB,UAAU,mBAAlG,UACV,cAAC,IAAD,CAAiBJ,KAAM4pB,EAAkB/e,IAAgBC,IAAU1K,UAAU,UADnE,eAGZuB,KAAM,4BAAIkW,KAAK4Q,eAAerU,KAC9B1P,MAAOsb,IAAUC,yBAAyB9d,EAAWiS,GACrDnP,YAAa4S,KAAK4Q,eAAerU,GACjC4P,aAAchE,IAAUuI,iBAAiBpmB,EAAWiS,GACpDlP,cAAe,SAACoe,GAAD,OAASsB,EAAYxQ,EAASkP,IAC7Cne,SAAUykB,KAVkBF,iBAmB1C,eAAC1H,EAAA,EAAD,CAAMhK,GAAG,eAAelO,KAAK,YAA7B,UACE,cAACkY,EAAA,EAAK/J,OAAN,UACE,eAAC8J,EAAA,EAAD,WACE,eAACzB,EAAA,EAAD,WACE,sBAAMlgB,UAAU,UAAhB,yCACA,gFAEF,cAACkgB,EAAA,EAAD,CAAKpI,GAAG,OAAR,SACE,cAAC6Q,EAAD,CAAoBpT,GAAIsM,IAAQzF,SAAS,aAI/C,cAAC,GAAUgC,SAAX,CAAoBhC,SAAS,IAA7B,SACE,cAACwF,EAAA,EAAKrJ,KAAN,UACE,cAACoJ,EAAA,EAAD,UAlGa,WACvB,IAAIvhB,EAAO,CAAC,WAAY,YAAa,aAEjCqpB,EAAkB7J,IAAU6J,gBAAgBjJ,GAC5CkJ,EAAkB9J,IAAU8J,gBAAgBlJ,GAC5CmJ,EAAW,CAAC,WAAY,WAAY,UAaxC,OAXKF,GACHE,EAASvjB,SAAQ,SAAAzC,GAAG,OAAIvD,EAAKiG,KAAKuZ,IAAUgK,iBAAiBjmB,EAAK5B,OAChE0nB,GAAoBC,GAAmB3nB,EAAU8nB,YACnDF,EAASvjB,SAAQ,SAAAzC,GAAG,OAAIvD,EAAKiG,KAAKuZ,IAAUgK,iBAAiBjmB,EAAK5B,GAAW,OACzB,QAA7C6d,IAAUmF,iBAAiBvE,IAClCpgB,EAAKiG,KAAKuZ,IAAUgK,iBAAiB,WAAY7nB,GAAW,IANhD,CAAC,MAAO,QAAS,SAQvBqE,SAAQ,SAAAzC,GAAG,OAAIvD,EAAKiG,KAAKuZ,IAAUgK,iBAAiBjmB,EAAK5B,OAEjE3B,EAAI,YAAO,IAAIghB,IAAIhhB,EAAKC,KAAI,SAAAsD,GAAG,aAAI0d,aAAmB1d,EAAD,UAAM0b,EAAMI,kBAAZ,aAAM,EAAkB6B,qBAAmBC,SAEzFre,OAAO9C,KAAKqhB,MAAape,QAAO,SAAAM,GAAG,OAAIvD,EAAKshB,SAAS/d,MAiF/CmmB,GAAmBzpB,KAAI,SAAAsD,GAAG,OAAI,cAACuc,EAAA,EAAD,CAAepI,GAAI,GAAI9X,UAAU,OAAjC,SAC7B,eAAC4hB,EAAA,EAAD,CAAMhK,GAAG,cAAclO,KAAK,YAA5B,UACE,cAACkY,EAAA,EAAK/J,OAAN,CAAa7X,UAAU,MAAvB,SACGyX,KAAKsK,UAAUpe,EAAK0b,EAAMI,cAE7B,cAACmC,EAAA,EAAKrJ,KAAN,CAAWvY,UAAU,MAArB,SACE,gCAAQyX,KAAKuK,aAAare,EAAK0b,EAAMI,WAAYJ,EAAMI,WAAW6B,kBAAkB,WANjD3d,sBAiBrD,cAACge,EAAA,EAAD,UAAK,cAACzB,EAAA,EAAD,UAAK,cAAC6J,GAAD,eAAqBhqB,QAC/B,cAAC4hB,EAAA,EAAD,UA3ImB,CAAC,CAAC,OAAQ,yBAA0B,CAAC,QAAS,mBAAoB,CAAC,QAAS,oBA6I7EthB,KAAI,mCAAE2pB,EAAF,KAAQC,EAAR,YAClB,cAAC/J,EAAA,EAAD,CAAgBpI,GAAI,GAAIC,GAAI,EAAGsK,GAAI,EAAGriB,UAAU,OAAhD,SACE,cAACkqB,GAAD,2BACMxB,GADN,IAEEyB,UAAWH,EACXI,SAAUH,MAJJD,QAQd,cAACrI,EAAA,EAAD,UApJiB,CAAC,CAAC,WAAY,0BAA2B,GAAI,CAAC,WAAY,0BAA2B,GAAI,CAAC,WAAY,sBAAuB,IAsJ9HthB,KAAI,YAAyB,IAAD,mBAAtB2pB,EAAsB,KAAhBC,EAAgB,KAATI,EAAS,KACpCC,EAAU9B,GAAa6B,EAC3B,OAAO,cAACnK,EAAA,EAAD,CAAgB5G,MAAO,CAAEC,QAAS+Q,EAAU,EAAI,IAAOxS,GAAI,GAAIC,GAAI,EAAG/X,UAAU,OAAhF,SACL,cAACkqB,GAAD,2BACMxB,GADN,IAEEyB,UAAWH,EACXI,SAAUH,MAJGD,QASrB,cAACrI,EAAA,EAAD,UACE,cAACzB,EAAA,EAAD,UACE,qBAAIlgB,UAAU,cAAd,+BAA+CukB,SAGnD,cAAC5C,EAAA,EAAD,UAEG,YAAIxhB,MAAM,GAAGC,QAAQC,KAAI,SAAAE,GACxB,IAAIypB,EAAI,uBAAmBzpB,EAAI,GAC/B,OAAO,cAAC2f,EAAA,EAAD,CAAapI,GAAI,GAAIC,GAAI,EAAG/X,UAAU,OAC3CsZ,MAAO,CAAEC,QAASgL,EAAgBhkB,EAAI,EAAI,IADrC,SAEL,cAAC2pB,GAAD,2BACMxB,GADN,IAEEyB,UAAWH,EACXI,SAAQ,2BAAsB7pB,EAAI,GAClCgqB,aAAcjL,EAAY,kBAAMqB,EAAS,CAAE4D,cAAgBhkB,EAAI,IAAOgkB,EAAgBhkB,EAAIA,EAAI,UAAQ2jB,MANzF3jB,WAazB,IAAMiqB,GAAqB,CACzBC,iBA2DF,YAAsC,IAAVnmB,EAAS,EAATA,MAC1B,OAAO,cAACsd,EAAA,EAAD,CAAMhK,GAAG,cAAclO,KAAK,YAA5B,SAAwC,eAACkY,EAAA,EAAKrJ,KAAN,CAAWvY,UAAU,MAArB,UAC7C,6BAAKyX,KAAKiB,YAAY,sBACtB,qBAAI1Y,UAAU,yBAAd,UACE,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASI,QAASjS,UAAU,gBADjD,IACkE,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASE,KAAM/R,UAAU,gBAD9G,IACgIsE,WA9DlIomB,mBAkEF,YAAwC,IAAVpmB,EAAS,EAATA,MAC5B,OAAO,cAACsd,EAAA,EAAD,CAAMhK,GAAG,cAAclO,KAAK,YAA5B,SAAwC,eAACkY,EAAA,EAAKrJ,KAAN,CAAWvY,UAAU,MAArB,UAC7C,6BAAKyX,KAAKiB,YAAY,wBACtB,qBAAI1Y,UAAU,2BAAd,UACE,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASI,QAASjS,UAAU,gBADjD,IACkE,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASM,MAAOnS,UAAU,gBAD/G,IACiIsE,WArEnIqmB,eAyEF,YAAoC,IAAVrmB,EAAS,EAATA,MACxB,OAAO,cAACsd,EAAA,EAAD,CAAMhK,GAAG,cAAclO,KAAK,YAA5B,SAAwC,eAACkY,EAAA,EAAKrJ,KAAN,CAAWvY,UAAU,MAArB,UAC7C,6BAAKyX,KAAKiB,YAAY,oBACtB,qBAAI1Y,UAAU,uBAAd,UACE,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASI,QAASjS,UAAU,gBADjD,IACkE,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASO,KAAMpS,UAAU,gBAD9G,IACgIsE,WA5ElIsmB,UAgFF,YAA+B,IAAVtmB,EAAS,EAATA,MACnB,OAAO,cAACsd,EAAA,EAAD,CAAMhK,GAAG,cAAclO,KAAK,YAA5B,SAAwC,eAACkY,EAAA,EAAKrJ,KAAN,CAAWvY,UAAU,MAArB,UAC7C,6BAAKyX,KAAKiB,YAAY,eACtB,qBAAI1Y,UAAU,kBAAd,UACE,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASI,QAASjS,UAAU,gBADjD,IACkE,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASM,MAAOnS,UAAU,gBAD/G,IACgI,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASO,KAAMpS,UAAU,gBAD5K,IAC6L,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASE,KAAM/R,UAAU,gBADzO,IAC0P,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASC,MAAO9R,UAAU,gBADvS,IACyTsE,WAnF3TumB,YAuFF,YAAmC,IAAVvmB,EAAS,EAATA,MACnBwmB,EAAc,cAAC3G,GAAA,EAAD,CAChBnK,UAAU,MACVC,QAAS,eAACmK,GAAA,EAAD,8CAAyC,sBAAMpkB,UAAU,WAAhB,wBAFlC,SAIhB,cAAC,IAAD,CAAiBJ,KAAMmrB,IAAkB/qB,UAAU,OAAOsZ,MAAO,CAAEoM,OAAQ,YAE7E,OAAO,cAAC9D,EAAA,EAAD,CAAMhK,GAAG,cAAclO,KAAK,YAA5B,SAAwC,eAACkY,EAAA,EAAKrJ,KAAN,CAAWvY,UAAU,MAArB,UAC7C,6BAAKyX,KAAKiB,YAAY,iBACtB,qBAAI1Y,UAAU,oBAAd,UACE,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASM,MAAOnS,UAAU,gBAD/C,IACgE,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASE,KAAM/R,UAAU,gBAD5G,KAC8H,wBAAOA,UAAU,gBAAjB,yBAA8C8qB,EAA9C,OAD9H,IACmMxmB,WAhGrM0mB,eAoGF,YAAoC,IAAV1mB,EAAS,EAATA,MACxB,OAAO,cAACsd,EAAA,EAAD,CAAMhK,GAAG,cAAclO,KAAK,YAA5B,SAAwC,eAACkY,EAAA,EAAKrJ,KAAN,CAAWvY,UAAU,MAArB,UAC7C,6BAAKyX,KAAKiB,YAAY,oBACtB,qBAAI1Y,UAAU,uBAAd,UACE,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASI,QAASjS,UAAU,gBADjD,IACkE,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASM,MAAOnS,UAAU,gBAD/G,IACgI,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASO,KAAMpS,UAAU,gBAD5K,IAC6L,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASE,KAAM/R,UAAU,gBADzO,IAC0P,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASK,IAAKlS,UAAU,gBADrS,IACuTsE,YAtG3T,SAASylB,GAAT,GAAqH,IAAD,IAAzFhoB,UAAaye,EAA4E,EAA5EA,aAA4E,IAA9DyK,oBAA8D,MAA/C,OAA+C,EAArC5K,EAAqC,EAArCA,SAAUD,EAA2B,EAA3BA,cAAeO,EAAY,EAAZA,SAClGtB,EAAQgB,GAAsBD,EAC9B8K,EAAatL,IAAUiF,gBAAgBrE,GACvC2K,EAAW,YAAQC,KAAsBF,IAAe,IAE5D,OADKC,EAAYzJ,SAAS,gBAA+D,aAA7C9B,IAAUmF,iBAAiBvE,IAA8B2K,EAAY9kB,KAAK,eAC/G,cAACub,EAAA,EAAD,CAAMhK,GAAG,eAAelO,KAAK,YAAY1J,UAAU,OAAnD,SACL,cAAC4hB,EAAA,EAAKrJ,KAAN,UACE,eAACoJ,EAAA,EAAD,WACE,cAACzB,EAAA,EAAD,UAAM,cAACyB,EAAA,EAAD,CAAK3hB,UAAU,QAAf,SACHmrB,EAAY9qB,KAAI,SAAAsD,GAAQ,IAAD,MAClB0nB,EAAMb,GAAmB7mB,GAC7B,IAAK0nB,EAAK,OAAO,KACjB,IAAInI,EAAG,OAAG7D,QAAH,IAAGA,GAAH,UAAGA,EAAOI,kBAAV,aAAG,EAAoB9b,GAE9B,OADAuf,GAAS,QAAH,EAAAA,SAAA,mBAAK7J,eAAL,sBAAe5B,KAAKuI,UAAUrc,MAASuf,EACtC,cAAChD,EAAA,EAAD,CAAKpI,GAAG,OAAO9X,UAAU,OAAzB,SAA0C,cAACqrB,EAAD,CAAK/mB,MAAO4e,KAAjBvf,UAGhD,cAACuc,EAAA,EAAD,CAAKpI,GAAG,OAAR,SACG,CAAC,OAAQ,QAAS,QAAQ4J,SAASwJ,IAAe,eAAChC,GAAA,EAAD,CACjD/jB,KAAK,QAAQ5D,KAAK,eAAeqiB,aAAcqH,EAAc5lB,SAAU,SAAC6d,GAAD,OAASvC,EAAS,CAAEsK,aAAsB,SAAR/H,EAAiB,KAAOA,KADhF,UAEjD,eAACiG,GAAA,EAAD,CAAcnpB,UAAU,MAAMsE,MAAO,OAArC,cAA8C,8CAA9C,IAAoE,iDACpD,SAAf4mB,GAAyB,eAAC/B,GAAA,EAAD,CAAcnpB,UAAU,MAAMsE,MAAO,gBAArC,UACxB,oBAAItE,UAAU,gBAAd,4BACA,qBAAIA,UAAU,qBAAd,UACE,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASM,MAAOnS,UAAU,gBAD/C,IACgE,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASO,KAAMpS,UAAU,sBAG9F,SAAfkrB,GAAyB,eAAC/B,GAAA,EAAD,CAAcnpB,UAAU,MAAMsE,MAAO,YAArC,UACxB,oBAAItE,UAAU,YAAd,wBACA,qBAAIA,UAAU,iBAAd,UACE,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASE,KAAM/R,UAAU,gBAD9C,IAC+D,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASO,KAAMpS,UAAU,sBAG7F,UAAfkrB,GAA0B,eAAC/B,GAAA,EAAD,CAAcnpB,UAAU,MAAMsE,MAAO,iBAArC,UACzB,oBAAItE,UAAU,gBAAd,wBACA,qBAAIA,UAAU,qBAAd,UACE,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASO,KAAMpS,UAAU,gBAD9C,IAC+D,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASM,MAAOnS,UAAU,sBAG9F,SAAfkrB,GAAyB,eAAC/B,GAAA,EAAD,CAAcnpB,UAAU,MAAMsE,MAAO,YAArC,UACxB,oBAAItE,UAAU,YAAd,wBACA,qBAAIA,UAAU,iBAAd,UACE,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASO,KAAMpS,UAAU,gBAD9C,IAC+D,cAACmlB,EAAA,EAAD,CAAOnN,IAAKvG,KAAOI,SAASE,KAAM/R,UAAU,kCAiEzH,IAAMsrB,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACxC,SAASpB,GAAiBnqB,GAAQ,IAC1BgC,EAA4JhC,EAA5JgC,UADyB,EACmIhC,EAAjJgC,UAAaye,EADC,EACDA,aAAc+D,EADb,EACaA,cADb,IAC4BsF,mBAD5B,SACmDM,EAAgFpqB,EAAhFoqB,UAAWC,EAAqErqB,EAArEqqB,SAAU5B,EAA2DzoB,EAA3DyoB,UAAWpI,EAAgDrgB,EAAhDqgB,cAAeC,EAAiCtgB,EAAjCsgB,SAAUf,EAAuBvf,EAAvBuf,SAAUqB,EAAa5gB,EAAb4gB,SADtH,EAEc5gB,EAAvCwqB,oBAFyB,MAEV,KAFU,EAEDhL,EAFC,GAEcxf,EAFd,kBAG3Bsf,EAAQgB,GAAsBD,EAC9BmL,EAAS,KAJkB,EAKoB3L,IAAU4L,kBAAkBzpB,EAAWooB,EAAW5F,GAAe,GALrF,IAKzBkH,oBALyB,WAKVvH,EALU,MAKCwH,kBALD,MAKc,EALd,EAM3BC,EAAY,KAChB,GAAkB,SAAdxB,GAAwBvK,IAAU8J,gBAAgBlJ,GAAe,CACnE,IAAI8I,EAAS1J,IAAUiF,gBAAgBrE,GACvCmL,EAAY,cAACzL,EAAA,EAAD,CAAKpI,GAAG,OAAR,SACV,cAAC+J,EAAA,EAAD,CAAQhY,QAASggB,EAAcP,EAAS,YAAatpB,UAAU,aAAa+E,UAAWua,EAAUnV,QAASmV,EAAY,kBAAMqB,GAAS,SAAA0C,GAAK,MAAK,CAAEwG,aAAcxG,EAAMwG,sBAAmB3F,EAAWla,KAAMsV,EAAW,KAAO,KAA3N,SACGuK,EACC,iDAAmB,4BAAIjK,IAAUgM,iBAAiBtC,QAChD,kBAIV,GAA4B,kBAAjBmC,EACT,GAAInM,EAAU,CAMZiM,EAAS,cAAC3J,EAAA,EAAK/J,OAAN,UACP,eAAC8J,EAAA,EAAD,WACE,cAACzB,EAAA,EAAD,CAAKpI,GAAG,OAAR,SACE,cAAC4O,EAAA,EAAD,CAAgBC,MAAK,qBAAgB8E,EAAe,GAApD,SACG,YAAItrB,MAAMmrB,GAAa9C,IAAYpoB,QAAQC,KAAI,SAAAE,GAAC,OAC/C,eAACwmB,EAAA,EAAS7c,KAAV,CAAuBC,QAAS,kBAVpB6f,EAUyCG,EAVnC0B,EAU8CtrB,EAVrCogB,GAAS,SAAA0C,GAC5C,IAAIyI,EAAkBzI,EAAMyI,iBAAmB,GAE/C,OADAA,EAAgB9B,GAAQ6B,EACjB,CAAEC,sBAHU,IAAC9B,EAAM6B,GAUlB,wBAAgFtrB,EAAImrB,EAAa,IAA7EnrB,UAGzBorB,YAILJ,EAAS,cAAC3J,EAAA,EAAK/J,OAAN,UACP,eAAC8J,EAAA,EAAD,WACE,cAACzB,EAAA,EAAD,CAAKpI,GAAG,OAAR,iCACoB2T,EAAe,KAEnC,cAACvL,EAAA,EAAD,CAAKpI,GAAG,OAAR,SACG6T,SAMX,IAAII,EAAW,KACXC,EAAcpM,IAAUqM,eAAezL,EAAc2J,EAAW5F,EAAeiE,GAkBnF,OAjBIwD,IACFD,EAAW,cAACpK,EAAA,EAAD,UAAK,cAACzB,EAAA,EAAD,UACd,cAAC0B,EAAA,EAAD,CAAMhK,GAAG,cAAclO,KAAK,YAAY1J,UAAU,mBAAlD,SACE,cAACksB,GAAA,EAAD,CAAWlsB,UAAU,aAAa6J,QAAQ,QAA1C,SACG3G,OAAOE,QAAQ4oB,GAAa3rB,KAAI,WAAqB8rB,GAArB,uBAAEnY,EAAF,KAAWoL,EAAX,YAC/B,cAAC8M,GAAA,EAAUhiB,KAAX,CAA8BL,QAASsiB,EAAQ,EAAI,aAAe,eAAgBnsB,UAAU,MAA5F,SACE,gCACE,+BAAM,4BAAIyX,KAAKiB,YAAY1E,OAC3B,uBAAMhU,UAAU,yBAAhB,UAA0Cof,EAAS3H,KAAKC,YAAY1D,UAHnDA,eAYxB,eAAC4N,EAAA,EAAD,CAAMhK,GAAG,eAAelO,KAAK,YAAY1J,UAAU,QAAnD,UACJurB,EACD,eAAC3J,EAAA,EAAKrJ,KAAN,WACE,eAACoJ,EAAA,EAAD,CAAK3hB,UAAU,yBAAyBmK,QAASogB,EAAcjR,MAAO,CAAEoM,OAASpG,GAAYiL,EAAgB,UAAY,WAAzH,UACE,cAACrK,EAAA,EAAD,CAAKpI,GAAG,OAAO9X,UAAU,mCAAzB,SACE,cAACmlB,EAAA,EAAD,CAAOnN,IAAK4H,IAAUwM,aAAa5L,EAAc2J,GAAYnqB,UAAU,gBAEzE,eAACkgB,EAAA,EAAD,CAAKlgB,UAAU,cAAf,UACE,cAAC4hB,EAAA,EAAKpJ,MAAN,UAAaoH,IAAUyM,cAAc7L,EAAc2J,KACnD,cAACvI,EAAA,EAAK0K,SAAN,UAAgBlC,UAGnBxK,IAAU2M,kBAAkB/L,EAAc2J,GAAW9pB,KAAI,SAACmsB,EAASjsB,GAAO,IAAD,EAGxE,GAFuB,oBAAZisB,IACTA,EAAUA,EAAQjI,EAAeiE,KAC9BgE,EAAS,OAAO,KAErB,IAAIC,EAAaD,EAAQ9iB,KACC,oBAAf+iB,IACTA,EAAaA,EAAWhB,EAAcpM,EAAMI,WAAY1d,IAC1D,IAAI2qB,EAASF,EAAQE,QAAU,GAE3BtqB,EAAcoqB,EAAQpqB,YACC,oBAAhBA,IACTA,EAAcA,EAAYqpB,EAAclH,EAAeiE,IACzD,IAAIhC,EAAiB,KACrB,GAAIpkB,EAAa,CACf,IAAI2B,EAAiBC,KAAiB6e,kBAAkB9gB,EAAU4qB,mBAAoB,CAAE7J,OAAQqH,EAAWpH,QAAS3gB,EAAYwqB,iBAC5H5J,EAAmB,GACnB6J,EAAoB,GACpB9oB,IACFif,EAAmBpD,IAAUkN,0BAA0B1qB,EAAa2B,EAAgB,IAEpFif,EAAmB9f,OAAOC,YAAYD,OAAOE,QAAQ4f,GAAkB3f,QAAO,mCAAEM,EAAF,gBAAsB,qBAARA,MAC5FkpB,EAAoBjN,IAAUmN,2BAA2B3qB,EAAa2B,EAAgB,KAIxFyiB,EAAiB,cAAC7E,EAAA,EAAD,UAAK,cAACzB,EAAA,EAAD,UACpB,eAAC0B,EAAA,EAAD,CAAMhK,GAAG,cAAclO,KAAK,YAAY1J,UAAU,mBAAlD,UACE,cAAC4hB,EAAA,EAAK/J,OAAN,UACE,cAAC3O,GAAA,EAAD,CAAqBnE,UAAWua,EAC9Bld,YAAaA,EACb2B,eAAgBA,EAChBoF,eARa,SAACpF,GAAD,OAAoB4c,GAAS,SAAA0C,GAAK,MACpD,CAAEsJ,mBAAoB3oB,KAAiBmF,eAAeka,EAAMsJ,mBAAoB,CAAE7J,OAAQqH,EAAWpH,QAAS3gB,EAAYwqB,gBAAkB7oB,QAQvIqF,OAAQ,+BAAOhH,EAAYuH,gBAE/B,eAACuiB,GAAA,EAAD,CAAWlsB,UAAU,aAAa6J,QAAQ,QAA1C,UACG3G,OAAOE,QAAQ4f,GAAkB3iB,KAAI,WAAqB8rB,GAArB,uBAAEnY,EAAF,KAAWoL,EAAX,YACpC,cAAC8M,GAAA,EAAUhiB,KAAX,CAA8BL,QAASsiB,EAAQ,EAAI,aAAe,eAAgBnsB,UAAU,MAA5F,SACE,gCACE,+BAAM,4BAAIyX,KAAKiB,YAAY1E,OAC3B,uBAAMhU,UAAU,yBAAhB,UAA0Cof,EAAS3H,KAAKC,YAAY1D,UAHnDA,MAOtB6Y,EAAkBxsB,KAAI,SAAC2sB,EAAWzsB,GAAZ,eAAkB,cAAC0sB,GAAD,aAAwDd,MAAO5rB,IAAqB,QAAhB,EAAAyiB,SAAA,eAAkB/J,SAAU,IAAhG,aAA0GiU,MAAOF,EAAWvB,eAAcjD,aAAcjJ,IAArIhf,IAAqB,QAAhB,EAAAyiB,SAAA,eAAkB/J,SAAU,iBAKrG,OAAO,cAAC0I,EAAA,EAAD,CAAK3hB,UAAU,OAAf,SAA0C,eAACkgB,EAAA,EAAD,CAAKpI,GAAI,GAAT,UAC/C,+BAAO2U,IACNC,EAAOzT,OAAS,GAAK,cAACiT,GAAA,EAAD,CAAWlsB,UAAU,yBAArB,gBACnB0sB,QADmB,IACnBA,GADmB,UACnBA,EAAQrsB,WADW,aACnB,OAAAqsB,GAAc,SAACQ,EAAO3sB,GAAR,OAAc,cAAC0sB,GAAD,aAAsBd,MAAO5rB,GAA7B,aAAsC2sB,QAAOzB,eAAcjD,aAAcjJ,IAAtDhf,QAEjDimB,MAL+B,UAAYjmB,MAQ/CwrB,QAIP,SAASkB,GAAaltB,GAAQ,IAAD,MACrBgC,EAAwIhC,EAAxIgC,UADqB,EACmHhC,EAA7HgC,UAAa0e,EADH,EACGA,uBAAwB8D,EAD3B,EAC2BA,cAAiB2I,EAAuEntB,EAAvEmtB,MAAOf,EAAgEpsB,EAAhEosB,MADnD,EACmHpsB,EAAzD0rB,oBAD1D,MACyE,EADzE,EAC4EjD,EAAuCzoB,EAAvCyoB,UAAWpI,EAA4BrgB,EAA5BqgB,cAAeC,EAAatgB,EAAbsgB,SAC7HhB,EAAQgB,GAAsBD,EAGlC,GAFqB,oBAAV8M,IACTA,EAAQA,EAAM3I,EAAeiE,KAC1B0E,EAAO,OAAO,KAEnB,IAAIC,EAAYD,EAAMxjB,KACG,oBAAdyjB,IACTA,EAAS,UAAGA,SAAH,aAAG,EAAY1B,EAAcpM,EAAMI,WAAY1d,IAE1D,IAAIqrB,EAAeF,EAAMrjB,SAAW,GACR,oBAAjBujB,IACTA,EAAY,UAAGA,SAAH,aAAG,EAAe3B,EAAcpM,EAAMI,WAAY1d,IAEhE,IAAIsrB,EAAaH,EAAMI,SACG,oBAAfD,IACTA,EAAU,UAAGA,SAAH,aAAG,EAAa5B,EAAcpM,EAAMI,WAAY1d,IACxDsrB,IACFA,EAAa,cAAClJ,GAAA,EAAD,CACXnK,UAAU,MACVC,QAAS,cAACmK,GAAA,EAAD,UAAUiJ,IAFR,SAIX,cAAC,IAAD,CAAiBztB,KAAMmrB,IAAkB/qB,UAAU,OAAOsZ,MAAO,CAAEoM,OAAQ,aAG/E,IACoC,EADhC6H,EAAWL,EAAM5oB,MAAQ4oB,EAAM5oB,MAAQ4oB,EAAMM,SACzB,oBAAbD,IACTA,EAAQ,UAAGA,SAAH,aAAG,EAAW9B,EAAcpM,EAAMI,WAAY1d,IAMxD,GAJwB,kBAAbwrB,IACTA,EAAWhZ,KAAKkZ,MAAMF,IAGpB9M,GAA0BL,GAAqC,kBAAbmN,EAAuB,CAAC,IAAD,MACvEG,EAAmBR,EAAM5oB,MAAQ4oB,EAAM5oB,MAAQ4oB,EAAMM,SACzB,oBAArBE,IACTA,EAAmB9nB,SAAQ,UAAC8nB,SAAD,iBAAC,EAAmBjC,EAAcrL,EAAcX,WAAY1d,UAA5D,iBAAC,EAAuEsX,eAAxE,aAAC,SAAiF,KAC/G,IAAIyG,EAAOyN,EAAWG,EACtBH,EAAW,iCAAOG,EAAkB5N,EAAO,uBAAM9f,UAAW8f,EAAO,EAAI,eAAiB,cAA7C,eAA+DA,EAAO,EAAI,IAAM,GAAIA,EAApF,OAAoG,MAGjJ,OAAO,cAACoM,GAAA,EAAUhiB,KAAX,CAAgBL,QAASsiB,EAAQ,EAAI,aAAe,eAAgBnsB,UAAU,MAA9E,SACL,gCACE,iCAAM,4BAAImtB,IAAeE,KACzB,sBAAMrtB,UAAS,sCAAiCotB,GAAhD,SAAkEG,SCtexE,IAAMI,GAAazY,IAAMC,YACvB,WAA+D9M,GAAS,IAArE+L,EAAoE,EAApEA,SAAUkF,EAA0D,EAA1DA,MAAOtZ,EAAmD,EAAnDA,UAA8B4tB,EAAqB,EAAxC,mBAC7B,OACE,qBACEvlB,IAAKA,EACLiR,MAAO,CAAEA,QAAOuU,SAAU,SAC1B7tB,UAAWA,EACX8tB,kBAAiBF,EAJnB,SAME,cAACjM,EAAA,EAAD,UACGzM,IAAMmJ,SAAS0P,QAAQ3Z,GAAU/T,KAAI,SAAC2tB,EAAOztB,GAAR,OAAc,cAAC2f,EAAA,EAAD,CAAapI,GAAI,EAAjB,SAAqBkW,GAAXztB,aAOnD0tB,G,kDACnB,WAAYluB,GAAQ,IAAD,8BACjB,cAAMA,IAkDRmuB,qBAAuB,WACjB,EAAK7K,MAAMvJ,IACb,EAAK6G,SAAS3J,IAAkBC,aAAa,EAAKoM,MAAMvJ,KAE1D,EAAK/Z,MAAMoW,YAAc,EAAKpW,MAAMoW,cAAgB,EAAKA,eAvDxC,EAyDnBgY,YAAc,SAACjL,GAAD,OAAS,EAAKvC,SAASuC,IAzDlB,EA0DnBkL,gBAAkB,SAAC5N,GAAD,OAChB,EAAKG,SAAS,CAAEH,eAAcjf,KAAM8sB,YAA0BzO,IAAU0O,UAAU9N,IAAgB0F,OAAQ+H,EAAqBM,gBAAgB/N,GAAeyK,aAAc,KAAMpB,aAAa,KA3D9K,EA4DnB2E,YAAc,SAAC1tB,GAAD,OACZ,EAAK6f,SAAS,CAAE7f,cA7DC,EA+DnB0jB,YAAc,SAACxQ,EAAS1P,GAAV,OAAoB,EAAKqc,UAAS,SAAA0C,GAC9C,IAAIoL,EAAoBpL,EAAMoL,kBAE9B,OADkB7O,IAAUuI,iBAAiB,EAAK9E,MAAOrP,KACrC1P,UACXmqB,EAAkBza,GAClB,CAAEya,uBAETA,EAAkBza,GAAW1P,EACtB,CAAEmqB,0BAvEM,EA2EnBhK,iBAAmB,SAACF,GAAD,OAAmB,EAAK5D,SAAS,CAAE4D,mBAzEpDmK,cACI3uB,EAAM4uB,YACR,EAAKtL,MAAQrM,IAAkBC,aAAalX,EAAM4uB,aAElD,EAAKtL,MAAQ4K,EAAqBW,kBANnB,E,gEA4EE,IAAD,OAClBC,QAAQC,IAAI,CACVlP,IAAUmP,yBACVvuB,IAAOG,sBACP8V,IAASuY,0BACRjpB,MAAK,kBAAM,EAAKoQ,mB,2CAKnB,GAFI1V,KAAKV,MAAM4uB,aAAeluB,KAAK4iB,MAAMvJ,KAAOrZ,KAAKV,MAAM4uB,aACzDluB,KAAKkgB,SAAS3J,IAAkBC,aAAaxW,KAAKV,MAAM4uB,cACtDluB,KAAKV,MAAMuf,SAAU,CAEvB,IAAI+D,EAAQ4L,YAAUxuB,KAAK4iB,OAE3B,UADOA,EAAM5C,uBACThgB,KAAK4iB,MAAMvJ,GACb9C,IAAkBkY,gBAAgB7L,OAC7B,CACL,IAAIvJ,EAAK9C,IAAkBmY,aAAa9L,GACxC5iB,KAAKkgB,SAAS,CAAE7G,W,+BAIZ,IAAD,qBACuCrZ,KAAKV,MAA7CqvB,EADC,EACDA,OAAQ/O,EADP,EACOA,SAAUf,EADjB,EACiBA,SAAU+P,EAD3B,EAC2BA,QAC9BttB,EAAYtB,KAAK4iB,MAFd,EAGkD5iB,KAAK4iB,MAAxD7C,EAHC,EAGDA,aAAc1f,EAHb,EAGaA,SAAU2f,EAHvB,EAGuBA,uBAC1BL,EAAgBR,IAAU0P,eAAe7uB,KAAK4iB,OAC9CkM,EAAoB,iCACtB,cAACpK,EAAA,EAAD,CAAOnN,IAAK4H,IAAU4P,SAAShP,GAAexgB,UAAU,0BAA0B2lB,eAAa,IAC/F,qBAAI3lB,UAAU,WAAd,cAA2B4f,IAAUsF,QAAQ1E,GAA7C,UAGF,OAAQ,eAACoB,EAAA,EAAD,CAAMhK,GAAG,cAAclO,KAAK,YAA5B,UACN,cAACkY,EAAA,EAAK/J,OAAN,UACE,eAAC8J,EAAA,EAAD,WACE,cAACzB,EAAA,EAAD,CAAKpI,GAAI,OAAT,SAEGwH,EAAW,eAACmQ,EAAA,EAAD,WACV,eAAC1I,EAAA,EAAD,WACE,cAAC2I,EAAA,EAAD,CAAgBna,GAAIsM,IAApB,SACG0N,IAEH,cAACxI,EAAA,EAAS9c,KAAV,CAAesL,GAAIoY,GAAnB,SACG/N,IAAU+P,sBAAsBtvB,KAAI,SAAAuvB,GAAO,OAC1C,cAAC7I,EAAA,EAAS7c,KAAV,CAA6BC,QAAS,kBAAM,EAAKikB,gBAAgBwB,IAAjE,SACE,iCACE,cAACzK,EAAA,EAAD,CAAOnN,IAAK4H,IAAU4P,SAASI,GAAU5vB,UAAS,oCAA+B4f,IAAUwF,QAAQwK,GAAjD,QAAiExX,WAAS,IAC5H,qBAAIpY,UAAU,gBAAd,UAA+B4f,IAAUsF,QAAQ0K,GAAjD,WAHgBA,WAQ1B,eAAClJ,EAAA,EAAD,CAAgBnR,GAAIka,IAAa9I,MAC/B,qBAAI3mB,UAAU,WAAd,UAA0B4f,IAAUiQ,cAAc/uB,GAAlD,OADF,UAGE,cAACimB,EAAA,EAASC,SAAV,UACE,+DAEDpH,IAAUkQ,eAAezvB,KAAI,SAAA0vB,GAAM,OAClC,cAAChJ,EAAA,EAAS7c,KAAV,CAA4BC,QAAS,kBAAM,EAAKqkB,YAAYuB,IAA5D,SACE,+BAAMnQ,IAAUiQ,cAAcE,GAA9B,QADkBA,YAIT,iCAAOR,EAAP,SAAgC3P,IAAUC,yBAAyBpf,KAAK4iB,MAAO,mBAGlG,cAACnD,EAAA,EAAD,CAAKlgB,UAAU,YAAf,SACGsf,EAAW,eAACwE,EAAA,EAAD,WACV,cAACA,EAAA,EAAWC,QAAZ,UACE,eAACD,EAAA,EAAWE,KAAZ,WAAiB,cAAC,IAAD,CAAiBpkB,KAAMowB,MAAxC,aAEF,cAACC,EAAA,EAAD,CAAaprB,YAAY,OACvBP,MAAO7D,KAAK4iB,MAAM9hB,KAClB8D,SAAU,SAACC,GAAD,OAAO,EAAKqb,SAAS,CAAEpf,KAAM+D,EAAEC,OAAOjB,cAGlD,cAACsd,EAAA,EAAKpJ,MAAN,CAAYxY,UAAU,yBAAtB,SAA+C,+BAAOS,KAAK4iB,MAAM9hB,WAGpE8e,EAAW,cAACH,EAAA,EAAD,CAAKpI,GAAG,OAAR,SACV,eAAC2X,EAAA,EAAD,WACE,cAAC5N,EAAA,EAAD,CAAQhY,QAAS4W,EAAyB,UAAY,UAAW1b,UAAW0b,EAAwBtW,QAAS,kBAAM,EAAKwW,SAAS,CAAEF,wBAAwB,KAA3J,SACE,8DAEF,cAACoB,EAAA,EAAD,CAAQhY,QAAU4W,EAAqC,UAAZ,UAAuB1b,SAAU0b,EAAwBtW,QAAS,kBAAM,EAAKwW,SAAS,CAAEF,wBAAwB,KAA3J,SACE,6EAGG,KACT,cAACP,EAAA,EAAD,CAAKpI,GAAG,OAAR,SACE,cAAC+J,EAAA,EAAD,CAAQhY,QAAQ,SAASM,QAASklB,EAAlC,SACE,cAAC,IAAD,CAAiBzvB,KAAMswB,eAI/B,cAACtO,EAAA,EAAKrJ,KAAN,UAEE,eAAC,EAAImF,UAAL,CAAeyS,iBAAkB9P,EAAW,eAAiB,SAAUnF,cAAc,EAArF,UACE,eAACkV,EAAA,EAAD,CAAKvmB,QAAQ,QAAQ7J,UAAU,YAA/B,UACE,cAACowB,EAAA,EAAIlmB,KAAL,UACE,cAACkmB,EAAA,EAAIC,KAAL,CAAUjU,SAAS,YAAnB,yBAEDiE,EAAW,cAAC+P,EAAA,EAAIlmB,KAAL,UACV,cAACkmB,EAAA,EAAIC,KAAL,CAAUjU,SAAS,eAAnB,6BACY,KACd,cAACgU,EAAA,EAAIlmB,KAAL,UACE,cAACkmB,EAAA,EAAIC,KAAL,CAAUjU,SAAS,YAAnB,SAAgCiE,EAAW,oBAAsB,gBAEnE,cAAC+P,EAAA,EAAIlmB,KAAL,UACE,eAACkmB,EAAA,EAAIC,KAAL,CAAUjU,SAAS,SAASrX,SAAiI,eAA5E,UAAA6a,IAAU0Q,YAAY9P,UAAtB,mBAAqC+P,cAArC,mBAA6CC,aAA7C,eAAoDjvB,OAAQ,YAA7I,qBAA+P,eAA5E,UAAAqe,IAAU0Q,YAAY9P,UAAtB,mBAAqC+P,cAArC,mBAA6CC,aAA7C,eAAoDjvB,OAAQ,aAA8B,cAAC0T,EAAA,EAAD,CAAOpL,QAAQ,UAAf,sBAE/Q,cAACumB,EAAA,EAAIlmB,KAAL,UACE,eAACkmB,EAAA,EAAIC,KAAL,CAAUjU,SAAS,OAAOrX,UAAQ,EAAlC,kBAAwC,cAACkQ,EAAA,EAAD,CAAOpL,QAAQ,UAAf,yBAG5C,eAAC,EAAI8T,QAAL,WACE,cAAC,EAAIC,KAAL,CAAUxB,SAAS,YAAnB,SACE,cAACkI,GAAD,aACE3D,SAAUlgB,KAAK0tB,YACf3J,YAAa/jB,KAAK+jB,YAClBC,iBAAkBhkB,KAAKgkB,kBACnB,CAAE1iB,YAAWud,WAAUc,gBAAeC,gBAG9C,cAAC,EAAIzC,KAAL,CAAUxB,SAAS,YAAnB,SACE,cAAC,GAAD,2BAA2B,CAAEra,YAAWqe,gBAAed,WAAUnJ,YAAa1V,KAAKytB,uBAAnF,IAA2GvN,SAAUlgB,KAAK0tB,iBAE3H9N,EAAW,cAAC,EAAIzC,KAAL,CAAUxB,SAAS,eAAnB,SACV,cAAC,GAAD,eAA2B,CAAEra,YAAWse,WAAUD,gBAAed,WAAUnJ,YAAa1V,KAAKytB,0BACjF,KACd,cAAC,EAAItQ,KAAL,CAAUxB,SAAS,SAAnB,SACE,cAACkM,GAAD,2BAAyB,CAAEvmB,YAAWse,WAAUD,gBAAed,aAA/D,IAA2EqB,SAAUlgB,KAAK0tB,YAAa3J,YAAa/jB,KAAK+jB,yBAKhI4K,GAAU,cAACxN,EAAA,EAAKhI,OAAN,UACRwV,W,GAtNyCla,IAAMM,WAAnCyY,GAUZwC,aAAe,CACpBlvB,KAAM,GACNif,aAAc,GACd1f,SAAU,KACVynB,QAAS,MACT0C,aAAc,KACdyF,kBAAmB,GACnBhQ,qBAAsB,GACtB+N,kBAAmB,GACnBvI,OAAQ,CACNviB,IAAK,GACL7C,SAAUI,IAAgB,GAC1BW,YAAa,EACb6B,gBAAiB,EACjBG,eAAgB,EAChBE,eAAgB,GAElB+nB,gBAAiB,CACf6E,KAAM,EACNH,MAAO,EACPI,MAAO,GAET/G,aAAa,EACb8C,mBAAoB,GACpBpI,cAAe,EACf9D,wBAAwB,GAnCPwN,GAqCZM,gBAAkB,SAAC/N,GACxB,IAAI0F,EAAS+I,YAtCIhB,GAsCWwC,aAAavK,QAEzC,OADAA,EAAOviB,IAAMT,OAAO9C,KAAKI,IAAOwC,iBAAiB4c,IAAUmF,iBAAiBvE,KAAgB,GACrF0F,GAxCU+H,GA2CZW,gBAAkB,WACvB,IAAIvL,EAAQ4L,YAAUhB,GAAqBwC,cAM3C,OAJApN,EAAM7C,aAAe6N,YAA0BzO,IAAU+P,uBACzDtM,EAAM9hB,KAAO8sB,YAA0BzO,IAAU0O,UAAUjL,EAAM7C,eAEjE6C,EAAM6C,OAjDW+H,GAiDGM,gBAAgBlL,EAAM7C,cACnC6C,I,kIChFPrN,EAAe,CACjBnM,aAASqa,EACT7H,QAAQ,EACRtX,UAAU,GAER8rB,EAA6B3b,IAAMC,YAAW,SAAU7M,EAAMD,GAChE,IAAI+M,EAAW9M,EAAK8M,SAChBiH,EAAS/T,EAAK+T,OACdtX,EAAWuD,EAAKvD,SAChB/E,EAAYsI,EAAKtI,UACjB6J,EAAUvB,EAAKuB,QACfinB,EAASxoB,EAAKwoB,OACdvb,EAAKjN,EAAKiN,GACV6G,EAAW9T,EAAK8T,SAChBjS,EAAU7B,EAAK6B,QACfpK,EAAQ0V,YAA8BnN,EAAM,CAAC,WAAY,SAAU,WAAY,YAAa,UAAW,SAAU,KAAM,WAAY,YAEvI8M,EAAWO,YAAmBP,EAAU,mBACxC,IAAI2b,EAAcC,uBAAY,SAAUC,GACtC,GAAIlsB,EAGF,OAFAksB,EAAMC,sBACND,EAAME,kBAIJhnB,GAASA,EAAQ8mB,KACpB,CAAClsB,EAAUoF,IAOd,OALIpF,QAA+Bmf,IAAnBnkB,EAAMqxB,WACpBrxB,EAAMqxB,UAAY,EAClBrxB,EAAM,kBAAmB,GAGPmV,IAAMU,cAAcyb,IAAiBxb,YAAS,CAChExN,IAAKA,GACJtI,EAAO,CAERqc,SAAUD,YAAaC,EAAUrc,EAAMqpB,MAEvC7T,GAAIA,IAAOub,EAAS/wB,EAAMqpB,KAAO,IAAM,SAAW,OAClDjf,QAAS4mB,EACT/wB,UAAW8V,IAAW9V,EAAWoV,EAAUiH,GAAU,SAAUtX,GAAY,WAAY8E,GAAWuL,EAAW,IAAMvL,EAASinB,GAAU1b,EAAW,iBAGrJyb,EAAc7a,aAAeA,EAC7B6a,EAAc9a,YAAc,gBACb8a,QC5CX7a,EAAe,CACjBnM,aAASqa,EACToN,gBAAYpN,GAEVgI,EAAyBhX,IAAMC,YAAW,SAAUpV,EAAOsI,GAC7D,IAYIkpB,EAZA5W,EAAmBC,YAAgB7a,EAAO,CAC5C8a,UAAW,aAET7a,EAAY2a,EAAiB3a,UAC7BwxB,EAAkB7W,EAAiBvF,SACnCvL,EAAU8Q,EAAiB9Q,QAC3BynB,EAAa3W,EAAiB2W,WAC9B9S,EAAsB7D,EAAiBpF,GACvCA,OAA6B,IAAxBiJ,EAAiC,MAAQA,EAC9CC,EAAkBhJ,YAA8BkF,EAAkB,CAAC,YAAa,WAAY,UAAW,aAAc,OAErHvF,EAAWO,YAAmB6b,EAAiB,cAUnD,OANED,EADED,GACiC,IAAfA,EAAsB,aAAe,cAAgBA,EAErD,KAIFpc,IAAMU,cAAc6b,IAAa5b,YAAS,CAC5DxN,IAAKA,GACJoW,EAAiB,CAClBlJ,GAAIA,EACJvV,UAAW8V,IAAW9V,EAAWoV,EAAUvL,GAAWuL,EAAW,IAAMvL,EAAS0nB,GAAqBnc,EAAW,IAAMmc,SAG1HrF,EAAUlW,aAAeA,EACzBkW,EAAUnW,YAAc,YACxBmW,EAAUhiB,KAAO2mB,EACF3E,O,wLCnCMtM,E,WAEnB,aAAgB,GAAD,oBAAKnf,gBAAgBmf,EAAW,MAAMlf,MAAM,0C,iEAuNpCiuB,GACrB,IAAI5sB,EAAYiV,IAAkBC,aAAa0X,GAC3C5sB,EAAU2uB,mBACZxtB,OAAOsgB,OAAOzhB,EAAU2uB,mBAAmBtqB,SAAQ,SAAAqd,GAAK,OACtD7M,IAAiB8a,kBAAkBjO,EAAO,OAC9CzM,IAAkB2a,oBAAoBhD,O,KA9NrB/O,EAGZmP,uBAAyB,kBAAMra,KAHnBkL,EAIZuI,iBAAmB,SAACpmB,EAAWiS,GAAyB,IAAhBjT,EAAe,uDAAN,EAChDyf,EAA2Bze,EAA3Bye,aAAc1f,EAAaiB,EAAbjB,SACpB,GAAgB,uBAAZkT,EAAkC,OANrB4L,EAMiCgS,sBAAsBpR,GACxE,GAAgB,uBAAZxM,EAAkC,OAPrB4L,EAOiCiS,sBAAsBrR,EAAc1f,GACtF,GAAgB,eAAZkT,EAA0B,OAAOxT,IAAOgD,iCAAP,OAAwCzB,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAWmkB,QACxF,GAAgB,eAAZlS,GAAwC,gBAAZA,EAA2B,OAT1C4L,EASsD0F,SAASxkB,GAChF,GAAgB,kBAAZkT,GAA+BA,EAAQ0N,SAAS,iBAAkB,OAAO,GAC7E,GAAI1N,KAAWc,IAAmB,OAAOA,IAAkBd,GAC3D,IAAI8d,EAZalS,EAYO0Q,YAAY9P,GACpC,OAAIsR,GAAgB9d,KAAW8d,EAAaC,SAAiBD,EAAaC,SAAS/d,GAblE4L,EAagFoS,qBAAqBlxB,IAC/GC,GAdU6e,EAiBZ0Q,YAAc,SAACV,GAAD,OAAanb,IAAcmb,IAjB7BhQ,EAkBZgM,iBAAmB,SAACqG,GAAD,MAAelxB,EAAf,uDAAwB,GAAxB,MAAgD,aAAjBkxB,EAA8B,YAA2B,OAAb9rB,UAAa,IAAbA,KAAA,UAAAA,IAAgB8rB,UAAhB,eAA+B1wB,OAAQR,GAlBzH6e,EAmBZ+P,oBAAsB,kBAAMzsB,OAAO9C,KAAKqU,MAnB5BmL,EAqBZsF,QAAU,SAAC0K,GAAD,MAAU7uB,EAAV,uDAAmB,GAAnB,OAA2B,UArBzB6e,EAqB8B0Q,YAAYV,UAAjB,eAA2BruB,OAAQR,GArB5D6e,EAsBZwF,QAAU,SAACwK,GAAD,MAAU7uB,EAAV,uDAAmB,EAAnB,OAA0B,UAtBxB6e,EAsB6B0Q,YAAYV,UAAjB,eAA2B/I,OAAQ9lB,GAtB3D6e,EAuBZiF,gBAAkB,SAAC+K,GAAD,MAAU7uB,EAAV,uDAAmB,GAAnB,OAA2B,UAvBjC6e,EAuBsC0Q,YAAYV,UAAjB,eAA2BhL,aAAc7jB,GAvB1E6e,EAwBZ6H,iBAAmB,kBAAMvkB,OAAO9C,KAAK+F,MAxBzByZ,EAyBZmF,iBAAmB,SAAC6K,GAAD,MAAU7uB,EAAV,uDAAmB,GAAnB,OAA2B,UAzBlC6e,EAyBuC0Q,YAAYV,UAAjB,eAA2B9K,gBAAiB/jB,GAzB9E6e,EA0BZ4F,qBAAuB,SAACoK,GAAD,MAAU7uB,EAAV,uDAAmB,GAAnB,OAA2B,UA1BtC6e,EA0B2C0Q,YAAYV,UAAjB,eAA2BsC,oBAAqBnxB,GA1BtF6e,EA2BZ0O,UAAY,SAACsB,GAAD,MAAU7uB,EAAV,uDAAmB,GAAnB,OAA2B,UA3B3B6e,EA2BgC0Q,YAAYV,UAAjB,eAA2BuC,SAAUpxB,GA3BhE6e,EA8BZkQ,aAAe,kBAAM5sB,OAAO9C,KAAKuU,MA9BrBiL,EA+BZiQ,cAAgB,SAAC/uB,GAAD,MAAWC,EAAX,uDAAoB,GAApB,OAAsC,OAAV4T,UAAU,IAAVA,KAAA,UAAAA,IAAa7T,UAAb,eAAwBS,OAAQR,GA/BhE6e,EAgCZoS,qBAAuB,SAAClxB,GAAD,OAhCX8e,EAgC8BkQ,eAAe3uB,QAAQL,IAhCrD8e,EAiCZ0F,SAAW,SAACxkB,GAAD,MAAWC,EAAX,uDAAoB,EAApB,OAAqC,OAAV4T,UAAU,IAAVA,KAAA,UAAAA,IAAa7T,UAAb,eAAwB8T,QAAS7T,GAjC3D6e,EAkCZ6I,aAAe,SAAC3nB,GAAD,MAAWC,EAAX,uDAAoB,EAApB,OAAqC,OAAV4T,UAAU,IAAVA,KAAA,UAAAA,IAAa7T,UAAb,eAAwB+T,QAAS9T,GAlC/D6e,EAqCZwS,mBAAqB,SAACxC,GAAD,uBArCThQ,EAqC2B0Q,YAAYV,UAA9B,aAAa,EAA2ByC,gBArCjDzS,EAsCZgS,sBAAwB,SAAChC,GAAD,uBAtCZhQ,EAsC8BwS,mBAAmBxC,UAArC,aAAa,EAAkCjsB,KAtC3Dic,EAuCZiS,sBAAwB,SAACjC,EAAS9uB,GAAV,yBAvCZ8e,EAuCwCwS,mBAAmBxC,UAA/C,iBAAuB,EAAkCtrB,aAAzD,aAAuB,EAvCnCsb,EAuCkFoS,qBAAqBlxB,KAvCvG8e,EAyCZ4P,SAAW,SAACI,GAAD,MAAU7uB,EAAV,uDAAmB,KAAnB,OAA4B,UAzC3B6e,EAyCgC0Q,YAAYV,UAAjB,eAA2B0C,WAAYvxB,GAzClE6e,EA0CZqF,QAAU,SAAC2K,GAAD,MAAU7uB,EAAV,uDAAmB,KAAnB,OAA4B,UA1C1B6e,EA0C+B0Q,YAAYV,UAAjB,eAA2B2C,UAAWxxB,GA1ChE6e,EA2CZwM,aAAe,SAACwD,EAASzF,GAAV,UAAqBppB,EAArB,uDAA8B,KAA9B,OAAuC,UA3C1C6e,EA2C+C0Q,YAAYV,UAAjB,mBAA2BW,cAA3B,mBAAoCpG,UAApC,eAAgD7nB,MAAOvB,GA3CjG6e,EA4CZ6F,oBAAsB,SAACmK,EAAS4C,GAAV,UAAsBzxB,EAAtB,uDAA+B,KAA/B,OAAwC,UA5ClD6e,EA4CuD0Q,YAAYV,UAAjB,mBAA2BW,cAA3B,0CAAoDiC,EAAa,WAAjE,eAAuElwB,MAAOvB,GA5ChI6e,EA+CZyM,cAAgB,SAACuD,EAASzF,GAAV,UAAqBppB,EAArB,uDAA8B,GAA9B,OAAqC,UA/CzC6e,EA+C8C0Q,YAAYV,UAAjB,mBAA2BW,cAA3B,mBAAoCpG,UAApC,eAAgD5oB,OAAQR,GA/CjG6e,EAiDZ6S,oBAAsB,SAACjS,EAAc2J,EAAW5F,GAA+B,IAAD,EAAfxjB,EAAe,uDAAN,EAE7E,GAAkB,UAAdopB,GAAuC,UAAdA,EAAuB,OAAOppB,EAE3D,IADA,IAAI2xB,GAAU,UApDG9S,EAoDE0Q,YAAY9P,UAAjB,eAAgC+P,SAAU,GAC/ChwB,EAAI,EAAGA,GAAKgkB,EAAehkB,IAAK,CAAC,IAAD,EACnCoyB,GAAc,UAAAD,EAAQ,gBAAD,OAAiBnyB,WAAxB,eAA8BoyB,cAAe,GAC3DC,EAAa1vB,OAAOE,QAAQuvB,GAAaE,MAAK,mCAAElvB,EAAF,iBAAgBA,IAAQwmB,KAC1E,GAAIyI,EAAY,OAAOA,EAAW,GAEpC,OAAO7xB,GA1DU6e,EA4DZ4L,kBAAoB,SAACzpB,EAAWooB,EAAW5F,GAAsC,IAAvBuO,EAAsB,wDACrF,GAAkB,SAAd3I,GAAsC,UAAdA,GAAuC,UAAdA,EAAuB,CAAC,IAAD,EACtEsB,GAAwB,OAAT1pB,QAAS,IAATA,GAAA,UAAAA,EAAW+pB,uBAAX,eAA6B3B,KAAc,EAC1DuB,EA/DW9L,EA+DO6S,oBAAL,OAAyB1wB,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAWye,aAAc2J,EAAW5F,GAE9E,OADAkH,EAAepG,YAAMoG,EAAeC,EAAY,EAAG,IAC5CoH,EAAY,CAAErH,eAAcC,cAAeD,EAC7C,OAAOqH,EAAY,GAAK,MAlEdlT,EAoEZ2M,kBAAoB,SAACqD,EAASzF,GAAV,UAAqBppB,EAArB,uDAA8B,GAA9B,OAAqC,UApE7C6e,EAoEkD0Q,YAAYV,UAAjB,mBAA2BW,cAA3B,mBAAoCpG,UAApC,eAAgD5hB,WAAYxH,GApEzG6e,EAqEZmT,gBAAkB,SAACnD,EAASzF,GAAV,UAAqBppB,EAArB,uDAA8B,GAA9B,OAAqC,UArE3C6e,EAqEgD0Q,YAAYV,UAAjB,mBAA2BW,cAA3B,mBAAoCpG,UAApC,eAAgDuC,SAAU3rB,GArErG6e,EAsEZqM,eAAiB,SAAC2D,EAASzF,EAAW5F,EAAeiE,GAA8B,IAAD,MAAlBznB,EAAkB,uDAAT,KAC1EgC,EAAK,UAvEQ6c,EAuEA0Q,YAAYV,UAApB,iBAAG,EAA2BW,cAA9B,iBAAG,EAAoCpG,UAAvC,aAAG,EAAgDpnB,MAC5D,MAAqB,oBAAVA,EACFA,EAAMwhB,EAAeiE,GACvBzlB,GAAShC,GA1EC6e,EA4EZoT,kBAAoB,SAACpD,EAASrL,EAAeiE,GAAe,IAAD,EAC5DkK,GAAU,UA7EG9S,EA6EE0Q,YAAYV,UAAjB,eAA2BW,SAAU,GAC/C0C,EAAW,GAKf,OAJA/vB,OAAO9C,KAAKsyB,GAAStsB,SAAQ,SAAA+jB,GAC3B,IAAIpnB,EAhFW6c,EAgFEqM,eAAe2D,EAASzF,EAAW5F,EAAeiE,GAC/DzlB,GAAOkwB,EAAS5sB,KAAKtD,MAEpBkwB,GAnFUrT,EAqFZsT,qBAAuB,SAACtD,EAASzF,EAAWyC,EAAgBnB,EAAclH,EAAeiE,GAA8B,IAAD,EAAlBznB,EAAkB,uDAAT,KAC9GoyB,EAtFavT,EAsFF2M,kBAAkBqD,EAASzF,GACtCiJ,EAAO,KAFgH,cAGrGD,GAHqG,IAG3H,2BAA2B,CAAC,IAAD,EAAhB3G,EAAgB,QACrB6G,EAAW7G,EAAQpqB,YAGvB,GAFwB,oBAAbixB,IACTA,EAAWA,EAAS5H,EAAclH,EAAeiE,KACvC,QAAR,EAAA6K,SAAA,eAAUzG,kBAAmBA,EAAgB,CAC/CwG,EAAOC,EACP,QATuH,8BAY3H,OAAOD,GAAQryB,GAjGE6e,EAmGZkN,0BAA4B,SAAC1qB,EAAa2B,GAAmC,IAAnBhD,EAAkB,uDAAT,KACxE,IAAKgD,IAAmB3B,EAAa,OAAOrB,EADqC,MAEtDiD,IAAiBC,mBAAmB7B,EAAa,QAAS2B,GAFJ,0BAE5EhB,OAF4E,MAEpE,GAFoE,EAEhEmB,EAFgE,KAGjF,OAAKA,EACEhB,OAAOC,YAAYD,OAAOE,QAAQL,GAAO1C,KAAI,mCAAEsD,EAAF,KAAOuf,EAAP,WAAwB,qBAARvf,EAA6B,CAACA,EAAKuf,GAAO,CAACvf,EAAKuf,EAAMhf,OADtGnD,GAtGH6e,EAyGZmN,2BAA6B,SAAC3qB,EAAa2B,GAAiC,IAAjBhD,EAAgB,uDAAP,GACzE,IAAKgD,IAAmB3B,EAAa,OAAOrB,EAC5C,IAAI2rB,EAAS1oB,IAAiBC,mBAAmB7B,EAAa,SAAU2B,GAAgB,GACxF,OAAO2oB,GAAU3rB,GA5GA6e,EA8GZgK,iBAAmB,SAAC0J,EAAUvxB,GAAkC,IAAD,MAAtBwxB,EAAsB,0DACWxxB,EAAzEwmB,eAD8D,MACpD,GADoD,IACWxmB,EAA3D8nB,mBADgD,SAC3BrJ,EAAsCze,EAAtCye,aAD2B,EACWze,EAAxBkpB,oBADa,MACE,KADF,EAEhEC,EAhHatL,EAgHKiF,gBAAgBrE,GACjC+S,IAAWA,EAjHC3T,EAiHgB6J,gBAAgBjJ,IAAkBqJ,KAAgB,UAAAjK,EAAU0Q,YAAY9P,UAAtB,mBAAqC+P,cAArC,mBAA6CI,YAA7C,eAAmD6C,aAAa,IACnJ,IAAIlK,EAAS,GAIb,OAHiB,QAAbgK,GAAmC,UAAbA,GAAqC,UAAbA,GAAwBC,KACxEjK,GAAU2B,GAA8BC,GAAc,KAElD,GAAN,OAAU5B,GAAV,OAAmBgK,EAAnB,YAA+B/K,IAtHd3I,EAwHZ6T,wBAA0B,SAACH,EAAUvxB,GAAkC,IAAD,MAAtBwxB,EAAsB,0DACVxxB,EAA3D8nB,mBADqE,SAChDrJ,EAAsCze,EAAtCye,aADgD,EACVze,EAAxBkpB,oBADkC,MACnB,KADmB,EAEvEC,EA1HatL,EA0HKiF,gBAAgBrE,GAElC,CAAC,gBAAiB,kBAAkBkB,SAASuJ,GAC/CA,EAAe,WACR,CAAC,YAAa,aAAavJ,SAASuJ,KAC3CA,EAAe,QACZsI,IAAWA,EAhIC3T,EAgIgB6J,gBAAgBjJ,IAAkBqJ,KAAgB,UAAAjK,EAAU0Q,YAAY9P,UAAtB,mBAAqC+P,cAArC,mBAA6CI,YAA7C,eAAmD6C,aAAa,IACnJ,IAAIlK,EAAS,WAGb,OAFiB,QAAbgK,GAAmC,UAAbA,GAAqC,UAAbA,GAAwBC,KACxEjK,EAAU2B,GAA8BC,GACnC5B,GApIU1J,EAuIZ6J,gBAAkB,SAACmG,GAAD,IAAU7uB,EAAV,8DAAgE,aAvItE6e,EAuIwCmF,iBAAiB6K,IAA2B7uB,GAvIpF6e,EAwIZ8J,gBAAkB,SAACkG,GAAD,UAAU7uB,EAAV,+DAA6B,UAxInC6e,EAwIwC0Q,YAAYV,UAAjB,mBAA2BW,cAA3B,mBAAmCI,YAAnC,eAAyC6C,YAAazyB,GAxIzF6e,EA0IZoB,mBAAqB,SAACR,GAA+B,IAAjBzf,EAAgB,uDAAP,GAClD,IAAKyf,EAAc,OAAOzf,EAC1B,IAAIuoB,EAAS1J,EAAUiF,gBAAgBrE,GACvC,IAAK8I,EAAQ,OAAOvoB,EACpB,IAAIX,EAAO,CAAC,WAAY,YAAa,YAAa,UAAW,YAAa,WAAY,YAAa,YAAxF,UAAwGkpB,EAAxG,mBAEPG,EAAkB7J,EAAU6J,gBAAgBjJ,GAC5CkJ,EAAkB9J,EAAU8J,gBAAgBlJ,GAC5CkT,EAAU,GACTjK,GACHiK,EAAQrtB,KAAK,iBAEVojB,GACHiK,EAAQrtB,KAAK,mBAAoB,oBAE/BojB,GAAmBC,EACrBgK,EAAQrtB,KAAR,UAAgBijB,EAAhB,+BAA8CA,EAA9C,sBACoD,QAA7C1J,EAAUmF,iBAAiBvE,IAClCkT,EAAQrtB,KAAR,UAAgBijB,EAAhB,sBAGFoK,EAAQrtB,KAAR,UAAgBijB,EAAhB,4BAA2CA,EAA3C,mBACAlpB,EAAKiG,KAAL,MAAAjG,EAAaszB,GACE,SAAXpK,GACFlpB,EAAKiG,KAAL,MAAAjG,EAAI,YAASszB,EAAQrwB,QAAO,SAAAM,GAAG,OAAIA,EAAIgwB,WAAJ,UAAkBrK,EAAlB,SAA8BjpB,KAAI,SAAAsD,GAAG,OAAIA,EAAIiwB,QAAJ,UAAetK,EAAf,eAA6BA,EAA7B,oBAC5ElpB,EAAKiG,KAAL,MAAAjG,EAAI,YAASszB,EAAQrwB,QAAO,SAAAM,GAAG,OAAIA,EAAIgwB,WAAJ,UAAkBrK,EAAlB,SAA8BjpB,KAAI,SAAAsD,GAAG,OAAIA,EAAIiwB,QAAJ,UAAetK,EAAf,eAA6BA,EAA7B,iBACxD,SAAXA,EACTlpB,EAAKiG,KAAL,MAAAjG,EAAI,YAASszB,EAAQrwB,QAAO,SAAAM,GAAG,OAAIA,EAAIgwB,WAAJ,UAAkBrK,EAAlB,SAA8BjpB,KAAI,SAAAsD,GAAG,OAAIA,EAAIiwB,QAAJ,UAAetK,EAAf,eAA6BA,EAA7B,gBAC1D,UAAXA,GACPlpB,EAAKiG,KAAL,MAAAjG,EAAI,YAASszB,EAAQrwB,QAAO,SAAAM,GAAG,OAAIA,EAAIgwB,WAAJ,UAAkBrK,EAAlB,SAA8BjpB,KAAI,SAAAsD,GAAG,OAAIA,EAAIiwB,QAAJ,UAAetK,EAAf,eAA6BA,EAA7B,oBAG9ElpB,EAAKiG,KAAL,MAAAjG,EAAI,YAASgrB,IAAsB9B,KACnC,IAAIxE,EA3KalF,EA2KQmF,iBAAiBvE,GAE1C,MADsB,aAAlBsE,GAA8B1kB,EAAKiG,KAAK,eACrCjG,GA7KUwf,EAgLZK,YAAc,SAACle,EAAWiS,GAC/B,MAAgB,aAAZA,EACK4L,EAAUK,YAAYle,EAAW,OAAS6d,EAAUK,YAAYle,EAAW,QAAU6d,EAAUK,YAAYle,EAAW,aAAc,EACxH,cAAZiS,EACA4L,EAAUK,YAAYle,EAAW,QAAU6d,EAAUK,YAAYle,EAAW,SAAW6d,EAAUK,YAAYle,EAAW,cAAe,EAC3H,cAAZiS,EACA4L,EAAUK,YAAYle,EAAW,QAAU6d,EAAUK,YAAYle,EAAW,SAAW6d,EAAUK,YAAYle,EAAW,cAAe,KACzIA,IAAaA,EAAU0sB,oBAAqBza,KAAWjS,EAAU0sB,mBAvLvD7O,EA0LZC,yBAA2B,SAAC9d,EAAWiS,GAAyB,IAAD,EAAfjT,EAAe,uDAAN,EAC9D,OA3LiB6e,EA2LRK,YAAYle,EAAWiS,GAAU,OAAOjS,QAAP,IAAOA,GAAP,UAAOA,EAAW0sB,yBAAlB,aAAO,EAA+Bza,GA3L/D4L,EA4LAuI,iBAAiBpmB,EAAWiS,EAASjT,IA5LrC6e,EAgMZqC,eAAiB,SAAC0M,EAAazM,GACpC,IAAIngB,EAAYiV,IAAkBC,aAAa0X,GAC/C,GAAK5sB,EAAL,CACA,IAAI8xB,EAAoB9xB,EAAU2uB,kBAC9BoD,EAAuB5R,EAG3BzL,IAASsd,sBAAsB3tB,SAAQ,SAAA+R,GACrC,IAAI6b,EAAepd,IAAiBC,YAAjB,OAA6Bid,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAuB3b,IACvE,GAAI6b,EAAa9c,WAAayX,EAA9B,CACA,IAAIsF,EAAYrd,IAAiBC,YAAjB,OAA6Bgd,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAoB1b,IAC7D+b,GAA0B,OAAZF,QAAY,IAAZA,OAAA,EAAAA,EAAc9c,WAAY,GAExC+c,GAAWrd,IAAiB8a,kBAAkBuC,EAAUna,GAAIoa,GAE5DA,GAAYld,IAAkBmd,cAAcD,EAAYD,GAExDD,GAAcpd,IAAiB8a,kBAAkBsC,EAAala,GAAI6U,OAGxE5sB,EAAU2uB,kBAAoB,GAC9BxtB,OAAOE,QAAQ8e,GAAa9b,SAAQ,mCAAEzC,EAAF,KAAO8f,EAAP,YAClC1hB,EAAU2uB,kBAAkB/sB,GAAO8f,KACrCzM,IAAkBkY,gBAAgBntB,KAvNjB6d,EAiOZ0P,eAAiB,SAACvtB,GACvB,IAAIqyB,EAAYlxB,OAAOC,YAAYD,OAAOE,QAAQrB,EAAU2uB,mBAAmBrwB,KAAI,mCAAEsD,EAAF,KAAO8f,EAAP,WAAkB,CAAC9f,EAAKiT,IAAiBC,YAAY4M,QACpI4Q,EAAezU,EAAU0U,kCAAkCvyB,GAC/D,OApOiB6d,EAoOL2U,uBAAuBxyB,EAAU2e,qBAAsB2T,EAAcD,IApOhExU,EAuOZ2U,uBAAyB,SAAC7T,EAAsB2T,EAAcD,GACnE,IAAI7R,EAAa9L,IAAS8L,WAAW6R,GACjCI,EAA0B/d,IAASge,2BAA2BlS,GAE9Dxf,EAAQksB,YAAUoF,GAmBtB,OAjBAnxB,OAAOsgB,OAAO4Q,GAAWhuB,SAAQ,SAAAuQ,GAC1BA,IAEL5T,EAAM4T,EAAIa,cAAgBzU,EAAM4T,EAAIa,cAAgB,GAAKf,IAASc,iBAAiBZ,EAAIa,YAAab,EAAIS,SAAUrU,EAAM+d,oBAAqC,EAAfnK,EAAIS,SAAeT,EAAI/B,OAErK+B,EAAIgC,SAASvS,SAAQ,SAACsuB,GAAD,OACnBA,GAAWA,EAAQ/wB,MAAQZ,EAAM2xB,EAAQ/wB,MAAQZ,EAAM2xB,EAAQ/wB,MAAQ,GAAK+wB,EAAQpwB,cAGxFkwB,EAAwBpuB,SAAQ,SAAAwS,GAAI,OAAI7V,EAAM6V,EAAKjV,MAAQZ,EAAM6V,EAAKjV,MAAQ,GAAKiV,EAAKwG,WAExFsB,GAAwBA,EAAqBta,SAAQ,SAAAhE,GAAgB,IACrD8V,EAA+B9V,EAAvC0gB,OAAyBL,EAAcrgB,EAAvB2gB,QAClB4R,EAAYle,IAASwM,4BAA4B/K,EAAQuK,EAAWrgB,EAAY2B,gBAChF4wB,GAAWzxB,OAAOE,QAAQuxB,GAAWvuB,SAAQ,mCAAE4N,EAAF,KAAWkP,EAAX,YAAoBngB,EAAMiR,IAAYjR,EAAMiR,IAAY,GAAKkP,QAEhH0R,YAAmB7xB,GACZ,CACLmf,YAAahf,OAAOC,YAAYD,OAAOE,QAAQgxB,GAAW/zB,KAAI,mCAAEsD,EAAF,KAAOuf,EAAP,WAAgB,CAACvf,EAAD,OAAMuf,QAAN,IAAMA,OAAN,EAAMA,EAAKpJ,QACzFyI,aACA9C,WAAY1c,EACZ2d,yBAlQed,EAqQZ0U,kCAAoC,SAACvyB,GAAe,IAAD,YACpDgf,EAAQ,CAAI,UAAW,WAAY,WAAY,aAAc,aAAc,cAAe,gBAAiB,sBAAnG,mBAA4H7d,OAAO9C,KAAK0U,OAChJuf,EAAenxB,OAAOC,YAAY4d,EAAS1gB,KAAI,SAAAsD,GAAG,MAAI,CAACA,EAvQ1Cic,EAuQoDC,yBAAyB9d,EAAW4B,QAEzG0wB,EAAaQ,aAzQIjV,EAyQgBiF,gBAAgB9iB,EAAUye,cAG3DZ,EAAU6H,mBAAmBrhB,SAAQ,SAAAkjB,GACnC,IAAItV,EAAO,UAAMsV,EAAN,kBACX+K,EAAargB,GA9QE4L,EA8QcC,yBAAyB9d,EAAWiS,GACjEA,EAAO,UAAMsV,EAAN,uBACP+K,EAAargB,GAhRE4L,EAgRcC,yBAAyB9d,EAAWiS,MAInE,IAAI8gB,GAAqB,OAAT/yB,QAAS,IAATA,OAAA,EAAAA,EAAW0sB,oBAAqB,GAChDvrB,OAAOE,QAAQ0xB,GAAW1uB,SAAQ,mCAAE4N,EAAF,KAAWkP,EAAX,YAAqBmR,EAAaU,eAAe/gB,KAAaqgB,EAAargB,GAAWkP,MAGxH,IAAI8R,EAAiBpV,EAAUC,yBAAyB9d,EAAW,sBACnE,GAAIizB,EAAgB,CAClB,IAAInN,EAAqBjI,EAAUC,yBAAyB9d,EAAW,sBACvEsyB,EAAaW,IAAmBX,EAAaW,IAAmB,GAAKnN,EAGvE,IAAIoN,EAAc,SAAAlyB,GAAK,OAAIA,GAASG,OAAOE,QAAQL,GAAOqD,SAAQ,YAAiB,IAAD,mBAAdzC,EAAc,KAATuf,EAAS,KACpE,qBAARvf,EAIJ0wB,EAAa1wB,IAAQ0wB,EAAa1wB,IAAQ,GAAKuf,EAH7CmR,EAAa/S,iBAAb,sBAAqC+S,EAAa/S,kBAAoB,IAAtE,YAA8E4B,QAM5E1C,EAAmEze,EAAnEye,aAAc1f,EAAqDiB,EAArDjB,SAAUyjB,EAA2CxiB,EAA3CwiB,cAjC0B,EAiCiBxiB,EAA5B4qB,0BAjCW,MAiCU,GAjCV,EAkCpDnE,EAAY5I,EAAU6I,aAAa3nB,GAEvC6rB,EAAmBvmB,SAAQ,SAAAgtB,GAAS,IACpBjJ,EAAuDiJ,EAA/DtQ,OAA4B8J,EAAmCwG,EAA5CrQ,QAAyBhf,EAAmBqvB,EAAnBrvB,eAC9C0nB,EAAe7L,EAAU4L,kBAAkBzpB,EAAWooB,GACtD/nB,EAAcwd,EAAUsT,qBAAqB1S,EAAc2J,EAAWyC,EAAgBnB,EAAclH,EAAeiE,GACvHyM,EAAYrV,EAAUkN,0BAA0B1qB,EAAa2B,EAAgB,QAI1D6b,EAAUoT,kBAAkBxS,EAAc+D,EAAeiE,GAC/DpiB,QAAQ6uB,GAGvB,IAAIC,EAAc,CAChBC,OAAQ30B,IAAOoC,oBAAP,OAA2Bb,QAA3B,IAA2BA,GAA3B,UAA2BA,EAAWmkB,cAAtC,aAA2B,EAAmBviB,KACtDyxB,OAAQ50B,IAAOoD,gCAAP,OAAuC7B,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAWmkB,QAC1DmP,WAAY70B,IAAOsC,mBAAP,OAA0Bf,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAWmkB,cAArC,aAA0B,EAAmBviB,IAA7C,OAAkD5B,QAAlD,IAAkDA,GAAlD,UAAkDA,EAAWmkB,cAA7D,aAAkD,EAAmBrkB,aACjFmhB,iBAAkBxiB,IAAOsD,yBAAP,OAAgC/B,QAAhC,IAAgCA,GAAhC,UAAgCA,EAAWmkB,cAA3C,aAAgC,EAAmBviB,IAAnD,OAAwD5B,QAAxD,IAAwDA,GAAxD,UAAwDA,EAAWmkB,cAAnE,aAAwD,EAAmBrkB,YAA3E,OAAwFE,QAAxF,IAAwFA,GAAxF,UAAwFA,EAAWmkB,cAAnG,aAAwF,EAAmBniB,iBAO/H,OALImxB,EAAYC,SACdd,EAAaa,EAAYC,SAAWd,EAAaa,EAAYC,SAAW,GAAKD,EAAYE,QACvFF,EAAYG,YAAYJ,EAAYC,EAAYG,YAChDH,EAAYlS,kBAAkBiS,EAAYC,EAAYlS,kBAEnDqR,I,uJCvUU5c,EAEnB,aACE,GADa,oBACThX,gBAAgBgX,EAClB,MAAM/W,MAAM,2CAJG+W,EAMZiB,YAAc,SAAC/U,GAAD,MAAM5C,EAAN,uDAAe,GAAf,OAClBu0B,EAAc3xB,KAAd,UAAsB4xB,IAAS5xB,UAA/B,aAAsB,EAAepC,OAASR,GAP9B0W,EAQZyQ,kBAAoB,SAACvkB,GAAD,QAAM5C,EAAN,uDAAe,GAAf,OACxBu0B,EAAc3xB,KAAd,UAAsB4xB,IAAS5xB,UAA/B,aAAsB,EAAe6xB,UAArC,UAA+CD,IAAS5xB,UAAxD,aAA+C,EAAepC,OAASR,GATvD0W,EAUZ4Q,eAAiB,SAAC1kB,GAAD,MAAM5C,EAAN,uDAAe,GAAf,OACtB,UAAAw0B,IAAS5xB,UAAT,eAAepC,OAAQR,GAXN0W,EAYZ2Q,uBAAyB,SAACzkB,GAAsB,IAAjB5C,EAAgB,uDAAP,GACzCQ,EAbakW,EAaDiB,YAAY/U,EAAK5C,GAGjC,OAFIQ,IAASR,GAAmB,QAAR4C,GAAyB,SAARA,GAA0B,SAARA,IACzDpC,GAAQ,KACHA,GAhBUkW,EAkBZge,eAAiB,SAAC9xB,GAAD,MAAM5C,EAAN,uDAAe,GAAf,OACtB,UAAAw0B,IAAS5xB,UAAT,eAAekG,UAAW9I,GAnBT0W,EAoBZC,YAAc,SAAC/T,GAAD,QAAM5C,EAAN,uDAAe,GAAf,MACK,WAAxB,UAAAw0B,IAAS5xB,UAAT,eAAe2c,MAAmBvf,GAAU,UAAAw0B,IAAS5xB,UAAT,eAAe2c,OAAQvf,GArBlD0W,EAuBZuI,UAAY,SAACrc,GAAS,IAAD,EAC1B,MAA4B,WAAxB,UAAA4xB,IAAS5xB,UAAT,eAAe2c,MAAyB,EAE5B,MADL7I,EAAKC,YAAY/T,GACN,EAAI,GA1BT8T,EA4BZsK,UAAY,SAAC/N,EAASjR,GAAV,OACjB2yB,EAAE,CAAE3yB,QAAO4yB,QAAQ,GAAS3hB,IA7BXyD,EA+BZuK,aAAe,SAAChO,EAASjR,GAAiD,IAAD,EAAzCue,EAAyC,uDAAtB,GAAIqU,IAAkB,uEAChDrU,GADgD,IAC9E,kCAAWsU,EAAX,QACE,IAAI,UAAAC,IAAgB,OAACD,QAAD,IAACA,OAAD,EAACA,EAAiBjyB,YAAlC,eAAwCA,OAAQqQ,EAClD,OAAOyD,EAAKqe,qBAAqB/yB,EAAO6yB,EAAgBjyB,IAAKiyB,EAAgBG,SAAS,IAHZ,8BAI9E,OAAkB,OAAXtU,QAAW,IAAXA,OAAA,EAAAA,EAAczN,KAA8C,oBAAlC,OAAOyN,QAAP,IAAOA,OAAP,EAAOA,EAAczN,KACnD,+BAAOyN,EAAYzN,GAAS,CAAEjR,QAAO4yB,cApCvBle,EAuCZqe,qBAAuB,SAAC/yB,EAAOizB,EAAaD,GAArB,IAA8BJ,IAA9B,gEACR,OAApBM,QAAoB,IAApBA,OAAA,EAAAA,EAAuBD,KAA2E,oBAA3D,OAAOC,QAAP,IAAOA,OAAP,EAAOA,EAAuBD,GAAaE,cACjF,+BAAOD,EAAqBD,GAAaE,YAAYH,EAA9CE,CAAuD,CAAElzB,QAAO4yB,cAG5E,IAAML,EAAgBpyB,OAAOC,YAAYD,OAAOE,QAAQmyB,KAAUlyB,QAAO,oDAAoBwG,WAASxJ,KAAI,mCAAEsD,EAAF,KAAOwyB,EAAP,WAAgB,CAACxyB,EAAM,sBAAM3D,UAAS,eAAUm2B,EAAItsB,QAAd,gBAAf,SAAqDssB,EAAI50B,YAE1L,SAASm0B,EAAEK,EAAS/hB,GAAU,IAAD,IACrBjR,EAAyBgzB,EAAzBhzB,MADqB,EACIgzB,EAAlBJ,OACb,GAAK5yB,EAAL,CACA,SAH2B,YAGjB,OAAI0e,QAAJ,IAAIA,OAAJ,EAAIA,EAAczN,IAC1B,OAAO,sCAASyN,EAAYzN,GAAS+hB,GAA9B,QACT,IAAI3c,EAAW3B,EAAKyQ,kBAAkBlU,GAClCoiB,EAAW3e,EAAKC,YAAY1D,GAC5BgM,EAAYvI,EAAKuI,UAAUhM,GAC3B1P,GAAa,OAALvB,QAAK,IAALA,GAAA,UAAAA,EAAQiR,UAAR,mBAAkBqF,eAAlB,sBAA4B2G,MAA5B,OAA0Cjd,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAQiR,IAC9D,OAAO,uBAAMhU,UAAU,cAAhB,UAA8B,4BAAIoZ,IAAlC,IAAgD,uBAAMpZ,UAAU,YAAhB,UAA6BsE,EAAO8xB,SAG7F,IAAM3U,EAAc,CAElBtO,SAAU,SAACkjB,GAAD,OAAO,iCAAOX,EAAEW,EAAG,WAAZ,YAAiCX,EAAEW,EAAG,OAAtC,QAAmDX,EAAEW,EAAG,UAEzE/iB,UAAW,SAAC+iB,GAAD,OAAO,sCAASX,EAAEW,EAAG,YAAd,MAA8BX,EAAEW,EAAG,cAAnC,cAA6DX,EAAEW,EAAG,QAAlE,QAAgFX,EAAEW,EAAG,WAEvG5iB,UAAW,SAAC4iB,GAAD,OAAO,iCAAOX,EAAEW,EAAG,YAAZ,YAAkCX,EAAEW,EAAG,QAAvC,QAAqDX,EAAEW,EAAG,WAG5EC,aAAc,SAACD,GAAD,OAAO,iCAAOX,EAAEW,EAAG,aAAZ,MAA6BX,EAAEW,EAAG,wBAAlC,MAA8DX,EAAEW,EAAG,qBAAnE,MAA4FX,EAAEW,EAAG,2BACtHE,kBAAmB,SAACF,GAAD,OAAO,iCAAOX,EAAEW,EAAG,gBAAZ,MAAgCX,EAAEW,EAAG,sBAC/DG,iBAAkB,SAACH,GAAD,OAAO,iCAAOX,EAAEW,EAAG,gBAAZ,MAAgCX,EAAEW,EAAG,2BAC9DI,oBAAqB,SAACJ,GAAD,OAAO,gDAAmBX,EAAEW,EAAG,aAAxB,MAAyCX,EAAEW,EAAG,sBAA9C,eAAiFX,EAAEW,EAAG,YAAtF,SAC5BK,qBAAsB,SAACL,GAAD,OAAO,0CAAaX,EAAEW,EAAG,iBAAlB,MAAuCX,EAAEW,EAAG,sBAA5C,MAAsEX,EAAEW,EAAG,iBAA3E,SAG7BM,aAAc,SAACN,GAAD,OAAO,iCAAOX,EAAEW,EAAG,aAAZ,MAA6BX,EAAEW,EAAG,wBAAlC,MAA8DX,EAAEW,EAAG,qBAAnE,MAA4FX,EAAEW,EAAG,2BACtHO,kBAAmB,SAACP,GAAD,OAAO,iCAAOX,EAAEW,EAAG,gBAAZ,MAAgCX,EAAEW,EAAG,sBAC/DQ,iBAAkB,SAACR,GAAD,OAAO,iCAAOX,EAAEW,EAAG,gBAAZ,MAAgCX,EAAEW,EAAG,2BAC9DS,oBAAqB,SAACT,GAAD,OAAO,gDAAmBX,EAAEW,EAAG,aAAxB,MAAyCX,EAAEW,EAAG,sBAA9C,eAAiFX,EAAEW,EAAG,YAAtF,SAC5BU,qBAAsB,SAACV,GAAD,OAAO,0CAAaX,EAAEW,EAAG,iBAAlB,MAAuCX,EAAEW,EAAG,sBAA5C,MAAsEX,EAAEW,EAAG,iBAA3E,SAG7BW,WAAY,SAACX,GAAD,OAAO,+BAAOX,EAAEW,EAAG,cAC/BY,gBAAiB,SAACZ,GAAD,OAAO,+BAAOX,EAAEW,EAAG,mBACpCa,eAAgB,SAACb,GAAD,OAAO,+BAAOX,EAAEW,EAAG,kBACnCc,mBAAoB,SAACd,GAAD,OAAO,+BAAOX,EAAEW,EAAG,sBAEvCe,QAAS,SAACf,GAAD,OAAO,iCAAOX,EAAEW,EAAG,aAAZ,MAA6BX,EAAEW,EAAG,mBAAlC,MAAyDX,EAAEW,EAAG,qBAA9D,MAAuFX,EAAEW,EAAG,2BAC5GgB,aAAc,SAAChB,GAAD,OAAO,iCAAOX,EAAEW,EAAG,WAAZ,MAA2BX,EAAEW,EAAG,sBACrDiB,YAAa,SAACjB,GAAD,OAAO,iCAAOX,EAAEW,EAAG,WAAZ,MAA2BX,EAAEW,EAAG,kBACpDkB,gBAAiB,SAAClB,GAAD,OAAO,0CAAaX,EAAEW,EAAG,iBAAlB,MAAuCX,EAAEW,EAAG,iBAA5C,SAExBmB,eAAgB,SAACnB,GAAD,OAAO,0CAAaX,EAAEW,EAAG,YAAlB,SACvBoB,WAAY,SAACpB,GAAD,OAAO,+CAAkBX,EAAEW,EAAG,aAAvB,cAAgDX,EAAEW,EAAG,YAArD,SAEnBqB,iBAAkB,SAACrB,GAAD,OAAO,gDAAmBX,EAAEW,EAAG,aAAxB,MAAyCX,EAAEW,EAAG,mBAA9C,eAA8EX,EAAEW,EAAG,YAAnF,SACzBsB,iBAAkB,SAACtB,GAAD,OAAO,gDAAmBX,EAAEW,EAAG,aAAxB,MAAyCX,EAAEW,EAAG,mBAA9C,eAA8EX,EAAEW,EAAG,YAAnF,SAEzBuB,kBAAmB,SAACvB,GAAD,OAAO,4CAAeX,EAAEW,EAAG,cAApB,eAA+CX,EAAEW,EAAG,eAApD,YAA6EX,EAAEW,EAAG,cAAlF,QAE1BwB,oBAAqB,SAACxB,GAEpB,GADSA,EAAEtzB,MAAM+0B,mBAEf,OAAO,qDACT,IAAIC,GAAO1B,EAAEtzB,MAAMi1B,eAAiB,GAAK,IACzC,OAAID,EAAM,EAAU,yCAAYrC,EAAEW,EAAG,iBAAjB,UACX0B,GAAO,IAAa,2CAAcrC,EAAEW,EAAG,iBAAnB,eACtB,yCAAYX,EAAEW,EAAG,iBAAjB,QAIT1L,eAAgB,SAAC0L,GAAD,OAAO,0CAAaX,EAAEW,EAAG,wBAAlB,QAAgDX,EAAEW,EAAG,mBAArD,MAA4EX,EAAEW,EAAG,oBAAjF,MAAyGX,EAAEW,EAAG,gCACrI4B,iBAAkB,SAAC5B,GAAD,OAAO6B,IAAeC,WAAW93B,KAAI,SAAC6iB,EAAK3iB,GAAN,OAAY63B,EAA8B/B,EAAGnT,EAAK3iB,OACzGmqB,mBAAoB,SAAC2L,GAAD,OAAO,0CAAaX,EAAEW,EAAG,4BAAlB,QAAoDX,EAAEW,EAAG,mBAAzD,MAAgFX,EAAEW,EAAG,wBAArF,MAAiHX,EAAEW,EAAG,mCACjJgC,qBAAsB,SAAChC,GAAD,OAAO6B,IAAeI,eAAej4B,KAAI,SAAC6iB,EAAK3iB,GAAN,OAAY63B,EAA8B/B,EAAGnT,EAAK3iB,OACjHkqB,iBAAkB,SAAC4L,GAAD,OAAO,0CAAaX,EAAEW,EAAG,0BAAlB,QAAkDX,EAAEW,EAAG,mBAAvD,MAA8EX,EAAEW,EAAG,sBAAnF,MAA6GX,EAAEW,EAAG,gCAC3IkC,mBAAoB,SAAClC,GAAD,OAAO6B,IAAeM,aAAan4B,KAAI,SAAC6iB,EAAK3iB,GAAN,OAAY63B,EAA8B/B,EAAGnT,EAAK3iB,OAE7GqqB,UAAW,SAACyL,GAAD,OAAO,0CAAaX,EAAEW,EAAG,mBAAlB,QAA2CX,EAAEW,EAAG,mBAAhD,MAAuEX,EAAEW,EAAG,eAA5E,MAA+FX,EAAEW,EAAG,iCACtHoC,YAAa,SAACpC,GAAD,OAAO6B,IAAeQ,MAAMr4B,KAAI,SAAC6iB,EAAK3iB,GAAN,OAAY63B,EAA8B/B,EAAGnT,EAAK3iB,OAC/FsqB,YAAa,SAACwL,GAAD,OAAO,0CAAaX,EAAEW,EAAG,qBAAlB,QAA6CX,EAAEW,EAAG,mBAAlD,MAAyEX,EAAEW,EAAG,iBAA9E,MAAmGX,EAAEW,EAAG,2BAC5HsC,cAAe,SAACtC,GAAD,OAAO6B,IAAeU,UAAUv4B,KAAI,SAAC6iB,EAAK3iB,GAAN,OAAY63B,EAA8B/B,EAAGnT,EAAK3iB,OACrGyqB,eAAgB,SAACqL,GAAD,OAAO,0CAAaX,EAAEW,EAAG,wBAAlB,QAAgDX,EAAEW,EAAG,mBAArD,MAA4EX,EAAEW,EAAG,wBACxGwC,iBAAkB,SAACxC,GAAD,OAAO6B,IAAeY,WAAWz4B,KAAI,SAAC6iB,EAAK3iB,GAAN,OAAY63B,EAA8B/B,EAAGnT,EAAK3iB,OAEzGw4B,oBAAqB,SAAC1C,GAAD,OAAO,0CAAaX,EAAEW,EAAG,sBAAlB,QAA8CX,EAAEW,EAAG,mBAAnD,YAAgFX,EAAEW,EAAG,iCACjH2C,qBAAsB,SAAC3C,GAAD,OAAO,0CAAaX,EAAEW,EAAG,sBAAlB,QAA8CX,EAAEW,EAAG,mBAAnD,UAA8EX,EAAEW,EAAG,iCAEhH4C,gBAAiB,SAAC5C,GAAD,OAAO,0CAAaX,EAAEW,EAAG,kBAAlB,QAA0CX,EAAEW,EAAG,mBAA/C,UAA0EX,EAAEW,EAAG,iCACvG6C,gBAAiB,SAAC7C,GAAD,OAAO,0CAAaX,EAAEW,EAAG,kBAAlB,QAA0CX,EAAEW,EAAG,mBAA/C,YAA4EX,EAAEW,EAAG,iCACzG8C,0BAA2B,SAAC9C,GAAD,OAAO,sDAAyBX,EAAE,EAAG,WAA9B,uBAA8DA,EAAE,EAAG,WAAnE,eAElC0D,gBAAiB,SAAC/C,GAAD,OAAO,mDAAsBX,EAAEW,EAAG,WAA3B,cAAkDX,EAAEW,EAAG,WAAvD,UACxBgD,gBAAiB,SAAChD,GAAD,OAAO,mDAAsBX,EAAEW,EAAG,WAA3B,cAAkDX,EAAEW,EAAG,WAAvD,UACxBiD,gBAAiB,SAACjD,GAAD,OAAO,mDAAsBX,EAAEW,EAAG,WAA3B,cAAkDX,EAAEW,EAAG,WAAvD,WAE1B,SAAS+B,EAA8B/B,EAAGnT,EAAK3iB,GAC7C,IAAIg5B,EAAOrW,EAAM,EAAI,MAAQ,MACzBsW,EAASjlB,KAAKklB,IAAIvW,GAClBwW,EAAY,GAGhB,OAFIn5B,EAAI,IAAGm5B,EAAY,yCAAYhE,EAAEW,EAAG,cAAjB,MAAmC91B,MAChD,IAANA,IAASm5B,EAAY,uCAAUhE,EAAEW,EAAG,kBACjC,iCAAekD,EAAMC,EAAQE,IAAlBn5B,GAIpB,CAAC,CAAC,gBAAiB,QAAS,CAAC,iBAAkB,SAAU,CAAC,YAAa,QAAS,CAAC,YAAa,SAAS6F,SAAQ,YAA6B,IAAD,mBAA1BuzB,EAA0B,KAAbC,EAAa,KACzI,CAAC,CAAC,WAAY,gBAAiB,CAAC,WAAY,kBAAmB,CAAC,SAAU,mBAAoB,CAAC,QAAS,cAAe,CAAC,QAAS,cAAe,CAAC,MAAO,cAAcxzB,SAAQ,mCAAEyzB,EAAF,gBAC5K,CAAC,MAAO,UAAW,YAAYzzB,SAAQ,SAAAmiB,GACrC,IAAIuR,EAAc,UAAMH,EAAN,YAAqBE,EAArB,YAAgCtR,GAC9CwR,EAAO,UAAMH,EAAN,YAAiBC,EAAjB,YAA4BtR,GACvC9G,EAAYqY,GAAkB,SAACzD,GAAD,OAAO,iCAAOX,EAAEW,EAAD,UAAOsD,EAAP,WAAR,MAAwCjE,EAAEW,EAAG0D,gBAGxF,IAAMC,EAAiB,CACrB1D,aAAc,SAACD,EAAG3O,GAAJ,OAAY,iCAAOgO,EAAEW,EAAD,aAAR,MAA6BX,EAAEW,EAAD,UAAO3O,EAAP,0BAA9B,MAAqEgO,EAAEW,EAAD,qBAAtE,MAAmGX,EAAEW,EAAD,UAAO3O,EAAP,6BAC9H6O,kBAAmB,SAACF,EAAG3O,GAAJ,OAAY,iCAAOgO,EAAEW,EAAD,UAAO3O,EAAP,kBAAR,MAAuCgO,EAAEW,EAAD,sBACvEG,iBAAkB,SAACH,EAAG3O,GAAJ,OAAY,iCAAOgO,EAAEW,EAAD,UAAO3O,EAAP,kBAAR,MAAuCgO,EAAEW,EAAD,2BACtEK,qBAAsB,SAACL,EAAG3O,GAAJ,OAAY,0CAAagO,EAAEW,EAAD,UAAO3O,EAAP,mBAAd,MAA8CgO,EAAEW,EAAD,sBAA/C,MAA6EX,EAAEW,EAAD,iBAA9E,SAElCM,aAAc,SAACN,EAAG3O,GAAJ,OAAY,iCAAOgO,EAAEW,EAAD,aAAR,MAA6BX,EAAEW,EAAD,UAAO3O,EAAP,0BAA9B,MAAqEgO,EAAEW,EAAD,qBAAtE,MAAmGX,EAAEW,EAAD,UAAO3O,EAAP,6BAC9HkP,kBAAmB,SAACP,EAAG3O,GAAJ,OAAY,iCAAOgO,EAAEW,EAAD,UAAO3O,EAAP,kBAAR,MAAuCgO,EAAEW,EAAD,sBACvEQ,iBAAkB,SAACR,EAAG3O,GAAJ,OAAY,iCAAOgO,EAAEW,EAAD,UAAO3O,EAAP,kBAAR,MAAuCgO,EAAEW,EAAD,2BACtEU,qBAAsB,SAACV,EAAG3O,GAAJ,OAAY,0CAAagO,EAAEW,EAAD,UAAO3O,EAAP,mBAAd,MAA8CgO,EAAEW,EAAD,sBAA/C,MAA6EX,EAAEW,EAAD,iBAA9E,SAElCW,WAAY,SAACX,EAAG3O,GAAJ,OAAY,+BAAOgO,EAAEW,EAAD,UAAO3O,EAAP,gBAChCuP,gBAAiB,SAACZ,EAAG3O,GAAJ,OAAY,+BAAOgO,EAAEW,EAAD,UAAO3O,EAAP,qBACrCwP,eAAgB,SAACb,EAAG3O,GAAJ,OAAY,+BAAOgO,EAAEW,EAAD,UAAO3O,EAAP,oBACpCyP,mBAAoB,SAACd,EAAG3O,GAAJ,OAAY,+BAAOgO,EAAEW,EAAD,UAAO3O,EAAP,wBAExCuS,QAAS,SAAC5D,EAAG3O,GAAJ,OAAY,iCAAOgO,EAAEW,EAAD,aAAR,MAA6BX,EAAEW,EAAD,UAAO3O,EAAP,qBAA9B,MAAgEgO,EAAEW,EAAD,qBAAjE,MAA8FX,EAAEW,EAAD,UAAO3O,EAAP,6BACpHwS,aAAc,SAAC7D,EAAG3O,GAAJ,OAAY,iCAAOgO,EAAEW,EAAD,UAAO3O,EAAP,aAAR,MAAkCgO,EAAEW,EAAD,sBAC7D8D,YAAa,SAAC9D,EAAG3O,GAAJ,OAAY,iCAAOgO,EAAEW,EAAD,UAAO3O,EAAP,aAAR,MAAkCgO,EAAEW,EAAD,kBAC5D+D,gBAAiB,SAAC/D,EAAG3O,GAAJ,OAAY,0CAAagO,EAAEW,EAAD,UAAO3O,EAAP,mBAAd,MAA8CgO,EAAEW,EAAD,iBAA/C,SAE7BgE,UAAW,SAAChE,EAAG3O,GAAJ,OAAY,iCAAOgO,EAAEW,EAAD,aAAR,MAA6BX,EAAEW,EAAD,UAAO3O,EAAP,uBAA9B,MAAkEgO,EAAEW,EAAD,qBAAnE,MAAgGX,EAAEW,EAAD,UAAO3O,EAAP,6BACxH4S,eAAgB,SAACjE,EAAG3O,GAAJ,OAAY,iCAAOgO,EAAEW,EAAD,UAAO3O,EAAP,eAAR,MAAoCgO,EAAEW,EAAD,sBACjEkE,cAAe,SAAClE,EAAG3O,GAAJ,OAAY,iCAAOgO,EAAEW,EAAD,UAAO3O,EAAP,eAAR,MAAoCgO,EAAEW,EAAD,wBAChEmE,kBAAmB,SAACnE,EAAG3O,GAAJ,OAAY,0CAAagO,EAAEW,EAAD,UAAO3O,EAAP,mBAAd,MAA8CgO,EAAEW,EAAD,mBAA/C,MAA0EX,EAAEW,EAAD,iBAA3E,SAE/BoE,UAAW,SAACpE,EAAG3O,GAAJ,OAAY,iCAAOgO,EAAEW,EAAD,aAAR,MAA6BX,EAAEW,EAAD,UAAO3O,EAAP,uBAA9B,MAAkEgO,EAAEW,EAAD,qBAAnE,MAAgGX,EAAEW,EAAD,UAAO3O,EAAP,6BACxHgT,eAAgB,SAACrE,EAAG3O,GAAJ,OAAY,iCAAOgO,EAAEW,EAAD,UAAO3O,EAAP,eAAR,MAAoCgO,EAAEW,EAAD,sBACjEsE,cAAe,SAACtE,EAAG3O,GAAJ,OAAY,iCAAOgO,EAAEW,EAAD,UAAO3O,EAAP,eAAR,MAAoCgO,EAAEW,EAAD,wBAChEuE,kBAAmB,SAACvE,EAAG3O,GAAJ,OAAY,0CAAagO,EAAEW,EAAD,UAAO3O,EAAP,mBAAd,MAA8CgO,EAAEW,EAAD,mBAA/C,MAA0EX,EAAEW,EAAD,iBAA3E,SAE/BwE,oBAAqB,SAACxE,EAAG3O,GAEvB,GADS2O,EAAEtzB,MAAF,UAAW2kB,EAAX,wBAEP,OAAO,qDACT,IAAIqQ,GAAO1B,EAAEtzB,MAAF,UAAW2kB,EAAX,oBAAmC,GAAK,IACnD,OAAIqQ,EAAM,EAAU,yCAAYrC,EAAEW,EAAD,UAAO3O,EAAP,mBAAb,UACXqQ,GAAO,IAAa,2CAAcrC,EAAEW,EAAD,UAAO3O,EAAP,mBAAf,eACtB,yCAAYgO,EAAEW,EAAD,UAAO3O,EAAP,mBAAb,SAIXxkB,OAAO9C,KAAK+F,KAAeC,SAAQ,SAAAkjB,GAAM,OACvCpmB,OAAOE,QAAQ42B,GAAgB5zB,SAAQ,mCAAEzC,EAAF,KAAOm3B,EAAP,YACrC53B,OAAO63B,eAAetZ,EAAtB,UAAsC6H,EAAtC,YAAgD3lB,GAAO,CACrDq3B,cAAc,EACdC,YAAY,EACZC,UAAU,EACV52B,MAAO,SAAC6xB,GAAD,OAAU2E,EAAM3E,EAAK7M,YAGlC,IAAM2M,EAAuB,CAC3BkF,iBAAkB,CAChBjF,YAAa,SAACH,GAAD,OAAa,SAACM,GAAD,OAAO,sCAASX,EAAEW,EAAG,YAAd,MAA8BX,EAAEW,EAAG,cAAnC,cAA6DX,EAAEW,EAAG,QAAlE,QAAgFX,EAAEW,EAAG,OAArF,MAAgGX,EAAEW,EAAG,aAArG,MAAsHN,EAAQzxB,MAA9H,Y,6ICxMtB82B,EAPE,CACfrzB,OAAQszB,IACRrzB,MAAOszB,IACPrzB,MAAOszB,IACPrzB,OAAQszB,IACRrzB,QAASszB,K,iCCPUC,EAEnB,aAAgB,GAAD,oBAAKj7B,gBAAgBi7B,EAAc,MAAMh7B,MAAM,2CAF3Cg7B,EAKZnZ,WAAa,SAAC6R,GACnB,IAAI7R,EAAa,GAMjB,OALArf,OAAOE,QAAQgxB,GAAWhuB,SAAQ,YAAiB,IAAD,mBAAdzC,EAAc,KAATgT,EAAS,KAC3CA,IACD4L,EAAW5L,EAAIuB,QAASqK,EAAW5L,EAAIuB,QAAQ7R,KAAK1C,GACnD4e,EAAW5L,EAAIuB,QAAU,CAACvU,OAE1B4e,G,YCFU9L,E,WAEnB,aAAgB,GAAD,oBAAKhW,gBAAgBgW,EAAU,MAAM/V,MAAM,0C,0DAkD1C4D,EAAOq3B,GAA0B,IAAhBC,EAAe,wDAC1CC,EAAO,KACPC,EAAavnB,KAAKkZ,MAAMnpB,EAAQq3B,EAAS,IAC7C,IAAKG,EAAY,OAAO,KACxB,IAAIC,EAAa,SAAbA,EAAc7Y,EAAK4D,GACrB,IAAI+U,EAAJ,CACA,GAAI/U,EAAI7N,OAAQ,CACd,GAAI6N,EAAI7N,OAAS6iB,EAAY,OAC7B,IAAIE,EAAMlV,EAAImV,QAAO,SAACC,EAAM5xB,GAAP,OAAa4xB,EAAO5xB,IAAG,GAC5C,GAAIsxB,EAAO,CACT,GAAII,EAAM9Y,GAAO,KAAO,OACxB,GAAIiZ,YAAiBH,EAAK9Y,GAExB,YADA2Y,EAAO/U,OAGJ,CACL,GAAIkV,EAAM9Y,EAAM,EAAG,OACnB,GAAIkZ,YAAeJ,EAAK9Y,GAEtB,YADA2Y,EAAO/U,IAKb6U,EAASU,QAAQzV,UAAUxgB,SAAQ,SAAAy1B,GACjCE,EAAWz3B,EAAD,sBAAYwiB,GAAZ,CAAiB+U,UAI/B,OADAE,EAAWz3B,EAAO,IACXu3B,I,sCAEcxY,EAAOqR,GAAU,IAAD,IACrC,IAAKA,IAAYA,EAAQpwB,MAAO,MAAO,CAAE6P,OAAO,GAChD,IAAI7P,EAAQkB,WAAWkvB,EAAQpwB,OAC/B,GAAIgQ,MAAMhQ,GAAQ,MAAO,CAAE6P,OAAO,EAAOsF,IAAI,iBAC7C,IAAIrC,EAAWiM,EAAMjM,SACrB,IAAKA,EAAU,MAAO,CAAEjD,OAAO,EAAOsF,IAAI,2BAC1C,IAAI6iB,EAA4C,MAAlC7kB,IAAKC,YAAYgd,EAAQ/wB,KACnCg4B,EAAWl7B,KAAK87B,mBAAmB7H,EAAQ/wB,IAAKyT,GAChD4B,EAAQvY,KAAK+7B,SAASl4B,EAAOq3B,EAAUW,GAE3C,IAAKtjB,GAA0B,IAAjBA,EAAMC,OAAc,MAAO,CAAE9E,OAAO,EAAOsF,IAAI,qCAC7D,IAAIgjB,GAAsB,UAAAn2B,IAAkB8Q,UAAlB,eAA6B1Q,uBAAwB,aAAIJ,IAAkB8Q,UAAtB,aAAI,EAA6B3Q,cAAe,EAC/H,GAAIuS,EAAMC,OAASwjB,EAAqB,MAAO,CAAEtoB,OAAO,EAAOsF,IAAI,sCAAD,OAAwCgjB,EAAxC,YAElE,IAAIC,EAAMf,EAAS,GAAK3iB,EAAMC,OAC1B0jB,EAAMhB,EAASA,EAAS1iB,OAAS,GAAKD,EAAMC,OAChD,MAAO,CAAE9E,OAAO,EAAM+E,WAAY0jB,aAAet4B,EAAQo4B,IAAQC,EAAMD,GAAQ,KAAMjjB,IAAI,2BAAD,OAA6BT,EAAMC,OAAnC,8BAA+DD,EAAM6jB,KAAK,MAA1E,KAAoF7jB,W,yCAIpJqK,GACxB,IAD+B,EAC3B3J,EAAoB,EAAGC,EAAoB,EAC3Cb,EAAqBuK,EAAM1K,SAAStY,KAAI,SAAAq0B,GAAO,OAAIje,EAASqmB,gBAAgBzZ,EAAOqR,MAFxD,cAGT5b,GAHS,IAG/B,4BACE,IADF,QACe3E,MACX,MAAO,CAAE2E,qBAAoB3E,OAAO,EAAOsF,IAAK,iCAAkCC,oBAAmBC,sBAL1E,8BAQ/B,GAAIb,EAAmBikB,MAAK,SAAArI,GAAO,aAAW,OAAPA,QAAO,IAAPA,GAAA,UAAAA,EAAS1b,aAAT,eAAgBC,QAAS,MAAMH,EAAmBikB,MAAK,SAACrI,GAAD,OAAcA,EAAQ1b,SAClH,MAAO,CAAEF,qBAAoB3E,OAAO,EAAOsF,IAAK,uEAAwEC,oBAAmBC,qBAC7I,IAAIqjB,EAAoBlkB,EAAmBmjB,QAAO,SAACD,EAAKiB,GAAN,OAAcjB,GAAOiB,EAAI9oB,OAAS8oB,EAAIjkB,MAAQikB,EAAIjkB,MAAMC,OAAS,KAAI,GACnHikB,EAAiBzmB,EAASymB,eAAe7Z,EAAMzO,MAAOyO,EAAMjM,UAC5D+lB,EAAoB1mB,EAAS2mB,mBAAmB/Z,EAAMjM,UAE1D,GAAK4lB,EAAoBE,EAAkBC,EACzC,MAAO,CAAErkB,qBAAoB3E,OAAO,EAAOsF,IAAI,oCAAD,OAAsCujB,EAAtC,8CAA6FE,EAA7F,uEAA0KC,EAA1K,MAAiMzjB,oBAAmBC,qBAEpQ,IAAI0jB,EAAyBvkB,EAAmBmjB,QAAO,SAACD,EAAKiB,GAAN,OAAcjB,GAAOiB,EAAI9oB,OAAS8oB,EAAIjkB,OAASikB,EAAI/jB,WAAc+jB,EAAI/jB,WAAa+jB,EAAIjkB,MAAMC,OAAU,KAAI,GAGjK,MAAO,CAAE9E,OAAO,EAAM2E,qBAAoBkkB,oBAAmBE,iBAAgBI,oBAAqBH,EAAmBzjB,kBAFrHA,EAAoBkjB,YAAaS,EAAyBF,GAE8ExjB,kBADxIA,EAAoBijB,aAAcS,EAA0C,IAAjBH,GAAwBC,M,0CAiF1DjnB,EAAYyY,GACrC,IAAIhY,EAAMC,IAAiBC,YAAYX,GACvC,GAAKS,EAAL,CACA,IAAI4mB,EAAkB5mB,EAAIO,SACtBsmB,EAAoB7O,GAAe,GACvC,GAAI4O,IAAoBC,EAAxB,CACA,IAAIrlB,EAAUxB,EAAIwB,QACdslB,EAAuBzmB,IAAkB0mB,sBAAsBF,EAAkBrlB,GACjFwlB,EAAqB/mB,IAAiBC,YAAY4mB,GAGlDE,EAAoB/mB,IAAiBgnB,cAAcjnB,EAAKgnB,GACvD/mB,IAAiB8a,kBAAkB/a,EAAImD,GAAI0jB,GAG5CA,GACFxmB,IAAkBmd,cAAcqJ,EAAkB7mB,GAEhD4mB,IACEI,EACF3mB,IAAkBmd,cAAcoJ,EAAiBI,GAEjD3mB,IAAkB6mB,sBAAsBN,EAAiBplB,U,KAhO5C1B,EAKZuY,sBAAwB,kBAAMlpB,KALlB2Q,EAMZgC,mBAAqB,SAAC9U,GAAD,MAAM5C,EAAN,uDAAe,GAAf,OAAkC,OAAZ8E,UAAY,IAAZA,KAAA,UAAAA,IAAelC,UAAf,eAAqBpC,OAAQR,GAN5D0V,EAOZqnB,gCAAkC,SAACjX,GAAD,OACvC3jB,OAAOE,QAAQyC,KAAcxC,QAAO,mCAAO06B,GAAP,kBAAmBA,EAAOt8B,OAAQs8B,EAAOt8B,OAAOwX,OAAU,KAAO4N,MARpFpQ,EASZ4B,qBAAuB,SAACH,EAAQC,GAAT,QAAkBpX,EAAlB,uDAA2B,GAA3B,OAA8C,OAAZ8E,UAAY,IAAZA,KAAA,UAAAA,IAAeqS,UAAf,mBAAwB8lB,cAAxB,eAAiC7lB,KAAYpX,GAT1F0V,EAUZwB,qBAAuB,SAACC,EAAQC,GAAT,QAAkBpX,EAAlB,uDAA2B,KAA3B,OAAgD,OAAZ8E,UAAY,IAAZA,KAAA,UAAAA,IAAeqS,UAAf,mBAAwB+lB,aAAxB,eAAgC9lB,KAAYpX,GAV3F0V,EAWZynB,yBAA2B,SAAChmB,GAAD,MAASnX,EAAT,uDAAkB,KAAlB,OAAuC,OAAZ8E,UAAY,IAAZA,KAAA,UAAAA,IAAeqS,UAAf,eAAwBimB,OAAQp9B,GAX1E0V,EAaZsd,oBAAsB,kBAAM7wB,OAAO9C,KAAK0H,MAb5B2O,EAcZ2nB,oBAAsB,SAACjmB,GAAD,IAAUpX,EAAV,uDAAmB,GAAnB,OAC3B+G,IAAkBqQ,GAAWrQ,IAAkBqQ,GAAS5W,KAAOR,GAf9C0V,EAgBZ4nB,oBAAsB,SAAClmB,GAAD,IAAUpX,EAAV,uDAAmB,GAAnB,OAC1BoX,GAAWijB,EAASjjB,GAAY,cAAC,IAAD,CAAiBvY,KAAMw7B,EAASjjB,GAAwBnY,UAAU,SAAnBmY,GAAgCpX,GAjB/F0V,EAmBZ6B,4BAA8B,SAACH,GAA0B,IAAjBpX,EAAgB,uDAAP,GACtD,IAAKoX,EAAS,OAAOpX,EACrB,IAAIQ,EArBakV,EAqBD2nB,oBAAoBjmB,GACpC,IAAK5W,EAAM,OAAOR,EAClB,IAAIu9B,EAvBa7nB,EAuBG4nB,oBAAoBlmB,GACxC,OAAKmmB,EACG,iCAAOA,EAAP,IAAkB/8B,KADJR,GAxBL0V,EA6BZ8nB,aAAe,SAACrmB,GAAD,OAAYrS,IAAaqS,GAAUrS,IAAaqS,GAAQzW,OAAS,IA7BpEgV,EAgCZ+nB,gBAAkB,kBAAMt4B,KAhCZuQ,EAiCZc,iBAAmB,SAAC5T,EAAKyT,EAAUxC,GAAuB,IAAD,IAAf7T,EAAe,uDAAN,EACpD0B,EAAI,UAAGoE,IAAsBuQ,UAAzB,iBAAG,EAAkCzT,UAArC,aAAG,EAAyCiR,GACpD,OAAInS,KACC,OAAIkB,QAAJ,IAAIA,OAAJ,EAAIA,EAAK+d,SAAS,mBApCNjL,EAqCHc,iBAAiB,gBAAiBH,EAAUxC,EAAO7T,GAC1DA,IAtCU0V,EA0CZgoB,eAAiB,kBAAMv7B,OAAO9C,KAAKwH,MA1CvB6O,EA2CZ2mB,mBAAqB,SAAChmB,GAAD,OAAc9Q,IAAkB8Q,GACzD9Q,IAAkB8Q,GAAU3Q,YAAcH,IAAkB8Q,GAAU1Q,qBAAwB,GA5C9E+P,EA6CZymB,eAAiB,SAACtoB,EAAOwC,GAAR,OACtB7C,KAAKmqB,MAAiB,EAAXtnB,EAAexC,GAAS,IA9ClB6B,EA+CZkoB,wBAA0B,SAACtb,GAAD,OAC/BA,EAAM1K,SAASsjB,QAAO,SAACD,EAAKiB,GAAN,OACpBjB,GAAOiB,GAAOA,EAAI34B,MAAQ,EAAI,KAAI,IAjDnBmS,EAkDZ8lB,mBAAqB,SAAC15B,EAAYuU,GAAb,OAA2BvU,GAAcuU,EACnExP,IAAqB/E,GAAYuU,GAAY,IAnD5BX,EA6HZ8L,WAAamZ,EAAanZ,WA7Hd9L,EA+HZmoB,gBAAkB,SAAC1mB,GAAD,MAASnX,EAAT,uDAAkB,KAAlB,OACX,OAAZ8E,UAAY,IAAZA,KAAA,UAAAA,IAAeqS,UAAf,eAAwBimB,OAAQp9B,GAhIf0V,EAiIZkM,uBAAyB,SAACzK,EAAQuK,GAAT,QAAoB1hB,EAApB,uDAA6B,KAA7B,OAC9BkuB,aAAU,UAlIOxY,EAkIFmoB,gBAAgB1mB,UAArB,mBAA+BuK,UAA/B,eAA2C1f,QAAShC,IAlI7C0V,EAoIZwM,4BAA8B,SAAC/K,EAAQuK,EAAW1e,GAAmC,IAAnBhD,EAAkB,uDAAT,KAChF,IAAKgD,EAAgB,OAAOhD,EAC5B,IAAIqB,EAtIaqU,EAsIMmM,gCAAgC1K,EAAQuK,GAC/D,IAAKrgB,EAAa,OAAOrB,EAHgE,MAInEiD,IAAiBC,mBAAmB7B,EAAa,QAAS2B,GAJS,mBAIpFhB,EAJoF,KAI7EmB,EAJ6E,KAKzF,OAAKA,EACEhB,OAAOC,YAAYD,OAAOE,QAAQL,GAAO1C,KAAI,yCAAgB,CAAhB,UAA4B6D,OAD5DnD,GAzIH0V,EA4IZge,2BAA6B,SAAClS,GACnC,IAAIsc,EAAoB,GAMxB,OALA37B,OAAOE,QAAQmf,GAAYnc,SAAQ,qCAAE8R,EAAF,KAAU4mB,EAAV,YACrB,OAAZj5B,UAAY,IAAZA,KAAA,UAAAA,IAAeqS,UAAf,eAAwBimB,OAAQj7B,OAAOE,QAAQyC,IAAaqS,GAAQimB,MAAM/3B,SAAQ,mCAAEqc,EAAF,KAAane,EAAb,YAChFsB,SAAS6c,IAAcqc,EAAO7lB,QAAU3U,EAAMvB,OAASG,OAAO9C,KAAKkE,EAAMvB,OAAOkW,QAChF/V,OAAOE,QAAQkB,EAAMvB,OAAOqD,SAAQ,mCAAEzC,EAAF,KAAOyb,EAAP,YAClCyf,EAAkBx4B,KAAK,CAAE1C,MAAKyb,qBAC7Byf,GAnJUpoB,EAqJZ6L,sBAAwB,SAACC,GAC9B,IAAIsc,EAAoB,GAQxB,OAPA37B,OAAOE,QAAQmf,GAAYnc,SAAQ,YAAuB,IAAD,qBAApB8R,EAAoB,KAAZ4mB,EAAY,KACvD,UAAIj5B,UAAJ,IAAIA,KAAJ,UAAIA,IAAeqS,UAAnB,aAAI,EAAwBimB,KAAM,CAChC,IAAIY,EAAa77B,OAAO9C,KAAKyF,IAAaqS,GAAQimB,MAAM96B,QAAO,SAAAof,GAAS,OAAI7c,SAAS6c,IAAcqc,EAAO7lB,UACtG8lB,EAAW9lB,SACb4lB,EAAkB3mB,GAAU6mB,OAG3BF,GA9JUpoB,EAiKZ8M,yBAA2B,SAACrL,EAAQuK,EAAW3gB,GAAiC,IAAD,MAAhBf,EAAgB,uDAAP,GACzEi+B,EAAa,OAAGn5B,UAAH,IAAGA,KAAH,UAAGA,IAAeqS,UAAlB,iBAAG,EAAwBimB,YAA3B,iBAAG,EAA+B1b,UAAlC,aAAG,EAA2C/Y,KAC/D,OAAKs1B,EACwB,oBAAlBA,EACFA,EAAcl9B,GACdk9B,GAEFj+B,EALoBA,GAnKV0V,EA0KZmM,gCAAkC,SAAC1K,EAAQuK,GAAT,UAAoB1hB,EAApB,uDAA6B,KAA7B,OAC3B,OAAZ8E,UAAY,IAAZA,KAAA,UAAAA,IAAeqS,UAAf,mBAAwBimB,YAAxB,mBAA+B1b,UAA/B,eAA2CrgB,cAAerB,GA3KzC0V,EA6KZwoB,4BAA8B,SAACve,GACpC,IAAIwe,EAAwB,GAwB5B,OAvBAh8B,OAAOE,QAAQyC,KAAcO,SAAQ,YAAuB,IAAD,mBAApB8R,EAAoB,KAAZinB,EAAY,KACrDC,EAAY,GACZC,GAAe,EACfF,EAAOhB,MACTj7B,OAAOE,QAAQ+7B,EAAOhB,MAAM/3B,SAAQ,YAAgC,IAAD,mBAA7Bqc,EAA6B,KAAlB6c,EAAkB,KAKjE,GAJIA,EAAav8B,OAASG,OAAO9C,KAAKk/B,EAAav8B,OAAOkW,OAAS,IACjEmmB,EAAU3c,GAAawM,YAAUqQ,EAAav8B,OAC9Cs8B,GAAe,GAEbC,EAAal9B,YAAa,CAC5B,IAAI2B,EAAiBC,IAAiB6e,kBAAkBnC,EAAsB,CAAEoC,OAAQ5K,EAAQ6K,QAASN,IACzG,GAAI1e,EAAgB,CAClB,IAAI4wB,EA3LGle,EA2LcwM,4BAA4B/K,EAAQuK,EAAW1e,GAChE4wB,IACFyK,EAAU3c,GAAawM,YAAU0F,GACjC0K,GAAe,QAKrBA,IACFH,EAAsBhnB,GAAUknB,MAE7BF,I,sGC9MUl7B,E,WACnB,aAAgB,GAAD,oBAAKvD,gBAAgBuD,EAAkB,MAAMtD,MAAM,0C,mEACzC6+B,EAAcC,GAAY,IAAD,EAC1C1c,EAAoB0c,EAApB1c,OAAQC,EAAYyc,EAAZzc,QACd,GAAIwc,EACF,OAAO,UAAAA,EAAa1M,MAAK,SAAAO,GAAI,OAAIA,EAAKtQ,SAAWA,KAAYC,GAAYA,GAAWqQ,EAAKrQ,UAAYA,aAA9F,eAA0Ghf,iBAAkB,I,qCAEjHw7B,EAAcC,EAAWz7B,GAAiB,IACxD+e,EAAoB0c,EAApB1c,OAAQC,EAAYyc,EAAZzc,QACTwc,IAAcA,EAAe,IAClC,IAAIpT,EAAQoT,EAAaE,WAAU,SAAArM,GAAI,OAAIA,EAAKtQ,SAAWA,KAAYC,GAAYA,GAAWqQ,EAAKrQ,UAAYA,MAC/G,IAAKhf,GAAkBooB,GAAS,EAE9BoT,EAAaG,OAAOvT,EAAO,OACtB,CACL,IAAIwT,EAAU,CAAE7c,SAAQ/e,kBACpBgf,IAAS4c,EAAQ5c,QAAUA,GAC3BoJ,GAAS,EACXoT,EAAapT,GAASwT,EAEtBJ,EAAal5B,KAAKs5B,GAEtB,OAAOJ,I,yCAEiBn9B,EAAaw9B,EAAW77B,GAAmC,IAAnBhD,EAAkB,uDAAT,CAAC,GAAI,GAC9E,GAAIZ,MAAMkJ,QAAQjH,GAAc,CAE9B,IAF8B,EAE1BkH,EAAyBvF,EACzBwF,EAAsB,KAHI,cAIDnH,GAJC,IAI9B,2BAA0C,CAAC,IAAhCoH,EAA+B,QACxC,KAAIF,EAAyBE,EAAeC,UACvC,CACHF,EAAsBC,EACtB,MAHoDF,GAA0BE,EAAeC,UALnE,8BAW9B,IAAKF,EAAqB,OAAOxI,EACjC,IAAImD,EAASmhB,YAAM/b,EAAwB,EAAGC,EAAoBE,UAClE,MAAO,CAACF,EAAoBq2B,GAAY17B,GAGxC,IAAIA,EAASmhB,YAAMthB,EAAgB,EAAG3B,EAAYqH,UAClD,MAAO,CAACrH,EAAYw9B,GAAY17B,O","file":"static/js/11.80805bae.chunk.js","sourcesContent":["import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = (props) => <span className={props.colored ? \"text-5star\" : \"\"}>\r\n  {props.stars ? [...Array(props.stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst FloatFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseFloat(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\n\r\nconst IntFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseInt(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\nexport {\r\n  FloatFormControl,\r\n  IntFormControl\r\n}","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import DullBlade from './Weapon_Dull_Blade.png'\r\nimport SilverSword from './Weapon_Silver_Sword.png'\r\nimport CoolSteel from './Weapon_Cool_Steel.png'\r\nimport DarkIronSword from './Weapon_Dark_Iron_Sword.png'\r\nimport FilletBlade from './Weapon_Fillet_Blade.png'\r\nimport HarbingerOfDawn from './Weapon_Harbinger_of_Dawn.png'\r\nimport SkyriderSword from './Weapon_Skyrider_Sword.png'\r\nimport TravelersHandySword from './Weapon_Traveler\\'s_Handy_Sword.png'\r\nimport BlackcliffLongsword from './Weapon_Blackcliff_Longsword.png'\r\nimport FavoniusSword from './Weapon_Favonius_Sword.png'\r\nimport IronSting from './Weapon_Iron_Sting.png'\r\nimport LionsRoar from './Weapon_Lion\\'s_Roar.png'\r\nimport PrototypeRancour from './Weapon_Prototype_Rancour.png'\r\nimport RoyalLongsword from './Weapon_Royal_Longsword.png'\r\nimport SacrificialSword from './Weapon_Sacrificial_Sword.png'\r\nimport TheAlleyFlash from './Weapon_The_Alley_Flash.png'\r\nimport TheBlackSword from './Weapon_The_Black_Sword.png'\r\nimport TheFlute from './Weapon_The_Flute.png'\r\nimport SwordOfDescension from './Weapon_Sword_of_Descension.png'\r\nimport FesteringDesire from './festering_fang.png'\r\nimport AquilaFavonia from './Weapon_Aquila_Favonia.png'\r\nimport SkywardBlade from './Weapon_Skyward_Blade.png'\r\nimport SummitShaper from './summit_shaper.png'\r\nconst sword = {\r\n  DullBlade,\r\n  SilverSword,\r\n  CoolSteel,\r\n  DarkIronSword,\r\n  FilletBlade,\r\n  HarbingerOfDawn,\r\n  SkyriderSword,\r\n  TravelersHandySword,\r\n  BlackcliffLongsword,\r\n  FavoniusSword,\r\n  IronSting,\r\n  LionsRoar,\r\n  PrototypeRancour,\r\n  RoyalLongsword,\r\n  SacrificialSword,\r\n  TheAlleyFlash,\r\n  TheBlackSword,\r\n  TheFlute,\r\n  SwordOfDescension,\r\n  FesteringDesire,\r\n  AquilaFavonia,\r\n  SkywardBlade,\r\n  SummitShaper,\r\n}\r\nexport default sword","export default __webpack_public_path__ + \"static/media/Weapon_Dull_Blade.f5de06e8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Silver_Sword.e2462179.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Cool_Steel.0c6a9897.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dark_Iron_Sword.8dce5b63.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Fillet_Blade.c8e8ab5f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Harbinger_of_Dawn.26da0d78.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Sword.80e60c22.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Traveler's_Handy_Sword.168a7842.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Longsword.522f4d19.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Sword.cb5df26b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Sting.9f4b4b01.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lion's_Roar.b0e78fa9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Rancour.64965f56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Longsword.5a57f015.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Sword.048703ab.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Alley_Flash.7528f5ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Black_Sword.3987a991.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Flute.82af0cbf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sword_of_Descension.eb67a1df.png\";","export default __webpack_public_path__ + \"static/media/festering_fang.38aa5200.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Aquila_Favonia.7c014114.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Blade.af22a740.png\";","export default __webpack_public_path__ + \"static/media/summit_shaper.5245335d.png\";","import WasterGreatsword from './Weapon_Waster_Greatsword.png'\r\nimport OldMercsPal from './Weapon_Old_Merc\\'s_Pal.png'\r\nimport BloodtaintedGreatsword from './Weapon_Bloodtainted_Greatsword.png'\r\nimport DebateClub from './Weapon_Debate_Club.png'\r\nimport FerrousShadow from './Weapon_Ferrous_Shadow.png'\r\nimport Quartz from './Weapon_Quartz.png'\r\nimport SkyriderGreatsword from './Weapon_Skyrider_Greatsword.png'\r\nimport WhiteIronGreatsword from './Weapon_White_Iron_Greatsword.png'\r\nimport BlackcliffSlasher from './Weapon_Blackcliff_Slasher.png'\r\nimport FavoniusGreatsword from './Weapon_Favonius_Greatsword.png'\r\nimport LithicBlade from './Weapon_Lithic_Blade.png'\r\nimport PrototypeAminus from './Weapon_Prototype_Aminus.png'\r\nimport Rainslasher from './Weapon_Rainslasher.png'\r\nimport RoyalGreatsword from './Weapon_Royal_Greatsword.png'\r\nimport SerpentSpine from './Weapon_Serpent_Spine.png'\r\nimport TheBell from './Weapon_The_Bell.png'\r\nimport Whiteblind from './Weapon_Whiteblind.png'\r\nimport SacrificialGreatsword from './Weapon_Sacrificial_Greatsword.png'\r\nimport SnowTombedStarsilver from './snow_tombed_starsilver.png'\r\nimport SkywardPride from './Weapon_Skyward_Pride.png'\r\nimport WolfsGravestone from './Weapon_Wolf\\'s_Gravestone.png'\r\nimport TheUnforged from './Weapon_The_Unforged.png'\r\nconst claymore = {\r\n  WasterGreatsword,\r\n  OldMercsPal,\r\n  BloodtaintedGreatsword,\r\n  DebateClub,\r\n  FerrousShadow,\r\n  Quartz,\r\n  SkyriderGreatsword,\r\n  WhiteIronGreatsword,\r\n  BlackcliffSlasher,\r\n  FavoniusGreatsword,\r\n  LithicBlade,\r\n  PrototypeAminus,\r\n  Rainslasher,\r\n  RoyalGreatsword,\r\n  SerpentSpine,\r\n  TheBell,\r\n  Whiteblind,\r\n  SacrificialGreatsword,\r\n  SnowTombedStarsilver,\r\n  SkywardPride,\r\n  WolfsGravestone,\r\n  TheUnforged,\r\n}\r\nexport default claymore","export default __webpack_public_path__ + \"static/media/Weapon_Waster_Greatsword.a411f34b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Old_Merc's_Pal.67aa1930.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Bloodtainted_Greatsword.eb68a62c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Debate_Club.be908652.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ferrous_Shadow.ef586057.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Quartz.d41c58b9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Greatsword.46e935cb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Iron_Greatsword.eda6295d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Slasher.4693af54.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Greatsword.bfd288be.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Blade.ab4d4f4f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Aminus.d2bf526a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rainslasher.664c61ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Greatsword.fbc5184a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Serpent_Spine.bb2831b5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Bell.3670f330.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Whiteblind.9c37b7dd.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Greatsword.1b0f0225.png\";","export default __webpack_public_path__ + \"static/media/snow_tombed_starsilver.23f56359.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Pride.66a1b3f7.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wolf's_Gravestone.032b607c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Unforged.f7762a2f.png\";","import BeginnersProtector from './Weapon_Beginner\\'s_Protector.png'\r\nimport IronPoint from './Weapon_Iron_Point.png'\r\nimport BlackTassel from './Weapon_Black_Tassel.png'\r\nimport Halberd from './Weapon_Halberd.png'\r\nimport WhiteTassel from './Weapon_White_Tassel.png'\r\nimport BlackcliffPole from './Weapon_Blackcliff_Pole.png'\r\nimport CrescentPike from './Weapon_Crescent_Pike.png'\r\nimport Deathmatch from './Weapon_Deathmatch.png'\r\nimport DragonsBane from './Weapon_Dragon\\'s_Bane.png'\r\nimport LithicSpear from './Weapon_Lithic_Spear.png'\r\nimport PrototypeGrudge from './Weapon_Prototype_Grudge.png'\r\nimport FavoniusLance from './Weapon_Favonius_Lance.png'\r\nimport RoyalSpear from './Weapon_Royal_Spear.png'\r\nimport DragonspineSpear from './dragonspine_spear.png'\r\nimport VortexVanquisher from './Weapon_Vortex_Vanquisher.png'\r\nimport PrimordialJadeWingedSpear from './Weapon_Primordial_Jade_Winged-Spear.png'\r\nimport SkywardSpine from './Weapon_Skyward_Spine.png'\r\nconst polearms = {\r\n  BeginnersProtector,\r\n  IronPoint,\r\n  BlackTassel,\r\n  Halberd,\r\n  WhiteTassel,\r\n  BlackcliffPole,\r\n  CrescentPike,\r\n  Deathmatch,\r\n  DragonsBane,\r\n  LithicSpear,\r\n  PrototypeGrudge,\r\n  FavoniusLance,\r\n  RoyalSpear,\r\n  DragonspineSpear,\r\n  VortexVanquisher,\r\n  PrimordialJadeWingedSpear,\r\n  SkywardSpine,\r\n}\r\nexport default polearms","export default __webpack_public_path__ + \"static/media/Weapon_Beginner's_Protector.19165915.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Point.8263916c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Black_Tassel.c3103e46.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Halberd.0044e214.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Tassel.a3cc9099.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Pole.1e15a879.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Crescent_Pike.9e473ddb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Deathmatch.9b0e6d8e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dragon's_Bane.7437cf28.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Spear.cfb11b6c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Grudge.64b3a263.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Lance.693335d4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Spear.99058465.png\";","export default __webpack_public_path__ + \"static/media/dragonspine_spear.bb785669.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Vortex_Vanquisher.efad8956.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Primordial_Jade_Winged-Spear.ea10bc42.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Spine.e81931a5.png\";","import HuntersBow from './Weapon_Hunter\\'s_Bow.png'\r\nimport SeasonedHuntersBow from './Weapon_Seasoned_Hunter\\'s_Bow.png'\r\nimport EbonyBow from './Weapon_Ebony_Bow.png'\r\nimport Messenger from './Weapon_Messenger.png'\r\nimport RavenBow from './Weapon_Raven_Bow.png'\r\nimport RecurveBow from './Weapon_Recurve_Bow.png'\r\nimport SharpshootersOath from './Weapon_Sharpshooter\\'s_Oath.png'\r\nimport Slingshot from './Weapon_Slingshot.png'\r\nimport TheStringless from './Weapon_The_Stringless.png'\r\nimport AlleyHunter from './Weapon_Alley_Hunter.png'\r\nimport BlackcliffWarbow from './Weapon_Blackcliff_Warbow.png'\r\nimport CompoundBow from './Weapon_Compound_Bow.png'\r\nimport FavoniusWarbow from './Weapon_Favonius_Warbow.png'\r\nimport PrototypeCrescent from './Weapon_Prototype_Crescent.png'\r\nimport RoyalBow from './Weapon_Royal_Bow.png'\r\nimport Rust from './Weapon_Rust.png'\r\nimport SacrificialBow from './Weapon_Sacrificial_Bow.png'\r\nimport TheViridescentHunt from './Weapon_The_Viridescent_Hunt.png'\r\nimport SkywardHarp from './Weapon_Skyward_Harp.png'\r\nimport AmosBow from './Weapon_Amos\\'_Bow.png'\r\nimport DreamsOfDragonfell from './dreams_of_dragonfell.png'\r\nconst bows = {\r\n  HuntersBow,\r\n  SeasonedHuntersBow,\r\n  EbonyBow,\r\n  Messenger,\r\n  RavenBow,\r\n  RecurveBow,\r\n  SharpshootersOath,\r\n  Slingshot,\r\n  TheStringless,\r\n  AlleyHunter,\r\n  BlackcliffWarbow,\r\n  CompoundBow,\r\n  FavoniusWarbow,\r\n  PrototypeCrescent,\r\n  RoyalBow,\r\n  Rust,\r\n  SacrificialBow,\r\n  TheViridescentHunt,\r\n  SkywardHarp,\r\n  AmosBow,\r\n  DreamsOfDragonfell,\r\n}\r\nexport default bows","export default __webpack_public_path__ + \"static/media/Weapon_Hunter's_Bow.2e941c96.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Seasoned_Hunter's_Bow.bc6a42aa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ebony_Bow.f89cc3cc.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Messenger.939170eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Raven_Bow.b88fe5c0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Recurve_Bow.bafcde86.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sharpshooter's_Oath.1d149cf5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Slingshot.d2eeb3eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Stringless.b718aa93.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Alley_Hunter.8cc323c2.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Warbow.098f24da.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Compound_Bow.a8457f4e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Warbow.19e98358.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Crescent.50a174b0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Bow.06fbac8b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rust.65b7af56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Bow.804b7a38.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Viridescent_Hunt.904062bf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Harp.6961093e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amos'_Bow.e97cd305.png\";","export default __webpack_public_path__ + \"static/media/dreams_of_dragonfell.8aaebb39.png\";","import ApprenticesNotes from './Weapon_Apprentice\\'s_Notes.png'\r\nimport PocketGrimoire from './Weapon_Pocket_Grimoire.png'\r\nimport AmberCatalyst from './Weapon_Amber_Catalyst.png'\r\nimport EmeraldOrb from './Weapon_Emerald_Orb.png'\r\nimport MagicGuide from './Weapon_Magic_Guide.png'\r\nimport OtherworldlyStory from './Weapon_Otherworldly_Story.png'\r\nimport ThrillingTalesOfDragonSlayers from './Weapon_Thrilling_Tales_of_Dragon_Slayers.png'\r\nimport TwinNephrite from './Weapon_Twin_Nephrite.png'\r\nimport BlackcliffAgate from './Weapon_Blackcliff_Amulet.png'\r\nimport FavoniusCodex from './Weapon_Favonius_Codex.png'\r\nimport MappaMare from './Weapon_Mappa_Mare.png'\r\nimport PrototypeMalice from './Weapon_Prototype_Malice.png'\r\nimport RoyalGrimoire from './Weapon_Royal_Grimoire.png'\r\nimport SacrificialFragments from './Weapon_Sacrificial_Fragments.png'\r\nimport SolarPearl from './Weapon_Solar_Pearl.png'\r\nimport TheWidsith from './Weapon_The_Widsith.png'\r\nimport WineAndSong from './Weapon_Wine_and_Song.png'\r\nimport EyeOfPerception from './Weapon_Eye_of_Perception.png'\r\nimport Frostbearer from './Weapon_Frostbearer.png'\r\nimport LostPrayerToTheSacredWinds from './Weapon_Lost_Prayer_to_the_Sacred_Winds.png'\r\nimport SkywardAtlas from './Weapon_Skyward_Atlas.png'\r\nimport MemoryOfDust from './Weapon_Memory_of_Dust.png'\r\nconst catalysts = {\r\n  ApprenticesNotes,\r\n  PocketGrimoire,\r\n  AmberCatalyst,\r\n  EmeraldOrb,\r\n  MagicGuide,\r\n  OtherworldlyStory,\r\n  ThrillingTalesOfDragonSlayers,\r\n  TwinNephrite,\r\n  BlackcliffAgate,\r\n  FavoniusCodex,\r\n  MappaMare,\r\n  PrototypeMalice,\r\n  RoyalGrimoire,\r\n  SacrificialFragments,\r\n  SolarPearl,\r\n  TheWidsith,\r\n  WineAndSong,\r\n  EyeOfPerception,\r\n  Frostbearer,\r\n  LostPrayerToTheSacredWinds,\r\n  SkywardAtlas,\r\n  MemoryOfDust\r\n}\r\nexport default catalysts","export default __webpack_public_path__ + \"static/media/Weapon_Apprentice's_Notes.0b7fb81e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Pocket_Grimoire.536179c5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amber_Catalyst.01ede681.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Emerald_Orb.4008f986.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Magic_Guide.64c777ec.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Otherworldly_Story.48b54293.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Thrilling_Tales_of_Dragon_Slayers.692d45b8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Twin_Nephrite.b0c2488b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Amulet.b97d01eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Codex.6e201cfa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Mappa_Mare.bc35dc35.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Malice.4ab08cb6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Grimoire.2f67eac4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Fragments.4dd54e2d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Solar_Pearl.d629ae58.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Widsith.a6fe1227.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wine_and_Song.0aa416e6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Eye_of_Perception.907a0288.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Frostbearer.bde00061.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lost_Prayer_to_the_Sacred_Winds.45f8ca2a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Atlas.8b4f86fa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Memory_of_Dust.4e45ccbb.png\";","import weapons from './Weapons/Weapons'\r\n\r\nimport anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  weapons,\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","import swords from './Swords/Swords'\r\nimport claymores from './Claymores/Claymores'\r\nimport polearms from './Polearms//Polearms'\r\nimport bows from './Bows/Bows'\r\nimport catalysts from './Catalysts/Catalysts'\r\nconst weapons = {\r\n  ...swords,\r\n  ...claymores,\r\n  ...polearms,\r\n  ...bows,\r\n  ...catalysts,\r\n}\r\nexport default weapons","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, Image, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId) return null;\r\n  const equipOnChar = (charId) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charId)\r\n    forceUpdate?.()\r\n  }\r\n\r\n  let art = ArtifactDatabase.getArtifact(artifactId);\r\n  let artifactValidation = Artifact.artifactValidation(art)\r\n  let locationChar = CharacterDatabase.getCharacter(art.location)\r\n  let location = locationChar ? locationChar.name : \"Inventory\"\r\n  let mainStatLevel = assumeFull ? art.numStars * 4 : art.level\r\n  let assFullColor = assumeFull && art.level !== art.numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(art.mainStatKey, art.numStars, mainStatLevel, \"\")}{Stat.getStatUnit(art.mainStatKey)}</span>\r\n  return (<Card className=\"h-100\" border={`${art.numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getArtifactPieceIcon(art.setKey, art.slotKey)} className={`w-100 h-auto grad-${art.numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{`${Artifact.getArtifactPieceName(art.setKey, art.slotKey, \"Unknown Piece Name\")}`}</b></h6>\r\n          <div>{Artifact.getArtifactSlotNameWithIcon(art.slotKey)}{` +${art.level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getArtifactSetName(art.setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={art.numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(art.mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {art.substats ? art.substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let subStatValidation = artifactValidation.subStatValidations[i]\r\n          let numRolls = subStatValidation?.rolls?.length || 0\r\n          let efficiency = subStatValidation?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={artifactValidation.valid ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{artifactValidation.valid ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        }\r\n        ) : null}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.currentEfficiency}>\r\n          {(artifactValidation.currentEfficiency ? artifactValidation.currentEfficiency : 0).toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.maximumEfficiency}>\r\n          {(artifactValidation.maximumEfficiency ? artifactValidation.maximumEfficiency : 0).toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\">{location}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar()}>Inventory</Dropdown.Item>\r\n              {Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n                <Dropdown.Item key={id} onClick={() => equipOnChar(id)}>\r\n                  {char.name}\r\n                </Dropdown.Item>)}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><span>Location: {location}</span></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={art.location}\r\n                  style={art.location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    art.lock = !art.lock\r\n                    ArtifactDatabase.updateArtifact(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(art.lock || art.location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Col } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\nfunction DisplayStats({ statKey, character, build, editable, ...otherProps }) {\r\n  let buildVal = build?.finalStats?.[statKey] || 0\r\n  let statVal, buildDiff = null\r\n  if (typeof buildVal === \"string\") {\r\n    statVal = <span>{buildVal}</span>\r\n  } else {\r\n    let originalVal = Character.getStatValueWithOverride(character, statKey)\r\n    if (statKey === \"hp_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"hp_base\")\r\n    else if (statKey === \"def_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"def_base\")\r\n    else if (statKey === \"atk_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"atk_base\") + Character.getStatValueWithOverride(character, \"atk_weapon\")\r\n\r\n    let diff = buildVal - originalVal\r\n    let diffText = (diff?.toFixed?.(Stat.fixedUnit(statKey)) || diff) + Stat.getStatUnit(statKey)\r\n    if (diff < 0) buildDiff = <span className=\"text-success\">{diffText}</span>\r\n    else if (diff > 0) buildDiff = <span className=\"text-success\"> +{diffText}</span>\r\n\r\n    if (originalVal || !diff) statVal = <span className={editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}>{(originalVal?.toFixed?.(Stat.fixedUnit(statKey)) || originalVal) + Stat.getStatUnit(statKey)}</span>\r\n  }\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className=\"float-right text-right\">{statVal}{buildDiff}</span>\r\n  </Col>\r\n}\r\nconst DisplayNewBuildDiff = ({ statKey, character, equippedBuild, newBuild, editable, ...otherProps }) => {\r\n  let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right ${editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed?.(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed?.(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nexport {\r\n  DisplayStats,\r\n  DisplayNewBuildDiff,\r\n}","import React, { useState } from 'react';\r\nimport { Accordion, Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { DisplayNewBuildDiff, DisplayStats } from '../../Components/StatDisplay';\r\nimport Stat, { FormulaText } from \"../../Stat\";\r\nimport { GetDependencyStats } from '../../StatDependency';\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState }) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(characterKey)\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  const formulaDependencyKeys = [...new Set(statKeys.map(key => GetDependencyStats(key, build.finalStats?.formulaOverrides)).flat())]\r\n  const formulaKeys = Object.keys(FormulaText).filter(key => formulaDependencyKeys.includes(key))\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Calculations`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ?\r\n                  statKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                  statKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {formulaKeys.map(key => <Col key={key} xs={12} className=\"mt-2\">\r\n                    <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                      <Card.Header className=\"p-2\">\r\n                        {Stat.printStat(key, build.finalStats)}\r\n                      </Card.Header>\r\n                      <Card.Body className=\"p-2\">\r\n                        <small>{Stat.printFormula(key, build.finalStats, build.finalStats.formulaOverrides, false)}</small>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  )}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n              {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getArtifactSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getArtifactSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getArtifactSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            let conditionalStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n                            if (conditionalStats) {\r\n                              if (!setStats) setStats = {}\r\n                              Object.entries(conditionalStats).forEach(([statKey, val]) =>\r\n                                setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                            }\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getArtifactSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Object.values(build.artifactIds).map(artid =>\r\n            artid ? <Col sm={6} lg={4} key={artid} className=\"mb-2\">\r\n              <ArtifactCard artifactId={artid} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport { DisplayNewBuildDiff, DisplayStats } from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"char_level\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={(val) => setOverride(\"char_level\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"char_level\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Assets.weapons[weapon.key]} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats, character)}</p>\r\n            <Row>\r\n              <Col xs={12} md={6}>\r\n                <h5>ATK: {weaponDisplayMainVal}</h5>\r\n              </Col>\r\n              {subStatKey && <Col xs={12} md={6}>\r\n                <h5>{Stat.getStatName(subStatKey)}: {weaponDisplaySubVal}{Stat.getStatUnit(subStatKey)}</h5>\r\n              </Col>}\r\n            </Row>\r\n            {<Row>\r\n              {(conditionalStats || weaponBonusStats) && <Col xs={12}><h6 className=\"mb-0\">Bonus Stats:</h6></Col>}\r\n              {weaponBonusStats && Object.entries(weaponBonusStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"bonu\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n              {conditionalStats && Object.entries(conditionalStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"cond\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n            </Row>}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  let { editable, character, character: { compareAgainstEquipped }, setOverride, equippedBuild, newBuild } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  let additionalKeys = [\"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const displayStatKeys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp_base\", \"hp\", \"hp_\", \"atk_base\", \"atk\", \"atk_\", \"def_base\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\", \"skill_crit_rate\", \"burst_crit_rate\", \"all_dmg_bonus\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              displayStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              displayStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              otherStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ?\r\n            miscStatkeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n            miscStatkeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n","import { faCheckSquare, faQuestionCircle, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, ToggleButton, ToggleButtonGroup, Tooltip } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat, { FormulaText } from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { GetDependencyStats } from \"../../StatDependency\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation, dmgMode }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  //choose which one to display stats for\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button\r\n        // style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"norm_atk\", \"char_atk\", \"plunge\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(Character.getTalentStatKey(\"char_atk\", character, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    //search for dependency, and flatten, isolate unique keys\r\n    keys = [...new Set(keys.map(key => GetDependencyStats(key, build.finalStats?.formulaOverrides)).flat())]\r\n    //return keys that are part of the formula text, in the order in which they appear.\r\n    return Object.keys(FormulaText).filter(key => keys.includes(key))\r\n  }\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <Accordion>\r\n        <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Options</span>\r\n                <small>Expand below to edit enemy details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ToggleButtonGroup type=\"radio\" value={dmgMode} name=\"dmgOptions\" onChange={(dmgMode) => setState({ dmgMode })}>\r\n                  <ToggleButton value=\"avg_dmg\">Avg. DMG</ToggleButton>\r\n                  <ToggleButton value=\"dmg\">Normal Hit, No Crit</ToggleButton>\r\n                  <ToggleButton value=\"crit_dmg\">Crit Hit DMG</ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Row className=\"mb-2\"><Col>\r\n                <Button variant=\"warning\" >\r\n                  <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                    To get the specific resistance values of enemies, please visit the wiki.\r\n                  </a>\r\n                </Button >\r\n              </Col></Row>\r\n              <Row>\r\n                <Col xs={12} xl={6} className=\"mb-2\">\r\n                  <StatInput\r\n                    name={<b>Enemy Level</b>}\r\n                    value={Character.getStatValueWithOverride(character, \"enemy_level\")}\r\n                    placeholder={Stat.getStatNameRaw(\"enemy_level\")}\r\n                    defaultValue={Character.getBaseStatValue(character, \"enemy_level\")}\r\n                    onValueChange={(val) => setOverride(\"enemy_level\", val)}\r\n                  />\r\n                </Col>\r\n                {[\"physical\", ...Character.getElementalKeys()].map(eleKey => {\r\n                  let statKey = eleKey === \"physical\" ? \"enemy_phy_res\" : `${eleKey}_enemy_ele_res`\r\n                  let immunityStatKey = eleKey === \"physical\" ? \"enemy_phy_immunity\" : `${eleKey}_enemy_ele_immunity`\r\n                  let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                  return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                        <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                      name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                      value={Character.getStatValueWithOverride(character, statKey)}\r\n                      placeholder={Stat.getStatNameRaw(statKey)}\r\n                      defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                      onValueChange={(val) => setOverride(statKey, val)}\r\n                      disabled={elementImmunity}\r\n                    />\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Formulas</span>\r\n                <small>Expand below to see calculation details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n              <Row>\r\n                {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\r\n                  <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                    <Card.Header className=\"p-2\">\r\n                      {Stat.printStat(key, build.finalStats)}\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-2\">\r\n                      <small>{Stat.printFormula(key, build.finalStats, build.finalStats.formulaOverrides, false)}</small>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                )}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_dmg: SuperConductCard,\r\n  electrocharged_dmg: ElectroChargedCard,\r\n  overloaded_dmg: OverloadedCard,\r\n  swirl_dmg: SwirlCard,\r\n  shatter_dmg: ShatteredCard,\r\n  crystalize_dmg: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey, reactionMode = \"none\" }, newBuild, equippedBuild, setState }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let charEleKey = Character.getElementalKey(characterKey)\r\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shatter_dmg\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shatter_dmg\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body>\r\n      <Row>\r\n        <Col ><Row className=\"mb-n2\">\r\n          {eleInterArr.map(key => {\r\n            let Ele = ReactionComponents[key]\r\n            if (!Ele) return null\r\n            let val = build?.finalStats?.[key]\r\n            val = val?.toFixed?.(Stat.fixedUnit(key)) || val\r\n            return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele value={val} /></Col>\r\n          })}\r\n        </Row></Col>\r\n        <Col xs=\"auto\">\r\n          {[\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup\r\n            type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setState({ reactionMode: val === \"none\" ? null : val })}>\r\n            <ToggleButton className=\"p-3\" value={\"none\"}> <h6>No Elemental</h6> <h6>Interactions</h6></ToggleButton >\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-3\" value={\"pyro_vaporize\"}>\r\n              <h6 className=\"text-vaporize\">Vaporize(Pyro)</h6>\r\n              <h2 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h2>\r\n            </ToggleButton >}\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-3\" value={\"pyro_melt\"}>\r\n              <h6 className=\"text-melt\">Melt(Pyro)</h6>\r\n              <h2 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h2>\r\n            </ToggleButton >}\r\n            {charEleKey === \"hydro\" && <ToggleButton className=\"p-3\" value={\"hydro_vaporize\"}>\r\n              <h6 className=\"text-vaporize\">Melt(Pyro)</h6>\r\n              <h2 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" />\r\n              </h2>\r\n            </ToggleButton >}\r\n            {charEleKey === \"cryo\" && <ToggleButton className=\"p-3\" value={\"cryo_melt\"}>\r\n              <h6 className=\"text-melt\">Melt(Pyro)</h6>\r\n              <h2 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />\r\n              </h2>\r\n            </ToggleButton >}\r\n          </ToggleButtonGroup>}\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"superconduct_dmg\")}</h6>\r\n    <h2 className=\"text-superconduct mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"electrocharged_dmg\")}</h6>\r\n    <h2 className=\"text-electrocharged mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"overloaded_dmg\")}</h6>\r\n    <h2 className=\"text-overloaded mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\nfunction SwirlCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"swirl_dmg\")}</h6>\r\n    <h2 className=\"text-swirl mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ value }) {\r\n  let information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"shatter_dmg\")}</h6>\r\n    <h2 className=\"text-shatter mb-0\">\r\n      <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"crystalize_dmg\")}</h6>\r\n    <h2 className=\"text-crystalize mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let { talentLvlKey = undefined, levelBoost = 0 } = Character.getTalentLevelKey(character, talentKey, constellation, true)\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n  if (typeof talentLvlKey === \"number\") {\r\n    if (editable) {\r\n      let setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        let talentLevelKeys = state.talentLevelKeys || {}\r\n        talentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let statsEle = null\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  if (talentStats) {\r\n    statsEle = <Row><Col>\r\n      <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n        <ListGroup className=\"text-white\" variant=\"flush\">\r\n          {Object.entries(talentStats).map(([statKey, statVal], index) =>\r\n            <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n              <div>\r\n                <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n              </div>\r\n            </ListGroup.Item>\r\n          )}\r\n        </ListGroup>\r\n      </Card>\r\n    </Col></Row>\r\n  }\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalStats = {}\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            //filter out formulaOverrides from rendering\r\n            conditionalStats = Object.fromEntries(Object.entries(conditionalStats).filter(([key, _]) => key !== \"formulaOverrides\"))\r\n            conditionalFields = Character.getTalentConditionalFields(conditional, conditionalNum, [])\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Row><Col>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {Object.entries(conditionalStats).map(([statKey, statVal], index) =>\r\n                  <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n                    <div>\r\n                      <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                      <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n                    </div>\r\n                  </ListGroup.Item>\r\n                )}\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i + (conditionalStats?.length || 0)} index={i + (conditionalStats?.length || 0)} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col></Row>\r\n        }\r\n        return <Row className=\"mt-2\" key={\"section\" + i}><Col xs={12}>\r\n          <span>{talentText}</span>\r\n          {fields.length > 0 && <ListGroup className=\"text-white ml-n2 mr-n2\">\r\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n          {conditionalEle}\r\n        </Col></Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay(props) {\r\n  let { character, character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldVariant = field.variant || \"\"\r\n  if (typeof fieldVariant === \"function\")\r\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldBasic = field.basicVal\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats, character)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = field.value ? field.value : field.finalVal\r\n  if (typeof fieldVal === \"function\") {\r\n    fieldVal = fieldVal?.(talentLvlKey, build.finalStats, character)\r\n  }\r\n  if (typeof fieldVal === \"number\")\r\n    fieldVal = Math.round(fieldVal)\r\n\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.finalVal\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats, character)?.toFixed?.(0))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterId)\r\n      this.state = CharacterDatabase.getCharacter(props.characterId)\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    dmgMode: \"dmg\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey), reactionMode: null, autoInfused: false })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getArtifactDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.characterId && this.state.id !== this.props.characterId)\r\n      this.setState(CharacterDatabase.getCharacter(this.props.characterId))\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"char_level\")}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        {/* TODO revert the default to newBuild ? \"newartifacts\" : \"character\" */}\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"talent\"} mountOnEnter={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && (Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\"}>Talents {(Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\" && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} setState={this.setSetState} setOverride={this.setOverride} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { AttachLazyFormulas, ElementToReactionKeys } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getCDataObj(charKey)?.talent?.[talentKey]?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getCDataObj(charKey)?.talent?.[talentKey]?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getCDataObj(charKey)?.talent?.[talentKey]?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"formulaOverrides\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_base\") || false\r\n    return character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getArtifactSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals, initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals && artifactConditionals.forEach(conditional => {\r\n      let { srcKey: setKey, srcKey2: setNumKey } = conditional\r\n      let condStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditional.conditionalNum)\r\n      if (condStats) Object.entries(condStats).forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n    AttachLazyFormulas(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"formulaOverrides\") {\r\n        initialStats.formulaOverrides = [...(initialStats.formulaOverrides || []), ...val]\r\n        return\r\n      }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, OverrideFormulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static printFormula = (statKey, stats, formulaOverrides = [], expand = true) => {\r\n    for (const formulaOverride of formulaOverrides)\r\n      if (OverrideFormulas[formulaOverride?.key]?.key === statKey)\r\n        return Stat.printOverrideFormula(stats, formulaOverride.key, formulaOverride.options, false)\r\n    return FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n      (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n  }\r\n\r\n  static printOverrideFormula = (stats, overrideKey, options, expand = true) =>\r\n    OverrideFormulasText?.[overrideKey] && typeof OverrideFormulasText?.[overrideKey].formulaText === \"function\" &&\r\n    (<span>{OverrideFormulasText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  trans_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(0, \"ele_mas\")} * exp^(-0.000505 * {f(0, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulasText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.value}%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getArtifactDataImport = () => ArtifactDataImport\r\n  static getArtifactSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getArtifactSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData).filter(([key, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getArtifactPieceName = (setKey, slotKey, defVal = \"\") => ArtifactData?.[setKey]?.pieces?.[slotKey] || defVal;\r\n  static getArtifactPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n  static getArtifactSetEffectsObj = (setKey, defVal = null) => ArtifactData?.[setKey]?.sets || defVal\r\n  //SLOT\r\n  static getArtifactSlotKeys = () => Object.keys(ArtifactSlotsData)\r\n  static getArtifactSlotName = (slotKey, defVal = \"\") =>\r\n    ArtifactSlotsData[slotKey] ? ArtifactSlotsData[slotKey].name : defVal\r\n  static getArtifactSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n\r\n  static getArtifactSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getArtifactSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getArtifactSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n\r\n  //STARS\r\n  static getRarityArr = (setKey) => ArtifactData[setKey] ? ArtifactData[setKey].rarity : []\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => ArtifactMainSlotKeys\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = ArtifactMainStatsData[numStars]?.[key]?.[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData)\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getRolls(value, rollData, float = false) {\r\n    let roll = null;\r\n    let maxNumRoll = Math.round(value / rollData[0])\r\n    if (!maxNumRoll) return null;\r\n    let rollOption = (val, arr) => {\r\n      if (roll) return;\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (float) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val)) {\r\n            roll = arr;\r\n            return;\r\n          }\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val)) {\r\n            roll = arr;\r\n            return\r\n          }\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        rollOption(value, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(value, [])\r\n    return roll;\r\n  }\r\n  static validateSubStat(state, substat) {\r\n    if (!substat || !substat.value) return { valid: true }\r\n    let value = parseFloat(substat.value);\r\n    if (isNaN(value)) return { valid: false, msg: `Invalid Input` }\r\n    let numStars = state.numStars\r\n    if (!numStars) return { valid: false, msg: `Artifact Stars not set.` }\r\n    let isFloat = Stat.getStatUnit(substat.key) === \"%\"\r\n    let rollData = this.getSubstatRollData(substat.key, numStars);\r\n    let rolls = this.getRolls(value, rollData, isFloat)\r\n\r\n    if (!rolls || rolls.length === 0) return { valid: false, msg: `Substat cannot be rolled 0 times.` };\r\n    let totalAllowableRolls = ArtifactStarsData[numStars]?.numUpgradesOrUnlocks - (4 - ArtifactStarsData[numStars]?.subBaseHigh) + 1;//+1 for its base roll\r\n    if (rolls.length > totalAllowableRolls) return { valid: false, msg: `Substat cannot be rolled more than ${totalAllowableRolls} times.` };\r\n\r\n    let min = rollData[0] * rolls.length;\r\n    let max = rollData[rollData.length - 1] * rolls.length;\r\n    return { valid: true, efficiency: clampPercent(((value - min) / (max - min)) * 100), msg: `This substat was rolled ${rolls.length} time(s). Values: [${rolls.join(\", \")}]`, rolls }\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static artifactValidation(state) {\r\n    let currentEfficiency = 0, maximumEfficiency = 0;\r\n    let subStatValidations = state.substats.map(substat => Artifact.validateSubStat(state, substat));\r\n    for (const substat of subStatValidations)\r\n      if (!substat.valid)\r\n        return { subStatValidations, valid: false, msg: \"One of the substat is invalid.\", currentEfficiency, maximumEfficiency }\r\n\r\n    //if a substat has >=2 rolls, when not all of them have been unlocked//if a substat has >=2 rolls, when not all of them have been unlocked\r\n    if (subStatValidations.some(substat => substat?.rolls?.length > 1) && subStatValidations.some((substat) => !substat.rolls))\r\n      return { subStatValidations, valid: false, msg: \"One of the substat have >1 rolls, but not all substats are unlocked.\", currentEfficiency, maximumEfficiency }\r\n    let currentNumOfRolls = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls ? cur.rolls.length : 0), 0);\r\n    let rollsRemaining = Artifact.rollsRemaining(state.level, state.numStars);\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(state.numStars);\r\n\r\n    if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n      return { subStatValidations, valid: false, msg: `Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `, currentEfficiency, maximumEfficiency }\r\n\r\n    let totalCurrentEfficiency = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls && cur.efficiency ? (cur.efficiency * cur.rolls.length) : 0), 0);\r\n    currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { valid: true, subStatValidations, currentNumOfRolls, rollsRemaining, totalPossbleUpgrade: totalPossbleRolls, currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getArtifactSets = (setKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = null) =>\r\n    deepClone(this.getArtifactSets(setKey)?.[setNumKey]?.stats || defVal)\r\n\r\n  static getArtifactConditionalStats = (setKey, setNumKey, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getArtifactSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      ArtifactData?.[setKey]?.sets && Object.entries(ArtifactData[setKey].sets).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getArtifactSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      if (ArtifactData?.[setKey]?.sets) {\r\n        let setNumKeys = Object.keys(ArtifactData[setKey].sets).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n        if (setNumKeys.length)\r\n          artifactSetEffect[setKey] = setNumKeys\r\n      }\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getArtifactSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = ArtifactData?.[setKey]?.sets?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getArtifactSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets?.[setNumKey]?.conditional || defVal\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      let hasSetEffect = false\r\n      if (setObj.sets)\r\n        Object.entries(setObj.sets).forEach(([setNumKey, setEffectObj]) => {\r\n          if (setEffectObj.stats && Object.keys(setEffectObj.stats).length > 0) {\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n            hasSetEffect = true\r\n          }\r\n          if (setEffectObj.conditional) {\r\n            let conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n            if (conditionalNum) {\r\n              let condStats = this.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n              if (condStats) {\r\n                setEffect[setNumKey] = deepClone(condStats)\r\n                hasSetEffect = true\r\n              }\r\n            }\r\n          }\r\n        })\r\n      if (hasSetEffect)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}"],"sourceRoot":""}