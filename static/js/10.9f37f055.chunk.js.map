{"version":3,"sources":["Components/StarDisplay.js","Data/WeaponData.js","Components/ConditionalSelector.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Data/CharacterData.js","DatabaseUtil.js","Components/StatIcon.js","Components/CharacterSelection.js","Character/CharacterCard.js","Util/TimeUtil.js","Build/BuildWorker.js","Build/Build.js","Build/BuildDisplay.js","Character/Character.js","Stat.js","Util/Util.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Character/CharacterDatabase.js","Util/ConditionalsUtil.js","Artifact/ArtifactDatabase.js","Data/ElementalData.js","StatData.js","Weapon/Weapon.js","StatDependency.js"],"names":["StarIcon","icon","faStar","Stars","stars","colored","className","Array","keys","map","_","i","WeaponData","WeaponDataImport","then","imp","default","WeaponLevelKeys","LevelNameData","WeaponTypeData","sword","claymore","catalyst","bow","polearm","ConditionalSelector","props","conditional","conditionalNum","setConditional","defEle","disabled","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","resin","fragile","condensed","exp_books","advice","wit","experience","CharacterData","CharacterDataImport","LevelsData","name","level","asend","characterStatBase","crit_rate","crit_dmg","ener_rech","stam","CharacterSpecializedStatKey","DatabaseInitAndVerify","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","Object","values","forEach","art","valid","location","getCharacter","artInSlotId","getArtifactIDFromSlot","slotKey","id","equipArtifact","keyMapping","setKey","mainStatKey","endsWith","replace","maximumEfficiency","Artifact","substatsValidation","updateArtifact","chars","getCharacterDatabase","character","entries","equippedArtifacts","artid","equippedArt","getArtifact","moveToNewLocation","artifactConditionals","filter","cond","srcKey","srcKey2","dmgMode","updateCharacter","StatIcon","hp_base","faTint","hp_final","hp_","hp","atk_base","faFistRaised","atk_final","atk_","atk","def_base","faShieldAlt","def_final","def_","def","ele_mas","faMagic","faDice","faDiceD20","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","CharacterSelectionDropdownList","onSelect","char","Character","getName","characterKey","CharacterNameDisplay","flat","locationChar","CharacterCard","useReducer","x","forceUpdate","useEffect","Promise","all","getCharacterDataImport","Weapon","getWeaponDataImport","getDataImport","characterId","onEdit","onDelete","build","calculateBuild","setToSlots","weapon","constellation","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","weaponName","getWeaponName","key","weaponMainVal","getWeaponMainStatValWithOverride","weaponSubKey","getWeaponSubStatKey","weaponSubVal","getWeaponSubStatValWithOverride","weaponLevelName","getLevelName","levelKey","weaponPassiveName","getWeaponPassiveName","cardClassName","bg","Header","header","xs","faEdit","faTrashAlt","Body","style","cursor","src","getThumb","getStar","thumbnail","getStatValueWithOverride","refineIndex","Stat","getStatName","getStatUnit","getSetEffects","arr","artifactSetName","getSetName","highestNum","Math","max","unit","statVal","finalStats","toFixed","fixedUnit","footer","Footer","as","Link","to","pathname","selectedCharacterId","msToUnits","ms","milliseconds","seconds","floor","minutes","hours","timeString","timeText","strPadLeft","timeStringMs","Worker_fn","Worker","Build","setFilters","sets","reduce","accu","num","push","perm","slotKeys","getSlotKeys","slotPerm","index","length","numArtsPerSet","setFilter","getPieces","includes","splitArtifacts","setPerms","setsInFilter","splitNumArtsPerSet","artArr","setPerm","permaccu","CharacterDisplayCardPromise","CharacterDisplayCard","lazy","warningBuildNumber","BuildDisplay","forceUpdateBuildDisplay","selectCharacter","charid","setState","getInitialState","buildSetting","state","artifactDatabase","useLockedArts","val","lock","every","filterKeys","split","splitArtifactsBySlot","artifactsSlotsToSelectMainStats","mainStat","changeMainStat","autoGenerateBuilds","changeSetFilterKey","newkey","setsNumArr","parseInt","dropdownitemsForStar","star","getSetsByMaxStarEntries","setobj","some","getSetEffectsObj","artsAccountedOther","cur","ind","Dropdown","totBuildNumber","maxBuildsToShow","generateBuilds","builds","generationProgress","generationDuration","artifactSetPerms","generatingBuilds","ascending","buildFilterKey","artifactsAssumeFull","initialStats","calculateCharacterWithWeaponStats","artifactSetEffects","getAllArtifactSetEffectsObj","deepClone","mainStatVal","getMainStatValue","numStars","dependencies","GetDependencies","data","worker","terminate","onmessage","e","progress","timing","ReactGA","category","variable","value","label","calculateTotalBuildNumber","obj","calculateBuildWithObjs","artifacts","postMessage","BuildGeneratorEditorCard","statsDisplayKeys","selectedCharacter","characterName","artsAccounted","generateAllPossibleArtifactSetPerm","buildAlert","progPercent","Alert","ProgressBar","now","characterDropDown","DropdownButton","title","Divider","CharacterSelection","cid","Card","Row","Col","lg","showCharacterModal","Button","getSlotNameWithIcon","getStatNameWithPercent","getSlotMainStatKeys","showArtCondModal","Boolean","Badge","setNum","ButtonGroup","ItemText","setNkey","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","ConditionalsUtil","getConditionalNum","getConditionalStats","conditionalElement","getSetEffectText","faSortAmountDownAlt","faSortAmountUp","ArtifactDisplayItem","ListGroup","action","modalBuild","sort","slotarr1","slotarr","getSlotIcon","md","xl","closeModal","BuildModal","characterid","Modal","show","onHide","contentClassName","Suspense","fallback","newBuild","onClose","editable","closeArtCondModal","ArtConditionalModal","artSetKeyList","s","faUndo","faTimes","getPieceIcon","getRarityArr","pop","Image","componentDidUpdate","prevProps","prevState","saveToLocalStorage","localStorage","loadFromLocalStorage","pageview","this","getDisplayStatKeys","Container","artifactIds","join","React","Component","initialState","maxBuildsToShowList","Error","removeCharacterById","getBaseStatValue","defVal","getSpecializedStatKey","getSpeicalizedStatVal","getLevel","characterObj","getCDataObj","baseStat","getIndexFromlevelkey","charKey","getElementalName","elementalKey","ElementalData","getAllCharacterKeys","getElementalKeys","getConstellationName","constellationName","getTitles","titles","getlevelKeys","getlevelNames","indexOf","getAscension","getSpecializedStat","specializeStat","thumbImg","getCard","cardImg","getTalentImg","talentKey","getTalent","img","getConstellationImg","constIndex","talent","getTalentName","getTalentLevelBoost","talents","talentBoost","boostEntry","find","getTalentLevelKey","withBoost","talentLvlKey","talentLevelKeys","levelBoost","clamp","getTalentDocument","document","getTalentFields","fields","getTalentStats","ascension","stats","getTalentStatsAll","statsArr","getTalentConditional","conditionalKey","doc","section","tempCond","getTalentConditionalStats","getConditionalProp","stacks","fromEntries","getTalentConditionalFields","getTalentStatKey","skillKey","elemental","autoInfused","reactionMode","charEleKey","isAutoElemental","auto","infusable","eleKey","getTalentStatKeyVariant","isAutoInfusable","atkKeys","startsWith","ElementToReactionKeys","hasOverride","baseStatOverrides","equipArtifacts","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","artifactSetEffectsStats","getArtifactSetEffectsStats","substats","substat","stat","PreprocessFormulas","modifiers","statKeys","char_ele_key","overrides","hasOwnProperty","specialStatKey","specializedStatVal","addStatsObj","talentConditionals","weaponStats","subKey","subVal","bonusStats","getWeaponBonusStat","conditionalStats","getWeaponConditionalStat","htmlStatsData","StatData","getStatNamePretty","pretty","getStatNameRaw","getStatVariant","printStat","f","expand","getPrintableFormulaStatKeyList","statList","ModifiersText","skey","Modifiers","formulaKeys","FormulaText","modifiersTextKeys","printFormula","printModifier","overrideKey","options","formulaText","statName","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_dmg","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_dmg","electrocharged_multi","electrocharged","superconduct_dmg","superconduct_multi","superconduct","swirl_dmg","swirl_multi","swirl","shatter_dmg","shatter_multi","shattered","crystalize_dmg","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","amp_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","abs","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","defineProperty","configurable","enumerable","writable","noelle_burst_atk","sweep_multiplier","mona_passive2_hydro_ele_dmg_bonus","bennett_burst_atk","atk_multiplier","getRandomElementFromArray","array","random","getRandomIntInclusive","min","ceil","getItem","JSON","parse","setItem","stringify","closeEnoughFloat","a","b","closeEnoughInt","low","high","getArrLastElement","clampPercent","string","pad","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","phy_dmg_bonus","ele_dmg_bonus","2","ArtifactSubStatsData","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","rolls","efficiency","getSubstatEfficiency","getArtifactEfficiency","currentEfficiency","errMsgs","currentNumOfRolls","sum","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","unequipArtifactOnSlot","getSetKeys","rarity","pieces","getPieceName","icons","setEffects","artifactSetEffect","setNumKeys","charFinalStats","setEffectText","getSlotName","slotIcon","databaseObj","getStars","getMainStatKeys","getMainStatValues","numStar","main","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatKey","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","reverse","roll","len","c","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","initiated","characterDatabase","charIdIndex","isInvalid","getCharacterIdList","getIdNameList","addCharacter","dchar","removeItem","equipArtifactBuild","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","Formulas","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","reactionName","dmgKey","dmgName","str","atkTypeName","dmgModeName","ele_key","formula","hydro_ele_dmg_bonus","formulas","getLevelIndex","weaponKey","getWeaponRarity","passiveName","getWeaponPassiveDescription","passiveDescription","getWeaponDescription","description","getWeaponConditional","getWeaponImg","getWeaponMainStatVal","baseStats","getWeaponSubStatVal","sub","getWeaponsOfType","weaponType","getWeaponTypeName","weaponObj","overrideMainVal","overrideSubVal","formulaKeyDependency","registerDependency","operation","testObj","dependency","Set","k","get","add","InsertDependencies","has"],"mappings":"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","file":"static/js/10.9f37f055.chunk.js","sourcesContent":["import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //this will only run if neither of the database has been initated.\r\n  if (!CharacterDatabase.populateDatebaseFromLocalStorage() & !ArtifactDatabase.populateDatebaseFromLocalStorage()) return\r\n  //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n  let arts = ArtifactDatabase.getArtifactDatabase();\r\n  Object.values(arts).forEach(art => {\r\n    let valid = true\r\n    if (art.location) {\r\n      const locationChar = CharacterDatabase.getCharacter(art.location)\r\n      if (locationChar) {\r\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\r\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\r\n          CharacterDatabase.equipArtifact(art.location, art)\r\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\r\n          art.location = \"\"\r\n          valid = false\r\n        }\r\n      } else {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n    }\r\n    //the set keys were changed to camelcase, need to convert for old databases.\r\n    let keyMapping = {\r\n      \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n      \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n      \"Thundering Fury\": \"ThunderingFury\",\r\n      \"Retracing Bolide\": \"RetracingBolide\",\r\n      \"Noblesse Oblige\": \"NoblesseOblige\",\r\n      \"Maiden Beloved\": \"MaidenBeloved\",\r\n      \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n      \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n      \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n      \"Archaic Petra\": \"ArchaicPetra\",\r\n      \"Brave Heart\": \"BraveHeart\",\r\n      \"Tiny Miracle\": \"TinyMiracle\",\r\n      \"Defender's Will\": \"DefendersWill\",\r\n      \"Martial Artist\": \"MartialArtist\",\r\n      \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n      \"The Exile\": \"TheExile\",\r\n      \"Traveling Doctor\": \"TravelingDoctor\",\r\n      \"Lucky Dog\": \"LuckyDog\",\r\n      \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n      \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n      \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n      \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n    }\r\n    if (keyMapping[art.setKey]) {\r\n      art.setKey = keyMapping[art.setKey]\r\n      valid = false\r\n    }\r\n    //key names were changed. convert old DB\r\n    if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n      art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n      valid = false\r\n    }\r\n    //key names were changed. convert old DB\r\n    if (art?.mainStatKey === \"phy_dmg\") {\r\n      art.mainStatKey = \"phy_dmg_bonus\"\r\n      valid = false\r\n    }\r\n    if (!art.maximumEfficiency) {\r\n      Artifact.substatsValidation(art)\r\n      valid = false\r\n    }\r\n    if (!valid)\r\n      ArtifactDatabase.updateArtifact(art)\r\n  })\r\n\r\n  let chars = CharacterDatabase.getCharacterDatabase();\r\n  Object.values(chars).forEach(character => {\r\n    let valid = true;\r\n    //verify character database equipment validity\r\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\r\n      const equippedArt = ArtifactDatabase.getArtifact(artid)\r\n      if (equippedArt && equippedArt.location !== character.id) //the artifact doesnt have the right location...\r\n        ArtifactDatabase.moveToNewLocation(artid, character.id)\r\n      if (!equippedArt) {\r\n        valid = false\r\n        character.equippedArtifacts[slotKey] = \"\"\r\n      }\r\n    })\r\n\r\n    //conditional format was refactored. this makes sure there is no error when using old DB.\r\n    character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\r\n      if (!cond.srcKey || !cond.srcKey2) {\r\n        valid = false\r\n        return false\r\n      }\r\n      return true\r\n    }) ?? []\r\n\r\n    //check for dmgMode\r\n    if (!character.dmgMode) {\r\n      character.dmgMode = \"dmg\"\r\n      valid = false\r\n    }\r\n    if (!valid) {\r\n      CharacterDatabase.updateCharacter(character)\r\n    }\r\n  })\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Character from \"../Character/Character\";\r\nimport CharacterDatabase from \"../Character/CharacterDatabase\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n    <Dropdown.Item key={id} onClick={() => onSelect(id)}>\r\n      <span>\r\n        <div className=\"mb-n2\"><b>{Character.getName(char.characterKey)}</b></div>\r\n        <small>{char.name}</small>\r\n      </span>\r\n    </Dropdown.Item>)\r\n}\r\nfunction CharacterNameDisplay({ id, flat = false }) {\r\n  let locationChar = CharacterDatabase.getCharacter(id)\r\n  if (locationChar) {\r\n    if (flat) {\r\n      return <span><b>{Character.getName(locationChar.characterKey)}</b> <small>{locationChar?.name}</small></span>\r\n    } else {\r\n      return <span>\r\n        <div className=\"mb-n2\"><b>{Character.getName(locationChar.characterKey)}</b></div>\r\n        <small>{locationChar.name}</small>\r\n      </span>\r\n    }\r\n\r\n  } else {\r\n    return <b>Inventory</b>\r\n  }\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n  CharacterNameDisplay\r\n};\r\n\r\n","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport Stat from '../Stat';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nexport default function CharacterCard(props) {\r\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => forceUpdate())\r\n  }, [])\r\n  let { characterId, onEdit, onDelete } = props\r\n  let character = CharacterDatabase.getCharacter(characterId)\r\n  if (!character) return null;\r\n  let build = Character.calculateBuild(character)\r\n  let { setToSlots } = build\r\n\r\n  let { characterKey, name, weapon = {}, constellation } = character\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponName = Weapon.getWeaponName(weapon.key)\r\n  let weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\r\n  let weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\r\n  let weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const statkeys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\",]\r\n  return (<Card className={props.cardClassName} bg={props.bg ? props.bg : \"darkcontent\"} text=\"lightfont\">\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {props.header ? props.header : <h6><b>{name}</b></h6>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {props.onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {props.onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={onEdit} style={{ cursor: onEdit ? \"pointer\" : \"default\" }}>\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={Character.getThumb(characterKey)} className={`w-100 h-auto grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h4>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h4>\r\n          <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n          <span>{`Lvl. ${Character.getStatValueWithOverride(character, \"char_level\")} C${constellation}`}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {Object.entries(Artifact.getSetEffects(setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = Artifact.getSetName(key)\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = build.finalStats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {props.footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        selectedCharacterId: characterId\r\n      }}>\r\n        Generate Builds\r\n        </Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { strPadLeft } from \"./Util\"\r\n\r\nfunction msToUnits(ms) {\r\n  let milliseconds = ms % 1000\r\n  let seconds = Math.floor((ms / 1000) % 60)\r\n  let minutes = Math.floor((ms / (1000 * 60)) % 60)\r\n  let hours = Math.floor((ms / (1000 * 60 * 60)))\r\n  return { hours, minutes, seconds, milliseconds }\r\n}\r\nfunction timeString(ms) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds } = msToUnits(ms, \"hours\")\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)} ${timeText}`;\r\n}\r\nfunction timeStringMs(ms) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds, milliseconds } = msToUnits(ms, \"hours\")\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)}.${strPadLeft(milliseconds, '0', 3)} ${timeText}`;\r\n}\r\nexport {\r\n  msToUnits,\r\n  timeString,\r\n  timeStringMs\r\n}","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/BuildWorker.840905e1.worker.js\");\n}\n","import Artifact from \"../Artifact/Artifact\";\r\n\r\nexport default class Build {\r\n  /**\r\n   * Calculate all the possible set configuration based on the filters.\r\n   * [{Key:X,num:2},{key:Y,num:2},{key:\"\",num:0}]\r\n   * generates XXYYO,XYXYO,XXOYY..... combinations, where O means other. \r\n   * @param {Object} setFilters From BuildDisplay\r\n   */\r\n  static generateAllPossibleArtifactSetPerm(setFilters) {\r\n    let sets = setFilters.filter(filter => filter.key).map(filter => filter.key);\r\n    let useOther = setFilters.reduce((accu, filter) => filter.key ? accu + filter.num : accu, 0) < 5;\r\n    if (useOther) sets.push(\"Other\");\r\n\r\n    let perm = [];\r\n    let slotKeys = Artifact.getSlotKeys();\r\n    //recursion function to loop through everything.\r\n    let slotPerm = (index, accu) => {\r\n      if (index >= slotKeys.length) {\r\n        let numArtsPerSet = {}\r\n        Object.values(accu).forEach(setKey => {\r\n          if (numArtsPerSet[setKey]) numArtsPerSet[setKey] += 1\r\n          else numArtsPerSet[setKey] = 1\r\n        })\r\n        let valid = true\r\n        for (const setFilter of setFilters) {\r\n          if (setFilter.key && (!numArtsPerSet[setFilter.key] || numArtsPerSet[setFilter.key] < setFilter.num)) {\r\n            valid = false;\r\n            break;\r\n          }\r\n        }\r\n        if (valid) perm.push(accu)\r\n        return;\r\n      }\r\n      let slotKey = slotKeys[index];\r\n      sets.forEach(setKey => {\r\n        //see if this set is valid at this piece slot. some artifacts dont have artifacts at specific slots.\r\n        if (setKey === \"Other\" || (Object.keys(Artifact.getPieces(setKey)).includes(slotKey))) {\r\n          accu[slotKey] = setKey;\r\n          slotPerm(index + 1, { ...accu })\r\n        }\r\n      });\r\n    }\r\n    slotPerm(0, {});\r\n    return perm\r\n  }\r\n  static calculateTotalBuildNumber(splitArtifacts, setPerms, setFilters) {\r\n    let setsInFilter = setFilters.filter(filter => filter.key).map(filter => filter.key)\r\n    let splitNumArtsPerSet = {}\r\n    //count the number of arts in setfilter for each slot\r\n    Object.entries(splitArtifacts).forEach(([key, artArr]) => {\r\n      let numArtsPerSet = {}\r\n      artArr.forEach(art => {\r\n        if (setsInFilter.includes(art.setKey))\r\n          numArtsPerSet[art.setKey] = (numArtsPerSet[art.setKey] || 0) + 1\r\n        else\r\n          numArtsPerSet[\"Other\"] = (numArtsPerSet[\"Other\"] || 0) + 1\r\n      })\r\n      splitNumArtsPerSet[key] = numArtsPerSet\r\n    })\r\n    //calculate!\r\n    return setPerms.reduce((accu, setPerm) =>\r\n      accu + Object.entries(setPerm).reduce((permaccu, [key, setKey]) =>\r\n        (splitNumArtsPerSet[key] && splitNumArtsPerSet[key][setKey]) ? permaccu * splitNumArtsPerSet[key][setKey] : 0\r\n        , 1)\r\n      , 0)\r\n  }\r\n}","import { faCheckSquare, faSortAmountDownAlt, faSortAmountUp, faSquare, faTimes, faUndo } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy } from 'react';\r\nimport { Alert, Badge, Button, ButtonGroup, Card, Col, Container, Dropdown, DropdownButton, Image, ListGroup, Modal, ProgressBar, Row } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\n// eslint-disable-next-line\r\nimport Worker from \"worker-loader!./BuildWorker.js\";\r\nimport Artifact from '../Artifact/Artifact';\r\nimport ArtifactDatabase from '../Artifact/ArtifactDatabase';\r\nimport Character from '../Character/Character';\r\nimport CharacterCard from '../Character/CharacterCard';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport { CharacterNameDisplay, CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport ConditionalSelector from '../Components/ConditionalSelector';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport Stat from '../Stat';\r\nimport { GetDependencies } from '../StatDependency';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { timeStringMs } from '../Util/TimeUtil';\r\nimport { deepClone, loadFromLocalStorage, saveToLocalStorage } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Build from './Build';\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCardPromise = import('../Character/CharacterDisplayCard');\r\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\r\n\r\nconst warningBuildNumber = 10000000\r\nexport default class BuildDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = BuildDisplay.getInitialState();\r\n    if (\"BuildsDisplay.state\" in localStorage) {\r\n      const { selectedCharacterId } = loadFromLocalStorage(\"BuildsDisplay.state\")\r\n      this.state = { ...this.state, selectedCharacterId }\r\n    }\r\n    if (props.location.selectedCharacterId) //override the one stored in BuildsDisplay.state\r\n      this.state.selectedCharacterId = props.location.selectedCharacterId\r\n\r\n    if (this.state.selectedCharacterId) {\r\n      const character = CharacterDatabase.getCharacter(this.state.selectedCharacterId)\r\n      if (character)\r\n        this.state = { ...this.state, ...(character?.buildSetting ?? {}) }\r\n      else\r\n        this.state.selectedCharacterId = \"\"\r\n    }\r\n    ReactGA.pageview('/build')\r\n  }\r\n  static initialState = {\r\n    builds: [],\r\n    generatingBuilds: false,\r\n    selectedCharacterId: \"\",\r\n    setFilters: [{ key: \"\", num: 0 }, { key: \"\", num: 0 }, { key: \"\", num: 0 }],\r\n    artifactConditionals: [],//{ setKey: \"\", setNumKey: \"\", conditionalNum: 0 }\r\n    mainStat: [\"\", \"\", \"\"],\r\n    buildFilterKey: \"atk_final\",\r\n    artifactsAssumeFull: false,\r\n    useLockedArts: false,\r\n    ascending: false,\r\n    modalBuild: null,\r\n    showArtCondModal: false,\r\n    showCharacterModal: false,\r\n    maxBuildsToShow: 100,\r\n    generationProgress: 0,\r\n    generationDuration: 0,//in ms\r\n  }\r\n  static maxBuildsToShowList = [100, 50, 25, 5]\r\n  static getInitialState = () => deepClone(BuildDisplay.initialState)\r\n  static artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"]\r\n  forceUpdateBuildDisplay = () => this.forceUpdate()\r\n\r\n  selectCharacter = (charid = \"\") => {\r\n    if (!charid)\r\n      return this.setState({ ...BuildDisplay.getInitialState(), selectedCharacterId: \"\" })\r\n    const character = CharacterDatabase.getCharacter(charid)\r\n    if (character)\r\n      return this.setState({ ...BuildDisplay.getInitialState(), selectedCharacterId: charid, ...(character?.buildSetting ?? {}) })\r\n  }\r\n  splitArtifacts = () => {\r\n    if (!this.state.selectedCharacterId) return {};\r\n    let artifactDatabase = ArtifactDatabase.getArtifactDatabase();\r\n    //do not use artifacts that are locked.\r\n    if (!this.state.useLockedArts)\r\n      Object.entries(artifactDatabase).forEach(([key, val]) => {\r\n        if (val.lock) delete artifactDatabase[key]\r\n        if (this.state.selectedCharacterId && val.location && val.location !== this.state.selectedCharacterId)\r\n          delete artifactDatabase[key]\r\n      })\r\n    if (this.state.setFilters.every(filter => filter.key)) {\r\n      let filterKeys = this.state.setFilters.map(filter => filter.key)\r\n      //filter database to only filtered artifacts, if all 3 sets are specified\r\n      Object.entries(artifactDatabase).forEach(([key, val]) => {\r\n        if (filterKeys.includes(val.setKey))\r\n          delete artifactDatabase[key]\r\n      })\r\n    }\r\n    let split = Artifact.splitArtifactsBySlot(artifactDatabase);\r\n    //filter the split slots on the mainstats selected.\r\n    BuildDisplay.artifactsSlotsToSelectMainStats.forEach((slotKey, index) =>\r\n      this.state.mainStat[index] && (split[slotKey] = split[slotKey].filter((art) => art.mainStatKey === this.state.mainStat[index])))\r\n    return split\r\n  }\r\n  changeMainStat = (index, mainStatKey) => {\r\n    this.setState(state => {\r\n      let mainStat = state.mainStat;\r\n      mainStat[index] = mainStatKey;\r\n      return { mainStat }\r\n    }, this.autoGenerateBuilds)\r\n  }\r\n  changeSetFilterKey = (index, newkey, setsNumArr) => this.setState(state => {\r\n    let oldKey = state.setFilters[index].key\r\n    if (oldKey === newkey) return\r\n    let setFilters = state.setFilters;\r\n    let num = 0\r\n    //automatically select the 1st element from setsNumArr\r\n    if (setsNumArr && setsNumArr[0])\r\n      num = parseInt(setsNumArr[0])\r\n    setFilters[index] = { key: newkey, num }\r\n    return { setFilters }\r\n  }, this.autoGenerateBuilds)\r\n\r\n  dropdownitemsForStar = (star, index) =>\r\n    Artifact.getSetsByMaxStarEntries(star).map(([setKey, setobj]) => {\r\n      if (this.state.setFilters.some(filter => filter.key === setKey)) return false;\r\n      let setsNumArr = Object.keys(Artifact.getSetEffectsObj(setKey))\r\n      let artsAccountedOther = this.state.setFilters.reduce((accu, cur, ind) => (cur.key && ind !== index) ? accu + cur.num : accu, 0)\r\n      if (setsNumArr.every(num => parseInt(num) + artsAccountedOther > 5)) return false;\r\n      return (<Dropdown.Item key={setKey}\r\n        onClick={() => this.changeSetFilterKey(index, setKey, setsNumArr)}\r\n      >\r\n        {setobj.name}\r\n      </Dropdown.Item>)\r\n    })\r\n  autoGenerateBuilds = () => {\r\n    if (typeof this.totBuildNumber === \"number\" && this.totBuildNumber <= this.state.maxBuildsToShow)\r\n      this.generateBuilds()\r\n    else if (this.state.builds.length) this.setState({ builds: [], generationProgress: 0, generationDuration: 0 })\r\n  }\r\n\r\n  generateBuilds = () => {\r\n    let { split, artifactSetPerms, totBuildNumber } = this\r\n    if (!totBuildNumber) return this.setState({ builds: [] })\r\n    this.setState({ generatingBuilds: true, builds: [], generationDuration: 0, generationProgress: 0 })\r\n    let { setFilters, ascending, buildFilterKey, maxBuildsToShow, artifactConditionals, artifactsAssumeFull } = this.state\r\n    let character = CharacterDatabase.getCharacter(this.state.selectedCharacterId)\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    initialStats.artifactsAssumeFull = artifactsAssumeFull\r\n\r\n    let artifactSetEffects = Artifact.getAllArtifactSetEffectsObj(artifactConditionals)\r\n    let splitArtifacts = deepClone(split)\r\n    //add mainStatVal to each artifact\r\n    Object.values(splitArtifacts).forEach(artArr => {\r\n      artArr.forEach(art => {\r\n        art.mainStatVal = Artifact.getMainStatValue(art.mainStatKey, art.numStars, artifactsAssumeFull ? art.numStars * 4 : art.level);\r\n      })\r\n    })\r\n    //generate the key dependencies for the formula\r\n    let dependencies = GetDependencies(initialStats, [buildFilterKey])\r\n\r\n    //create an obj with app the artifact set effects to pass to buildworker.\r\n    let data = {\r\n      splitArtifacts, artifactSetPerms, initialStats, artifactSetEffects, dependencies,\r\n      setFilters, maxBuildsToShow, buildFilterKey, ascending,\r\n    }\r\n    if (this.worker) this.worker.terminate()\r\n    this.worker = new Worker();\r\n    this.worker.onmessage = (e) => {\r\n      if (e.data.progress) {\r\n        const { progress = 0, timing = 0 } = e.data\r\n        return this.setState({ generationProgress: progress, generationDuration: timing })\r\n      }\r\n      ReactGA.timing({\r\n        category: \"Build Generation\",\r\n        variable: \"timing\",\r\n        value: e.data.timing,\r\n        label: Build.calculateTotalBuildNumber(split, artifactSetPerms, this.state.setFilters)\r\n      })\r\n      let builds = e.data.builds.map(obj =>\r\n        Character.calculateBuildWithObjs(artifactConditionals, initialStats, obj.artifacts))\r\n      if (process.env.NODE_ENV === \"development\") console.log(builds.map(build => build?.finalStats?.[this.state.buildFilterKey]))\r\n      this.setState({ builds, generatingBuilds: false })\r\n      // worker.terminate()\r\n      this.worker.terminate()\r\n      delete this.worker\r\n    }\r\n\r\n    this.worker.postMessage(data)\r\n  }\r\n\r\n  BuildGeneratorEditorCard = (props) => {\r\n    let { setFilters, selectedCharacterId, artifactsAssumeFull, artifactConditionals, useLockedArts, generatingBuilds, generationProgress, generationDuration } = this.state\r\n    let { statsDisplayKeys } = props\r\n    let selectedCharacter = CharacterDatabase.getCharacter(selectedCharacterId)\r\n    let characterName = selectedCharacter ? selectedCharacter.name : \"Character Name\"\r\n    let artsAccounted = setFilters.reduce((accu, cur) => cur.key ? accu + cur.num : accu, 0)\r\n    //these variables are used for build generator.\r\n    this.split = this.splitArtifacts();\r\n    this.artifactSetPerms = Build.generateAllPossibleArtifactSetPerm(setFilters)\r\n    this.totBuildNumber = Build.calculateTotalBuildNumber(this.split, this.artifactSetPerms, setFilters)\r\n    let { totBuildNumber } = this\r\n    let buildAlert = null\r\n    if (generatingBuilds) {\r\n      let progPercent = generationProgress * 100 / totBuildNumber\r\n      buildAlert = <Alert variant=\"success\">\r\n        <span>Generating and testing <b>{generationProgress}/{totBuildNumber}</b> Build configurations against the criterias for <b>{characterName}</b></span>\r\n        <h6>Time elapsed: {timeStringMs(generationDuration)}</h6>\r\n        <ProgressBar now={progPercent} label={`${progPercent.toFixed(1)}%`} />\r\n      </Alert>\r\n    } else if (!generatingBuilds && generationProgress) {//done\r\n      buildAlert = <Alert variant=\"success\">\r\n        <span>Generated and tested <b>{totBuildNumber}</b> Build configurations against the criterias for <b>{characterName}</b></span>\r\n        <h6>Time elapsed: {timeStringMs(generationDuration)}</h6>\r\n        <ProgressBar now={100} variant=\"success\" label=\"100%\" />\r\n      </Alert>\r\n    } else {\r\n      buildAlert = totBuildNumber === 0 ?\r\n        <Alert variant=\"warning\" className=\"mb-0\"><span>Current configuration will not generate any builds for <b>{characterName}</b>. Please change your Artifact configurations, or add/unlock more Artifacts.</span></Alert>\r\n        : (totBuildNumber > warningBuildNumber ?\r\n          <Alert variant=\"warning\" className=\"mb-0\"><span>Current configuration will generate <b>{totBuildNumber}</b> builds for <b>{characterName}</b>. This might take quite awhile to generate...</span></Alert> :\r\n          <Alert variant=\"success\" className=\"mb-0\"><span>Current configuration {totBuildNumber <= this.state.maxBuildsToShow ? \"generated\" : \"will generate\"} <b>{totBuildNumber}</b> builds for <b>{characterName}</b>.</span></Alert>)\r\n    }\r\n    let characterDropDown = <DropdownButton title={selectedCharacterId ? <CharacterNameDisplay id={selectedCharacterId} flat /> : \"Select Character\"} disabled={generatingBuilds}>\r\n      <Dropdown.Item onClick={() => this.selectCharacter(\"\")}>Unselect Character</Dropdown.Item>\r\n      <Dropdown.Divider />\r\n      <CharacterSelectionDropdownList onSelect={cid => this.selectCharacter(cid)} />\r\n    </DropdownButton>\r\n    const toggleArtifactsAssumeFull = () => this.setState(state => ({ artifactsAssumeFull: !state.artifactsAssumeFull }), this.autoGenerateBuilds)\r\n    return <Card bg=\"darkcontent\" text=\"lightfont\">\r\n      <Card.Header>Build Generator</Card.Header>\r\n      <Card.Body>\r\n        <Row >\r\n          <Col xs={12} lg={6} className=\"mb-2\">\r\n            {/* character selection */}\r\n            {selectedCharacterId ?\r\n              <CharacterCard header={characterDropDown} characterId={selectedCharacterId} bg={\"lightcontent\"} footer={false} cardClassName=\"mb-2\" onEdit={!generatingBuilds ? () => this.setState({ showCharacterModal: true }) : null} /> :\r\n              <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                <Card.Header>\r\n                  {characterDropDown}\r\n                </Card.Header>\r\n              </Card>}\r\n            {/* main stat selector */}\r\n            <Card bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>\r\n                <span>Artifact Main Stat</span>\r\n                <Button className=\"float-right text-right\" variant={artifactsAssumeFull ? \"orange\" : \"primary\"} onClick={toggleArtifactsAssumeFull} disabled={generatingBuilds}>\r\n                  <span><FontAwesomeIcon icon={artifactsAssumeFull ? faCheckSquare : faSquare} className=\"fa-fw\" /> Assume Fully Leveled</span>\r\n                </Button>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                {BuildDisplay.artifactsSlotsToSelectMainStats.map((slotKey, index) =>\r\n                (<div className=\"text-inline mb-1 d-flex justify-content-between\" key={slotKey}>\r\n                  <h6 className=\"d-inline mr-2\">\r\n                    {Artifact.getSlotNameWithIcon(slotKey)}\r\n                  </h6>\r\n                  <DropdownButton disabled={generatingBuilds}\r\n                    title={this.state.mainStat[index] ? Stat.getStatNameWithPercent(this.state.mainStat[index]) : \"Select a mainstat\"}\r\n                    className=\"d-inline\">\r\n                    <Dropdown.Item onClick={() => this.changeMainStat(index, \"\")} >No MainStat</Dropdown.Item>\r\n                    {Artifact.getSlotMainStatKeys(slotKey).map(mainStatKey =>\r\n                      <Dropdown.Item onClick={() => this.changeMainStat(index, mainStatKey)} key={mainStatKey}>\r\n                        {Stat.getStatNameWithPercent(mainStatKey)}\r\n                      </Dropdown.Item>\r\n                    )}\r\n                  </DropdownButton>\r\n                </div>))}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col xs={12} lg={6} className=\"mb-2\"><Row>\r\n            <Col className=\"mb-2\" xs={12}>\r\n              <Card bg=\"lightcontent\" text=\"lightfont\"><Card.Body>\r\n                <Button className=\"w-100\" onClick={() => this.setState({ showArtCondModal: true })} disabled={generatingBuilds}>\r\n                  <span>Default Artifact Set Effects {Boolean(artifactConditionals.length) && <Badge variant=\"success\">{artifactConditionals.length} Selected</Badge>}</span>\r\n                </Button>\r\n              </Card.Body></Card>\r\n            </Col>\r\n            {/* Artifact set picker */}\r\n            {setFilters.map(({ key: setKey, num: setNum }, index) => <Col className=\"mb-2\" key={index} xs={12}>\r\n              <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n                <Card.Header>\r\n                  <ButtonGroup>\r\n                    {/* Artifact set */}\r\n                    <DropdownButton as={ButtonGroup} title={Artifact.getSetName(setKey, \"Artifact Set Filter\")} disabled={generatingBuilds}>\r\n                      <Dropdown.Item onClick={() => this.changeSetFilterKey(index, \"\")}>Unselect Artifact</Dropdown.Item>\r\n                      <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊🟊</Dropdown.ItemText>\r\n                      {this.dropdownitemsForStar(5, index)}\r\n                      <Dropdown.Divider />\r\n                      <Dropdown.ItemText>Max Rarity 🟊🟊🟊🟊</Dropdown.ItemText>\r\n                      {this.dropdownitemsForStar(4, index)}\r\n                      <Dropdown.Divider />\r\n                      <Dropdown.ItemText>Max Rarity 🟊🟊🟊</Dropdown.ItemText>\r\n                      {this.dropdownitemsForStar(3, index)}\r\n                    </DropdownButton>\r\n                    {/* set number */}\r\n                    <DropdownButton as={ButtonGroup} title={`${setNum}-set`}\r\n                      disabled={generatingBuilds || !setKey || artsAccounted >= 5}\r\n                    >\r\n                      {Object.keys(Artifact.getSetEffectsObj(setKey)).map(num => {\r\n                        let artsAccountedOther = setFilters.reduce((accu, cur) => (cur.key && cur.key !== setKey) ? accu + cur.num : accu, 0)\r\n                        return (parseInt(num) + artsAccountedOther <= 5) &&\r\n                          (<Dropdown.Item key={num}\r\n                            onClick={() => this.setState((state) => {\r\n                              let setFilters = state.setFilters;\r\n                              setFilters[index].num = parseInt(num)\r\n                              return { setFilters }\r\n                            }, this.autoGenerateBuilds)}\r\n                          >\r\n                            {`${num}-set`}\r\n                          </Dropdown.Item>)\r\n                      })}\r\n                    </DropdownButton>\r\n                  </ButtonGroup>\r\n                </Card.Header>\r\n                {setKey ? <Card.Body><Row>\r\n                  {Object.keys(Artifact.getSetEffectsObj(setKey)).filter(setNkey => parseInt(setNkey) <= setNum).map(setNumKey => {\r\n                    let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                    let conditionalNum = 0;\r\n                    let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                    if (conditional) {\r\n                      conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                        setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                    }\r\n                    let setStateArtifactConditional = (conditionalNum) => this.setState(state =>\r\n                      ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }), this.autoGenerateBuilds)\r\n                    let conditionalElement = <ConditionalSelector\r\n                      conditional={conditional}\r\n                      conditionalNum={conditionalNum}\r\n                      setConditional={setStateArtifactConditional}\r\n                      defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                    />\r\n                    return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                      <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey)}</h6>\r\n                      {setStats ? <Row>\r\n                        {Object.entries(setStats).map(([statKey, val]) =>\r\n                          <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                      </Row> : null}\r\n                    </Col>\r\n                  })}\r\n                </Row></Card.Body> : null}\r\n              </Card>\r\n            </Col>)}\r\n            <Col className=\"mb-2\" xs={12}>\r\n              <Card bg=\"lightcontent\" text=\"lightfont\"><Card.Body>\r\n                <Button className=\"w-100\" onClick={() => this.setState(state => ({ useLockedArts: !state.useLockedArts }), this.autoGenerateBuilds)} disabled={generatingBuilds}>\r\n                  <span><FontAwesomeIcon icon={useLockedArts ? faCheckSquare : faSquare} /> {useLockedArts ? \"Use Locked & Equipped Artifacts\" : \"Do not use Locked & Equipped Artifacts\"}</span>\r\n                </Button>\r\n              </Card.Body></Card>\r\n            </Col>\r\n          </Row></Col>\r\n        </Row>\r\n        <Row className=\"mb-2\">\r\n          <Col>{selectedCharacterId && buildAlert}</Col>\r\n        </Row>\r\n        <Row className=\"d-flex justify-content-between\">\r\n          <Col xs=\"auto\" >\r\n            <ButtonGroup>\r\n              <Button\r\n                className=\"h-100\"\r\n                disabled={!selectedCharacterId || generatingBuilds}\r\n                variant={(selectedCharacterId && totBuildNumber <= warningBuildNumber) ? \"success\" : \"warning\"}\r\n                onClick={this.generateBuilds}\r\n              ><span>Generate Builds</span></Button>\r\n              <Button\r\n                className=\"h-100\"\r\n                disabled={!generatingBuilds}\r\n                variant=\"danger\"\r\n                onClick={() => {\r\n                  if (this.worker) {\r\n                    this.worker.terminate()\r\n                    delete this.worker\r\n                    this.setState({ generatingBuilds: false, builds: [], generationDuration: 0, generationProgress: 0 })\r\n                  }\r\n                }}\r\n              ><span>Cancel</span></Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {/* Dropdown to select sorting value */}\r\n            <ButtonGroup>\r\n              <DropdownButton disabled={generatingBuilds || !selectedCharacterId} title={<span>Sort by <b>{Stat.getStatNameWithPercent(this.state.buildFilterKey)}</b></span>} as={ButtonGroup}>\r\n                {selectedCharacterId && statsDisplayKeys.map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => this.setState({ buildFilterKey: key }, this.autoGenerateBuilds)}>\r\n                    {Stat.getStatNameWithPercent(key)}\r\n                  </Dropdown.Item>\r\n                )}\r\n              </DropdownButton>\r\n              <Button onClick={() => this.setState(state => ({ ascending: !state.ascending }), this.autoGenerateBuilds)} disabled={generatingBuilds}>\r\n                <FontAwesomeIcon icon={this.state.ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  }\r\n  ArtifactDisplayItem = (props) => {\r\n    let { build, statsDisplayKeys } = props\r\n    return (<div>\r\n      <ListGroup.Item\r\n        variant={props.index % 2 ? \"customdark\" : \"customdarker\"} className=\"text-white\" action\r\n        onClick={() => this.setState({ modalBuild: build })}\r\n      >\r\n        <Row>\r\n          <Col>{Object.entries(build.setToSlots).sort(([key1, slotarr1], [key2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\r\n            <Badge key={key} variant=\"primary\" className=\"mr-2\">\r\n              {slotarr.map(slotKey => Artifact.getSlotIcon(slotKey))} {Artifact.getSetName(key)}\r\n            </Badge>\r\n          )}</Col>\r\n        </Row>\r\n        <Row>\r\n          {statsDisplayKeys.map(key =>\r\n            <Col className=\"text-nowrap\" key={key} xs={12} md={6} xl={4}>\r\n              <span>{Stat.getStatName(key)}: <span className=\"text-warning\">{build.finalStats[key]?.toFixed?.(Stat.fixedUnit(key)) || build.finalStats[key]}{Stat.getStatUnit(key)}</span></span>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </ListGroup.Item>\r\n    </div>)\r\n  }\r\n  closeModal = () => this.setState({ modalBuild: null, showCharacterModal: false })\r\n  BuildModal = ({ build, characterid }) => {\r\n    let { showCharacterModal } = this.state\r\n    return <Modal show={Boolean(showCharacterModal || build)} onHide={this.closeModal} size=\"xl\" contentClassName=\"bg-transparent\">\r\n      <React.Suspense fallback={<span>Loading...</span>}>\r\n        <CharacterDisplayCard characterId={characterid} newBuild={build}\r\n          onClose={this.closeModal}\r\n          forceUpdate={this.forceUpdateBuildDisplay}\r\n          editable={showCharacterModal}\r\n          footer={<Button variant=\"danger\" onClick={this.closeModal}>Close</Button>} />\r\n      </React.Suspense>\r\n    </Modal>\r\n  }\r\n  closeArtCondModal = () => this.setState({ showArtCondModal: false })\r\n  ArtConditionalModal = () => {\r\n    let { showArtCondModal, artifactConditionals } = this.state\r\n    let artSetKeyList = [5, 4, 3].map(s => Artifact.getSetsByMaxStarEntries(s).map(([key]) => key)).flat()\r\n    return <Modal show={showArtCondModal} onHide={this.closeArtCondModal} size=\"xl\" contentClassName=\"bg-transparent\">\r\n      <Card bg=\"darkcontent\" text=\"lightfont\" >\r\n        <Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <h5>Default Artifact Set Effects  {Boolean(artifactConditionals.length) && <Badge variant=\"success\">{artifactConditionals.length} Selected</Badge>}</h5>\r\n            </Col>\r\n            <Col xs=\"auto\" >\r\n              <Button onClick={() => this.setState({ artifactConditionals: [] })}><span><FontAwesomeIcon icon={faUndo} /> Reset All</span></Button>\r\n            </Col>\r\n            <Col xs=\"auto\" >\r\n              <Button variant=\"danger\" onClick={this.closeArtCondModal}>\r\n                <FontAwesomeIcon icon={faTimes} /></Button>\r\n            </Col>\r\n          </Row>\r\n\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Row>\r\n            {artSetKeyList.map(setKey => {\r\n              let icon = Artifact.getPieceIcon(setKey, Object.keys(Artifact.getPieces(setKey))?.[0])\r\n              let numStars = [...Artifact.getRarityArr(setKey)].pop() || 1\r\n              return <Col className=\"mb-2\" key={setKey} xs={12} lg={6} xl={4}>\r\n                <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n                  <Card.Header >\r\n                    <Row>\r\n                      <Col xs=\"auto\" className=\"ml-n3 my-n2\">\r\n                        <Image src={icon} className={`thumb-mid grad-${numStars}star m-1`} thumbnail />\r\n                      </Col>\r\n                      <Col >\r\n                        <h6><b>{Artifact.getSetName(setKey)}</b></h6>\r\n                        <span><Stars stars={numStars} /></span>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Header>\r\n                  <Card.Body><Row>\r\n                    {Object.keys(Artifact.getSetEffectsObj(setKey)).map(setNumKey => {\r\n                      let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                      let conditionalNum = 0;\r\n                      let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                      if (conditional) {\r\n                        conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                        Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                          setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                      }\r\n                      let setStateArtifactConditional = (conditionalNum) => this.setState(state =>\r\n                        ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }),\r\n                        this.autoGenerateBuilds())\r\n                      let conditionalElement = <ConditionalSelector\r\n                        conditional={conditional}\r\n                        conditionalNum={conditionalNum}\r\n                        setConditional={setStateArtifactConditional}\r\n                        defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                      />\r\n                      return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                        <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey)}</h6>\r\n                        {setStats ? <Row>\r\n                          {Object.entries(setStats).map(([statKey, val]) =>\r\n                            <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                        </Row> : null}\r\n                      </Col>\r\n                    })}\r\n                  </Row></Card.Body>\r\n                </Card>\r\n              </Col>\r\n            })}\r\n          </Row>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Button variant=\"danger\" onClick={this.closeArtCondModal}>\r\n            <FontAwesomeIcon icon={faTimes} /> CLOSE</Button>\r\n        </Card.Footer>\r\n      </Card>\r\n    </Modal>\r\n  }\r\n\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport()\r\n    ]).then(() => {\r\n      this.forceUpdate()\r\n      //try to generate a build at the beginning after mount.\r\n      this.autoGenerateBuilds()\r\n    })\r\n  }\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if (prevState.selectedCharacterId !== this.state.selectedCharacterId) {\r\n      let { selectedCharacterId } = this.state\r\n      saveToLocalStorage(\"BuildsDisplay.state\", { selectedCharacterId })\r\n    }\r\n\r\n    if (this.state.selectedCharacterId) {\r\n      let character = CharacterDatabase.getCharacter(this.state.selectedCharacterId)\r\n      if (!character) return\r\n      const { setFilters, artifactConditionals, mainStat, buildFilterKey, artifactsAssumeFull, useLockedArts, ascending } = deepClone(this.state)\r\n      character.buildSetting = { setFilters, artifactConditionals, mainStat, buildFilterKey, artifactsAssumeFull, useLockedArts, ascending }\r\n      CharacterDatabase.updateCharacter(character)\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.worker?.terminate()\r\n    delete this.worker\r\n  }\r\n  render() {\r\n    let { selectedCharacterId, modalBuild, maxBuildsToShow, builds = [] } = this.state\r\n    let selectedCharacter = CharacterDatabase.getCharacter(selectedCharacterId)\r\n    let characterKey = selectedCharacter?.characterKey\r\n    let characterName = Character.getName(characterKey, \"Character Name\")\r\n    let statsDisplayKeys = Character.getDisplayStatKeys(characterKey)\r\n    return (<Container>\r\n      <this.BuildModal build={modalBuild} characterid={selectedCharacterId} />\r\n      <this.ArtConditionalModal />\r\n      <Row className=\"mt-2 mb-2\">\r\n        <Col>\r\n          {/* Build Generator Editor */}\r\n          <this.BuildGeneratorEditorCard statsDisplayKeys={statsDisplayKeys} />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <Card bg=\"darkcontent\" text=\"lightfont\">\r\n            <Card.Header>{selectedCharacterId ? `Showing ${builds.length} Builds generated for ${characterName}` : \"Select a character to generate builds.\"}</Card.Header>\r\n            {/* Build List */}\r\n            <ListGroup>\r\n              {builds.map((build, index) =>\r\n                (index < maxBuildsToShow) && <this.ArtifactDisplayItem build={build} character={selectedCharacter} index={index} key={Object.values(build.artifactIds).join(\"_\")} statsDisplayKeys={statsDisplayKeys} />\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>)\r\n  }\r\n}\r\n","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\nimport { GetDependencies } from \"../StatDependency\"\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    if (skillKey === \"phy\") return `phy_${dmgMode}`\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    if (skillKey === \"phy\") return \"physical\"\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_base\") || false\r\n    return character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats)\r\n    PreprocessFormulas(dependencies, stats.modifiers)(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"modifiers\")\r\n        return initialStats.modifiers = { ...(initialStats.modifiers || {}), ...val }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey, constellation)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, Modifiers, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = []) => {\r\n    //remove keys that will be overriden by the modifier\r\n    for (const statKey of statList)\r\n      if (Object.keys(ModifiersText).includes(statKey))\r\n        statList = statList.filter(skey => skey !== Modifiers[statKey].key)\r\n    let formulaKeys = Object.keys(FormulaText)\r\n    let modifiersTextKeys = Object.keys(ModifiersText)\r\n    return statList.filter(statKey => formulaKeys.includes(statKey) || modifiersTextKeys.includes(statKey))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    if (statKey in ModifiersText)\r\n      return Stat.printModifier(stats, statKey, modifiers[statKey], false)\r\n    return FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n      (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n  }\r\n\r\n  static printModifier = (stats, overrideKey, options, expand = true) =>\r\n    typeof ModifiersText?.[overrideKey]?.formulaText === \"function\" &&\r\n    (<span>{ModifiersText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (Modifiers[statKey]) statKey = Modifiers[statKey].key\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  amp_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(o, \"ele_mas\")} * exp^(-0.000505 * {f(o, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst ModifiersText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.sweep_multiplier * 100}%</span>,\r\n  },\r\n  mona_passive2_hydro_ele_dmg_bonus: {\r\n    formulaText: () => (o) => <span>{f(o, \"hydro_ele_dmg_bonus\")} + {f(o, \"ener_rech\")} * 20%</span>,\r\n  },\r\n\r\n  bennett_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + ( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * {options.atk_multiplier * 100}%</span>,\r\n  },\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n  ModifiersText,\r\n};\r\n","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance\r\n}","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {})\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, numStars, rolls) => {\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars);\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let min = rollData[0] * len;\r\n    let max = rollData[rollData.length - 1] * len;\r\n    return clampPercent(((sum - min) / (max - min)) * 100)\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      if (rollArr.length > 1) substat.rollArr = rollArr\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, numStars, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, numStars, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect).length > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n      if (Object.keys(condStats).length > 0) {\r\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n        Object.entries(condStats).forEach(([statKey, value]) =>\r\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\r\n      }\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else if (!conditionalNum && index < 0) { //nothing to change\r\n      return conditionals\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => artifactDatabase[id] || null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  all_dmg_bonus: { name: \"All DMG Bonus\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elemental Mastery Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elemental Mastery Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elemental Mastery Multiplier Z\", unit: \"multi\" },\r\n  amp_reaction_base_multi: { name: \"Amplifying Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_final: (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.phy_dmg,\r\n  plunge_crit_dmg: (s) => s.phy_crit_dmg,\r\n  plunge_avg_dmg: (s) => s.phy_avg_dmg,\r\n  plunge_bonus_multi: (s) => s.phy_bonus_multi,\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  amp_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s[`${ele}_ele_dmg`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_ele_crit_dmg`],\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_ele_avg_dmg`],\r\n  plunge_bonus_multi: (s, ele) => s[`${ele}_ele_bonus_multi`],\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.all_dmg_bonus) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst Modifiers = {\r\n  noelle_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => s.atk_final + s.def_final * options.sweep_multiplier\r\n  },\r\n  mona_passive2_hydro_ele_dmg_bonus: {\r\n    key: \"hydro_ele_dmg_bonus\",\r\n    formula: () => (s) => s.hydro_ele_dmg_bonus + s.ener_rech * 0.2\r\n  },\r\n  bennett_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => s.atk_final + (s.atk_base + s.atk_weapon) * options.atk_multiplier\r\n  },\r\n}\r\n\r\nfunction PreprocessFormulas(formulaKeys, modifiers) {\r\n  let formulas = formulaKeys.map(key => {\r\n    if (key in Modifiers) return [Modifiers[key].key, Modifiers[key].formula(modifiers[key])]\r\n    if (key in Formulas) return [key, Formulas[key]]\r\n    let value = StatData[key][\"default\"] ?? 0\r\n    return [key, (s) => (s[key] ?? value)]\r\n  })\r\n\r\n  return stat => formulas.forEach(([key, formula]) => {\r\n    stat[key] = formula(stat)\r\n  })\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  Modifiers,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  PreprocessFormulas,\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","import { Formulas, Modifiers, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nconst formulaKeyDependency = {}\r\nconst registerDependency = (name, operation) => {\r\n  let testObj = {}\r\n  let dependency = new Set()\r\n  Object.keys(StatData).forEach(k => {\r\n    Object.defineProperty(testObj, k, {\r\n      get: () => {\r\n        dependency.add(k)\r\n        return 0\r\n      }\r\n    })\r\n  })\r\n  operation(testObj)\r\n  formulaKeyDependency[name] = [...dependency]\r\n}\r\nObject.keys(Formulas).forEach(key => registerDependency(key, s => Formulas[key](s)))\r\nObject.keys(Modifiers).forEach(name => registerDependency(name, s => Modifiers[name].formula({})(s)))\r\n\r\nif (process.env.NODE_ENV === \"development\") console.log(formulaKeyDependency)\r\n\r\nfunction GetDependencies(initialStats, keys = Object.keys(Formulas)) {\r\n  let dependencies = new Set(), { modifiers = {} } = initialStats\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n\r\n  for (const name in modifiers) {\r\n    if (Modifiers[name].key === key) {\r\n      formulaKeyDependency[name].forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n      dependencies.add(name)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  GetDependencies,\r\n}\r\n"],"sourceRoot":""}