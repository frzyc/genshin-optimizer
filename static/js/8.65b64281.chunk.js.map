{"version":3,"sources":["Weapon/Weapon.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","Components/CustomFormControl.js","Data/ArtifactData.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","Components/ConditionalSelector.js","Assets/Weapons/Swords/Swords.js","Assets/Weapons/Swords/Weapon_Dull_Blade.png","Assets/Weapons/Swords/Weapon_Silver_Sword.png","Assets/Weapons/Swords/Weapon_Cool_Steel.png","Assets/Weapons/Swords/Weapon_Dark_Iron_Sword.png","Assets/Weapons/Swords/Weapon_Fillet_Blade.png","Assets/Weapons/Swords/Weapon_Harbinger_of_Dawn.png","Assets/Weapons/Swords/Weapon_Skyrider_Sword.png","Assets/Weapons/Swords/Weapon_Traveler's_Handy_Sword.png","Assets/Weapons/Swords/Weapon_Blackcliff_Longsword.png","Assets/Weapons/Swords/Weapon_Favonius_Sword.png","Assets/Weapons/Swords/Weapon_Iron_Sting.png","Assets/Weapons/Swords/Weapon_Lion's_Roar.png","Assets/Weapons/Swords/Weapon_Prototype_Rancour.png","Assets/Weapons/Swords/Weapon_Royal_Longsword.png","Assets/Weapons/Swords/Weapon_Sacrificial_Sword.png","Assets/Weapons/Swords/Weapon_The_Alley_Flash.png","Assets/Weapons/Swords/Weapon_The_Black_Sword.png","Assets/Weapons/Swords/Weapon_The_Flute.png","Assets/Weapons/Swords/Weapon_Sword_of_Descension.png","Assets/Weapons/Swords/festering_fang.png","Assets/Weapons/Swords/Weapon_Aquila_Favonia.png","Assets/Weapons/Swords/Weapon_Skyward_Blade.png","Assets/Weapons/Swords/summit_shaper.png","Assets/Weapons/Claymores/Claymores.js","Assets/Weapons/Claymores/Weapon_Waster_Greatsword.png","Assets/Weapons/Claymores/Weapon_Old_Merc's_Pal.png","Assets/Weapons/Claymores/Weapon_Bloodtainted_Greatsword.png","Assets/Weapons/Claymores/Weapon_Debate_Club.png","Assets/Weapons/Claymores/Weapon_Ferrous_Shadow.png","Assets/Weapons/Claymores/Weapon_Quartz.png","Assets/Weapons/Claymores/Weapon_Skyrider_Greatsword.png","Assets/Weapons/Claymores/Weapon_White_Iron_Greatsword.png","Assets/Weapons/Claymores/Weapon_Blackcliff_Slasher.png","Assets/Weapons/Claymores/Weapon_Favonius_Greatsword.png","Assets/Weapons/Claymores/Weapon_Lithic_Blade.png","Assets/Weapons/Claymores/Weapon_Prototype_Aminus.png","Assets/Weapons/Claymores/Weapon_Rainslasher.png","Assets/Weapons/Claymores/Weapon_Royal_Greatsword.png","Assets/Weapons/Claymores/Weapon_Serpent_Spine.png","Assets/Weapons/Claymores/Weapon_The_Bell.png","Assets/Weapons/Claymores/Weapon_Whiteblind.png","Assets/Weapons/Claymores/Weapon_Sacrificial_Greatsword.png","Assets/Weapons/Claymores/snow_tombed_starsilver.png","Assets/Weapons/Claymores/Weapon_Skyward_Pride.png","Assets/Weapons/Claymores/Weapon_Wolf's_Gravestone.png","Assets/Weapons/Claymores/Weapon_The_Unforged.png","Assets/Weapons/Polearms/Polearms.js","Assets/Weapons/Polearms/Weapon_Beginner's_Protector.png","Assets/Weapons/Polearms/Weapon_Iron_Point.png","Assets/Weapons/Polearms/Weapon_Black_Tassel.png","Assets/Weapons/Polearms/Weapon_Halberd.png","Assets/Weapons/Polearms/Weapon_White_Tassel.png","Assets/Weapons/Polearms/Weapon_Blackcliff_Pole.png","Assets/Weapons/Polearms/Weapon_Crescent_Pike.png","Assets/Weapons/Polearms/Weapon_Deathmatch.png","Assets/Weapons/Polearms/Weapon_Dragon's_Bane.png","Assets/Weapons/Polearms/Weapon_Lithic_Spear.png","Assets/Weapons/Polearms/Weapon_Prototype_Grudge.png","Assets/Weapons/Polearms/Weapon_Favonius_Lance.png","Assets/Weapons/Polearms/Weapon_Royal_Spear.png","Assets/Weapons/Polearms/dragonspine_spear.png","Assets/Weapons/Polearms/Weapon_Vortex_Vanquisher.png","Assets/Weapons/Polearms/Weapon_Primordial_Jade_Winged-Spear.png","Assets/Weapons/Polearms/Weapon_Skyward_Spine.png","Assets/Weapons/Bows/Bows.js","Assets/Weapons/Bows/Weapon_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Seasoned_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Ebony_Bow.png","Assets/Weapons/Bows/Weapon_Messenger.png","Assets/Weapons/Bows/Weapon_Raven_Bow.png","Assets/Weapons/Bows/Weapon_Recurve_Bow.png","Assets/Weapons/Bows/Weapon_Sharpshooter's_Oath.png","Assets/Weapons/Bows/Weapon_Slingshot.png","Assets/Weapons/Bows/Weapon_The_Stringless.png","Assets/Weapons/Bows/Weapon_Alley_Hunter.png","Assets/Weapons/Bows/Weapon_Blackcliff_Warbow.png","Assets/Weapons/Bows/Weapon_Compound_Bow.png","Assets/Weapons/Bows/Weapon_Favonius_Warbow.png","Assets/Weapons/Bows/Weapon_Prototype_Crescent.png","Assets/Weapons/Bows/Weapon_Royal_Bow.png","Assets/Weapons/Bows/Weapon_Rust.png","Assets/Weapons/Bows/Weapon_Sacrificial_Bow.png","Assets/Weapons/Bows/Weapon_The_Viridescent_Hunt.png","Assets/Weapons/Bows/Weapon_Skyward_Harp.png","Assets/Weapons/Bows/Weapon_Amos'_Bow.png","Assets/Weapons/Bows/dreams_of_dragonfell.png","Assets/Weapons/Catalysts/Catalysts.js","Assets/Weapons/Catalysts/Weapon_Apprentice's_Notes.png","Assets/Weapons/Catalysts/Weapon_Pocket_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Amber_Catalyst.png","Assets/Weapons/Catalysts/Weapon_Emerald_Orb.png","Assets/Weapons/Catalysts/Weapon_Magic_Guide.png","Assets/Weapons/Catalysts/Weapon_Otherworldly_Story.png","Assets/Weapons/Catalysts/Weapon_Thrilling_Tales_of_Dragon_Slayers.png","Assets/Weapons/Catalysts/Weapon_Twin_Nephrite.png","Assets/Weapons/Catalysts/Weapon_Blackcliff_Amulet.png","Assets/Weapons/Catalysts/Weapon_Favonius_Codex.png","Assets/Weapons/Catalysts/Weapon_Mappa_Mare.png","Assets/Weapons/Catalysts/Weapon_Prototype_Malice.png","Assets/Weapons/Catalysts/Weapon_Royal_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Sacrificial_Fragments.png","Assets/Weapons/Catalysts/Weapon_Solar_Pearl.png","Assets/Weapons/Catalysts/Weapon_The_Widsith.png","Assets/Weapons/Catalysts/Weapon_Wine_and_Song.png","Assets/Weapons/Catalysts/Weapon_Eye_of_Perception.png","Assets/Weapons/Catalysts/Weapon_Frostbearer.png","Assets/Weapons/Catalysts/Weapon_Lost_Prayer_to_the_Sacred_Winds.png","Assets/Weapons/Catalysts/Weapon_Skyward_Atlas.png","Assets/Weapons/Catalysts/Weapon_Memory_of_Dust.png","Assets/Assets.js","Assets/Weapons/Weapons.js","Assets/Element_Anemo.png","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Data/WeaponData.js","DatabaseUtil.js","Components/StatIcon.js","StatDependency.js","Artifact/PercentBadge.js","Data/CharacterData.js","../node_modules/react-bootstrap/esm/Badge.js","Artifact/ArtifactCard.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/StatDisplay.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","TestPage/TestDisplay.js","Character/Character.js","Stat.js","Util/Util.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Artifact/ArtifactDatabase.js","Util/ConditionalsUtil.js","Data/ElementalData.js","StatData.js","Components/StarDisplay.js"],"names":["Weapon","this","Error","getWeaponDataImport","WeaponDataImport","getLevelName","levelKey","defVal","LevelNameData","getLevelIndex","WeaponLevelKeys","indexOf","getWeaponName","weaponKey","WeaponData","name","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","refineIndex","charFinalStats","character","passiveDescription","getWeaponDescription","description","getWeaponConditional","conditional","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","getWeaponSubStatKey","subStatKey","getWeaponBonusStat","stats","getWeaponsOfType","weaponType","Object","fromEntries","entries","filter","getWeaponTypeName","WeaponTypeData","getWeaponMainStatValWithOverride","weaponObj","overrideMainVal","key","getWeaponSubStatValWithOverride","overrideSubVal","getWeaponConditionalStat","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","map","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","FloatFormControl","placeholder","onValueChange","disabled","useState","focus","setFocus","type","className","toString","onChange","e","target","parseFloat","onFocus","onBlur","IntFormControl","parseInt","ArtifactData","ArtifactDataImport","then","imp","default","ArtifactMainSlotKeys","keys","ElementalData","forEach","push","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","hp","atk","hp_","atk_","def_","phy_dmg_bonus","ele_dmg_bonus","ele_mas","ener_rech","crit_rate","crit_dmg","heal_bonu","2","ArtifactSubStatsData","def","ArtifactSlotsData","flower","plume","sands","goblet","circlet","resolveContainerRef","ref","_ref","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","ConditionalSelector","props","setConditional","defEle","Array","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","i","Fragment","v","stack","tempcount","icon","faCheckSquare","faSquare","sword","DullBlade","SilverSword","CoolSteel","DarkIronSword","FilletBlade","HarbingerOfDawn","SkyriderSword","TravelersHandySword","BlackcliffLongsword","FavoniusSword","IronSting","LionsRoar","PrototypeRancour","RoyalLongsword","SacrificialSword","TheAlleyFlash","TheBlackSword","TheFlute","SwordOfDescension","FesteringDesire","AquilaFavonia","SkywardBlade","SummitShaper","claymore","WasterGreatsword","OldMercsPal","BloodtaintedGreatsword","DebateClub","FerrousShadow","Quartz","SkyriderGreatsword","WhiteIronGreatsword","BlackcliffSlasher","FavoniusGreatsword","LithicBlade","PrototypeAminus","Rainslasher","RoyalGreatsword","SerpentSpine","TheBell","Whiteblind","SacrificialGreatsword","SnowTombedStarsilver","SkywardPride","WolfsGravestone","TheUnforged","polearms","BeginnersProtector","IronPoint","BlackTassel","Halberd","WhiteTassel","BlackcliffPole","CrescentPike","Deathmatch","DragonsBane","LithicSpear","PrototypeGrudge","FavoniusLance","RoyalSpear","DragonspineSpear","VortexVanquisher","PrimordialJadeWingedSpear","SkywardSpine","bows","HuntersBow","SeasonedHuntersBow","EbonyBow","Messenger","RavenBow","RecurveBow","SharpshootersOath","Slingshot","TheStringless","AlleyHunter","BlackcliffWarbow","CompoundBow","FavoniusWarbow","PrototypeCrescent","RoyalBow","Rust","SacrificialBow","TheViridescentHunt","SkywardHarp","AmosBow","DreamsOfDragonfell","catalysts","ApprenticesNotes","PocketGrimoire","AmberCatalyst","EmeraldOrb","MagicGuide","OtherworldlyStory","ThrillingTalesOfDragonSlayers","TwinNephrite","BlackcliffAgate","FavoniusCodex","MappaMare","PrototypeMalice","RoyalGrimoire","SacrificialFragments","SolarPearl","TheWidsith","WineAndSong","EyeOfPerception","Frostbearer","LostPrayerToTheSacredWinds","SkywardAtlas","MemoryOfDust","Assets","weapons","swords","claymores","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","polearm","resin","fragile","condensed","exp_books","advice","wit","experience","DatabaseInitAndVerify","localStorage","removeItem","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","values","art","valid","location","getCharacter","keyMapping","setKey","mainStatKey","endsWith","replace","updateArtifact","chars","getCharacterDatabase","equippedArtifacts","slotKey","artid","getArtifact","undefined","artifactConditionals","cond","srcKey","srcKey2","dmgMode","updateCharacter","StatIcon","hp_base","faTint","hp_final","atk_base","faFistRaised","atk_final","def_base","faShieldAlt","def_final","faMagic","faDice","faDiceD20","faSync","faFirstAid","StatIconEle","statKey","formulaKeyDependency","DependencyStatKeys","formulaOverrides","dependencies","GetDependencyStats","formulaOverride","OverrideFormulas","dependency","includes","Set","formulaKeys","Formulas","k","statkeys","StatData","keyDependencies","subdependencies","testObj","defineProperty","get","configurable","AttachLazyFormulas","getDependency","PercentBadge","percent","children","badgeColor","isNaN","Math","floor","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","stam","CharacterSpecializedStatKey","Badge","React","forwardRef","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","ArtifactCard","artifactId","forceUpdate","onEdit","onDelete","assumeFull","equipOnChar","charId","Artifact","equipArtifactOnChar","artifactValidation","locationChar","mainStatLevel","numStars","assFullColor","mainStatVal","getMainStatValue","Stat","getStatUnit","border","bg","Header","xs","md","src","getArtifactPieceIcon","thumbnail","getArtifactPieceName","getArtifactSlotNameWithIcon","Body","Title","getArtifactSetName","stars","getStatName","substats","stat","subStatValidation","subStatValidations","numRolls","rolls","length","efficiency","effOpacity","statName","toFixed","style","opacity","tooltip","msg","currentEfficiency","maximumEfficiency","Footer","id","char","placement","overlay","pointerEvents","lock","faLock","faLockOpen","Boolean","faEdit","faTrashAlt","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","TabContext","Provider","SelectableContext","TabContent","decoratedBsPrefix","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","Tab","_React$Component","apply","arguments","_inheritsLoose","prototype","render","Container","Content","Pane","createContext","useAccordionToggle","contextEventKey","AccordionContext","AccordionToggle","accordionOnClick","AccordionCollapse","Collapse","Children","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","_objectWithoutProperties","source","excluded","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","DisplayStats","statVal","build","editable","otherProps","buildVal","finalStats","buildDiff","originalVal","Character","getStatValueWithOverride","diff","diffText","fixedUnit","hasOverride","Col","DisplayNewBuildDiff","equippedBuild","newBuild","unit","CharacterArtifactPane","characterKey","compareAgainstEquipped","setState","showOther","setShowOther","artifactsAssumeFull","statKeys","getDisplayStatKeys","displayStatProps","displayNewBuildProps","formulaDependencyKeys","flat","FormulaText","Row","Card","Button","xl","printStat","printFormula","equipArtifacts","artifactIds","Alert","sm","lg","getArtifactSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getArtifactSetEffectConditional","getConditionalNum","conditionalStats","getArtifactConditionalStats","val","conditionalElement","cnum","state","setStateArtifactConditional","getArtifactSetEffectText","StatInput","prependEle","defaultValue","restProps","InputGroup","Prepend","Text","Append","OverlayTrigger","Tooltip","faUndo","CharacterOverviewPane","constellation","setOverride","setConstellation","editLevel","setEditLevel","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","getName","Image","getStar","colored","clamp","getLevel","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","conditionalEle","faQuoteLeft","DropdownButton","title","reverse","star","arr","Dropdown","ItemText","Divider","faGavel","editingOther","SetEditingOther","additionalKeys","displayStatKeys","editStatKeys","otherStatKeys","getElementalKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","getStatNameRaw","CharacterTalentPane","ascension","getAscension","skillDisplayProps","ContextAwareToggle","callback","currentEventKey","decoratedOnClick","expanded","faWindowMinimize","faWindowMaximize","ToggleButtonGroup","ToggleButton","href","rel","eleKey","immunityStatKey","elementImmunity","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","autoInfused","statsDisplayKeys","ReactionDisplay","tKey","tText","SkillDisplayCard","talentKey","subtitle","asc","enabled","onClickTitle","ReactionComponents","superconduct_dmg","electrocharged_dmg","overloaded_dmg","swirl_dmg","shatter_dmg","information","faQuestionCircle","crystalize_dmg","reactionMode","charEleKey","eleInterArr","ElementToReactionKeys","Ele","talentLimits","header","getTalentLevelKey","talentLvlKey","levelBoost","infuseBtn","getElementalName","tLvl","talentLevelKeys","statsEle","talentStats","getTalentStats","ListGroup","index","getTalentImg","getTalentName","Subtitle","getTalentDocument","section","talentText","fields","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","FieldDisplay","field","fieldText","fieldVariant","fieldBasic","basicVal","fieldVal","finalVal","round","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","child","CharacterDisplayCard","forceUpdateComponent","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","characterId","getInitialState","Promise","all","getCharacterDataImport","getArtifactDataImport","deepClone","addCharacter","footer","onClose","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","faTimes","defaultActiveKey","Nav","Link","getCDataObj","talent","skill","initialState","auto","burst","ListGroupItem","action","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","horizontal","horizontalVariant","initialBsPrefix","AbstractNav","TestDisplay","moveToNewLocation","removeCharacterById","getSpecializedStatKey","getSpeicalizedStatVal","characterObj","baseStat","getIndexFromlevelkey","elementalKey","constellationName","titles","getSpecializedStat","specializeStat","thumbImg","cardImg","img","constIndex","getTalentLevelBoost","talents","talentBoost","boostEntry","find","withBoost","getTalentFields","getTalentStatsAll","statsArr","getTalentConditional","doc","tempCond","skillKey","elemental","infusable","getTalentStatKeyVariant","atkKeys","startsWith","artIdsOnCharacter","artIdsNotOnCharacter","getArtifactSlotKeys","artNotOnChar","artOnChar","notCharLoc","equipArtifact","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","condStats","char_ele_key","overrides","hasOwnProperty","specialStatKey","addStatsObj","weaponStats","subKey","subVal","bonusStats","htmlStatsData","pretty","getStatVariant","f","expand","printOverrideFormula","options","overrideKey","OverrideFormulasText","formulaText","obj","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_multi","electrocharged","superconduct_multi","superconduct","swirl_multi","swirl","shatter_multi","shattered","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","trans_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","abs","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","enumerable","writable","noelle_burst_atk","array","random","getRandomIntInclusive","min","max","ceil","loadFromLocalStorage","data","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","closeEnoughFloat","a","b","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","_createForOfIteratorHelper","allowArrayLike","it","F","s","n","done","_e","err","normalCompletion","didErr","step","next","_e2","initiated","characterDatabase","charIdIndex","isInvalid","getCharacterIdList","dchar","getArtifactIDFromSlot","charid","unequipArtifactOnSlot","equipArtifactBuild","SlotIcon","faBahai","faFeatherAlt","faHourglass","faWineGlass","faCrown","ArtifactBase","rollData","float","roll","maxNumRoll","rollOption","sum","reduce","accu","isFloat","getSubstatRollData","getRolls","totalAllowableRolls","validateSubStat","some","currentNumOfRolls","cur","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","totalPossbleUpgrade","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getArtifactSetsByMaxStarEntries","setobj","pieces","icons","getArtifactSetEffectsObj","sets","getArtifactSlotName","getArtifactSlotIcon","slotIcon","getRarityArr","getMainStatKeys","getSubStatKeys","numberOfSubstatUnlocked","getArtifactSets","artifactSetEffect","artArr","setNumKeys","setEffectText","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","hasSetEffect","setEffectObj","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","reactionName","dmgKey","dmgName","str","atkTypeName","dmgModeName","ele_key","formula","overrideFormulaKey","StarIcon","faStar","Stars","_"],"mappings":"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YWjCa,IAA0B,gDXkCvCC,gBYlCa,IAA0B,oDZmCvCC,YanCa,IAA0B,+CboCvCC,gBcpCa,IAA0B,oDdqCvCC,aerCa,IAA0B,iDfsCvCC,QgBtCa,IAA0B,4ChBuCvCC,WiBvCa,IAA0B,8CjBwCvCC,sBkBxCa,IAA0B,0DlByCvCC,qBmBzCa,IAA0B,mDnB0CvCC,aoB1Ca,IAA0B,iDpB2CvCC,gBqB3Ca,IAA0B,qDrB4CvCC,YsB5Ca,IAA0B,iDCoC1BC,EAnBE,CACfC,mBClBa,IAA0B,wDDmBvCC,UEnBa,IAA0B,8CFoBvCC,YGpBa,IAA0B,gDHqBvCC,QIrBa,IAA0B,2CJsBvCC,YKtBa,IAA0B,gDLuBvCC,eMvBa,IAA0B,mDNwBvCC,aOxBa,IAA0B,iDPyBvCC,WQzBa,IAA0B,8CR0BvCC,YS1Ba,IAA0B,iDT2BvCC,YU3Ba,IAA0B,gDV4BvCC,gBW5Ba,IAA0B,oDX6BvCC,cY7Ba,IAA0B,kDZ8BvCC,Wa9Ba,IAA0B,+Cb+BvCC,iBc/Ba,IAA0B,8CdgCvCC,iBehCa,IAA0B,qDfiCvCC,0BgBjCa,IAA0B,gEhBkCvCC,aiBlCa,IAA0B,kDC4C1BC,EAvBF,CACXC,WCtBa,IAA0B,gDDuBvCC,mBEvBa,IAA0B,yDFwBvCC,SGxBa,IAA0B,6CHyBvCC,UIzBa,IAA0B,6CJ0BvCC,SK1Ba,IAA0B,6CL2BvCC,WM3Ba,IAA0B,+CN4BvCC,kBO5Ba,IAA0B,uDP6BvCC,UQ7Ba,IAA0B,6CR8BvCC,cS9Ba,IAA0B,kDT+BvCC,YU/Ba,IAA0B,gDVgCvCC,iBWhCa,IAA0B,qDXiCvCC,YYjCa,IAA0B,gDZkCvCC,ealCa,IAA0B,mDbmCvCC,kBcnCa,IAA0B,sDdoCvCC,SepCa,IAA0B,6CfqCvCC,KgBrCa,IAA0B,wChBsCvCC,eiBtCa,IAA0B,mDjBuCvCC,mBkBvCa,IAA0B,wDlBwCvCC,YmBxCa,IAA0B,gDnByCvCC,QoBzCa,IAA0B,6CpB0CvCC,mBqB1Ca,IAA0B,kDC8C1BC,EAxBG,CAChBC,iBCvBa,IAA0B,sDDwBvCC,eExBa,IAA0B,mDFyBvCC,cGzBa,IAA0B,kDH0BvCC,WI1Ba,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","file":"static/js/8.65b64281.chunk.js","sourcesContent":["import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst FloatFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseFloat(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\n\r\nconst IntFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseInt(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\nexport {\r\n  FloatFormControl,\r\n  IntFormControl\r\n}","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import DullBlade from './Weapon_Dull_Blade.png'\r\nimport SilverSword from './Weapon_Silver_Sword.png'\r\nimport CoolSteel from './Weapon_Cool_Steel.png'\r\nimport DarkIronSword from './Weapon_Dark_Iron_Sword.png'\r\nimport FilletBlade from './Weapon_Fillet_Blade.png'\r\nimport HarbingerOfDawn from './Weapon_Harbinger_of_Dawn.png'\r\nimport SkyriderSword from './Weapon_Skyrider_Sword.png'\r\nimport TravelersHandySword from './Weapon_Traveler\\'s_Handy_Sword.png'\r\nimport BlackcliffLongsword from './Weapon_Blackcliff_Longsword.png'\r\nimport FavoniusSword from './Weapon_Favonius_Sword.png'\r\nimport IronSting from './Weapon_Iron_Sting.png'\r\nimport LionsRoar from './Weapon_Lion\\'s_Roar.png'\r\nimport PrototypeRancour from './Weapon_Prototype_Rancour.png'\r\nimport RoyalLongsword from './Weapon_Royal_Longsword.png'\r\nimport SacrificialSword from './Weapon_Sacrificial_Sword.png'\r\nimport TheAlleyFlash from './Weapon_The_Alley_Flash.png'\r\nimport TheBlackSword from './Weapon_The_Black_Sword.png'\r\nimport TheFlute from './Weapon_The_Flute.png'\r\nimport SwordOfDescension from './Weapon_Sword_of_Descension.png'\r\nimport FesteringDesire from './festering_fang.png'\r\nimport AquilaFavonia from './Weapon_Aquila_Favonia.png'\r\nimport SkywardBlade from './Weapon_Skyward_Blade.png'\r\nimport SummitShaper from './summit_shaper.png'\r\nconst sword = {\r\n  DullBlade,\r\n  SilverSword,\r\n  CoolSteel,\r\n  DarkIronSword,\r\n  FilletBlade,\r\n  HarbingerOfDawn,\r\n  SkyriderSword,\r\n  TravelersHandySword,\r\n  BlackcliffLongsword,\r\n  FavoniusSword,\r\n  IronSting,\r\n  LionsRoar,\r\n  PrototypeRancour,\r\n  RoyalLongsword,\r\n  SacrificialSword,\r\n  TheAlleyFlash,\r\n  TheBlackSword,\r\n  TheFlute,\r\n  SwordOfDescension,\r\n  FesteringDesire,\r\n  AquilaFavonia,\r\n  SkywardBlade,\r\n  SummitShaper,\r\n}\r\nexport default sword","export default __webpack_public_path__ + \"static/media/Weapon_Dull_Blade.f5de06e8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Silver_Sword.e2462179.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Cool_Steel.0c6a9897.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dark_Iron_Sword.8dce5b63.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Fillet_Blade.c8e8ab5f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Harbinger_of_Dawn.26da0d78.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Sword.80e60c22.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Traveler's_Handy_Sword.168a7842.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Longsword.522f4d19.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Sword.cb5df26b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Sting.9f4b4b01.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lion's_Roar.b0e78fa9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Rancour.64965f56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Longsword.5a57f015.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Sword.048703ab.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Alley_Flash.7528f5ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Black_Sword.3987a991.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Flute.82af0cbf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sword_of_Descension.eb67a1df.png\";","export default __webpack_public_path__ + \"static/media/festering_fang.38aa5200.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Aquila_Favonia.7c014114.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Blade.af22a740.png\";","export default __webpack_public_path__ + \"static/media/summit_shaper.5245335d.png\";","import WasterGreatsword from './Weapon_Waster_Greatsword.png'\r\nimport OldMercsPal from './Weapon_Old_Merc\\'s_Pal.png'\r\nimport BloodtaintedGreatsword from './Weapon_Bloodtainted_Greatsword.png'\r\nimport DebateClub from './Weapon_Debate_Club.png'\r\nimport FerrousShadow from './Weapon_Ferrous_Shadow.png'\r\nimport Quartz from './Weapon_Quartz.png'\r\nimport SkyriderGreatsword from './Weapon_Skyrider_Greatsword.png'\r\nimport WhiteIronGreatsword from './Weapon_White_Iron_Greatsword.png'\r\nimport BlackcliffSlasher from './Weapon_Blackcliff_Slasher.png'\r\nimport FavoniusGreatsword from './Weapon_Favonius_Greatsword.png'\r\nimport LithicBlade from './Weapon_Lithic_Blade.png'\r\nimport PrototypeAminus from './Weapon_Prototype_Aminus.png'\r\nimport Rainslasher from './Weapon_Rainslasher.png'\r\nimport RoyalGreatsword from './Weapon_Royal_Greatsword.png'\r\nimport SerpentSpine from './Weapon_Serpent_Spine.png'\r\nimport TheBell from './Weapon_The_Bell.png'\r\nimport Whiteblind from './Weapon_Whiteblind.png'\r\nimport SacrificialGreatsword from './Weapon_Sacrificial_Greatsword.png'\r\nimport SnowTombedStarsilver from './snow_tombed_starsilver.png'\r\nimport SkywardPride from './Weapon_Skyward_Pride.png'\r\nimport WolfsGravestone from './Weapon_Wolf\\'s_Gravestone.png'\r\nimport TheUnforged from './Weapon_The_Unforged.png'\r\nconst claymore = {\r\n  WasterGreatsword,\r\n  OldMercsPal,\r\n  BloodtaintedGreatsword,\r\n  DebateClub,\r\n  FerrousShadow,\r\n  Quartz,\r\n  SkyriderGreatsword,\r\n  WhiteIronGreatsword,\r\n  BlackcliffSlasher,\r\n  FavoniusGreatsword,\r\n  LithicBlade,\r\n  PrototypeAminus,\r\n  Rainslasher,\r\n  RoyalGreatsword,\r\n  SerpentSpine,\r\n  TheBell,\r\n  Whiteblind,\r\n  SacrificialGreatsword,\r\n  SnowTombedStarsilver,\r\n  SkywardPride,\r\n  WolfsGravestone,\r\n  TheUnforged,\r\n}\r\nexport default claymore","export default __webpack_public_path__ + \"static/media/Weapon_Waster_Greatsword.a411f34b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Old_Merc's_Pal.67aa1930.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Bloodtainted_Greatsword.eb68a62c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Debate_Club.be908652.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ferrous_Shadow.ef586057.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Quartz.d41c58b9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Greatsword.46e935cb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Iron_Greatsword.eda6295d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Slasher.4693af54.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Greatsword.bfd288be.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Blade.ab4d4f4f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Aminus.d2bf526a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rainslasher.664c61ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Greatsword.fbc5184a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Serpent_Spine.bb2831b5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Bell.3670f330.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Whiteblind.9c37b7dd.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Greatsword.1b0f0225.png\";","export default __webpack_public_path__ + \"static/media/snow_tombed_starsilver.23f56359.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Pride.66a1b3f7.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wolf's_Gravestone.032b607c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Unforged.f7762a2f.png\";","import BeginnersProtector from './Weapon_Beginner\\'s_Protector.png'\r\nimport IronPoint from './Weapon_Iron_Point.png'\r\nimport BlackTassel from './Weapon_Black_Tassel.png'\r\nimport Halberd from './Weapon_Halberd.png'\r\nimport WhiteTassel from './Weapon_White_Tassel.png'\r\nimport BlackcliffPole from './Weapon_Blackcliff_Pole.png'\r\nimport CrescentPike from './Weapon_Crescent_Pike.png'\r\nimport Deathmatch from './Weapon_Deathmatch.png'\r\nimport DragonsBane from './Weapon_Dragon\\'s_Bane.png'\r\nimport LithicSpear from './Weapon_Lithic_Spear.png'\r\nimport PrototypeGrudge from './Weapon_Prototype_Grudge.png'\r\nimport FavoniusLance from './Weapon_Favonius_Lance.png'\r\nimport RoyalSpear from './Weapon_Royal_Spear.png'\r\nimport DragonspineSpear from './dragonspine_spear.png'\r\nimport VortexVanquisher from './Weapon_Vortex_Vanquisher.png'\r\nimport PrimordialJadeWingedSpear from './Weapon_Primordial_Jade_Winged-Spear.png'\r\nimport SkywardSpine from './Weapon_Skyward_Spine.png'\r\nconst polearms = {\r\n  BeginnersProtector,\r\n  IronPoint,\r\n  BlackTassel,\r\n  Halberd,\r\n  WhiteTassel,\r\n  BlackcliffPole,\r\n  CrescentPike,\r\n  Deathmatch,\r\n  DragonsBane,\r\n  LithicSpear,\r\n  PrototypeGrudge,\r\n  FavoniusLance,\r\n  RoyalSpear,\r\n  DragonspineSpear,\r\n  VortexVanquisher,\r\n  PrimordialJadeWingedSpear,\r\n  SkywardSpine,\r\n}\r\nexport default polearms","export default __webpack_public_path__ + \"static/media/Weapon_Beginner's_Protector.19165915.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Point.8263916c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Black_Tassel.c3103e46.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Halberd.0044e214.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Tassel.a3cc9099.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Pole.1e15a879.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Crescent_Pike.9e473ddb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Deathmatch.9b0e6d8e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dragon's_Bane.7437cf28.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Spear.cfb11b6c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Grudge.64b3a263.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Lance.693335d4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Spear.99058465.png\";","export default __webpack_public_path__ + \"static/media/dragonspine_spear.bb785669.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Vortex_Vanquisher.efad8956.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Primordial_Jade_Winged-Spear.ea10bc42.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Spine.e81931a5.png\";","import HuntersBow from './Weapon_Hunter\\'s_Bow.png'\r\nimport SeasonedHuntersBow from './Weapon_Seasoned_Hunter\\'s_Bow.png'\r\nimport EbonyBow from './Weapon_Ebony_Bow.png'\r\nimport Messenger from './Weapon_Messenger.png'\r\nimport RavenBow from './Weapon_Raven_Bow.png'\r\nimport RecurveBow from './Weapon_Recurve_Bow.png'\r\nimport SharpshootersOath from './Weapon_Sharpshooter\\'s_Oath.png'\r\nimport Slingshot from './Weapon_Slingshot.png'\r\nimport TheStringless from './Weapon_The_Stringless.png'\r\nimport AlleyHunter from './Weapon_Alley_Hunter.png'\r\nimport BlackcliffWarbow from './Weapon_Blackcliff_Warbow.png'\r\nimport CompoundBow from './Weapon_Compound_Bow.png'\r\nimport FavoniusWarbow from './Weapon_Favonius_Warbow.png'\r\nimport PrototypeCrescent from './Weapon_Prototype_Crescent.png'\r\nimport RoyalBow from './Weapon_Royal_Bow.png'\r\nimport Rust from './Weapon_Rust.png'\r\nimport SacrificialBow from './Weapon_Sacrificial_Bow.png'\r\nimport TheViridescentHunt from './Weapon_The_Viridescent_Hunt.png'\r\nimport SkywardHarp from './Weapon_Skyward_Harp.png'\r\nimport AmosBow from './Weapon_Amos\\'_Bow.png'\r\nimport DreamsOfDragonfell from './dreams_of_dragonfell.png'\r\nconst bows = {\r\n  HuntersBow,\r\n  SeasonedHuntersBow,\r\n  EbonyBow,\r\n  Messenger,\r\n  RavenBow,\r\n  RecurveBow,\r\n  SharpshootersOath,\r\n  Slingshot,\r\n  TheStringless,\r\n  AlleyHunter,\r\n  BlackcliffWarbow,\r\n  CompoundBow,\r\n  FavoniusWarbow,\r\n  PrototypeCrescent,\r\n  RoyalBow,\r\n  Rust,\r\n  SacrificialBow,\r\n  TheViridescentHunt,\r\n  SkywardHarp,\r\n  AmosBow,\r\n  DreamsOfDragonfell,\r\n}\r\nexport default bows","export default __webpack_public_path__ + \"static/media/Weapon_Hunter's_Bow.2e941c96.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Seasoned_Hunter's_Bow.bc6a42aa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ebony_Bow.f89cc3cc.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Messenger.939170eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Raven_Bow.b88fe5c0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Recurve_Bow.bafcde86.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sharpshooter's_Oath.1d149cf5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Slingshot.d2eeb3eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Stringless.b718aa93.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Alley_Hunter.8cc323c2.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Warbow.098f24da.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Compound_Bow.a8457f4e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Warbow.19e98358.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Crescent.50a174b0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Bow.06fbac8b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rust.65b7af56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Bow.804b7a38.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Viridescent_Hunt.904062bf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Harp.6961093e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amos'_Bow.e97cd305.png\";","export default __webpack_public_path__ + \"static/media/dreams_of_dragonfell.8aaebb39.png\";","import ApprenticesNotes from './Weapon_Apprentice\\'s_Notes.png'\r\nimport PocketGrimoire from './Weapon_Pocket_Grimoire.png'\r\nimport AmberCatalyst from './Weapon_Amber_Catalyst.png'\r\nimport EmeraldOrb from './Weapon_Emerald_Orb.png'\r\nimport MagicGuide from './Weapon_Magic_Guide.png'\r\nimport OtherworldlyStory from './Weapon_Otherworldly_Story.png'\r\nimport ThrillingTalesOfDragonSlayers from './Weapon_Thrilling_Tales_of_Dragon_Slayers.png'\r\nimport TwinNephrite from './Weapon_Twin_Nephrite.png'\r\nimport BlackcliffAgate from './Weapon_Blackcliff_Amulet.png'\r\nimport FavoniusCodex from './Weapon_Favonius_Codex.png'\r\nimport MappaMare from './Weapon_Mappa_Mare.png'\r\nimport PrototypeMalice from './Weapon_Prototype_Malice.png'\r\nimport RoyalGrimoire from './Weapon_Royal_Grimoire.png'\r\nimport SacrificialFragments from './Weapon_Sacrificial_Fragments.png'\r\nimport SolarPearl from './Weapon_Solar_Pearl.png'\r\nimport TheWidsith from './Weapon_The_Widsith.png'\r\nimport WineAndSong from './Weapon_Wine_and_Song.png'\r\nimport EyeOfPerception from './Weapon_Eye_of_Perception.png'\r\nimport Frostbearer from './Weapon_Frostbearer.png'\r\nimport LostPrayerToTheSacredWinds from './Weapon_Lost_Prayer_to_the_Sacred_Winds.png'\r\nimport SkywardAtlas from './Weapon_Skyward_Atlas.png'\r\nimport MemoryOfDust from './Weapon_Memory_of_Dust.png'\r\nconst catalysts = {\r\n  ApprenticesNotes,\r\n  PocketGrimoire,\r\n  AmberCatalyst,\r\n  EmeraldOrb,\r\n  MagicGuide,\r\n  OtherworldlyStory,\r\n  ThrillingTalesOfDragonSlayers,\r\n  TwinNephrite,\r\n  BlackcliffAgate,\r\n  FavoniusCodex,\r\n  MappaMare,\r\n  PrototypeMalice,\r\n  RoyalGrimoire,\r\n  SacrificialFragments,\r\n  SolarPearl,\r\n  TheWidsith,\r\n  WineAndSong,\r\n  EyeOfPerception,\r\n  Frostbearer,\r\n  LostPrayerToTheSacredWinds,\r\n  SkywardAtlas,\r\n  MemoryOfDust\r\n}\r\nexport default catalysts","export default __webpack_public_path__ + \"static/media/Weapon_Apprentice's_Notes.0b7fb81e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Pocket_Grimoire.536179c5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amber_Catalyst.01ede681.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Emerald_Orb.4008f986.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Magic_Guide.64c777ec.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Otherworldly_Story.48b54293.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Thrilling_Tales_of_Dragon_Slayers.692d45b8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Twin_Nephrite.b0c2488b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Amulet.b97d01eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Codex.6e201cfa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Mappa_Mare.bc35dc35.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Malice.4ab08cb6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Grimoire.2f67eac4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Fragments.4dd54e2d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Solar_Pearl.d629ae58.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Widsith.a6fe1227.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wine_and_Song.0aa416e6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Eye_of_Perception.907a0288.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Frostbearer.bde00061.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lost_Prayer_to_the_Sacred_Winds.45f8ca2a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Atlas.8b4f86fa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Memory_of_Dust.4e45ccbb.png\";","import weapons from './Weapons/Weapons'\r\n\r\nimport anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  weapons,\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","import swords from './Swords/Swords'\r\nimport claymores from './Claymores/Claymores'\r\nimport polearms from './Polearms//Polearms'\r\nimport bows from './Bows/Bows'\r\nimport catalysts from './Catalysts/Catalysts'\r\nconst weapons = {\r\n  ...swords,\r\n  ...claymores,\r\n  ...polearms,\r\n  ...bows,\r\n  ...catalysts,\r\n}\r\nexport default weapons","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //remove the old error/prone id lists, if it still exists\r\n  localStorage.removeItem(\"artifact_id_list\")\r\n  localStorage.removeItem(\"character_id_list\")\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  if (CharacterDatabase.populateDatebaseFromLocalStorage() |\r\n    ArtifactDatabase.populateDatebaseFromLocalStorage()) {\r\n    //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n    let arts = ArtifactDatabase.getArtifactDatabase();\r\n    Object.values(arts).forEach(art => {\r\n      let valid = true\r\n      if (art.location && !CharacterDatabase.getCharacter(art.location)) {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n      if (!valid)\r\n        ArtifactDatabase.updateArtifact(art)\r\n    })\r\n\r\n    let chars = CharacterDatabase.getCharacterDatabase();\r\n    Object.values(chars).forEach(character => {\r\n      let valid = true;\r\n      //verify character database equipment validity\r\n      let equippedArtifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([slotKey, artid]) => {\r\n        if (!ArtifactDatabase.getArtifact(artid)) {\r\n          valid = false\r\n          return [slotKey, undefined]\r\n        }\r\n        return [slotKey, artid]\r\n      }))\r\n      if (!valid)\r\n        character.equippedArtifacts = equippedArtifacts\r\n\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      if (character.artifactConditionals) character.artifactConditionals = character.artifactConditionals.filter(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n      if (!valid) {\r\n        CharacterDatabase.updateCharacter(character)\r\n      }\r\n    })\r\n  }\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import { AttachLazyFormulas, Formulas, OverrideFormulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nconst formulaKeyDependency = {}\r\nconst getDependency = (key) => {\r\n  let testObj = {}\r\n  let dependency = []\r\n  Object.keys(StatData).filter(k => k !== key).forEach(k => {\r\n    Object.defineProperty(testObj, k, {\r\n      get: () => {\r\n        dependency.push(k)\r\n        Object.defineProperty(testObj, k, { get: () => 0 })\r\n        return 0\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  AttachLazyFormulas(testObj)\r\n  //use the getter to generate the dependency\r\n  if (typeof testObj[key] === \"number\")\r\n    formulaKeyDependency[key] = dependency\r\n}\r\nObject.keys(Formulas).forEach(key => getDependency(key))\r\n\r\nfunction DependencyStatKeys(key, formulaOverrides = []) {\r\n  let dependencies = GetDependencyStats(key, formulaOverrides) || []\r\n  //add any formula override dependencies\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key, dependency = [] } = OverrideFormulas[formulaOverride.key] || {}\r\n    if (!dependencies.includes(key)) return\r\n    dependencies.push(...dependency)\r\n  })\r\n  dependencies = [...new Set(dependencies)]\r\n  let formulaKeys = Object.keys(Formulas).filter(k => k === key || dependencies.includes(k))\r\n  let statkeys = Object.keys(StatData).filter(k => k === key || dependencies.includes(k))\r\n  return { formulaKeys, statkeys }\r\n}\r\nfunction GetDependencyStats(key, formulaOverrides = []) {\r\n  let dependencies = [key]\r\n  let keyDependencies = null\r\n  for (const formulaOverride of formulaOverrides)\r\n    if (OverrideFormulas[formulaOverride?.key]?.key === key)\r\n      keyDependencies = OverrideFormulas[formulaOverride?.key]?.dependency\r\n  keyDependencies = keyDependencies || formulaKeyDependency[key]\r\n  keyDependencies?.forEach(k => {\r\n    let subdependencies = GetDependencyStats(k, formulaOverrides)\r\n    dependencies.push(...subdependencies)\r\n  })\r\n  return dependencies\r\n}\r\nexport {\r\n  DependencyStatKeys,\r\n  GetDependencyStats,\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, Image, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId) return null;\r\n  const equipOnChar = (charId) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charId)\r\n    forceUpdate?.()\r\n  }\r\n\r\n  let art = ArtifactDatabase.getArtifact(artifactId);\r\n  let artifactValidation = Artifact.artifactValidation(art)\r\n  let locationChar = CharacterDatabase.getCharacter(art.location)\r\n  let location = locationChar ? locationChar.name : \"Inventory\"\r\n  let mainStatLevel = assumeFull ? art.numStars * 4 : art.level\r\n  let assFullColor = assumeFull && art.level !== art.numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(art.mainStatKey, art.numStars, mainStatLevel, \"\")}{Stat.getStatUnit(art.mainStatKey)}</span>\r\n  return (<Card className=\"h-100\" border={`${art.numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getArtifactPieceIcon(art.setKey, art.slotKey)} className={`w-100 h-auto grad-${art.numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{`${Artifact.getArtifactPieceName(art.setKey, art.slotKey, \"Unknown Piece Name\")}`}</b></h6>\r\n          <div>{Artifact.getArtifactSlotNameWithIcon(art.slotKey)}{` +${art.level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getArtifactSetName(art.setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={art.numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(art.mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {art.substats ? art.substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let subStatValidation = artifactValidation.subStatValidations[i]\r\n          let numRolls = subStatValidation?.rolls?.length || 0\r\n          let efficiency = subStatValidation?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={artifactValidation.valid ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{artifactValidation.valid ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        }\r\n        ) : null}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.currentEfficiency}>\r\n          {(artifactValidation.currentEfficiency ? artifactValidation.currentEfficiency : 0).toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.maximumEfficiency}>\r\n          {(artifactValidation.maximumEfficiency ? artifactValidation.maximumEfficiency : 0).toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\">{location}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar()}>Inventory</Dropdown.Item>\r\n              {Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n                <Dropdown.Item key={id} onClick={() => equipOnChar(id)}>\r\n                  {char.name}\r\n                </Dropdown.Item>)}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><span>Location: {location}</span></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={art.location}\r\n                  style={art.location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    art.lock = !art.lock\r\n                    ArtifactDatabase.updateArtifact(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(art.lock || art.location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Col } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\nfunction DisplayStats({ statKey, character, build, editable, ...otherProps }) {\r\n  let buildVal = build?.finalStats?.[statKey] || 0\r\n  let statVal, buildDiff = null\r\n  if (typeof buildVal === \"string\") {\r\n    statVal = <span>{buildVal}</span>\r\n  } else {\r\n    let originalVal = Character.getStatValueWithOverride(character, statKey)\r\n    if (statKey === \"hp_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"hp_base\")\r\n    else if (statKey === \"def_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"def_base\")\r\n    else if (statKey === \"atk_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"atk_base\") + Character.getStatValueWithOverride(character, \"atk_weapon\")\r\n\r\n    let diff = buildVal - originalVal\r\n    let diffText = (diff?.toFixed?.(Stat.fixedUnit(statKey)) || diff) + Stat.getStatUnit(statKey)\r\n    if (diff < 0) buildDiff = <span className=\"text-success\">{diffText}</span>\r\n    else if (diff > 0) buildDiff = <span className=\"text-success\"> +{diffText}</span>\r\n\r\n    if (originalVal || !diff) statVal = <span className={editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}>{(originalVal?.toFixed?.(Stat.fixedUnit(statKey)) || originalVal) + Stat.getStatUnit(statKey)}</span>\r\n  }\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className=\"float-right text-right\">{statVal}{buildDiff}</span>\r\n  </Col>\r\n}\r\nconst DisplayNewBuildDiff = ({ statKey, character, equippedBuild, newBuild, editable, ...otherProps }) => {\r\n  let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right ${editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed?.(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed?.(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nexport {\r\n  DisplayStats,\r\n  DisplayNewBuildDiff,\r\n}","import React, { useState } from 'react';\r\nimport { Accordion, Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { DisplayNewBuildDiff, DisplayStats } from '../../Components/StatDisplay';\r\nimport Stat, { FormulaText } from \"../../Stat\";\r\nimport { GetDependencyStats } from '../../StatDependency';\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState }) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(characterKey)\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  const formulaDependencyKeys = [...new Set(statKeys.map(key => GetDependencyStats(key, build.finalStats?.formulaOverrides)).flat())]\r\n  const formulaKeys = Object.keys(FormulaText).filter(key => formulaDependencyKeys.includes(key))\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Calculations`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ?\r\n                  statKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                  statKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {formulaKeys.map(key => <Col key={key} xs={12} className=\"mt-2\">\r\n                    <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                      <Card.Header className=\"p-2\">\r\n                        {Stat.printStat(key, build.finalStats)}\r\n                      </Card.Header>\r\n                      <Card.Body className=\"p-2\">\r\n                        <small>{Stat.printFormula(key, build.finalStats, build.finalStats.formulaOverrides, false)}</small>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  )}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n              {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getArtifactSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getArtifactSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getArtifactSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            let conditionalStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n                            if (conditionalStats) {\r\n                              if (!setStats) setStats = {}\r\n                              Object.entries(conditionalStats).forEach(([statKey, val]) =>\r\n                                setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                            }\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getArtifactSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Object.values(build.artifactIds).map(artid =>\r\n            artid ? <Col sm={6} lg={4} key={artid} className=\"mb-2\">\r\n              <ArtifactCard artifactId={artid} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport { DisplayNewBuildDiff, DisplayStats } from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"char_level\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={(val) => setOverride(\"char_level\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"char_level\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Assets.weapons[weapon.key]} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats, character)}</p>\r\n            <Row>\r\n              <Col xs={12} md={6}>\r\n                <h5>ATK: {weaponDisplayMainVal}</h5>\r\n              </Col>\r\n              {subStatKey && <Col xs={12} md={6}>\r\n                <h5>{Stat.getStatName(subStatKey)}: {weaponDisplaySubVal}{Stat.getStatUnit(subStatKey)}</h5>\r\n              </Col>}\r\n            </Row>\r\n            {<Row>\r\n              {(conditionalStats || weaponBonusStats) && <Col xs={12}><h6 className=\"mb-0\">Bonus Stats:</h6></Col>}\r\n              {weaponBonusStats && Object.entries(weaponBonusStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"bonu\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n              {conditionalStats && Object.entries(conditionalStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"cond\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n            </Row>}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  let { editable, character, character: { compareAgainstEquipped }, setOverride, equippedBuild, newBuild } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  let additionalKeys = [\"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const displayStatKeys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp_base\", \"hp\", \"hp_\", \"atk_base\", \"atk\", \"atk_\", \"def_base\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\", \"skill_crit_rate\", \"burst_crit_rate\", \"all_dmg_bonus\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              displayStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              displayStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              otherStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ?\r\n            miscStatkeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n            miscStatkeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n","import { faCheckSquare, faQuestionCircle, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, ToggleButton, ToggleButtonGroup, Tooltip } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat, { FormulaText } from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { GetDependencyStats } from \"../../StatDependency\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation, dmgMode }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  //choose which one to display stats for\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button\r\n        // style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"norm_atk\", \"char_atk\", \"plunge\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(Character.getTalentStatKey(\"char_atk\", character, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    //search for dependency, and flatten, isolate unique keys\r\n    keys = [...new Set(keys.map(key => GetDependencyStats(key, build.finalStats?.formulaOverrides)).flat())]\r\n    //return keys that are part of the formula text, in the order in which they appear.\r\n    return Object.keys(FormulaText).filter(key => keys.includes(key))\r\n  }\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <Accordion>\r\n        <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Options</span>\r\n                <small>Expand below to edit enemy details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ToggleButtonGroup type=\"radio\" value={dmgMode} name=\"dmgOptions\" onChange={(dmgMode) => setState({ dmgMode })}>\r\n                  <ToggleButton value=\"avg_dmg\">Avg. DMG</ToggleButton>\r\n                  <ToggleButton value=\"dmg\">Normal Hit, No Crit</ToggleButton>\r\n                  <ToggleButton value=\"crit_dmg\">Crit Hit DMG</ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Row className=\"mb-2\"><Col>\r\n                <Button variant=\"warning\" >\r\n                  <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                    To get the specific resistance values of enemies, please visit the wiki.\r\n                  </a>\r\n                </Button >\r\n              </Col></Row>\r\n              <Row>\r\n                <Col xs={12} xl={6} className=\"mb-2\">\r\n                  <StatInput\r\n                    name={<b>Enemy Level</b>}\r\n                    value={Character.getStatValueWithOverride(character, \"enemy_level\")}\r\n                    placeholder={Stat.getStatNameRaw(\"enemy_level\")}\r\n                    defaultValue={Character.getBaseStatValue(character, \"enemy_level\")}\r\n                    onValueChange={(val) => setOverride(\"enemy_level\", val)}\r\n                  />\r\n                </Col>\r\n                {[\"physical\", ...Character.getElementalKeys()].map(eleKey => {\r\n                  let statKey = eleKey === \"physical\" ? \"enemy_phy_res\" : `${eleKey}_enemy_ele_res`\r\n                  let immunityStatKey = eleKey === \"physical\" ? \"enemy_phy_immunity\" : `${eleKey}_enemy_ele_immunity`\r\n                  let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                  return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                        <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                      name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                      value={Character.getStatValueWithOverride(character, statKey)}\r\n                      placeholder={Stat.getStatNameRaw(statKey)}\r\n                      defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                      onValueChange={(val) => setOverride(statKey, val)}\r\n                      disabled={elementImmunity}\r\n                    />\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Formulas</span>\r\n                <small>Expand below to see calculation details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n              <Row>\r\n                {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\r\n                  <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                    <Card.Header className=\"p-2\">\r\n                      {Stat.printStat(key, build.finalStats)}\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-2\">\r\n                      <small>{Stat.printFormula(key, build.finalStats, build.finalStats.formulaOverrides, false)}</small>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                )}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_dmg: SuperConductCard,\r\n  electrocharged_dmg: ElectroChargedCard,\r\n  overloaded_dmg: OverloadedCard,\r\n  swirl_dmg: SwirlCard,\r\n  shatter_dmg: ShatteredCard,\r\n  crystalize_dmg: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey, reactionMode = \"none\" }, newBuild, equippedBuild, setState }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let charEleKey = Character.getElementalKey(characterKey)\r\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shatter_dmg\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shatter_dmg\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body>\r\n      <Row>\r\n        <Col ><Row className=\"mb-n2\">\r\n          {eleInterArr.map(key => {\r\n            let Ele = ReactionComponents[key]\r\n            if (!Ele) return null\r\n            let val = build?.finalStats?.[key]\r\n            val = val?.toFixed?.(Stat.fixedUnit(key)) || val\r\n            return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele value={val} /></Col>\r\n          })}\r\n        </Row></Col>\r\n        <Col xs=\"auto\">\r\n          {[\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup\r\n            type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setState({ reactionMode: val === \"none\" ? null : val })}>\r\n            <ToggleButton className=\"p-3\" value={\"none\"}> <h6>No Elemental</h6> <h6>Interactions</h6></ToggleButton >\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-3\" value={\"pyro_vaporize\"}>\r\n              <h6 className=\"text-vaporize\">Vaporize(Pyro)</h6>\r\n              <h2 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h2>\r\n            </ToggleButton >}\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-3\" value={\"pyro_melt\"}>\r\n              <h6 className=\"text-melt\">Melt(Pyro)</h6>\r\n              <h2 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h2>\r\n            </ToggleButton >}\r\n            {charEleKey === \"hydro\" && <ToggleButton className=\"p-3\" value={\"hydro_vaporize\"}>\r\n              <h6 className=\"text-vaporize\">Melt(Pyro)</h6>\r\n              <h2 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" />\r\n              </h2>\r\n            </ToggleButton >}\r\n            {charEleKey === \"cryo\" && <ToggleButton className=\"p-3\" value={\"cryo_melt\"}>\r\n              <h6 className=\"text-melt\">Melt(Pyro)</h6>\r\n              <h2 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />\r\n              </h2>\r\n            </ToggleButton >}\r\n          </ToggleButtonGroup>}\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"superconduct_dmg\")}</h6>\r\n    <h2 className=\"text-superconduct mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"electrocharged_dmg\")}</h6>\r\n    <h2 className=\"text-electrocharged mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"overloaded_dmg\")}</h6>\r\n    <h2 className=\"text-overloaded mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\nfunction SwirlCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"swirl_dmg\")}</h6>\r\n    <h2 className=\"text-swirl mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ value }) {\r\n  let information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"shatter_dmg\")}</h6>\r\n    <h2 className=\"text-shatter mb-0\">\r\n      <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"crystalize_dmg\")}</h6>\r\n    <h2 className=\"text-crystalize mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let { talentLvlKey = undefined, levelBoost = 0 } = Character.getTalentLevelKey(character, talentKey, constellation, true)\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n  if (typeof talentLvlKey === \"number\") {\r\n    if (editable) {\r\n      let setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        let talentLevelKeys = state.talentLevelKeys || {}\r\n        talentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let statsEle = null\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  if (talentStats) {\r\n    statsEle = <Row><Col>\r\n      <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n        <ListGroup className=\"text-white\" variant=\"flush\">\r\n          {Object.entries(talentStats).map(([statKey, statVal], index) =>\r\n            <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n              <div>\r\n                <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n              </div>\r\n            </ListGroup.Item>\r\n          )}\r\n        </ListGroup>\r\n      </Card>\r\n    </Col></Row>\r\n  }\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalStats = {}\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            //filter out formulaOverrides from rendering\r\n            conditionalStats = Object.fromEntries(Object.entries(conditionalStats).filter(([key, _]) => key !== \"formulaOverrides\"))\r\n            conditionalFields = Character.getTalentConditionalFields(conditional, conditionalNum, [])\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Row><Col>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {Object.entries(conditionalStats).map(([statKey, statVal], index) =>\r\n                  <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n                    <div>\r\n                      <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                      <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n                    </div>\r\n                  </ListGroup.Item>\r\n                )}\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i + (conditionalStats?.length || 0)} index={i + (conditionalStats?.length || 0)} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col></Row>\r\n        }\r\n        return <Row className=\"mt-2\" key={\"section\" + i}><Col xs={12}>\r\n          <span>{talentText}</span>\r\n          {fields.length > 0 && <ListGroup className=\"text-white ml-n2 mr-n2\">\r\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n          {conditionalEle}\r\n        </Col></Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay(props) {\r\n  let { character, character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldVariant = field.variant || \"\"\r\n  if (typeof fieldVariant === \"function\")\r\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldBasic = field.basicVal\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats, character)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = field.value ? field.value : field.finalVal\r\n  if (typeof fieldVal === \"function\") {\r\n    fieldVal = fieldVal?.(talentLvlKey, build.finalStats, character)\r\n  }\r\n  if (typeof fieldVal === \"number\")\r\n    fieldVal = Math.round(fieldVal)\r\n\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.finalVal\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats, character)?.toFixed?.(0))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterId)\r\n      this.state = CharacterDatabase.getCharacter(props.characterId)\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    dmgMode: \"dmg\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey), reactionMode: null, autoInfused: false })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getArtifactDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.characterId && this.state.id !== this.props.characterId)\r\n      this.setState(CharacterDatabase.getCharacter(this.props.characterId))\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"char_level\")}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && (Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\"}>Talents {(Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\" && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} setState={this.setSetState} setOverride={this.setOverride} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import { Container } from \"react-bootstrap\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport '../StatDependency'\r\nexport default function TestDisplay(props) {\r\n  DatabaseInitAndVerify()\r\n  return <Container>\r\n    <CharacterDisplayCard editable characterId={\"character_2\"} />\r\n  </Container>\r\n}\r\n","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { AttachLazyFormulas, ElementToReactionKeys } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getCDataObj(charKey)?.talent?.[talentKey]?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getCDataObj(charKey)?.talent?.[talentKey]?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getCDataObj(charKey)?.talent?.[talentKey]?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"formulaOverrides\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_base\") || false\r\n    return character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getArtifactSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals, initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals && artifactConditionals.forEach(conditional => {\r\n      let { srcKey: setKey, srcKey2: setNumKey } = conditional\r\n      let condStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditional.conditionalNum)\r\n      if (condStats) Object.entries(condStats).forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n    AttachLazyFormulas(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"formulaOverrides\") {\r\n        initialStats.formulaOverrides = [...(initialStats.formulaOverrides || []), ...val]\r\n        return\r\n      }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, OverrideFormulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static printFormula = (statKey, stats, formulaOverrides = [], expand = true) => {\r\n    for (const formulaOverride of formulaOverrides)\r\n      if (OverrideFormulas[formulaOverride?.key]?.key === statKey)\r\n        return Stat.printOverrideFormula(stats, formulaOverride.key, formulaOverride.options, false)\r\n    return FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n      (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n  }\r\n\r\n  static printOverrideFormula = (stats, overrideKey, options, expand = true) =>\r\n    OverrideFormulasText?.[overrideKey] && typeof OverrideFormulasText?.[overrideKey].formulaText === \"function\" &&\r\n    (<span>{OverrideFormulasText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  trans_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(0, \"ele_mas\")} * exp^(-0.000505 * {f(0, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulasText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.value}%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft\r\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getArtifactDataImport = () => ArtifactDataImport\r\n  static getArtifactSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getArtifactSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData).filter(([key, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getArtifactPieceName = (setKey, slotKey, defVal = \"\") => ArtifactData?.[setKey]?.pieces?.[slotKey] || defVal;\r\n  static getArtifactPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n  static getArtifactSetEffectsObj = (setKey, defVal = null) => ArtifactData?.[setKey]?.sets || defVal\r\n  //SLOT\r\n  static getArtifactSlotKeys = () => Object.keys(ArtifactSlotsData)\r\n  static getArtifactSlotName = (slotKey, defVal = \"\") =>\r\n    ArtifactSlotsData[slotKey] ? ArtifactSlotsData[slotKey].name : defVal\r\n  static getArtifactSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n\r\n  static getArtifactSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getArtifactSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getArtifactSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n\r\n  //STARS\r\n  static getRarityArr = (setKey) => ArtifactData[setKey] ? ArtifactData[setKey].rarity : []\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => ArtifactMainSlotKeys\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = ArtifactMainStatsData[numStars]?.[key]?.[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData)\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getRolls(value, rollData, float = false) {\r\n    let roll = null;\r\n    let maxNumRoll = Math.round(value / rollData[0])\r\n    if (!maxNumRoll) return null;\r\n    let rollOption = (val, arr) => {\r\n      if (roll) return;\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (float) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val)) {\r\n            roll = arr;\r\n            return;\r\n          }\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val)) {\r\n            roll = arr;\r\n            return\r\n          }\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        rollOption(value, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(value, [])\r\n    return roll;\r\n  }\r\n  static validateSubStat(state, substat) {\r\n    if (!substat || !substat.value) return { valid: true }\r\n    let value = parseFloat(substat.value);\r\n    if (isNaN(value)) return { valid: false, msg: `Invalid Input` }\r\n    let numStars = state.numStars\r\n    if (!numStars) return { valid: false, msg: `Artifact Stars not set.` }\r\n    let isFloat = Stat.getStatUnit(substat.key) === \"%\"\r\n    let rollData = this.getSubstatRollData(substat.key, numStars);\r\n    let rolls = this.getRolls(value, rollData, isFloat)\r\n\r\n    if (!rolls || rolls.length === 0) return { valid: false, msg: `Substat cannot be rolled 0 times.` };\r\n    let totalAllowableRolls = ArtifactStarsData[numStars]?.numUpgradesOrUnlocks - (4 - ArtifactStarsData[numStars]?.subBaseHigh) + 1;//+1 for its base roll\r\n    if (rolls.length > totalAllowableRolls) return { valid: false, msg: `Substat cannot be rolled more than ${totalAllowableRolls} times.` };\r\n\r\n    let min = rollData[0] * rolls.length;\r\n    let max = rollData[rollData.length - 1] * rolls.length;\r\n    return { valid: true, efficiency: clampPercent(((value - min) / (max - min)) * 100), msg: `This substat was rolled ${rolls.length} time(s). Values: [${rolls.join(\", \")}]`, rolls }\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static artifactValidation(state) {\r\n    let currentEfficiency = 0, maximumEfficiency = 0;\r\n    let subStatValidations = state.substats.map(substat => Artifact.validateSubStat(state, substat));\r\n    for (const substat of subStatValidations)\r\n      if (!substat.valid)\r\n        return { subStatValidations, valid: false, msg: \"One of the substat is invalid.\", currentEfficiency, maximumEfficiency }\r\n\r\n    //if a substat has >=2 rolls, when not all of them have been unlocked//if a substat has >=2 rolls, when not all of them have been unlocked\r\n    if (subStatValidations.some(substat => substat?.rolls?.length > 1) && subStatValidations.some((substat) => !substat.rolls))\r\n      return { subStatValidations, valid: false, msg: \"One of the substat have >1 rolls, but not all substats are unlocked.\", currentEfficiency, maximumEfficiency }\r\n    let currentNumOfRolls = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls ? cur.rolls.length : 0), 0);\r\n    let rollsRemaining = Artifact.rollsRemaining(state.level, state.numStars);\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(state.numStars);\r\n\r\n    if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n      return { subStatValidations, valid: false, msg: `Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `, currentEfficiency, maximumEfficiency }\r\n\r\n    let totalCurrentEfficiency = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls && cur.efficiency ? (cur.efficiency * cur.rolls.length) : 0), 0);\r\n    currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { valid: true, subStatValidations, currentNumOfRolls, rollsRemaining, totalPossbleUpgrade: totalPossbleRolls, currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getArtifactSets = (setKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = null) =>\r\n    deepClone(this.getArtifactSets(setKey)?.[setNumKey]?.stats || defVal)\r\n\r\n  static getArtifactConditionalStats = (setKey, setNumKey, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getArtifactSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      ArtifactData?.[setKey]?.sets && Object.entries(ArtifactData[setKey].sets).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getArtifactSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      if (ArtifactData?.[setKey]?.sets) {\r\n        let setNumKeys = Object.keys(ArtifactData[setKey].sets).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n        if (setNumKeys.length)\r\n          artifactSetEffect[setKey] = setNumKeys\r\n      }\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getArtifactSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = ArtifactData?.[setKey]?.sets?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getArtifactSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets?.[setNumKey]?.conditional || defVal\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      let hasSetEffect = false\r\n      if (setObj.sets)\r\n        Object.entries(setObj.sets).forEach(([setNumKey, setEffectObj]) => {\r\n          if (setEffectObj.stats && Object.keys(setEffectObj.stats).length > 0) {\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n            hasSetEffect = true\r\n          }\r\n          if (setEffectObj.conditional) {\r\n            let conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n            if (conditionalNum) {\r\n              let condStats = this.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n              if (condStats) {\r\n                setEffect[setNumKey] = deepClone(condStats)\r\n                hasSetEffect = true\r\n              }\r\n            }\r\n          }\r\n        })\r\n      if (hasSetEffect)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => id ? artifactDatabase[id] : null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null) \r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  all_dmg_bonus: { name: \"All DMG Bonus\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elementry Mastry Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elementry Mastry Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elementry Mastry Multiplier Z\", unit: \"multi\" },\r\n  trans_reaction_base_multi: { name: \"Transformation Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_final: (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.phy_dmg,\r\n  plunge_crit_dmg: (s) => s.phy_crit_dmg,\r\n  plunge_avg_dmg: (s) => s.phy_avg_dmg,\r\n  plunge_bonus_multi: (s) => s.phy_bonus_multi,\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * s.ele_mas_multi_x * 1.5 * s.trans_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * s.ele_mas_multi_x * 2 * s.trans_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * s.ele_mas_multi_x * 2 * s.trans_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * s.ele_mas_multi_x * 1.5 * s.trans_reaction_base_multi,\r\n  trans_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s[`${ele}_ele_dmg`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_ele_crit_dmg`],\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_ele_avg_dmg`],\r\n  plunge_bonus_multi: (s, ele) => s[`${ele}_ele_bonus_multi`],\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.all_dmg_bonus) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulas = {\r\n  noelle_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk + s.def_final * (options.value / 100),\r\n    dependency: [\"atk_base\", \"atk_weapon\", \"atk_\", \"atk\", \"def_final\", \"def_base\", \"def_\", \"def\"],\r\n  }\r\n}\r\n\r\n//the keyfilters are used by build generator to reduce the amount of calculations required\r\nfunction AttachLazyFormulas(obj, options = {}) {\r\n  let { formulaKeys = Object.keys(Formulas), statKeys = Object.keys(StatData) } = options;\r\n  let { formulaOverrides = [] } = obj;\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key: overrideFormulaKey, options } = formulaOverride\r\n    let { key, formula } = OverrideFormulas[overrideFormulaKey] || {}\r\n    if (!formulaKeys.includes(key)) return\r\n    formula = formula(options)\r\n    Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => formula(obj) : function () {\r\n        let val = formula(obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n\r\n  formulaKeys.forEach(key => {\r\n    !obj.hasOwnProperty(key) && Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => Formulas[key](obj) : function () {\r\n        let val = Formulas[key](obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  //assign zeros or default values to the other stats that are not part of the calculations\r\n  statKeys.forEach(key => !obj.hasOwnProperty(key) && (obj[key] = StatData[key].default || 0))\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  OverrideFormulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  AttachLazyFormulas,\r\n}","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = (props) => <span className={props.colored ? \"text-5star\" : \"\"}>\r\n  {props.stars ? [...Array(props.stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n"],"sourceRoot":""}