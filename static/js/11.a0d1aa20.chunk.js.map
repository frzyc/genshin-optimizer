{"version":3,"sources":["../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","Components/CustomFormControl.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","Components/ConditionalSelector.js","StatDependency.js","Artifact/PercentBadge.js","Artifact/ArtifactCard.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/StatDisplay.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js"],"names":["useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","FloatFormControl","placeholder","onValueChange","disabled","useState","focus","setFocus","type","className","toString","onChange","e","target","parseFloat","onFocus","onBlur","IntFormControl","parseInt","resolveContainerRef","ref","_ref","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","ConditionalSelector","props","conditional","conditionalNum","setConditional","defEle","Array","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","map","condial","i","Fragment","keys","v","stack","tempcount","icon","faCheckSquare","faSquare","formulaKeyDependency","DependencyStatKeys","key","formulaOverrides","dependencies","GetDependencyStats","forEach","formulaOverride","OverrideFormulas","dependency","includes","push","Set","formulaKeys","Object","Formulas","filter","k","statkeys","StatData","keyDependencies","subdependencies","testObj","defineProperty","get","configurable","AttachLazyFormulas","getDependency","PercentBadge","percent","valid","children","badgeColor","isNaN","Math","floor","ArtifactCard","artifactId","forceUpdate","onEdit","onDelete","assumeFull","equipOnChar","charId","Artifact","equipArtifactOnChar","art","ArtifactDatabase","getArtifact","artifactValidation","locationChar","CharacterDatabase","getCharacter","location","name","mainStatLevel","numStars","level","assFullColor","mainStatVal","getMainStatValue","mainStatKey","Stat","getStatUnit","border","bg","Header","xs","md","src","getArtifactPieceIcon","setKey","slotKey","thumbnail","getArtifactPieceName","getArtifactSlotNameWithIcon","Body","Title","getArtifactSetName","stars","getStatName","substats","stat","subStatValidation","subStatValidations","numRolls","rolls","length","efficiency","effOpacity","statName","toFixed","style","opacity","tooltip","msg","currentEfficiency","maximumEfficiency","Footer","entries","getCharacterDatabase","id","char","placement","overlay","pointerEvents","lock","updateArtifact","faLock","faLockOpen","Boolean","faEdit","faTrashAlt","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","React","createElement","TabContext","Provider","SelectableContext","TabContent","forwardRef","bsPrefix","_ref$as","as","Component","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","_extends","classNames","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","in","displayName","Tab","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","Error","Container","Content","Pane","createContext","useAccordionToggle","contextEventKey","AccordionContext","AccordionToggle","accordionOnClick","AccordionCollapse","Collapse","Children","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","_objectWithoutProperties","source","excluded","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","DisplayStats","statKey","character","build","editable","otherProps","statVal","Character","getStatValueWithOverride","unit","buildDiff","finalStats","Col","StatIconEle","hasOverride","fixedUnit","DisplayNewBuildDiff","equippedBuild","newBuild","CharacterArtifactPane","characterKey","compareAgainstEquipped","artifactConditionals","setState","showOther","setShowOther","artifactsAssumeFull","statKeys","getDisplayStatKeys","displayStatProps","displayNewBuildProps","formulaDependencyKeys","flat","FormulaText","Row","Card","Button","xl","printStat","printFormula","equipArtifacts","artifactIds","Alert","sm","lg","getArtifactSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getArtifactSetEffectConditional","ConditionalsUtil","getConditionalNum","srcKey","srcKey2","conditionalStats","getArtifactConditionalStats","val","conditionalElement","cnum","state","setStateArtifactConditional","Badge","getArtifactSetEffectText","values","artid","StatInput","prependEle","defaultValue","restProps","InputGroup","Prepend","Text","Append","undefined","OverlayTrigger","Tooltip","faUndo","CharacterOverviewPane","constellation","setOverride","setConstellation","editLevel","setEditLevel","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","getName","Image","Assets","elements","weaponTypes","getStar","colored","clamp","getLevel","levelKey","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","refineIndex","getWeaponConditionalStat","getWeaponConditional","conditionalEle","faQuoteLeft","weapons","getWeaponRarity","DropdownButton","title","getWeaponName","reverse","star","arr","Dropdown","ItemText","getWeaponsOfType","rarity","weaponObj","Divider","getLevelName","LevelNameData","faGavel","getWeaponPassiveDescription","getWeaponDescription","editingOther","SetEditingOther","additionalKeys","displayStatKeys","editStatKeys","otherStatKeys","getElementalKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","CharacterSpecializedStatKey","getStatNameRaw","CharacterTalentPane","dmgMode","ascension","getAscension","skillDisplayProps","ContextAwareToggle","callback","currentEventKey","decoratedOnClick","expanded","faWindowMinimize","faWindowMaximize","ToggleButtonGroup","ToggleButton","href","rel","eleKey","immunityStatKey","elementImmunity","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","autoInfused","statsDisplayKeys","tKey","tText","SkillDisplayCard","talentKey","subtitle","asc","enabled","onClickTitle","talentLimits","header","getTalentLevelKey","talentLvlKey","levelBoost","infuseBtn","getElementalName","tLvl","talentLevelKeys","statsEle","talentStats","getTalentStats","ListGroup","index","getTalentImg","getTalentName","Subtitle","getTalentDocument","section","talentText","fields","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","fromEntries","getTalentConditionalFields","condField","FieldDisplay","field","fieldText","fieldBasic","basicVal","faQuestionCircle","fieldVal","finalVal","round","fieldEquippedVal","diff","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","child","CharacterDisplayCard","forceUpdateComponent","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","DatabaseInitAndVerify","characterId","getInitialState","Promise","all","getCharacterDataImport","getWeaponDataImport","getArtifactDataImport","then","deepClone","updateCharacter","addCharacter","footer","onClose","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","faTimes","defaultActiveKey","Nav","Link","getCDataObj","talent","skill","initialState","equippedArtifacts","WeaponLevelKeys","auto","burst","defaultProps","ListGroupItem","action","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","horizontal","horizontalVariant","initialBsPrefix","AbstractNav"],"mappings":"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","file":"static/js/11.a0d1aa20.chunk.js","sourcesContent":["import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst FloatFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseFloat(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\n\r\nconst IntFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseInt(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\nexport {\r\n  FloatFormControl,\r\n  IntFormControl\r\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import { AttachLazyFormulas, Formulas, OverrideFormulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nconst formulaKeyDependency = {}\r\nconst getDependency = (key) => {\r\n  let testObj = {}\r\n  let dependency = []\r\n  Object.keys(StatData).filter(k => k !== key).forEach(k => {\r\n    Object.defineProperty(testObj, k, {\r\n      get: () => {\r\n        dependency.push(k)\r\n        Object.defineProperty(testObj, k, { get: () => 0 })\r\n        return 0\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  AttachLazyFormulas(testObj)\r\n  //use the getter to generate the dependency\r\n  if (typeof testObj[key] === \"number\")\r\n    formulaKeyDependency[key] = dependency\r\n}\r\nObject.keys(Formulas).forEach(key => getDependency(key))\r\n\r\nfunction DependencyStatKeys(key, formulaOverrides = []) {\r\n  let dependencies = GetDependencyStats(key, formulaOverrides) || []\r\n  //add any formula override dependencies\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key, dependency = [] } = OverrideFormulas[formulaOverride.key] || {}\r\n    if (!dependencies.includes(key)) return\r\n    dependencies.push(...dependency)\r\n  })\r\n  dependencies = [...new Set(dependencies)]\r\n  let formulaKeys = Object.keys(Formulas).filter(k => k === key || dependencies.includes(k))\r\n  let statkeys = Object.keys(StatData).filter(k => k === key || dependencies.includes(k))\r\n  return { formulaKeys, statkeys }\r\n}\r\nfunction GetDependencyStats(key, formulaOverrides = []) {\r\n  let dependencies = [key]\r\n  let keyDependencies = null\r\n  for (const formulaOverride of formulaOverrides)\r\n    if (OverrideFormulas[formulaOverride?.key]?.key === key)\r\n      keyDependencies = OverrideFormulas[formulaOverride?.key]?.dependency\r\n  keyDependencies = keyDependencies || formulaKeyDependency[key]\r\n  keyDependencies?.forEach(k => {\r\n    let subdependencies = GetDependencyStats(k, formulaOverrides)\r\n    dependencies.push(...subdependencies)\r\n  })\r\n  return dependencies\r\n}\r\nexport {\r\n  DependencyStatKeys,\r\n  GetDependencyStats,\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, Image, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId) return null;\r\n  const equipOnChar = (charId) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charId)\r\n    forceUpdate?.()\r\n  }\r\n\r\n  let art = ArtifactDatabase.getArtifact(artifactId);\r\n  let artifactValidation = Artifact.artifactValidation(art)\r\n  let locationChar = CharacterDatabase.getCharacter(art.location)\r\n  let location = locationChar ? locationChar.name : \"Inventory\"\r\n  let mainStatLevel = assumeFull ? art.numStars * 4 : art.level\r\n  let assFullColor = assumeFull && art.level !== art.numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(art.mainStatKey, art.numStars, mainStatLevel, \"\")}{Stat.getStatUnit(art.mainStatKey)}</span>\r\n  return (<Card className=\"h-100\" border={`${art.numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getArtifactPieceIcon(art.setKey, art.slotKey)} className={`w-100 h-auto grad-${art.numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{`${Artifact.getArtifactPieceName(art.setKey, art.slotKey, \"Unknown Piece Name\")}`}</b></h6>\r\n          <div>{Artifact.getArtifactSlotNameWithIcon(art.slotKey)}{` +${art.level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getArtifactSetName(art.setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={art.numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(art.mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {art.substats ? art.substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let subStatValidation = artifactValidation.subStatValidations[i]\r\n          let numRolls = subStatValidation?.rolls?.length || 0\r\n          let efficiency = subStatValidation?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={artifactValidation.valid ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{artifactValidation.valid ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        }\r\n        ) : null}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.currentEfficiency}>\r\n          {(artifactValidation.currentEfficiency ? artifactValidation.currentEfficiency : 0).toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.maximumEfficiency}>\r\n          {(artifactValidation.maximumEfficiency ? artifactValidation.maximumEfficiency : 0).toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\">{location}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar()}>Inventory</Dropdown.Item>\r\n              {Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n                <Dropdown.Item key={id} onClick={() => equipOnChar(id)}>\r\n                  {char.name}\r\n                </Dropdown.Item>)}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><span>Location: {location}</span></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={art.location}\r\n                  style={art.location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    art.lock = !art.lock\r\n                    ArtifactDatabase.updateArtifact(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(art.lock || art.location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Col } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nconst DisplayStats = ({ statKey, character, build, editable, ...otherProps }) => {\r\n  let statVal = Character.getStatValueWithOverride(character, statKey)\r\n  if (statKey === \"hp_final\")\r\n    statVal = Character.getStatValueWithOverride(character, \"hp_base\")\r\n  else if (statKey === \"def_final\")\r\n    statVal = Character.getStatValueWithOverride(character, \"def_base\")\r\n  else if (statKey === \"atk_final\")\r\n    statVal = Character.getStatValueWithOverride(character, \"atk_base\") + Character.getStatValueWithOverride(character, \"atk_weapon\")\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (build?.finalStats?.[statKey] || 0) - statVal\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right text-right ${(editable && Character.hasOverride(character, statKey)) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> {buildDiff > 0 && \"+\"}{buildDiff?.toFixed(Stat.fixedUnit(statKey)) + unit}</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nconst DisplayNewBuildDiff = ({ statKey, character, equippedBuild, newBuild, editable, ...otherProps }) => {\r\n  let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right ${(editable && Character.hasOverride(character, statKey)) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nexport {\r\n  DisplayStats,\r\n  DisplayNewBuildDiff,\r\n}","import React, { useState } from 'react';\r\nimport { Accordion, Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { DisplayNewBuildDiff, DisplayStats } from '../../Components/StatDisplay';\r\nimport Stat, { FormulaText } from \"../../Stat\";\r\nimport { GetDependencyStats } from '../../StatDependency';\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState }) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(characterKey)\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  const formulaDependencyKeys = [...new Set(statKeys.map(key => GetDependencyStats(key, build.finalStats?.formulaOverrides)).flat())]\r\n  const formulaKeys = Object.keys(FormulaText).filter(key => formulaDependencyKeys.includes(key))\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Calculations`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ?\r\n                  statKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                  statKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {formulaKeys.map(key => <Col key={key} xs={12} className=\"mt-2\">\r\n                    <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                      <Card.Header className=\"p-2\">\r\n                        {Stat.printStat(key, build.finalStats)}\r\n                      </Card.Header>\r\n                      <Card.Body className=\"p-2\">\r\n                        <small>{Stat.printFormula(key, build.finalStats, build.finalStats.formulaOverrides, false)}</small>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  )}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n              {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getArtifactSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getArtifactSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getArtifactSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            let conditionalStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n                            if (conditionalStats) {\r\n                              if (!setStats) setStats = {}\r\n                              Object.entries(conditionalStats).forEach(([statKey, val]) =>\r\n                                setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                            }\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getArtifactSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Object.values(build.artifactIds).map(artid =>\r\n            artid ? <Col sm={6} lg={4} key={artid} className=\"mb-2\">\r\n              <ArtifactCard artifactId={artid} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport { DisplayNewBuildDiff, DisplayStats } from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"char_level\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={(val) => setOverride(\"char_level\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"char_level\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Assets.weapons[weapon.key]} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats, character)}</p>\r\n            <Row>\r\n              <Col xs={12} md={6}>\r\n                <h5>ATK: {weaponDisplayMainVal}</h5>\r\n              </Col>\r\n              {subStatKey && <Col xs={12} md={6}>\r\n                <h5>{Stat.getStatName(subStatKey)}: {weaponDisplaySubVal}{Stat.getStatUnit(subStatKey)}</h5>\r\n              </Col>}\r\n            </Row>\r\n            {<Row>\r\n              {(conditionalStats || weaponBonusStats) && <Col xs={12}><h6 className=\"mb-0\">Bonus Stats:</h6></Col>}\r\n              {weaponBonusStats && Object.entries(weaponBonusStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"bonu\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n              {conditionalStats && Object.entries(conditionalStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"cond\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n            </Row>}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  let { editable, character, character: { compareAgainstEquipped }, setOverride, equippedBuild, newBuild } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  let additionalKeys = [\"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const displayStatKeys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp_base\", \"hp\", \"hp_\", \"atk_base\", \"atk\", \"atk_\", \"def_base\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\", \"skill_crit_rate\", \"burst_crit_rate\", \"dmg\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              displayStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              displayStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              otherStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ?\r\n            miscStatkeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n            miscStatkeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n","import { faCheckSquare, faQuestionCircle, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, ToggleButton, ToggleButtonGroup, Tooltip } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat, { FormulaText } from \"../../Stat\";\r\nimport { GetDependencyStats } from \"../../StatDependency\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation, dmgMode }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  //choose which one to display stats for\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button\r\n        // style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"norm_atk\", \"char_atk\", \"plunge\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(Character.getTalentStatKey(\"char_atk\", character, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    //search for dependency, and flatten, isolate unique keys\r\n    keys = [...new Set(keys.map(key => GetDependencyStats(key, build.finalStats?.formulaOverrides)).flat())]\r\n    //return keys that are part of the formula text, in the order in which they appear.\r\n    return Object.keys(FormulaText).filter(key => keys.includes(key))\r\n  }\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <Accordion>\r\n        <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Options</span>\r\n                <small>Expand below to edit enemy details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ToggleButtonGroup type=\"radio\" value={dmgMode} name=\"dmgOptions\" onChange={(dmgMode) => setState({ dmgMode })}>\r\n                  <ToggleButton value=\"avg_dmg\">Avg. DMG</ToggleButton>\r\n                  <ToggleButton value=\"dmg\">Normal Hit, No Crit</ToggleButton>\r\n                  <ToggleButton value=\"crit_dmg\">Crit Hit DMG</ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Row className=\"mb-2\"><Col>\r\n                <Button variant=\"warning\" >\r\n                  <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                    To get the specific resistance values of enemies, please visit the wiki.\r\n                  </a>\r\n                </Button >\r\n              </Col></Row>\r\n              <Row>\r\n                <Col xs={12} xl={6} className=\"mb-2\">\r\n                  <StatInput\r\n                    name={<b>Enemy Level</b>}\r\n                    value={Character.getStatValueWithOverride(character, \"enemy_level\")}\r\n                    placeholder={Stat.getStatNameRaw(\"enemy_level\")}\r\n                    defaultValue={Character.getBaseStatValue(character, \"enemy_level\")}\r\n                    onValueChange={(val) => setOverride(\"enemy_level\", val)}\r\n                  />\r\n                </Col>\r\n                {[\"physical\", ...Character.getElementalKeys()].map(eleKey => {\r\n                  let statKey = eleKey === \"physical\" ? \"enemy_phy_res\" : `${eleKey}_enemy_ele_res`\r\n                  let immunityStatKey = eleKey === \"physical\" ? \"enemy_phy_immunity\" : `${eleKey}_enemy_ele_immunity`\r\n                  let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                  return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                        <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                      name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                      value={Character.getStatValueWithOverride(character, statKey)}\r\n                      placeholder={Stat.getStatNameRaw(statKey)}\r\n                      defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                      onValueChange={(val) => setOverride(statKey, val)}\r\n                      disabled={elementImmunity}\r\n                    />\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Formulas</span>\r\n                <small>Expand below to see calculation details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n              <Row>\r\n                {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\r\n                  <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                    <Card.Header className=\"p-2\">\r\n                      {Stat.printStat(key, build.finalStats)}\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-2\">\r\n                      <small>{Stat.printFormula(key, build.finalStats, build.finalStats.formulaOverrides, false)}</small>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                )}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let { talentLvlKey = undefined, levelBoost = 0 } = Character.getTalentLevelKey(character, talentKey, constellation, true)\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n  if (typeof talentLvlKey === \"number\") {\r\n    if (editable) {\r\n      let setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        let talentLevelKeys = state.talentLevelKeys || {}\r\n        talentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let statsEle = null\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  if (talentStats) {\r\n    statsEle = <Row><Col>\r\n      <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n        <ListGroup className=\"text-white\" variant=\"flush\">\r\n          {Object.entries(talentStats).map(([statKey, statVal], index) =>\r\n            <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n              <div>\r\n                <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n              </div>\r\n            </ListGroup.Item>\r\n          )}\r\n        </ListGroup>\r\n      </Card>\r\n    </Col></Row>\r\n  }\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalStats = {}\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            //filter out formulaOverrides from rendering\r\n            conditionalStats = Object.fromEntries(Object.entries(conditionalStats).filter(([key, _]) => key !== \"formulaOverrides\"))\r\n            conditionalFields = Character.getTalentConditionalFields(conditional, conditionalNum, [])\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Row><Col>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {Object.entries(conditionalStats).map(([statKey, statVal], index) =>\r\n                  <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n                    <div>\r\n                      <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                      <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n                    </div>\r\n                  </ListGroup.Item>\r\n                )}\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i + (conditionalStats?.length || 0)} index={i + (conditionalStats?.length || 0)} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col></Row>\r\n        }\r\n        return <Row className=\"mt-2\" key={\"section\" + i}><Col xs={12}>\r\n          <span>{talentText}</span>\r\n          {fields.length > 0 && <ListGroup className=\"text-white ml-n2 mr-n2\">\r\n            {fields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n          {conditionalEle}\r\n        </Col></Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay(props) {\r\n  let { character, character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldBasic = field.basicVal\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats, character)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = field.value ? field.value : field.finalVal\r\n  if (typeof fieldVal === \"function\") {\r\n    fieldVal = fieldVal?.(talentLvlKey, build.finalStats, character)\r\n  }\r\n  if (typeof fieldVal === \"number\")\r\n    fieldVal = Math.round(fieldVal)\r\n\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.finalVal\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats, character)?.toFixed?.(0))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className=\"float-right text-right\">{fieldVal}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterId)\r\n      this.state = CharacterDatabase.getCharacter(props.characterId)\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    dmgMode: \"dmg\",\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey) })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getArtifactDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.characterId && this.state.id !== this.props.characterId)\r\n      this.setState(CharacterDatabase.getCharacter(this.props.characterId))\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"char_level\")}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && (Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\"}>Talents {(Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\" && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} setState={this.setSetState} setOverride={this.setOverride} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;"],"sourceRoot":""}