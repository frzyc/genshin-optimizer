{"version":3,"sources":["StatData.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","Components/CustomFormControl.js","Data/WeaponData.js","Data/ArtifactData.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","Components/ConditionalSelector.js","DatabaseUtil.js","Data/CharacterData.js","Components/StatIcon.js","StatDependency.js","Assets/Weapons/Swords/Swords.js","Assets/Weapons/Swords/Weapon_Dull_Blade.png","Assets/Weapons/Swords/Weapon_Silver_Sword.png","Assets/Weapons/Swords/Weapon_Cool_Steel.png","Assets/Weapons/Swords/Weapon_Dark_Iron_Sword.png","Assets/Weapons/Swords/Weapon_Fillet_Blade.png","Assets/Weapons/Swords/Weapon_Harbinger_of_Dawn.png","Assets/Weapons/Swords/Weapon_Skyrider_Sword.png","Assets/Weapons/Swords/Weapon_Traveler's_Handy_Sword.png","Assets/Weapons/Swords/Weapon_Blackcliff_Longsword.png","Assets/Weapons/Swords/Weapon_Favonius_Sword.png","Assets/Weapons/Swords/Weapon_Iron_Sting.png","Assets/Weapons/Swords/Weapon_Lion's_Roar.png","Assets/Weapons/Swords/Weapon_Prototype_Rancour.png","Assets/Weapons/Swords/Weapon_Royal_Longsword.png","Assets/Weapons/Swords/Weapon_Sacrificial_Sword.png","Assets/Weapons/Swords/Weapon_The_Alley_Flash.png","Assets/Weapons/Swords/Weapon_The_Black_Sword.png","Assets/Weapons/Swords/Weapon_The_Flute.png","Assets/Weapons/Swords/Weapon_Sword_of_Descension.png","Assets/Weapons/Swords/festering_fang.png","Assets/Weapons/Swords/Weapon_Aquila_Favonia.png","Assets/Weapons/Swords/Weapon_Skyward_Blade.png","Assets/Weapons/Swords/summit_shaper.png","Assets/Weapons/Claymores/Claymores.js","Assets/Weapons/Claymores/Weapon_Waster_Greatsword.png","Assets/Weapons/Claymores/Weapon_Old_Merc's_Pal.png","Assets/Weapons/Claymores/Weapon_Bloodtainted_Greatsword.png","Assets/Weapons/Claymores/Weapon_Debate_Club.png","Assets/Weapons/Claymores/Weapon_Ferrous_Shadow.png","Assets/Weapons/Claymores/Weapon_Quartz.png","Assets/Weapons/Claymores/Weapon_Skyrider_Greatsword.png","Assets/Weapons/Claymores/Weapon_White_Iron_Greatsword.png","Assets/Weapons/Claymores/Weapon_Blackcliff_Slasher.png","Assets/Weapons/Claymores/Weapon_Favonius_Greatsword.png","Assets/Weapons/Claymores/Weapon_Lithic_Blade.png","Assets/Weapons/Claymores/Weapon_Prototype_Aminus.png","Assets/Weapons/Claymores/Weapon_Rainslasher.png","Assets/Weapons/Claymores/Weapon_Royal_Greatsword.png","Assets/Weapons/Claymores/Weapon_Serpent_Spine.png","Assets/Weapons/Claymores/Weapon_The_Bell.png","Assets/Weapons/Claymores/Weapon_Whiteblind.png","Assets/Weapons/Claymores/Weapon_Sacrificial_Greatsword.png","Assets/Weapons/Claymores/snow_tombed_starsilver.png","Assets/Weapons/Claymores/Weapon_Skyward_Pride.png","Assets/Weapons/Claymores/Weapon_Wolf's_Gravestone.png","Assets/Weapons/Claymores/Weapon_The_Unforged.png","Assets/Weapons/Polearms/Polearms.js","Assets/Weapons/Polearms/Weapon_Beginner's_Protector.png","Assets/Weapons/Polearms/Weapon_Iron_Point.png","Assets/Weapons/Polearms/Weapon_Black_Tassel.png","Assets/Weapons/Polearms/Weapon_Halberd.png","Assets/Weapons/Polearms/Weapon_White_Tassel.png","Assets/Weapons/Polearms/Weapon_Blackcliff_Pole.png","Assets/Weapons/Polearms/Weapon_Crescent_Pike.png","Assets/Weapons/Polearms/Weapon_Deathmatch.png","Assets/Weapons/Polearms/Weapon_Dragon's_Bane.png","Assets/Weapons/Polearms/Weapon_Lithic_Spear.png","Assets/Weapons/Polearms/Weapon_Prototype_Grudge.png","Assets/Weapons/Polearms/Weapon_Favonius_Lance.png","Assets/Weapons/Polearms/Weapon_Royal_Spear.png","Assets/Weapons/Polearms/dragonspine_spear.png","Assets/Weapons/Polearms/Weapon_Vortex_Vanquisher.png","Assets/Weapons/Polearms/Weapon_Primordial_Jade_Winged-Spear.png","Assets/Weapons/Polearms/Weapon_Skyward_Spine.png","Assets/Weapons/Bows/Bows.js","Assets/Weapons/Bows/Weapon_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Seasoned_Hunter's_Bow.png","Assets/Weapons/Bows/Weapon_Ebony_Bow.png","Assets/Weapons/Bows/Weapon_Messenger.png","Assets/Weapons/Bows/Weapon_Raven_Bow.png","Assets/Weapons/Bows/Weapon_Recurve_Bow.png","Assets/Weapons/Bows/Weapon_Sharpshooter's_Oath.png","Assets/Weapons/Bows/Weapon_Slingshot.png","Assets/Weapons/Bows/Weapon_The_Stringless.png","Assets/Weapons/Bows/Weapon_Alley_Hunter.png","Assets/Weapons/Bows/Weapon_Blackcliff_Warbow.png","Assets/Weapons/Bows/Weapon_Compound_Bow.png","Assets/Weapons/Bows/Weapon_Favonius_Warbow.png","Assets/Weapons/Bows/Weapon_Prototype_Crescent.png","Assets/Weapons/Bows/Weapon_Royal_Bow.png","Assets/Weapons/Bows/Weapon_Rust.png","Assets/Weapons/Bows/Weapon_Sacrificial_Bow.png","Assets/Weapons/Bows/Weapon_The_Viridescent_Hunt.png","Assets/Weapons/Bows/Weapon_Skyward_Harp.png","Assets/Weapons/Bows/Weapon_Amos'_Bow.png","Assets/Weapons/Bows/dreams_of_dragonfell.png","Assets/Weapons/Catalysts/Catalysts.js","Assets/Weapons/Catalysts/Weapon_Apprentice's_Notes.png","Assets/Weapons/Catalysts/Weapon_Pocket_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Amber_Catalyst.png","Assets/Weapons/Catalysts/Weapon_Emerald_Orb.png","Assets/Weapons/Catalysts/Weapon_Magic_Guide.png","Assets/Weapons/Catalysts/Weapon_Otherworldly_Story.png","Assets/Weapons/Catalysts/Weapon_Thrilling_Tales_of_Dragon_Slayers.png","Assets/Weapons/Catalysts/Weapon_Twin_Nephrite.png","Assets/Weapons/Catalysts/Weapon_Blackcliff_Amulet.png","Assets/Weapons/Catalysts/Weapon_Favonius_Codex.png","Assets/Weapons/Catalysts/Weapon_Mappa_Mare.png","Assets/Weapons/Catalysts/Weapon_Prototype_Malice.png","Assets/Weapons/Catalysts/Weapon_Royal_Grimoire.png","Assets/Weapons/Catalysts/Weapon_Sacrificial_Fragments.png","Assets/Weapons/Catalysts/Weapon_Solar_Pearl.png","Assets/Weapons/Catalysts/Weapon_The_Widsith.png","Assets/Weapons/Catalysts/Weapon_Wine_and_Song.png","Assets/Weapons/Catalysts/Weapon_Eye_of_Perception.png","Assets/Weapons/Catalysts/Weapon_Frostbearer.png","Assets/Weapons/Catalysts/Weapon_Lost_Prayer_to_the_Sacred_Winds.png","Assets/Weapons/Catalysts/Weapon_Skyward_Atlas.png","Assets/Weapons/Catalysts/Weapon_Memory_of_Dust.png","Assets/Assets.js","Assets/Weapons/Weapons.js","Assets/Element_Anemo.png","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Artifact/PercentBadge.js","../node_modules/react-bootstrap/esm/Badge.js","Artifact/ArtifactCard.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/StatDisplay.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","TestPage/TestDisplay.js","Character/Character.js","Util/Util.js","Stat.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Artifact/ArtifactDatabase.js","Util/ConditionalsUtil.js","Data/ElementalData.js","Weapon/Weapon.js","Components/StarDisplay.js"],"names":["StatData","hp_base","name","pretty","hp","hp_","unit","hp_final","atk_base","atk","atk_","atk_final","atk_weapon","def_base","def","def_","def_final","phy_dmg_bonus","phy_res","ele_dmg_bonus","ele_res","ele_mas","ener_rech","crit_rate","crit_dmg","heal_bonu","stam","inc_heal","pow_shield","red_cd","norm_atk_dmg","char_atk_dmg","plunge_dmg","norm_atk_crit_dmg","char_atk_crit_dmg","plunge_crit_dmg","norm_atk_avg_dmg","char_atk_avg_dmg","plunge_avg_dmg","norm_atk_dmg_bonus","char_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","norm_atk_crit_multi","char_atk_crit_multi","norm_atk_bonus_multi","char_atk_bonus_multi","plunge_bonus_multi","skill_dmg","burst_dmg","skill_crit_dmg","burst_crit_dmg","skill_avg_dmg","burst_avg_dmg","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_crit_multi","burst_crit_multi","skill_bonus_multi","burst_bonus_multi","skill_cd_red","burst_cd_red","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","crit_dmg_multi","crit_multi","dmg","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","overloaded_dmg","electro_charged_dmg","superconduct_dmg","burning_dmg","vaporize_dmg","melt_dmg","swirl_dmg","char_ele_key","default","char_level","enemy_level","enemy_level_multi","enemy_phy_res","enemy_phy_res_multi","enemy_phy_immunity","enemy_ele_res","enemy_ele_res_multi","enemy_ele_immunity","resMultiplier","res","Formulas","s","clamp","eleFormulas","ele","Object","keys","filter","key","some","str","includes","forEach","html","className","variant","obj","ElementalData","eleKey","ele_key","deepClone","entries","func","defineProperty","configurable","enumerable","writable","value","OverrideFormulas","noelle_burst_atk","formula","options","dependency","AttachLazyFormulas","formulaKeys","statKeys","formulaOverrides","formulaOverride","overrideFormulaKey","get","val","this","hasOwnProperty","useWillUnmount","fn","onUnmount","valueRef","useRef","current","useUpdatedRef","useEffect","FloatFormControl","placeholder","onValueChange","disabled","useState","focus","setFocus","type","toString","onChange","e","target","parseFloat","onFocus","onBlur","IntFormControl","parseInt","WeaponData","WeaponDataImport","then","imp","WeaponLevelKeys","LevelNameData","WeaponTypeData","sword","claymore","catalyst","bow","polearm","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","push","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","2","ArtifactSubStatsData","ArtifactSlotsData","flower","stats","plume","sands","goblet","circlet","resolveContainerRef","ref","_ref","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","ConditionalSelector","props","conditional","conditionalNum","setConditional","defEle","Array","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","count","Toggle","size","Menu","Item","onClick","map","condial","i","Fragment","v","stack","tempcount","icon","faCheckSquare","faSquare","DatabaseInitAndVerify","localStorage","removeItem","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","values","art","valid","location","getCharacter","keyMapping","setKey","mainStatKey","endsWith","replace","updateArtifact","chars","getCharacterDatabase","character","equippedArtifacts","fromEntries","slotKey","artid","getArtifact","undefined","artifactConditionals","cond","srcKey","srcKey2","characterKey","levelKey","constellation","talentConditionals","ascension","Character","getAscension","talentKey","conditionalKey","talentLvlKey","getTalentLevelKey","getTalentConditional","dmgMode","updateCharacter","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","CharacterSpecializedStatKey","StatIcon","faTint","faFistRaised","faShieldAlt","faMagic","faDice","faDiceD20","faSync","faFirstAid","StatIconEle","statKey","formulaKeyDependency","DependencyStatKeys","dependencies","GetDependencyStats","Set","k","statkeys","keyDependencies","subdependencies","testObj","getDependency","DullBlade","SilverSword","CoolSteel","DarkIronSword","FilletBlade","HarbingerOfDawn","SkyriderSword","TravelersHandySword","BlackcliffLongsword","FavoniusSword","IronSting","LionsRoar","PrototypeRancour","RoyalLongsword","SacrificialSword","TheAlleyFlash","TheBlackSword","TheFlute","SwordOfDescension","FesteringDesire","AquilaFavonia","SkywardBlade","SummitShaper","WasterGreatsword","OldMercsPal","BloodtaintedGreatsword","DebateClub","FerrousShadow","Quartz","SkyriderGreatsword","WhiteIronGreatsword","BlackcliffSlasher","FavoniusGreatsword","LithicBlade","PrototypeAminus","Rainslasher","RoyalGreatsword","SerpentSpine","TheBell","Whiteblind","SacrificialGreatsword","SnowTombedStarsilver","SkywardPride","WolfsGravestone","TheUnforged","polearms","BeginnersProtector","IronPoint","BlackTassel","Halberd","WhiteTassel","BlackcliffPole","CrescentPike","Deathmatch","DragonsBane","LithicSpear","PrototypeGrudge","FavoniusLance","RoyalSpear","DragonspineSpear","VortexVanquisher","PrimordialJadeWingedSpear","SkywardSpine","bows","HuntersBow","SeasonedHuntersBow","EbonyBow","Messenger","RavenBow","RecurveBow","SharpshootersOath","Slingshot","TheStringless","AlleyHunter","BlackcliffWarbow","CompoundBow","FavoniusWarbow","PrototypeCrescent","RoyalBow","Rust","SacrificialBow","TheViridescentHunt","SkywardHarp","AmosBow","DreamsOfDragonfell","catalysts","ApprenticesNotes","PocketGrimoire","AmberCatalyst","EmeraldOrb","MagicGuide","OtherworldlyStory","ThrillingTalesOfDragonSlayers","TwinNephrite","BlackcliffAgate","FavoniusCodex","MappaMare","PrototypeMalice","RoyalGrimoire","SacrificialFragments","SolarPearl","TheWidsith","WineAndSong","EyeOfPerception","Frostbearer","LostPrayerToTheSacredWinds","SkywardAtlas","MemoryOfDust","Assets","weapons","swords","claymores","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","resin","fragile","condensed","exp_books","advice","wit","experience","PercentBadge","percent","children","badgeColor","isNaN","Math","floor","Badge","React","forwardRef","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","ArtifactCard","charId","Artifact","equipArtifactOnChar","artifactId","forceUpdate","artifactValidation","locationChar","border","numStars","bg","Header","xs","md","src","getArtifactPieceIcon","thumbnail","getArtifactPieceName","getArtifactSlotNameWithIcon","Body","Title","getArtifactSetName","stars","Stat","getStatName","getMainStatValue","getStatUnit","substats","stat","subStatValidation","subStatValidations","numRolls","rolls","length","efficiency","effOpacity","statName","toFixed","style","opacity","tooltip","msg","currentEfficiency","maximumEfficiency","Footer","equipOnChar","id","char","placement","overlay","pointerEvents","lock","faLock","faLockOpen","onEdit","faEdit","onDelete","faTrashAlt","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","TabContext","Provider","SelectableContext","TabContent","decoratedBsPrefix","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","Tab","_React$Component","apply","arguments","_inheritsLoose","prototype","render","Error","Container","Content","Pane","createContext","useAccordionToggle","contextEventKey","AccordionContext","AccordionToggle","accordionOnClick","AccordionCollapse","Collapse","Children","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","_objectWithoutProperties","source","excluded","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","DisplayStats","build","editable","otherProps","statVal","getStatValueWithOverride","buildDiff","finalStats","Col","hasOverride","fixedUnit","DisplayNewBuildDiff","equippedBuild","newBuild","CharacterArtifactPane","showOther","setShowOther","compareAgainstEquipped","setState","getDisplayStatKeys","displayStatProps","displayNewBuildProps","formulaDependencyKeys","flat","FormulaText","Row","Card","Button","xl","printStat","printFormula","equipArtifacts","artifactIds","sm","lg","getArtifactSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getArtifactSetEffectConditional","ConditionalsUtil","getConditionalNum","conditionalStats","getArtifactConditionalStats","conditionalElement","cnum","state","setStateArtifactConditional","getArtifactSetEffectText","StatInput","prependEle","defaultValue","restProps","InputGroup","Prepend","Text","Append","OverlayTrigger","Tooltip","faUndo","CharacterOverviewPane","setOverride","setConstellation","editLevel","setEditLevel","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","getName","Image","getStar","colored","getLevel","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","refineIndex","getWeaponConditionalStat","getWeaponConditional","conditionalEle","faQuoteLeft","getWeaponRarity","DropdownButton","title","getWeaponName","reverse","star","arr","Dropdown","ItemText","getWeaponsOfType","rarity","weaponObj","Divider","getLevelName","faGavel","getWeaponPassiveDescription","getWeaponDescription","editingOther","SetEditingOther","additionalKeys","displayStatKeys","editStatKeys","otherStatKeys","getElementalKeys","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","getStatNameRaw","CharacterTalentPane","skillDisplayProps","ContextAwareToggle","callback","currentEventKey","decoratedOnClick","expanded","faWindowMinimize","faWindowMaximize","ToggleButtonGroup","ToggleButton","href","rel","immunityStatKey","elementImmunity","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","autoInfused","statsDisplayKeys","tKey","tText","SkillDisplayCard","subtitle","asc","enabled","onClickTitle","talentLimits","header","levelBoost","infuseBtn","getElementalName","tLvl","talentLevelKeys","statsEle","talentStats","getTalentStats","ListGroup","index","getTalentImg","getTalentName","Subtitle","getTalentDocument","section","talentText","fields","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","FieldDisplay","field","fieldText","fieldBasic","basicVal","faQuestionCircle","fieldVal","finalVal","round","fieldEquippedVal","diff","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","child","CharacterDisplayCard","forceUpdateComponent","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","characterId","getInitialState","Promise","all","getCharacterDataImport","getWeaponDataImport","getArtifactDataImport","addCharacter","footer","onClose","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","faTimes","defaultActiveKey","Nav","Link","getCDataObj","talent","skill","initialState","auto","burst","ListGroupItem","action","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","horizontal","horizontalVariant","initialBsPrefix","AbstractNav","TestDisplay","moveToNewLocation","removeCharacterById","defVal","getSpecializedStatKey","getSpeicalizedStatVal","getWeaponMainStatValWithOverride","characterObj","baseStat","getIndexFromlevelkey","elementalKey","constellationName","titles","getSpecializedStat","specializeStat","thumbImg","cardImg","img","constIndex","getTalentLevelBoost","talents","talentBoost","boostEntry","find","withBoost","getTalentFields","getTalentStatsAll","statsArr","doc","tempCond","getConditionalProp","stacks","skillKey","elemental","infusable","artIdsOnCharacter","artIdsNotOnCharacter","getArtifactSlotKeys","artNotOnChar","artOnChar","notCharLoc","equipArtifact","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","charAndWeapon","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","condStats","overrides","specialStatKey","addStatsObj","weaponStats","subKey","subVal","getWeaponSubStatValWithOverride","bonusStats","array","random","getRandomIntInclusive","min","max","ceil","loadFromLocalStorage","data","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","closeEnoughFloat","a","b","abs","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","f","expand","statUnit","getStatVariant","printOverrideFormula","overrideKey","OverrideFormulasText","formulaText","o","eleFormulaText","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","_createForOfIteratorHelper","allowArrayLike","it","F","n","done","_e","err","normalCompletion","didErr","step","next","_e2","initiated","characterDatabase","charIdIndex","isInvalid","getCharacterIdList","dchar","getArtifactIDFromSlot","charid","unequipArtifactOnSlot","equipArtifactBuild","SlotIcon","faBahai","faFeatherAlt","faHourglass","faWineGlass","faCrown","ArtifactBase","rollData","float","roll","maxNumRoll","rollOption","sum","reduce","accu","isFloat","getSubstatRollData","getRolls","totalAllowableRolls","validateSubStat","currentNumOfRolls","cur","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","totalPossbleUpgrade","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getArtifactSetsByMaxStarEntries","setobj","pieces","icons","getArtifactSetEffectsObj","sets","getArtifactSlotName","getArtifactSlotIcon","slotIcon","getRarityArr","getMainStatKeys","main","getSubStatKeys","numberOfSubstatUnlocked","getArtifactSets","artifactSetEffect","artArr","setNumKeys","charFinalStats","setEffectText","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","hasSetEffect","setEffectObj","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","getLevelIndex","weaponKey","passiveName","passiveDescription","description","baseStats","sub","weaponType","getWeaponTypeName","StarIcon","faStar","Stars","_"],"mappings":"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C,cK3Ba,IAA0B,kDL4BvCC,OM5Ba,IAA0B,0CN6BvCC,mBO7Ba,IAA0B,uDP8BvCC,oBQ9Ba,IAA0B,yDR+BvCC,kBS/Ba,IAA0B,sDTgCvCC,mBUhCa,IAA0B,uDViCvCC,YWjCa,IAA0B,gDXkCvCC,gBYlCa,IAA0B,oDZmCvCC,YanCa,IAA0B,+CboCvCC,gBcpCa,IAA0B,oDdqCvCC,aerCa,IAA0B,iDfsCvCC,QgBtCa,IAA0B,4ChBuCvCC,WiBvCa,IAA0B,8CjBwCvCC,sBkBxCa,IAA0B,0DlByCvCC,qBmBzCa,IAA0B,mDnB0CvCC,aoB1Ca,IAA0B,iDpB2CvCC,gBqB3Ca,IAA0B,qDrB4CvCC,YsB5Ca,IAA0B,iDCoC1BC,EAnBE,CACfC,mBClBa,IAA0B,wDDmBvCC,UEnBa,IAA0B,8CFoBvCC,YGpBa,IAA0B,gDHqBvCC,QIrBa,IAA0B,2CJsBvCC,YKtBa,IAA0B,gDLuBvCC,eMvBa,IAA0B,mDNwBvCC,aOxBa,IAA0B,iDPyBvCC,WQzBa,IAA0B,8CR0BvCC,YS1Ba,IAA0B,iDT2BvCC,YU3Ba,IAA0B,gDV4BvCC,gBW5Ba,IAA0B,oDX6BvCC,cY7Ba,IAA0B,kDZ8BvCC,Wa9Ba,IAA0B,+Cb+BvCC,iBc/Ba,IAA0B,8CdgCvCC,iBehCa,IAA0B,qDfiCvCC,0BgBjCa,IAA0B,gEhBkCvCC,aiBlCa,IAA0B,kDC4C1BC,EAvBF,CACXC,WCtBa,IAA0B,gDDuBvCC,mBEvBa,IAA0B,yDFwBvCC,SGxBa,IAA0B,6CHyBvCC,UIzBa,IAA0B,6CJ0BvCC,SK1Ba,IAA0B,6CL2BvCC,WM3Ba,IAA0B,+CN4BvCC,kBO5Ba,IAA0B,uDP6BvCC,UQ7Ba,IAA0B,6CR8BvCC,cS9Ba,IAA0B,kDT+BvCC,YU/Ba,IAA0B,gDVgCvCC,iBWhCa,IAA0B,qDXiCvCC,YYjCa,IAA0B,gDZkCvCC,ealCa,IAA0B,mDbmCvCC,kBcnCa,IAA0B,sDdoCvCC,SepCa,IAA0B,6CfqCvCC,KgBrCa,IAA0B,wChBsCvCC,eiBtCa,IAA0B,mDjBuCvCC,mBkBvCa,IAA0B,wDlBwCvCC,YmBxCa,IAA0B,gDnByCvCC,QoBzCa,IAA0B,6CpB0CvCC,mBqB1Ca,IAA0B,kDC8C1BC,EAxBG,CAChBC,iBCvBa,IAA0B,sDDwBvCC,eExBa,IAA0B,mDFyBvCC,cGzBa,IAA0B,kDH0BvCC,WI1Ba,IAA0B,+CJ2BvCC,WK3Ba,IAA0B,+CL4BvCC,kBM5Ba,IAA0B,sDN6BvCC,8BO7Ba,IAA0B,qEP8BvCC,aQ9Ba,IAA0B,iDR+BvCC,gBS/Ba,IAA0B,qDTgCvCC,cUhCa,IAA0B,kDViCvCC,UWjCa,IAA0B,8CXkCvCC,gBYlCa,IAA0B,oDZmCvCC,canCa,IAA0B,kDboCvCC,qBcpCa,IAA0B,yDdqCvCC,WerCa,IAA0B,+CfsCvCC,WgBtCa,IAA0B,+ChBuCvCC,YiBvCa,IAA0B,iDjBwCvCC,gBkBxCa,IAA0B,qDlByCvCC,YmBzCa,IAA0B,+CnB0CvCC,2BoB1Ca,IAA0B,mEpB2CvCC,aqB3Ca,IAA0B,iDrB4CvCC,asB5Ca,IAA0B,mDCwBrCC,EAAS,CACXC,QCpBW,+DACRC,GACAC,GACAlE,GACAkB,GACAsB,GDgBH2B,SAAU,CAAEC,ME1BC,IAA0B,0CF0BpBC,KG1BN,IAA0B,yCH0BdC,OI1BZ,IAA0B,2CJ0BNC,QK1BpB,IAA0B,4CL0BGC,IM1B7B,IAA0B,wCN0BQC,MO1BlC,IAA0B,0CP0BeC,KQ1BzC,IAA0B,0CR2BvCC,YAAa,CAAExQ,IS3BF,IAA0B,kDT2BnBD,SU3BP,IAA0B,uDV2BTD,SW3BjB,IAA0B,uDX2BCG,QY3B3B,IAA0B,sDZ2BUJ,Ma3BpC,IAA0B,qDb4BvC4Q,MAAO,CACLC,Qc7BW,IAA0B,+Cd8BrCC,Ue9BW,IAA0B,kDfgCvCC,UAAW,CACTC,OgBjCW,IAA0B,mDhBkCrCC,IiBlCW,IAA0B,4CjBmCrCC,WkBnCW,IAA0B,2DlBsC1BnB,O,uFmBpCA,SAASoB,EAAazO,GAAQ,IACrC0O,EAA6B1O,EAA7B0O,QAASlM,EAAoBxC,EAApBwC,MAAOmM,EAAa3O,EAAb2O,SAClBC,EAAcpM,EAAoBqM,MAAMH,GAAW,YAAjB,UAAkCI,KAAKC,MAAgB,IAAVL,GAAkB,EAA/D,QAAZ,SAC1B,OAA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","file":"static/js/8.312c0455.chunk.js","sourcesContent":["import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  dmg: { name: \"All DMG\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n  //elemental\r\n  overloaded_dmg: { name: \"Overloaded DMG\", unit: \"%\" },\r\n  electro_charged_dmg: { name: \"Electro-Charged DMG\", unit: \"%\" },\r\n  superconduct_dmg: { name: \"Superconduct DMG\", unit: \"%\" },\r\n  burning_dmg: { name: \"Overloaded DMG\", unit: \"%\" },\r\n  vaporize_dmg: { name: \"Vaporize DMG\", unit: \"%\" },\r\n  melt_dmg: { name: \"Melt DMG\", unit: \"%\" },\r\n  swirl_dmg: { name: \"Swirl DMG\", unit: \"%\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_final: (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.phy_dmg,\r\n  plunge_crit_dmg: (s) => s.phy_crit_dmg,\r\n  plunge_avg_dmg: (s) => s.phy_avg_dmg,\r\n  plunge_bonus_multi: (s) => s.phy_bonus_multi,\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.dmg) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.dmg) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s[`${ele}_ele_dmg`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_ele_crit_dmg`],\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_ele_avg_dmg`],\r\n  plunge_bonus_multi: (s, ele) => s[`${ele}_ele_bonus_multi`],\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.dmg) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.dmg) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.dmg) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//add html text to physical related stuff with html elements.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].html = <span className=\"text-physical text-nowrap\">{StatData[key].name}</span>\r\n  StatData[key].variant = \"physical\"\r\n});\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].html = <span className={`text-${eleKey} text-nowrap`}>{StatData[ele_key].name}</span>\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulas = {\r\n  noelle_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk + s.def_final * (options.value / 100),\r\n    dependency: [\"atk_base\", \"atk_weapon\", \"atk_\", \"atk\", \"def_final\", \"def_base\", \"def_\", \"def\"],\r\n  }\r\n}\r\n\r\n//the keyfilters are used by build generator to reduce the amount of calculations required\r\nfunction AttachLazyFormulas(obj, options = {}) {\r\n  let { formulaKeys = Object.keys(Formulas), statKeys = Object.keys(StatData) } = options;\r\n  let { formulaOverrides = [] } = obj;\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key: overrideFormulaKey, options } = formulaOverride\r\n    let { key, formula } = OverrideFormulas[overrideFormulaKey] || {}\r\n    if (!formulaKeys.includes(key)) return\r\n    formula = formula(options)\r\n    Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => formula(obj) : function () {\r\n        let val = formula(obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n\r\n  formulaKeys.forEach(key => {\r\n    !obj.hasOwnProperty(key) && Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => Formulas[key](obj) : function () {\r\n        let val = Formulas[key](obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  //assign zeros or default values to the other stats that are not part of the calculations\r\n  statKeys.forEach(key => !obj.hasOwnProperty(key) && (obj[key] = StatData[key].default || 0))\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  OverrideFormulas,\r\n  StatData,\r\n  AttachLazyFormulas,\r\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst FloatFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseFloat(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\n\r\nconst IntFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseInt(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\nexport {\r\n  FloatFormControl,\r\n  IntFormControl\r\n}","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport Character from \"./Character/Character\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //remove the old error/prone id lists, if it still exists\r\n  localStorage.removeItem(\"artifact_id_list\")\r\n  localStorage.removeItem(\"character_id_list\")\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  if (CharacterDatabase.populateDatebaseFromLocalStorage() |\r\n    ArtifactDatabase.populateDatebaseFromLocalStorage()) {\r\n    //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n    let arts = ArtifactDatabase.getArtifactDatabase();\r\n    Object.values(arts).forEach(art => {\r\n      let valid = true\r\n      if (art.location && !CharacterDatabase.getCharacter(art.location)) {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n      if (!valid)\r\n        ArtifactDatabase.updateArtifact(art)\r\n    })\r\n\r\n    let chars = CharacterDatabase.getCharacterDatabase();\r\n    Object.values(chars).forEach(character => {\r\n      let valid = true;\r\n      //verify character database equipment validity\r\n      let equippedArtifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([slotKey, artid]) => {\r\n        if (!ArtifactDatabase.getArtifact(artid)) {\r\n          valid = false\r\n          return [slotKey, undefined]\r\n        }\r\n        return [slotKey, artid]\r\n      }))\r\n      if (!valid)\r\n        character.equippedArtifacts = equippedArtifacts\r\n\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      if (character.artifactConditionals) character.artifactConditionals = character.artifactConditionals.filter(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for invalid conditionals from previous iterations where srcKey2 was not used.\r\n      let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n      let ascension = Character.getAscension(levelKey)\r\n      character.talentConditionals = talentConditionals.filter(cond => {\r\n        let { srcKey: talentKey, srcKey2: conditionalKey } = cond\r\n        let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n        let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n        if (!conditional) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n      if (!valid) {\r\n        CharacterDatabase.updateCharacter(character)\r\n      }\r\n    })\r\n  }\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import { AttachLazyFormulas, Formulas, OverrideFormulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nconst formulaKeyDependency = {}\r\nconst getDependency = (key) => {\r\n  let testObj = {}\r\n  let dependency = []\r\n  Object.keys(StatData).filter(k => k !== key).forEach(k => {\r\n    Object.defineProperty(testObj, k, {\r\n      get: () => {\r\n        dependency.push(k)\r\n        Object.defineProperty(testObj, k, { get: () => 0 })\r\n        return 0\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  AttachLazyFormulas(testObj)\r\n  //use the getter to generate the dependency\r\n  if (typeof testObj[key] === \"number\")\r\n    formulaKeyDependency[key] = dependency\r\n}\r\nObject.keys(Formulas).forEach(key => getDependency(key))\r\n\r\nfunction DependencyStatKeys(key, formulaOverrides = []) {\r\n  let dependencies = GetDependencyStats(key, formulaOverrides) || []\r\n  //add any formula override dependencies\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key, dependency = [] } = OverrideFormulas[formulaOverride.key] || {}\r\n    if (!dependencies.includes(key)) return\r\n    dependencies.push(...dependency)\r\n  })\r\n  dependencies = [...new Set(dependencies)]\r\n  let formulaKeys = Object.keys(Formulas).filter(k => k === key || dependencies.includes(k))\r\n  let statkeys = Object.keys(StatData).filter(k => k === key || dependencies.includes(k))\r\n  return { formulaKeys, statkeys }\r\n}\r\nfunction GetDependencyStats(key, formulaOverrides = []) {\r\n  let dependencies = [key]\r\n  let keyDependencies = null\r\n  for (const formulaOverride of formulaOverrides)\r\n    if (OverrideFormulas[formulaOverride?.key]?.key === key)\r\n      keyDependencies = OverrideFormulas[formulaOverride?.key]?.dependency\r\n  keyDependencies = keyDependencies || formulaKeyDependency[key]\r\n  keyDependencies?.forEach(k => {\r\n    let subdependencies = GetDependencyStats(k, formulaOverrides)\r\n    dependencies.push(...subdependencies)\r\n  })\r\n  return dependencies\r\n}\r\nexport {\r\n  DependencyStatKeys,\r\n  GetDependencyStats,\r\n}\r\n","import DullBlade from './Weapon_Dull_Blade.png'\r\nimport SilverSword from './Weapon_Silver_Sword.png'\r\nimport CoolSteel from './Weapon_Cool_Steel.png'\r\nimport DarkIronSword from './Weapon_Dark_Iron_Sword.png'\r\nimport FilletBlade from './Weapon_Fillet_Blade.png'\r\nimport HarbingerOfDawn from './Weapon_Harbinger_of_Dawn.png'\r\nimport SkyriderSword from './Weapon_Skyrider_Sword.png'\r\nimport TravelersHandySword from './Weapon_Traveler\\'s_Handy_Sword.png'\r\nimport BlackcliffLongsword from './Weapon_Blackcliff_Longsword.png'\r\nimport FavoniusSword from './Weapon_Favonius_Sword.png'\r\nimport IronSting from './Weapon_Iron_Sting.png'\r\nimport LionsRoar from './Weapon_Lion\\'s_Roar.png'\r\nimport PrototypeRancour from './Weapon_Prototype_Rancour.png'\r\nimport RoyalLongsword from './Weapon_Royal_Longsword.png'\r\nimport SacrificialSword from './Weapon_Sacrificial_Sword.png'\r\nimport TheAlleyFlash from './Weapon_The_Alley_Flash.png'\r\nimport TheBlackSword from './Weapon_The_Black_Sword.png'\r\nimport TheFlute from './Weapon_The_Flute.png'\r\nimport SwordOfDescension from './Weapon_Sword_of_Descension.png'\r\nimport FesteringDesire from './festering_fang.png'\r\nimport AquilaFavonia from './Weapon_Aquila_Favonia.png'\r\nimport SkywardBlade from './Weapon_Skyward_Blade.png'\r\nimport SummitShaper from './summit_shaper.png'\r\nconst sword = {\r\n  DullBlade,\r\n  SilverSword,\r\n  CoolSteel,\r\n  DarkIronSword,\r\n  FilletBlade,\r\n  HarbingerOfDawn,\r\n  SkyriderSword,\r\n  TravelersHandySword,\r\n  BlackcliffLongsword,\r\n  FavoniusSword,\r\n  IronSting,\r\n  LionsRoar,\r\n  PrototypeRancour,\r\n  RoyalLongsword,\r\n  SacrificialSword,\r\n  TheAlleyFlash,\r\n  TheBlackSword,\r\n  TheFlute,\r\n  SwordOfDescension,\r\n  FesteringDesire,\r\n  AquilaFavonia,\r\n  SkywardBlade,\r\n  SummitShaper,\r\n}\r\nexport default sword","export default __webpack_public_path__ + \"static/media/Weapon_Dull_Blade.f5de06e8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Silver_Sword.e2462179.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Cool_Steel.0c6a9897.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dark_Iron_Sword.8dce5b63.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Fillet_Blade.c8e8ab5f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Harbinger_of_Dawn.26da0d78.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Sword.80e60c22.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Traveler's_Handy_Sword.168a7842.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Longsword.522f4d19.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Sword.cb5df26b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Sting.9f4b4b01.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lion's_Roar.b0e78fa9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Rancour.64965f56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Longsword.5a57f015.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Sword.048703ab.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Alley_Flash.7528f5ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Black_Sword.3987a991.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Flute.82af0cbf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sword_of_Descension.eb67a1df.png\";","export default __webpack_public_path__ + \"static/media/festering_fang.38aa5200.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Aquila_Favonia.7c014114.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Blade.af22a740.png\";","export default __webpack_public_path__ + \"static/media/summit_shaper.5245335d.png\";","import WasterGreatsword from './Weapon_Waster_Greatsword.png'\r\nimport OldMercsPal from './Weapon_Old_Merc\\'s_Pal.png'\r\nimport BloodtaintedGreatsword from './Weapon_Bloodtainted_Greatsword.png'\r\nimport DebateClub from './Weapon_Debate_Club.png'\r\nimport FerrousShadow from './Weapon_Ferrous_Shadow.png'\r\nimport Quartz from './Weapon_Quartz.png'\r\nimport SkyriderGreatsword from './Weapon_Skyrider_Greatsword.png'\r\nimport WhiteIronGreatsword from './Weapon_White_Iron_Greatsword.png'\r\nimport BlackcliffSlasher from './Weapon_Blackcliff_Slasher.png'\r\nimport FavoniusGreatsword from './Weapon_Favonius_Greatsword.png'\r\nimport LithicBlade from './Weapon_Lithic_Blade.png'\r\nimport PrototypeAminus from './Weapon_Prototype_Aminus.png'\r\nimport Rainslasher from './Weapon_Rainslasher.png'\r\nimport RoyalGreatsword from './Weapon_Royal_Greatsword.png'\r\nimport SerpentSpine from './Weapon_Serpent_Spine.png'\r\nimport TheBell from './Weapon_The_Bell.png'\r\nimport Whiteblind from './Weapon_Whiteblind.png'\r\nimport SacrificialGreatsword from './Weapon_Sacrificial_Greatsword.png'\r\nimport SnowTombedStarsilver from './snow_tombed_starsilver.png'\r\nimport SkywardPride from './Weapon_Skyward_Pride.png'\r\nimport WolfsGravestone from './Weapon_Wolf\\'s_Gravestone.png'\r\nimport TheUnforged from './Weapon_The_Unforged.png'\r\nconst claymore = {\r\n  WasterGreatsword,\r\n  OldMercsPal,\r\n  BloodtaintedGreatsword,\r\n  DebateClub,\r\n  FerrousShadow,\r\n  Quartz,\r\n  SkyriderGreatsword,\r\n  WhiteIronGreatsword,\r\n  BlackcliffSlasher,\r\n  FavoniusGreatsword,\r\n  LithicBlade,\r\n  PrototypeAminus,\r\n  Rainslasher,\r\n  RoyalGreatsword,\r\n  SerpentSpine,\r\n  TheBell,\r\n  Whiteblind,\r\n  SacrificialGreatsword,\r\n  SnowTombedStarsilver,\r\n  SkywardPride,\r\n  WolfsGravestone,\r\n  TheUnforged,\r\n}\r\nexport default claymore","export default __webpack_public_path__ + \"static/media/Weapon_Waster_Greatsword.a411f34b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Old_Merc's_Pal.67aa1930.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Bloodtainted_Greatsword.eb68a62c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Debate_Club.be908652.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ferrous_Shadow.ef586057.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Quartz.d41c58b9.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyrider_Greatsword.46e935cb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Iron_Greatsword.eda6295d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Slasher.4693af54.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Greatsword.bfd288be.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Blade.ab4d4f4f.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Aminus.d2bf526a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rainslasher.664c61ae.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Greatsword.fbc5184a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Serpent_Spine.bb2831b5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Bell.3670f330.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Whiteblind.9c37b7dd.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Greatsword.1b0f0225.png\";","export default __webpack_public_path__ + \"static/media/snow_tombed_starsilver.23f56359.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Pride.66a1b3f7.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wolf's_Gravestone.032b607c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Unforged.f7762a2f.png\";","import BeginnersProtector from './Weapon_Beginner\\'s_Protector.png'\r\nimport IronPoint from './Weapon_Iron_Point.png'\r\nimport BlackTassel from './Weapon_Black_Tassel.png'\r\nimport Halberd from './Weapon_Halberd.png'\r\nimport WhiteTassel from './Weapon_White_Tassel.png'\r\nimport BlackcliffPole from './Weapon_Blackcliff_Pole.png'\r\nimport CrescentPike from './Weapon_Crescent_Pike.png'\r\nimport Deathmatch from './Weapon_Deathmatch.png'\r\nimport DragonsBane from './Weapon_Dragon\\'s_Bane.png'\r\nimport LithicSpear from './Weapon_Lithic_Spear.png'\r\nimport PrototypeGrudge from './Weapon_Prototype_Grudge.png'\r\nimport FavoniusLance from './Weapon_Favonius_Lance.png'\r\nimport RoyalSpear from './Weapon_Royal_Spear.png'\r\nimport DragonspineSpear from './dragonspine_spear.png'\r\nimport VortexVanquisher from './Weapon_Vortex_Vanquisher.png'\r\nimport PrimordialJadeWingedSpear from './Weapon_Primordial_Jade_Winged-Spear.png'\r\nimport SkywardSpine from './Weapon_Skyward_Spine.png'\r\nconst polearms = {\r\n  BeginnersProtector,\r\n  IronPoint,\r\n  BlackTassel,\r\n  Halberd,\r\n  WhiteTassel,\r\n  BlackcliffPole,\r\n  CrescentPike,\r\n  Deathmatch,\r\n  DragonsBane,\r\n  LithicSpear,\r\n  PrototypeGrudge,\r\n  FavoniusLance,\r\n  RoyalSpear,\r\n  DragonspineSpear,\r\n  VortexVanquisher,\r\n  PrimordialJadeWingedSpear,\r\n  SkywardSpine,\r\n}\r\nexport default polearms","export default __webpack_public_path__ + \"static/media/Weapon_Beginner's_Protector.19165915.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Iron_Point.8263916c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Black_Tassel.c3103e46.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Halberd.0044e214.png\";","export default __webpack_public_path__ + \"static/media/Weapon_White_Tassel.a3cc9099.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Pole.1e15a879.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Crescent_Pike.9e473ddb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Deathmatch.9b0e6d8e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Dragon's_Bane.7437cf28.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lithic_Spear.cfb11b6c.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Grudge.64b3a263.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Lance.693335d4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Spear.99058465.png\";","export default __webpack_public_path__ + \"static/media/dragonspine_spear.bb785669.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Vortex_Vanquisher.efad8956.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Primordial_Jade_Winged-Spear.ea10bc42.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Spine.e81931a5.png\";","import HuntersBow from './Weapon_Hunter\\'s_Bow.png'\r\nimport SeasonedHuntersBow from './Weapon_Seasoned_Hunter\\'s_Bow.png'\r\nimport EbonyBow from './Weapon_Ebony_Bow.png'\r\nimport Messenger from './Weapon_Messenger.png'\r\nimport RavenBow from './Weapon_Raven_Bow.png'\r\nimport RecurveBow from './Weapon_Recurve_Bow.png'\r\nimport SharpshootersOath from './Weapon_Sharpshooter\\'s_Oath.png'\r\nimport Slingshot from './Weapon_Slingshot.png'\r\nimport TheStringless from './Weapon_The_Stringless.png'\r\nimport AlleyHunter from './Weapon_Alley_Hunter.png'\r\nimport BlackcliffWarbow from './Weapon_Blackcliff_Warbow.png'\r\nimport CompoundBow from './Weapon_Compound_Bow.png'\r\nimport FavoniusWarbow from './Weapon_Favonius_Warbow.png'\r\nimport PrototypeCrescent from './Weapon_Prototype_Crescent.png'\r\nimport RoyalBow from './Weapon_Royal_Bow.png'\r\nimport Rust from './Weapon_Rust.png'\r\nimport SacrificialBow from './Weapon_Sacrificial_Bow.png'\r\nimport TheViridescentHunt from './Weapon_The_Viridescent_Hunt.png'\r\nimport SkywardHarp from './Weapon_Skyward_Harp.png'\r\nimport AmosBow from './Weapon_Amos\\'_Bow.png'\r\nimport DreamsOfDragonfell from './dreams_of_dragonfell.png'\r\nconst bows = {\r\n  HuntersBow,\r\n  SeasonedHuntersBow,\r\n  EbonyBow,\r\n  Messenger,\r\n  RavenBow,\r\n  RecurveBow,\r\n  SharpshootersOath,\r\n  Slingshot,\r\n  TheStringless,\r\n  AlleyHunter,\r\n  BlackcliffWarbow,\r\n  CompoundBow,\r\n  FavoniusWarbow,\r\n  PrototypeCrescent,\r\n  RoyalBow,\r\n  Rust,\r\n  SacrificialBow,\r\n  TheViridescentHunt,\r\n  SkywardHarp,\r\n  AmosBow,\r\n  DreamsOfDragonfell,\r\n}\r\nexport default bows","export default __webpack_public_path__ + \"static/media/Weapon_Hunter's_Bow.2e941c96.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Seasoned_Hunter's_Bow.bc6a42aa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Ebony_Bow.f89cc3cc.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Messenger.939170eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Raven_Bow.b88fe5c0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Recurve_Bow.bafcde86.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sharpshooter's_Oath.1d149cf5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Slingshot.d2eeb3eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Stringless.b718aa93.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Alley_Hunter.8cc323c2.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Warbow.098f24da.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Compound_Bow.a8457f4e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Warbow.19e98358.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Crescent.50a174b0.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Bow.06fbac8b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Rust.65b7af56.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Bow.804b7a38.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Viridescent_Hunt.904062bf.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Harp.6961093e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amos'_Bow.e97cd305.png\";","export default __webpack_public_path__ + \"static/media/dreams_of_dragonfell.8aaebb39.png\";","import ApprenticesNotes from './Weapon_Apprentice\\'s_Notes.png'\r\nimport PocketGrimoire from './Weapon_Pocket_Grimoire.png'\r\nimport AmberCatalyst from './Weapon_Amber_Catalyst.png'\r\nimport EmeraldOrb from './Weapon_Emerald_Orb.png'\r\nimport MagicGuide from './Weapon_Magic_Guide.png'\r\nimport OtherworldlyStory from './Weapon_Otherworldly_Story.png'\r\nimport ThrillingTalesOfDragonSlayers from './Weapon_Thrilling_Tales_of_Dragon_Slayers.png'\r\nimport TwinNephrite from './Weapon_Twin_Nephrite.png'\r\nimport BlackcliffAgate from './Weapon_Blackcliff_Amulet.png'\r\nimport FavoniusCodex from './Weapon_Favonius_Codex.png'\r\nimport MappaMare from './Weapon_Mappa_Mare.png'\r\nimport PrototypeMalice from './Weapon_Prototype_Malice.png'\r\nimport RoyalGrimoire from './Weapon_Royal_Grimoire.png'\r\nimport SacrificialFragments from './Weapon_Sacrificial_Fragments.png'\r\nimport SolarPearl from './Weapon_Solar_Pearl.png'\r\nimport TheWidsith from './Weapon_The_Widsith.png'\r\nimport WineAndSong from './Weapon_Wine_and_Song.png'\r\nimport EyeOfPerception from './Weapon_Eye_of_Perception.png'\r\nimport Frostbearer from './Weapon_Frostbearer.png'\r\nimport LostPrayerToTheSacredWinds from './Weapon_Lost_Prayer_to_the_Sacred_Winds.png'\r\nimport SkywardAtlas from './Weapon_Skyward_Atlas.png'\r\nimport MemoryOfDust from './Weapon_Memory_of_Dust.png'\r\nconst catalysts = {\r\n  ApprenticesNotes,\r\n  PocketGrimoire,\r\n  AmberCatalyst,\r\n  EmeraldOrb,\r\n  MagicGuide,\r\n  OtherworldlyStory,\r\n  ThrillingTalesOfDragonSlayers,\r\n  TwinNephrite,\r\n  BlackcliffAgate,\r\n  FavoniusCodex,\r\n  MappaMare,\r\n  PrototypeMalice,\r\n  RoyalGrimoire,\r\n  SacrificialFragments,\r\n  SolarPearl,\r\n  TheWidsith,\r\n  WineAndSong,\r\n  EyeOfPerception,\r\n  Frostbearer,\r\n  LostPrayerToTheSacredWinds,\r\n  SkywardAtlas,\r\n  MemoryOfDust\r\n}\r\nexport default catalysts","export default __webpack_public_path__ + \"static/media/Weapon_Apprentice's_Notes.0b7fb81e.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Pocket_Grimoire.536179c5.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Amber_Catalyst.01ede681.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Emerald_Orb.4008f986.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Magic_Guide.64c777ec.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Otherworldly_Story.48b54293.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Thrilling_Tales_of_Dragon_Slayers.692d45b8.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Twin_Nephrite.b0c2488b.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Blackcliff_Amulet.b97d01eb.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Favonius_Codex.6e201cfa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Mappa_Mare.bc35dc35.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Prototype_Malice.4ab08cb6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Royal_Grimoire.2f67eac4.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Sacrificial_Fragments.4dd54e2d.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Solar_Pearl.d629ae58.png\";","export default __webpack_public_path__ + \"static/media/Weapon_The_Widsith.a6fe1227.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Wine_and_Song.0aa416e6.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Eye_of_Perception.907a0288.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Frostbearer.bde00061.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Lost_Prayer_to_the_Sacred_Winds.45f8ca2a.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Skyward_Atlas.8b4f86fa.png\";","export default __webpack_public_path__ + \"static/media/Weapon_Memory_of_Dust.4e45ccbb.png\";","import weapons from './Weapons/Weapons'\r\n\r\nimport anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  weapons,\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","import swords from './Swords/Swords'\r\nimport claymores from './Claymores/Claymores'\r\nimport polearms from './Polearms//Polearms'\r\nimport bows from './Bows/Bows'\r\nimport catalysts from './Catalysts/Catalysts'\r\nconst weapons = {\r\n  ...swords,\r\n  ...claymores,\r\n  ...polearms,\r\n  ...bows,\r\n  ...catalysts,\r\n}\r\nexport default weapons","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, Image, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default class ArtifactCard extends React.Component {\r\n  //the props is to update the artifacts in the list in the parent, which will update here.\r\n  equipOnChar(charId) {\r\n    Artifact.equipArtifactOnChar(this.props.artifactId, charId)\r\n    this.props?.forceUpdate()\r\n  }\r\n  render() {\r\n    if (!this.props.artifactId) return null;\r\n    let art = ArtifactDatabase.getArtifact(this.props.artifactId);\r\n    let artifactValidation = Artifact.artifactValidation(art)\r\n    let locationChar = CharacterDatabase.getCharacter(art.location)\r\n    let location = locationChar ? locationChar.name : \"Inventory\"\r\n    return (<Card className=\"h-100\" border={`${art.numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n      <Card.Header className=\"p-0\">\r\n        <Row>\r\n          <Col xs={2} md={3}>\r\n            <Image src={Artifact.getArtifactPieceIcon(art.setKey, art.slotKey)} className={`w-100 h-auto grad-${art.numStars}star m-1`} thumbnail />\r\n          </Col>\r\n          <Col className=\"pt-3\">\r\n            <h6><b>{`${Artifact.getArtifactPieceName(art.setKey, art.slotKey, \"Unknown Piece Name\")}`}</b></h6>\r\n            <div>{Artifact.getArtifactSlotNameWithIcon(art.slotKey)}{` +${art.level}`}</div>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body className=\"d-flex flex-column py-2\">\r\n        <Card.Title>\r\n          <div>{Artifact.getArtifactSetName(art.setKey, \"Artifact Set\")}</div>\r\n          <small className=\"text-halfsize\"><Stars stars={art.numStars} /></small>\r\n        </Card.Title>\r\n        <h5 className=\"mb-1\">\r\n          <b>{Stat.getStatName(art.mainStatKey)} {Artifact.getMainStatValue(art.mainStatKey, art.numStars, art.level, \"\")}{Stat.getStatUnit(art.mainStatKey)}</b>\r\n        </h5>\r\n        <Row className=\"mb-0\">\r\n          {art.substats ? art.substats.map((stat, i) => {\r\n            if (!stat || !stat.value) return null\r\n            let subStatValidation = artifactValidation.subStatValidations[i]\r\n            let numRolls = subStatValidation?.rolls?.length || 0\r\n            let efficiency = subStatValidation?.efficiency || 0\r\n            let effOpacity = 0.3 + efficiency * 0.7\r\n            let statName = Stat.getStatName(stat.key)\r\n            return (<Col key={i} xs={12}>\r\n              <Badge variant={artifactValidation.valid ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{artifactValidation.valid ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n              <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n              <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n            </Col>)\r\n          }\r\n          ) : null}\r\n        </Row>\r\n        <div className=\"mt-auto\">\r\n          <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n          <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.currentEfficiency}>\r\n            {(artifactValidation.currentEfficiency ? artifactValidation.currentEfficiency : 0).toFixed(2) + \"%\"}\r\n          </PercentBadge>\r\n          <b>{\" < \"}</b>\r\n          <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.maximumEfficiency}>\r\n            {(artifactValidation.maximumEfficiency ? artifactValidation.maximumEfficiency : 0).toFixed(2) + \"%\"}\r\n          </PercentBadge>\r\n        </div>\r\n      </Card.Body>\r\n\r\n      <Card.Footer className=\"pr-3\">\r\n        <Row className=\"d-flex justify-content-between no-gutters\">\r\n          {this.props.forceUpdate ? <Col xs=\"auto\">\r\n            <Dropdown>\r\n              <Dropdown.Toggle size=\"sm\">{location}</Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item onClick={() => this.equipOnChar()}>Inventory</Dropdown.Item>\r\n                {Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n                  <Dropdown.Item key={id} onClick={() => this.equipOnChar(id)}>\r\n                    {char.name}\r\n                  </Dropdown.Item>)}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Col> : <Col xs=\"auto\"><span>Location: {location}</span></Col>}\r\n          <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              {this.props.forceUpdate ? <OverlayTrigger placement=\"top\"\r\n                overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n                <span className=\"d-inline-block\">\r\n                  <Button size=\"sm\"\r\n                    disabled={art.location}\r\n                    style={art.location ? { pointerEvents: 'none' } : {}}\r\n                    onClick={() => {\r\n                      art.lock = !art.lock\r\n                      ArtifactDatabase.updateArtifact(art);\r\n                      this.forceUpdate();\r\n                    }}>\r\n                    <FontAwesomeIcon icon={(art.lock || art.location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                  </Button>\r\n                </span>\r\n              </OverlayTrigger> : null}\r\n              {this.props.onEdit && <Button variant=\"info\" size=\"sm\"\r\n                onClick={() => this.props.onEdit()}>\r\n                <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n              </Button>}\r\n              {this.props.onDelete && <Button variant=\"danger\" size=\"sm\"\r\n                onClick={() => this.props.onDelete()}>\r\n                <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n              </Button>}\r\n            </ButtonGroup>\r\n          </Col>\r\n        </Row>\r\n      </Card.Footer>\r\n    </Card>)\r\n  }\r\n}","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Col } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nconst DisplayStats = ({ statKey, character, build, editable, ...otherProps }) => {\r\n  let statVal = Character.getStatValueWithOverride(character, statKey)\r\n  if (statKey === \"hp_final\")\r\n    statVal = Character.getStatValueWithOverride(character, \"hp_base\")\r\n  else if (statKey === \"def_final\")\r\n    statVal = Character.getStatValueWithOverride(character, \"def_base\")\r\n  else if (statKey === \"atk_final\")\r\n    statVal = Character.getStatValueWithOverride(character, \"atk_base\") + Character.getStatValueWithOverride(character, \"atk_weapon\")\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (build?.finalStats?.[statKey] || 0) - statVal\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right text-right ${(editable && Character.hasOverride(character, statKey)) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> {buildDiff > 0 && \"+\"}{buildDiff?.toFixed(Stat.fixedUnit(statKey)) + unit}</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nconst DisplayNewBuildDiff = ({ statKey, character, equippedBuild, newBuild, editable, ...otherProps }) => {\r\n  let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right ${(editable && Character.hasOverride(character, statKey)) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nexport {\r\n  DisplayStats,\r\n  DisplayNewBuildDiff,\r\n}","import React, { useState } from 'react';\r\nimport { Accordion, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { DisplayNewBuildDiff, DisplayStats } from '../../Components/StatDisplay';\r\nimport Stat, { FormulaText } from \"../../Stat\";\r\nimport { GetDependencyStats } from '../../StatDependency';\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane(props) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  let { character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState } = props\r\n  let { character } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(characterKey)\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  const formulaDependencyKeys = [...new Set(statKeys.map(key => GetDependencyStats(key, build.finalStats?.formulaOverrides)).flat())]\r\n  const formulaKeys = Object.keys(FormulaText).filter(key => formulaDependencyKeys.includes(key))\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Calculations`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ?\r\n                  statKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                  statKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {formulaKeys.map(key => <Col key={key} xs={12} className=\"mt-2\">\r\n                    <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                      <Card.Header className=\"p-2\">\r\n                        {Stat.printStat(key, build.finalStats)}\r\n                      </Card.Header>\r\n                      <Card.Body className=\"p-2\">\r\n                        <small>{Stat.printFormula(key, build.finalStats, build.finalStats.formulaOverrides, false)}</small>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  )}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button size=\"sm\" onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getArtifactSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getArtifactSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getArtifactSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            let conditionalStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n                            if (conditionalStats) {\r\n                              if (!setStats) setStats = {}\r\n                              Object.entries(conditionalStats).forEach(([statKey, val]) =>\r\n                                setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                            }\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getArtifactSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Object.values(build.artifactIds).map(artid =>\r\n            artid ? <Col sm={6} lg={4} key={artid} className=\"mb-2\">\r\n              <ArtifactCard artifactId={artid} forceUpdate={forceUpdate} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport { DisplayNewBuildDiff, DisplayStats } from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"char_level\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={(val) => setOverride(\"char_level\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"char_level\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Assets.weapons[weapon.key]} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats, character)}</p>\r\n            <Row>\r\n              <Col xs={12} md={6}>\r\n                <h5>ATK: {weaponDisplayMainVal}</h5>\r\n              </Col>\r\n              {subStatKey && <Col xs={12} md={6}>\r\n                <h5>{Stat.getStatName(subStatKey)}: {weaponDisplaySubVal}{Stat.getStatUnit(subStatKey)}</h5>\r\n              </Col>}\r\n            </Row>\r\n            {<Row>\r\n              {(conditionalStats || weaponBonusStats) && <Col xs={12}><h6 className=\"mb-0\">Bonus Stats:</h6></Col>}\r\n              {weaponBonusStats && Object.entries(weaponBonusStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"bonu\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n              {conditionalStats && Object.entries(conditionalStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"cond\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n            </Row>}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  let { editable, character, character: { compareAgainstEquipped }, setOverride, equippedBuild, newBuild } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  let additionalKeys = [\"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const displayStatKeys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp_base\", \"hp\", \"hp_\", \"atk_base\", \"atk\", \"atk_\", \"def_base\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\", \"skill_crit_rate\", \"burst_crit_rate\", \"dmg\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              displayStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              displayStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              otherStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ?\r\n            miscStatkeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n            miscStatkeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n","import { faCheckSquare, faQuestionCircle, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, ToggleButton, ToggleButtonGroup, Tooltip } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat, { FormulaText } from \"../../Stat\";\r\nimport { GetDependencyStats } from \"../../StatDependency\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation, dmgMode }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  //choose which one to display stats for\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button\r\n        // style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"norm_atk\", \"char_atk\", \"plunge\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(Character.getTalentStatKey(\"char_atk\", character, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    //search for dependency, and flatten, isolate unique keys\r\n    keys = [...new Set(keys.map(key => GetDependencyStats(key, build.finalStats?.formulaOverrides)).flat())]\r\n    //return keys that are part of the formula text, in the order in which they appear.\r\n    return Object.keys(FormulaText).filter(key => keys.includes(key))\r\n  }\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <Accordion>\r\n        <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Options</span>\r\n                <small>Expand below to edit enemy details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ToggleButtonGroup type=\"radio\" value={dmgMode} name=\"dmgOptions\" onChange={(dmgMode) => setState({ dmgMode })}>\r\n                  <ToggleButton value=\"avg_dmg\">Avg. DMG</ToggleButton>\r\n                  <ToggleButton value=\"dmg\">Normal Hit, No Crit</ToggleButton>\r\n                  <ToggleButton value=\"crit_dmg\">Crit Hit DMG</ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Row className=\"mb-2\"><Col>\r\n                <Button variant=\"warning\" >\r\n                  <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                    To get the specific resistance values of enemies, please visit the wiki.\r\n                  </a>\r\n                </Button >\r\n              </Col></Row>\r\n              <Row>\r\n                <Col xs={12} xl={6} className=\"mb-2\">\r\n                  <StatInput\r\n                    name={<b>Enemy Level</b>}\r\n                    value={Character.getStatValueWithOverride(character, \"enemy_level\")}\r\n                    placeholder={Stat.getStatNameRaw(\"enemy_level\")}\r\n                    defaultValue={Character.getBaseStatValue(character, \"enemy_level\")}\r\n                    onValueChange={(val) => setOverride(\"enemy_level\", val)}\r\n                  />\r\n                </Col>\r\n                {[\"physical\", ...Character.getElementalKeys()].map(eleKey => {\r\n                  let statKey = eleKey === \"physical\" ? \"enemy_phy_res\" : `${eleKey}_enemy_ele_res`\r\n                  let immunityStatKey = eleKey === \"physical\" ? \"enemy_phy_immunity\" : `${eleKey}_enemy_ele_immunity`\r\n                  let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                  return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                        <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                      name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                      value={Character.getStatValueWithOverride(character, statKey)}\r\n                      placeholder={Stat.getStatNameRaw(statKey)}\r\n                      defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                      onValueChange={(val) => setOverride(statKey, val)}\r\n                      disabled={elementImmunity}\r\n                    />\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Formulas</span>\r\n                <small>Expand below to see calculation details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n              <Row>\r\n                {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\r\n                  <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                    <Card.Header className=\"p-2\">\r\n                      {Stat.printStat(key, build.finalStats)}\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-2\">\r\n                      <small>{Stat.printFormula(key, build.finalStats, build.finalStats.formulaOverrides, false)}</small>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                )}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let { talentLvlKey = undefined, levelBoost = 0 } = Character.getTalentLevelKey(character, talentKey, constellation, true)\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n  if (typeof talentLvlKey === \"number\") {\r\n    if (editable) {\r\n      let setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        let talentLevelKeys = state.talentLevelKeys || {}\r\n        talentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let statsEle = null\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  if (talentStats) {\r\n    statsEle = <Row><Col>\r\n      <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n        <ListGroup className=\"text-white\" variant=\"flush\">\r\n          {Object.entries(talentStats).map(([statKey, statVal], index) =>\r\n            <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n              <div>\r\n                <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n              </div>\r\n            </ListGroup.Item>\r\n          )}\r\n        </ListGroup>\r\n      </Card>\r\n    </Col></Row>\r\n  }\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalStats = {}\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            //filter out formulaOverrides from rendering\r\n            conditionalStats = Object.fromEntries(Object.entries(conditionalStats).filter(([key, _]) => key !== \"formulaOverrides\"))\r\n            conditionalFields = Character.getTalentConditionalFields(conditional, conditionalNum, [])\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Row><Col>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {Object.entries(conditionalStats).map(([statKey, statVal], index) =>\r\n                  <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n                    <div>\r\n                      <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                      <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n                    </div>\r\n                  </ListGroup.Item>\r\n                )}\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i + (conditionalStats?.length || 0)} index={i + (conditionalStats?.length || 0)} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col></Row>\r\n        }\r\n        return <Row className=\"mt-2\" key={\"section\" + i}><Col xs={12}>\r\n          <span>{talentText}</span>\r\n          {fields.length > 0 && <ListGroup className=\"text-white ml-n2 mr-n2\">\r\n            {fields.map((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n          {conditionalEle}\r\n        </Col></Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay(props) {\r\n  let { character, character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldBasic = field.basicVal\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats, character)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = field.value ? field.value : field.finalVal\r\n  if (typeof fieldVal === \"function\") {\r\n    fieldVal = fieldVal?.(talentLvlKey, build.finalStats, character)\r\n  }\r\n  if (typeof fieldVal === \"number\")\r\n    fieldVal = Math.round(fieldVal)\r\n\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.finalVal\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats, character)?.toFixed?.(0))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className=\"float-right text-right\">{fieldVal}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterId)\r\n      this.state = CharacterDatabase.getCharacter(props.characterId)\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    dmgMode: \"dmg\",\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey) })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getArtifactDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.characterId && this.state.id !== this.props.characterId)\r\n      this.setState(CharacterDatabase.getCharacter(this.props.characterId))\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"char_level\")}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && (Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\"}>Talents {(Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\" && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} setState={this.setSetState} setOverride={this.setOverride} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import { Container } from \"react-bootstrap\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport '../StatDependency'\r\nexport default function TestDisplay(props) {\r\n  DatabaseInitAndVerify()\r\n  return <Container>\r\n    <CharacterDisplayCard editable characterId={\"character_2\"} />\r\n  </Container>\r\n}\r\n","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { AttachLazyFormulas } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getCDataObj(charKey)?.talent?.[talentKey]?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getCDataObj(charKey)?.talent?.[talentKey]?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getCDataObj(charKey)?.talent?.[talentKey]?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"formulaOverrides\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey } = character\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey)\r\n    if (!elemental) elemental = autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false)\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = this.getElementalKey(characterKey)\r\n    if (eleKey) eleKey = eleKey + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", \"ele_dmg_bonus\"]\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n\r\n    if (!isAutoElemental)\r\n      keys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      keys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      keys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(`${eleKey}_char_atk_avg_dmg`)\r\n\r\n    //show skill/burst at the end\r\n    keys.push(\"skill_avg_dmg\", \"burst_avg_dmg\")\r\n\r\n    return keys.map(key => ([\"ele_dmg_bonus\", \"skill_avg_dmg\", \"burst_avg_dmg\"].includes(key)) ? `${eleKey}_${key}` : key)\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getArtifactSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals, charAndWeapon, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(charAndWeapon)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals && artifactConditionals.forEach(conditional => {\r\n      let { srcKey: setKey, srcKey2: setNumKey } = conditional\r\n      let condStats = Artifact.getArtifactConditionalStats(setKey, setNumKey, conditional.conditionalNum)\r\n      if (condStats) Object.entries(condStats).forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n    AttachLazyFormulas(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"formulaOverrides\") {\r\n        initialStats.formulaOverrides = [...(initialStats.formulaOverrides || []), ...val]\r\n        return\r\n      }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { Formulas, OverrideFormulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (StatData[key]?.html || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (StatData[key]?.html || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static printFormula = (statKey, stats, formulaOverrides = [], expand = true) => {\r\n    for (const formulaOverride of formulaOverrides)\r\n      if (OverrideFormulas[formulaOverride?.key]?.key === statKey)\r\n        return Stat.printOverrideFormula(stats, formulaOverride.key, formulaOverride.options, false)\r\n    return FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n      (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n  }\r\n\r\n  static printOverrideFormula = (stats, overrideKey, options, expand = true) =>\r\n    OverrideFormulasText?.[overrideKey] && typeof OverrideFormulasText?.[overrideKey].formulaText === \"function\" &&\r\n    (<span>{OverrideFormulasText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats[statKey]?.toFixed?.(fixedUnit) || stats[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"dmg\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n}\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `dmg`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulasText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.value}%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getArtifactDataImport = () => ArtifactDataImport\r\n  static getArtifactSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getArtifactSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData).filter(([key, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getArtifactPieceName = (setKey, slotKey, defVal = \"\") => ArtifactData?.[setKey]?.pieces?.[slotKey] || defVal;\r\n  static getArtifactPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n  static getArtifactSetEffectsObj = (setKey, defVal = null) => ArtifactData?.[setKey]?.sets || defVal\r\n  //SLOT\r\n  static getArtifactSlotKeys = () => Object.keys(ArtifactSlotsData)\r\n  static getArtifactSlotName = (slotKey, defVal = \"\") =>\r\n    ArtifactSlotsData[slotKey] ? ArtifactSlotsData[slotKey].name : defVal\r\n  static getArtifactSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n\r\n  static getArtifactSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getArtifactSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getArtifactSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n\r\n  //STARS\r\n  static getRarityArr = (setKey) => ArtifactData[setKey] ? ArtifactData[setKey].rarity : []\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => ArtifactMainSlotKeys\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = ArtifactMainStatsData[numStars]?.[key]?.[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData)\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getRolls(value, rollData, float = false) {\r\n    let roll = null;\r\n    let maxNumRoll = Math.round(value / rollData[0])\r\n    if (!maxNumRoll) return null;\r\n    let rollOption = (val, arr) => {\r\n      if (roll) return;\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (float) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val)) {\r\n            roll = arr;\r\n            return;\r\n          }\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val)) {\r\n            roll = arr;\r\n            return\r\n          }\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        rollOption(value, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(value, [])\r\n    return roll;\r\n  }\r\n  static validateSubStat(state, substat) {\r\n    if (!substat || !substat.value) return { valid: true }\r\n    let value = parseFloat(substat.value);\r\n    if (isNaN(value)) return { valid: false, msg: `Invalid Input` }\r\n    let numStars = state.numStars\r\n    if (!numStars) return { valid: false, msg: `Artifact Stars not set.` }\r\n    let isFloat = Stat.getStatUnit(substat.key) === \"%\"\r\n    let rollData = this.getSubstatRollData(substat.key, numStars);\r\n    let rolls = this.getRolls(value, rollData, isFloat)\r\n\r\n    if (!rolls || rolls.length === 0) return { valid: false, msg: `Substat cannot be rolled 0 times.` };\r\n    let totalAllowableRolls = ArtifactStarsData[numStars]?.numUpgradesOrUnlocks - (4 - ArtifactStarsData[numStars]?.subBaseHigh) + 1;//+1 for its base roll\r\n    if (rolls.length > totalAllowableRolls) return { valid: false, msg: `Substat cannot be rolled more than ${totalAllowableRolls} times.` };\r\n\r\n    let min = rollData[0] * rolls.length;\r\n    let max = rollData[rollData.length - 1] * rolls.length;\r\n    return { valid: true, efficiency: clampPercent(((value - min) / (max - min)) * 100), msg: `This substat was rolled ${rolls.length} time(s). Values: [${rolls.join(\", \")}]`, rolls }\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static artifactValidation(state) {\r\n    let currentEfficiency = 0, maximumEfficiency = 0;\r\n    let subStatValidations = state.substats.map(substat => Artifact.validateSubStat(state, substat));\r\n    for (const substat of subStatValidations)\r\n      if (!substat.valid)\r\n        return { subStatValidations, valid: false, msg: \"One of the substat is invalid.\", currentEfficiency, maximumEfficiency }\r\n\r\n    //if a substat has >=2 rolls, when not all of them have been unlocked//if a substat has >=2 rolls, when not all of them have been unlocked\r\n    if (subStatValidations.some(substat => substat?.rolls?.length > 1) && subStatValidations.some((substat) => !substat.rolls))\r\n      return { subStatValidations, valid: false, msg: \"One of the substat have >1 rolls, but not all substats are unlocked.\", currentEfficiency, maximumEfficiency }\r\n    let currentNumOfRolls = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls ? cur.rolls.length : 0), 0);\r\n    let rollsRemaining = Artifact.rollsRemaining(state.level, state.numStars);\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(state.numStars);\r\n\r\n    if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n      return { subStatValidations, valid: false, msg: `Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `, currentEfficiency, maximumEfficiency }\r\n\r\n    let totalCurrentEfficiency = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls && cur.efficiency ? (cur.efficiency * cur.rolls.length) : 0), 0);\r\n    currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { valid: true, subStatValidations, currentNumOfRolls, rollsRemaining, totalPossbleUpgrade: totalPossbleRolls, currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getArtifactSets = (setKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = null) =>\r\n    deepClone(this.getArtifactSets(setKey)?.[setNumKey]?.stats || defVal)\r\n\r\n  static getArtifactConditionalStats = (setKey, setNumKey, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getArtifactSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      ArtifactData?.[setKey]?.sets && Object.entries(ArtifactData[setKey].sets).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getArtifactSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      if (ArtifactData?.[setKey]?.sets) {\r\n        let setNumKeys = Object.keys(ArtifactData[setKey].sets).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n        if (setNumKeys.length)\r\n          artifactSetEffect[setKey] = setNumKeys\r\n      }\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getArtifactSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = ArtifactData?.[setKey]?.sets?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getArtifactSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    ArtifactData?.[setKey]?.sets?.[setNumKey]?.conditional || defVal\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      let hasSetEffect = false\r\n      if (setObj.sets)\r\n        Object.entries(setObj.sets).forEach(([setNumKey, setEffectObj]) => {\r\n          if (setEffectObj.stats && Object.keys(setEffectObj.stats).length > 0) {\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n            hasSetEffect = true\r\n          }\r\n          if (setEffectObj.conditional) {\r\n            let conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n            if (conditionalNum) {\r\n              let condStats = this.getArtifactConditionalStats(setKey, setNumKey, conditionalNum)\r\n              if (condStats) {\r\n                setEffect[setNumKey] = deepClone(condStats)\r\n                hasSetEffect = true\r\n              }\r\n            }\r\n          }\r\n        })\r\n      if (hasSetEffect)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => id ? artifactDatabase[id] : null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null) \r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = (props) => <span className={props.colored ? \"text-5star\" : \"\"}>\r\n  {props.stars ? [...Array(props.stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n"],"sourceRoot":""}