{"version":3,"sources":["Components/StarDisplay.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/CustomFormControl.js","Data/WeaponData.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/ConditionalSelector.js","../node_modules/react-bootstrap/esm/Badge.js","StatConstants.js","StatDependency.js","Data/CharacterData.js","Components/StatIcon.js","dbV2KeyMap.js","DatabaseUtil.js","Components/CharacterSelection.js","../node_modules/react-bootstrap/esm/ElementChildren.js","Character/CharacterDisplay/DamageOptionsAndCalculation.js","Artifact/ArtifactCard.js","Artifact/PercentBadge.js","Character/StatInput.js","Components/StatDisplay.js","Components/WIPComponent.js","../node_modules/react-bootstrap/esm/ToggleButton.js","Character/CharacterDisplay/StatDisplayComponent.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ToggleButtonGroup.js","TestPage/TestDisplay.js","Util/Util.js","Stat.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Character/Character.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Util/ConditionalsUtil.js","Artifact/ArtifactDatabase.js","Data/ElementalData.js","StatData.js","Weapon/Weapon.js"],"names":["StarIcon","icon","faStar","Stars","stars","colored","className","Array","keys","map","_","i","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","CustomFormControl","float","placeholder","value","onValueChange","disabled","allowEmpty","useState","focus","setFocus","props","type","toString","onChange","e","target","parseFloat","parseInt","onFocus","onBlur","aria-label","WeaponData","WeaponDataImport","then","imp","default","WeaponLevelKeys","LevelNameData","WeaponTypeData","_objectWithoutProperties","source","excluded","key","sourceKeys","Object","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","ConditionalSelector","conditional","conditionalNum","setConditional","defEle","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","Badge","React","forwardRef","_ref","ref","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","hitTypes","hit","avgHit","critHit","hitMoves","normal","charged","plunging","skill","burst","hitElements","ElementalData","transformativeReactions","overloaded","name","variants","shattered","physical","electrocharged","superconduct","swirl","amplifyingReactions","vaporize","melt","ReactionMatrix","crystalize","GetFormulaDependency","formula","dependency","Set","Proxy","get","prop","receiver","add","formulaKeyDependency","freeze","fromEntries","Formulas","GetDependencies","modifiers","StatData","dependencies","forEach","InsertDependencies","has","k","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","critRate_","critDMG_","enerRech_","stamina","CharacterSpecializedStatKey","StatIcon","characterHP","faTint","finalHP","hp_","hp","baseATK","faFistRaised","characterATK","finalATK","atk_","atk","characterDEF","faShieldAlt","finalDEF","def_","def","eleMas","faMagic","faDice","faDiceD20","faSync","heal_","faFirstAid","StatIconEle","statKey","changes","char_ele_key","char_level","hp_base","hp_final","atk_character_base","atk_base","atk_final","atk_weapon","def_base","def_final","phy_dmg_bonus","phy_res","anemo_ele_dmg_bonus","geo_ele_dmg_bonus","electro_ele_dmg_bonus","hydro_ele_dmg_bonus","pyro_ele_dmg_bonus","cryo_ele_dmg_bonus","anemo_ele_res","geo_ele_res","electro_ele_res","hydro_ele_res","pyro_ele_res","cryo_ele_res","ener_rech","crit_rate","crit_dmg","stam","heal_bonu","inc_heal","pow_shield","red_cd","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","norm_atk_dmg","char_atk_dmg","plunge_dmg","norm_atk_crit_dmg","char_atk_crit_dmg","plunge_crit_dmg","norm_atk_avg_dmg","char_atk_avg_dmg","plunge_avg_dmg","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","skill_dmg_bonus","burst_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_crit_rate","burst_crit_rate","anemo_skill_dmg","anemo_burst_dmg","anemo_skill_crit_dmg","anemo_burst_crit_dmg","anemo_skill_avg_dmg","anemo_burst_avg_dmg","geo_skill_dmg","geo_burst_dmg","geo_skill_crit_dmg","geo_burst_crit_dmg","geo_skill_avg_dmg","geo_burst_avg_dmg","electro_skill_dmg","electro_burst_dmg","electro_skill_crit_dmg","electro_burst_crit_dmg","electro_skill_avg_dmg","electro_burst_avg_dmg","hydro_skill_dmg","hydro_burst_dmg","hydro_skill_crit_dmg","hydro_burst_crit_dmg","hydro_skill_avg_dmg","hydro_burst_avg_dmg","pyro_skill_dmg","pyro_burst_dmg","pyro_skill_crit_dmg","pyro_burst_crit_dmg","pyro_skill_avg_dmg","pyro_burst_avg_dmg","cryo_skill_dmg","cryo_burst_dmg","cryo_skill_crit_dmg","cryo_burst_crit_dmg","cryo_skill_avg_dmg","cryo_burst_avg_dmg","phy_dmg","phy_crit_dmg","phy_avg_dmg","anemo_ele_dmg","anemo_ele_crit_dmg","anemo_ele_avg_dmg","geo_ele_dmg","geo_ele_crit_dmg","geo_ele_avg_dmg","electro_ele_dmg","electro_ele_crit_dmg","electro_ele_avg_dmg","hydro_ele_dmg","hydro_ele_crit_dmg","hydro_ele_avg_dmg","pyro_ele_dmg","pyro_ele_crit_dmg","pyro_ele_avg_dmg","cryo_ele_dmg","cryo_ele_crit_dmg","cryo_ele_avg_dmg","overload_dmg","overload_dmg_bonus","overload_multi","electrocharged_dmg","electrocharged_dmg_bonus","electrocharged_multi","superconduct_dmg","superconduct_dmg_bonus","superconduct_multi","burning_dmg","burning_dmg_bonus","swirl_dmg","swirl_dmg_bonus","swirl_multi","shatter_dmg","shatter_dmg_bonus","shatter_multi","crystalize_dmg","crystalize_dmg_bonus","melt_dmg_bonus","vaporize_dmg_bonus","pyro_vaporize_normal_dmg","pyro_vaporize_normal_crit_dmg","pyro_vaporize_normal_avg_dmg","pyro_vaporize_chraged_dmg","pyro_vaporize_chraged_crit_dmg","pyro_vaporize_chraged_avg_dmg","pyro_vaporize_plunge_dmg","pyro_vaporize_plunge_crit_dmg","pyro_vaporize_plunge_avg_dmg","pyro_vaporize_skill_dmg","pyro_vaporize_skill_crit_dmg","pyro_vaporize_skill_avg_dmg","pyro_vaporize_burst_dmg","pyro_vaporize_burst_crit_dmg","pyro_vaporize_burst_avg_dmg","pyro_vaporize_ele_dmg","pyro_vaporize_ele_crit_dmg","pyro_vaporize_ele_avg_dmg","hydro_vaporize_normal_dmg","hydro_vaporize_normal_crit_dmg","hydro_vaporize_normal_avg_dmg","hydro_vaporize_chraged_dmg","hydro_vaporize_chraged_crit_dmg","hydro_vaporize_chraged_avg_dmg","hydro_vaporize_plunge_dmg","hydro_vaporize_plunge_crit_dmg","hydro_vaporize_plunge_avg_dmg","hydro_vaporize_skill_dmg","hydro_vaporize_skill_crit_dmg","hydro_vaporize_skill_avg_dmg","hydro_vaporize_burst_dmg","hydro_vaporize_burst_crit_dmg","hydro_vaporize_burst_avg_dmg","hydro_vaporize_ele_dmg","hydro_vaporize_ele_crit_dmg","hydro_vaporize_ele_avg_dmg","pyro_melt_normal_dmg","pyro_melt_normal_crit_dmg","pyro_melt_normal_avg_dmg","pyro_melt_chraged_dmg","pyro_melt_chraged_crit_dmg","pyro_melt_chraged_avg_dmg","pyro_melt_plunge_dmg","pyro_melt_plunge_crit_dmg","pyro_melt_plunge_avg_dmg","pyro_melt_skill_dmg","pyro_melt_skill_crit_dmg","pyro_melt_skill_avg_dmg","pyro_melt_burst_dmg","pyro_melt_burst_crit_dmg","pyro_melt_burst_avg_dmg","pyro_melt_ele_dmg","pyro_melt_ele_crit_dmg","pyro_melt_ele_avg_dmg","cryo_melt_normal_dmg","cryo_melt_normal_crit_dmg","cryo_melt_normal_avg_dmg","cryo_melt_chraged_dmg","cryo_melt_chraged_crit_dmg","cryo_melt_chraged_avg_dmg","cryo_melt_plunge_dmg","cryo_melt_plunge_crit_dmg","cryo_melt_plunge_avg_dmg","cryo_melt_skill_dmg","cryo_melt_skill_crit_dmg","cryo_melt_skill_avg_dmg","cryo_melt_burst_dmg","cryo_melt_burst_crit_dmg","cryo_melt_burst_avg_dmg","cryo_melt_ele_dmg","cryo_melt_ele_crit_dmg","cryo_melt_ele_avg_dmg","enemy_phy_res","enemy_phy_res_multi","enemy_phy_immunity","anemo_enemy_ele_res","anemo_enemy_ele_res_multi","anemo_enemy_ele_immunity","geo_enemy_ele_res","geo_enemy_ele_res_multi","geo_enemy_ele_immunity","electro_enemy_ele_res","electro_enemy_ele_res_multi","electro_enemy_ele_immunity","hydro_enemy_ele_res","hydro_enemy_ele_res_multi","hydro_enemy_ele_immunity","pyro_enemy_ele_res","pyro_enemy_ele_res_multi","pyro_enemy_ele_immunity","cryo_enemy_ele_res","cryo_enemy_ele_res_multi","cryo_enemy_ele_immunity","ele_mas","amp_reaction_base_multi","enemy_level_multi","enemy_level","dmgModeToHitMode","avg_dmg","dmg","DatabaseInitAndVerify","dbVersion","getDatabaseVersion","localStorage","filter","startsWith","character","loadFromLocalStorage","characterKey","equippedArtifacts","dbKey","getItem","id","dmgMode","rest","buildSetting","mainStat","stat","v2change","statFilters","entries","hitMode","saveToLocalStorage","values","artid","art","location","removeItem","ArtifactDisplayState","filterMainStatKey","filterSubstats","charDBJustPopualted","CharacterDatabase","populateDatebaseFromLocalStorage","artDBJustPopualted","ArtifactDatabase","getArtifactDatabase","valid","artInSlotId","getArtifactIDFromSlot","slotKey","equipArtifact","Artifact","substatsValidation","numStars","keyMapping","setKey","mainStatKey","endsWith","replace","substats","obj","updateArtifact","chars","getCharacterDatabase","equippedArt","moveToNewLocation","artifactConditionals","cond","srcKey","srcKey2","updateCharacter","setDatabaseVersion","defVal","version","CharacterSelectionDropdownList","onSelect","getCharacterKeyList","sort","a","b","Character","getName","children","func","index","Children","child","isValidElement","ReactionToggle","reactionMode","setReactionMode","charEleKey","getElementalKey","includes","defaultValue","val","src","HitModeToggle","setHitMode","CalculationDisplay","build","getDisplayStatKeys","talentKey","fields","header","getTalentName","bg","Header","Body","field","fieldIndex","subFormulaKeys","Stat","getPrintableFormulaStatKeyList","finalStats","reverse","Boolean","Card","eventKey","printStat","Collapse","subKey","printFormula","talentField","getTalentField","sectionIndex","fieldText","getTalentFieldValue","fieldVariant","fieldFormulaText","fieldFormula","fieldFormulaDependency","fieldValue","toFixed","ContextAwareToggle","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","expanded","faWindowMinimize","faWindowMaximize","DamageOptionsAndCalculation","setState","setOverride","newBuild","equippedBuild","xs","r","Button","href","rel","xl","getStatValueWithOverride","getStatNameRaw","getBaseStatValue","getElementalKeys","eleKey","immunityStatKey","elementImmunity","prependEle","m","ArtifactCard","artifactId","artifactObj","forceUpdate","onEdit","onDelete","assumeFull","lock","currentEfficiency","maximumEfficiency","mainStatLevel","assFullColor","mainStatVal","getMainStatValue","getStatUnit","artifactValid","every","sstat","rolls","equipOnChar","charKey","equipArtifactOnChar","border","md","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Title","getSetName","getStatName","numRolls","efficiency","effOpacity","statName","style","opacity","percent","Footer","Divider","ckey","placement","overlay","pointerEvents","faLock","faLockOpen","faEdit","faTrashAlt","PercentBadge","badgeColor","isNaN","Math","floor","StatInput","restProps","Prepend","Text","Append","undefined","faUndo","DisplayStatDiff","label","oldVal","fixed","unit","diff","oldText","diffText","StatDisplay","editable","invalid","fixedUnit","labelVariant","hasOverride","WIPComponent","noop","ToggleButton","checked","inputRef","_useState","focused","setFocused","handleFocus","useCallback","tagName","handleBlur","active","autoComplete","StatDisplayComponent","statsDisplayKeys","cardbg","JSON","stringify","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","TabContext","Provider","SelectableContext","TabContent","decoratedBsPrefix","TabPane","_useTabContext","context","shouldTransition","makeEventKey","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","Tab","_React$Component","apply","this","arguments","_inheritsLoose","render","Error","Container","Content","Pane","CharacterArtifactPane","artifactsAssumeFull","statKeys","hasTalentPage","Row","Col","equipArtifacts","artifactIds","Alert","sm","lg","getSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","ConditionalsUtil","getConditionalNum","getConditionalStats","conditionalElement","cnum","state","setStateArtifactConditional","getSetEffectText","getSlotKeys","CharacterOverviewPane","constellation","setConstellation","editLevel","setEditLevel","elementKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","Image","getStar","InputGroup","clamp","getLevel","levelKey","OverlayTrigger","Tooltip","faSave","getConstellationName","getConstellationImg","roundedCircle","WeaponStatsEditorCard","MainStatsCards","StatItem","getStatVariant","WeaponStatsCard","title","stats","mkey","modifier","reduce","accu","multiplier","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","subStatKey","Weapon","getWeaponSubStatKey","weaponDisplayMainVal","overrideMainVal","getWeaponMainStatVal","weaponDisplaySubVal","overrideSubVal","getWeaponSubStatVal","weaponPassiveName","getWeaponPassiveName","weaponBonusStats","getWeaponBonusStat","refineIndex","conditionalStats","getWeaponConditionalStat","getWeaponConditional","conditionalEle","faQuoteLeft","getWeaponImg","getWeaponRarity","DropdownButton","getWeaponName","star","arr","Dropdown","ItemText","getWeaponsOfType","rarity","weaponObj","getLevelName","faGavel","getWeaponPassiveDescription","getWeaponDescription","editingOther","SetEditingOther","editingMisc","SetEditingMisc","additionalKeys","displayStatKeys","push","editStatKeys","otherStatKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","isPercentSpecialStatSelect","displayNewBuildProps","getStatNamePretty","getStatNameWithPercent","CharacterTalentPane","ascension","getAscension","skillDisplayProps","ReactionDisplay","tKey","tText","SkillDisplayCard","subtitle","getTalent","asc","enabled","onClickTitle","ReactionComponents","superconduct_hit","sKey","electrocharged_hit","overloaded_hit","pyro_swirl_hit","swirlEleToDisplay","setele","element","shattered_hit","information","faQuestionCircle","cursor","crystalize_hit","eleInterArr","ElementToReactionKeys","Ele","modifiersToFields","mStatKey","formulaText","statsToFields","statVal","flat","talentLimits","talentLevelKeys","autoInfused","otherProps","infuseBtn","isAutoInfusable","getElementalName","talentLvlKey","talentLvlKeyRaw","levelBoost","getTalentLevelBoost","tLvl","stateTalentLevelKeys","talentStats","getTalentStats","statsEle","ListGroup","FieldDisplay","getTalentImg","Subtitle","getTalentDocument","section","talentText","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","compareAgainstEquipped","fieldBasic","fieldVal","fixedVal","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","CharacterDisplayCard","forceUpdateComponent","setCharacterKey","getInitialState","char","getIntialWeapon","setLevelKey","baseStatOverrides","Promise","all","getCharacterDataImport","getWeaponDataImport","getDataImport","deepClone","prevProps","footer","onClose","tabName","calculateBuild","HeaderIconDisplay","getThumb","commonPaneProps","u","ButtonGroup","DropdownToggle","getAllCharacterKeys","getlevelNames","getlevelKeys","lvlKey","faTimes","defaultActiveKey","Nav","Link","initialState","auto","ToggleButtonGroup","controlledProps","getValues","concat","invariant","toggle","_child$props","childVal","childOnChange","cloneElement","chainFunction","inputVal","event","isActive","n","handleToggle","vertical","TestDisplay","getRandomElementFromArray","array","random","getRandomIntInclusive","min","max","ceil","data","parse","setItem","closeEnoughFloat","abs","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","objMultiplication","multi","htmlStatsData","pretty","f","expand","statList","formulaKeys","FormulaText","newModifiersKeys","x","modifierText","options","statUnit","reactionMatrixElementRenderer","o","sign","disVal","powerText","heal_multi","enemyLevel_multi","res","move","assign","amplificative_dmg_","reaction","baseMulti","transformative_dmg_","crystalize_eleMas_","crystalize_multi","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","formulaDB","getCDataObj","formulaKey","tk","find","remove","getSpecializedStatKey","getSpeicalizedStatVal","getWeaponMainStatValWithOverride","characterObj","baseStat","getIndexFromlevelkey","elementalKey","getElementalKeysWithoutPhysical","constellationName","getTitles","titles","getSpecializedStat","specializeStat","thumbImg","cardImg","img","constIndex","talent","talents","talentBoost","boostEntry","document","getTalentDocumentSections","getTalentStatsAll","statsArr","getTalentConditional","sections","tempCond","getConditionalProp","stacks","isAutoElemental","infusable","basicKeys","transReactions","charFormulas","genericAvgHit","reactions","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","PreprocessFormulas","mergeStats","characterEle","weaponType","overrides","hasOwnProperty","specialStatKey","s","weaponSubKey","getWeaponSubStatValWithOverride","initiated","characterDatabase","isInvalid","getIdNameList","split","dchar","unequipArtifactOnSlot","equipArtifactBuild","unequipAllArtifacts","clearDatabase","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","physical_dmg_","ele_dmg_","2","ArtifactSubStatsData","ArtifactSubstatsMinMax","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","getSubstatEfficiency","getArtifactEfficiency","errMsgs","some","currentNumOfRolls","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","maxPerRoll","getSubstatAllMax","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","icons","getSetEffectsObj","setEffects","artifactSetEffect","artArr","setNumKeys","charFinalStats","setEffectText","getSlotName","getSlotIcon","getSlotMainStatKeys","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","main","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","_createForOfIteratorHelper","allowArrayLike","it","F","done","_e","err","normalCompletion","didErr","step","next","_e2","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","const","characterLevel","weaponATK","dmg_","weakspotDMG_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","staminaDec_","staminaGlidingDec_","staminaChargedDec_","crystalize_dmg_","burning_dmg_","enemyLevel","enemyDEFRed_","pow","dependencyKeys","debug","constData","formulaList","tmp","constModifier","dynamicModifier","constFunc","dynamicFunc","funcIndicator","console","log","error","moveName","eleName","opt","typeName","getLevelIndex","weaponKey","passiveName","passiveDescription","description","baseStats","sub","getWeaponTypeName","getWeaponTypeKeys"],"mappings":"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","file":"static/js/9.c60fefc3.chunk.js","sourcesContent":["import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst CustomFormControl = ({ float = false, placeholder, value, onValueChange, disabled, allowEmpty = false }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  let displayValue = value\r\n  if (allowEmpty) displayValue = typeof value === \"number\" ? value : \"\"\r\n  else displayValue = !value && focus ? \"\" : (value?.toString?.() || value)\r\n  const props = {\r\n    type: \"number\",\r\n    className: \"hide-appearance\",\r\n    placeholder,\r\n    value: displayValue,\r\n    disabled,\r\n    onChange: (e) => {\r\n      let value = e.target.value;\r\n      if (float) {\r\n        if (allowEmpty) value = value === \"\" ? null : (parseFloat(value) || 0)\r\n        else value = parseFloat(value) || 0\r\n      } else {\r\n        if (allowEmpty) value = value === \"\" ? null : (parseInt(value) || 0)\r\n        else value = parseInt(value) || 0\r\n      }\r\n      onValueChange?.(value);\r\n    },\r\n    onFocus: () => setFocus(true),\r\n    onBlur: () => setFocus(false),\r\n  }\r\n  return <FormControl {...props} aria-label=\"custom-input\" />\r\n}\r\nexport default CustomFormControl;","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import ElementalData from \"./Data/ElementalData\";\r\n\r\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\r\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\r\nexport const hitElements = ElementalData\r\nexport const transformativeReactions = {\r\n  overloaded: { name: \"Overloaded\", variants: { pyro: 4 } },\r\n  shattered: { name: \"Shattered\", variants: { physical: 3 } },\r\n  electrocharged: { name: \"Electro-Charged\", variants: { electro: 2.4 } },\r\n  superconduct: { name: \"Superconduct\", variants: { cryo: 1 } },\r\n  swirl: { name: \"Swirl\", variants: { pyro: 1.2, hydro: 1.2, electro: 1.2, cryo: 1.2 } },\r\n}\r\nexport const amplifyingReactions = {\r\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\r\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\r\n}\r\nexport const otherReactions = {\r\n  burning: \"Burning\",\r\n  crystalize: \"Crystalize\",\r\n}\r\nexport const ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\n","import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\r\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key) &&\r\n        console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\r\n  )\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    StatData[formulaKey]?.const && dependencies.forEach(key => \r\n      !StatData[key]?.const &&\r\n        console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\r\n    )\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\r\nconst reduceOptimizationTarget = (optimizationTarget) =>\r\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0]] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\r\n\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n  reduceOptimizationTarget,\r\n}\r\n","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  critRate_: 5,\r\n  critDMG_: 50,\r\n  enerRech_: 100,\r\n  stamina: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  characterHP: faTint,\r\n  finalHP: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  baseATK: faFistRaised,\r\n  characterATK: faFistRaised,\r\n  finalATK: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  characterDEF: faShieldAlt,\r\n  finalDEF: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  eleMas: faMagic,\r\n  critRate_: faDice,\r\n  critDMG_: faDiceD20,\r\n  enerRech_: faSync,\r\n  heal_: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","//for DB v2, we changed a bunch of keys.\r\nconst changes = {\r\n  char_ele_key: \"characterEle\",\r\n  char_level: \"characterLevel\",\r\n\r\n  hp_base: \"characterHP\",\r\n  hp_final: \"finalHP\",\r\n  atk_character_base: \"characterATK\",\r\n  atk_base: \"baseATK\",\r\n  atk_final: \"finalATK\",\r\n  atk_weapon: \"weaponATK\",\r\n  def_base: \"characterDEF\",\r\n  def_final: \"finalDEF\",\r\n  phy_dmg_bonus: \"physical_dmg_\",\r\n  phy_res: \"physical_res_\",\r\n  anemo_ele_dmg_bonus: \"anemo_dmg_\",\r\n  geo_ele_dmg_bonus: \"geo_dmg_\",\r\n  electro_ele_dmg_bonus: \"electro_dmg_\",\r\n  hydro_ele_dmg_bonus: \"hydro_dmg_\",\r\n  pyro_ele_dmg_bonus: \"pyro_dmg_\",\r\n  cryo_ele_dmg_bonus: \"cryo_dmg_\",\r\n  anemo_ele_res: \"anemo_res_\",\r\n  geo_ele_res: \"geo_res_\",\r\n  electro_ele_res: \"electro_res_\",\r\n  hydro_ele_res: \"hydro_res_\",\r\n  pyro_ele_res: \"pyro_res_\",\r\n  cryo_ele_res: \"cryo_res_\",\r\n  ener_rech: \"enerRech_\",\r\n  crit_rate: \"critRate_\",\r\n  crit_dmg: \"critDMG_\",\r\n  stam: \"stamina\",\r\n  heal_bonu: \"heal_\",\r\n  inc_heal: \"incHeal_\",\r\n  pow_shield: \"powShield_\",\r\n  red_cd: \"cdRed_\",\r\n  skill_cd_red: \"skillCDRed_\",\r\n  burst_cd_red: \"burstCDRed_\",\r\n  all_dmg_bonus: \"dmg_\",\r\n  move_spd: \"moveSPD_\",\r\n  atk_spd: \"atkSPD_\",\r\n  weakspot_dmg: \"weakspotDMG_\",\r\n  stamina_dec: \"staminaDec_\",\r\n  stamina_gliding_dec: \"staminaGlidingDec_\",\r\n  stamina_charged_dec: \"staminaChargedDec_\",\r\n  ele_mas_multi_x: \"eleMasX\",\r\n  ele_mas_multi_y: \"eleMasY\",\r\n  ele_mas_multi_z: \"eleMasZ\",\r\n\r\n  norm_atk_dmg: \"physical_normal_hit\",\r\n  char_atk_dmg: \"physical_charged_hit\",\r\n  plunge_dmg: \"physical_plunging_hit\",\r\n  norm_atk_crit_dmg: \"physical_normal_critHit\",\r\n  char_atk_crit_dmg: \"physical_charged_critHit\",\r\n  plunge_crit_dmg: \"physical_plunging_critHit\",\r\n  norm_atk_avg_dmg: \"physical_normal_avgHit\",\r\n  char_atk_avg_dmg: \"physical_charged_avgHit\",\r\n  plunge_avg_dmg: \"physical_plunging_avgHit\",\r\n  norm_atk_dmg_bonus: \"normal_dmg_\",\r\n  char_atk_dmg_bonus: \"charged_dmg_\",\r\n  plunge_atk_dmg_bonus: \"plunging_dmg_\",\r\n  skill_dmg_bonus: \"skill_dmg_\",\r\n  burst_dmg_bonus: \"burst_dmg_\",\r\n  norm_atk_crit_rate: \"normal_critRate_\",\r\n  char_atk_crit_rate: \"charged_critRate_\",\r\n  skill_crit_rate: \"skill_critRate_\",\r\n  burst_crit_rate: \"burst_critRate_\",\r\n\r\n  anemo_skill_dmg: \"anemo_skill_hit\",\r\n  anemo_burst_dmg: \"anemo_burst_hit\",\r\n  anemo_skill_crit_dmg: \"anemo_skill_critHit\",\r\n  anemo_burst_crit_dmg: \"anemo_burst_critHit\",\r\n  anemo_skill_avg_dmg: \"anemo_skill_avgHit\",\r\n  anemo_burst_avg_dmg: \"anemo_burst_avgHit\",\r\n  geo_skill_dmg: \"geo_skill_hit\",\r\n  geo_burst_dmg: \"geo_burst_hit\",\r\n  geo_skill_crit_dmg: \"geo_skill_critHit\",\r\n  geo_burst_crit_dmg: \"geo_burst_critHit\",\r\n  geo_skill_avg_dmg: \"geo_skill_avgHit\",\r\n  geo_burst_avg_dmg: \"geo_burst_avgHit\",\r\n  electro_skill_dmg: \"electro_skill_hit\",\r\n  electro_burst_dmg: \"electro_burst_hit\",\r\n  electro_skill_crit_dmg: \"electro_skill_critHit\",\r\n  electro_burst_crit_dmg: \"electro_burst_critHit\",\r\n  electro_skill_avg_dmg: \"electro_skill_avgHit\",\r\n  electro_burst_avg_dmg: \"electro_burst_avgHit\",\r\n  hydro_skill_dmg: \"hydro_skill_hit\",\r\n  hydro_burst_dmg: \"hydro_burst_hit\",\r\n  hydro_skill_crit_dmg: \"hydro_skill_critHit\",\r\n  hydro_burst_crit_dmg: \"hydro_burst_critHit\",\r\n  hydro_skill_avg_dmg: \"hydro_skill_avgHit\",\r\n  hydro_burst_avg_dmg: \"hydro_burst_avgHit\",\r\n  pyro_skill_dmg: \"pyro_skill_hit\",\r\n  pyro_burst_dmg: \"pyro_burst_hit\",\r\n  pyro_skill_crit_dmg: \"pyro_skill_critHit\",\r\n  pyro_burst_crit_dmg: \"pyro_burst_critHit\",\r\n  pyro_skill_avg_dmg: \"pyro_skill_avgHit\",\r\n  pyro_burst_avg_dmg: \"pyro_burst_avgHit\",\r\n  cryo_skill_dmg: \"cryo_skill_hit\",\r\n  cryo_burst_dmg: \"cryo_burst_hit\",\r\n  cryo_skill_crit_dmg: \"cryo_skill_critHit\",\r\n  cryo_burst_crit_dmg: \"cryo_burst_critHit\",\r\n  cryo_skill_avg_dmg: \"cryo_skill_avgHit\",\r\n  cryo_burst_avg_dmg: \"cryo_burst_avgHit\",\r\n\r\n  phy_dmg: \"physical_hit\",\r\n  phy_crit_dmg: \"physical_critHit\",\r\n  phy_avg_dmg: \"physical_avgHit\",\r\n  anemo_ele_dmg: \"anemo_hit\",\r\n  anemo_ele_crit_dmg: \"anemo_critHit\",\r\n  anemo_ele_avg_dmg: \"anemo_avgHit\",\r\n  geo_ele_dmg: \"geo_hit\",\r\n  geo_ele_crit_dmg: \"geo_critHit\",\r\n  geo_ele_avg_dmg: \"geo_avgHit\",\r\n  electro_ele_dmg: \"electro_hit\",\r\n  electro_ele_crit_dmg: \"electro_critHit\",\r\n  electro_ele_avg_dmg: \"electro_avgHit\",\r\n  hydro_ele_dmg: \"hydro_hit\",\r\n  hydro_ele_crit_dmg: \"hydro_critHit\",\r\n  hydro_ele_avg_dmg: \"hydro_avgHit\",\r\n  pyro_ele_dmg: \"pyro_hit\",\r\n  pyro_ele_crit_dmg: \"pyro_critHit\",\r\n  pyro_ele_avg_dmg: \"pyro_avgHit\",\r\n  cryo_ele_dmg: \"cryo_hit\",\r\n  cryo_ele_crit_dmg: \"cryo_critHit\",\r\n  cryo_ele_avg_dmg: \"cryo_avgHit\",\r\n\r\n  overload_dmg: \"overload_hit\",\r\n  overload_dmg_bonus: \"overload_dmg_\",\r\n  overload_multi: \"overload_multi\",\r\n  electrocharged_dmg: \"electrocharged_hit\",\r\n  electrocharged_dmg_bonus: \"electrocharged_dmg_\",\r\n  electrocharged_multi: \"electrocharged_multi\",\r\n  superconduct_dmg: \"superconduct_hit\",\r\n  superconduct_dmg_bonus: \"superconduct_dmg_\",\r\n  superconduct_multi: \"superconduct_multi\",\r\n  burning_dmg: \"burning_hit\",\r\n  burning_dmg_bonus: \"burning_dmg_\",\r\n  swirl_dmg: \"swirl_hit\",\r\n  swirl_dmg_bonus: \"swirl_dmg_\",\r\n  swirl_multi: \"swirl_multi\",\r\n  shatter_dmg: \"shattered_hit\",\r\n  shatter_dmg_bonus: \"shattered_dmg_\",\r\n  shatter_multi: \"shattered_multi\",\r\n  crystalize_dmg: \"crystalize_hit\",\r\n  crystalize_dmg_bonus: \"crystalize_dmg_\",\r\n\r\n  melt_dmg_bonus: \"melt_dmg_\",\r\n  vaporize_dmg_bonus: \"vaporize_dmg_\",\r\n\r\n  pyro_vaporize_normal_dmg: \"pyro_vaporize_normal_hit\",\r\n  pyro_vaporize_normal_crit_dmg: \"pyro_vaporize_normal_critHit\",\r\n  pyro_vaporize_normal_avg_dmg: \"pyro_vaporize_normal_avgHit\",\r\n  pyro_vaporize_chraged_dmg: \"pyro_vaporize_chraged_hit\",\r\n  pyro_vaporize_chraged_crit_dmg: \"pyro_vaporize_chraged_critHit\",\r\n  pyro_vaporize_chraged_avg_dmg: \"pyro_vaporize_chraged_avgHit\",\r\n  pyro_vaporize_plunge_dmg: \"pyro_vaporize_plunging_hit\",\r\n  pyro_vaporize_plunge_crit_dmg: \"pyro_vaporize_plunging_critHit\",\r\n  pyro_vaporize_plunge_avg_dmg: \"pyro_vaporize_plunging_avgHit\",\r\n  pyro_vaporize_skill_dmg: \"pyro_vaporize_skill_hit\",\r\n  pyro_vaporize_skill_crit_dmg: \"pyro_vaporize_skill_critHit\",\r\n  pyro_vaporize_skill_avg_dmg: \"pyro_vaporize_skill_avgHit\",\r\n  pyro_vaporize_burst_dmg: \"pyro_vaporize_burst_hit\",\r\n  pyro_vaporize_burst_crit_dmg: \"pyro_vaporize_burst_critHit\",\r\n  pyro_vaporize_burst_avg_dmg: \"pyro_vaporize_burst_avgHit\",\r\n  pyro_vaporize_ele_dmg: \"pyro_vaporize_hit\",\r\n  pyro_vaporize_ele_crit_dmg: \"pyro_vaporize_critHit\",\r\n  pyro_vaporize_ele_avg_dmg: \"pyro_vaporize_avgHit\",\r\n  hydro_vaporize_normal_dmg: \"hydro_vaporize_normal_hit\",\r\n  hydro_vaporize_normal_crit_dmg: \"hydro_vaporize_normal_critHit\",\r\n  hydro_vaporize_normal_avg_dmg: \"hydro_vaporize_normal_avgHit\",\r\n  hydro_vaporize_chraged_dmg: \"hydro_vaporize_chraged_hit\",\r\n  hydro_vaporize_chraged_crit_dmg: \"hydro_vaporize_chraged_critHit\",\r\n  hydro_vaporize_chraged_avg_dmg: \"hydro_vaporize_chraged_avgHit\",\r\n  hydro_vaporize_plunge_dmg: \"hydro_vaporize_plunging_hit\",\r\n  hydro_vaporize_plunge_crit_dmg: \"hydro_vaporize_plunging_critHit\",\r\n  hydro_vaporize_plunge_avg_dmg: \"hydro_vaporize_plunging_avgHit\",\r\n  hydro_vaporize_skill_dmg: \"hydro_vaporize_skill_hit\",\r\n  hydro_vaporize_skill_crit_dmg: \"hydro_vaporize_skill_critHit\",\r\n  hydro_vaporize_skill_avg_dmg: \"hydro_vaporize_skill_avgHit\",\r\n  hydro_vaporize_burst_dmg: \"hydro_vaporize_burst_hit\",\r\n  hydro_vaporize_burst_crit_dmg: \"hydro_vaporize_burst_critHit\",\r\n  hydro_vaporize_burst_avg_dmg: \"hydro_vaporize_burst_avgHit\",\r\n  hydro_vaporize_ele_dmg: \"hydro_vaporize_hit\",\r\n  hydro_vaporize_ele_crit_dmg: \"hydro_vaporize_critHit\",\r\n  hydro_vaporize_ele_avg_dmg: \"hydro_vaporize_avgHit\",\r\n  pyro_melt_normal_dmg: \"pyro_melt_normal_hit\",\r\n  pyro_melt_normal_crit_dmg: \"pyro_melt_normal_critHit\",\r\n  pyro_melt_normal_avg_dmg: \"pyro_melt_normal_avgHit\",\r\n  pyro_melt_chraged_dmg: \"pyro_melt_chraged_hit\",\r\n  pyro_melt_chraged_crit_dmg: \"pyro_melt_chraged_critHit\",\r\n  pyro_melt_chraged_avg_dmg: \"pyro_melt_chraged_avgHit\",\r\n  pyro_melt_plunge_dmg: \"pyro_melt_plunging_hit\",\r\n  pyro_melt_plunge_crit_dmg: \"pyro_melt_plunging_critHit\",\r\n  pyro_melt_plunge_avg_dmg: \"pyro_melt_plunging_avgHit\",\r\n  pyro_melt_skill_dmg: \"pyro_melt_skill_hit\",\r\n  pyro_melt_skill_crit_dmg: \"pyro_melt_skill_critHit\",\r\n  pyro_melt_skill_avg_dmg: \"pyro_melt_skill_avgHit\",\r\n  pyro_melt_burst_dmg: \"pyro_melt_burst_hit\",\r\n  pyro_melt_burst_crit_dmg: \"pyro_melt_burst_critHit\",\r\n  pyro_melt_burst_avg_dmg: \"pyro_melt_burst_avgHit\",\r\n  pyro_melt_ele_dmg: \"pyro_melt_hit\",\r\n  pyro_melt_ele_crit_dmg: \"pyro_melt_critHit\",\r\n  pyro_melt_ele_avg_dmg: \"pyro_melt_avgHit\",\r\n  cryo_melt_normal_dmg: \"cryo_melt_normal_hit\",\r\n  cryo_melt_normal_crit_dmg: \"cryo_melt_normal_critHit\",\r\n  cryo_melt_normal_avg_dmg: \"cryo_melt_normal_avgHit\",\r\n  cryo_melt_chraged_dmg: \"cryo_melt_chraged_hit\",\r\n  cryo_melt_chraged_crit_dmg: \"cryo_melt_chraged_critHit\",\r\n  cryo_melt_chraged_avg_dmg: \"cryo_melt_chraged_avgHit\",\r\n  cryo_melt_plunge_dmg: \"cryo_melt_plunging_hit\",\r\n  cryo_melt_plunge_crit_dmg: \"cryo_melt_plunging_critHit\",\r\n  cryo_melt_plunge_avg_dmg: \"cryo_melt_plunging_avgHit\",\r\n  cryo_melt_skill_dmg: \"cryo_melt_skill_hit\",\r\n  cryo_melt_skill_crit_dmg: \"cryo_melt_skill_critHit\",\r\n  cryo_melt_skill_avg_dmg: \"cryo_melt_skill_avgHit\",\r\n  cryo_melt_burst_dmg: \"cryo_melt_burst_hit\",\r\n  cryo_melt_burst_crit_dmg: \"cryo_melt_burst_critHit\",\r\n  cryo_melt_burst_avg_dmg: \"cryo_melt_burst_avgHit\",\r\n  cryo_melt_ele_dmg: \"cryo_melt_hit\",\r\n  cryo_melt_ele_crit_dmg: \"cryo_melt_critHit\",\r\n  cryo_melt_ele_avg_dmg: \"cryo_melt_avgHit\",\r\n\r\n  enemy_phy_res: \"physical_enemyRes_\",\r\n  enemy_phy_res_multi: \"physical_enemyRes_multi\",\r\n  enemy_phy_immunity: \"physical_enemyImmunity\",\r\n  anemo_enemy_ele_res: \"anemo_enemyRes_\",\r\n  anemo_enemy_ele_res_multi: \"anemo_enemyRes_multi\",\r\n  anemo_enemy_ele_immunity: \"anemo_enemyImmunity\",\r\n  geo_enemy_ele_res: \"geo_enemyRes_\",\r\n  geo_enemy_ele_res_multi: \"geo_enemyRes_multi\",\r\n  geo_enemy_ele_immunity: \"geo_enemyImmunity\",\r\n  electro_enemy_ele_res: \"electro_enemyRes_\",\r\n  electro_enemy_ele_res_multi: \"electro_enemyRes_multi\",\r\n  electro_enemy_ele_immunity: \"electro_enemyImmunity\",\r\n  hydro_enemy_ele_res: \"hydro_enemyRes_\",\r\n  hydro_enemy_ele_res_multi: \"hydro_enemyRes_multi\",\r\n  hydro_enemy_ele_immunity: \"hydro_enemyImmunity\",\r\n  pyro_enemy_ele_res: \"pyro_enemyRes_\",\r\n  pyro_enemy_ele_res_multi: \"pyro_enemyRes_multi\",\r\n  pyro_enemy_ele_immunity: \"pyro_enemyImmunity\",\r\n  cryo_enemy_ele_res: \"cryo_enemyRes_\",\r\n  cryo_enemy_ele_res_multi: \"cryo_enemyRes_multi\",\r\n  cryo_enemy_ele_immunity: \"cryo_enemyImmunity\",\r\n\r\n  ele_mas: \"eleMas\",\r\n  amp_reaction_base_multi: \"ampReactionBase_multi\",\r\n\r\n  enemy_level_multi: \"enemyLevel_multi\",\r\n  enemy_level: \"enemyLevel\"\r\n}\r\n/*\r\nconst same = [\r\n  hp, hp_, atk, atk_, def, def_, pyro_vaporize_multi, hydro_vaporize_multi, pyro_melt_multi, cryo_melt_multi,\r\n]\r\n\r\nconst removed = [\r\n  norm_atk_crit_multi, char_atk_crit_multi, norm_atk_bonus_multi, char_atk_bonus_multi, plunge_bonus_multi, skill_crit_multi, burst_crit_multi, skill_bonus_multi, burst_bonus_multi, phy_bonus_multi, anemo_ele_bonus_multi, geo_ele_bonus_multi, electro_ele_bonus_multi, hydro_ele_bonus_multi, pyro_ele_bonus_multi, cryo_ele_bonus_multi, crit_dmg_multi, crit_multi,\r\n]\r\n\r\nconst aded = [\r\n  plunging_critRate_, final_normal_critRate_, final_charged_critRate_, final_plunging_critRate_, final_skill_critRate_, final_burst_critRate_,\r\n]\r\n*/\r\n\r\n//renamed dmgMode to hitMode\r\nconst dmgModeToHitMode = {\r\n  avg_dmg: \"avgHit\",\r\n  dmg: \"hit\",\r\n  crit_dmg: \"critHit\"\r\n}\r\nexport { changes, dmgModeToHitMode }","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\nimport { changes as v2change, dmgModeToHitMode } from \"./dbV2KeyMap\";\r\nimport { loadFromLocalStorage, saveToLocalStorage } from \"./Util/Util\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  const dbVersion = getDatabaseVersion()\r\n  //edit the data before the database is populated\r\n  if (dbVersion < 2) {\r\n    //made characters unique, so need to convert character_{NUMBER} to char_{characterKey}. Will only save the 1st instance of a character.\r\n    Object.keys(localStorage).filter(key => key.startsWith(\"character_\")).forEach(key => {\r\n      const character = loadFromLocalStorage(key);\r\n      const { characterKey, equippedArtifacts = {} } = character\r\n      const dbKey = `char_${characterKey}`\r\n      if (localStorage.getItem(dbKey) === null) {\r\n        //if there is no character saved, create a new character\r\n        const { id, name, dmgMode, ...rest } = character\r\n        if (Array.isArray(rest?.buildSetting?.mainStat))\r\n          rest.buildSetting.mainStat = rest.buildSetting.mainStat.map(stat => stat in v2change ? v2change[stat] : stat)\r\n        if (typeof rest?.buildSetting?.statFilters === \"object\")\r\n          rest.buildSetting.statFilters = Object.fromEntries(Object.entries(rest.buildSetting.statFilters).map(([stat, value]) => [stat in v2change ? v2change[stat] : stat, value]))\r\n        rest.hitMode = dmgModeToHitMode[dmgMode] ?? Object.keys(dmgModeToHitMode)[0]\r\n        saveToLocalStorage(dbKey, rest)\r\n        //equip to the new character\r\n        Object.values(equippedArtifacts).forEach(artid => {\r\n          const art = loadFromLocalStorage(artid);\r\n          if (!art) return\r\n          art.location = characterKey\r\n          saveToLocalStorage(artid, art)\r\n        });\r\n      } else {\r\n        //if the character does exist, \"move\" the artifacts equipped to inventory\r\n        Object.values(equippedArtifacts).forEach(artid => {\r\n          const art = loadFromLocalStorage(artid);\r\n          if (!art) return\r\n          art.location = \"\"\r\n          saveToLocalStorage(artid, art)\r\n        });\r\n      }\r\n      //delete the old database\r\n      localStorage.removeItem(key)\r\n    })\r\n    //reset the ArtifactDisplay keys\r\n    const ArtifactDisplayState = loadFromLocalStorage(\"ArtifactDisplay.state\")\r\n    if (ArtifactDisplayState) {\r\n      if (ArtifactDisplayState.filterMainStatKey in v2change)\r\n        ArtifactDisplayState.filterMainStatKey = v2change[ArtifactDisplayState.filterMainStatKey]\r\n      ArtifactDisplayState.filterSubstats = ArtifactDisplayState.filterSubstats.map(stat => stat in v2change ? v2change[stat] : stat)\r\n      saveToLocalStorage(\"ArtifactDisplay.state\", ArtifactDisplayState)\r\n    }\r\n  }\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  const charDBJustPopualted = CharacterDatabase.populateDatebaseFromLocalStorage(),\r\n    artDBJustPopualted = ArtifactDatabase.populateDatebaseFromLocalStorage()\r\n  if (!charDBJustPopualted && !artDBJustPopualted) return\r\n\r\n  Object.values(ArtifactDatabase.getArtifactDatabase()).forEach(art => {\r\n    let valid = true\r\n\r\n    //verify the linking of artifacts and characters\r\n    if (art.location) {\r\n      const locationChar = CharacterDatabase.get(art.location)\r\n      if (locationChar) {\r\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\r\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\r\n          CharacterDatabase.equipArtifact(art.location, art)\r\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\r\n          art.location = \"\"\r\n          valid = false\r\n        }\r\n      } else {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (dbVersion < 1) {\r\n      //generate artifact efficiency again for artifacts\r\n      Artifact.substatsValidation(art)\r\n      valid = false\r\n\r\n      //there was a bug that saved the numStars as strings. convert to number.\r\n      if (typeof art.numStars === \"string\") {\r\n        art.numStars = parseInt(art.numStars)\r\n        valid = false\r\n      }\r\n\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    if (dbVersion < 2) {\r\n      if (art.mainStatKey in v2change) {\r\n        art.mainStatKey = v2change[art.mainStatKey]\r\n        valid = false\r\n      }\r\n      art?.substats?.forEach((obj, i) => {\r\n        if (obj.key in v2change) {\r\n          art.substats[i].key = v2change[obj.key]\r\n          valid = false\r\n        }\r\n      })\r\n    }\r\n\r\n    //Update any invalid artifacts in DB\r\n    if (!valid) ArtifactDatabase.updateArtifact(art)\r\n  })\r\n\r\n  let chars = CharacterDatabase.getCharacterDatabase();\r\n  Object.values(chars).forEach(character => {\r\n    let valid = true;\r\n    const { characterKey } = character\r\n    //verify character database equipment validity\r\n    if (!character.equippedArtifacts) {\r\n      character.equippedArtifacts = {}\r\n      valid = false\r\n    }\r\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\r\n      const equippedArt = ArtifactDatabase.get(artid)\r\n      if (equippedArt && equippedArt.location !== characterKey) //the artifact doesnt have the right location...\r\n        ArtifactDatabase.moveToNewLocation(artid, characterKey)\r\n      if (!equippedArt) {\r\n        valid = false\r\n        character.equippedArtifacts[slotKey] = \"\"\r\n      }\r\n    })\r\n\r\n    if (dbVersion < 1) {\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      }) ?? []\r\n\r\n      //check for dmgMode\r\n      if (!character.hitMode) {\r\n        character.hitMode = \"hit\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    //update any invalid characters in DB\r\n    if (!valid) CharacterDatabase.updateCharacter(character)\r\n  })\r\n  setDatabaseVersion(2)\r\n}\r\nconst getDatabaseVersion = (defVal = 0) =>\r\n  parseInt(loadFromLocalStorage(\"db_ver\") ?? defVal)\r\n\r\nconst setDatabaseVersion = (version) =>\r\n  saveToLocalStorage(\"db_ver\", version)\r\n\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Character from \"../Character/Character\";\r\nimport CharacterDatabase from \"../Character/CharacterDatabase\";\r\n\r\nfunction CharacterSelectionDropdownList({ onSelect }) {\r\n  return CharacterDatabase.getCharacterKeyList().sort(((a, b) => {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    // names must be equal\r\n    return 0;\r\n  })).map(characterKey =>\r\n    <Dropdown.Item key={characterKey} onClick={() => onSelect(characterKey)}>\r\n      {Character.getName(characterKey)}\r\n    </Dropdown.Item>)\r\n}\r\nexport {\r\n  CharacterSelectionDropdownList,\r\n};\r\n\r\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import { faCheckSquare, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Image, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Stat from \"../../Stat\";\r\nimport { GetDependencies } from \"../../StatDependency\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nfunction ReactionToggle({ character: { characterKey, reactionMode = \"none\" }, setReactionMode, className }) {\r\n  reactionMode === null && (reactionMode = \"none\")\r\n  const charEleKey = Character.getElementalKey(characterKey)\r\n  return [\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup className={className}\r\n    type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setReactionMode(val === \"none\" ? null : val)}>\r\n    <ToggleButton value={\"none\"} variant={reactionMode === \"none\" ? \"success\" : \"primary\"}>No Reactions</ToggleButton >\r\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_vaporize\"} variant={reactionMode === \"pyro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Pyro) <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"pyro\" && <ToggleButton value={\"pyro_melt\"} variant={reactionMode === \"pyro_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Pyro) <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"hydro\" && <ToggleButton value={\"hydro_vaporize\"} variant={reactionMode === \"hydro_vaporize\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-vaporize\">Vaporize(Hydro) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n    {charEleKey === \"cryo\" && <ToggleButton value={\"cryo_melt\"} variant={reactionMode === \"cryo_melt\" ? \"success\" : \"primary\"}>\r\n      <span className=\"text-melt\">Melt(Cryo) <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /></span>\r\n    </ToggleButton >}\r\n  </ToggleButtonGroup>\r\n}\r\nfunction HitModeToggle({ hitMode, setHitMode, className }) {\r\n  return <ToggleButtonGroup type=\"radio\" value={hitMode} name=\"hitOptions\" onChange={setHitMode} className={className}>\r\n    <ToggleButton value=\"avgHit\" variant={hitMode === \"avgHit\" ? \"success\" : \"primary\"}>Avg. DMG</ToggleButton>\r\n    <ToggleButton value=\"hit\" variant={hitMode === \"hit\" ? \"success\" : \"primary\"}>Normal Hit, No Crit</ToggleButton>\r\n    <ToggleButton value=\"critHit\" variant={hitMode === \"critHit\" ? \"success\" : \"primary\"}>Crit Hit DMG</ToggleButton>\r\n  </ToggleButtonGroup>\r\n}\r\n\r\nfunction CalculationDisplay({ character, character: { characterKey }, build }) {\r\n  return <div>\r\n    {Object.entries(Character.getDisplayStatKeys(character)).map(([talentKey, fields]) => {\r\n      let header = \"\"\r\n      if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n      else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n      else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n      else header = Character.getTalentName(characterKey, talentKey, talentKey)\r\n      return <Card bg=\"darkcontent\" text=\"lightfont\" key={talentKey} className=\"w-100 mb-2\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body className=\"p-2\">\r\n          <Accordion className=\"mb-n2\">\r\n            {fields.map((field, fieldIndex) => {\r\n              //simple statKey field\r\n              if (typeof field === \"string\") {\r\n                const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, [field]), build?.finalStats?.modifiers).reverse()\r\n                return Boolean(subFormulaKeys.length) && <Card key={fieldIndex} bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                  <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                    {Stat.printStat(field, build.finalStats)}\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                    <Card.Body className=\"p-2\">\r\n                      <div className=\"mb-n2\">\r\n                        {subFormulaKeys.map(subKey =>\r\n                          <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build.finalStats)} = <small>{Stat.printFormula(subKey, build.finalStats, build.finalStats.modifiers, false)}</small></p>\r\n                        )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              }\r\n              //fields\r\n              const talentField = Character.getTalentField(character, field.talentKey, field.sectionIndex, field.fieldIndex)\r\n              const fieldText = Character.getTalentFieldValue(talentField, \"text\", talentKey, build.finalStats)\r\n              const fieldVariant = Character.getTalentFieldValue(talentField, \"variant\", talentKey, build.finalStats)\r\n              const fieldFormulaText = Character.getTalentFieldValue(talentField, \"formulaText\", talentKey, build.finalStats)\r\n              const [fieldFormula, fieldFormulaDependency] = Character.getTalentFieldValue(talentField, \"formula\", talentKey, build.finalStats, [])\r\n              if (!fieldFormula || !fieldFormulaDependency) return null\r\n              const fieldValue = fieldFormula?.(build.finalStats)?.toFixed?.()\r\n              const subFormulaKeys = Stat.getPrintableFormulaStatKeyList(GetDependencies(build?.finalStats?.modifiers, fieldFormulaDependency), build?.finalStats?.modifiers).reverse()\r\n              return <Card key={fieldIndex} bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n                <Accordion.Toggle as={Card.Header} className=\"p-2 cursor-pointer\" variant=\"link\" eventKey={`field${fieldIndex}`}>\r\n                  <b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={`field${fieldIndex}`}>\r\n                  <Card.Body className=\"p-2\">\r\n                    <div className=\"mb-n2\">\r\n                      <p className=\"mb-2\"><b className={`text-${fieldVariant}`}>{fieldText}</b> <span className=\"text-info\">{fieldValue}</span> = <small>{fieldFormulaText}</small></p>\r\n                      {subFormulaKeys.map(subKey =>\r\n                        <p className=\"mb-2\" key={subKey}>{Stat.printStat(subKey, build.finalStats)} = <small>{Stat.printFormula(subKey, build.finalStats, build.finalStats.modifiers, false)}</small></p>\r\n                      )}\r\n                    </div>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            })}\r\n          </Accordion>\r\n        </Card.Body>\r\n      </Card>\r\n    })}\r\n  </div>\r\n}\r\n\r\nconst ContextAwareToggle = ({ eventKey, callback }) => {\r\n  const currentEventKey = useContext(AccordionContext);\r\n  const decoratedOnClick = useAccordionToggle(\r\n    eventKey,\r\n    () => callback && callback(eventKey),\r\n  );\r\n  const expanded = currentEventKey === eventKey;\r\n  return (\r\n    <Button onClick={decoratedOnClick} >\r\n      <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n      <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function DamageOptionsAndCalculation({ character, character: { hitMode }, setState, setOverride, newBuild, equippedBuild }) {\r\n  //choose which one to display stats for\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  return <Accordion>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span className=\"d-block\">Damage Calculation Options</span>\r\n            <small>Expand below to edit enemy details.</small>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {/* TODO reaction interaction UI */}\r\n            <ReactionToggle {...{ character, setReactionMode: r => setState({ reactionMode: r }) }} />\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"1\">\r\n        <Card.Body>\r\n          <Row className=\"mb-2\"><Col>\r\n            <Button variant=\"warning\" >\r\n              <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                To get the specific resistance values of enemies, please visit the wiki.\r\n          </a>\r\n            </Button >\r\n          </Col></Row>\r\n          <Row>\r\n            <Col xs={12} xl={6} className=\"mb-2\">\r\n              <StatInput\r\n                name={<b>Enemy Level</b>}\r\n                value={Character.getStatValueWithOverride(character, \"enemyLevel\")}\r\n                placeholder={Stat.getStatNameRaw(\"enemyLevel\")}\r\n                defaultValue={Character.getBaseStatValue(character, \"enemyLevel\")}\r\n                onValueChange={(val) => setOverride?.(\"enemyLevel\", val)}\r\n              />\r\n            </Col>\r\n            {Character.getElementalKeys().map(eleKey => {\r\n              let statKey = eleKey === \"physical\" ? \"physical_enemyRes_\" : `${eleKey}_enemyRes_`\r\n              let immunityStatKey = eleKey === \"physical\" ? \"physical_enemyImmunity\" : `${eleKey}_enemyImmunity`\r\n              let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n              return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                <StatInput\r\n                  prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                    <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                </Button>}\r\n                  name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  placeholder={Stat.getStatNameRaw(statKey)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                  onValueChange={(val) => setOverride?.(statKey, val)}\r\n                  disabled={elementImmunity}\r\n                />\r\n              </Col>\r\n            })}\r\n          </Row>\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n\r\n    <Card bg=\"lightcontent\" text=\"lightfont\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span className=\"d-block\">Damage Calculation Formulas</span>\r\n            <small>Expand below to see calculation details.</small>\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <HitModeToggle {...{ hitMode, setHitMode: m => setState({ hitMode: m }) }} />\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"2\">\r\n        <Card.Body className=\"p-2\">\r\n          <CalculationDisplay character={character} build={build} />\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n  </Accordion>\r\n}\r\nexport {\r\n  HitModeToggle,\r\n  ReactionToggle,\r\n};\r\n\r\n","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Character from '../Character/Character';\r\nimport { CharacterSelectionDropdownList } from '../Components/CharacterSelection';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, artifactObj, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId && !artifactObj) return null;\r\n  const art = artifactObj ? artifactObj : ArtifactDatabase.get(artifactId);\r\n  if (!art) return null;\r\n  let { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location = \"\", lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  let mainStatLevel = assumeFull ? numStars * 4 : level\r\n  let assFullColor = assumeFull && level !== numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\r\n  let artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\r\n  const equipOnChar = (charKey) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charKey)\r\n    forceUpdate?.()\r\n  }\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\r\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let numRolls = stat?.rolls?.length || 0\r\n          let efficiency = stat?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge percent={currentEfficiency} valid={artifactValid}>\r\n          {currentEfficiency?.toFixed(2) ?? currentEfficiency + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge percent={maximumEfficiency} valid={artifactValid}>\r\n          {maximumEfficiency?.toFixed(2) ?? maximumEfficiency + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\" className=\"text-left\">{Character.getName(location, \"Inventory\")}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar(\"\")}>Inventory</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n              <CharacterSelectionDropdownList onSelect={ckey => equipOnChar(ckey)} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><b>{Character.getName(location, \"Inventory\")}</b></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={location}\r\n                  style={location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    art.lock = !lock\r\n                    ArtifactDatabase.updateArtifact(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(lock || location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport CustomFormControl from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <CustomFormControl\r\n      float={percent}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onValueChange={onValueChange}\r\n      disabled={disabled}\r\n    />\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\n\r\nfunction DisplayStatDiff({ label = \"\", val, oldVal, fixed = 0, unit = \"\", variant = \"\" }) {\r\n  if (typeof oldVal === \"undefined\" && typeof val === \"number\") {//if only one value is filled, display that one.\r\n    oldVal = val\r\n    val = undefined\r\n  }\r\n  const diff = val !== undefined ? val - oldVal : 0;\r\n  let oldText = \"\", diffText = \"\"\r\n  if (oldVal || diff === 0) oldText = oldVal?.toFixed(fixed)\r\n  else if (oldVal === undefined) oldText = val?.toFixed(fixed)//if oldval isnt defined, just display val.\r\n  if (oldText) oldText = <span className={`text-${variant}`}>{oldText}{unit}</span>\r\n  if (diff !== 0) diffText = <span className={`text-${diff > 0 ? \"success\" : \"danger\"}`}>{diff > 0 ? \"+\" : \"\"}{diff?.toFixed(fixed)}{unit}</span>\r\n\r\n  return <div>\r\n    <b>{label}</b>\r\n    <span className=\"float-right text-right\">{oldText}{diff ? \" \" : \"\"}{diffText}</span>\r\n  </div>\r\n}\r\nexport default function StatDisplay({ character, character: { characterKey }, equippedBuild, newBuild, editable, statKey }) {\r\n  let val, oldVal, fixed, unit, variant;\r\n  let label = \"\"\r\n  if (typeof statKey === \"string\") {//basic statKey\r\n    if (newBuild && equippedBuild) {//comparable\r\n      //newbuild -> val\r\n      //equippedbuild ->old\r\n      val = newBuild?.finalStats?.[statKey] ?? 0\r\n      oldVal = equippedBuild?.finalStats?.[statKey] ?? 0\r\n    } else {\r\n      const build = newBuild ? newBuild : equippedBuild\r\n      //build ->val\r\n      val = build?.finalStats?.[statKey] ?? 0\r\n      //statvaluewith override -> old\r\n      const invalid = \"invalid\"//can't use undeinfed as the defVal, since I want undefined for invalid numbers.\r\n      oldVal = Character.getStatValueWithOverride(character, statKey, invalid)\r\n      oldVal === invalid && (oldVal = undefined)\r\n      if (statKey === \"finalHP\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterHP\")\r\n      else if (statKey === \"finalDEF\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterDEF\")\r\n      else if (statKey === \"finalATK\")\r\n        oldVal = Character.getStatValueWithOverride(character, \"characterATK\") + Character.getStatValueWithOverride(character, \"weaponATK\")\r\n    }\r\n    unit = Stat.getStatUnit(statKey)\r\n    fixed = Stat.fixedUnit(statKey)\r\n    label = <span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>\r\n  } else {//from character sheet\r\n    const build = newBuild ? newBuild : equippedBuild\r\n    const { talentKey, sectionIndex, fieldIndex } = statKey\r\n    const field = Character.getTalentField(character, talentKey, sectionIndex, fieldIndex)\r\n    const labelVariant = Character.getTalentFieldValue(field, \"variant\", talentKey, build.finalStats)\r\n    label = <span className={`text-${labelVariant}`}>{Character.getTalentFieldValue(field, \"text\", talentKey, build.finalStats)}</span>\r\n    fixed = Character.getTalentFieldValue(field, \"fixed\", talentKey, build.finalStats, 0)\r\n    val = Character.getTalentFieldValue(field, \"formula\", talentKey, build.finalStats)?.[0]?.(build.finalStats)\r\n    if (newBuild && equippedBuild) {//comparable\r\n      oldVal = Character.getTalentFieldValue(field, \"formula\", talentKey, equippedBuild.finalStats)?.[0]?.(equippedBuild.finalStats)\r\n    }\r\n  }\r\n\r\n  if (editable && Character.hasOverride(character, statKey)) variant = \"warning\"\r\n  return <DisplayStatDiff {...{ val, oldVal, fixed, unit, variant, label }} />\r\n}","import { OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\n\r\nconst WIPComponent = ({ children }) =>\r\n  <OverlayTrigger\r\n    overlay={<Tooltip>Work In Progress</Tooltip>}\r\n  >\r\n    <span>\r\n      {children}\r\n    </span>\r\n  </OverlayTrigger>\r\n\r\nexport default WIPComponent","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","\r\n//take the new statsDisplayKeys, and display the stats.\r\n\r\nimport { Card, Col, Row } from \"react-bootstrap\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport Character from \"../Character\"\r\n\r\nexport default function StatDisplayComponent({ character, character: { characterKey }, equippedBuild, newBuild, statsDisplayKeys, editable, cardbg = \"darkcontent\" }) {\r\n  return <Row className=\"mb-n2\">{Object.entries(statsDisplayKeys).map(([talentKey, fields]) => {\r\n    let header = \"\"\r\n    if (talentKey === \"basicKeys\") header = \"Basic Stats\"\r\n    else if (talentKey === \"genericAvgHit\") header = \"Generic Optimization Values\"\r\n    else if (talentKey === \"transReactions\") header = \"Transformation Reaction\"\r\n    else header = Character.getTalentName(characterKey, talentKey, talentKey)\r\n    return <Col key={talentKey} className=\"mb-2\" xs={12} md={6} xl={4}>\r\n      <Card bg={cardbg} text=\"lightfont\" className=\"h-100\">\r\n        <Card.Header>{header}</Card.Header>\r\n        <Card.Body>\r\n          {fields.map(field => <StatDisplay key={JSON.stringify(field)} {...{ character, equippedBuild, newBuild, editable, statKey: field }} />)}\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  })}</Row>\r\n}","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\r\nimport { Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport Stat from \"../../Stat\";\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\nimport DamageOptionsAndCalculation from './DamageOptionsAndCalculation';\r\nimport StatDisplayComponent from './StatDisplayComponent';\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState, setOverride }) {\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(character)\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  return <>\r\n    {Character.hasTalentPage(characterKey) && <Row><Col xs={12} className=\"mb-2\">\r\n      <DamageOptionsAndCalculation {...{ character, setState, setOverride, newBuild, equippedBuild }} />\r\n    </Col></Row>}\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Body>\r\n            <StatDisplayComponent {...{ character, equippedBuild, newBuild, statsDisplayKeys: statKeys, build, forceUpdate, setState, setOverride, editable }} />\r\n          </Card.Body>\r\n          {newBuild ? <Card.Footer>\r\n            <Button onClick={() => {\r\n              Character.equipArtifacts(characterKey, newBuild.artifactIds)\r\n              forceUpdate?.()\r\n            }}>Equip All artifacts to current character</Button>\r\n            {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n          </Card.Footer> : null}\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Artifact.getSlotKeys().map(slotKey =>\r\n            build.artifactIds[slotKey] ? <Col sm={6} lg={4} key={build.artifactIds[slotKey]} className=\"mb-2\">\r\n              <ArtifactCard artifactId={build.artifactIds[slotKey]} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane\r\n","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport CustomFormControl from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport StatDisplay from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"characterLevel\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <CustomFormControl onValueChange={(val) => setOverride(\"characterLevel\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"characterLevel\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"} cursor-pointer`}\r\n                          roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction StatItem({ statKey, val }) {\r\n  if (!statKey) return null\r\n  return <Col xs={12} lg={6} className=\"px-3\">\r\n    <span><b>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</b></span>\r\n    <span className={`float-right text-right text-${Stat.getStatVariant(statKey)}`} >{val?.toFixed?.(Stat.fixedUnit(statKey)) || val}{Stat.getStatUnit(statKey)}</span>\r\n  </Col>\r\n}\r\nfunction WeaponStatsCard({ title, stats = {}, finalStats = {} }) {\r\n  if (Object.keys(stats ?? {}).length === 0) return null\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header className=\"py-2 px-3\">{title}</Card.Header>\r\n    <Card.Body className=\"py-2 px-0\"><Row>\r\n      {Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? <React.Fragment key={key} >{Object.entries(val ?? {}).map(([mkey, modifier]) =>\r\n        <StatItem key={mkey} statKey={mkey} val={Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0)} />)}</React.Fragment>\r\n        : <StatItem key={key} statKey={key} val={val} />)}\r\n    </Row></Card.Body>\r\n  </Card>\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon = {} }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex, undefined)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum, undefined)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinement</span>\r\n                </Dropdown.ItemText>\r\n                <Dropdown.Divider />\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build?.finalStats, character)}</p>\r\n            <WeaponStatsCard title={\"Main Stats\"} stats={{ atk: weaponDisplayMainVal, [subStatKey]: weaponDisplaySubVal }} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Bonus Stats\"} stats={weaponBonusStats} finalStats={build?.finalStats} />\r\n            <WeaponStatsCard title={\"Conditional Stats\"} stats={conditionalStats} finalStats={build?.finalStats} />\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  const { editable, character, setOverride, equippedBuild, newBuild } = props\r\n\r\n  const [editing, SetEditing] = useState(false)\r\n  const [editingOther, SetEditingOther] = useState(false)\r\n  const [editingMisc, SetEditingMisc] = useState(false)\r\n\r\n  const additionalKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"]\r\n  const displayStatKeys = [\"finalHP\", \"finalATK\", \"finalDEF\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"characterHP\", \"hp\", \"hp_\", \"characterATK\", \"atk\", \"atk_\", \"characterDEF\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = []\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_dmg_`)\r\n    otherStatKeys.push(`${ele}_res_`)\r\n  })\r\n  otherStatKeys.push(\"stamina\", \"incHeal_\", \"powShield_\")\r\n\r\n  const miscStatkeys = [\r\n    \"normal_dmg_\", \"normal_critRate_\",\r\n    \"charged_dmg_\", \"charged_critRate_\",\r\n    \"skill_dmg_\", \"skill_critRate_\",\r\n    \"burst_dmg_\", \"burst_critRate_\",\r\n    \"dmg_\", \"moveSPD_\", \"atkSPD_\", \"weakspotDMG_\"]\r\n\r\n  const specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  const specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  const specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  const isPercentSpecialStatSelect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n\r\n  const displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                <CustomFormControl float={isPercentSpecialStatSelect}\r\n                  placeholder=\"Character Special Stat\"\r\n                  value={Character.getStatValueWithOverride(character, \"specializedStatVal\")}\r\n                  onValueChange={(value) => setOverride(\"specializedStatVal\", value)} />\r\n                {isPercentSpecialStatSelect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {displayStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{otherStatKeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n          {editable && <Col xs=\"auto\" >\r\n            <Button variant={editingMisc ? \"danger\" : \"info\"} onClick={() => SetEditingMisc(!editingMisc)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingMisc ? faSave : faEdit} /> {editingMisc ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col>}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingMisc ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {miscStatkeys.map(statKey =>\r\n              <Col xl={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">{miscStatkeys.map(statKey => <Col xs={12} lg={6} key={statKey} ><StatDisplay statKey={statKey} {...displayNewBuildProps} /></Col>)}</Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n  </>\r\n}\r\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from 'react';\r\nimport { useState } from \"react\";\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport DamageOptionsAndCalculation from \"./DamageOptionsAndCalculation\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <DamageOptionsAndCalculation {...{ character, setState, setOverride, newBuild, equippedBuild }} />\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n      {Character.getTalent(characterKey, \"sprint\", false) && <Col xs={12} md={6} lg={4} className=\"mb-2\">\r\n        <SkillDisplayCard\r\n          {...skillDisplayProps}\r\n          talentKey=\"sprint\"\r\n          subtitle=\"Alternative Sprint\"\r\n        />\r\n      </Col>}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_hit: SuperConductCard,\r\n  electrocharged_hit: ElectroChargedCard,\r\n  overloaded_hit: OverloadedCard,\r\n  pyro_swirl_hit: SwirlCard,\r\n  shattered_hit: ShatteredCard,\r\n  crystalize_hit: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey }, newBuild, equippedBuild }) {\r\n  const build = newBuild ? newBuild : equippedBuild\r\n  const charEleKey = Character.getElementalKey(characterKey)\r\n  const eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shattered_hit\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shattered_hit\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row className=\"mb-n2\">\r\n        {eleInterArr.map(key => {\r\n          const Ele = ReactionComponents[key]\r\n          if (!Ele) return null\r\n          return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele stats={build?.finalStats} /></Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ stats }) {\r\n  const sKey = \"superconduct_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-superconduct\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ stats }) {\r\n  const sKey = \"electrocharged_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-electrocharged\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ stats }) {\r\n  const sKey = \"overloaded_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-overloaded\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst swirlEleToDisplay = {\r\n  \"pyro\": <span>{Stat.getStatName(\"pyro_swirl_hit\")} <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"electro\": <span>{Stat.getStatName(\"electro_swirl_hit\")} <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"cryo\": <span>{Stat.getStatName(\"cryo_swirl_hit\")} <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>,\r\n  \"hydro\": <span>{Stat.getStatName(\"hydro_swirl_hit\")} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /></span>\r\n}\r\nfunction SwirlCard({ stats }) {\r\n  const [ele, setele] = useState(Object.keys(swirlEleToDisplay)[0])\r\n  const sKey = `${ele}_swirl_hit`\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-0\">\r\n    <DropdownButton size=\"sm\" title={swirlEleToDisplay[ele]} className=\"d-inline-block\">\r\n      {Object.entries(swirlEleToDisplay).map(([key, element]) => <Dropdown.Item key={key} onClick={() => setele(key)}>{element}</Dropdown.Item>)}\r\n    </DropdownButton>\r\n    <span className={`text-${ele} p-2`}> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ stats }) {\r\n  const sKey = \"shattered_hit\"\r\n  const information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-shattered\">{Stat.getStatName(sKey)} <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ stats }) {\r\n  const sKey = \"crystalize_hit\"\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <span className=\"text-crystalize\">{Stat.getStatName(sKey)} <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {stats[sKey]?.toFixed(Stat.fixedUnit(sKey))}</span>\r\n  </Card.Body></Card>\r\n}\r\n\r\nfunction modifiersToFields(modifiers, finalStats = {}) {\r\n  return Object.entries(modifiers).map(([mStatKey, modifier]) => ({\r\n    text: Stat.getStatName(mStatKey),\r\n    variant: Stat.getStatVariant(mStatKey),\r\n    value: Object.entries(modifier ?? {}).reduce((accu, [mkey, multiplier]) => accu + finalStats[mkey] * multiplier, 0),\r\n    formulaText: <span>{Object.entries(modifier ?? {}).map(([mkey, multiplier], i) => <span key={i} >{i !== 0 ? \" + \" : \"\"}{Stat.printStat(mkey, finalStats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)}</span>,\r\n    fixed: Stat.fixedUnit(mStatKey),\r\n    unit: Stat.getStatUnit(mStatKey)\r\n  }))\r\n}\r\nfunction statsToFields(stats, finalStats = {}) {\r\n  return Object.entries(stats).map(([statKey, statVal]) =>\r\n    statKey === \"modifiers\" ? modifiersToFields(statVal, finalStats) : {\r\n      text: Stat.getStatName(statKey),\r\n      variant: Stat.getStatVariant(statKey),\r\n      value: statVal,\r\n      fixed: Stat.fixedUnit(statKey),\r\n      unit: Stat.getStatUnit(statKey)\r\n    }\r\n  ).flat()\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, talentLevelKeys, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n\r\n  let talentLvlKey = 0\r\n  if (talentKey in talentLevelKeys) {\r\n    const talentLvlKeyRaw = talentLevelKeys[talentKey]\r\n    const levelBoost = Character.getTalentLevelBoost(characterKey, talentKey, constellation)\r\n    talentLvlKey = talentLvlKeyRaw + levelBoost\r\n    if (editable) {\r\n      const setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        const stateTalentLevelKeys = state.talentLevelKeys || {}\r\n        stateTalentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys: stateTalentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  const statsEle = talentStats && <Row><Col>\r\n    <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n      <ListGroup className=\"text-white\" variant=\"flush\">\r\n        {statsToFields(talentStats, build?.finalStats).map((field, i) =>\r\n          <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n      </ListGroup>\r\n    </Card>\r\n  </Col></Row>\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className={`d-flex flex-row mb-2 ${(editable && onClickTitle) ? \"cursor-pointer\" : \"\"}`} onClick={onClickTitle} >\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            let conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            conditionalFields = [...Character.getTalentConditionalFields(conditional, conditionalNum, []), ...statsToFields(conditionalStats, build?.finalStats)]\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Col xs={12}>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i} index={i} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        }\r\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\r\n          <div className=\"mb-2\">{talentText}</div>\r\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n        </Col>{conditionalEle}</Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay({ character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats)\r\n\r\n  let fieldVariant = field.variant || \"\"\r\n  if (typeof fieldVariant === \"function\")\r\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats)\r\n\r\n  let fieldBasic = field.formulaText\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = null\r\n  if (field.value)\r\n    fieldVal = typeof field.value === \"function\" ? field.value?.(talentLvlKey, build.finalStats) : field.value\r\n  else if (typeof field.formula === \"function\")\r\n    fieldVal = field?.formula?.(talentLvlKey, build.finalStats)?.[0]?.(build.finalStats)\r\n\r\n  let fixedVal = field.fixed || 0\r\n  const unit = typeof field.unit === \"function\" ? field.unit?.(talentLvlKey, build.finalStats) : (field.unit ?? \"\")\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.formula?.(talentLvlKey, equippedBuild.finalStats)?.[0]?.(equippedBuild.finalStats)\r\n\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats)?.toFixed?.(fixedVal))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal?.toFixed(fixedVal) ?? fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff?.toFixed?.(fixedVal) || diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal?.toFixed?.(fixedVal) || fieldVal}{unit}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}\r\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, Image, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport WIPComponent from '../Components/WIPComponent';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = CharacterDisplayCard.getInitialState()\r\n    const { characterKey } = props\r\n    if (characterKey) {\r\n      const char = CharacterDatabase.get(characterKey) ?? { characterKey, weapon: CharacterDisplayCard.getIntialWeapon(characterKey) }\r\n      this.state = { ...this.state, ...char }\r\n    }\r\n  }\r\n\r\n  static initialState = {\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    hitMode: \"hit\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => deepClone(CharacterDisplayCard.initialState)\r\n  //UI will not update if the character is updated in DB. Components will have to call this to update this UI.\r\n  forceUpdateComponent = () => {\r\n    if (this.state.characterKey)\r\n      this.setState(CharacterDatabase.get(this.state.characterKey))\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setCharacterKey = (characterKey) => {\r\n    let state = CharacterDisplayCard.getInitialState()\r\n    let char = CharacterDatabase.get(characterKey)\r\n    if (char) state = { ...state, ...char }\r\n    else {\r\n      state = { ...state, characterKey, weapon: CharacterDisplayCard.getIntialWeapon(characterKey) }\r\n      this.updateCharacter(this.state)\r\n    }\r\n    this.setState(state)\r\n    this.props?.setCharacterKey?.(characterKey)\r\n  }\r\n\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  updateCharacter(state) {\r\n    state = deepClone(state)\r\n    delete state.compareAgainstEquipped\r\n    CharacterDatabase.updateCharacter(state)\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.characterKey !== this.props.characterKey && this.props.characterKey !== this.state.characterKey)\r\n      this.setCharacterKey(this.props.characterKey)\r\n    if (this.props.editable && this.state.characterKey) {\r\n      //save this.state as character to character db.\r\n      this.updateCharacter(this.state)\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose, tabName } = this.props\r\n    let character = this.state\r\n    //transfer the hitmode/reactions over \r\n    if (newBuild?.finalStats) {\r\n      newBuild = deepClone(newBuild)\r\n      newBuild.finalStats.hitMode = character.hitMode;\r\n      newBuild.finalStats.reactionMode = character.reactionMode;\r\n    }\r\n\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = characterKey ? <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span> : <span>Select a Character</span>\r\n    const commonPaneProps = { character, newBuild, equippedBuild: !newBuild || compareAgainstEquipped ? equippedBuild : undefined, editable, setState: u => this.setState(u), setOverride: this.setOverride, forceUpdate: this.forceUpdateComponent }\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"} className=\"mr-auto\">\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown as={ButtonGroup}>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} disabled={!characterKey} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"characterLevel\")}</span>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      {Boolean(characterKey) && <Card.Body>\r\n        <Tab.Container defaultActiveKey={tabName ? tabName : (newBuild ? \"newartifacts\" : \"character\")} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              {(process.env.NODE_ENV !== \"development\" && !Character.hasTalentPage(characterKey)) ?\r\n                <WIPComponent>\r\n                  <Nav.Link eventKey=\"talent\" disabled>Talents <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n                </WIPComponent> :\r\n                <Nav.Link eventKey=\"talent\">Talents</Nav.Link>\r\n              }\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <WIPComponent>\r\n                <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n              </WIPComponent>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setConstellation={this.setConstellation}\r\n                {...commonPaneProps}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ ...commonPaneProps, newBuild: undefined, equippedBuild, }} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...commonPaneProps} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...commonPaneProps} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>}\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"children\", \"type\", \"name\", \"value\", \"onChange\"]);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    if (!onChange) {\n      return;\n    }\n\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive && onChange) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/React.createElement(ButtonGroup, _extends({}, controlledProps, {\n    ref: ref,\n    toggle: true\n  }), map(children, function (child) {\n    var values = getValues();\n    var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n\n    var handler = function handler(e) {\n      return handleToggle(childVal, e);\n    };\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      type: type,\n      name: child.name || name,\n      checked: values.indexOf(childVal) !== -1,\n      onChange: chainFunction(childOnChange, handler)\n    });\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;","import { Container } from \"react-bootstrap\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport '../StatDependency'\r\nexport default function TestDisplay() {\r\n  DatabaseInitAndVerify()\r\n  return <Container>\r\n    <CharacterDisplayCard editable characterKey=\"amber\" tabName=\"talent\" />\r\n  </Container>\r\n}\r\n","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\n\r\n//multiplies every numberical value in the obj by a multiplier.\r\nfunction objMultiplication(obj, multi) {\r\n  Object.keys(obj).forEach(prop => {\r\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\r\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\r\n  })\r\n}\r\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\r\nconst getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance,\r\n  objMultiplication,\r\n  getObjectKeysRecursive\r\n}","import { Formulas, StatData } from \"./StatData\"\r\nimport { ReactionMatrix, hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\r\n    let formulaKeys = Object.keys(FormulaText)\r\n    let newModifiersKeys = Object.keys(modifiers).filter(x => !formulaKeys.includes(x))\r\n    return [...newModifiersKeys, ...formulaKeys].filter((key) => statList.includes(key))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"characterLevel\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"characterLevel\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n// Base Formula\r\n\r\nconst FormulaText = {\r\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\r\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\r\n\r\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\r\n}\r\n\r\n// Enemy RES\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\r\n    if (o.stats[`${ele}_enemyImmunity`])\r\n      return <span>0 (immune)</span>\r\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\r\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\r\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\r\n  }\r\n})\r\n\r\n// Crit Rate\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\r\n})\r\n\r\n// Hit\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  FormulaText[`${ele}_elemental_hit_multi`] = (o) => <span>( 100% + {f(o, `dmg_`)} * {f(o, `${ele}_dmg_`)} ) * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n  FormulaText[`${ele}_elemental_hit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_hit_multi`)}</span>\r\n  FormulaText[`${ele}_elemental_critHit_multi`] = (o) => <span>( 100% + {f(o, `critDMG_`)} ) * {f(o, `${ele}_elemental_hit_multi`)}</span>\r\n  FormulaText[`${ele}_elemental_critHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_critHit_multi`)}</span>\r\n  FormulaText[`${ele}_elemental_avgHit_multi`] = (o) => <span>( 100% + {f(o, `critDMG_`)} * {f(o, `critRate_`)} ) * {f(o, `${ele}_elemental_hit_multi`)}</span>\r\n  FormulaText[`${ele}_elemental_avgHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_avgHit_multi`)}</span>\r\n\r\n  Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>( 100% + {f(o, `dmg_`)} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)} ) * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_hit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>( 100% + {f(o, `critDMG_`)} ) * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_critHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_critHit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>( 100% + {f(o, `critDMG_`)} * {f(o, `final_${move}_critRate_`)} ) * {f(o, `${ele}_${move}_hit_multi`)}</span>\r\n    FormulaText[`${ele}_${move}_avgHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_avgHit_multi`)}</span>\r\n  })\r\n})\r\n\r\n// Reaction\r\n\r\nObject.assign(FormulaText, {\r\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n})\r\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    // Move them to the right position\r\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\r\n\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      FormulaText[`${ele}_${reaction}_elemental_${type}`] = (o) => <span>{f(o, `${ele}_elemental_${type}`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, `${ele}_${move}_${type}`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\r\n      })\r\n    })\r\n  })\r\n})\r\n\r\nObject.assign(FormulaText, {\r\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n})\r\nObject.entries(transformativeReactions).forEach(([reaction, { variants }]) => {\r\n  FormulaText[`${reaction}_multi`] = (o) => ReactionMatrix[reaction].map((val, i) => reactionMatrixElementRenderer(o, val, i))\r\n  if (Object.entries(variants).length === 1) {\r\n    const [[ ele ]] = Object.entries(variants)\r\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>  \r\n  } else {\r\n    Object.keys(variants).forEach(ele => {\r\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>  \r\n    })    \r\n  }\r\n})\r\nObject.assign(FormulaText, {\r\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\r\n  crystalize_multi: (o) => ReactionMatrix[\"crystalize\"].map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\r\n})\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport { GetDependencies } from \"../StatDependency\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return this.getLevel(levelKey)\r\n    if (statKey.includes(\"enemyRes_\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getElementalKeysWithoutPhysical = () => this.getElementalKeys().filter(e => e !== \"physical\")\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentDocumentSections = (charKey, talentKey, defVal = []) => {\r\n    const character = CharacterDatabase.get(charKey);\r\n    if (!character) return defVal\r\n    const { constellation = 0, levelKey = Object.keys(LevelsData)[0] } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n    return this.getTalentDocument(charKey, talentKey).map(section => typeof section === \"function\" ? section(constellation, ascension) : section)\r\n  }\r\n  static getTalentField = (character, talentKey, sectionIndex, fieldIndex, defVal = {}) => {\r\n    if (!character) return defVal\r\n    const { constellation = 0, levelKey = Object.keys(LevelsData)[0] } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n    const field = this.getTalentDocumentSections(character.characterKey, talentKey)?.[sectionIndex]?.fields?.[fieldIndex]\r\n    if (!field) return defVal\r\n    return typeof field === \"function\" ? field(constellation, ascension) : field\r\n  }\r\n  static getTalentFieldValue = (field, key, talentKey, stats = {}, defVal = \"\") => {\r\n    if (!field?.[key]) return defVal\r\n    return typeof field?.[key] === \"function\" ? field[key](stats.talentLevelKeys[talentKey], stats) : field[key]\r\n  }\r\n\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    const sections = this.getTalentDocumentSections(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of sections) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  //look up the formula, and generate the formulaPath to send to worker.\r\n  static getFormulaPath(characterKey, talentKey, formula) {\r\n    const formulaDB = this.getCDataObj(characterKey)?.formula\r\n    if (!formulaDB) return\r\n    let formulaKey\r\n    if (talentKey === \"auto\") {\r\n      for (const tk of [\"normal\", \"charged\", \"plunging\"]) {\r\n        ([formulaKey,] = Object.entries(formulaDB?.[tk] ?? {}).find(([, value]) => value === formula) ?? [])\r\n        if (formulaKey) {\r\n          talentKey = tk\r\n          break;\r\n        }\r\n      }\r\n    } else ([formulaKey,] = Object.entries(formulaDB?.[talentKey] ?? {}).find(([, value]) => value === formula) ?? [])\r\n    if (!formulaKey) return\r\n    return { characterKey, talentKey, formulaKey }\r\n  }\r\n\r\n\r\n  static hasTalentPage = (characterKey) => Boolean(Character.getCDataObj(characterKey)?.talent)\r\n\r\n  static getDisplayStatKeys = (character, defVal = { basicKeys: [] }) => {\r\n    if (!character) return defVal\r\n    const { characterKey } = character\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    const isAutoElemental = Character.isAutoElemental(characterKey)\r\n    const isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    if (!isAutoElemental)\r\n      basicKeys.push(\"physical_dmg_\")\r\n\r\n    //show elemental interactions\r\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\r\n    const weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\r\n    if (this.hasTalentPage(characterKey)) {\r\n      const charFormulas = {}\r\n      Object.keys(Character.getCDataObj(characterKey)?.talent ?? {}).forEach(talentKey =>\r\n        Character.getTalentDocumentSections(characterKey, talentKey)?.forEach((section, sectionIndex) =>\r\n          section?.fields?.forEach((field, fieldIndex) =>\r\n            (field?.formula || this.getTalentField(character, talentKey, sectionIndex, fieldIndex)?.formula) && (charFormulas[talentKey] = [...(charFormulas[talentKey] ?? []), {\r\n              talentKey,\r\n              sectionIndex,\r\n              fieldIndex\r\n            }]))))\r\n      return { basicKeys, ...charFormulas, transReactions }\r\n    } else {\r\n      //generic average hit parameters.\r\n      const genericAvgHit = []\r\n      if (!isAutoElemental) //add phy auto + charged + physical \r\n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\r\n\r\n      if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n        genericAvgHit.push(`${eleKey}_normal_avgHit`, `${eleKey}_charged_avgHit`)\r\n      else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\r\n      }\r\n      //show skill/burst \r\n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\r\n\r\n      //add reactions.\r\n      if (eleKey === \"pyro\") {\r\n        const reactions = []\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n        genericAvgHit.push(...reactions)\r\n      } else if (eleKey === \"cryo\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n      else if (eleKey === \"hydro\")\r\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n      return { basicKeys, genericAvgHit, transReactions }\r\n    }\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"finalHP\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\r\n    else if (statKey === \"finalDEF\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\r\n    else if (statKey === \"finalATK\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterKey, artifactIds) => {\r\n    let character = CharacterDatabase.get(characterKey)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.get(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterKey) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static remove(characterKey) {\r\n    let character = CharacterDatabase.get(characterKey)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.remove(characterKey)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats).formula(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of Object.entries(val)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of Object.entries(modifier))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\r\n  })\r\n\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    character = deepClone(character)\r\n    const { characterKey, levelKey, hitMode, autoInfused, reactionMode, talentLevelKeys, constellation, talentConditionals = [] } = character\r\n    const ascension = Character.getAscension(levelKey)\r\n\r\n    //generate the initalStats obj with data from Character & overrides\r\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\r\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    initialStats.characterEle = this.getElementalKey(characterKey);\r\n    initialStats.characterKey = characterKey\r\n    initialStats.hitMode = hitMode;\r\n    initialStats.autoInfused = autoInfused && Character.getCDataObj(characterKey)?.talent?.auto?.infusable\r\n    initialStats.reactionMode = reactionMode;\r\n    initialStats.talentConditionals = talentConditionals\r\n    initialStats.weaponType = this.getWeaponTypeKey(characterKey)\r\n    initialStats.talentLevelKeys = talentLevelKeys;\r\n    initialStats.constellation = constellation\r\n    initialStats.ascension = ascension\r\n    for (const key in initialStats.talentLevelKeys)\r\n      initialStats.talentLevelKeys[key] += this.getTalentLevelBoost(character.characterKey, key, constellation);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemyRes_`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemyImmunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      const { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      const conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, initialStats.talentLevelKeys[talentKey], constellation, ascension)\r\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    Character.getTalentStatsAll(characterKey, constellation, ascension).forEach(s => this.mergeStats(initialStats, s))\r\n\r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\r\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\r\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\r\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static isInvalid = (char) => !char || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterKeyList = () => Object.keys(characterDatabase);\r\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.startsWith(\"char_\")).forEach(key => {\r\n      let [, characterKey] = key.split(\"char_\")\r\n      if (!characterDatabase[characterKey]) {\r\n        let character = loadFromLocalStorage(key);\r\n        if (!character) return;\r\n        characterDatabase[characterKey] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    const dchar = deepClone(char)\r\n    saveToLocalStorage(`char_${char.characterKey}`, dchar);\r\n    characterDatabase[char.characterKey] = dchar;\r\n  }\r\n  static get = (characterKey) => characterDatabase?.[characterKey] ?? null\r\n\r\n  static remove = (characterKey) => {\r\n    delete characterDatabase[characterKey];\r\n    localStorage.removeItem(`char_${characterKey}`);\r\n  }\r\n  static getArtifactIDFromSlot = (characterKey, slotKey) =>\r\n    this.get(characterKey)?.equippedArtifacts?.[slotKey] ?? null\r\n\r\n  static equipArtifact = (characterKey, art) => {\r\n    const char = this.get(characterKey)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts) char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (characterKey, slotKey) => {\r\n    const char = this.get(characterKey)\r\n    if (!char || !slotKey) return\r\n    if (!char?.equippedArtifacts?.[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterKey, artifactIds) => {\r\n    const character = this.get(characterKey)\r\n    if (!character) return;\r\n    character.equippedArtifacts = artifactIds\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static unequipAllArtifacts = () => {\r\n    Object.values(characterDatabase).forEach(char => {\r\n      char.equippedArtifacts = {}\r\n      this.updateCharacter(char)\r\n    })\r\n  }\r\n  //helper function for testing\r\n  static clearDatabase = () => {\r\n    characterDatabase = {}\r\n    initiated = false\r\n  }\r\n}\r\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\r\nimport ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_dmg_`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    eleMas: [13, 17, 22, 27, 32],\r\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    critDMG_: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 1: [24, 30], 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 1: [2], 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 1: [2], 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 1: [1.5, 1.8], 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  eleMas: { 1: [5, 6], 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  enerRech_: { 1: [1.3, 1.6], 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  critRate_: { 1: [0.8, 1], 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  critDMG_: { 1: [1.6, 1.9], 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubStatsData).map(([key, obj]) =>\r\n  [key, {\r\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\r\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\r\n  }]))\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactSubstatsMinMax,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nconst maxStar = 5\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_dmg_\")) // because in the database its still stored as ele_dmg_\r\n      return this.getMainStatValue(\"ele_dmg_\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubstatAllMax = (statKey, numStars = maxStar, defVal = 0) => ArtifactSubstatsMinMax?.[statKey]?.max[numStars] ?? defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => ArtifactSubStatsData?.[subStatKey]?.[numStars] ?? []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, rolls = []) => {\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let max = this.getSubstatAllMax(subStatKey) * len\r\n    return max ? clampPercent((sum / max) * 100) : 0\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      if (rollArr.length > 1) substat.rollArr = rollArr\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    // Relative to max star, so comparison between different * makes sense.\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(maxStar);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let statKeys = substats.filter(({ key }) => key).map(({ key }) => key)\r\n    let maxPerRoll = 100 * Math.max(...(statKeys.length === 4 ? statKeys : Object.keys(ArtifactSubstatsMinMax)).map(\r\n      key => Artifact.getSubstatAllMax(key, numStars) / Artifact.getSubstatAllMax(key)\r\n    ))\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * maxPerRoll) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect).length > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n      if (Object.keys(condStats).length > 0) {\r\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n        Object.entries(condStats).forEach(([statKey, value]) =>\r\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\r\n      }\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterKey) {\r\n    let art = ArtifactDatabase.get(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterKey || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else if (!conditionalNum && index < 0) { //nothing to change\r\n      return conditionals\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static get = (id) => artifactDatabase[id] ?? null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    if (!id) {//if does not have id, generate ID\r\n      do {\r\n        id = `artifact_${artIdIndex++}`\r\n      } while (localStorage.getItem(id) !== null)\r\n      art.id = id\r\n    }\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.get(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.get(artAid), this.get(artBid))\r\n  static unequipAllArtifacts = () => {\r\n    Object.values(artifactDatabase).forEach(art => {\r\n      art.location = \"\"\r\n      this.updateArtifact(art)\r\n    })\r\n  }\r\n  //helper function for testing\r\n  static clearDatabase = () => {\r\n    artifactDatabase = {}\r\n    initiated = false\r\n    artIdIndex = 1\r\n  }\r\n}","const ElementalData = {\r\n  physical: { name: \"Physical\" },\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import { clamp } from \"./Util/Util\";\r\nimport { ReactionMatrix, hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\r\n\r\nconst StatData = {\r\n  flat: { name: \"\", default: 1 },\r\n\r\n  // Character Stats\r\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\r\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\r\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\r\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\r\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\r\n\r\n  // Weapon Stats\r\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\r\n\r\n  // Character & Weapon Stats\r\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\r\n\r\n  // Weapon & Artifact Stats\r\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\r\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\r\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\r\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\r\n\r\n  // Attack-related Character, Weapon & Artifact Stats\r\n  finalHP: { name: \"HP\", pretty: \"HP\" },\r\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\r\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\r\n\r\n  eleMas: { name: \"Elemental Mastery\", },\r\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\" },\r\n  critRate_: { name: \"CRIT Rate\", unit: \"%\" },\r\n\r\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\" },\r\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\r\n\r\n  // Misc. Stats\r\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\r\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\r\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\r\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\r\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\r\n  stamina: { name: \"Stamina\" },\r\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\r\n\r\n  // Reaction\r\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\r\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\r\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\r\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\r\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\r\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\r\n\r\n  // Enemy\r\n  enemyLevel: { name: \"Enemy Level\", const: true },\r\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\r\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true }\r\n}\r\nconst Formulas = {\r\n  // Basic Stats\r\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\r\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\r\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\r\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\r\n\r\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\r\n\r\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\r\n\r\n  // Reactions\r\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n\r\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\r\n  crystalize_multi: (s, c) => ReactionMatrix[\"crystalize\"].reduce((accu, val, i) => accu + val * Math.pow(c.characterLevel, i), 0),\r\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\r\n}\r\n\r\nconst ElementToReactionKeys = {\r\n  physical: [],\r\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\r\n  geo: [\"crystalize_hit\", \"shattered_hit\"],\r\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\r\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\", \r\n  dendro: []\r\n}\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\r\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\r\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\r\n\r\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\r\n})\r\n\r\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n  const opt = { variant: ele }\r\n  // DONT CHANGE. needed for screenshot parsing\r\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, const: true, ...opt }\r\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\r\n\r\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", const: true, ...opt }\r\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\r\n\r\n  Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n    StatData[`${ele}_elemental_${type}`] = { name: `${eleName} Attack ${typeName}`, ...opt }\r\n    StatData[`${ele}_elemental_${type}_multi`] = { name: `${eleName} Attack ${typeName} Multiplier`, unit: \"multi\" }\r\n\r\n    Formulas[`${ele}_elemental_${type}`] = (s) => s.finalATK * s[`${ele}_elemental_${type}_multi`]\r\n  })\r\n\r\n  Formulas[`${ele}_elemental_hit_multi`] = (s, c) => (1 + (s.dmg_ + s[`${ele}_dmg_`]) / 100) * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\r\n  Formulas[`${ele}_elemental_critHit_multi`] = (s) => s[`${ele}_elemental_hit_multi`] * (1 + s.critDMG_ / 100)\r\n  Formulas[`${ele}_elemental_avgHit_multi`] = (s) => s[`${ele}_elemental_hit_multi`] * (1 + s.critDMG_ * s[`critRate_`] / 10000)\r\n\r\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(c[`${ele}_enemyRes_`])\r\n})\r\n\r\nObject.entries(hitMoves).forEach(([move, moveName]) => {\r\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\r\n    const opt = { variant: ele }\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\r\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\r\n\r\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\r\n    })\r\n\r\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => (1 + (s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100) * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\r\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * (1 + s.critDMG_ / 100)\r\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\r\n  })\r\n})\r\n\r\nObject.entries(transformativeReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\r\n\r\n  Formulas[`${reaction}_multi`] = (s, c) => ReactionMatrix[reaction].reduce((accu, val, i) => accu + val * Math.pow(c.characterLevel, i), 0)\r\n  if (Object.keys(variants).length === 1) {\r\n    const [ele] = Object.keys(variants), opt = { variant: reaction }\r\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\r\n    Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\r\n  } else {\r\n    Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n      const opt = { variant: ele }\r\n\r\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\r\n      Formulas[`${ele}_${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\r\n    })\r\n  }\r\n})\r\n\r\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\r\n  const opt = { variant: reaction }\r\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\r\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\r\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\r\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\r\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\r\n      StatData[`${ele}_${reaction}_elemental_${type}`] = { name: `${name} ${typeName}`, ...opt }\r\n      Formulas[`${ele}_${reaction}_elemental_${type}`] = (s) => s[`${ele}_elemental_${type}`] * s[`${ele}_${reaction}_multi`]\r\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\r\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\r\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s[`${ele}_${move}_${type}`] * s[`${ele}_${reaction}_multi`]\r\n      })\r\n    })\r\n  })\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\r\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\r\n  const formulaList = dependencyKeys.map(key => {\r\n    const modifier = modifiers[key] ?? {}\r\n    const constModifier = Object.entries(modifier).filter(([k]) => StatData[k]?.const)\r\n    const dynamicModifier = Object.entries(modifier).filter(([k]) => !(StatData[k]?.const))\r\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]) => accu + c[k] * m, 0)\r\n    const dynamicFunc = (s) => dynamicModifier.reduce((accu, [k, m]) => accu + s[k] * m, 0)\r\n\r\n    let funcIndicator = 0\r\n    if (constModifier.length) funcIndicator += 1\r\n    if (dynamicModifier.length) funcIndicator += 2\r\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\r\n\r\n    let tmp\r\n    switch (funcIndicator) {\r\n      case 0: tmp = Formulas[key]; break\r\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\r\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\r\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 4: tmp = (s, c) => c[key]; break\r\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\r\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\r\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n      case 8: tmp = (s, c) => s[key]; break\r\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\r\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\r\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\r\n    }\r\n    const func = tmp\r\n\r\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\r\n\r\n    if (!(key in Formulas))\r\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\r\n\r\n    if (StatData[key]?.const) {\r\n      constData[key] = stats[key]\r\n      constData[key] = func(stats, constData)\r\n      stats[key] = constData[key]\r\n      if (dynamicModifier.length)\r\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\r\n      return null\r\n    }\r\n\r\n    if (!(key in Formulas))\r\n      initialStats[key] = stats[key]\r\n\r\n    return [key, func]\r\n  }).filter((func) => func)\r\n\r\n  if (debug) console.log(initialStats, constData)\r\n\r\n  return {\r\n    initialStats,\r\n    formula: s => {\r\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\r\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\r\n      Object.assign(s, constData)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  PreprocessFormulas,\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nimport { objMultiplication } from '../Util/Util.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n  static getWeaponTypeKeys = () => Object.keys(WeaponTypeData)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    stats = stats(refineIndex)\r\n    if (stacks !== 1) objMultiplication(stats, stacks)\r\n    return stats\r\n  }\r\n}"],"sourceRoot":""}