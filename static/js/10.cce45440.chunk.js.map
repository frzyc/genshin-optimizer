{"version":3,"sources":["Weapon/Weapon.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/StarDisplay.js","Data/WeaponData.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-bootstrap/esm/Badge.js","StatConstants.js","StatDependency.js","Data/CharacterData.js","Components/StatIcon.js","dbV2KeyMap.js","DatabaseUtil.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ToggleButton.js","../node_modules/react-bootstrap/esm/ToggleButtonGroup.js","Character/CharacterCard.js","Character/CharacterDisplay.js","Util/Util.js","Stat.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Character/Character.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Util/ConditionalsUtil.js","Data/ElementalData.js","Artifact/ArtifactDatabase.js","StatData.js"],"names":["Weapon","this","Error","getWeaponDataImport","WeaponDataImport","getLevelName","levelKey","defVal","LevelNameData","getLevelIndex","WeaponLevelKeys","indexOf","getWeaponName","weaponKey","WeaponData","name","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","refineIndex","charFinalStats","character","passiveDescription","getWeaponDescription","description","getWeaponConditional","conditional","getWeaponImg","img","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","getWeaponSubStatKey","subStatKey","getWeaponBonusStat","stats","getWeaponsOfType","weaponType","Object","fromEntries","entries","filter","getWeaponTypeName","WeaponTypeData","getWeaponTypeKeys","keys","getWeaponMainStatValWithOverride","weaponObj","overrideMainVal","key","getWeaponSubStatValWithOverride","overrideSubVal","getWeaponConditionalStat","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","objMultiplication","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","StarIcon","icon","faStar","Stars","stars","colored","className","Array","map","_","i","then","imp","default","_objectWithoutProperties","source","excluded","target","sourceKeys","length","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","Badge","React","forwardRef","_ref","ref","bsPrefix","variant","pill","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","hitTypes","hit","avgHit","critHit","hitMoves","normal","charged","plunging","skill","burst","hitElements","ElementalData","transformativeReactions","overloaded","shattered","electrocharged","superconduct","swirl","amplifyingReactions","vaporize","melt","ReactionMatrix","crystalize","GetFormulaDependency","formula","dependency","Set","Proxy","get","prop","receiver","add","formulaKeyDependency","freeze","Formulas","GetDependencies","modifiers","StatData","dependencies","forEach","InsertDependencies","has","k","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","critRate_","critDMG_","enerRech_","stamina","CharacterSpecializedStatKey","StatIcon","characterHP","faTint","finalHP","hp_","hp","baseATK","faFistRaised","characterATK","finalATK","atk_","atk","characterDEF","faShieldAlt","finalDEF","def_","def","eleMas","faMagic","faDice","faDiceD20","faSync","heal_","faFirstAid","StatIconEle","statKey","changes","char_ele_key","char_level","hp_base","hp_final","atk_character_base","atk_base","atk_final","atk_weapon","def_base","def_final","phy_dmg_bonus","phy_res","anemo_ele_dmg_bonus","geo_ele_dmg_bonus","electro_ele_dmg_bonus","hydro_ele_dmg_bonus","pyro_ele_dmg_bonus","cryo_ele_dmg_bonus","anemo_ele_res","geo_ele_res","electro_ele_res","hydro_ele_res","pyro_ele_res","cryo_ele_res","ener_rech","crit_rate","crit_dmg","stam","heal_bonu","inc_heal","pow_shield","red_cd","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","norm_atk_dmg","char_atk_dmg","plunge_dmg","norm_atk_crit_dmg","char_atk_crit_dmg","plunge_crit_dmg","norm_atk_avg_dmg","char_atk_avg_dmg","plunge_avg_dmg","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","skill_dmg_bonus","burst_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_crit_rate","burst_crit_rate","anemo_skill_dmg","anemo_burst_dmg","anemo_skill_crit_dmg","anemo_burst_crit_dmg","anemo_skill_avg_dmg","anemo_burst_avg_dmg","geo_skill_dmg","geo_burst_dmg","geo_skill_crit_dmg","geo_burst_crit_dmg","geo_skill_avg_dmg","geo_burst_avg_dmg","electro_skill_dmg","electro_burst_dmg","electro_skill_crit_dmg","electro_burst_crit_dmg","electro_skill_avg_dmg","electro_burst_avg_dmg","hydro_skill_dmg","hydro_burst_dmg","hydro_skill_crit_dmg","hydro_burst_crit_dmg","hydro_skill_avg_dmg","hydro_burst_avg_dmg","pyro_skill_dmg","pyro_burst_dmg","pyro_skill_crit_dmg","pyro_burst_crit_dmg","pyro_skill_avg_dmg","pyro_burst_avg_dmg","cryo_skill_dmg","cryo_burst_dmg","cryo_skill_crit_dmg","cryo_burst_crit_dmg","cryo_skill_avg_dmg","cryo_burst_avg_dmg","phy_dmg","phy_crit_dmg","phy_avg_dmg","anemo_ele_dmg","anemo_ele_crit_dmg","anemo_ele_avg_dmg","geo_ele_dmg","geo_ele_crit_dmg","geo_ele_avg_dmg","electro_ele_dmg","electro_ele_crit_dmg","electro_ele_avg_dmg","hydro_ele_dmg","hydro_ele_crit_dmg","hydro_ele_avg_dmg","pyro_ele_dmg","pyro_ele_crit_dmg","pyro_ele_avg_dmg","cryo_ele_dmg","cryo_ele_crit_dmg","cryo_ele_avg_dmg","overload_dmg","overload_dmg_bonus","overload_multi","electrocharged_dmg","electrocharged_dmg_bonus","electrocharged_multi","superconduct_dmg","superconduct_dmg_bonus","superconduct_multi","burning_dmg","burning_dmg_bonus","swirl_dmg","swirl_dmg_bonus","swirl_multi","shatter_dmg","shatter_dmg_bonus","shatter_multi","crystalize_dmg","crystalize_dmg_bonus","melt_dmg_bonus","vaporize_dmg_bonus","pyro_vaporize_normal_dmg","pyro_vaporize_normal_crit_dmg","pyro_vaporize_normal_avg_dmg","pyro_vaporize_chraged_dmg","pyro_vaporize_chraged_crit_dmg","pyro_vaporize_chraged_avg_dmg","pyro_vaporize_plunge_dmg","pyro_vaporize_plunge_crit_dmg","pyro_vaporize_plunge_avg_dmg","pyro_vaporize_skill_dmg","pyro_vaporize_skill_crit_dmg","pyro_vaporize_skill_avg_dmg","pyro_vaporize_burst_dmg","pyro_vaporize_burst_crit_dmg","pyro_vaporize_burst_avg_dmg","pyro_vaporize_ele_dmg","pyro_vaporize_ele_crit_dmg","pyro_vaporize_ele_avg_dmg","hydro_vaporize_normal_dmg","hydro_vaporize_normal_crit_dmg","hydro_vaporize_normal_avg_dmg","hydro_vaporize_chraged_dmg","hydro_vaporize_chraged_crit_dmg","hydro_vaporize_chraged_avg_dmg","hydro_vaporize_plunge_dmg","hydro_vaporize_plunge_crit_dmg","hydro_vaporize_plunge_avg_dmg","hydro_vaporize_skill_dmg","hydro_vaporize_skill_crit_dmg","hydro_vaporize_skill_avg_dmg","hydro_vaporize_burst_dmg","hydro_vaporize_burst_crit_dmg","hydro_vaporize_burst_avg_dmg","hydro_vaporize_ele_dmg","hydro_vaporize_ele_crit_dmg","hydro_vaporize_ele_avg_dmg","pyro_melt_normal_dmg","pyro_melt_normal_crit_dmg","pyro_melt_normal_avg_dmg","pyro_melt_chraged_dmg","pyro_melt_chraged_crit_dmg","pyro_melt_chraged_avg_dmg","pyro_melt_plunge_dmg","pyro_melt_plunge_crit_dmg","pyro_melt_plunge_avg_dmg","pyro_melt_skill_dmg","pyro_melt_skill_crit_dmg","pyro_melt_skill_avg_dmg","pyro_melt_burst_dmg","pyro_melt_burst_crit_dmg","pyro_melt_burst_avg_dmg","pyro_melt_ele_dmg","pyro_melt_ele_crit_dmg","pyro_melt_ele_avg_dmg","cryo_melt_normal_dmg","cryo_melt_normal_crit_dmg","cryo_melt_normal_avg_dmg","cryo_melt_chraged_dmg","cryo_melt_chraged_crit_dmg","cryo_melt_chraged_avg_dmg","cryo_melt_plunge_dmg","cryo_melt_plunge_crit_dmg","cryo_melt_plunge_avg_dmg","cryo_melt_skill_dmg","cryo_melt_skill_crit_dmg","cryo_melt_skill_avg_dmg","cryo_melt_burst_dmg","cryo_melt_burst_crit_dmg","cryo_melt_burst_avg_dmg","cryo_melt_ele_dmg","cryo_melt_ele_crit_dmg","cryo_melt_ele_avg_dmg","enemy_phy_res","enemy_phy_res_multi","enemy_phy_immunity","anemo_enemy_ele_res","anemo_enemy_ele_res_multi","anemo_enemy_ele_immunity","geo_enemy_ele_res","geo_enemy_ele_res_multi","geo_enemy_ele_immunity","electro_enemy_ele_res","electro_enemy_ele_res_multi","electro_enemy_ele_immunity","hydro_enemy_ele_res","hydro_enemy_ele_res_multi","hydro_enemy_ele_immunity","pyro_enemy_ele_res","pyro_enemy_ele_res_multi","pyro_enemy_ele_immunity","cryo_enemy_ele_res","cryo_enemy_ele_res_multi","cryo_enemy_ele_immunity","ele_mas","amp_reaction_base_multi","enemy_level_multi","enemy_level","dmgModeToHitMode","avg_dmg","dmg","DatabaseInitAndVerify","dbVersion","getDatabaseVersion","localStorage","startsWith","loadFromLocalStorage","characterKey","equippedArtifacts","dbKey","getItem","id","dmgMode","rest","isArray","buildSetting","mainStat","stat","v2change","statFilters","value","hitMode","saveToLocalStorage","values","artid","art","location","removeItem","ArtifactDisplayState","filterMainStatKey","filterSubstats","charDBJustPopualted","CharacterDatabase","populateDatebaseFromLocalStorage","artDBJustPopualted","ArtifactDatabase","getArtifactDatabase","valid","artInSlotId","getArtifactIDFromSlot","slotKey","equipArtifact","Artifact","substatsValidation","numStars","parseInt","keyMapping","setKey","mainStatKey","endsWith","replace","substats","obj","updateArtifact","chars","getCharacterDatabase","equippedArt","moveToNewLocation","artifactConditionals","cond","srcKey","srcKey2","updateCharacter","setDatabaseVersion","version","children","func","index","Children","child","isValidElement","noop","ToggleButton","checked","type","onChange","disabled","inputRef","_useState","useState","focused","setFocused","handleFocus","useCallback","e","tagName","handleBlur","Button","undefined","active","autoComplete","onFocus","onBlur","ToggleButtonGroup","_useUncontrolled","useUncontrolled","controlledProps","getValues","concat","invariant","ButtonGroup","toggle","_child$props","childVal","childOnChange","cloneElement","chainFunction","inputVal","event","isActive","n","handleToggle","vertical","CharacterCard","onEdit","onDelete","cardClassName","bg","header","footer","useReducer","x","forceUpdate","useEffect","Promise","all","Character","getCharacterDataImport","getDataImport","build","calculateBuild","setToSlots","weapon","constellation","getName","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","weaponName","weaponMainVal","weaponSubKey","weaponSubVal","weaponLevelName","weaponPassiveName","text","Header","xs","size","onClick","faEdit","faTrashAlt","Body","style","cursor","src","getThumb","getStar","thumbnail","getStatValueWithOverride","Stat","getStatName","getStatUnit","getSetEffects","arr","artifactSetName","getSetName","highestNum","Math","max","unit","statVal","finalStats","toFixed","fixedUnit","Footer","Link","to","pathname","CharacterDisplayCardPromise","CharacterDisplayCard","lazy","sortingFunc","ck","getLevel","CharacterDisplay","deleteCharacter","remove","editCharacter","setState","charIdToEdit","showEditor","scrollRef","current","scrollIntoView","behavior","cancelEditCharacter","state","sortBy","elementalFilter","getElementalKeysWithoutPhysical","weaponFilter","saved","ReactGA","pageview","createRef","charKeyList","getCharacterKeyList","cKey","includes","sort","a","b","diff","Suspense","fallback","editable","onClose","defaultValue","v","eleKey","lg","md","faPlus","charKey","getRandomElementFromArray","array","floor","random","getRandomIntInclusive","min","ceil","data","JSON","parse","setItem","stringify","deepClone","closeEnoughFloat","abs","closeEnoughInt","clamp","val","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","multi","htmlStatsData","getStatNamePretty","pretty","getStatNameRaw","getStatNameWithPercent","getStatVariant","printStat","f","expand","getPrintableFormulaStatKeyList","statList","formulaKeys","FormulaText","newModifiersKeys","printFormula","modifierText","mkey","multiplier","options","statName","statUnit","reactionMatrixElementRenderer","o","sign","disVal","powerText","heal_multi","enemyLevel_multi","ele","res","move","assign","amplificative_dmg_","reaction","variants","baseMulti","transformative_dmg_","crystalize_eleMas_","crystalize_multi","crystalize_hit","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","talentKey","formulaDB","getCDataObj","formulaKey","tk","find","getBaseStatValue","getSpecializedStatKey","getSpeicalizedStatVal","characterObj","baseStat","getIndexFromlevelkey","getElementalName","elementalKey","getAllCharacterKeys","star","getElementalKeys","getConstellationName","constellationName","getTitles","titles","getlevelKeys","getlevelNames","getAscension","getSpecializedStat","specializeStat","thumbImg","getCard","cardImg","getTalentImg","getTalent","getConstellationImg","constIndex","talent","getTalentName","getTalentLevelBoost","talents","talentBoost","boostEntry","getTalentDocument","document","getTalentDocumentSections","ascension","section","getTalentField","sectionIndex","fieldIndex","field","fields","getTalentFieldValue","talentLevelKeys","getTalentStats","getTalentStatsAll","statsArr","push","getTalentConditional","conditionalKey","talentLvlKey","sections","tempCond","getTalentConditionalStats","getTalentConditionalFields","isAutoElemental","isAutoInfusable","auto","infusable","hasTalentPage","Boolean","getDisplayStatKeys","basicKeys","transReactions","ElementToReactionKeys","charFormulas","genericAvgHit","reactions","hasOverride","baseStatOverrides","equipArtifacts","artifactIds","artIdsOnCharacter","artIdsNotOnCharacter","getSlotKeys","artNotOnChar","artOnChar","notCharLoc","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","getMainStatValue","artifactsAssumeFull","substat","setNumKey","getConditionalStats","PreprocessFormulas","mergeStats","modifier","autoInfused","reactionMode","talentConditionals","statKeys","characterEle","overrides","hasOwnProperty","specializedStatVal","specialStatKey","s","initiated","characterDatabase","isInvalid","char","getIdNameList","split","dchar","unequipArtifactOnSlot","equipArtifactBuild","clearDatabase","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","physical_dmg_","ele_dmg_","2","ArtifactSubStatsData","ArtifactSubstatsMinMax","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","rolls","efficiency","getSubstatEfficiency","getArtifactEfficiency","currentEfficiency","maximumEfficiency","errMsgs","some","currentNumOfRolls","reduce","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","maxPerRoll","getSubstatAllMax","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","getPieceName","getPieceIcon","icons","getSetEffectsObj","setEffects","getArtifactSetNumStats","artifactSetEffect","artArr","setNumKeys","getSetEffectText","setEffectText","getSetEffectConditional","getSlotName","getSlotIcon","getSlotMainStatKeys","getSlotNameWithIcon","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","accu","reverse","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","_createForOfIteratorHelper","allowArrayLike","it","F","done","_e","err","normalCompletion","didErr","step","next","_e2","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","selectedConditionalNum","selectedConditional","curConditional","maxStack","physical","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","flat","const","characterLevel","weaponATK","dmg_","weakspotDMG_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","staminaDec_","staminaGlidingDec_","staminaChargedDec_","crystalize_dmg_","burning_dmg_","enemyLevel","enemyDEFRed_","pow","dependencyKeys","debug","constData","formulaList","tmp","constModifier","dynamicModifier","constFunc","m","dynamicFunc","funcIndicator","console","log","error","moveName","eleName","opt","typeName","reactionName"],"mappings":"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","file":"static/js/10.cce45440.chunk.js","sourcesContent":["import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\nimport { objMultiplication } from '../Util/Util.js';\nexport default class Weapon {\n  //do not instantiate.\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\n\n  static getWeaponDataImport = () => WeaponDataImport\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\n\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\n\n  //base Stat\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\n\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\n  static getWeaponTypeKeys = () => Object.keys(WeaponTypeData)\n\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\n\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\n    let conditional = this.getWeaponConditional(weaponKey)\n    if (!conditional || !conditionalNum) return defVal\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\n    if (!stacks) return defVal\n    stats = stats(refineIndex)\n    if (stacks !== 1) objMultiplication(stats, stacks)\n    return stats\n  }\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\nimport cryo from './Element_Cryo.png'\nimport dendro from './Element_Dendro.png'\nimport electro from './Element_Electro.png'\nimport geo from './Element_Geo.png'\nimport hydro from './Element_Hydro.png'\nimport pyro from './Element_Pyro.png'\n\nimport bow from './Weapon-class-bow-icon.png'\nimport catalyst from './Weapon-class-catalyst-icon.png'\nimport claymore from './Weapon-class-claymore-icon.png'\nimport polearm from './Weapon-class-polearm-icon.png'\nimport sword from './Weapon-class-sword-icon.png'\n\nimport fragile from './Item_Fragile_Resin.png'\nimport condensed from './Item_Condensed_Resin.png'\n\n//EXP BOOKS\nimport advice from './Item_Wanderer\\'s_Advice.png'\nimport wit from './Item_Hero\\'s_Wit.png'\nimport experience from './Item_Adventurer\\'s_Experience.png'\n\nlet Assets = {\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\n  resin: {\n    fragile,\n    condensed\n  },\n  exp_books: {\n    advice,\n    wit,\n    experience,\n  }\n};\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import { faStar } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\n</span>\n\nexport {\n  StarIcon,\n  Stars\n}\n","let WeaponData = {}\nlet WeaponDataImport = import('./Weapons')\nWeaponDataImport.then(imp => {\n  WeaponData = imp.default\n  WeaponDataImport = null\n})\n\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\nconst WeaponTypeData = {\n  sword: \"Sword\",\n  claymore: \"Claymore\",\n  catalyst: \"Catalyst\",\n  bow: \"Bow\",\n  polearm: \"Polearm\"\n}\n\nexport {\n  WeaponData,\n  WeaponDataImport,\n  WeaponLevelKeys,\n  LevelNameData,\n  WeaponTypeData\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import ElementalData from \"./Data/ElementalData\";\n\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\nexport const hitElements = ElementalData\nexport const transformativeReactions = {\n  overloaded: [ \"Overloaded\", \"pyro\", 4 ],\n  shattered: [ \"Shattered\", \"physical\", 3 ],\n  electrocharged: [ \"Electro-Charged\", \"electro\", 2.4 ],\n  superconduct: [ \"Superconduct\", \"cryo\", 1 ],\n  swirl: [ \"Swirl\", \"anemo\", 1.2 ],\n}\nexport const amplifyingReactions = {\n  vaporize: [\"Vaporize\", { pyro: 1.5, hydro: 2 }],\n  melt: [\"Melt\", { pyro: 2, cryo: 1.5 }],\n}\nexport const otherReactions = {\n  burning: \"Burning\",\n  crystalize: \"Crystalize\",\n}\nexport const ReactionMatrix = {\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\n}\n","import { Formulas, StatData } from \"./StatData\"\n\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\nfunction GetFormulaDependency(formula) {\n  const dependency = new Set()\n  formula(\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\n  return [...dependency]\n}\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\n))\n\nif (process.env.NODE_ENV === \"development\") {\n  let statKeys = Object.keys(StatData)\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\n    dependencies.forEach(key =>\n      !statKeys.includes(key) &&\n        console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\n  )\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\n    StatData[formulaKey]?.const && dependencies.forEach(key => \n      !StatData[key]?.const &&\n        console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\n    )\n  )\n}\n\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\n  let dependencies = new Set()\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\n  return [...dependencies]\n}\nfunction InsertDependencies(key, modifiers, dependencies) {\n  if (dependencies.has(key)) return\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\n  dependencies.add(key)\n}\n\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\nconst reduceOptimizationTarget = (optimizationTarget) =>\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0]] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\n\n\nexport {\n  GetFormulaDependency,\n  GetDependencies,\n  reduceOptimizationTarget,\n}\n","let CharacterData = {}\nlet CharacterDataImport = import('./Characters')\nCharacterDataImport.then(imp => {\n  CharacterData = imp.default\n  CharacterDataImport = null\n})\n// import characters from \nconst LevelsData = {\n  \"L1\": {\n    name: \"Lv. 1\",\n    level: 1,\n    asend: 0\n  },\n  \"L20\": {\n    name: \"Lv. 20\",\n    level: 20,\n    asend: 0\n  },\n  \"L20A\": {\n    name: \"Lv. 20 As.1\",\n    level: 20,\n    asend: 1\n\n  },\n  \"L40\": {\n    name: \"Lv. 40\",\n    level: 40,\n    asend: 1\n  },\n  \"L40A\": {\n    name: \"Lv. 40 As.2\",\n    level: 40,\n    asend: 2\n  },\n\n  \"L50\": {\n    name: \"Lv. 50\",\n    level: 50,\n    asend: 2\n  },\n  \"L50A\": {\n    name: \"Lv. 50 As.3\",\n    level: 50,\n    asend: 3\n  },\n  \"L60\": {\n    name: \"Lv. 60\",\n    level: 60,\n    asend: 3\n  },\n  \"L60A\": {\n    name: \"Lv. 60 As.4\",\n    level: 60,\n    asend: 4\n  },\n  \"L70\": {\n    name: \"Lv. 70\",\n    level: 70,\n    asend: 4\n  },\n  \"L70A\": {\n    name: \"Lv. 70 As.5\",\n    level: 70,\n    asend: 5\n  },\n\n  \"L80\": {\n    name: \"Lv. 80\",\n    level: 80,\n    asend: 5\n  },\n  \"L80A\": {\n    name: \"Lv. 80 As.6\",\n    level: 80,\n    asend: 6\n  },\n  \"L90\": {\n    name: \"Lv. 90\",\n    level: 90,\n    asend: 6\n  }\n\n}\nconst characterStatBase = {\n  critRate_: 5,\n  critDMG_: 50,\n  enerRech_: 100,\n  stamina: 100\n}\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\n\nexport {\n  LevelsData,\n  characterStatBase,\n  CharacterData,\n  CharacterDataImport,\n  CharacterSpecializedStatKey\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst StatIcon = {\n  characterHP: faTint,\n  finalHP: faTint,\n  hp_: faTint,\n  hp: faTint,\n\n  baseATK: faFistRaised,\n  characterATK: faFistRaised,\n  finalATK: faFistRaised,\n  atk_: faFistRaised,\n  atk: faFistRaised,\n\n  characterDEF: faShieldAlt,\n  finalDEF: faShieldAlt,\n  def_: faShieldAlt,\n  def: faShieldAlt,\n\n  eleMas: faMagic,\n  critRate_: faDice,\n  critDMG_: faDiceD20,\n  enerRech_: faSync,\n  heal_: faFirstAid,\n}\n\nconst StatIconEle = (statKey) =>\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\n\nexport default StatIcon\n\nexport {\n  StatIconEle\n}","//for DB v2, we changed a bunch of keys.\nconst changes = {\n  char_ele_key: \"characterEle\",\n  char_level: \"characterLevel\",\n\n  hp_base: \"characterHP\",\n  hp_final: \"finalHP\",\n  atk_character_base: \"characterATK\",\n  atk_base: \"baseATK\",\n  atk_final: \"finalATK\",\n  atk_weapon: \"weaponATK\",\n  def_base: \"characterDEF\",\n  def_final: \"finalDEF\",\n  phy_dmg_bonus: \"physical_dmg_\",\n  phy_res: \"physical_res_\",\n  anemo_ele_dmg_bonus: \"anemo_dmg_\",\n  geo_ele_dmg_bonus: \"geo_dmg_\",\n  electro_ele_dmg_bonus: \"electro_dmg_\",\n  hydro_ele_dmg_bonus: \"hydro_dmg_\",\n  pyro_ele_dmg_bonus: \"pyro_dmg_\",\n  cryo_ele_dmg_bonus: \"cryo_dmg_\",\n  anemo_ele_res: \"anemo_res_\",\n  geo_ele_res: \"geo_res_\",\n  electro_ele_res: \"electro_res_\",\n  hydro_ele_res: \"hydro_res_\",\n  pyro_ele_res: \"pyro_res_\",\n  cryo_ele_res: \"cryo_res_\",\n  ener_rech: \"enerRech_\",\n  crit_rate: \"critRate_\",\n  crit_dmg: \"critDMG_\",\n  stam: \"stamina\",\n  heal_bonu: \"heal_\",\n  inc_heal: \"incHeal_\",\n  pow_shield: \"powShield_\",\n  red_cd: \"cdRed_\",\n  skill_cd_red: \"skillCDRed_\",\n  burst_cd_red: \"burstCDRed_\",\n  all_dmg_bonus: \"dmg_\",\n  move_spd: \"moveSPD_\",\n  atk_spd: \"atkSPD_\",\n  weakspot_dmg: \"weakspotDMG_\",\n  stamina_dec: \"staminaDec_\",\n  stamina_gliding_dec: \"staminaGlidingDec_\",\n  stamina_charged_dec: \"staminaChargedDec_\",\n  ele_mas_multi_x: \"eleMasX\",\n  ele_mas_multi_y: \"eleMasY\",\n  ele_mas_multi_z: \"eleMasZ\",\n\n  norm_atk_dmg: \"physical_normal_hit\",\n  char_atk_dmg: \"physical_charged_hit\",\n  plunge_dmg: \"physical_plunging_hit\",\n  norm_atk_crit_dmg: \"physical_normal_critHit\",\n  char_atk_crit_dmg: \"physical_charged_critHit\",\n  plunge_crit_dmg: \"physical_plunging_critHit\",\n  norm_atk_avg_dmg: \"physical_normal_avgHit\",\n  char_atk_avg_dmg: \"physical_charged_avgHit\",\n  plunge_avg_dmg: \"physical_plunging_avgHit\",\n  norm_atk_dmg_bonus: \"normal_dmg_\",\n  char_atk_dmg_bonus: \"charged_dmg_\",\n  plunge_atk_dmg_bonus: \"plunging_dmg_\",\n  skill_dmg_bonus: \"skill_dmg_\",\n  burst_dmg_bonus: \"burst_dmg_\",\n  norm_atk_crit_rate: \"normal_critRate_\",\n  char_atk_crit_rate: \"charged_critRate_\",\n  skill_crit_rate: \"skill_critRate_\",\n  burst_crit_rate: \"burst_critRate_\",\n\n  anemo_skill_dmg: \"anemo_skill_hit\",\n  anemo_burst_dmg: \"anemo_burst_hit\",\n  anemo_skill_crit_dmg: \"anemo_skill_critHit\",\n  anemo_burst_crit_dmg: \"anemo_burst_critHit\",\n  anemo_skill_avg_dmg: \"anemo_skill_avgHit\",\n  anemo_burst_avg_dmg: \"anemo_burst_avgHit\",\n  geo_skill_dmg: \"geo_skill_hit\",\n  geo_burst_dmg: \"geo_burst_hit\",\n  geo_skill_crit_dmg: \"geo_skill_critHit\",\n  geo_burst_crit_dmg: \"geo_burst_critHit\",\n  geo_skill_avg_dmg: \"geo_skill_avgHit\",\n  geo_burst_avg_dmg: \"geo_burst_avgHit\",\n  electro_skill_dmg: \"electro_skill_hit\",\n  electro_burst_dmg: \"electro_burst_hit\",\n  electro_skill_crit_dmg: \"electro_skill_critHit\",\n  electro_burst_crit_dmg: \"electro_burst_critHit\",\n  electro_skill_avg_dmg: \"electro_skill_avgHit\",\n  electro_burst_avg_dmg: \"electro_burst_avgHit\",\n  hydro_skill_dmg: \"hydro_skill_hit\",\n  hydro_burst_dmg: \"hydro_burst_hit\",\n  hydro_skill_crit_dmg: \"hydro_skill_critHit\",\n  hydro_burst_crit_dmg: \"hydro_burst_critHit\",\n  hydro_skill_avg_dmg: \"hydro_skill_avgHit\",\n  hydro_burst_avg_dmg: \"hydro_burst_avgHit\",\n  pyro_skill_dmg: \"pyro_skill_hit\",\n  pyro_burst_dmg: \"pyro_burst_hit\",\n  pyro_skill_crit_dmg: \"pyro_skill_critHit\",\n  pyro_burst_crit_dmg: \"pyro_burst_critHit\",\n  pyro_skill_avg_dmg: \"pyro_skill_avgHit\",\n  pyro_burst_avg_dmg: \"pyro_burst_avgHit\",\n  cryo_skill_dmg: \"cryo_skill_hit\",\n  cryo_burst_dmg: \"cryo_burst_hit\",\n  cryo_skill_crit_dmg: \"cryo_skill_critHit\",\n  cryo_burst_crit_dmg: \"cryo_burst_critHit\",\n  cryo_skill_avg_dmg: \"cryo_skill_avgHit\",\n  cryo_burst_avg_dmg: \"cryo_burst_avgHit\",\n\n  phy_dmg: \"physical_hit\",\n  phy_crit_dmg: \"physical_critHit\",\n  phy_avg_dmg: \"physical_avgHit\",\n  anemo_ele_dmg: \"anemo_hit\",\n  anemo_ele_crit_dmg: \"anemo_critHit\",\n  anemo_ele_avg_dmg: \"anemo_avgHit\",\n  geo_ele_dmg: \"geo_hit\",\n  geo_ele_crit_dmg: \"geo_critHit\",\n  geo_ele_avg_dmg: \"geo_avgHit\",\n  electro_ele_dmg: \"electro_hit\",\n  electro_ele_crit_dmg: \"electro_critHit\",\n  electro_ele_avg_dmg: \"electro_avgHit\",\n  hydro_ele_dmg: \"hydro_hit\",\n  hydro_ele_crit_dmg: \"hydro_critHit\",\n  hydro_ele_avg_dmg: \"hydro_avgHit\",\n  pyro_ele_dmg: \"pyro_hit\",\n  pyro_ele_crit_dmg: \"pyro_critHit\",\n  pyro_ele_avg_dmg: \"pyro_avgHit\",\n  cryo_ele_dmg: \"cryo_hit\",\n  cryo_ele_crit_dmg: \"cryo_critHit\",\n  cryo_ele_avg_dmg: \"cryo_avgHit\",\n\n  overload_dmg: \"overload_hit\",\n  overload_dmg_bonus: \"overload_dmg_\",\n  overload_multi: \"overload_multi\",\n  electrocharged_dmg: \"electrocharged_hit\",\n  electrocharged_dmg_bonus: \"electrocharged_dmg_\",\n  electrocharged_multi: \"electrocharged_multi\",\n  superconduct_dmg: \"superconduct_hit\",\n  superconduct_dmg_bonus: \"superconduct_dmg_\",\n  superconduct_multi: \"superconduct_multi\",\n  burning_dmg: \"burning_hit\",\n  burning_dmg_bonus: \"burning_dmg_\",\n  swirl_dmg: \"swirl_hit\",\n  swirl_dmg_bonus: \"swirl_dmg_\",\n  swirl_multi: \"swirl_multi\",\n  shatter_dmg: \"shattered_hit\",\n  shatter_dmg_bonus: \"shattered_dmg_\",\n  shatter_multi: \"shattered_multi\",\n  crystalize_dmg: \"crystalize_hit\",\n  crystalize_dmg_bonus: \"crystalize_dmg_\",\n\n  melt_dmg_bonus: \"melt_dmg_\",\n  vaporize_dmg_bonus: \"vaporize_dmg_\",\n\n  pyro_vaporize_normal_dmg: \"pyro_vaporize_normal_hit\",\n  pyro_vaporize_normal_crit_dmg: \"pyro_vaporize_normal_critHit\",\n  pyro_vaporize_normal_avg_dmg: \"pyro_vaporize_normal_avgHit\",\n  pyro_vaporize_chraged_dmg: \"pyro_vaporize_chraged_hit\",\n  pyro_vaporize_chraged_crit_dmg: \"pyro_vaporize_chraged_critHit\",\n  pyro_vaporize_chraged_avg_dmg: \"pyro_vaporize_chraged_avgHit\",\n  pyro_vaporize_plunge_dmg: \"pyro_vaporize_plunging_hit\",\n  pyro_vaporize_plunge_crit_dmg: \"pyro_vaporize_plunging_critHit\",\n  pyro_vaporize_plunge_avg_dmg: \"pyro_vaporize_plunging_avgHit\",\n  pyro_vaporize_skill_dmg: \"pyro_vaporize_skill_hit\",\n  pyro_vaporize_skill_crit_dmg: \"pyro_vaporize_skill_critHit\",\n  pyro_vaporize_skill_avg_dmg: \"pyro_vaporize_skill_avgHit\",\n  pyro_vaporize_burst_dmg: \"pyro_vaporize_burst_hit\",\n  pyro_vaporize_burst_crit_dmg: \"pyro_vaporize_burst_critHit\",\n  pyro_vaporize_burst_avg_dmg: \"pyro_vaporize_burst_avgHit\",\n  pyro_vaporize_ele_dmg: \"pyro_vaporize_hit\",\n  pyro_vaporize_ele_crit_dmg: \"pyro_vaporize_critHit\",\n  pyro_vaporize_ele_avg_dmg: \"pyro_vaporize_avgHit\",\n  hydro_vaporize_normal_dmg: \"hydro_vaporize_normal_hit\",\n  hydro_vaporize_normal_crit_dmg: \"hydro_vaporize_normal_critHit\",\n  hydro_vaporize_normal_avg_dmg: \"hydro_vaporize_normal_avgHit\",\n  hydro_vaporize_chraged_dmg: \"hydro_vaporize_chraged_hit\",\n  hydro_vaporize_chraged_crit_dmg: \"hydro_vaporize_chraged_critHit\",\n  hydro_vaporize_chraged_avg_dmg: \"hydro_vaporize_chraged_avgHit\",\n  hydro_vaporize_plunge_dmg: \"hydro_vaporize_plunging_hit\",\n  hydro_vaporize_plunge_crit_dmg: \"hydro_vaporize_plunging_critHit\",\n  hydro_vaporize_plunge_avg_dmg: \"hydro_vaporize_plunging_avgHit\",\n  hydro_vaporize_skill_dmg: \"hydro_vaporize_skill_hit\",\n  hydro_vaporize_skill_crit_dmg: \"hydro_vaporize_skill_critHit\",\n  hydro_vaporize_skill_avg_dmg: \"hydro_vaporize_skill_avgHit\",\n  hydro_vaporize_burst_dmg: \"hydro_vaporize_burst_hit\",\n  hydro_vaporize_burst_crit_dmg: \"hydro_vaporize_burst_critHit\",\n  hydro_vaporize_burst_avg_dmg: \"hydro_vaporize_burst_avgHit\",\n  hydro_vaporize_ele_dmg: \"hydro_vaporize_hit\",\n  hydro_vaporize_ele_crit_dmg: \"hydro_vaporize_critHit\",\n  hydro_vaporize_ele_avg_dmg: \"hydro_vaporize_avgHit\",\n  pyro_melt_normal_dmg: \"pyro_melt_normal_hit\",\n  pyro_melt_normal_crit_dmg: \"pyro_melt_normal_critHit\",\n  pyro_melt_normal_avg_dmg: \"pyro_melt_normal_avgHit\",\n  pyro_melt_chraged_dmg: \"pyro_melt_chraged_hit\",\n  pyro_melt_chraged_crit_dmg: \"pyro_melt_chraged_critHit\",\n  pyro_melt_chraged_avg_dmg: \"pyro_melt_chraged_avgHit\",\n  pyro_melt_plunge_dmg: \"pyro_melt_plunging_hit\",\n  pyro_melt_plunge_crit_dmg: \"pyro_melt_plunging_critHit\",\n  pyro_melt_plunge_avg_dmg: \"pyro_melt_plunging_avgHit\",\n  pyro_melt_skill_dmg: \"pyro_melt_skill_hit\",\n  pyro_melt_skill_crit_dmg: \"pyro_melt_skill_critHit\",\n  pyro_melt_skill_avg_dmg: \"pyro_melt_skill_avgHit\",\n  pyro_melt_burst_dmg: \"pyro_melt_burst_hit\",\n  pyro_melt_burst_crit_dmg: \"pyro_melt_burst_critHit\",\n  pyro_melt_burst_avg_dmg: \"pyro_melt_burst_avgHit\",\n  pyro_melt_ele_dmg: \"pyro_melt_hit\",\n  pyro_melt_ele_crit_dmg: \"pyro_melt_critHit\",\n  pyro_melt_ele_avg_dmg: \"pyro_melt_avgHit\",\n  cryo_melt_normal_dmg: \"cryo_melt_normal_hit\",\n  cryo_melt_normal_crit_dmg: \"cryo_melt_normal_critHit\",\n  cryo_melt_normal_avg_dmg: \"cryo_melt_normal_avgHit\",\n  cryo_melt_chraged_dmg: \"cryo_melt_chraged_hit\",\n  cryo_melt_chraged_crit_dmg: \"cryo_melt_chraged_critHit\",\n  cryo_melt_chraged_avg_dmg: \"cryo_melt_chraged_avgHit\",\n  cryo_melt_plunge_dmg: \"cryo_melt_plunging_hit\",\n  cryo_melt_plunge_crit_dmg: \"cryo_melt_plunging_critHit\",\n  cryo_melt_plunge_avg_dmg: \"cryo_melt_plunging_avgHit\",\n  cryo_melt_skill_dmg: \"cryo_melt_skill_hit\",\n  cryo_melt_skill_crit_dmg: \"cryo_melt_skill_critHit\",\n  cryo_melt_skill_avg_dmg: \"cryo_melt_skill_avgHit\",\n  cryo_melt_burst_dmg: \"cryo_melt_burst_hit\",\n  cryo_melt_burst_crit_dmg: \"cryo_melt_burst_critHit\",\n  cryo_melt_burst_avg_dmg: \"cryo_melt_burst_avgHit\",\n  cryo_melt_ele_dmg: \"cryo_melt_hit\",\n  cryo_melt_ele_crit_dmg: \"cryo_melt_critHit\",\n  cryo_melt_ele_avg_dmg: \"cryo_melt_avgHit\",\n\n  enemy_phy_res: \"physical_enemyRes_\",\n  enemy_phy_res_multi: \"physical_enemyRes_multi\",\n  enemy_phy_immunity: \"physical_enemyImmunity\",\n  anemo_enemy_ele_res: \"anemo_enemyRes_\",\n  anemo_enemy_ele_res_multi: \"anemo_enemyRes_multi\",\n  anemo_enemy_ele_immunity: \"anemo_enemyImmunity\",\n  geo_enemy_ele_res: \"geo_enemyRes_\",\n  geo_enemy_ele_res_multi: \"geo_enemyRes_multi\",\n  geo_enemy_ele_immunity: \"geo_enemyImmunity\",\n  electro_enemy_ele_res: \"electro_enemyRes_\",\n  electro_enemy_ele_res_multi: \"electro_enemyRes_multi\",\n  electro_enemy_ele_immunity: \"electro_enemyImmunity\",\n  hydro_enemy_ele_res: \"hydro_enemyRes_\",\n  hydro_enemy_ele_res_multi: \"hydro_enemyRes_multi\",\n  hydro_enemy_ele_immunity: \"hydro_enemyImmunity\",\n  pyro_enemy_ele_res: \"pyro_enemyRes_\",\n  pyro_enemy_ele_res_multi: \"pyro_enemyRes_multi\",\n  pyro_enemy_ele_immunity: \"pyro_enemyImmunity\",\n  cryo_enemy_ele_res: \"cryo_enemyRes_\",\n  cryo_enemy_ele_res_multi: \"cryo_enemyRes_multi\",\n  cryo_enemy_ele_immunity: \"cryo_enemyImmunity\",\n\n  ele_mas: \"eleMas\",\n  amp_reaction_base_multi: \"ampReactionBase_multi\",\n\n  enemy_level_multi: \"enemyLevel_multi\",\n  enemy_level: \"enemyLevel\"\n}\n/*\nconst same = [\n  hp, hp_, atk, atk_, def, def_, pyro_vaporize_multi, hydro_vaporize_multi, pyro_melt_multi, cryo_melt_multi,\n]\n\nconst removed = [\n  norm_atk_crit_multi, char_atk_crit_multi, norm_atk_bonus_multi, char_atk_bonus_multi, plunge_bonus_multi, skill_crit_multi, burst_crit_multi, skill_bonus_multi, burst_bonus_multi, phy_bonus_multi, anemo_ele_bonus_multi, geo_ele_bonus_multi, electro_ele_bonus_multi, hydro_ele_bonus_multi, pyro_ele_bonus_multi, cryo_ele_bonus_multi, crit_dmg_multi, crit_multi,\n]\n\nconst aded = [\n  plunging_critRate_, final_normal_critRate_, final_charged_critRate_, final_plunging_critRate_, final_skill_critRate_, final_burst_critRate_,\n]\n*/\n\n//renamed dmgMode to hitMode\nconst dmgModeToHitMode = {\n  avg_dmg: \"avgHit\",\n  dmg: \"hit\",\n  crit_dmg: \"critHit\"\n}\nexport { changes, dmgModeToHitMode }","import Artifact from \"./Artifact/Artifact\";\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\nimport { changes as v2change, dmgModeToHitMode } from \"./dbV2KeyMap\";\nimport { loadFromLocalStorage, saveToLocalStorage } from \"./Util/Util\";\n\nfunction DatabaseInitAndVerify() {\n  const dbVersion = getDatabaseVersion()\n  //edit the data before the database is populated\n  if (dbVersion < 2) {\n    //made characters unique, so need to convert character_{NUMBER} to char_{characterKey}. Will only save the 1st instance of a character.\n    Object.keys(localStorage).filter(key => key.startsWith(\"character_\")).forEach(key => {\n      const character = loadFromLocalStorage(key);\n      const { characterKey, equippedArtifacts = {} } = character\n      const dbKey = `char_${characterKey}`\n      if (localStorage.getItem(dbKey) === null) {\n        //if there is no character saved, create a new character\n        const { id, name, dmgMode, ...rest } = character\n        if (Array.isArray(rest?.buildSetting?.mainStat))\n          rest.buildSetting.mainStat = rest.buildSetting.mainStat.map(stat => stat in v2change ? v2change[stat] : stat)\n        if (typeof rest?.buildSetting?.statFilters === \"object\")\n          rest.buildSetting.statFilters = Object.fromEntries(Object.entries(rest.buildSetting.statFilters).map(([stat, value]) => [stat in v2change ? v2change[stat] : stat, value]))\n        rest.hitMode = dmgModeToHitMode[dmgMode] ?? Object.keys(dmgModeToHitMode)[0]\n        saveToLocalStorage(dbKey, rest)\n        //equip to the new character\n        Object.values(equippedArtifacts).forEach(artid => {\n          const art = loadFromLocalStorage(artid);\n          if (!art) return\n          art.location = characterKey\n          saveToLocalStorage(artid, art)\n        });\n      } else {\n        //if the character does exist, \"move\" the artifacts equipped to inventory\n        Object.values(equippedArtifacts).forEach(artid => {\n          const art = loadFromLocalStorage(artid);\n          if (!art) return\n          art.location = \"\"\n          saveToLocalStorage(artid, art)\n        });\n      }\n      //delete the old database\n      localStorage.removeItem(key)\n    })\n    //reset the ArtifactDisplay keys\n    const ArtifactDisplayState = loadFromLocalStorage(\"ArtifactDisplay.state\")\n    if (ArtifactDisplayState) {\n      if (ArtifactDisplayState.filterMainStatKey in v2change)\n        ArtifactDisplayState.filterMainStatKey = v2change[ArtifactDisplayState.filterMainStatKey]\n      ArtifactDisplayState.filterSubstats = ArtifactDisplayState.filterSubstats.map(stat => stat in v2change ? v2change[stat] : stat)\n      saveToLocalStorage(\"ArtifactDisplay.state\", ArtifactDisplayState)\n    }\n  }\n\n  //this will only run if neither of the database has been initated.\n  const charDBJustPopualted = CharacterDatabase.populateDatebaseFromLocalStorage(),\n    artDBJustPopualted = ArtifactDatabase.populateDatebaseFromLocalStorage()\n  if (!charDBJustPopualted && !artDBJustPopualted) return\n\n  Object.values(ArtifactDatabase.getArtifactDatabase()).forEach(art => {\n    let valid = true\n\n    //verify the linking of artifacts and characters\n    if (art.location) {\n      const locationChar = CharacterDatabase.get(art.location)\n      if (locationChar) {\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\n          CharacterDatabase.equipArtifact(art.location, art)\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\n          art.location = \"\"\n          valid = false\n        }\n      } else {\n        art.location = \"\"\n        valid = false\n      }\n    }\n\n    if (dbVersion < 1) {\n      //generate artifact efficiency again for artifacts\n      Artifact.substatsValidation(art)\n      valid = false\n\n      //there was a bug that saved the numStars as strings. convert to number.\n      if (typeof art.numStars === \"string\") {\n        art.numStars = parseInt(art.numStars)\n        valid = false\n      }\n\n      //the set keys were changed to camelcase, need to convert for old databases.\n      let keyMapping = {\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\n        \"Thundering Fury\": \"ThunderingFury\",\n        \"Retracing Bolide\": \"RetracingBolide\",\n        \"Noblesse Oblige\": \"NoblesseOblige\",\n        \"Maiden Beloved\": \"MaidenBeloved\",\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\n        \"Archaic Petra\": \"ArchaicPetra\",\n        \"Brave Heart\": \"BraveHeart\",\n        \"Tiny Miracle\": \"TinyMiracle\",\n        \"Defender's Will\": \"DefendersWill\",\n        \"Martial Artist\": \"MartialArtist\",\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\n        \"The Exile\": \"TheExile\",\n        \"Traveling Doctor\": \"TravelingDoctor\",\n        \"Lucky Dog\": \"LuckyDog\",\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\n      }\n      if (keyMapping[art.setKey]) {\n        art.setKey = keyMapping[art.setKey]\n        valid = false\n      }\n      //key names were changed. convert old DB\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\n        valid = false\n      }\n      //key names were changed. convert old DB\n      if (art?.mainStatKey === \"phy_dmg\") {\n        art.mainStatKey = \"phy_dmg_bonus\"\n        valid = false\n      }\n    }\n\n    if (dbVersion < 2) {\n      if (art.mainStatKey in v2change) {\n        art.mainStatKey = v2change[art.mainStatKey]\n        valid = false\n      }\n      art?.substats?.forEach((obj, i) => {\n        if (obj.key in v2change) {\n          art.substats[i].key = v2change[obj.key]\n          valid = false\n        }\n      })\n    }\n\n    //Update any invalid artifacts in DB\n    if (!valid) ArtifactDatabase.updateArtifact(art)\n  })\n\n  let chars = CharacterDatabase.getCharacterDatabase();\n  Object.values(chars).forEach(character => {\n    let valid = true;\n    const { characterKey } = character\n    //verify character database equipment validity\n    if (!character.equippedArtifacts) {\n      character.equippedArtifacts = {}\n      valid = false\n    }\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\n      const equippedArt = ArtifactDatabase.get(artid)\n      if (equippedArt && equippedArt.location !== characterKey) //the artifact doesnt have the right location...\n        ArtifactDatabase.moveToNewLocation(artid, characterKey)\n      if (!equippedArt) {\n        valid = false\n        character.equippedArtifacts[slotKey] = \"\"\n      }\n    })\n\n    if (dbVersion < 1) {\n      //conditional format was refactored. this makes sure there is no error when using old DB.\n      character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\n        if (!cond.srcKey || !cond.srcKey2) {\n          valid = false\n          return false\n        }\n        return true\n      }) ?? []\n\n      //check for dmgMode\n      if (!character.hitMode) {\n        character.hitMode = \"hit\"\n        valid = false\n      }\n    }\n\n    //update any invalid characters in DB\n    if (!valid) CharacterDatabase.updateCharacter(character)\n  })\n  setDatabaseVersion(2)\n}\nconst getDatabaseVersion = (defVal = 0) =>\n  parseInt(loadFromLocalStorage(\"db_ver\") ?? defVal)\n\nconst setDatabaseVersion = (version) =>\n  saveToLocalStorage(\"db_ver\", version)\n\nexport {\n  DatabaseInitAndVerify\n};\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"children\", \"type\", \"name\", \"value\", \"onChange\"]);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    if (!onChange) {\n      return;\n    }\n\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive && onChange) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/React.createElement(ButtonGroup, _extends({}, controlledProps, {\n    ref: ref,\n    toggle: true\n  }), map(children, function (child) {\n    var values = getValues();\n    var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n\n    var handler = function handler(e) {\n      return handleToggle(childVal, e);\n    };\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      type: type,\n      name: child.name || name,\n      checked: values.indexOf(childVal) !== -1,\n      onChange: chainFunction(childOnChange, handler)\n    });\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect, useReducer } from 'react';\nimport { Badge, Image } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { Link } from 'react-router-dom';\nimport Artifact from '../Artifact/Artifact';\nimport Assets from '../Assets/Assets';\nimport { Stars } from '../Components/StarDisplay';\nimport { StatIconEle } from '../Components/StatIcon';\nimport Stat from '../Stat';\nimport Weapon from '../Weapon/Weapon';\nimport Character from './Character';\nimport CharacterDatabase from './CharacterDatabase';\nexport default function CharacterCard({ characterKey, onEdit, onDelete, cardClassName = \"\", bg = \"\", header, footer }) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  useEffect(() => {\n    Promise.all([\n      Character.getCharacterDataImport(),\n      Weapon.getWeaponDataImport(),\n      Artifact.getDataImport(),\n    ]).then(() => forceUpdate())\n  }, [])\n  const character = CharacterDatabase.get(characterKey)\n  if (!character) return null;\n  const build = Character.calculateBuild(character)\n  const { setToSlots } = build\n\n  const { weapon = {}, constellation } = character\n  const name = Character.getName(characterKey)\n  const elementKey = Character.getElementalKey(characterKey)\n  const weaponTypeKey = Character.getWeaponTypeKey(characterKey)\n  const weaponName = Weapon.getWeaponName(weapon.key)\n  const weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\n  const weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\n  const weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\n  const weaponLevelName = Weapon.getLevelName(weapon.levelKey)\n  const weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\n  const statkeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\",]\n  return (<Card className={cardClassName} bg={bg ? bg : \"darkcontent\"} text=\"lightfont\">\n    <Card.Header className=\"pr-2\">\n      <Row className=\"no-gutters\">\n        <Col >\n          {header ? header : <h5><b>{name}</b></h5>}\n        </Col>\n        <Col xs={\"auto\"}>\n          <span className=\"float-right align-top ml-1\">\n            {onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\n              onClick={onEdit}>\n              <FontAwesomeIcon icon={faEdit} />\n            </Button>}\n            {onDelete && <Button variant=\"danger\" size=\"sm\"\n              onClick={onDelete}>\n              <FontAwesomeIcon icon={faTrashAlt} />\n            </Button>}\n          </span>\n        </Col>\n      </Row>\n    </Card.Header>\n    <Card.Body onClick={onEdit} style={{ cursor: onEdit ? \"pointer\" : \"default\" }}>\n      <Row>\n        <Col xs=\"auto\" className=\"pr-0\">\n          <Image src={Character.getThumb(characterKey)} className={`thumb-big grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\n        </Col>\n        <Col>\n          <h3 className=\"mb-0\">{`Lvl. ${Character.getStatValueWithOverride(character, \"characterLevel\")} C${constellation}`}</h3>\n          <h5 className=\"mb-0\"><Stars stars={Character.getStar(characterKey)} colored /></h5>\n          <h2 className=\"mb-0\"><Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h2>\n        </Col>\n      </Row>\n      <Row className=\"mb-2\">\n        <Col>\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          {Object.entries(Artifact.getSetEffects(setToSlots)).map(([key, arr]) => {\n            let artifactSetName = Artifact.getSetName(key)\n            let highestNum = Math.max(...arr)\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\n          })}\n        </Col>\n      </Row>\n      <Row>\n        {statkeys.map(statKey => {\n          let unit = Stat.getStatUnit(statKey)\n          let statVal = build.finalStats[statKey]\n          return <Col xs={12} key={statKey}>\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\n            <span className={`float-right`}>\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\n            </span>\n          </Col>\n        })}\n      </Row>\n    </Card.Body>\n    {footer && <Card.Footer>\n      <Button as={Link} to={{\n        pathname: \"/build\",\n        characterKey\n      }}>\n        Generate Builds\n        </Button>\n    </Card.Footer>}\n  </Card>)\n}","import { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { lazy } from 'react';\nimport { Button, Card, Col, Container, Image, Row, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\nimport ReactGA from 'react-ga';\nimport Assets from '../Assets/Assets';\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\nimport { loadFromLocalStorage, saveToLocalStorage } from '../Util/Util';\nimport Weapon from '../Weapon/Weapon';\nimport Character from './Character';\nimport CharacterCard from './CharacterCard';\nimport CharacterDatabase from './CharacterDatabase';\n\n//lazy load the character display\nconst CharacterDisplayCardPromise = import('../Character/CharacterDisplayCard');\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\nconst toggle = {\n  level: \"Level\",\n  rarity: \"Rarity\",\n  name: \"Name\"\n}\nconst sortingFunc = {\n  level: (ck) => Character.getLevel(CharacterDatabase.get(ck).levelKey),\n  rarity: (ck) => Character.getStar(ck)\n}\nexport default class CharacterDisplay extends React.Component {\n  constructor(props) {\n    super(props)\n    DatabaseInitAndVerify();\n    this.state = {\n      charIdToEdit: \"\",\n      showEditor: false,\n      sortBy: Object.keys(toggle)[0],\n      elementalFilter: Character.getElementalKeysWithoutPhysical(),\n      weaponFilter: Weapon.getWeaponTypeKeys(),\n    }\n    const saved = loadFromLocalStorage(\"CharacterDisplay.state\")\n    if (saved)\n      this.state = { ...this.state, ...saved }\n    ReactGA.pageview('/character')\n  }\n\n  deleteCharacter = (id) => {\n    Character.remove(id)\n    this.forceUpdate()\n  }\n\n  editCharacter = (id) =>\n    this.setState({ charIdToEdit: id, showEditor: true },\n      () => this.scrollRef.current.scrollIntoView({ behavior: \"smooth\" }))\n\n  cancelEditCharacter = () =>\n    this.setState({ charIdToEdit: null, showEditor: false })\n\n  componentDidMount() {\n    this.scrollRef = React.createRef()\n    Promise.all([\n      Character.getCharacterDataImport(),\n    ]).then(() => this.forceUpdate())\n  }\n  componentDidUpdate() {\n    saveToLocalStorage(\"CharacterDisplay.state\", this.state)\n  }\n  render() {\n    const { showEditor, elementalFilter, weaponFilter, sortBy } = this.state\n    const charKeyList = CharacterDatabase.getCharacterKeyList().filter(cKey => {\n      if (!elementalFilter.includes(Character.getElementalKey(cKey))) return false\n      if (!weaponFilter.includes(Character.getWeaponTypeKey(cKey))) return false\n      return true\n    }).sort((a, b) => {\n      if (sortBy === \"name\") {\n        if (a < b) return -1;\n        if (a > b) return 1;\n        // names must be equal\n        return 0;\n      }\n      if (sortBy === \"level\") {\n        const diff = sortingFunc[\"level\"](b) - sortingFunc[\"level\"](a)\n        if (diff) return diff\n        return sortingFunc[\"rarity\"](b) - sortingFunc[\"rarity\"](a)\n      } else {\n        const diff = sortingFunc[\"rarity\"](b) - sortingFunc[\"rarity\"](a)\n        if (diff) return diff\n        return sortingFunc[\"level\"](b) - sortingFunc[\"level\"](a)\n      }\n    })\n    return (<Container ref={this.scrollRef}>\n      {/* editor/character detail display */}\n      {showEditor ? <Row className=\"mt-2\"><Col>\n        <React.Suspense fallback={<span>Loading...</span>}>\n          <CharacterDisplayCard editable\n            characterKey={this.state.charIdToEdit}\n            onClose={this.cancelEditCharacter}\n            footer={<Button variant=\"danger\" onClick={this.cancelEditCharacter}>Close</Button>}\n          />\n        </React.Suspense>\n      </Col></Row> : null}\n      <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2\">\n        <Card.Body className=\"p-2\">\n          <Row>\n            <Col xs=\"auto\">\n              <ToggleButtonGroup type=\"checkbox\" defaultValue={elementalFilter} onChange={v => this.setState({ elementalFilter: v })}>\n                {Character.getElementalKeysWithoutPhysical().map(eleKey =>\n                  <ToggleButton key={eleKey} value={eleKey} variant={elementalFilter.includes(eleKey) ? \"success\" : \"primary\"} className=\"py-1 px-2\"><h4 className=\"mb-0\"><Image src={Assets.elements?.[eleKey]} className=\"inline-icon\" /></h4></ToggleButton>)}\n              </ToggleButtonGroup>\n            </Col>\n            <Col>\n              <ToggleButtonGroup type=\"checkbox\" defaultValue={weaponFilter} onChange={v => this.setState({ weaponFilter: v })}>\n                {Weapon.getWeaponTypeKeys().map(weaponType =>\n                  <ToggleButton key={weaponType} value={weaponType} variant={weaponFilter.includes(weaponType) ? \"success\" : \"primary\"} className=\"py-1 px-2\"><h4 className=\"mb-0\"><Image src={Assets.weaponTypes?.[weaponType]} className=\"inline-icon\" /></h4></ToggleButton>)}\n              </ToggleButtonGroup>\n            </Col>\n            <Col xs=\"auto\">\n              <span>Sort by: </span>\n              <ToggleButtonGroup type=\"radio\" name=\"level\" defaultValue={this.state.sortBy} onChange={v => this.setState({ sortBy: v })}>\n                {Object.entries(toggle).map(([key, text]) =>\n                  <ToggleButton key={key} value={key} variant={this.state.sortBy === key ? \"success\" : \"primary\"}>{text}</ToggleButton>)}\n              </ToggleButtonGroup>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n      <Row className=\"mt-2\">\n        {showEditor ? null : <Col lg={4} md={6} className=\"mb-2\">\n          <Card className=\"h-100\" bg=\"darkcontent\" text=\"lightfont\">\n            <Card.Header className=\"pr-2\">\n              <span>Add New Character</span>\n            </Card.Header>\n            <Card.Body className=\"d-flex flex-column justify-content-center\">\n              <Row className=\"d-flex flex-row justify-content-center\">\n                <Col xs=\"auto\">\n                  <Button onClick={() => this.editCharacter(\"\")}>\n                    <h1><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></h1>\n                  </Button>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>}\n        {charKeyList.map(charKey =>\n          <Col key={charKey} lg={4} md={6} className=\"mb-2\">\n            <CharacterCard\n              cardClassName=\"h-100\"\n              characterKey={charKey}\n              onDelete={() => this.deleteCharacter(charKey)}\n              onEdit={() => this.editCharacter(charKey)}\n            />\n          </Col>\n        )}\n      </Row>\n    </Container>)\n  }\n}","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\nfunction getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \n}\nfunction getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\nconst loadFromLocalStorage = (key) => {\n  let data = localStorage.getItem(key)\n  if (!data) return null\n  return JSON.parse(data)\n}\nconst saveToLocalStorage = (key, obj) =>\n  localStorage.setItem(key, JSON.stringify(obj));\nconst deepClone = (obj) =>\n  JSON.parse(JSON.stringify(obj))\n\nconst closeEnoughFloat = (a, b) =>\n  Math.abs(a - b) <= 0.101\n\nconst closeEnoughInt = (a, b) =>\n  Math.abs(a - b) <= 1\nconst clamp = (val, low, high) => {\n  if (val < low) return low;\n  if (val > high) return high;\n  return val\n}\nconst getArrLastElement = (arr) =>\n  arr.length ? arr[arr.length - 1] : null\n\nconst clamp01 = (val) => clamp(val, 0, 1)\nconst clampPercent = (val) => clamp(val, 0, 100)\n\n//use to pretty print timestamps, or anything really.\nfunction strPadLeft(string, pad, length) {\n  return (new Array(length + 1).join(pad) + string).slice(-length);\n}\n\n//fuzzy compare strings. longer the distance, the higher the mismatch.\nfunction hammingDistance(str1, str2) {\n  var dist = 0;\n  str1 = str1.toLowerCase();\n  str2 = str2.toLowerCase();\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\n    let match = true\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\n      match = false\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\n      match = true\n    if (!match) dist++\n  }\n  return dist;\n}\n\n//multiplies every numberical value in the obj by a multiplier.\nfunction objMultiplication(obj, multi) {\n  Object.keys(obj).forEach(prop => {\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\n  })\n}\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\nconst getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\nexport {\n  getRandomInt,\n  getRandomIntInclusive,\n  getRandomArbitrary,\n  getRandomElementFromArray,\n  loadFromLocalStorage,\n  saveToLocalStorage,\n  deepClone,\n  closeEnoughFloat,\n  closeEnoughInt,\n  clamp,\n  clamp01,\n  clampPercent,\n  getArrLastElement,\n  strPadLeft,\n  hammingDistance,\n  objMultiplication,\n  getObjectKeysRecursive\n}","import { Formulas, StatData } from \"./StatData\"\nimport { ReactionMatrix, hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\n\nexport default class Stat {\n  //do not instantiate.\n  constructor() {\n    if (this instanceof Stat)\n      throw Error('A static class cannot be instantiated.');\n  }\n  static getStatName = (key, defVal = \"\") =>\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\n  static getStatNamePretty = (key, defVal = \"\") =>\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\n  static getStatNameRaw = (key, defVal = \"\") =>\n    StatData[key]?.name || defVal\n  static getStatNameWithPercent = (key, defVal = \"\") => {\n    let name = this.getStatName(key, defVal)\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\n      name += \"%\"\n    return name;\n  }\n  static getStatVariant = (key, defVal = \"\") =>\n    StatData[key]?.variant || defVal\n  static getStatUnit = (key, defVal = \"\") =>\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\n\n  static fixedUnit = (key) => {\n    if (StatData[key]?.unit === \"multi\") return 3\n    let unit = Stat.getStatUnit(key)\n    return unit === \"%\" ? 1 : 0\n  }\n  static printStat = (statKey, stats) =>\n    f({ stats, expand: false }, statKey)\n\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\n    let formulaKeys = Object.keys(FormulaText)\n    let newModifiersKeys = Object.keys(modifiers).filter(x => !formulaKeys.includes(x))\n    return [...newModifiersKeys, ...formulaKeys].filter((key) => statList.includes(key))\n  }\n\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\n    if (typeof FormulaText?.[statKey] === \"function\")\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\n    else\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\n  }\n}\n//generate html tags based on tagged variants of the statData\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\n\nfunction f(options, statKey) {\n  let { stats, expand = true } = options\n  if (!stats) return\n  if (expand && FormulaText?.[statKey])\n    return <span>( {FormulaText[statKey](options)} )</span>\n  let statName = Stat.getStatNamePretty(statKey)\n  let statUnit = Stat.getStatUnit(statKey)\n  let fixedUnit = Stat.fixedUnit(statKey)\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\n}\n\nfunction reactionMatrixElementRenderer(o, val, i) {\n  let sign = val < 0 ? \" - \" : \" + \";\n  let disVal = Math.abs(val)\n  let powerText = \"\"\n  if (i > 1) powerText = <span> * ( {f(o, \"characterLevel\")} )^{i}</span>\n  if (i === 1) powerText = <span> * {f(o, \"characterLevel\")}</span>\n  return <span key={i}>{sign}{disVal}{powerText}</span>\n}\n\n// Base Formula\n\nconst FormulaText = {\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\n\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\n\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\n}\n\n// Enemy RES\n\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\n    if (o.stats[`${ele}_enemyImmunity`])\n      return <span>0 (immune)</span>\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\n  }\n})\n\n// Crit Rate\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\n})\n\n// Hit\n\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n  FormulaText[`${ele}_elemental_hit_multi`] = (o) => <span>( 100% + {f(o, `dmg_`)} * {f(o, `${ele}_dmg_`)} ) * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\n  FormulaText[`${ele}_elemental_hit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_hit_multi`)}</span>\n  FormulaText[`${ele}_elemental_critHit_multi`] = (o) => <span>( 100% + {f(o, `critDMG_`)} ) * {f(o, `${ele}_elemental_hit_multi`)}</span>\n  FormulaText[`${ele}_elemental_critHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_critHit_multi`)}</span>\n  FormulaText[`${ele}_elemental_avgHit_multi`] = (o) => <span>( 100% + {f(o, `critDMG_`)} * {f(o, `critRate_`)} ) * {f(o, `${ele}_elemental_hit_multi`)}</span>\n  FormulaText[`${ele}_elemental_avgHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_elemental_avgHit_multi`)}</span>\n\n  Object.entries(hitMoves).forEach(([move, moveName]) => {\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>( 100% + {f(o, `dmg_`)} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)} ) * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\n    FormulaText[`${ele}_${move}_hit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>( 100% + {f(o, `critDMG_`)} ) * {f(o, `${ele}_${move}_hit_multi`)}</span>\n    FormulaText[`${ele}_${move}_critHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_critHit_multi`)}</span>\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>( 100% + {f(o, `critDMG_`)} * {f(o, `final_${move}_critRate_`)} ) * {f(o, `${ele}_${move}_hit_multi`)}</span>\n    FormulaText[`${ele}_${move}_avgHit`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_avgHit_multi`)}</span>\n  })\n})\n\n// Reaction\n\nObject.assign(FormulaText, {\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\n})\nObject.entries(amplifyingReactions).forEach(([reaction, [name, variants]]) => {\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\n    // Move them to the right position\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\n\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      FormulaText[`${ele}_${reaction}_elemental_${type}`] = (o) => <span>{f(o, `${ele}_elemental_${type}`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, `${ele}_${move}_${type}`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\n      })\n    })\n  })\n})\n\nObject.assign(FormulaText, {\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\n})\nObject.entries(transformativeReactions).forEach(([reaction, [reactionName, ele, baseMulti]]) => {\n  FormulaText[`${reaction}_multi`] = (o) => ReactionMatrix[reaction].map((val, i) => reactionMatrixElementRenderer(o, val, i))\n  FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\n})\nObject.assign(FormulaText, {\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\n  crystalize_multi: (o) => ReactionMatrix[\"crystalize\"].map((val, i) => reactionMatrixElementRenderer(o, val, i)),\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\n})\n\n//checks for development\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\n})\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\n})\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import Artifact from \"../Artifact/Artifact\";\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\nimport ElementalData from \"../Data/ElementalData\";\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\nimport { GetDependencies } from \"../StatDependency\";\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\nimport { deepClone } from \"../Util/Util\";\nimport Weapon from \"../Weapon/Weapon\";\nimport CharacterDatabase from \"./CharacterDatabase\";\n\nexport default class Character {\n  //do not instantiate.\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\n  static getCharacterDataImport = () => CharacterDataImport\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\n    let { characterKey, levelKey } = character\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return this.getLevel(levelKey)\n    if (statKey.includes(\"enemyRes_\")) return 10\n    if (statKey in characterStatBase) return characterStatBase[statKey]\n    let characterObj = this.getCDataObj(characterKey)\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\n    return defVal\n  }\n\n  static getCDataObj = (charKey) => CharacterData[charKey];\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\n\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\n  static getElementalKeys = () => Object.keys(ElementalData)\n  static getElementalKeysWithoutPhysical = () => this.getElementalKeys().filter(e => e !== \"physical\")\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\n\n  //LEVEL\n  static getlevelKeys = () => Object.keys(LevelsData)\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\n\n  //SPECIALIZED STAT\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\n  //ASSETS\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\n\n  //talents\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\n\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\n    //so far we only get level boost from constellations, so only burst and skills.\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\n    let talents = this.getCDataObj(characterKey)?.talent || {}\n    for (let i = 1; i <= constellation; i++) {\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\n      if (boostEntry) return boostEntry[1]\n    }\n    return defVal\n  }\n\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\n  static getTalentDocumentSections = (charKey, talentKey, defVal = []) => {\n    const character = CharacterDatabase.get(charKey);\n    if (!character) return defVal\n    const { constellation = 0, levelKey = Object.keys(LevelsData)[0] } = character\n    const ascension = Character.getAscension(levelKey)\n    return this.getTalentDocument(charKey, talentKey).map(section => typeof section === \"function\" ? section(constellation, ascension) : section)\n  }\n  static getTalentField = (charKey, talentKey, sectionIndex, fieldIndex, defVal = {}) => {\n    const character = CharacterDatabase.get(charKey);\n    if (!character) return defVal\n    const { constellation = 0, levelKey = Object.keys(LevelsData)[0] } = character\n    const ascension = Character.getAscension(levelKey)\n    const field = this.getTalentDocumentSections(charKey, talentKey)?.[sectionIndex]?.fields?.[fieldIndex]\n    if (!field) return defVal\n    return typeof field === \"function\" ? field(constellation, ascension) : field\n  }\n  static getTalentFieldValue = (field, key, talentKey, stats = {}, defVal = \"\") => {\n    if (!field?.[key]) return defVal\n    if (key === \"formula\")\n      return field?.formula?.(stats.talentLevelKeys[talentKey], stats)?.[0]?.(stats)\n    return typeof field?.[key] === \"function\" ? field[key](stats.talentLevelKeys[talentKey], stats) : field[key]\n  }\n\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\n    let stats = this.getTalent(charKey, talentKey)?.stats\n    if (typeof stats === \"function\")\n      return stats(constellation, ascension)\n    return stats || defVal\n  }\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\n    let talents = this.getCDataObj(charKey)?.talent || {}\n    let statsArr = []\n    Object.keys(talents).forEach(talentKey => {\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\n      if (stats) statsArr.push(stats)\n    })\n    return statsArr\n  }\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\n    const sections = this.getTalentDocumentSections(charKey, talentKey)\n    let cond = null\n    for (const section of sections) {\n      let tempCond = section.conditional\n      if (typeof tempCond === \"function\")\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\n      if (tempCond?.conditionalKey === conditionalKey) {\n        cond = tempCond\n        break;\n      }\n    }\n    return cond || defVal\n  }\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\n    if (!conditionalNum || !conditional) return defVal\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\n    if (!stacks) return defVal\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\n  }\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\n    if (!conditionalNum || !conditional) return defVal\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\n    return fields || defVal\n  }\n\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\n\n  //look up the formula, and generate the formulaPath to send to worker.\n  static getFormulaPath(characterKey, talentKey, formula) {\n    const formulaDB = this.getCDataObj(characterKey)?.formula\n    if (!formulaDB) return\n    let formulaKey\n    if (talentKey === \"auto\") {\n      for (const tk of [\"normal\", \"charged\", \"plunging\"]) {\n        ([formulaKey,] = Object.entries(formulaDB?.[tk] ?? {}).find(([, value]) => value === formula) ?? [])\n        if (formulaKey) {\n          talentKey = tk\n          break;\n        }\n      }\n    } else ([formulaKey,] = Object.entries(formulaDB?.[talentKey] ?? {}).find(([, value]) => value === formula) ?? [])\n    if (!formulaKey) return\n    return { characterKey, talentKey, formulaKey }\n  }\n\n\n  static hasTalentPage = (characterKey) => Boolean(Character.getCDataObj(characterKey)?.talent)\n\n  static getDisplayStatKeys = (characterKey, defVal = { basicKeys: [] }) => {\n    if (!characterKey) return defVal\n    let eleKey = Character.getElementalKey(characterKey)\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\n    const isAutoElemental = Character.isAutoElemental(characterKey)\n    const isAutoInfusable = Character.isAutoInfusable(characterKey)\n    if (!isAutoElemental)\n      basicKeys.push(\"physical_dmg_\")\n\n    //show elemental interactions\n    const transReactions = ElementToReactionKeys[eleKey]\n    const weaponTypeKey = this.getWeaponTypeKey(characterKey)\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\n    if (this.hasTalentPage(characterKey)) {\n      const charFormulas = {}\n      Object.keys(Character.getCDataObj(characterKey)?.talent ?? {}).forEach(talentKey =>\n        Character.getTalentDocumentSections(characterKey, talentKey)?.forEach((section, sectionIndex) =>\n          section?.fields?.forEach((field, fieldIndex) =>\n            (field?.formula || this.getTalentField(characterKey, talentKey, sectionIndex, fieldIndex)?.formula) && (charFormulas[talentKey] = [...(charFormulas[talentKey] ?? []), {\n              talentKey,\n              sectionIndex,\n              fieldIndex\n            }]))))\n      return { basicKeys, ...charFormulas, transReactions }\n    } else {\n      //generic average hit parameters.\n      const genericAvgHit = []\n      if (!isAutoElemental) //add phy auto + charged + physical \n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\n\n      if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\n        genericAvgHit.push(`${eleKey}_normal_avgHit`, `${eleKey}_charged_avgHit`)\n      else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\n      }\n      //show skill/burst \n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\n\n      //add reactions.\n      if (eleKey === \"pyro\") {\n        const reactions = []\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\n        genericAvgHit.push(...reactions)\n      } else if (eleKey === \"cryo\")\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\n      else if (eleKey === \"hydro\")\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\n\n      return { basicKeys, genericAvgHit, transReactions }\n    }\n  }\n\n  static hasOverride = (character, statKey) => {\n    if (statKey === \"finalHP\")\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\n    else if (statKey === \"finalDEF\")\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\n    else if (statKey === \"finalATK\")\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\n  }\n\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\n    else return this.getBaseStatValue(character, statKey, defVal)\n  }\n\n  //equipment, with consideration on swapping equipped.\n  static equipArtifacts = (characterKey, artifactIds) => {\n    let character = CharacterDatabase.get(characterKey)\n    if (!character) return;\n    let artIdsOnCharacter = character.equippedArtifacts;\n    let artIdsNotOnCharacter = artifactIds\n\n    //swap, by slot\n    Artifact.getSlotKeys().forEach(slotKey => {\n      let artNotOnChar = ArtifactDatabase.get(artIdsNotOnCharacter?.[slotKey])\n      if (artNotOnChar.location === characterKey) return; //it is already equipped\n      let artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\n      let notCharLoc = (artNotOnChar?.location || \"\")\n      //move current art to other char\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\n      //move current art to other char\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\n      //move other art to current char\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\n    })\n    //move other art to current char \n    character.equippedArtifacts = {}\n    Object.entries(artifactIds).forEach(([key, artid]) =>\n      character.equippedArtifacts[key] = artid)\n    CharacterDatabase.updateCharacter(character);\n  }\n  static remove(characterKey) {\n    let character = CharacterDatabase.get(characterKey)\n    if (character.equippedArtifacts)\n      Object.values(character.equippedArtifacts).forEach(artid =>\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\n    CharacterDatabase.remove(characterKey)\n  }\n\n  static calculateBuild = (character) => {\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\n  }\n\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\n    let setToSlots = Artifact.setToSlots(artifacts)\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\n\n    let stats = deepClone(initialStats)\n    //add artifact and artifactsets\n    Object.values(artifacts).forEach(art => {\n      if (!art) return\n      //main stats\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\n      //substats\n      art.substats.forEach((substat) =>\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\n    })\n    //setEffects\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\n    //setEffects conditionals\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\n    })\n\n    let dependencies = GetDependencies(stats?.modifiers)\n    PreprocessFormulas(dependencies, stats).formula(stats)\n    return {\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\n      setToSlots,\n      finalStats: stats,\n      artifactConditionals\n    }\n  }\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\n    if (key === \"modifiers\") {\n      initialStats.modifiers = initialStats.modifiers ?? {}\n      for (const [statKey, modifier] of Object.entries(val)) {\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\n        for (const [mkey, multiplier] of Object.entries(modifier))\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\n      }\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\n  })\n\n  static calculateCharacterWithWeaponStats = (character) => {\n    character = deepClone(character)\n    const { characterKey, levelKey, hitMode, autoInfused, reactionMode, talentLevelKeys, constellation, talentConditionals = [] } = character\n    const ascension = Character.getAscension(levelKey)\n\n    //generate the initalStats obj with data from Character & overrides\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\n    initialStats.characterEle = this.getElementalKey(characterKey);\n    initialStats.characterKey = characterKey\n    initialStats.hitMode = hitMode;\n    initialStats.autoInfused = autoInfused && Character.getCDataObj(characterKey)?.talent?.auto?.infusable\n    initialStats.reactionMode = reactionMode;\n    initialStats.talentConditionals = talentConditionals\n    initialStats.weaponType = this.getWeaponTypeKey(characterKey)\n    initialStats.talentLevelKeys = talentLevelKeys;\n    initialStats.constellation = constellation\n    initialStats.ascension = ascension\n    for (const key in initialStats.talentLevelKeys)\n      initialStats.talentLevelKeys[key] += this.getTalentLevelBoost(character.characterKey, key, constellation);\n\n    //enemy stuff\n    Character.getElementalKeys().forEach(eleKey => {\n      let statKey = `${eleKey}_enemyRes_`\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\n      statKey = `${eleKey}_enemyImmunity`\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\n    })\n\n    //all the rest of the overrides\n    let overrides = character?.baseStatOverrides || {}\n    Object.entries(overrides).forEach(([statKey, val]) => {\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\n    })\n\n    //add specialized stat\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\n\n\n    //add stats from talentconditionals\n    talentConditionals.forEach(cond => {\n      const { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\n      const conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, initialStats.talentLevelKeys[talentKey], constellation, ascension)\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\n    })\n\n    //add stats from all talents\n    Character.getTalentStatsAll(characterKey, constellation, ascension).forEach(s => this.mergeStats(initialStats, s))\n\n    //add stats from weapons\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\n\n    return initialStats\n  }\n\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\nvar initiated = false\nvar characterDatabase = {};\n\nexport default class CharacterDatabase {\n  //do not instantiate.\n  constructor() {\n    if (this instanceof CharacterDatabase) throw Error('A static class cannot be instantiated.');\n  }\n  static isInvalid = (char) => !char || !char.characterKey || !char.levelKey\n  static getCharacterDatabase = () => deepClone(characterDatabase);\n  static getCharacterKeyList = () => Object.keys(characterDatabase);\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\n  static populateDatebaseFromLocalStorage = () => {\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\n    Object.keys(localStorage).filter(key => key.startsWith(\"char_\")).forEach(key => {\n      let [, characterKey] = key.split(\"char_\")\n      if (!characterDatabase[characterKey]) {\n        let character = loadFromLocalStorage(key);\n        if (!character) return;\n        characterDatabase[characterKey] = character;\n      }\n    })\n    initiated = true\n    return true\n  }\n  static updateCharacter = (char) => {\n    if (this.isInvalid(char)) return;\n    const dchar = deepClone(char)\n    saveToLocalStorage(`char_${char.characterKey}`, dchar);\n    characterDatabase[char.characterKey] = dchar;\n  }\n  static get = (characterKey) => characterDatabase?.[characterKey] ?? null\n\n  static remove = (characterKey) => {\n    delete characterDatabase[characterKey];\n    localStorage.removeItem(`char_${characterKey}`);\n  }\n  static getArtifactIDFromSlot = (characterKey, slotKey) =>\n    this.get(characterKey)?.equippedArtifacts?.[slotKey] ?? null\n\n  static equipArtifact = (characterKey, art) => {\n    const char = this.get(characterKey)\n    if (!char || !art || !art.slotKey) return\n    if (!char.equippedArtifacts) char.equippedArtifacts = {};\n    char.equippedArtifacts[art.slotKey] = art.id;\n    this.updateCharacter(char)\n  }\n  static unequipArtifactOnSlot = (characterKey, slotKey) => {\n    const char = this.get(characterKey)\n    if (!char || !slotKey) return\n    if (!char?.equippedArtifacts?.[slotKey]) return;\n    char.equippedArtifacts[slotKey] = \"\";\n    this.updateCharacter(char)\n  }\n  static equipArtifactBuild = (characterKey, artifactIds) => {\n    const character = this.get(characterKey)\n    if (!character) return;\n    character.equippedArtifacts = artifactIds\n    CharacterDatabase.updateCharacter(character);\n  }\n  //helper function for testing\n  static clearDatabase = () => {\n    characterDatabase = {}\n    initiated = false\n  }\n}\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\n\nconst SlotIcon = {\n  flower: faBahai,\n  plume: faFeatherAlt,\n  sands: faHourglass,\n  goblet: faWineGlass,\n  circlet: faCrown\n}\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\nimport ElementalData from './ElementalData';\nlet ArtifactData = {}\nlet ArtifactDataImport = import('./Artifacts')\nArtifactDataImport.then(imp => {\n  ArtifactData = imp.default\n  ArtifactDataImport = null\n})\nconst ArtifactMainSlotKeys = [\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\",\n]\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_dmg_`))\n\nconst ArtifactStarsData = {\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\n};\n\nconst ArtifactMainStatsData = {\n  1: {\n    hp: [129, 178, 227, 275, 324],\n    atk: [8, 12, 15, 18, 21],\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\n    eleMas: [13, 17, 22, 27, 32],\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\n  },\n  2: {\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\n  },\n  3: {\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\n  },\n  4: {\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\n  },\n  5: {\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\n    critDMG_: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\n  }\n}\n\nconst ArtifactSubStatsData = {\n  hp: { 1: [24, 30], 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\n  hp_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\n  atk: { 1: [2], 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\n  atk_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\n  def: { 1: [2], 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\n  def_: { 1: [1.5, 1.8], 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\n  eleMas: { 1: [5, 6], 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\n  enerRech_: { 1: [1.3, 1.6], 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\n  critRate_: { 1: [0.8, 1], 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\n  critDMG_: { 1: [1.6, 1.9], 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\n}\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubStatsData).map(([key, obj]) =>\n  [key, {\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\n  }]))\n\nconst ArtifactSlotsData = {\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\n};\n\nexport {\n  ArtifactMainSlotKeys,\n  ArtifactSlotsData,\n  ArtifactData,\n  ArtifactDataImport,\n  ArtifactSubStatsData,\n  ArtifactSubstatsMinMax,\n  ArtifactStarsData,\n  ArtifactMainStatsData\n};\n","export default class ArtifactBase {\n  //do not instantiate.\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\n\n  //returns {setKey:[slotKey...]}\n  static setToSlots = (artifacts) => {\n    let setToSlots = {};\n    Object.entries(artifacts).forEach(([key, art]) => {\n      if (!art) return\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\n      else setToSlots[art.setKey] = [key]\n    })\n    return setToSlots\n  }\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport CharacterDatabase from '../Character/CharacterDatabase';\nimport SlotIcon from '../Components/SlotIcon';\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\nimport Stat from '../Stat';\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\nimport ArtifactBase from './ArtifactBase';\nimport ArtifactDatabase from './ArtifactDatabase';\n\nconst maxStar = 5\n\nexport default class Artifact {\n  //do not instantiate.\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\n\n  //SETS\n  static getDataImport = () => ArtifactDataImport\n  static getSetKeys = () => Object.keys(ArtifactData || {})\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\n  static getSetsByMaxStarEntries = (star) =>\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\n\n  //SETEFFECT\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\n  static getArtifactSetEffectsStats = (setToSlots) => {\n    let artifactSetEffect = []\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\n        Object.entries(value.stats).forEach(([key, statVal]) =>\n          artifactSetEffect.push({ key, statVal }))))\n    return artifactSetEffect\n  }\n  static getSetEffects = (setToSlots) => {\n    let artifactSetEffect = {}\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\n      if (setNumKeys.length)\n        artifactSetEffect[setKey] = setNumKeys\n    })\n    return artifactSetEffect\n  }\n\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\n    if (!setEffectText) return defVal\n    if (typeof setEffectText === \"function\")\n      return setEffectText(charFinalStats)\n    else if (setEffectText)\n      return setEffectText\n    return defVal\n  }\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\n\n  //SLOT\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\n  static getSlotIcon = (slotKey, defVal = \"\") =>\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\n\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\n    if (!slotKey) return defVal;\n    let name = this.getSlotName(slotKey)\n    if (!name) return defVal;\n    let slotIcon = this.getSlotIcon(slotKey)\n    if (!slotIcon) return defVal;\n    return (<span>{slotIcon} {name}</span>)\n  }\n  static splitArtifactsBySlot = (databaseObj) =>\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\n\n  //STARS\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\n\n  //MAIN STATS\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\n\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\n    let main = this.getMainStatValues(numStars, key)[level]\n    if (main) return main\n    else if (key?.includes(\"_dmg_\")) // because in the database its still stored as ele_dmg_\n      return this.getMainStatValue(\"ele_dmg_\", numStars, level, defVal)\n    return defVal\n  }\n\n  //SUBSTATS\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\n  static getSubstatAllMax = (statKey, numStars = maxStar, defVal = 0) => ArtifactSubstatsMinMax?.[statKey]?.max[numStars] ?? defVal\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\n  static subStatCloseEnough = (key, value1, value2) => {\n    if (Stat.getStatUnit(key) === \"%\")\n      return closeEnoughFloat(value1, value2)\n    else\n      return closeEnoughInt(value1, value2)\n  }\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\n  static rollsRemaining = (level, numStars) =>\n    Math.ceil((numStars * 4 - level) / 4);\n  static numberOfSubstatUnlocked = (state) =>\n    state.substats.reduce((sum, cur) =>\n      sum + (cur && cur.value ? 1 : 0), 0);\n  static getSubstatRollData = (subStatKey, numStars) => ArtifactSubStatsData?.[subStatKey]?.[numStars] ?? []\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\n    if (!rollData.length) return defVal\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\n      return defVal\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\n    let rolls = [];\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\n    if (!maxNumRoll) return defVal;\n    const rollOption = (val, arr) => {\n      if (arr.length) {\n        if (arr.length > maxNumRoll) return;\n        let sum = arr.reduce((accu, v) => accu + v, 0)\n        if (isFloat) {\n          if (sum - val >= 0.101) return\n          if (closeEnoughFloat(sum, val))\n            return rolls.push(arr);\n        } else {\n          if (sum - val > 1) return\n          if (closeEnoughInt(sum, val))\n            return rolls.push(arr);\n        }\n      }\n      rollData.slice().reverse().forEach(roll => {\n        if (!arr.length || arr[arr.length - 1] >= roll)\n          rollOption(subStatValue, [...arr, roll])\n      })\n    }\n    rollOption(subStatValue, [])\n    return rolls;\n  }\n  static getSubstatEfficiency = (subStatKey, rolls = []) => {\n    let len = rolls.length\n    let sum = rolls.reduce((a, c) => a + c, 0)\n    let max = this.getSubstatAllMax(subStatKey) * len\n    return max ? clampPercent((sum / max) * 100) : 0\n  }\n\n  //ARTIFACT IN GENERAL\n  static substatsValidation(state) {\n    let { numStars = 0, level = 0, substats = [] } = state\n    //calculate rolls for substats\n    for (const substat of substats) {\n      let { key, value } = substat\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\n      substat.rolls = rollArr[0] || []\n      if (rollArr.length > 1) substat.rollArr = rollArr\n      substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\n    }\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\n    state.currentEfficiency = currentEfficiency\n    state.maximumEfficiency = maximumEfficiency\n    //artifact validation logic\n    let errMsgs = []\n    for (const substat of substats)\n      if (!substat.rolls?.length && substat.key && substat.value)\n        errMsgs.push(\"One of the substat is invalid.\")\n\n    //only show this error when all substats are \"valid\"\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\n\n    if (numStars) {\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\n        for (const substat of substats) {\n          let rollslen = substat.rolls?.length\n          if (!rollslen || !substat.rollArr) continue\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\n          if (moreRolls.length) {\n            substat.rolls = moreRolls[0]\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, substat.rolls)\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\n            state.currentEfficiency = currentEfficiency\n            state.maximumEfficiency = maximumEfficiency\n          }\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\n          if (currentNumOfRolls >= leastNumRolls) break;\n        }\n      }\n      if (currentNumOfRolls < leastNumRolls)\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\n      else {\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\n      }\n    }\n    return errMsgs\n  }\n  static getArtifactEfficiency(substats, numStars, level) {\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\n    // Relative to max star, so comparison between different * makes sense.\n    let totalPossbleRolls = Artifact.totalPossibleRolls(maxStar);\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\n    let statKeys = substats.filter(({ key }) => key).map(({ key }) => key)\n    let maxPerRoll = 100 * Math.max(...(statKeys.length === 4 ? statKeys : Object.keys(ArtifactSubstatsMinMax)).map(\n      key => Artifact.getSubstatAllMax(key, numStars) / Artifact.getSubstatAllMax(key)\n    ))\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * maxPerRoll) / totalPossbleRolls);\n    return { currentEfficiency, maximumEfficiency }\n  }\n\n  static setToSlots = ArtifactBase.setToSlots;\n\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\n    if (!conditionalNum) return defVal\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\n    if (!conditional) return defVal\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\n    if (!stacks) return defVal\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\n  }\n\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\n    let ArtifactSetEffectsObj = {};\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\n      let setEffect = {}\n      if (setObj.setEffects)\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\n        })\n      if (Object.keys(setEffect).length > 0)\n        ArtifactSetEffectsObj[setKey] = setEffect;\n    })\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\n      if (Object.keys(condStats).length > 0) {\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\n        Object.entries(condStats).forEach(([statKey, value]) =>\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\n      }\n    })\n    return ArtifactSetEffectsObj\n  }\n\n  //database manipulation\n  static equipArtifactOnChar(artifactId, characterKey) {\n    let art = ArtifactDatabase.get(artifactId);\n    if (!art) return;\n    let currentLocation = art.location;\n    let intendedLocation = (characterKey || \"\")\n    if (currentLocation === intendedLocation) return;\n    let slotKey = art.slotKey\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\n\n    //update artifact\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\n\n    //update Character\n    if (intendedLocation)\n      CharacterDatabase.equipArtifact(intendedLocation, art)\n\n    if (currentLocation) {\n      if (artifactToSwapWith)\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\n      else\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\n    }\n  }\n}\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { clamp } from \"./Util\";\n\nexport default class ConditionalsUtil {\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\n  static getConditionalNum(conditionals, srcKeyObj) {\n    let { srcKey, srcKey2 } = srcKeyObj\n    if (conditionals)\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\n  }\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\n    let { srcKey, srcKey2 } = srcKeyObj\n    if (!conditionals) conditionals = []\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\n    if (!conditionalNum && index >= 0) {\n      //setting conditionalNum to 0 deletes the element\n      conditionals.splice(index, 1);\n    } else if (!conditionalNum && index < 0) { //nothing to change\n      return conditionals\n    } else {\n      let newCond = { srcKey, conditionalNum }\n      if (srcKey2) newCond.srcKey2 = srcKey2\n      if (index >= 0)\n        conditionals[index] = newCond\n      else\n        conditionals.push(newCond)\n    }\n    return conditionals\n  }\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\n    if (Array.isArray(conditional)) {\n      //multiconditional\n      let selectedConditionalNum = conditionalNum\n      let selectedConditional = null\n      for (const curConditional of conditional) {\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\n        else {\n          selectedConditional = curConditional;\n          break;\n        }\n      }\n      if (!selectedConditional) return defVal\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\n      return [selectedConditional[fieldName], stacks]\n    } else {\n      //condtional with stacks\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\n      return [conditional[fieldName], stacks]\n    }\n  }\n}","const ElementalData = {\n  physical: { name: \"Physical\" },\n  anemo: { name: \"Anemo\" },\n  geo: { name: \"Geo\" },\n  electro: { name: \"Electro\" },\n  hydro: { name: \"Hydro\" },\n  pyro: { name: \"Pyro\" },\n  cryo: { name: \"Cryo\" },\n  // dendro: { name: \"Dendro\" }\n}\nexport default ElementalData","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\nvar initiated = false\nvar artifactDatabase = {};\nvar artIdIndex = 1;\nexport default class ArtifactDatabase {\n  //do not instantiate.\n  constructor() {\n    if (this instanceof ArtifactDatabase) {\n      throw Error('A static class cannot be instantiated.');\n    }\n  }\n  static isInvalid = (art) =>\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\n  static populateDatebaseFromLocalStorage = () => {\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\n      if (!artifactDatabase[id]) {\n        let art = loadFromLocalStorage(id)\n        if (!art) return;\n        if (this.isInvalid(art)) {\n          this.removeArtifactById(id);\n          return;\n        }\n        artifactDatabase[id] = art;\n      }\n    })\n    initiated = true\n    return true\n  }\n  static get = (id) => artifactDatabase[id] ?? null\n  static removeArtifact = (art) => {\n    this.removeArtifactById(art.id);\n  }\n  static updateArtifact = (art) => {\n    if (this.isInvalid(art)) return;\n    let id = art.id;\n    if (!id) {//if does not have id, generate ID\n      do {\n        id = `artifact_${artIdIndex++}`\n      } while (localStorage.getItem(id) !== null)\n      art.id = id\n    }\n    let dart = deepClone(art)\n    saveToLocalStorage(id, dart);\n    artifactDatabase[id] = dart;\n  }\n  static removeArtifactById = (artId) => {\n    delete artifactDatabase[artId];\n    localStorage.removeItem(artId);\n  }\n\n  static moveToNewLocation = (artid, location) => {\n    if (!artid) return;\n    let art = this.get(artid)\n    if (!art || art.location === location) return;\n    art.location = location;\n    this.updateArtifact(art);\n  }\n  static swapLocations = (artA, artB) => {\n    let locA = artA.location\n    let locB = artB.location\n    this.moveToNewLocation(artA.id, locB)\n    this.moveToNewLocation(artB.id, locA)\n  }\n  static swapLocationsById = (artAid, artBid) =>\n    this.swapLocations(this.get(artAid), this.get(artBid))\n  //helper function for testing\n  static clearDatabase = () => {\n    artifactDatabase = {}\n    initiated = false\n    artIdIndex = 1\n  }\n}","import { clamp } from \"./Util/Util\";\nimport { ReactionMatrix, hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\n\nconst StatData = {\n  flat: { name: \"\", default: 1 },\n\n  // Character Stats\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\n\n  // Weapon Stats\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\n\n  // Character & Weapon Stats\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\n\n  // Weapon & Artifact Stats\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\n\n  // Attack-related Character, Weapon & Artifact Stats\n  finalHP: { name: \"HP\", pretty: \"HP\" },\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\n\n  eleMas: { name: \"Elemental Mastery\", },\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\" },\n  critRate_: { name: \"CRIT Rate\", unit: \"%\" },\n\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\" },\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\n\n  // Misc. Stats\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\n  powShield_: { name: \"Powerful Shield\", unit: \"%\" },\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\n  stamina: { name: \"Stamina\" },\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\n\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\n\n  // Reaction\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\n\n  // Enemy\n  enemyLevel: { name: \"Enemy Level\", const: true },\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true }\n}\nconst Formulas = {\n  // Basic Stats\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\n\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\n\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\n\n  // Reactions\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\n\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\n  crystalize_multi: (s, c) => ReactionMatrix[\"crystalize\"].reduce((accu, val, i) => accu + val * Math.pow(c.characterLevel, i), 0),\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\n}\n\nconst ElementToReactionKeys = {\n  physical: [],\n  anemo: [\"swirl_hit\"],\n  geo: [\"crystalize_hit\", \"shattered_hit\"],\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\", \n  dendro: []\n}\nfunction resMultiplier(res) {\n  res = res / 100\n  if (res < 0) return 1 - res / 2\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\n  return 1 - res\n}\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\n\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\n})\n\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n  const opt = { variant: ele }\n  // DONT CHANGE. needed for screenshot parsing\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\n\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, const: true, ...opt }\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\n\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", const: true, ...opt }\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\n\n  Object.entries(hitTypes).forEach(([type, typeName]) => {\n    StatData[`${ele}_elemental_${type}`] = { name: `${eleName} Attack ${typeName}`, ...opt }\n    StatData[`${ele}_elemental_${type}_multi`] = { name: `${eleName} Attack ${typeName} Multiplier`, unit: \"multi\" }\n\n    Formulas[`${ele}_elemental_${type}`] = (s) => s.finalATK * s[`${ele}_elemental_${type}_multi`]\n  })\n\n  Formulas[`${ele}_elemental_hit_multi`] = (s, c) => (1 + (s.dmg_ + s[`${ele}_dmg_`]) / 100) * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\n  Formulas[`${ele}_elemental_critHit_multi`] = (s) => s[`${ele}_elemental_hit_multi`] * (1 + s.critDMG_ / 100)\n  Formulas[`${ele}_elemental_avgHit_multi`] = (s) => s[`${ele}_elemental_hit_multi`] * (1 + s.critDMG_ * s[`critRate_`] / 10000)\n\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(c[`${ele}_enemyRes_`])\n})\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n    const opt = { variant: ele }\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\n\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\n    })\n\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => (1 + (s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100) * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * (1 + s.critDMG_ / 100)\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\n  })\n})\n\nObject.entries(transformativeReactions).forEach(([reaction, [reactionName, ele, baseMulti]]) => {\n  let opt = {}\n  if (ele) opt.variant = reaction\n  StatData[`${reaction}_hit`] = { name: `${reactionName} DMG`, ...opt }\n  StatData[`${reaction}_dmg_`] = { name: `${reactionName} DMG Bonus`, unit: \"%\", ...opt }\n  StatData[`${reaction}_multi`] = { name: `${reactionName} Multiplier`, unit: \"multi\", const: true, ...opt }\n\n  Formulas[`${reaction}_multi`] = (s, c) => ReactionMatrix[reaction].reduce((accu, val, i) => accu + val * Math.pow(c.characterLevel, i), 0)\n  Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\n})\n\nObject.entries(amplifyingReactions).forEach(([reaction, [name, variants]]) => {\n  const opt = { variant: reaction }\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      StatData[`${ele}_${reaction}_elemental_${type}`] = { name: `${name} ${typeName}`, ...opt }\n      Formulas[`${ele}_${reaction}_elemental_${type}`] = (s) => s[`${ele}_elemental_${type}`] * s[`${ele}_${reaction}_multi`]\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s[`${ele}_${move}_${type}`] * s[`${ele}_${reaction}_multi`]\n      })\n    })\n  })\n})\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\n\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\n  const formulaList = dependencyKeys.map(key => {\n    const modifier = modifiers[key] ?? {}\n    const constModifier = Object.entries(modifier).filter(([k]) => StatData[k]?.const)\n    const dynamicModifier = Object.entries(modifier).filter(([k]) => !(StatData[k]?.const))\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]) => accu + c[k] * m, 0)\n    const dynamicFunc = (s) => dynamicModifier.reduce((accu, [k, m]) => accu + s[k] * m, 0)\n\n    let funcIndicator = 0\n    if (constModifier.length) funcIndicator += 1\n    if (dynamicModifier.length) funcIndicator += 2\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\n\n    let tmp\n    switch (funcIndicator) {\n      case 0: tmp = Formulas[key]; break\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\n      case 4: tmp = (s, c) => c[key]; break\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\n      case 8: tmp = (s, c) => s[key]; break\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\n    }\n    const func = tmp\n\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\n\n    if (!(key in Formulas))\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\n\n    if (StatData[key]?.const) {\n      constData[key] = stats[key]\n      constData[key] = func(stats, constData)\n      stats[key] = constData[key]\n      if (dynamicModifier.length)\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\n      return null\n    }\n\n    if (!(key in Formulas))\n      initialStats[key] = stats[key]\n\n    return [key, func]\n  }).filter((func) => func)\n\n  if (debug) console.log(initialStats, constData)\n\n  return {\n    initialStats,\n    formula: s => {\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\n      Object.assign(s, constData)\n    }\n  }\n}\n\nexport {\n  Formulas,\n  StatData,\n  ElementToReactionKeys,\n  PreprocessFormulas,\n}\n"],"sourceRoot":""}