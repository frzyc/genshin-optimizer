{"version":3,"sources":["StatDependency.js","Components/StarDisplay.js","Data/WeaponData.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","../node_modules/react-bootstrap/esm/Badge.js","Data/CharacterData.js","DatabaseUtil.js","Components/StatIcon.js","Character/CharacterCard.js","Character/CharacterDisplay.js","Character/Character.js","Stat.js","Util/Util.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Character/CharacterDatabase.js","Util/ConditionalsUtil.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Artifact/ArtifactDatabase.js","Data/ElementalData.js","StatData.js","Weapon/Weapon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"names":["GetFormulaDependency","formula","dependency","Set","Proxy","get","target","prop","receiver","add","formulaKeyDependency","Object","freeze","fromEntries","keys","Formulas","map","key","GetDependencies","modifiers","dependencies","forEach","InsertDependencies","has","k","StarIcon","icon","faStar","Stars","stars","colored","className","Array","_","i","WeaponData","WeaponDataImport","then","imp","default","WeaponLevelKeys","LevelNameData","WeaponTypeData","sword","claymore","catalyst","bow","polearm","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","resin","fragile","condensed","exp_books","advice","wit","experience","Badge","React","forwardRef","_ref","ref","bsPrefix","variant","pill","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","CharacterData","CharacterDataImport","LevelsData","name","level","asend","characterStatBase","crit_rate","crit_dmg","ener_rech","stam","CharacterSpecializedStatKey","DatabaseInitAndVerify","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","values","art","valid","location","getCharacter","artInSlotId","getArtifactIDFromSlot","slotKey","id","equipArtifact","numStars","parseInt","keyMapping","setKey","mainStatKey","endsWith","replace","maximumEfficiency","Artifact","substatsValidation","updateArtifact","chars","getCharacterDatabase","character","entries","equippedArtifacts","artid","equippedArt","getArtifact","moveToNewLocation","artifactConditionals","filter","cond","srcKey","srcKey2","dmgMode","updateCharacter","StatIcon","hp_base","faTint","hp_final","hp_","hp","atk_base","faFistRaised","atk_character_base","atk_final","atk_","atk","def_base","faShieldAlt","def_final","def_","def","ele_mas","faMagic","faDice","faDiceD20","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","CharacterCard","useReducer","x","forceUpdate","useEffect","Promise","all","Character","getCharacterDataImport","Weapon","getWeaponDataImport","getDataImport","characterId","onEdit","onDelete","build","calculateBuild","setToSlots","characterKey","weapon","constellation","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","weaponName","getWeaponName","weaponMainVal","getWeaponMainStatValWithOverride","weaponSubKey","getWeaponSubStatKey","weaponSubVal","getWeaponSubStatValWithOverride","weaponLevelName","getLevelName","levelKey","weaponPassiveName","getWeaponPassiveName","cardClassName","bg","text","Header","header","xs","size","onClick","faEdit","faTrashAlt","Body","style","cursor","src","getThumb","getStar","thumbnail","getName","getStatValueWithOverride","refineIndex","Stat","getStatName","getStatUnit","getSetEffects","arr","artifactSetName","getSetName","highestNum","Math","max","unit","statVal","finalStats","toFixed","fixedUnit","footer","Footer","Link","to","pathname","selectedCharacterId","CharacterDisplayCardPromise","CharacterDisplayCard","lazy","CharacterDisplay","deleteCharacter","removeCharacter","editCharacter","setState","charIdToEdit","showEditor","scrollRef","current","scrollIntoView","behavior","cancelEditCharacter","state","ReactGA","pageview","this","createRef","charIdList","getCharacterIdList","Suspense","fallback","editable","onClose","lg","md","faPlus","Error","removeCharacterById","getBaseStatValue","defVal","getSpecializedStatKey","getSpeicalizedStatVal","getLevel","includes","characterObj","getCDataObj","baseStat","getIndexFromlevelkey","charKey","getElementalName","elementalKey","ElementalData","getAllCharacterKeys","star","getElementalKeys","getConstellationName","constellationName","getTitles","titles","getlevelKeys","getlevelNames","indexOf","getAscension","getSpecializedStat","specializeStat","value","thumbImg","getCard","cardImg","getTalentImg","talentKey","getTalent","img","getConstellationImg","constIndex","talent","getTalentName","getTalentLevelBoost","talents","talentBoost","boostEntry","find","getTalentLevelKey","withBoost","talentLvlKey","talentLevelKeys","levelBoost","clamp","getTalentDocument","document","getTalentFields","fields","getTalentStats","ascension","stats","getTalentStatsAll","statsArr","push","getTalentConditional","conditionalKey","doc","section","tempCond","conditional","getTalentConditionalStats","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","val","getTalentConditionalFields","getTalentStatKey","skillKey","elemental","autoInfused","reactionMode","charEleKey","isAutoElemental","auto","infusable","eleKey","getTalentStatKeyVariant","isAutoInfusable","getDisplayStatKeys","atkKeys","startsWith","ElementToReactionKeys","hasOverride","baseStatOverrides","equipArtifacts","artifactIds","artIdsOnCharacter","artIdsNotOnCharacter","getSlotKeys","artNotOnChar","artOnChar","notCharLoc","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","deepClone","getMainStatValue","artifactsAssumeFull","substats","substat","stat","setNumKey","length","getConditionalStats","PreprocessFormulas","mergeStats","modifier","mkey","multiplier","statKeys","char_ele_key","overrides","hasOwnProperty","specializedStatVal","specialStatKey","talentConditionals","s","getWeaponBonusStat","getWeaponConditionalStat","htmlStatsData","StatData","getStatNamePretty","pretty","getStatNameRaw","getStatNameWithPercent","getStatVariant","printStat","f","expand","getPrintableFormulaStatKeyList","statList","formulaKeys","FormulaText","modifiersKeys","printFormula","modifierText","obj","options","statName","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_dmg","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_dmg","electrocharged_multi","electrocharged","superconduct_dmg","superconduct_multi","superconduct","swirl_dmg","swirl_multi","swirl","shatter_dmg","shatter_multi","shattered","crystalize_dmg","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","amp_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","abs","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","defineProperty","configurable","enumerable","writable","getRandomElementFromArray","array","floor","random","getRandomIntInclusive","min","ceil","loadFromLocalStorage","data","localStorage","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","closeEnoughFloat","a","b","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","arguments","source","getOwnPropertyDescriptors","defineProperties","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","phy_dmg_bonus","ele_dmg_bonus","2","ArtifactSubStatsData","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","rolls","efficiency","getSubstatEfficiency","getArtifactEfficiency","currentEfficiency","errMsgs","some","currentNumOfRolls","reduce","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","unequipArtifactOnSlot","getSetKeys","getSetsByMaxStarEntries","setobj","rarity","getPieces","pieces","getPieceName","getPieceIcon","icons","getSetEffectsObj","setEffects","getArtifactSetNumStats","artifactSetEffect","artArr","setNumKeys","getSetEffectText","charFinalStats","setEffectText","getSetEffectConditional","getSlotName","getSlotIcon","getSlotMainStatKeys","getSlotNameWithIcon","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","main","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatKey","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","accu","v","reverse","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","initiated","characterDatabase","charIdIndex","isInvalid","char","getIdNameList","addCharacter","dchar","removeItem","charid","equipArtifactBuild","conditionals","srcKeyObj","index","findIndex","splice","newCond","fieldName","selectedConditionalNum","selectedConditional","curConditional","maxStack","_createForOfIteratorHelper","allowArrayLike","it","F","n","done","e","_e","err","normalCompletion","didErr","step","next","_e2","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","dependencyKeys","preFormulas","modifierFunc","initial","reactionName","dmgKey","dmgName","str","atkTypeName","dmgModeName","ele_key","getLevelIndex","weaponKey","getWeaponRarity","passiveName","getWeaponPassiveDescription","passiveDescription","getWeaponDescription","description","getWeaponConditional","getWeaponImg","getWeaponMainStatVal","baseStats","getWeaponSubStatVal","sub","getWeaponsOfType","weaponType","getWeaponTypeName","weaponObj","overrideMainVal","overrideSubVal","_defineProperty"],"mappings":"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","file":"static/js/9.eca65018.chunk.js","sourcesContent":["import { Formulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nfunction GetFormulaDependency(formula) {\r\n  const dependency = new Set()\r\n  formula(new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\r\n  return [...dependency]\r\n}\r\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\r\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\r\n))\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  console.log(formulaKeyDependency)\r\n  let statKeys = Object.keys(StatData)\r\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\r\n    dependencies.forEach(key =>\r\n      !statKeys.includes(key) &&\r\n      console.error(\"Formula\", `\"${formulaKey}\"`, \"has dependency with key\", `\"${key}\"`, \"that does not Exist in StatData.\"))\r\n  )\r\n}\r\n\r\nfunction GetDependencies(modifiers = {}, keys = Object.keys(Formulas)) {\r\n  let dependencies = new Set()\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n}\r\n\r\nexport {\r\n  GetFormulaDependency,\r\n  GetDependencies,\r\n}\r\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //this will only run if neither of the database has been initated.\r\n  if (!CharacterDatabase.populateDatebaseFromLocalStorage() & !ArtifactDatabase.populateDatebaseFromLocalStorage()) return\r\n  //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n  let arts = ArtifactDatabase.getArtifactDatabase();\r\n  Object.values(arts).forEach(art => {\r\n    let valid = true\r\n    if (art.location) {\r\n      const locationChar = CharacterDatabase.getCharacter(art.location)\r\n      if (locationChar) {\r\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\r\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\r\n          CharacterDatabase.equipArtifact(art.location, art)\r\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\r\n          art.location = \"\"\r\n          valid = false\r\n        }\r\n      } else {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n    }\r\n\r\n    //there was a bug that saved the numStars as strings. convert to number.\r\n    if (typeof art.numStars === \"string\") {\r\n      art.numStars = parseInt(art.numStars)\r\n      valid = false\r\n    }\r\n\r\n    //the set keys were changed to camelcase, need to convert for old databases.\r\n    let keyMapping = {\r\n      \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n      \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n      \"Thundering Fury\": \"ThunderingFury\",\r\n      \"Retracing Bolide\": \"RetracingBolide\",\r\n      \"Noblesse Oblige\": \"NoblesseOblige\",\r\n      \"Maiden Beloved\": \"MaidenBeloved\",\r\n      \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n      \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n      \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n      \"Archaic Petra\": \"ArchaicPetra\",\r\n      \"Brave Heart\": \"BraveHeart\",\r\n      \"Tiny Miracle\": \"TinyMiracle\",\r\n      \"Defender's Will\": \"DefendersWill\",\r\n      \"Martial Artist\": \"MartialArtist\",\r\n      \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n      \"The Exile\": \"TheExile\",\r\n      \"Traveling Doctor\": \"TravelingDoctor\",\r\n      \"Lucky Dog\": \"LuckyDog\",\r\n      \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n      \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n      \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n      \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n    }\r\n    if (keyMapping[art.setKey]) {\r\n      art.setKey = keyMapping[art.setKey]\r\n      valid = false\r\n    }\r\n    //key names were changed. convert old DB\r\n    if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n      art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n      valid = false\r\n    }\r\n    //key names were changed. convert old DB\r\n    if (art?.mainStatKey === \"phy_dmg\") {\r\n      art.mainStatKey = \"phy_dmg_bonus\"\r\n      valid = false\r\n    }\r\n    if (!art.maximumEfficiency) {\r\n      Artifact.substatsValidation(art)\r\n      valid = false\r\n    }\r\n    if (!valid)\r\n      ArtifactDatabase.updateArtifact(art)\r\n  })\r\n\r\n  let chars = CharacterDatabase.getCharacterDatabase();\r\n  Object.values(chars).forEach(character => {\r\n    let valid = true;\r\n    //verify character database equipment validity\r\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\r\n      const equippedArt = ArtifactDatabase.getArtifact(artid)\r\n      if (equippedArt && equippedArt.location !== character.id) //the artifact doesnt have the right location...\r\n        ArtifactDatabase.moveToNewLocation(artid, character.id)\r\n      if (!equippedArt) {\r\n        valid = false\r\n        character.equippedArtifacts[slotKey] = \"\"\r\n      }\r\n    })\r\n\r\n    //conditional format was refactored. this makes sure there is no error when using old DB.\r\n    character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\r\n      if (!cond.srcKey || !cond.srcKey2) {\r\n        valid = false\r\n        return false\r\n      }\r\n      return true\r\n    }) ?? []\r\n\r\n    //check for dmgMode\r\n    if (!character.dmgMode) {\r\n      character.dmgMode = \"dmg\"\r\n      valid = false\r\n    }\r\n    if (!valid) {\r\n      CharacterDatabase.updateCharacter(character)\r\n    }\r\n  })\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_character_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport Stat from '../Stat';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nexport default function CharacterCard(props) {\r\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => forceUpdate())\r\n  }, [])\r\n  let { characterId, onEdit, onDelete } = props\r\n  let character = CharacterDatabase.getCharacter(characterId)\r\n  if (!character) return null;\r\n  let build = Character.calculateBuild(character)\r\n  let { setToSlots } = build\r\n\r\n  let { characterKey, name, weapon = {}, constellation } = character\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponName = Weapon.getWeaponName(weapon.key)\r\n  let weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\r\n  let weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\r\n  let weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const statkeys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\",]\r\n  return (<Card className={props.cardClassName} bg={props.bg ? props.bg : \"darkcontent\"} text=\"lightfont\">\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {props.header ? props.header : <h6><b>{name}</b></h6>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {props.onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {props.onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={onEdit} style={{ cursor: onEdit ? \"pointer\" : \"default\" }}>\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={Character.getThumb(characterKey)} className={`w-100 h-auto grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h4>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h4>\r\n          <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n          <span>{`Lvl. ${Character.getStatValueWithOverride(character, \"char_level\")} C${constellation}`}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {Object.entries(Artifact.getSetEffects(setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = Artifact.getSetName(key)\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = build.finalStats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {props.footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        selectedCharacterId: characterId\r\n      }}>\r\n        Generate Builds\r\n        </Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy } from 'react';\r\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport Character from './Character';\r\nimport CharacterCard from './CharacterCard';\r\nimport CharacterDatabase from './CharacterDatabase';\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCardPromise = import('../Character/CharacterDisplayCard');\r\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\r\n\r\nexport default class CharacterDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = {\r\n      charIdToEdit: \"\",\r\n      showEditor: false,\r\n    }\r\n    ReactGA.pageview('/character')\r\n  }\r\n\r\n  deleteCharacter = (id) => {\r\n    Character.removeCharacter(id)\r\n    this.forceUpdate()\r\n  }\r\n\r\n  editCharacter = (id) =>\r\n    this.setState({ charIdToEdit: id, showEditor: true },\r\n      () => this.scrollRef.current.scrollIntoView({ behavior: \"smooth\" }))\r\n\r\n  cancelEditCharacter = () =>\r\n    this.setState({ charIdToEdit: null, showEditor: false })\r\n\r\n  componentDidMount() {\r\n    this.scrollRef = React.createRef()\r\n  }\r\n  render() {\r\n    let charIdList = CharacterDatabase.getCharacterIdList()\r\n    return (<Container ref={this.scrollRef}>\r\n      {/* editor/character detail display */}\r\n      {this.state.showEditor ? <Row className=\"mt-2\"><Col>\r\n        <React.Suspense fallback={<span>Loading...</span>}>\r\n          <CharacterDisplayCard editable\r\n            characterId={this.state.charIdToEdit}\r\n            onClose={this.cancelEditCharacter}\r\n            footer={<Button variant=\"danger\" onClick={this.cancelEditCharacter}>Close</Button>}\r\n          />\r\n        </React.Suspense>\r\n      </Col></Row> : null}\r\n\r\n      <Row className=\"mt-2\">\r\n        {this.state.showEditor ? null : <Col lg={4} md={6} className=\"mb-2\">\r\n          <Card className=\"h-100\" bg=\"darkcontent\" text=\"lightfont\">\r\n            <Card.Header className=\"pr-2\">\r\n              <span>Add New Character</span>\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex flex-column justify-content-center\">\r\n              <Row className=\"d-flex flex-row justify-content-center\">\r\n                <Col xs=\"auto\">\r\n                  <Button onClick={() => this.editCharacter(\"\")}>\r\n                    <h1><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></h1>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>}\r\n        {charIdList.map(id =>\r\n          <Col key={id} lg={4} md={6} className=\"mb-2\">\r\n            <CharacterCard\r\n              cardClassName=\"h-100\"\r\n              characterId={id}\r\n              onDelete={() => this.deleteCharacter(id)}\r\n              onEdit={() => this.editCharacter(id)}\r\n            />\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Container>)\r\n\r\n  }\r\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\nimport { GetDependencies } from \"../StatDependency\"\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    if (skillKey === \"phy\") return `phy_${dmgMode}`\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    if (skillKey === \"phy\") return \"physical\"\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_character_base\") || false\r\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats?.modifiers)\r\n    PreprocessFormulas(dependencies, stats.modifiers)(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\r\n    if (key === \"modifiers\") {\r\n      initialStats.modifiers = initialStats.modifiers ?? {}\r\n      for (const [statKey, modifier] of Object.entries(val)) {\r\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\r\n        for (const [mkey, multiplier] of Object.entries(modifier))\r\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\r\n      }\r\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\r\n  })\r\n\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_character_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => {\r\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\r\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\r\n    })\r\n\r\n    //add specialized stat\r\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\r\n\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey, constellation)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    Character.getTalentStatsAll(characterKey, constellation, ascension).forEach(s => this.mergeStats(initialStats, s))\r\n    \r\n    //add stats from weapons\r\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\r\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\r\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\r\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\r\n    let formulaKeys = Object.keys(FormulaText)\r\n    let modifiersKeys = Object.keys(modifiers)\r\n    return statList.filter(statKey => formulaKeys.includes(statKey) || modifiersKeys.includes(statKey))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\r\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\r\n    if (typeof FormulaText?.[statKey] === \"function\")\r\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\r\n    else\r\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\r\n  }\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_base: (o) => <span>{f(o, \"atk_character_base\")} + {f(o, \"atk_weapon\")} </span>,\r\n  atk_final: (o) => <span>{f(o, \"atk_base\")} * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"plunge_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"plunge_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"plunge_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"plunge_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  amp_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(o, \"ele_mas\")} * exp^(-0.000505 * {f(o, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_plunge_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_plunge_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_plunge_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `plunge_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};\r\n","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance\r\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, numStars, rolls) => {\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars);\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let min = rollData[0] * len;\r\n    let max = rollData[rollData.length - 1] * len;\r\n    return clampPercent(((sum - min) / (max - min)) * 100)\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      if (rollArr.length > 1) substat.rollArr = rollArr\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, numStars, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, numStars, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect).length > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n      if (Object.keys(condStats).length > 0) {\r\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n        Object.entries(condStats).forEach(([statKey, value]) =>\r\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\r\n      }\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else if (!conditionalNum && index < 0) { //nothing to change\r\n      return conditionals\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => artifactDatabase[id] || null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_character_base: { name: \"ATK\", pretty: \"ATK Character Base\" },\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  plunge_atk_dmg_bonus: { name: \"Plunging Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  all_dmg_bonus: { name: \"All DMG Bonus\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elemental Mastery Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elemental Mastery Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elemental Mastery Multiplier Z\", unit: \"multi\" },\r\n  amp_reaction_base_multi: { name: \"Amplifying Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_base: (s) => s.atk_character_base + s.atk_weapon,\r\n  atk_final: (s) => s.atk_base * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.atk_final * s.plunge_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  plunge_crit_dmg: (s) => s.plunge_dmg * s.crit_dmg_multi,\r\n  plunge_avg_dmg: (s) => s.plunge_dmg * s.crit_multi,\r\n  plunge_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.plunge_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  amp_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s.atk_final * s[`${ele}_plunge_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_plunge_dmg`] * s.crit_dmg_multi,\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_plunge_dmg`] * s.crit_multi,\r\n  plunge_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.plunge_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.all_dmg_bonus) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\r\nfunction PreprocessFormulas(dependencyKeys, modifiers = {}) {\r\n  const preFormulas = dependencyKeys.map(key => {\r\n    if (modifiers[key]) {\r\n      const modifierFunc = (stat, initial) => Object.entries(modifiers[key]).reduce((accu, [mkey, multiplier]) =>\r\n        accu + stat[mkey] * multiplier, initial)\r\n      if (key in Formulas) return [key, (s) => modifierFunc(s, Formulas[key](s))]\r\n      return [key, (s) => modifierFunc(s, s[key] ?? StatData?.[key]?.default ?? 0)]\r\n    } else {\r\n      if (key in Formulas) return [key, Formulas[key]]\r\n      return [key, (s) => (s[key] ?? StatData?.[key]?.default ?? 0)]\r\n    }\r\n  })\r\n  return stat => preFormulas.forEach(([key, formula]) => stat[key] = formula(stat))\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  PreprocessFormulas,\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"sourceRoot":""}