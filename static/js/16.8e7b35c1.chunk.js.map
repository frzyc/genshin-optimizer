{"version":3,"sources":["Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Components/CustomFormControl.js","Util/TimeUtil.js","Planner/PlannerDisplay.js","Util/Util.js"],"names":["Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","CustomFormControl","float","placeholder","value","onValueChange","disabled","allowEmpty","useState","focus","setFocus","props","type","className","toString","onChange","e","target","parseFloat","parseInt","onFocus","onBlur","aria-label","msToUnits","ms","milliseconds","seconds","Math","floor","minutes","hours","timeString","timeText","strPadLeft","timeStringMs","SECOND_MS","HOUR_MS","PlannerDisplay","TeyvatTime","ResinCounter","EXPCalc","RESIN_MAX","RESIN_RECH_MS","setResin","setState","state","newState","resinIncrement","clearTimeout","date","Date","getTime","setInterval","savedState","loadFromLocalStorage","now","resinToMax","resinSinceLastDate","min","ReactGA","pageview","this","nextDelta","setTimeout","updateTimer","forceUpdate","clearInterval","deepClone","saveToLocalStorage","nextResinDateNum","resinFullDate","nextDeltaString","abs","bg","text","Header","src","Body","xs","style","fontSize","height","size","max","width","onClick","toLocaleTimeString","toLocaleDateString","React","Component","timeZones","Object","keys","timeZoneKey","setTimeZoneKey","time","setTime","useEffect","interval","setSecondTimeout","resetTime","getUTCHours","setUTCHours","remaningTimeMs","remainingResetString","icon","faClock","title","map","zoneKey","Item","timeZone","toDateString","books","name","exp","cost","img","levelExp","milestone","setAdvice","setExperience","setWit","bookState","setBookState","goUnder","setGoUnder","level","setLevel","curExp","setCurExp","mora","setMora","lsBookState","setBookStates","entries","forEach","key","val","milestoneLvl","find","lvl","expReq","i","length","bookResult","c20000","c5000","c1000","required","current","ceil","r20000","r5000","r1000","calculateBooks","numWit","numExperience","numAdvice","bookResultObj","expFromBooks","moraCost","expDiff","finalMora","finalExp","finalLvl","invalidText","variant","md","Prepend","Text","clamp","Append","bookKey","bookObj","lg","BookDisplay","setValue","Footer","Boolean","rounded","getRandomElementFromArray","array","random","getRandomIntInclusive","data","localStorage","getItem","JSON","parse","obj","setItem","stringify","closeEnoughFloat","a","b","closeEnoughInt","low","high","getArrLastElement","arr","clampPercent","string","pad","Array","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","objMultiplication","multi","prop"],"mappings":"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","file":"static/js/16.8e7b35c1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\nimport cryo from './Element_Cryo.png'\nimport dendro from './Element_Dendro.png'\nimport electro from './Element_Electro.png'\nimport geo from './Element_Geo.png'\nimport hydro from './Element_Hydro.png'\nimport pyro from './Element_Pyro.png'\n\nimport bow from './Weapon-class-bow-icon.png'\nimport catalyst from './Weapon-class-catalyst-icon.png'\nimport claymore from './Weapon-class-claymore-icon.png'\nimport polearm from './Weapon-class-polearm-icon.png'\nimport sword from './Weapon-class-sword-icon.png'\n\nimport fragile from './Item_Fragile_Resin.png'\nimport condensed from './Item_Condensed_Resin.png'\n\n//EXP BOOKS\nimport advice from './Item_Wanderer\\'s_Advice.png'\nimport wit from './Item_Hero\\'s_Wit.png'\nimport experience from './Item_Adventurer\\'s_Experience.png'\n\nlet Assets = {\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\n  resin: {\n    fragile,\n    condensed\n  },\n  exp_books: {\n    advice,\n    wit,\n    experience,\n  }\n};\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import React, { useState } from 'react'\nimport FormControl from 'react-bootstrap/FormControl'\n\nconst CustomFormControl = ({ float = false, placeholder, value, onValueChange, disabled, allowEmpty = false }) => {\n  let [focus, setFocus] = useState(false)\n  let displayValue = value\n  if (allowEmpty) displayValue = typeof value === \"number\" ? value : \"\"\n  else displayValue = !value && focus ? \"\" : (value?.toString?.() || value)\n  const props = {\n    type: \"number\",\n    className: \"hide-appearance\",\n    placeholder,\n    value: displayValue,\n    disabled,\n    onChange: (e) => {\n      let value = e.target.value;\n      if (float) {\n        if (allowEmpty) value = value === \"\" ? null : (parseFloat(value) || 0)\n        else value = parseFloat(value) || 0\n      } else {\n        if (allowEmpty) value = value === \"\" ? null : (parseInt(value) || 0)\n        else value = parseInt(value) || 0\n      }\n      onValueChange?.(value);\n    },\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n  }\n  return <FormControl {...props} aria-label=\"custom-input\" />\n}\nexport default CustomFormControl;","import { strPadLeft } from \"./Util\"\n\nfunction msToUnits(ms) {\n  let milliseconds = ms % 1000\n  let seconds = Math.floor((ms / 1000) % 60)\n  let minutes = Math.floor((ms / (1000 * 60)) % 60)\n  let hours = Math.floor((ms / (1000 * 60 * 60)))\n  return { hours, minutes, seconds, milliseconds }\n}\nfunction timeString(ms) {\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\n  let { hours, minutes, seconds } = msToUnits(ms, \"hours\")\n  let timeText = \"Minutes\"\n  if (hours) timeText = \"Hours\"\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)} ${timeText}`;\n}\nfunction timeStringMs(ms) {\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\n  let { hours, minutes, seconds, milliseconds } = msToUnits(ms, \"hours\")\n  let timeText = \"Minutes\"\n  if (hours) timeText = \"Hours\"\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)}.${strPadLeft(milliseconds, '0', 3)} ${timeText}`;\n}\nexport {\n  msToUnits,\n  timeString,\n  timeStringMs\n}","import { faClock } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect, useState } from 'react';\nimport { Alert, Button, ButtonGroup, Card, Col, Container, Dropdown, DropdownButton, Image, InputGroup, Row } from \"react-bootstrap\";\nimport ReactGA from 'react-ga';\nimport Assets from '../Assets/Assets';\nimport CustomFormControl from '../Components/CustomFormControl';\nimport { timeString } from '../Util/TimeUtil';\nimport { clamp, deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\n\nconst SECOND_MS = 1000\nconst MINUTE_MS = 60 * SECOND_MS\nconst HOUR_MS = 60 * MINUTE_MS\nconst DAY_MS = 24 * HOUR_MS\n\nexport default function PlannerDisplay(props) {\n  return <Container className=\"mb-2\">\n    <TeyvatTime />\n    <ResinCounter />\n    <EXPCalc />\n  </Container>\n}\n\nconst RESIN_MAX = 160\nconst RESIN_RECH_MS = 8 * MINUTE_MS\nclass ResinCounter extends React.Component {\n  constructor(props) {\n    super(props)\n    let savedState = loadFromLocalStorage(\"resinInfo\")\n    if (savedState) this.state = savedState\n    else {\n      this.state = {\n        resin: 100,\n        date: new Date().getTime(),\n      }\n    }\n    let { resin, date } = this.state\n    //catch up date.\n    if (resin < RESIN_MAX && (Date.now() - date) > RESIN_RECH_MS) {\n      let resinToMax = RESIN_MAX - resin\n      let resinSinceLastDate = Math.min(Math.floor((Date.now() - date) / (RESIN_RECH_MS)), resinToMax)\n      resin += resinSinceLastDate\n      date += resinSinceLastDate * RESIN_RECH_MS\n      this.state.resin = resin\n      this.state.date = date\n    }\n    ReactGA.pageview('/tools')\n  }\n  setResin = (resin) => this.setState(state => {\n    resin = parseInt(resin) || 0\n    // resin = clamp(resin, 0, RESIN_MAX)//allow for resin over the cap, \n    let newState = { resin }\n    if (resin >= RESIN_MAX) {\n      this.resinIncrement && clearTimeout(this.resinIncrement)\n      this.resinIncrement = 0\n      if (state.resin < RESIN_MAX) newState.date = new Date().getTime()//store the date as the full resin time\n    } else {\n      this.resinIncrement && clearTimeout(this.resinIncrement)\n      this.resinIncrement = setInterval(() => this.setResin(this.state.resin + 1), RESIN_RECH_MS);\n      newState.date = new Date().getTime()\n    }\n    return newState\n  });\n  componentDidMount() {\n    let { resin, date } = this.state\n    if (resin < RESIN_MAX) {\n      let nextResinDateNum = date + RESIN_RECH_MS;\n      let nextDelta = nextResinDateNum - new Date();\n      this.resinIncrement = setTimeout(() => {\n        this.setResin(this.state.resin + 1)\n      }, nextDelta);\n    }\n    this.updateTimer = setInterval(() => this.forceUpdate(), SECOND_MS)\n  }\n  componentWillUnmount() {\n    this.updateTimer && clearInterval(this.updateTimer)\n    this.resinIncrement && clearTimeout(this.resinIncrement)\n  }\n  componentDidUpdate() {\n    let state = deepClone(this.state)\n    saveToLocalStorage(\"resinInfo\", state)\n  }\n  render() {\n    let { resin, date } = this.state\n    let nextResinDateNum = resin >= RESIN_MAX ? date : date + RESIN_RECH_MS;\n\n    let resinFullDateNum = resin >= RESIN_MAX ? date : (date + (RESIN_MAX - resin) * RESIN_RECH_MS)\n    let resinFullDate = new Date(resinFullDateNum)\n\n    let nextDeltaString = timeString(Math.abs(nextResinDateNum - Date.now()))\n\n    return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2\">\n      <Card.Header>\n        <Image src={Assets.resin.fragile} className=\"thumb-small d-inline my-n1 ml-n2\" /><span>Resin Counter</span>\n      </Card.Header>\n      <Card.Body>\n        <Row>\n          <Col xs=\"auto\" className=\"px-3\">\n            <span style={{ fontSize: \"4em\" }}>\n              <Image src={Assets.resin.fragile} className=\"d-inline w-auto mt-n3 ml-n3 mr-n4\" style={{ height: \"1.5em\" }} />\n              <input type=\"number\" className=\"invisible-input hide-appearance text-white mb-0 text-right\" size=\"4\" value={resin} min={0} max={999} style={{ width: \"2.1em\" }} onChange={(e => this.setResin(e.target.value))} />/{RESIN_MAX}\n            </span>\n          </Col>\n          <Col>\n            <ButtonGroup className=\"w-100 d-flex mb-2\">\n              <Button onClick={() => this.setResin(0)} disabled={resin === 0}>0</Button>\n              <Button onClick={() => this.setResin(resin - 1)} disabled={resin === 0}>-1</Button>\n              <Button onClick={() => this.setResin(resin - 20)} disabled={resin < 20}>-20</Button>\n              <Button onClick={() => this.setResin(resin - 40)} disabled={resin < 40}>-40</Button>\n              <Button onClick={() => this.setResin(resin - 60)} disabled={resin < 60}>-60</Button>\n              <Button onClick={() => this.setResin(resin + 1)}>+1</Button>\n              <Button onClick={() => this.setResin(resin + 60)}>+60</Button>\n              <Button onClick={() => this.setResin(RESIN_MAX)} disabled={resin === RESIN_MAX}>MAX {RESIN_MAX}</Button>\n            </ButtonGroup>\n            <h5>{resin < RESIN_MAX ? <span>Next resin in {nextDeltaString}, full Resin at {resinFullDate.toLocaleTimeString()} {resinFullDate.toLocaleDateString()}</span> :\n              <span>Resin has been full for at least {nextDeltaString}, since {resinFullDate.toLocaleTimeString()} {resinFullDate.toLocaleDateString()}</span>}</h5>\n          </Col>\n          <small>Because we do not provide a mechanism to synchronize resin time, actual resin recharge time might be as much as 8 minutes earlier than predicted.</small>\n        </Row>\n      </Card.Body>\n    </Card>\n  }\n}\n\nconst timeZones = {\n  \"America\": - 5 * HOUR_MS,\n  \"Europe\": HOUR_MS,\n  \"Asia\": 8 * HOUR_MS,\n  \"TW, HK, MO\": 8 * HOUR_MS,\n}\nfunction TeyvatTime(props) {\n  let [timeZoneKey, setTimeZoneKey] = useState(Object.keys(timeZones)[0])\n  let [time, setTime] = useState(new Date(Date.now() + timeZones[timeZoneKey]))\n  //load from localstorage\n  useEffect(() => setTimeZoneKey(loadFromLocalStorage(\"server_timezone\") || Object.keys(timeZones)[0]), [])\n  //set a timer. timer resets when timezone is changed.\n  useEffect(() => {\n    let setSecondTimeout = () => {\n      setTime(new Date(Date.now() + timeZones[timeZoneKey]))\n      return setTimeout(() => {\n        interval = setSecondTimeout()\n      }, SECOND_MS - (Date.now() % SECOND_MS));\n    }\n    let interval = setSecondTimeout()\n    saveToLocalStorage(\"server_timezone\", timeZoneKey)\n    return () => clearTimeout(interval)\n  }, [timeZoneKey])\n\n  let resetTime = new Date(time)\n  if (resetTime.getUTCHours() < 4) {\n    resetTime.setUTCHours(4, 0, 0, 0)\n  } else {\n    resetTime = new Date(resetTime.getTime() + DAY_MS)\n    resetTime.setUTCHours(4, 0, 0, 0)\n  }\n  let remaningTimeMs = resetTime.getTime() - time.getTime()\n  let remainingResetString = timeString(remaningTimeMs)\n\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2\">\n    <Card.Header>\n      <Row>\n        <Col xs=\"auto\">\n          <h5 className=\"d-inline\"><FontAwesomeIcon icon={faClock} className=\"fa-fw mr-2\" /></h5><span>Teyvat Time</span>\n        </Col>\n        <Col xs=\"auto\">\n          <DropdownButton title={timeZoneKey}>\n            {Object.keys(timeZones).map(zoneKey =>\n              <Dropdown.Item key={zoneKey} onClick={() => setTimeZoneKey(zoneKey)} >{zoneKey}</Dropdown.Item>)}\n          </DropdownButton>\n        </Col>\n      </Row>\n\n    </Card.Header>\n    <Card.Body>\n      <Row className=\"d-flex justify-content-center\">\n        <Col xs=\"auto\" className=\"px-3\">\n          <span style={{ fontSize: \"4em\" }} className=\"d-block\">\n            {time.toLocaleTimeString([], { timeZone: \"UTC\" })}\n          </span>\n\n        </Col>\n        <Col xs=\"auto \">\n          <div className=\"h-100 d-flex flex-column\">\n            <div xs={12} className=\"flex-grow-1\">Server Date: <b>{time.toDateString()}</b></div>\n            <div xs={12} className=\"flex-grow-1\">Time until reset: <b>{remainingResetString}</b></div>\n            <div xs={12} className=\"flex-grow-1\">Resin until reset: <b>{Math.floor(remaningTimeMs / (8 * MINUTE_MS))}</b></div>\n          </div>\n        </Col>\n      </Row>\n    </Card.Body>\n  </Card>\n}\nconst books = {\n  advice: {\n    name: \"Wanderer's Advice\",\n    exp: 1000,\n    cost: 200,\n    img: Assets.exp_books.advice\n  },\n  experience: {\n    name: \"Adventurer's Experience\",\n    exp: 5000,\n    cost: 1000,\n    img: Assets.exp_books.experience\n  },\n  wit: {\n    name: \"Hero's Wit\",\n    exp: 20000,\n    cost: 4000,\n    img: Assets.exp_books.wit\n  },\n}\n\n\nconst levelExp = [0, 1000, 1325, 1700, 2150, 2625, 3150, 3725, 4350, 5000, 5700, 6450, 7225, 8050, 8925, 9825, 10750, 11725, 12725, 13775, 14875, 16800, 18000, 19250, 20550, 21875, 23250, 24650, 26100, 27575, 29100, 30650, 32250, 33875, 35550, 37250, 38975, 40750, 42575, 44425, 46300, 50625, 52700, 54775, 56900, 59075, 61275, 63525, 65800, 68125, 70475, 76500, 79050, 81650, 84275, 86950, 89650, 92400, 95175, 98000, 100875, 108950, 112050, 115175, 118325, 121525, 124775, 128075, 131400, 134775, 138175, 148700, 152375, 156075, 159825, 163600, 167425, 171300, 175225, 179175, 183175, 216225, 243025, 273100, 306800, 344600, 386950, 434425, 487625, 547200]\nconst milestone = [20, 40, 50, 60, 70, 80, 90]\nfunction EXPCalc(props) {\n  let [advice, setAdvice] = useState(0)\n  let [experience, setExperience] = useState(0)\n  let [wit, setWit] = useState(0)\n  let bookState = { advice, experience, wit }\n  let setBookState = { advice: setAdvice, experience: setExperience, wit: setWit }\n  let [goUnder, setGoUnder] = useState(false)\n  let [level, setLevel] = useState(1)\n  let [curExp, setCurExp] = useState(0)\n  let [mora, setMora] = useState(0)\n\n  //load mora from localStorage\n  useEffect(() => setMora(loadFromLocalStorage(\"mora\") || 0), [])\n  //save mora to localStorage\n  useEffect(() => {\n    saveToLocalStorage(\"mora\", mora)\n  }, [mora])\n\n  //load mora from localStorage\n  useEffect(() => setLevel(loadFromLocalStorage(\"exp_calc_level\") || 1), [])\n  //save mora to localStorage\n  useEffect(() => {\n    saveToLocalStorage(\"exp_calc_level\", level)\n  }, [level])\n\n  //load mora from localStorage\n  useEffect(() => setCurExp(loadFromLocalStorage(\"exp_calc_cur_exp\") || 0), [])\n  //save mora to localStorage\n  useEffect(() => {\n    saveToLocalStorage(\"exp_calc_cur_exp\", curExp)\n  }, [curExp])\n\n  //load exp_books from localStorage\n  useEffect(() => {\n    let lsBookState = loadFromLocalStorage(\"exp_books\") || {}\n    let setBookStates = { advice: setAdvice, experience: setExperience, wit: setWit }\n    Object.entries(lsBookState).forEach(([key, val]) => setBookStates[key]?.(val))\n  }, [])\n  //save exp_books to localStorage\n  useEffect(() =>\n    saveToLocalStorage(\"exp_books\", { advice, experience, wit }), [advice, experience, wit])\n\n  let milestoneLvl = milestone.find(lvl => lvl > level)\n  let expReq = -curExp\n  for (let i = level; i < Math.min(milestoneLvl, levelExp.length); i++)  expReq += levelExp[i]\n  let bookResult = calculateBooks(wit, experience, advice, expReq, goUnder) || []\n  let [numWit = 0, numExperience = 0, numAdvice = 0] = bookResult\n  let bookResultObj = { advice: numAdvice, experience: numExperience, wit: numWit }\n  let expFromBooks = numWit * 20000 + numExperience * 5000 + numAdvice * 1000\n  let moraCost = expFromBooks / 5\n  let expDiff = expReq - expFromBooks\n  let finalMora = mora - moraCost\n  let finalExp = expFromBooks + curExp\n  let finalLvl = level\n  for (; finalLvl < Math.min(milestoneLvl, levelExp.length); finalLvl++) {\n    if (levelExp[finalLvl] <= finalExp) finalExp -= levelExp[finalLvl]\n    else break;\n  }\n  if (finalLvl === milestoneLvl) finalExp = 0\n\n  let invalidText = \"\"\n\n  if (finalMora < 0)\n    invalidText = <span>You don't have enough <b>Mora</b> for this operation.</span>\n  else if (bookResult.length === 0)\n    invalidText = <span>You don't have enough <b>EXP. books</b> to level to the next milestone.</span>\n  else if (level === 90)\n    invalidText = \"You are at the maximum level.\"\n  return <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2\">\n    <Card.Header>\n      <Row>\n        <Col xs=\"auto\">\n          <Image src={books.wit.img} className=\"thumb-small d-inline my-n1 ml-n2\" /><span>Experience Calculator</span>\n        </Col>\n        <Col>\n          <ButtonGroup>\n            <Button variant={goUnder ? \"primary\" : \"success\"} disabled={!goUnder} onClick={() => setGoUnder(false)}>Full Level</Button>\n            <Button variant={!goUnder ? \"primary\" : \"success\"} disabled={goUnder} onClick={() => setGoUnder(true)}>Don't fully level</Button>\n          </ButtonGroup>\n        </Col>\n      </Row>\n\n    </Card.Header>\n    <Card.Body>\n      <Row className=\"mb-2\">\n        <Col>\n          <span>This calcualtor tries to calculate the amount of exp books required to get to the next milestone level. </span>\n          {goUnder ? \"It will try to get as close to the milestone level as possible, so you can grind the rest of the exp without any waste.\" :\n            \"It will try to calculate the amount of books needed to minize as much exp loss as possible.\"}\n        </Col>\n      </Row>\n      <Row >\n        <Col xs={12} md={4} className=\"mb-2\">\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text>Current Level</InputGroup.Text>\n            </InputGroup.Prepend>\n            <CustomFormControl\n              value={level}\n              onValueChange={(val) => setLevel(clamp(val, 0, 90))}\n            />\n          </InputGroup>\n        </Col>\n        <Col xs={12} md={8} className=\"mb-2\">\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text>Current EXP.</InputGroup.Text>\n            </InputGroup.Prepend>\n            <CustomFormControl\n              value={curExp}\n              onValueChange={(val) => setCurExp(clamp(val, 0, (levelExp[level] || 1) - 1))}\n            />\n            <InputGroup.Append>\n              <InputGroup.Text>/{levelExp[level] || 0}</InputGroup.Text>\n            </InputGroup.Append>\n          </InputGroup>\n        </Col>\n        <Col xs={12} md={4} className=\"mb-2\"><Card bg=\"lightcontent\" text=\"lightfont\">\n          <Card.Body className=\"py-2\">\n            <span>Next Milestone: </span><span className=\"float-right text-right\"><b>{milestoneLvl}</b></span>\n          </Card.Body>\n        </Card></Col>\n        <Col xs={12} md={8} className=\"mb-2\"><Card bg=\"lightcontent\" text=\"lightfont\">\n          <Card.Body className=\"py-2\">\n            <span>EXP. needed to milestone: </span><span className=\"float-right text-right\"><strong>{expFromBooks}</strong> / <b>{expReq}</b></span>\n          </Card.Body>\n        </Card></Col>\n      </Row>\n      <Row>\n        {Object.entries(books).map(([bookKey, bookObj]) => {\n          return <Col xs={12} lg={4} key={bookKey}>\n            <BookDisplay bookObj={bookObj} value={bookState[bookKey]} setValue={setBookState[bookKey]} required={bookResultObj[bookKey]} />\n          </Col>\n        })}\n        <Col xs={12} lg={4} className=\"mb-2\">\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text>Current Mora</InputGroup.Text>\n            </InputGroup.Prepend>\n            <CustomFormControl\n              value={mora}\n              onValueChange={(val) => setMora(Math.max(val, 0))}\n            />\n          </InputGroup>\n        </Col>\n        <Col xs={12} md={4} className=\"mb-2\"><Card bg=\"lightcontent\" text=\"lightfont\">\n          <Card.Body className=\"py-2\">\n            <span>Mora Cost: </span><span className=\"float-right text-right\"><b>{moraCost}</b></span>\n          </Card.Body>\n        </Card></Col>\n        <Col xs={12} md={4} className=\"mb-2\"><Card bg=\"lightcontent\" text=\"lightfont\">\n          <Card.Body className=\"py-2\">\n            <span>EXP {!goUnder ? \"Waste\" : \"Diff\"}: </span><span className=\"float-right text-right\"><b className={expDiff < 0 ? `text-danger` : `text-success`}>{expDiff}</b></span>\n          </Card.Body>\n        </Card></Col>\n        <Col xs={12} md={4} className=\"mb-2\"><Card bg=\"lightcontent\" text=\"lightfont\">\n          <Card.Body className=\"py-2\">\n            <span>Final Mora: </span><span className=\"float-right text-right\"><b className={finalMora < 0 ? `text-danger` : `text-success`}>{finalMora}</b></span>\n          </Card.Body>\n        </Card></Col>\n        <Col xs={12} md={4} className=\"mb-2\"><Card bg=\"lightcontent\" text=\"lightfont\">\n          <Card.Body className=\"py-2\">\n            <span>Final Level: </span><span className=\"float-right text-right\"><b className=\"text-success\">{finalLvl}</b></span>\n          </Card.Body>\n        </Card></Col>\n        <Col xs={12} md={4} className=\"mb-2\"><Card bg=\"lightcontent\" text=\"lightfont\">\n          <Card.Body className=\"py-2\">\n            <span>Final EXP: </span><span className=\"float-right text-right\"><b className={finalExp < 0 ? `text-danger` : `text-success`}>{finalExp}</b></span>\n          </Card.Body>\n        </Card></Col>\n      </Row>\n    </Card.Body>\n    <Card.Footer>\n      <Row>\n        <Col>\n          {Boolean(invalidText) && <Alert variant=\"danger\" className=\"mb-0 py-2\">{invalidText}</Alert>}\n        </Col>\n        <Col xs=\"auto\"><Button disabled={invalidText}\n          onClick={() => {\n            setLevel(finalLvl)\n            setCurExp(finalExp)\n            Object.entries(bookResultObj).forEach(([bookKey, val]) => setBookState[bookKey]?.(bookState[bookKey] - val))\n            setMora(finalMora)\n          }}\n          variant=\"success\">Apply</Button></Col>\n      </Row>\n    </Card.Footer>\n  </Card>\n}\nfunction BookDisplay(props) {\n  let { bookObj: { name, img }, value = 0, setValue, required = 0 } = props\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\n    <Card.Header>{name}</Card.Header>\n    <Card.Body>\n      <Row>\n        <Col xs={3}><Image src={img} className=\"w-100 h-auto\" rounded /></Col>\n        <Col >\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text >Amount</InputGroup.Text >\n            </InputGroup.Prepend>\n            <CustomFormControl\n              value={value}\n              onValueChange={(val) => setValue(Math.max(val, 0))}\n            />\n          </InputGroup>\n          <div className=\"mt-2\"><span>Required: </span><span className=\"float-right text-right\"><b className={required ? \"text-success\" : \"\"}>{required}</b></span></div>\n        </Col>\n      </Row>\n    </Card.Body>\n  </Card>\n}\n\nfunction calculateBooks(c20000, c5000, c1000, required, goUnder) {\n  let current = goUnder ? Math.floor(required / 1000) : Math.ceil(required / 1000)\n\n  let r20000 = Math.min(Math.floor(current / 20), c20000)\n  current -= r20000 * 20\n  let r5000 = Math.min(Math.floor(current / 5), c5000)\n  current -= r5000 * 5\n  let r1000 = Math.min(current, c1000)\n  current -= r1000\n  if (goUnder || current === 0)\n    return [r20000, r5000, r1000]\n  else if (r5000 === 3 && r20000 !== c20000)\n    return [r20000 + 1, 0, 0]\n  else if (r5000 !== c5000)\n    return [r20000, r5000 + 1, 0]\n  else if (r20000 !== c20000)\n    return [r20000 + 1, 0, 0]\n  return null\n}","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\nfunction getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \n}\nfunction getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\nconst loadFromLocalStorage = (key) => {\n  let data = localStorage.getItem(key)\n  if (!data) return null\n  return JSON.parse(data)\n}\nconst saveToLocalStorage = (key, obj) =>\n  localStorage.setItem(key, JSON.stringify(obj));\nconst deepClone = (obj) =>\n  JSON.parse(JSON.stringify(obj))\n\nconst closeEnoughFloat = (a, b) =>\n  Math.abs(a - b) <= 0.101\n\nconst closeEnoughInt = (a, b) =>\n  Math.abs(a - b) <= 1\nconst clamp = (val, low, high) => {\n  if (val < low) return low;\n  if (val > high) return high;\n  return val\n}\nconst getArrLastElement = (arr) =>\n  arr.length ? arr[arr.length - 1] : null\n\nconst clamp01 = (val) => clamp(val, 0, 1)\nconst clampPercent = (val) => clamp(val, 0, 100)\n\n//use to pretty print timestamps, or anything really.\nfunction strPadLeft(string, pad, length) {\n  return (new Array(length + 1).join(pad) + string).slice(-length);\n}\n\n//fuzzy compare strings. longer the distance, the higher the mismatch.\nfunction hammingDistance(str1, str2) {\n  var dist = 0;\n  str1 = str1.toLowerCase();\n  str2 = str2.toLowerCase();\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\n    let match = true\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\n      match = false\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\n      match = true\n    if (!match) dist++\n  }\n  return dist;\n}\n\n//multiplies every numberical value in the obj by a multiplier.\nfunction objMultiplication(obj, multi) {\n  Object.keys(obj).forEach(prop => {\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\n  })\n}\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\nconst getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\nexport {\n  getRandomInt,\n  getRandomIntInclusive,\n  getRandomArbitrary,\n  getRandomElementFromArray,\n  loadFromLocalStorage,\n  saveToLocalStorage,\n  deepClone,\n  closeEnoughFloat,\n  closeEnoughInt,\n  clamp,\n  clamp01,\n  clampPercent,\n  getArrLastElement,\n  strPadLeft,\n  hammingDistance,\n  objMultiplication,\n  getObjectKeysRecursive\n}"],"sourceRoot":""}