{"version":3,"sources":["Components/StarDisplay.js","Data/WeaponData.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","../node_modules/react-bootstrap/esm/Badge.js","Data/CharacterData.js","DatabaseUtil.js","Components/StatIcon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","Character/CharacterCard.js","Character/CharacterDisplay.js","Character/Character.js","Stat.js","Util/Util.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Character/CharacterDatabase.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Util/ConditionalsUtil.js","Artifact/ArtifactDatabase.js","Data/ElementalData.js","StatData.js","Weapon/Weapon.js","StatDependency.js"],"names":["StarIcon","icon","faStar","Stars","stars","colored","className","Array","keys","map","_","i","WeaponData","WeaponDataImport","then","imp","default","WeaponLevelKeys","LevelNameData","WeaponTypeData","sword","claymore","catalyst","bow","polearm","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","resin","fragile","condensed","exp_books","advice","wit","experience","Badge","React","forwardRef","_ref","ref","bsPrefix","variant","pill","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","CharacterData","CharacterDataImport","LevelsData","name","level","asend","characterStatBase","crit_rate","crit_dmg","ener_rech","stam","CharacterSpecializedStatKey","DatabaseInitAndVerify","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","Object","values","forEach","art","valid","location","getCharacter","artInSlotId","getArtifactIDFromSlot","slotKey","id","equipArtifact","keyMapping","setKey","mainStatKey","endsWith","replace","maximumEfficiency","Artifact","substatsValidation","updateArtifact","chars","getCharacterDatabase","character","entries","equippedArtifacts","artid","equippedArt","getArtifact","moveToNewLocation","artifactConditionals","filter","cond","srcKey","srcKey2","dmgMode","updateCharacter","StatIcon","hp_base","faTint","hp_final","hp_","hp","atk_base","faFistRaised","atk_final","atk_","atk","def_base","faShieldAlt","def_final","def_","def","ele_mas","faMagic","faDice","faDiceD20","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","_defineProperty","obj","key","value","defineProperty","enumerable","configurable","writable","CharacterCard","useReducer","x","forceUpdate","useEffect","Promise","all","Character","getCharacterDataImport","Weapon","getWeaponDataImport","getDataImport","characterId","onEdit","onDelete","build","calculateBuild","setToSlots","characterKey","weapon","constellation","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","weaponName","getWeaponName","weaponMainVal","getWeaponMainStatValWithOverride","weaponSubKey","getWeaponSubStatKey","weaponSubVal","getWeaponSubStatValWithOverride","weaponLevelName","getLevelName","levelKey","weaponPassiveName","getWeaponPassiveName","cardClassName","bg","text","Header","header","xs","size","onClick","faEdit","faTrashAlt","Body","style","cursor","src","getThumb","getStar","thumbnail","getName","getStatValueWithOverride","refineIndex","Stat","getStatName","getStatUnit","getSetEffects","arr","artifactSetName","getSetName","highestNum","Math","max","unit","statVal","finalStats","toFixed","fixedUnit","footer","Footer","Link","to","pathname","selectedCharacterId","CharacterDisplayCardPromise","CharacterDisplayCard","lazy","CharacterDisplay","deleteCharacter","removeCharacter","editCharacter","setState","charIdToEdit","showEditor","scrollRef","current","scrollIntoView","behavior","cancelEditCharacter","state","ReactGA","pageview","this","createRef","charIdList","getCharacterIdList","Suspense","fallback","editable","onClose","lg","md","faPlus","Error","removeCharacterById","getBaseStatValue","defVal","getSpecializedStatKey","getSpeicalizedStatVal","getLevel","includes","characterObj","getCDataObj","baseStat","getIndexFromlevelkey","charKey","getElementalName","elementalKey","ElementalData","getAllCharacterKeys","star","getElementalKeys","getConstellationName","constellationName","getTitles","titles","getlevelKeys","getlevelNames","indexOf","getAscension","getSpecializedStat","specializeStat","thumbImg","getCard","cardImg","getTalentImg","talentKey","getTalent","img","getConstellationImg","constIndex","talent","getTalentName","getTalentLevelBoost","talents","talentBoost","boostEntry","find","getTalentLevelKey","withBoost","talentLvlKey","talentLevelKeys","levelBoost","clamp","getTalentDocument","document","getTalentFields","fields","getTalentStats","ascension","stats","getTalentStatsAll","statsArr","push","getTalentConditional","conditionalKey","doc","section","tempCond","conditional","getTalentConditionalStats","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","fromEntries","val","getTalentConditionalFields","getTalentStatKey","skillKey","elemental","autoInfused","reactionMode","charEleKey","isAutoElemental","auto","infusable","eleKey","getTalentStatKeyVariant","isAutoInfusable","getDisplayStatKeys","atkKeys","startsWith","ElementToReactionKeys","hasOverride","baseStatOverrides","equipArtifacts","artifactIds","artIdsOnCharacter","artIdsNotOnCharacter","getSlotKeys","artNotOnChar","artOnChar","notCharLoc","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","deepClone","getMainStatValue","numStars","artifactsAssumeFull","substats","substat","stat","setNumKey","length","parseInt","getConditionalStats","dependencies","GetDependencies","PreprocessFormulas","modifiers","statKeys","char_ele_key","overrides","hasOwnProperty","specialStatKey","specializedStatVal","addStatsObj","talentConditionals","weaponStats","subKey","subVal","bonusStats","getWeaponBonusStat","conditionalStats","getWeaponConditionalStat","htmlStatsData","StatData","getStatNamePretty","pretty","getStatNameRaw","getStatNameWithPercent","getStatVariant","printStat","f","expand","getPrintableFormulaStatKeyList","statList","ModifiersText","skey","Modifiers","formulaKeys","FormulaText","modifiersTextKeys","printFormula","printModifier","overrideKey","options","formulaText","statName","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_dmg","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_dmg","electrocharged_multi","electrocharged","superconduct_dmg","superconduct_multi","superconduct","swirl_dmg","swirl_multi","swirl","shatter_dmg","shatter_multi","shattered","crystalize_dmg","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","amp_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","abs","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","noelle_burst_atk","sweep_multiplier","mona_passive2_hydro_ele_dmg_bonus","getRandomElementFromArray","array","floor","random","getRandomIntInclusive","min","ceil","loadFromLocalStorage","data","localStorage","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","closeEnoughFloat","a","b","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","arguments","source","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","phy_dmg_bonus","ele_dmg_bonus","2","ArtifactSubStatsData","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","rolls","efficiency","getSubstatEfficiency","getArtifactEfficiency","currentEfficiency","errMsgs","some","currentNumOfRolls","reduce","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","unequipArtifactOnSlot","getSetKeys","getSetsByMaxStarEntries","setobj","rarity","getPieces","pieces","getPieceName","getPieceIcon","icons","getSetEffectsObj","setEffects","getArtifactSetNumStats","artifactSetEffect","artArr","setNumKeys","getSetEffectText","charFinalStats","setEffectText","getSetEffectConditional","getSlotName","getSlotIcon","getSlotMainStatKeys","getSlotNameWithIcon","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","main","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatKey","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","accu","v","reverse","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","initiated","characterDatabase","charIdIndex","isInvalid","char","getIdNameList","addCharacter","dchar","removeItem","charid","equipArtifactBuild","_createForOfIteratorHelper","allowArrayLike","it","F","s","n","done","e","_e","err","normalCompletion","didErr","step","next","_e2","conditionals","srcKeyObj","index","findIndex","splice","newCond","fieldName","selectedConditionalNum","selectedConditional","curConditional","maxStack","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","Formulas","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","reactionName","dmgKey","dmgName","str","atkTypeName","dmgModeName","ele_key","formula","hydro_ele_dmg_bonus","formulas","getLevelIndex","weaponKey","getWeaponRarity","passiveName","getWeaponPassiveDescription","passiveDescription","getWeaponDescription","description","getWeaponConditional","getWeaponImg","getWeaponMainStatVal","baseStats","getWeaponSubStatVal","sub","getWeaponsOfType","weaponType","getWeaponTypeName","weaponObj","overrideMainVal","overrideSubVal","formulaKeyDependency","registerDependency","operation","testObj","dependency","Set","k","get","add","InsertDependencies","has"],"mappings":"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","file":"static/js/9.b51444d4.chunk.js","sourcesContent":["import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\r\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //this will only run if neither of the database has been initated.\r\n  if (!CharacterDatabase.populateDatebaseFromLocalStorage() & !ArtifactDatabase.populateDatebaseFromLocalStorage()) return\r\n  //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n  let arts = ArtifactDatabase.getArtifactDatabase();\r\n  Object.values(arts).forEach(art => {\r\n    let valid = true\r\n    if (art.location) {\r\n      const locationChar = CharacterDatabase.getCharacter(art.location)\r\n      if (locationChar) {\r\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\r\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\r\n          CharacterDatabase.equipArtifact(art.location, art)\r\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\r\n          art.location = \"\"\r\n          valid = false\r\n        }\r\n      } else {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n    }\r\n    //the set keys were changed to camelcase, need to convert for old databases.\r\n    let keyMapping = {\r\n      \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n      \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n      \"Thundering Fury\": \"ThunderingFury\",\r\n      \"Retracing Bolide\": \"RetracingBolide\",\r\n      \"Noblesse Oblige\": \"NoblesseOblige\",\r\n      \"Maiden Beloved\": \"MaidenBeloved\",\r\n      \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n      \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n      \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n      \"Archaic Petra\": \"ArchaicPetra\",\r\n      \"Brave Heart\": \"BraveHeart\",\r\n      \"Tiny Miracle\": \"TinyMiracle\",\r\n      \"Defender's Will\": \"DefendersWill\",\r\n      \"Martial Artist\": \"MartialArtist\",\r\n      \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n      \"The Exile\": \"TheExile\",\r\n      \"Traveling Doctor\": \"TravelingDoctor\",\r\n      \"Lucky Dog\": \"LuckyDog\",\r\n      \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n      \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n      \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n      \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n    }\r\n    if (keyMapping[art.setKey]) {\r\n      art.setKey = keyMapping[art.setKey]\r\n      valid = false\r\n    }\r\n    //key names were changed. convert old DB\r\n    if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n      art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n      valid = false\r\n    }\r\n    //key names were changed. convert old DB\r\n    if (art?.mainStatKey === \"phy_dmg\") {\r\n      art.mainStatKey = \"phy_dmg_bonus\"\r\n      valid = false\r\n    }\r\n    if (!art.maximumEfficiency) {\r\n      Artifact.substatsValidation(art)\r\n      valid = false\r\n    }\r\n    if (!valid)\r\n      ArtifactDatabase.updateArtifact(art)\r\n  })\r\n\r\n  let chars = CharacterDatabase.getCharacterDatabase();\r\n  Object.values(chars).forEach(character => {\r\n    let valid = true;\r\n    //verify character database equipment validity\r\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\r\n      const equippedArt = ArtifactDatabase.getArtifact(artid)\r\n      if (equippedArt && equippedArt.location !== character.id) //the artifact doesnt have the right location...\r\n        ArtifactDatabase.moveToNewLocation(artid, character.id)\r\n      if (!equippedArt) {\r\n        valid = false\r\n        character.equippedArtifacts[slotKey] = \"\"\r\n      }\r\n    })\r\n\r\n    //conditional format was refactored. this makes sure there is no error when using old DB.\r\n    character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\r\n      if (!cond.srcKey || !cond.srcKey2) {\r\n        valid = false\r\n        return false\r\n      }\r\n      return true\r\n    }) ?? []\r\n\r\n    //check for dmgMode\r\n    if (!character.dmgMode) {\r\n      character.dmgMode = \"dmg\"\r\n      valid = false\r\n    }\r\n    if (!valid) {\r\n      CharacterDatabase.updateCharacter(character)\r\n    }\r\n  })\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { Badge, Image } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Link } from 'react-router-dom';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport Assets from '../Assets/Assets';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport { StatIconEle } from '../Components/StatIcon';\r\nimport Stat from '../Stat';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nexport default function CharacterCard(props) {\r\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\r\n  useEffect(() => {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => forceUpdate())\r\n  }, [])\r\n  let { characterId, onEdit, onDelete } = props\r\n  let character = CharacterDatabase.getCharacter(characterId)\r\n  if (!character) return null;\r\n  let build = Character.calculateBuild(character)\r\n  let { setToSlots } = build\r\n\r\n  let { characterKey, name, weapon = {}, constellation } = character\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponName = Weapon.getWeaponName(weapon.key)\r\n  let weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\r\n  let weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\r\n  let weaponLevelName = Weapon.getLevelName(weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  const statkeys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\",]\r\n  return (<Card className={props.cardClassName} bg={props.bg ? props.bg : \"darkcontent\"} text=\"lightfont\">\r\n    <Card.Header className=\"pr-2\">\r\n      <Row className=\"no-gutters\">\r\n        <Col >\r\n          {props.header ? props.header : <h6><b>{name}</b></h6>}\r\n        </Col>\r\n        <Col xs={\"auto\"}>\r\n          <span className=\"float-right align-top ml-1\">\r\n            {props.onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\r\n              onClick={onEdit}>\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>}\r\n            {props.onDelete && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={onDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </Button>}\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body onClick={onEdit} style={{ cursor: onEdit ? \"pointer\" : \"default\" }}>\r\n      <Row>\r\n        <Col xs=\"auto\" className=\"pr-0\">\r\n          <Image src={Character.getThumb(characterKey)} className={`w-100 h-auto grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\r\n        </Col>\r\n        <Col>\r\n          <h4>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h4>\r\n          <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n          <span>{`Lvl. ${Character.getStatValueWithOverride(character, \"char_level\")} C${constellation}`}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\r\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {Object.entries(Artifact.getSetEffects(setToSlots)).map(([key, arr]) => {\r\n            let artifactSetName = Artifact.getSetName(key)\r\n            let highestNum = Math.max(...arr)\r\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\r\n          })}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {statkeys.map(statKey => {\r\n          let unit = Stat.getStatUnit(statKey)\r\n          let statVal = build.finalStats[statKey]\r\n          return <Col xs={12} key={statKey}>\r\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n            <span className={`float-right`}>\r\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\r\n            </span>\r\n          </Col>\r\n        })}\r\n      </Row>\r\n    </Card.Body>\r\n    {props.footer && <Card.Footer>\r\n      <Button as={Link} to={{\r\n        pathname: \"/build\",\r\n        selectedCharacterId: characterId\r\n      }}>\r\n        Generate Builds\r\n        </Button>\r\n    </Card.Footer>}\r\n  </Card>)\r\n}","import { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { lazy } from 'react';\r\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport ReactGA from 'react-ga';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport Character from './Character';\r\nimport CharacterCard from './CharacterCard';\r\nimport CharacterDatabase from './CharacterDatabase';\r\n\r\n//lazy load the character display\r\nconst CharacterDisplayCardPromise = import('../Character/CharacterDisplayCard');\r\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\r\n\r\nexport default class CharacterDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    this.state = {\r\n      charIdToEdit: \"\",\r\n      showEditor: false,\r\n    }\r\n    ReactGA.pageview('/character')\r\n  }\r\n\r\n  deleteCharacter = (id) => {\r\n    Character.removeCharacter(id)\r\n    this.forceUpdate()\r\n  }\r\n\r\n  editCharacter = (id) =>\r\n    this.setState({ charIdToEdit: id, showEditor: true },\r\n      () => this.scrollRef.current.scrollIntoView({ behavior: \"smooth\" }))\r\n\r\n  cancelEditCharacter = () =>\r\n    this.setState({ charIdToEdit: null, showEditor: false })\r\n\r\n  componentDidMount() {\r\n    this.scrollRef = React.createRef()\r\n  }\r\n  render() {\r\n    let charIdList = CharacterDatabase.getCharacterIdList()\r\n    return (<Container ref={this.scrollRef}>\r\n      {/* editor/character detail display */}\r\n      {this.state.showEditor ? <Row className=\"mt-2\"><Col>\r\n        <React.Suspense fallback={<span>Loading...</span>}>\r\n          <CharacterDisplayCard editable\r\n            characterId={this.state.charIdToEdit}\r\n            onClose={this.cancelEditCharacter}\r\n            footer={<Button variant=\"danger\" onClick={this.cancelEditCharacter}>Close</Button>}\r\n          />\r\n        </React.Suspense>\r\n      </Col></Row> : null}\r\n\r\n      <Row className=\"mt-2\">\r\n        {this.state.showEditor ? null : <Col lg={4} md={6} className=\"mb-2\">\r\n          <Card className=\"h-100\" bg=\"darkcontent\" text=\"lightfont\">\r\n            <Card.Header className=\"pr-2\">\r\n              <span>Add New Character</span>\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex flex-column justify-content-center\">\r\n              <Row className=\"d-flex flex-row justify-content-center\">\r\n                <Col xs=\"auto\">\r\n                  <Button onClick={() => this.editCharacter(\"\")}>\r\n                    <h1><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></h1>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>}\r\n        {charIdList.map(id =>\r\n          <Col key={id} lg={4} md={6} className=\"mb-2\">\r\n            <CharacterCard\r\n              cardClassName=\"h-100\"\r\n              characterId={id}\r\n              onDelete={() => this.deleteCharacter(id)}\r\n              onEdit={() => this.editCharacter(id)}\r\n            />\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Container>)\r\n\r\n  }\r\n}","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\nimport { GetDependencies } from \"../StatDependency\"\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getTalent(charKey, talentKey)?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    if (skillKey === \"phy\") return `phy_${dmgMode}`\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    if (skillKey === \"phy\") return \"physical\"\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_base\") || false\r\n    return character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n\r\n    let dependencies = GetDependencies(stats)\r\n    PreprocessFormulas(dependencies, stats.modifiers)(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"modifiers\")\r\n        return initialStats.modifiers = { ...(initialStats.modifiers || {}), ...val }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey, constellation)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, Modifiers, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static getPrintableFormulaStatKeyList = (statList = []) => {\r\n    //remove keys that will be overriden by the modifier\r\n    for (const statKey of statList)\r\n      if (Object.keys(ModifiersText).includes(statKey))\r\n        statList = statList.filter(skey => skey !== Modifiers[statKey].key)\r\n    let formulaKeys = Object.keys(FormulaText)\r\n    let modifiersTextKeys = Object.keys(ModifiersText)\r\n    return statList.filter(statKey => formulaKeys.includes(statKey) || modifiersTextKeys.includes(statKey))\r\n  }\r\n\r\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\r\n    if (statKey in ModifiersText)\r\n      return Stat.printModifier(stats, statKey, modifiers[statKey], false)\r\n    return FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n      (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n  }\r\n\r\n  static printModifier = (stats, overrideKey, options, expand = true) =>\r\n    typeof ModifiersText?.[overrideKey]?.formulaText === \"function\" &&\r\n    (<span>{ModifiersText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (Modifiers[statKey]) statKey = Modifiers[statKey].key\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} )* 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 2 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * 1.5 * {f(o, \"amp_reaction_base_multi\")}</span>,\r\n  amp_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(o, \"ele_mas\")} * exp^(-0.000505 * {f(o, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst ModifiersText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.sweep_multiplier * 100}%</span>,\r\n  },\r\n  mona_passive2_hydro_ele_dmg_bonus: {\r\n    formulaText: () => (o) => <span>{f(o, \"hydro_ele_dmg_bonus\")} + {f(o, \"ener_rech\")} * 20%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n  ModifiersText,\r\n};\r\n","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance\r\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {})\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val))\r\n            return rolls.push(arr);\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val))\r\n            return rolls.push(arr);\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        if (!arr.length || arr[arr.length - 1] >= roll)\r\n          rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, numStars, rolls) => {\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars);\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let min = rollData[0] * len;\r\n    let max = rollData[rollData.length - 1] * len;\r\n    return clampPercent(((sum - min) / (max - min)) * 100)\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static substatsValidation(state) {\r\n    let { numStars = 0, level = 0, substats = [] } = state\r\n    //calculate rolls for substats\r\n    for (const substat of substats) {\r\n      let { key, value } = substat\r\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\r\n      substat.rolls = rollArr[0] || []\r\n      if (rollArr.length > 1) substat.rollArr = rollArr\r\n      substat.efficiency = Artifact.getSubstatEfficiency(key, numStars, substat.rolls)\r\n    }\r\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n    state.currentEfficiency = currentEfficiency\r\n    state.maximumEfficiency = maximumEfficiency\r\n    //artifact validation logic\r\n    let errMsgs = []\r\n    for (const substat of substats)\r\n      if (!substat.rolls?.length && substat.key && substat.value)\r\n        errMsgs.push(\"One of the substat is invalid.\")\r\n\r\n    //only show this error when all substats are \"valid\"\r\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\r\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\r\n\r\n    if (numStars) {\r\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\r\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\r\n        for (const substat of substats) {\r\n          let rollslen = substat.rolls?.length\r\n          if (!rollslen || !substat.rollArr) continue\r\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\r\n          if (moreRolls.length) {\r\n            substat.rolls = moreRolls[0]\r\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\r\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, numStars, substat.rolls)\r\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\r\n            state.currentEfficiency = currentEfficiency\r\n            state.maximumEfficiency = maximumEfficiency\r\n          }\r\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\r\n          if (currentNumOfRolls >= leastNumRolls) break;\r\n        }\r\n      }\r\n      if (currentNumOfRolls < leastNumRolls)\r\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\r\n      else {\r\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\r\n      }\r\n    }\r\n    return errMsgs\r\n  }\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n        })\r\n      if (Object.keys(setEffect).length > 0)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\r\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n      if (Object.keys(condStats).length > 0) {\r\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\r\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\r\n        Object.entries(condStats).forEach(([statKey, value]) =>\r\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\r\n      }\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else if (!conditionalNum && index < 0) { //nothing to change\r\n      return conditionals\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => artifactDatabase[id] || null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  all_dmg_bonus: { name: \"All DMG Bonus\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elemental Mastery Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elemental Mastery Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elemental Mastery Multiplier Z\", unit: \"multi\" },\r\n  amp_reaction_base_multi: { name: \"Amplifying Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_final: (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.phy_dmg,\r\n  plunge_crit_dmg: (s) => s.phy_crit_dmg,\r\n  plunge_avg_dmg: (s) => s.phy_avg_dmg,\r\n  plunge_bonus_multi: (s) => s.phy_bonus_multi,\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 2 * s.amp_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * 1.5 * s.amp_reaction_base_multi,\r\n  amp_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s[`${ele}_ele_dmg`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_ele_crit_dmg`],\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_ele_avg_dmg`],\r\n  plunge_bonus_multi: (s, ele) => s[`${ele}_ele_bonus_multi`],\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.all_dmg_bonus) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst Modifiers = {\r\n  noelle_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => s.atk_final + s.def_final * options.sweep_multiplier\r\n  },\r\n  mona_passive2_hydro_ele_dmg_bonus: {\r\n    key: \"hydro_ele_dmg_bonus\",\r\n    formula: () => (s) => s.hydro_ele_dmg_bonus + s.ener_rech * 0.2\r\n  }\r\n}\r\n\r\nfunction PreprocessFormulas(formulaKeys, modifiers) {\r\n  let formulas = formulaKeys.map(key => {\r\n    if (key in Modifiers) return [Modifiers[key].key, Modifiers[key].formula(modifiers[key])]\r\n    if (key in Formulas) return [key, Formulas[key]]\r\n    let value = StatData[key][\"default\"] ?? 0\r\n    return [key, (s) => (s[key] ?? value)]\r\n  })\r\n\r\n  return stat => formulas.forEach(([key, formula]) => {\r\n    stat[key] = formula(stat)\r\n  })\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  Modifiers,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  PreprocessFormulas,\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","import { Formulas, Modifiers, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nconst formulaKeyDependency = {}\r\nconst registerDependency = (name, operation) => {\r\n  let testObj = {}\r\n  let dependency = new Set()\r\n  Object.keys(StatData).forEach(k => {\r\n    Object.defineProperty(testObj, k, {\r\n      get: () => {\r\n        dependency.add(k)\r\n        return 0\r\n      }\r\n    })\r\n  })\r\n  operation(testObj)\r\n  formulaKeyDependency[name] = [...dependency]\r\n}\r\nObject.keys(Formulas).forEach(key => registerDependency(key, s => Formulas[key](s)))\r\nObject.keys(Modifiers).forEach(name => registerDependency(name, s => Modifiers[name].formula({})(s)))\r\n\r\nif (process.env.NODE_ENV === \"development\") console.log(formulaKeyDependency)\r\n\r\nfunction GetDependencies(initialStats, keys = Object.keys(Formulas)) {\r\n  let dependencies = new Set(), { modifiers = {} } = initialStats\r\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\r\n  return [...dependencies]\r\n}\r\nfunction InsertDependencies(key, modifiers, dependencies) {\r\n  if (dependencies.has(key)) return\r\n\r\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n  dependencies.add(key)\r\n\r\n  for (const name in modifiers) {\r\n    if (Modifiers[name].key === key) {\r\n      formulaKeyDependency[name].forEach(k => InsertDependencies(k, modifiers, dependencies))\r\n      dependencies.add(name)\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  GetDependencies,\r\n}\r\n"],"sourceRoot":""}