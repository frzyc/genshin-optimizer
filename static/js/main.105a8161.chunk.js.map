{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Home","lazy","ArtifactDisplay","CharacterDisplay","BuildDisplay","Planner","App","className","id","Navbar","bg","variant","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","process","href","target","rel","onClick","ReactGA","outboundLink","label","icon","faPaypal","faPatreon","faDiscord","fallback","Container","Card","text","Body","Spinner","animation","path","component","Row","Col","xs","version","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","debug","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.105a8161.chunk.js","sourcesContent":["import { faDiscord, faPatreon, faPaypal } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Suspense, lazy } from 'react';\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Link, Route, Switch, HashRouter } from \"react-router-dom\";\nimport './App.scss';\nimport './Assets/Image.scss'\nimport { version } from \"../package.json\"\nimport ReactGA from 'react-ga';\n\nconst Home = lazy(() => import('./Home/HomeDisplay'))\nconst ArtifactDisplay = lazy(() => import('./Artifact/ArtifactDisplay'))\nconst CharacterDisplay = lazy(() => import('./Character/CharacterDisplay'))\nconst BuildDisplay = lazy(() => import('./Build/BuildDisplay'))\nconst Planner = lazy(() => import('./Planner/PlannerDisplay'))\nconst TestDisplay = lazy(() => import('./TestPage/TestDisplay'))\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div className=\"h-100 d-flex flex-column\">\n        <div id=\"content\" className=\"flex-grow-1\">\n          <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\n            <Navbar.Brand as={Link} to=\"/\">Genshin Optimizer</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link as={Link} to=\"/artifact\">\n                  Artifacts</Nav.Link>\n                <Nav.Link as={Link} to=\"/character\">Characters</Nav.Link>\n                <Nav.Link as={Link} to=\"/build\">Builds</Nav.Link>\n                <Nav.Link as={Link} to=\"/tools\">Tools</Nav.Link>\n                {process.env.NODE_ENV === \"development\" && <Nav.Link as={Link} to=\"/test\">TEST</Nav.Link>}\n              </Nav>\n              <Nav>\n                <Nav.Link href={process.env.REACT_APP_PAYPAL_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"patreon\" }, () => { })}>\n                  <span><FontAwesomeIcon icon={faPaypal} className=\"fa-fw\" /> PayPal</span>\n                </Nav.Link>\n                <Nav.Link href={process.env.REACT_APP_PATREON_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"patreon\" }, () => { })}>\n                  <span><FontAwesomeIcon icon={faPatreon} className=\"fa-fw\" /> Patreon</span>\n                </Nav.Link>\n                <Nav.Link href={process.env.REACT_APP_DISCORD_LINK} target=\"_blank\" rel=\"noreferrer\" onClick={() => ReactGA.outboundLink({ label: \"discord\" }, () => { })}>\n                  <span><FontAwesomeIcon icon={faDiscord} className=\"fa-fw\" /> Discord</span>\n                </Nav.Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n          <Suspense fallback={<Container>\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2\">\n              <Card.Body>\n                <h3 className=\"text-center\">Loading... <Spinner animation=\"border\" variant=\"primary\" /></h3>\n              </Card.Body>\n            </Card></Container>}>\n            <Switch>\n              <Route path=\"/artifact\" component={ArtifactDisplay} />\n              <Route path=\"/character\" component={CharacterDisplay} />\n              <Route path=\"/build\" component={BuildDisplay} />\n              <Route path=\"/tools\" component={Planner} />\n              {process.env.NODE_ENV === \"development\" && <Route path=\"/test\" component={TestDisplay} />}\n              <Route path=\"/\" component={Home} />\n              {/* <Route exact path=\"/\" component={Home} /> */}\n            </Switch>\n          </Suspense>\n        </div>\n        <Nav id=\"footer\" className=\"bg-dark\">\n          <Row className=\"w-100 ml-0 mr-0 mb-2 text-light d-flex justify-content-between\">\n            <Col xs={\"auto\"}>\n              <span > <small>Genshin Optimizer is not affiliated with or endorsed by miHoYo. </small></span>\n            </Col>\n            <Col xs={\"auto\"}>\n              <span  ><small > Genshin Optimizer Ver:{version} </small></span>\n            </Col>\n          </Row>\n        </Nav>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ReactGA from 'react-ga';\nReactGA.initialize(process.env.REACT_APP_GA_TRACKINGID, {\n  debug: process.env.NODE_ENV === \"development\"\n});\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}