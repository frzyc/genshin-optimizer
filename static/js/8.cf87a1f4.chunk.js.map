{"version":3,"sources":["Weapon/Weapon.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","Components/CustomFormControl.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","Components/ConditionalSelector.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","../node_modules/react-bootstrap/esm/Badge.js","Data/WeaponData.js","DatabaseUtil.js","Components/StatIcon.js","StatDependency.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","Artifact/ArtifactCard.js","Artifact/PercentBadge.js","Data/CharacterData.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/StatDisplay.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","TestPage/TestDisplay.js","Character/Character.js","Stat.js","Util/Util.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Character/CharacterDatabase.js","Util/ConditionalsUtil.js","Artifact/ArtifactDatabase.js","Data/ElementalData.js","StatData.js","Components/StarDisplay.js"],"names":["Weapon","this","Error","getWeaponDataImport","WeaponDataImport","getLevelName","levelKey","defVal","LevelNameData","getLevelIndex","WeaponLevelKeys","indexOf","getWeaponName","weaponKey","WeaponData","name","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","refineIndex","charFinalStats","character","passiveDescription","getWeaponDescription","description","getWeaponConditional","conditional","getWeaponImg","img","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","getWeaponSubStatKey","subStatKey","getWeaponBonusStat","stats","getWeaponsOfType","weaponType","Object","fromEntries","entries","filter","getWeaponTypeName","WeaponTypeData","getWeaponMainStatValWithOverride","weaponObj","overrideMainVal","key","getWeaponSubStatValWithOverride","overrideSubVal","getWeaponConditionalStat","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","map","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","FloatFormControl","placeholder","onValueChange","disabled","useState","focus","setFocus","type","className","toString","onChange","e","target","parseFloat","onFocus","onBlur","IntFormControl","parseInt","resolveContainerRef","ref","_ref","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","ConditionalSelector","props","setConditional","defEle","Array","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","i","Fragment","keys","v","stack","tempcount","icon","faCheckSquare","faSquare","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","Badge","React","forwardRef","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","then","imp","default","DatabaseInitAndVerify","localStorage","removeItem","CharacterDatabase","populateDatebaseFromLocalStorage","ArtifactDatabase","arts","getArtifactDatabase","values","forEach","art","valid","location","getCharacter","keyMapping","setKey","mainStatKey","endsWith","replace","maximumEfficiency","substats","substat","rolls","Artifact","getSubstatRolls","numStars","efficiency","getSubstatEfficiency","getArtifactEfficiency","level","currentEfficiency","updateArtifact","chars","getCharacterDatabase","equippedArtifacts","slotKey","artid","getArtifact","undefined","artifactConditionals","cond","srcKey","srcKey2","dmgMode","updateCharacter","StatIcon","hp_base","faTint","hp_final","hp_","hp","atk_base","faFistRaised","atk_final","atk_","atk","def_base","faShieldAlt","def_final","def_","def","ele_mas","faMagic","crit_rate","faDice","crit_dmg","faDiceD20","ener_rech","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","formulaKeyDependency","DependencyStatKeys","formulaOverrides","dependencies","GetDependencyStats","formulaOverride","OverrideFormulas","dependency","includes","push","Set","formulaKeys","Formulas","k","statkeys","StatData","keyDependencies","subdependencies","testObj","defineProperty","get","configurable","AttachLazyFormulas","getDependency","_defineProperty","obj","enumerable","writable","ArtifactCard","artifactId","artifactObj","forceUpdate","onEdit","onDelete","assumeFull","lock","locationChar","locationName","mainStatLevel","assFullColor","mainStatVal","getMainStatValue","Stat","getStatUnit","artifactValid","every","sstat","length","equipOnChar","charId","equipArtifactOnChar","border","bg","Header","xs","md","src","getPieceIcon","thumbnail","getPieceName","getSlotNameWithIcon","Body","Title","getSetName","stars","getStatName","stat","numRolls","effOpacity","statName","toFixed","style","opacity","percent","Footer","id","char","placement","overlay","pointerEvents","faLock","faLockOpen","Boolean","faEdit","faTrashAlt","PercentBadge","children","badgeColor","isNaN","Math","floor","CharacterData","CharacterDataImport","LevelsData","asend","characterStatBase","stam","CharacterSpecializedStatKey","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","TabContext","Provider","SelectableContext","TabContent","decoratedBsPrefix","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","Tab","_React$Component","apply","arguments","_inheritsLoose","prototype","render","Container","Content","Pane","createContext","useAccordionToggle","contextEventKey","AccordionContext","AccordionToggle","accordionOnClick","AccordionCollapse","Collapse","Children","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","_objectWithoutProperties","source","excluded","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","DisplayStats","statVal","build","editable","otherProps","buildVal","finalStats","buildDiff","originalVal","Character","getStatValueWithOverride","diff","diffText","fixedUnit","hasOverride","Col","DisplayNewBuildDiff","equippedBuild","newBuild","unit","CharacterArtifactPane","characterKey","compareAgainstEquipped","setState","showOther","setShowOther","artifactsAssumeFull","statKeys","getDisplayStatKeys","displayStatProps","displayNewBuildProps","formulaDependencyKeys","flat","FormulaText","Row","Card","Button","xl","printStat","printFormula","equipArtifacts","artifactIds","Alert","sm","lg","getSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","getConditionalNum","getConditionalStats","val","conditionalElement","cnum","state","setStateArtifactConditional","getSetEffectText","getSlotKeys","StatInput","prependEle","defaultValue","restProps","InputGroup","Prepend","Text","Append","OverlayTrigger","Tooltip","faUndo","CharacterOverviewPane","constellation","setOverride","setConstellation","editLevel","setEditLevel","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","getName","Image","getStar","colored","clamp","getLevel","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","conditionalStats","conditionalEle","faQuoteLeft","DropdownButton","title","reverse","star","arr","Dropdown","ItemText","Divider","faGavel","editingOther","SetEditingOther","additionalKeys","displayStatKeys","editStatKeys","otherStatKeys","getElementalKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","getStatNameRaw","CharacterTalentPane","ascension","getAscension","skillDisplayProps","ContextAwareToggle","callback","currentEventKey","decoratedOnClick","expanded","faWindowMinimize","faWindowMaximize","ToggleButtonGroup","ToggleButton","href","rel","eleKey","immunityStatKey","elementImmunity","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","autoInfused","statsDisplayKeys","ReactionDisplay","tKey","tText","SkillDisplayCard","talentKey","subtitle","asc","enabled","onClickTitle","ReactionComponents","superconduct_dmg","electrocharged_dmg","overloaded_dmg","swirl_dmg","shatter_dmg","information","faQuestionCircle","crystalize_dmg","reactionMode","charEleKey","eleInterArr","ElementToReactionKeys","Ele","talentLimits","header","getTalentLevelKey","talentLvlKey","levelBoost","infuseBtn","getElementalName","tLvl","talentLevelKeys","statsEle","talentStats","getTalentStats","ListGroup","index","getTalentImg","getTalentName","Subtitle","getTalentDocument","section","talentText","fields","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","FieldDisplay","field","fieldText","fieldVariant","fieldBasic","basicVal","fieldVal","finalVal","round","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","child","CharacterDisplayCard","forceUpdateComponent","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","characterId","getInitialState","Promise","all","getCharacterDataImport","getDataImport","deepClone","addCharacter","footer","onClose","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","faTimes","defaultActiveKey","Nav","Link","getCDataObj","talent","skill","initialState","auto","burst","ListGroupItem","action","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","horizontal","horizontalVariant","initialBsPrefix","AbstractNav","TestDisplay","moveToNewLocation","removeCharacterById","getSpecializedStatKey","getSpeicalizedStatVal","characterObj","baseStat","getIndexFromlevelkey","elementalKey","ElementalData","constellationName","titles","getSpecializedStat","specializeStat","thumbImg","cardImg","constIndex","getTalentLevelBoost","talents","talentBoost","boostEntry","find","withBoost","getTalentFields","getTalentStatsAll","statsArr","getTalentConditional","doc","tempCond","skillKey","elemental","infusable","getTalentStatKeyVariant","atkKeys","startsWith","artIdsOnCharacter","artIdsNotOnCharacter","artNotOnChar","artOnChar","notCharLoc","equipArtifact","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","char_ele_key","overrides","hasOwnProperty","specialStatKey","addStatsObj","weaponStats","subKey","subVal","bonusStats","htmlStatsData","pretty","getStatVariant","f","expand","printOverrideFormula","options","overrideKey","OverrideFormulasText","formulaText","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_multi","electrocharged","superconduct_multi","superconduct","swirl_multi","swirl","shatter_multi","shattered","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","trans_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","abs","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","noelle_burst_atk","array","random","getRandomIntInclusive","min","max","ceil","loadFromLocalStorage","data","getItem","JSON","parse","saveToLocalStorage","setItem","stringify","closeEnoughFloat","a","b","closeEnoughInt","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","ownKeys","object","enumerableOnly","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","getOwnPropertyDescriptors","defineProperties","_createForOfIteratorHelper","allowArrayLike","it","F","s","n","done","_e","err","normalCompletion","didErr","step","next","_e2","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","phy_dmg_bonus","ele_dmg_bonus","2","ArtifactSubStatsData","ArtifactSlotsData","ArtifactBase","totalPossbleRolls","totalPossibleRolls","rollsRemaining","totalCurrentEfficiency","reduce","sum","cur","currentLocation","intendedLocation","artifactToSwapWithid","getArtifactIDFromSlot","artifactToSwapWith","swapLocations","unequipArtifactOnSlot","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","icons","getSetEffectsObj","setEffects","artifactSetEffect","artArr","setNumKeys","setEffectText","getSlotName","getSlotIcon","getSlotMainStatKeys","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","getBaseSubRollNumLow","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","rollOption","accu","roll","len","c","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","hasSetEffect","setEffectObj","condStats","initiated","characterDatabase","charIdIndex","isInvalid","getCharacterIdList","dchar","charid","equipArtifactBuild","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","addArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid","atk_weapon","phy_res","ele_res","inc_heal","pow_shield","red_cd","norm_atk_dmg_bonus","char_atk_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_dmg_bonus","burst_dmg_bonus","skill_crit_rate","burst_crit_rate","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","melt_dmg_bonus","vaporize_dmg_bonus","char_level","enemy_level","enemy_ele_res","enemy_ele_immunity","resMultiplier","overloaded_dmg_bonus","pyro_enemy_ele_res_multi","pow","electrocharged_dmg_bonus","electro_enemy_ele_res_multi","superconduct_dmg_bonus","cryo_enemy_ele_res_multi","swirl_dmg_bonus","anemo_enemy_ele_res_multi","shatter_dmg_bonus","crystalize_dmg_bonus","exp","eleFormulas","reactionName","dmgKey","dmgName","some","str","atkTypeName","dmgModeName","ele_key","formula","overrideFormulaKey","StarIcon","faStar","Stars","_"],"mappings":"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","file":"static/js/8.cf87a1f4.chunk.js","sourcesContent":["import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst FloatFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseFloat(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\n\r\nconst IntFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseInt(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\nexport {\r\n  FloatFormControl,\r\n  IntFormControl\r\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import Artifact from \"./Artifact/Artifact\";\r\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\r\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\r\n\r\nfunction DatabaseInitAndVerify() {\r\n  //remove the old error/prone id lists, if it still exists\r\n  localStorage.removeItem(\"artifact_id_list\")\r\n  localStorage.removeItem(\"character_id_list\")\r\n\r\n  //this will only run if neither of the database has been initated.\r\n  if (CharacterDatabase.populateDatebaseFromLocalStorage() |\r\n    ArtifactDatabase.populateDatebaseFromLocalStorage()) {\r\n    //since one of the database has been initiated, we verify the linking of artifacts and characters\r\n    let arts = ArtifactDatabase.getArtifactDatabase();\r\n    Object.values(arts).forEach(art => {\r\n      let valid = true\r\n      if (art.location && !CharacterDatabase.getCharacter(art.location)) {\r\n        art.location = \"\"\r\n        valid = false\r\n      }\r\n      //the set keys were changed to camelcase, need to convert for old databases.\r\n      let keyMapping = {\r\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\r\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\r\n        \"Thundering Fury\": \"ThunderingFury\",\r\n        \"Retracing Bolide\": \"RetracingBolide\",\r\n        \"Noblesse Oblige\": \"NoblesseOblige\",\r\n        \"Maiden Beloved\": \"MaidenBeloved\",\r\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\r\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\r\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\r\n        \"Archaic Petra\": \"ArchaicPetra\",\r\n        \"Brave Heart\": \"BraveHeart\",\r\n        \"Tiny Miracle\": \"TinyMiracle\",\r\n        \"Defender's Will\": \"DefendersWill\",\r\n        \"Martial Artist\": \"MartialArtist\",\r\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\r\n        \"The Exile\": \"TheExile\",\r\n        \"Traveling Doctor\": \"TravelingDoctor\",\r\n        \"Lucky Dog\": \"LuckyDog\",\r\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\r\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\r\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\r\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\r\n      }\r\n      if (keyMapping[art.setKey]) {\r\n        art.setKey = keyMapping[art.setKey]\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\r\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\r\n        valid = false\r\n      }\r\n      //key names were changed. convert old DB\r\n      if (art?.mainStatKey === \"phy_dmg\") {\r\n        art.mainStatKey = \"phy_dmg_bonus\"\r\n        valid = false\r\n      }\r\n      if (!art.maximumEfficiency) {\r\n        //calculate rolls & efficiency for caching\r\n        for (const substat of art.substats) {\r\n          let { key, value } = substat\r\n          substat.rolls = Artifact.getSubstatRolls(key, value, art.numStars)\r\n          substat.efficiency = Artifact.getSubstatEfficiency(key, art.numStars, substat.rolls)\r\n        }\r\n        let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(art.substats, art.numStars, art.level)\r\n        art.currentEfficiency = currentEfficiency\r\n        art.maximumEfficiency = maximumEfficiency\r\n        valid = false\r\n      }\r\n      if (!valid)\r\n        ArtifactDatabase.updateArtifact(art)\r\n    })\r\n\r\n    let chars = CharacterDatabase.getCharacterDatabase();\r\n    Object.values(chars).forEach(character => {\r\n      let valid = true;\r\n      //verify character database equipment validity\r\n      let equippedArtifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([slotKey, artid]) => {\r\n        if (!ArtifactDatabase.getArtifact(artid)) {\r\n          valid = false\r\n          return [slotKey, undefined]\r\n        }\r\n        return [slotKey, artid]\r\n      }))\r\n      if (!valid)\r\n        character.equippedArtifacts = equippedArtifacts\r\n\r\n      //conditional format was refactored. this makes sure there is no error when using old DB.\r\n      if (character.artifactConditionals) character.artifactConditionals = character.artifactConditionals.filter(cond => {\r\n        if (!cond.srcKey || !cond.srcKey2) {\r\n          valid = false\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      //check for dmgMode\r\n      if (!character.dmgMode) {\r\n        character.dmgMode = \"dmg\"\r\n        valid = false\r\n      }\r\n      if (!valid) {\r\n        CharacterDatabase.updateCharacter(character)\r\n      }\r\n    })\r\n  }\r\n}\r\nexport {\r\n  DatabaseInitAndVerify\r\n};\r\n","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import { AttachLazyFormulas, Formulas, OverrideFormulas, StatData } from \"./StatData\"\r\n\r\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\r\nconst formulaKeyDependency = {}\r\nconst getDependency = (key) => {\r\n  let testObj = {}\r\n  let dependency = []\r\n  Object.keys(StatData).filter(k => k !== key).forEach(k => {\r\n    Object.defineProperty(testObj, k, {\r\n      get: () => {\r\n        dependency.push(k)\r\n        Object.defineProperty(testObj, k, { get: () => 0 })\r\n        return 0\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  AttachLazyFormulas(testObj)\r\n  //use the getter to generate the dependency\r\n  if (typeof testObj[key] === \"number\")\r\n    formulaKeyDependency[key] = dependency\r\n}\r\nObject.keys(Formulas).forEach(key => getDependency(key))\r\nif (process.env.NODE_ENV === \"development\") console.log(formulaKeyDependency)\r\n\r\nfunction DependencyStatKeys(key, formulaOverrides = []) {\r\n  let dependencies = GetDependencyStats(key, formulaOverrides) || []\r\n  //add any formula override dependencies\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key, dependency = [] } = OverrideFormulas[formulaOverride.key] || {}\r\n    if (!dependencies.includes(key)) return\r\n    dependencies.push(...dependency)\r\n  })\r\n  dependencies = [...new Set(dependencies)]\r\n  let formulaKeys = Object.keys(Formulas).filter(k => k === key || dependencies.includes(k))\r\n  let statkeys = Object.keys(StatData).filter(k => k === key || dependencies.includes(k))\r\n  return { formulaKeys, statkeys }\r\n}\r\nfunction GetDependencyStats(key, formulaOverrides = []) {\r\n  let dependencies = [key]\r\n  let keyDependencies = null\r\n  for (const formulaOverride of formulaOverrides)\r\n    if (OverrideFormulas[formulaOverride?.key]?.key === key)\r\n      keyDependencies = OverrideFormulas[formulaOverride?.key]?.dependency\r\n  keyDependencies = keyDependencies || formulaKeyDependency[key]\r\n  keyDependencies?.forEach(k => {\r\n    let subdependencies = GetDependencyStats(k, formulaOverrides)\r\n    dependencies.push(...subdependencies)\r\n  })\r\n  return dependencies\r\n}\r\nexport {\r\n  DependencyStatKeys,\r\n  GetDependencyStats,\r\n}\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, artifactObj, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId && !artifactObj) return null;\r\n  let art = artifactObj ? artifactObj : ArtifactDatabase.getArtifact(artifactId);\r\n  if (!art) return null;\r\n  let { setKey, slotKey, numStars = 0, level = 0, mainStatKey, substats = [], location, lock, currentEfficiency = 0, maximumEfficiency = 0 } = art\r\n  let locationChar = CharacterDatabase.getCharacter(location)\r\n  let locationName = locationChar ? locationChar.name : \"Inventory\"\r\n  let mainStatLevel = assumeFull ? numStars * 4 : level\r\n  let assFullColor = assumeFull && level !== numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(mainStatKey, numStars, mainStatLevel, \"\")}{Stat.getStatUnit(mainStatKey)}</span>\r\n  let artifactValid = substats.every(sstat => (!sstat.key || (sstat.key && sstat.value && sstat?.rolls?.length)))\r\n  const equipOnChar = (charId) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charId)\r\n    forceUpdate?.()\r\n  }\r\n  return (<Card className=\"h-100\" border={`${numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getPieceIcon(setKey, slotKey)} className={`w-100 h-auto grad-${numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{Artifact.getPieceName(setKey, slotKey, \"Unknown Piece Name\")}</b></h6>\r\n          <div>{Artifact.getSlotNameWithIcon(slotKey)}{` +${level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getSetName(setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let numRolls = stat?.rolls?.length || 0\r\n          let efficiency = stat?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={numRolls ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{numRolls ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        })}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge percent={currentEfficiency} valid={artifactValid}>\r\n          {currentEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge percent={maximumEfficiency} valid={artifactValid}>\r\n          {maximumEfficiency.toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\">{locationName}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar()}>Inventory</Dropdown.Item>\r\n              {Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n                <Dropdown.Item key={id} onClick={() => equipOnChar(id)}>\r\n                  {char.name}\r\n                </Dropdown.Item>)}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><span>Location: {locationName}</span></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={location}\r\n                  style={location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    lock = !lock\r\n                    ArtifactDatabase.updateArtifact(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(lock || location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Col } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\nfunction DisplayStats({ statKey, character, build, editable, ...otherProps }) {\r\n  let buildVal = build?.finalStats?.[statKey] || 0\r\n  let statVal, buildDiff = null\r\n  if (typeof buildVal === \"string\") {\r\n    statVal = <span>{buildVal}</span>\r\n  } else {\r\n    let originalVal = Character.getStatValueWithOverride(character, statKey)\r\n    if (statKey === \"hp_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"hp_base\")\r\n    else if (statKey === \"def_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"def_base\")\r\n    else if (statKey === \"atk_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"atk_base\") + Character.getStatValueWithOverride(character, \"atk_weapon\")\r\n\r\n    let diff = buildVal - originalVal\r\n    let diffText = (diff?.toFixed?.(Stat.fixedUnit(statKey)) || diff) + Stat.getStatUnit(statKey)\r\n    if (diff < 0) buildDiff = <span className=\"text-success\">{diffText}</span>\r\n    else if (diff > 0) buildDiff = <span className=\"text-success\"> +{diffText}</span>\r\n\r\n    if (originalVal || !diff) statVal = <span className={editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}>{(originalVal?.toFixed?.(Stat.fixedUnit(statKey)) || originalVal) + Stat.getStatUnit(statKey)}</span>\r\n  }\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className=\"float-right text-right\">{statVal}{buildDiff}</span>\r\n  </Col>\r\n}\r\nconst DisplayNewBuildDiff = ({ statKey, character, equippedBuild, newBuild, editable, ...otherProps }) => {\r\n  let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right ${editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed?.(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed?.(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nexport {\r\n  DisplayStats,\r\n  DisplayNewBuildDiff,\r\n}","import React, { useState } from 'react';\r\nimport { Accordion, Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { DisplayNewBuildDiff, DisplayStats } from '../../Components/StatDisplay';\r\nimport Stat, { FormulaText } from \"../../Stat\";\r\nimport { GetDependencyStats } from '../../StatDependency';\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState }) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(characterKey)\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  const formulaDependencyKeys = [...new Set(statKeys.map(key => GetDependencyStats(key, build.finalStats?.formulaOverrides)).flat())]\r\n  const formulaKeys = Object.keys(FormulaText).filter(key => formulaDependencyKeys.includes(key))\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Calculations`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ?\r\n                  statKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                  statKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {formulaKeys.map(key => <Col key={key} xs={12} className=\"mt-2\">\r\n                    <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                      <Card.Header className=\"p-2\">\r\n                        {Stat.printStat(key, build.finalStats)}\r\n                      </Card.Header>\r\n                      <Card.Body className=\"p-2\">\r\n                        <small>{Stat.printFormula(key, build.finalStats, build.finalStats.formulaOverrides, false)}</small>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  )}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n              {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row className=\"mb-n2\">\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Artifact.getSlotKeys().map(slotKey =>\r\n            build.artifactIds[slotKey] ? <Col sm={6} lg={4} key={build.artifactIds[slotKey]} className=\"mb-2\">\r\n              <ArtifactCard artifactId={build.artifactIds[slotKey]} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport { DisplayNewBuildDiff, DisplayStats } from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"char_level\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={(val) => setOverride(\"char_level\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"char_level\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats, character)}</p>\r\n            <Row>\r\n              <Col xs={12} md={6}>\r\n                <h5>ATK: {weaponDisplayMainVal}</h5>\r\n              </Col>\r\n              {subStatKey && <Col xs={12} md={6}>\r\n                <h5>{Stat.getStatName(subStatKey)}: {weaponDisplaySubVal}{Stat.getStatUnit(subStatKey)}</h5>\r\n              </Col>}\r\n            </Row>\r\n            {<Row>\r\n              {(conditionalStats || weaponBonusStats) && <Col xs={12}><h6 className=\"mb-0\">Bonus Stats:</h6></Col>}\r\n              {weaponBonusStats && Object.entries(weaponBonusStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"bonu\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n              {conditionalStats && Object.entries(conditionalStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"cond\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n            </Row>}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  let { editable, character, character: { compareAgainstEquipped }, setOverride, equippedBuild, newBuild } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  let additionalKeys = [\"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const displayStatKeys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp_base\", \"hp\", \"hp_\", \"atk_base\", \"atk\", \"atk_\", \"def_base\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\", \"skill_crit_rate\", \"burst_crit_rate\", \"all_dmg_bonus\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              displayStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              displayStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              otherStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ?\r\n            miscStatkeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n            miscStatkeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n","import { faCheckSquare, faQuestionCircle, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, ToggleButton, ToggleButtonGroup, Tooltip } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat, { FormulaText } from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { GetDependencyStats } from \"../../StatDependency\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation, dmgMode }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  //choose which one to display stats for\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button\r\n        // style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"norm_atk\", \"char_atk\", \"plunge\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(Character.getTalentStatKey(\"char_atk\", character, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    //search for dependency, and flatten, isolate unique keys\r\n    keys = [...new Set(keys.map(key => GetDependencyStats(key, build.finalStats?.formulaOverrides)).flat())]\r\n    //return keys that are part of the formula text, in the order in which they appear.\r\n    return Object.keys(FormulaText).filter(key => keys.includes(key))\r\n  }\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <Accordion>\r\n        <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Options</span>\r\n                <small>Expand below to edit enemy details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ToggleButtonGroup type=\"radio\" value={dmgMode} name=\"dmgOptions\" onChange={(dmgMode) => setState({ dmgMode })}>\r\n                  <ToggleButton value=\"avg_dmg\">Avg. DMG</ToggleButton>\r\n                  <ToggleButton value=\"dmg\">Normal Hit, No Crit</ToggleButton>\r\n                  <ToggleButton value=\"crit_dmg\">Crit Hit DMG</ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Row className=\"mb-2\"><Col>\r\n                <Button variant=\"warning\" >\r\n                  <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                    To get the specific resistance values of enemies, please visit the wiki.\r\n                  </a>\r\n                </Button >\r\n              </Col></Row>\r\n              <Row>\r\n                <Col xs={12} xl={6} className=\"mb-2\">\r\n                  <StatInput\r\n                    name={<b>Enemy Level</b>}\r\n                    value={Character.getStatValueWithOverride(character, \"enemy_level\")}\r\n                    placeholder={Stat.getStatNameRaw(\"enemy_level\")}\r\n                    defaultValue={Character.getBaseStatValue(character, \"enemy_level\")}\r\n                    onValueChange={(val) => setOverride(\"enemy_level\", val)}\r\n                  />\r\n                </Col>\r\n                {[\"physical\", ...Character.getElementalKeys()].map(eleKey => {\r\n                  let statKey = eleKey === \"physical\" ? \"enemy_phy_res\" : `${eleKey}_enemy_ele_res`\r\n                  let immunityStatKey = eleKey === \"physical\" ? \"enemy_phy_immunity\" : `${eleKey}_enemy_ele_immunity`\r\n                  let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                  return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                        <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                      name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                      value={Character.getStatValueWithOverride(character, statKey)}\r\n                      placeholder={Stat.getStatNameRaw(statKey)}\r\n                      defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                      onValueChange={(val) => setOverride(statKey, val)}\r\n                      disabled={elementImmunity}\r\n                    />\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Formulas</span>\r\n                <small>Expand below to see calculation details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n              <Row>\r\n                {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\r\n                  <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                    <Card.Header className=\"p-2\">\r\n                      {Stat.printStat(key, build.finalStats)}\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-2\">\r\n                      <small>{Stat.printFormula(key, build.finalStats, build.finalStats.formulaOverrides, false)}</small>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                )}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_dmg: SuperConductCard,\r\n  electrocharged_dmg: ElectroChargedCard,\r\n  overloaded_dmg: OverloadedCard,\r\n  swirl_dmg: SwirlCard,\r\n  shatter_dmg: ShatteredCard,\r\n  crystalize_dmg: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey, reactionMode = \"none\" }, newBuild, equippedBuild, setState }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let charEleKey = Character.getElementalKey(characterKey)\r\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shatter_dmg\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shatter_dmg\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body className=\"px-3 py-2\">\r\n      <Row>\r\n        <Col ><Row className=\"mb-n2\">\r\n          {eleInterArr.map(key => {\r\n            let Ele = ReactionComponents[key]\r\n            if (!Ele) return null\r\n            let val = build?.finalStats?.[key]\r\n            val = val?.toFixed?.(Stat.fixedUnit(key)) || val\r\n            return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele value={val} /></Col>\r\n          })}\r\n        </Row></Col>\r\n        <Col xs=\"auto\">\r\n          {[\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup\r\n            type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setState({ reactionMode: val === \"none\" ? null : val })}>\r\n            <ToggleButton className=\"p-2\" value={\"none\"}> <h6>No Elemental</h6> <h6>Interactions</h6></ToggleButton >\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Vaporize(Pyro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-2\" value={\"pyro_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Pyro)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"hydro\" && <ToggleButton className=\"p-2\" value={\"hydro_vaporize\"}>\r\n              <h5 className=\"text-vaporize\">Melt(Pyro)</h5>\r\n              <h4 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n            {charEleKey === \"cryo\" && <ToggleButton className=\"p-2\" value={\"cryo_melt\"}>\r\n              <h5 className=\"text-melt\">Melt(Pyro)</h5>\r\n              <h4 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />\r\n              </h4>\r\n            </ToggleButton >}\r\n          </ToggleButtonGroup>}\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"superconduct_dmg\")}</h5>\r\n    <h4 className=\"text-superconduct mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"electrocharged_dmg\")}</h5>\r\n    <h4 className=\"text-electrocharged mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"overloaded_dmg\")}</h5>\r\n    <h4 className=\"text-overloaded mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction SwirlCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"swirl_dmg\")}</h5>\r\n    <h4 className=\"text-swirl mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ value }) {\r\n  let information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"shatter_dmg\")}</h5>\r\n    <h4 className=\"text-shatter mb-0\">\r\n      <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-2\">\r\n    <h5>{Stat.getStatName(\"crystalize_dmg\")}</h5>\r\n    <h4 className=\"text-crystalize mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {value}\r\n    </h4>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let { talentLvlKey = undefined, levelBoost = 0 } = Character.getTalentLevelKey(character, talentKey, constellation, true)\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n  if (typeof talentLvlKey === \"number\") {\r\n    if (editable) {\r\n      let setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        let talentLevelKeys = state.talentLevelKeys || {}\r\n        talentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let statsEle = null\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  if (talentStats) {\r\n    statsEle = <Row><Col>\r\n      <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n        <ListGroup className=\"text-white\" variant=\"flush\">\r\n          {Object.entries(talentStats).map(([statKey, statVal], index) =>\r\n            <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n              <div>\r\n                <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n              </div>\r\n            </ListGroup.Item>\r\n          )}\r\n        </ListGroup>\r\n      </Card>\r\n    </Col></Row>\r\n  }\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalStats = {}\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            //filter out formulaOverrides from rendering\r\n            conditionalStats = Object.fromEntries(Object.entries(conditionalStats).filter(([key, _]) => key !== \"formulaOverrides\"))\r\n            conditionalFields = Character.getTalentConditionalFields(conditional, conditionalNum, [])\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Col xs={12}>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {Object.entries(conditionalStats).map(([statKey, statVal], index) =>\r\n                  <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n                    <div>\r\n                      <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                      <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n                    </div>\r\n                  </ListGroup.Item>\r\n                )}\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i + (conditionalStats?.length || 0)} index={i + (conditionalStats?.length || 0)} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        }\r\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\r\n          <div className=\"mb-2\">{talentText}</div>\r\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n        </Col>{conditionalEle}</Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay(props) {\r\n  let { character, character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldVariant = field.variant || \"\"\r\n  if (typeof fieldVariant === \"function\")\r\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldBasic = field.basicVal\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats, character)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = field.value ? field.value : field.finalVal\r\n  if (typeof fieldVal === \"function\") {\r\n    fieldVal = fieldVal?.(talentLvlKey, build.finalStats, character)\r\n  }\r\n  if (typeof fieldVal === \"number\")\r\n    fieldVal = Math.round(fieldVal)\r\n\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.finalVal\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats, character)?.toFixed?.(0))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterId)\r\n      this.state = CharacterDatabase.getCharacter(props.characterId)\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    dmgMode: \"dmg\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey), reactionMode: null, autoInfused: false })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.characterId && this.state.id !== this.props.characterId)\r\n      this.setState(CharacterDatabase.getCharacter(this.props.characterId))\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"char_level\")}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && (Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\"}>Talents {(Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\" && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} setState={this.setSetState} setOverride={this.setOverride} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import { Container } from \"react-bootstrap\";\r\nimport CharacterDisplayCard from \"../Character/CharacterDisplayCard\";\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport '../StatDependency'\r\nexport default function TestDisplay(props) {\r\n  DatabaseInitAndVerify()\r\n  return <Container>\r\n    <CharacterDisplayCard editable characterId={\"character_2\"} />\r\n  </Container>\r\n}\r\n","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { AttachLazyFormulas, ElementToReactionKeys } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getCDataObj(charKey)?.talent?.[talentKey]?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getCDataObj(charKey)?.talent?.[talentKey]?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getCDataObj(charKey)?.talent?.[talentKey]?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"formulaOverrides\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    if (skillKey === \"phy\") return `phy_${dmgMode}`\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    if (skillKey === \"phy\") return \"physical\"\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_base\") || false\r\n    return character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals, initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals && artifactConditionals.forEach(conditional => {\r\n      let { srcKey: setKey, srcKey2: setNumKey } = conditional\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditional.conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n    AttachLazyFormulas(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"formulaOverrides\") {\r\n        initialStats.formulaOverrides = [...(initialStats.formulaOverrides || []), ...val]\r\n        return\r\n      }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, OverrideFormulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static printFormula = (statKey, stats, formulaOverrides = [], expand = true) => {\r\n    for (const formulaOverride of formulaOverrides)\r\n      if (OverrideFormulas[formulaOverride?.key]?.key === statKey)\r\n        return Stat.printOverrideFormula(stats, formulaOverride.key, formulaOverride.options, false)\r\n    return FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n      (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n  }\r\n\r\n  static printOverrideFormula = (stats, overrideKey, options, expand = true) =>\r\n    OverrideFormulasText?.[overrideKey] && typeof OverrideFormulasText?.[overrideKey].formulaText === \"function\" &&\r\n    (<span>{OverrideFormulasText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  trans_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(0, \"ele_mas\")} * exp^(-0.000505 * {f(0, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulasText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.value}%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \r\n}\r\nfunction getRandomArbitrary(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\nconst loadFromLocalStorage = (key) => {\r\n  let data = localStorage.getItem(key)\r\n  if (!data) return null\r\n  return JSON.parse(data)\r\n}\r\nconst saveToLocalStorage = (key, obj) =>\r\n  localStorage.setItem(key, JSON.stringify(obj));\r\nconst deepClone = (obj) =>\r\n  JSON.parse(JSON.stringify(obj))\r\n\r\nconst closeEnoughFloat = (a, b) =>\r\n  Math.abs(a - b) <= 0.101\r\n\r\nconst closeEnoughInt = (a, b) =>\r\n  Math.abs(a - b) <= 1\r\nconst clamp = (val, low, high) => {\r\n  if (val < low) return low;\r\n  if (val > high) return high;\r\n  return val\r\n}\r\nconst getArrLastElement = (arr) =>\r\n  arr.length ? arr[arr.length - 1] : null\r\n\r\nconst clamp01 = (val) => clamp(val, 0, 1)\r\nconst clampPercent = (val) => clamp(val, 0, 100)\r\n\r\n//use to pretty print timestamps, or anything really.\r\nfunction strPadLeft(string, pad, length) {\r\n  return (new Array(length + 1).join(pad) + string).slice(-length);\r\n}\r\n\r\n//fuzzy compare strings. longer the distance, the higher the mismatch.\r\nfunction hammingDistance(str1, str2) {\r\n  var dist = 0;\r\n  str1 = str1.toLowerCase();\r\n  str2 = str2.toLowerCase();\r\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\r\n    let match = true\r\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\r\n      match = false\r\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\r\n      match = true\r\n    if (!match) dist++\r\n  }\r\n  return dist;\r\n}\r\nexport {\r\n  getRandomInt,\r\n  getRandomIntInclusive,\r\n  getRandomArbitrary,\r\n  getRandomElementFromArray,\r\n  loadFromLocalStorage,\r\n  saveToLocalStorage,\r\n  deepClone,\r\n  closeEnoughFloat,\r\n  closeEnoughInt,\r\n  clamp,\r\n  clamp01,\r\n  clampPercent,\r\n  getArrLastElement,\r\n  strPadLeft,\r\n  hammingDistance\r\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {})\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static subStatCloseEnough = (key, value1, value2) => {\r\n    if (Stat.getStatUnit(key) === \"%\")\r\n      return closeEnoughFloat(value1, value2)\r\n    else\r\n      return closeEnoughInt(value1, value2)\r\n  }\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\r\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\r\n    if (!rollData.length) return defVal\r\n    if (rollData.includes(subStatValue)) return [subStatValue]\r\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\r\n      return defVal\r\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\r\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\r\n    let rolls = [];\r\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\r\n    if (!maxNumRoll) return defVal;\r\n    const rollOption = (val, arr) => {\r\n      if (rolls.length) return;\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (isFloat) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val)) {\r\n            rolls = arr;\r\n            return;\r\n          }\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val)) {\r\n            rolls = arr;\r\n            return\r\n          }\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        rollOption(subStatValue, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(subStatValue, [])\r\n    return rolls;\r\n  }\r\n  static getSubstatEfficiency = (subStatKey, numStars, rolls) => {\r\n    let rollData = this.getSubstatRollData(subStatKey, numStars);\r\n    let len = rolls.length\r\n    let sum = rolls.reduce((a, c) => a + c, 0)\r\n    let min = rollData[0] * len;\r\n    let max = rollData[rollData.length - 1] * len;\r\n    return clampPercent(((sum - min) / (max - min)) * 100)\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static getArtifactEfficiency(substats, numStars, level) {\r\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\r\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\r\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\r\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      let hasSetEffect = false\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (setEffectObj.stats && Object.keys(setEffectObj.stats).length > 0) {\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n            hasSetEffect = true\r\n          }\r\n          if (setEffectObj.conditional) {\r\n            let conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n            if (conditionalNum) {\r\n              let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n              if (Object.keys(condStats) > 0) {\r\n                setEffect[setNumKey] = deepClone(condStats)\r\n                hasSetEffect = true\r\n              }\r\n            }\r\n          }\r\n        })\r\n      if (hasSetEffect)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar characterDatabase = {};\r\nvar charIdIndex = 1;\r\n\r\nexport default class CharacterDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof CharacterDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (char) => !char || !char.name || !char.characterKey || !char.levelKey\r\n  static getCharacterDatabase = () => deepClone(characterDatabase);\r\n  static getCharacterIdList = () => Object.keys(characterDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"character_\")).forEach(id => {\r\n      if (!characterDatabase[id]) {\r\n        let character = loadFromLocalStorage(id);\r\n        if (!character) return;\r\n        if (this.isInvalid(character)) {\r\n          this.removeCharacterById(id);\r\n          return;\r\n        }\r\n        if (!character.equippedArtifacts) {\r\n          character.equippedArtifacts = {}\r\n          saveToLocalStorage(id, character)\r\n        }\r\n        characterDatabase[id] = character;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static addCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    //generate id using charIdIndex\r\n    let id = `character_${charIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `character_${charIdIndex++}`\r\n    let dchar = deepClone(char)\r\n    dchar.id = id;\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n    return id;\r\n  }\r\n  static updateCharacter = (char) => {\r\n    if (this.isInvalid(char)) return;\r\n    let id = char.id;\r\n    let dchar = deepClone(char)\r\n    saveToLocalStorage(id, dchar);\r\n    characterDatabase[id] = dchar;\r\n  }\r\n  static getCharacter = (id) => id ? characterDatabase[id] : null\r\n\r\n  static removeCharacterById = (id) => {\r\n    delete characterDatabase[id];\r\n    localStorage.removeItem(id);\r\n  }\r\n  static getArtifactIDFromSlot = (charid, slotKey) => {\r\n    if (!charid || !slotKey) return null;\r\n    let char = this.getCharacter(charid)\r\n    if (char.equippedArtifacts)\r\n      return char.equippedArtifacts[slotKey]\r\n  }\r\n  static equipArtifact = (charid, art) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !art || !art.slotKey) return\r\n    if (!char.equippedArtifacts)\r\n      char.equippedArtifacts = {};\r\n    char.equippedArtifacts[art.slotKey] = art.id;\r\n    this.updateCharacter(char)\r\n  }\r\n  static unequipArtifactOnSlot = (charid, slotKey) => {\r\n    let char = this.getCharacter(charid)\r\n    if (!char || !slotKey) return\r\n    if (!char.equippedArtifacts || !char.equippedArtifacts[slotKey]) return;\r\n    char.equippedArtifacts[slotKey] = \"\";\r\n    this.updateCharacter(char)\r\n  }\r\n  static equipArtifactBuild = (characterId, artifactIds) => {\r\n    let character = this.getCharacter(characterId)\r\n    if (!character) return;\r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n}\r\n","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\r\nvar initiated = false\r\nvar artifactDatabase = {};\r\nvar artIdIndex = 1;\r\nexport default class ArtifactDatabase {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof ArtifactDatabase) {\r\n      throw Error('A static class cannot be instantiated.');\r\n    }\r\n  }\r\n  static isInvalid = (art) =>\r\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\r\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\r\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\r\n  static populateDatebaseFromLocalStorage = () => {\r\n    if (initiated) return;\r\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\r\n      if (!artifactDatabase[id]) {\r\n        let art = loadFromLocalStorage(id)\r\n        if (!art) return;\r\n        if (this.isInvalid(art)) {\r\n          this.removeArtifactById(id);\r\n          return;\r\n        }\r\n        artifactDatabase[id] = art;\r\n      }\r\n    })\r\n    initiated = true\r\n    return true\r\n  }\r\n  static getArtifact = (id) => artifactDatabase[id] || null\r\n  static removeArtifact = (art) => {\r\n    this.removeArtifactById(art.id);\r\n  }\r\n  static addArtifact = (art) => {\r\n    if (this.isInvalid(art)) return null;\r\n    //generate id using artIdIndex\r\n    let id = `artifact_${artIdIndex++}`\r\n    while (localStorage.getItem(id) !== null)\r\n      id = `artifact_${artIdIndex++}`\r\n    let dart = deepClone(art)\r\n    dart.id = id;\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n    return id;\r\n  }\r\n  static updateArtifact = (art) => {\r\n    if (this.isInvalid(art)) return;\r\n    let id = art.id;\r\n    let dart = deepClone(art)\r\n    saveToLocalStorage(id, dart);\r\n    artifactDatabase[id] = dart;\r\n  }\r\n  static removeArtifactById = (artId) => {\r\n    delete artifactDatabase[artId];\r\n    localStorage.removeItem(artId);\r\n  }\r\n\r\n  static moveToNewLocation = (artid, location) => {\r\n    if (!artid) return;\r\n    let art = this.getArtifact(artid)\r\n    if (!art || art.location === location) return;\r\n    art.location = location;\r\n    this.updateArtifact(art);\r\n  }\r\n  static swapLocations = (artA, artB) => {\r\n    let locA = artA.location\r\n    let locB = artB.location\r\n    this.moveToNewLocation(artA.id, locB)\r\n    this.moveToNewLocation(artB.id, locA)\r\n  }\r\n  static swapLocationsById = (artAid, artBid) =>\r\n    this.swapLocations(this.getArtifact(artAid), this.getArtifact(artBid))\r\n\r\n}\r\n","const ElementalData = {\r\n  anemo: { name: \"Anemo\" },\r\n  geo: { name: \"Geo\" },\r\n  electro: { name: \"Electro\" },\r\n  hydro: { name: \"Hydro\" },\r\n  pyro: { name: \"Pyro\" },\r\n  cryo: { name: \"Cryo\" },\r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nexport default ElementalData","import ElementalData from \"./Data/ElementalData\";\r\nimport { clamp, deepClone } from \"./Util/Util\";\r\n\r\nconst StatData = {\r\n  //HP\r\n  hp_base: { name: \"HP\", pretty: \"HP Base\" },\r\n  hp: { name: \"HP\", pretty: \"HP Flat\" },//flat hp\r\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Percent\" },\r\n  hp_final: { name: \"HP\", pretty: \"HP Final\" },\r\n  //ATK\r\n  atk_base: { name: \"ATK\", pretty: \"ATK Base\" },//character atk + weapon atk\r\n  atk: { name: \"ATK\", pretty: \"ATK Flat\" },\r\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Percent\" },\r\n  atk_final: { name: \"ATK\", pretty: \"ATK Final\" },\r\n  atk_weapon: { name: \"Weapon ATK\", pretty: \"ATK Weapon\" },\r\n  //DEF\r\n  def_base: { name: \"DEF\", pretty: \"DEF Base\" },\r\n  def: { name: \"DEF\", pretty: \"DEF Flat\" },\r\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Percent\" },\r\n  def_final: { name: \"DEF\", pretty: \"DEF Final\" },\r\n\r\n  phy_dmg_bonus: { name: \"Physical DMG Bonus\", unit: \"%\" },\r\n  phy_res: { name: \"Physical RES\", unit: \"%\" },\r\n  ele_dmg_bonus: { name: \"DMG Bonus\", unit: \"%\" },//will expand to \"Anemo DMG Bonus\" DONT CHANGE needed for screenshot parsing\r\n  ele_res: { name: \"DMG RES\", unit: \"%\" },//will expand to \"Anemo DMG RES\"\r\n  ele_mas: { name: \"Elemental Mastery\", },\r\n  ener_rech: { name: \"Energy Recharge\", unit: \"%\" },\r\n  crit_rate: { name: \"CRIT Rate\", unit: \"%\" },\r\n  crit_dmg: { name: \"CRIT DMG\", unit: \"%\" },\r\n  heal_bonu: { name: \"Healing Bonus\", unit: \"%\" },\r\n  stam: { name: \"Stamina\" },\r\n  inc_heal: { name: \"Incoming Healing Bonus\", unit: \"%\" },\r\n  pow_shield: { name: \"Powerful Shield\", unit: \"%\" },\r\n  red_cd: { name: \"Reduce CD\", unit: \"%\" },\r\n\r\n  //auto\r\n  norm_atk_dmg: { name: \"Normal Attack DMG\" },\r\n  char_atk_dmg: { name: \"Charged Attack DMG\" },\r\n  plunge_dmg: { name: \"Plunging Attack DMG\" },\r\n  norm_atk_crit_dmg: { name: \"Normal Attack CRIT Hit DMG\" },\r\n  char_atk_crit_dmg: { name: \"Charged Attack CRIT Hit DMG\" },\r\n  plunge_crit_dmg: { name: \"Plunging Attack CRIT Hit DMG\" },\r\n  norm_atk_avg_dmg: { name: \"Normal Attack Avg. DMG\" },\r\n  char_atk_avg_dmg: { name: \"Charged Attack Avg. DMG\" },\r\n  plunge_avg_dmg: { name: \"Plunging Attack Avg. DMG\" },\r\n  norm_atk_dmg_bonus: { name: \"Normal Attack DMG Bonus\", unit: \"%\" },\r\n  char_atk_dmg_bonus: { name: \"Charged Attack DMG Bonus\", unit: \"%\" },\r\n  norm_atk_crit_rate: { name: \"Nomral Attack CRIT Rate\", unit: \"%\" },\r\n  char_atk_crit_rate: { name: \"Charged Attack CRIT Rate\", unit: \"%\" },\r\n  norm_atk_crit_multi: { name: \"Normal Attack Crit Multiplier\", unit: \"multi\" },\r\n  char_atk_crit_multi: { name: \"Charged Attack Crit Multiplier\", unit: \"multi\" },\r\n  norm_atk_bonus_multi: { name: \"Normal Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  char_atk_bonus_multi: { name: \"Charged Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n  plunge_bonus_multi: { name: \"Plunging Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  //skill\r\n  skill_dmg: { name: \"Ele. Skill DMG\" },\r\n  burst_dmg: { name: \"Ele. Burst DMG\" },\r\n  skill_crit_dmg: { name: \"Ele. Skill CRIT Hit DMG\" },\r\n  burst_crit_dmg: { name: \"Ele. Burst CRIT Hit DMG\" },\r\n  skill_avg_dmg: { name: \"Ele. Skill Avg. DMG\" },\r\n  burst_avg_dmg: { name: \"Ele. Burst Avg. DMG\" },\r\n  skill_dmg_bonus: { name: \"Ele. Skill DMG Bonus\", unit: \"%\" },\r\n  burst_dmg_bonus: { name: \"Ele. Burst DMG Bonus\", unit: \"%\" },\r\n  skill_crit_rate: { name: \"Ele. Skill CRIT Rate\", unit: \"%\" },\r\n  burst_crit_rate: { name: \"Ele. Burst CRIT Rate\", unit: \"%\" },\r\n  skill_crit_multi: { name: \"Ele. Skill Crit Multiplier\", unit: \"multi\" },\r\n  burst_crit_multi: { name: \"Ele. Burst Crit Multiplier\", unit: \"multi\" },\r\n  skill_bonus_multi: { name: \"Ele. Skill Bonus DMG Multiplier\", unit: \"multi\" },\r\n  burst_bonus_multi: { name: \"Ele. Burst Bonus DMG Multiplier\", unit: \"multi\" },\r\n  skill_cd_red: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\r\n  burst_cd_red: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\r\n\r\n  phy_dmg: { name: \"Physical Attack DMG\" },\r\n  phy_crit_dmg: { name: \"Physical Attack CRIT Hit DMG\" },\r\n  phy_avg_dmg: { name: \"Physical Attack Avg. DMG\" },\r\n  phy_bonus_multi: { name: \"Physical Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  ele_dmg: { name: \"Elemental Attack DMG\" },\r\n  ele_crit_dmg: { name: \"Elemental Attack CRIT Hit DMG\" },\r\n  ele_avg_dmg: { name: \"Elemental Attack Avg. DMG\" },\r\n  ele_bonus_multi: { name: \"Elemental Attack Bonus DMG Multiplier\", unit: \"multi\" },\r\n\r\n  crit_dmg_multi: { name: \"Crit Hit Multiplier\", unit: \"multi\" },\r\n  crit_multi: { name: \"Crit Multiplier\", unit: \"multi\" },\r\n  all_dmg_bonus: { name: \"All DMG Bonus\", unit: \"%\" },//general all damage increase\r\n  move_spd: { name: \"Movement SPD\", unit: \"%\" },\r\n  atk_spd: { name: \"ATK SPD\", unit: \"%\" },\r\n  weakspot_dmg: { name: \"Weakspot DMG\", unit: \"%\" },\r\n  stamina_dec: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_gliding_dec: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\r\n  stamina_charged_dec: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\r\n\r\n  //elemental interaction\r\n  melt_dmg_bonus: { name: \"Melt DMG Bonus\", unit: \"%\", variant: \"melt\" },\r\n  vaporize_dmg_bonus: { name: \"Vaporize DMG Bonus\", unit: \"%\", variant: \"vaporize\" },\r\n\r\n  ele_mas_multi_x: { name: \"Elementry Mastry Multiplier X\", unit: \"multi\" },\r\n  ele_mas_multi_y: { name: \"Elementry Mastry Multiplier Y\", unit: \"multi\" },\r\n  ele_mas_multi_z: { name: \"Elementry Mastry Multiplier Z\", unit: \"multi\" },\r\n  trans_reaction_base_multi: { name: \"Transformation Reaction Base Multiplier\", unit: \"multi\" },\r\n\r\n  //character stuff\r\n  char_ele_key: { name: \"Character Element Key\", default: \"anemo\" },\r\n  char_level: { name: \"Character Level\", default: 1 },\r\n  //enemy\r\n  enemy_level: { name: \"Enemy Level\" },\r\n  enemy_level_multi: { name: \"Enemy Level Multiplier\", unit: \"multi\" },\r\n  //enemy resistance and stuff\r\n  enemy_phy_res: { name: \"Enemy Physical RES\", unit: \"%\", default: 10 },\r\n  enemy_phy_res_multi: { name: \"Enemy Physical RES Multiplier\", unit: \"multi\" },\r\n  enemy_phy_immunity: { name: \"Enemy Physical Immunity\", default: false },\r\n  enemy_ele_res: { name: \"Enemy Elemental RES\", unit: \"%\", default: 10 },\r\n  enemy_ele_res_multi: { name: \"Enemy Elemental RES Multiplier\", unit: \"multi\" },\r\n  enemy_ele_immunity: { name: \"Enemy Elemental Immunity\", default: false },\r\n};\r\nfunction resMultiplier(res) {\r\n  res = res / 100\r\n  if (res < 0) return 1 - res / 2\r\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\r\n  return 1 - res\r\n}\r\nconst ElementToReactionKeys = {\r\n  anemo: [\"swirl_dmg\"],\r\n  geo: [\"crystalize_dmg\", \"shatter_dmg\"],\r\n  electro: [\"overloaded_dmg\", \"electrocharged_dmg\", \"superconduct_dmg\"],\r\n  hydro: [\"electrocharged_dmg\", \"shatter_dmg\"],//\"hydro_vaporize_multi\",\r\n  pyro: [\"overloaded_dmg\"],// \"burning_dmg\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \r\n  cryo: [\"shatter_dmg\", \"superconduct_dmg\"],//\"cryo_melt_multi\", \r\n  // dendro: { name: \"Dendro\" }\r\n}\r\nconst ReactionMatrix = {\r\n  overloaded: [37.4371542286, -4.3991155718, 0.9268181504, -0.0314790536, 0.0005189440, -0.0000027646],\r\n  superconduct: [7.4972486411, -0.4750909512, 0.1836799174, -0.0064237710, 0.0001110078, -0.0000006038],\r\n  electrocharged: [20.8340255487, -1.6987232790, 0.4742385201, -0.0162160738, 0.0002746679, -0.0000014798],\r\n  shattered: [31.2160750111, -3.7397755267, 0.7174530144, -0.0239673351, 0.0003895953, -0.0000020555],\r\n  swirl: [13.5157684329, -1.7733381829, 0.3097567417, -0.0103922088, 0.0001679502, -0.0000008854],\r\n  crystalize: [83.06561, -4.42541, 0.5568372, -0.01637168, 0.0002253889, -0.000001088197]\r\n}\r\nfunction ampliBase(ele_mas) {\r\n  return 1 + 0.189266831 * ele_mas * Math.exp(-0.000505 * ele_mas) / 100\r\n}\r\n//formulas for calculating\r\nconst Formulas = {\r\n  //HP\r\n  hp_final: (s) => s.hp_base * (1 + s.hp_ / 100) + s.hp,\r\n  //ATK\r\n  atk_final: (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk,\r\n  //DEF\r\n  def_final: (s) => s.def_base * (1 + s.def_ / 100) + s.def,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (s) => s.atk_final * s.norm_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  norm_atk_crit_dmg: (s) => s.norm_atk_dmg * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s) => s.norm_atk_dmg * s.norm_atk_crit_multi,\r\n  norm_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.norm_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  norm_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (s) => s.atk_final * s.char_atk_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  char_atk_crit_dmg: (s) => s.char_atk_dmg * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s) => s.char_atk_dmg * s.char_atk_crit_multi,\r\n  char_atk_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.char_atk_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  char_atk_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (s) => s.phy_dmg,\r\n  plunge_crit_dmg: (s) => s.phy_crit_dmg,\r\n  plunge_avg_dmg: (s) => s.phy_avg_dmg,\r\n  plunge_bonus_multi: (s) => s.phy_bonus_multi,\r\n\r\n  phy_dmg: (s) => s.atk_final * s.phy_bonus_multi * s.enemy_level_multi * s.enemy_phy_res_multi,\r\n  phy_crit_dmg: (s) => s.phy_dmg * s.crit_dmg_multi,\r\n  phy_avg_dmg: (s) => s.phy_dmg * s.crit_multi,\r\n  phy_bonus_multi: (s) => (1 + (s.phy_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  crit_dmg_multi: (s) => (1 + s.crit_dmg / 100),\r\n  crit_multi: (s) => (1 + (clamp(s.crit_rate, 0, 100) / 100) * (s.crit_dmg / 100)),\r\n\r\n  skill_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.skill_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n  burst_crit_multi: (s) => (1 + (clamp(s.crit_rate + s.burst_crit_rate, 0, 100) / 100) * s.crit_dmg / 100),\r\n\r\n  enemy_level_multi: (s) => (100 + s.char_level) / (100 + s.enemy_level + 100 + s.char_level),\r\n  enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res),\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (s) => (1 + s.overloaded_dmg_bonus / 100) * s.ele_mas_multi_y * s.overloaded_multi * s.pyro_enemy_ele_res_multi,\r\n  overloaded_multi: (s) => ReactionMatrix.overloaded.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  electrocharged_dmg: (s) => (1 + s.electrocharged_dmg_bonus / 100) * s.ele_mas_multi_y * s.electrocharged_multi * s.electro_enemy_ele_res_multi,\r\n  electrocharged_multi: (s) => ReactionMatrix.electrocharged.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  superconduct_dmg: (s) => (1 + s.superconduct_dmg_bonus / 100) * s.ele_mas_multi_y * s.superconduct_multi * s.cryo_enemy_ele_res_multi,\r\n  superconduct_multi: (s) => ReactionMatrix.superconduct.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  // burning_dmg: (s) => \"NO_FORMULA\",//(1 + s.burning_dmg_bonus / 100)\r\n  swirl_dmg: (s) => (1 + s.swirl_dmg_bonus / 100) * s.ele_mas_multi_y * s.swirl_multi * s.anemo_enemy_ele_res_multi,\r\n  swirl_multi: (s) => ReactionMatrix.swirl.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  shatter_dmg: (s) => (1 + s.shatter_dmg_bonus / 100) * s.ele_mas_multi_y * s.shatter_multi * s.enemy_phy_res_multi,\r\n  shatter_multi: (s) => ReactionMatrix.shattered.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n  crystalize_dmg: (s) => (1 + s.crystalize_dmg_bonus / 100) * s.ele_mas_multi_z * s.crystalize_multi,\r\n  crystalize_multi: (s) => ReactionMatrix.crystalize.reduce((accu, val, i) => accu + val * Math.pow(s.char_level, i), 0),\r\n\r\n  pyro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * s.ele_mas_multi_x * 1.5 * s.trans_reaction_base_multi,\r\n  hydro_vaporize_multi: (s) => (1 + s.vaporize_dmg_bonus / 100) * s.ele_mas_multi_x * 2 * s.trans_reaction_base_multi,\r\n\r\n  pyro_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * s.ele_mas_multi_x * 2 * s.trans_reaction_base_multi,\r\n  cryo_melt_multi: (s) => (1 + s.melt_dmg_bonus / 100) * s.ele_mas_multi_x * 1.5 * s.trans_reaction_base_multi,\r\n  trans_reaction_base_multi: (s) => ampliBase(s.ele_mas),\r\n\r\n  ele_mas_multi_x: (s) => (1 + (25 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_y: (s) => (1 + (60 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n  ele_mas_multi_z: (s) => (1 + (40 / 9 * s.ele_mas / (1401 + s.ele_mas))),\r\n}\r\n\r\n//The formulas here will generate formulas for every element, for example pyro_skill_avg_dmg from skill_avg_dmg\r\nconst eleFormulas = {\r\n  norm_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_norm_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  norm_atk_crit_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.crit_dmg_multi,\r\n  norm_atk_avg_dmg: (s, ele) => s[`${ele}_norm_atk_dmg`] * s.norm_atk_crit_multi,\r\n  norm_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.norm_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  char_atk_dmg: (s, ele) => s.atk_final * s[`${ele}_char_atk_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  char_atk_crit_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.crit_dmg_multi,\r\n  char_atk_avg_dmg: (s, ele) => s[`${ele}_char_atk_dmg`] * s.char_atk_crit_multi,\r\n  char_atk_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.char_atk_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  plunge_dmg: (s, ele) => s[`${ele}_ele_dmg`],\r\n  plunge_crit_dmg: (s, ele) => s[`${ele}_ele_crit_dmg`],\r\n  plunge_avg_dmg: (s, ele) => s[`${ele}_ele_avg_dmg`],\r\n  plunge_bonus_multi: (s, ele) => s[`${ele}_ele_bonus_multi`],\r\n\r\n  ele_dmg: (s, ele) => s.atk_final * s[`${ele}_ele_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  ele_crit_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_dmg_multi,\r\n  ele_avg_dmg: (s, ele) => s[`${ele}_ele_dmg`] * s.crit_multi,\r\n  ele_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.all_dmg_bonus) / 100),\r\n\r\n  skill_dmg: (s, ele) => s.atk_final * s[`${ele}_skill_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  skill_crit_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.crit_dmg_multi,\r\n  skill_avg_dmg: (s, ele) => s[`${ele}_skill_dmg`] * s.skill_crit_multi,\r\n  skill_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.skill_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  burst_dmg: (s, ele) => s.atk_final * s[`${ele}_burst_bonus_multi`] * s.enemy_level_multi * s[`${ele}_enemy_ele_res_multi`],\r\n  burst_crit_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.crit_dmg_multi,\r\n  burst_avg_dmg: (s, ele) => s[`${ele}_burst_dmg`] * s.burst_crit_multi,\r\n  burst_bonus_multi: (s, ele) => (1 + (s[`${ele}_ele_dmg_bonus`] + s.burst_dmg_bonus + s.all_dmg_bonus) / 100),\r\n\r\n  enemy_ele_res_multi: (s, ele) => s[`${ele}_enemy_ele_immunity`] ? 0 : resMultiplier(s[`${ele}_enemy_ele_res`]),\r\n};\r\n//nontransformation reactions  \r\n[[\"overloaded\", \"Overloaded\"], [\"electrocharged\", \"Electro-Charged\"], [\"superconduct\", \"Superconduct\"], [\"burning\", \"Burning\"], [\"swirl\", \"Swirl\"], [\"shatter\", \"Shattered\"], [\"crystalize\", \"Crystalize\"]].forEach(([reactionKey, reactionName]) =>\r\n  [[\"dmg\", \"DMG\"], [\"dmg_bonus\", \"DMG Bonus\", { unit: \"%\" }], [\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant: reactionKey,\r\n      ...props\r\n    };\r\n  }));\r\n\r\n//add variant to physical related stats.\r\n[\r\n  \"phy_dmg_bonus\", \"phy_res\", \"enemy_phy_res\", \"enemy_phy_immunity\", \"phy_dmg\", \"phy_crit_dmg\", \"phy_avg_dmg\", \"phy_bonus_multi\",\r\n  ...Object.keys(StatData).filter(key => [\"norm_atk\", \"char_atk\", \"plunge\"].some(str => key.includes(str))),\r\n].forEach(key => {\r\n  StatData[key].variant = \"physical\"\r\n});\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"Vaporize(Pyro)\", \"vaporize\", \"pyro\"], [\"hydro_vaporize\", \"Vaporize(Hydro)\", \"vaporize\", \"hydro\"], [\"pyro_melt\", \"Melt(Pyro)\", \"melt\", \"pyro\"], [\"cryo_melt\", \"Melt(Cryo)\", \"melt\", \"cryo\"]].forEach(([reactionKey, reactionName, variant, baseEle]) => {\r\n  [[\"multi\", \"Multiplier\", { unit: \"multi\" }]].forEach(([dmgKey, dmgName, props = {}]) => {\r\n    StatData[`${reactionKey}_${dmgKey}`] = {\r\n      name: `${reactionName} ${dmgName}`,\r\n      variant,\r\n      ...props\r\n    };\r\n  });\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [[\"dmg\", \"DMG\"], [\"avg_dmg\", \"Avg. DMG\"], [\"crit_dmg\", \"CRIT Hit DMG\"]].forEach(([dmgMode, dmgModeName]) => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      StatData[reactionDMGKey] = { name: `${reactionName} ${atkTypeName} ${dmgModeName}`, variant }\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      Formulas[reactionDMGKey] = (s) => s[`${reactionKey}_multi`] * s[baseDmg]\r\n    }));\r\n});\r\n\r\n//add Elemental entries to stats. we use the keys from eleFormulas before it gets expanded to elementals\r\n[\"ele_dmg_bonus\", \"ele_res\", \"enemy_ele_res\", \"enemy_ele_immunity\", ...Object.keys(eleFormulas)].forEach(key => {\r\n  let obj = StatData[key]\r\n  Object.keys(ElementalData).forEach(eleKey => {\r\n    let ele_key = `${eleKey}_${key}`\r\n    StatData[ele_key] = deepClone(obj)\r\n    if (key === \"enemy_ele_res\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES`\r\n    else if (key === \"enemy_ele_res_multi\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} RES Multiplier`\r\n    else if (key === \"enemy_ele_immunity\")\r\n      StatData[ele_key].name = `Enemy ${ElementalData[eleKey].name} Immunity`\r\n    else\r\n      StatData[ele_key].name = `${ElementalData[eleKey].name} ${obj.name}`\r\n    StatData[ele_key].variant = eleKey\r\n  })\r\n  // delete StatData[key]\r\n})\r\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\r\n\r\n//expand the eleFormulas to elementals\r\nObject.entries(eleFormulas).forEach(([key, func]) =>\r\n  Object.keys(ElementalData).forEach(eleKey =>\r\n    Object.defineProperty(Formulas, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulas = {\r\n  noelle_burst_atk: {\r\n    key: \"atk_final\",\r\n    formula: (options) => (s) => (s.atk_base + s.atk_weapon) * (1 + s.atk_ / 100) + s.atk + s.def_final * (options.value / 100),\r\n    dependency: [\"atk_base\", \"atk_weapon\", \"atk_\", \"atk\", \"def_final\", \"def_base\", \"def_\", \"def\"],\r\n  }\r\n}\r\n\r\n//the keyfilters are used by build generator to reduce the amount of calculations required\r\nfunction AttachLazyFormulas(obj, options = {}) {\r\n  let { formulaKeys = Object.keys(Formulas), statKeys = Object.keys(StatData) } = options;\r\n  let { formulaOverrides = [] } = obj;\r\n  formulaOverrides.forEach(formulaOverride => {\r\n    let { key: overrideFormulaKey, options } = formulaOverride\r\n    let { key, formula } = OverrideFormulas[overrideFormulaKey] || {}\r\n    if (!formulaKeys.includes(key)) return\r\n    formula = formula(options)\r\n    Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => formula(obj) : function () {\r\n        let val = formula(obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n\r\n  formulaKeys.forEach(key => {\r\n    !obj.hasOwnProperty(key) && Object.defineProperty(obj, key, {\r\n      get: options.formulaKeys ? () => Formulas[key](obj) : function () {\r\n        let val = Formulas[key](obj)\r\n        Object.defineProperty(this, key, { value: val })\r\n        return val\r\n      },\r\n      configurable: true\r\n    })\r\n  })\r\n  //assign zeros or default values to the other stats that are not part of the calculations\r\n  statKeys.forEach(key => !obj.hasOwnProperty(key) && (obj[key] = StatData[key].default || 0))\r\n}\r\n\r\nexport {\r\n  Formulas,\r\n  OverrideFormulas,\r\n  StatData,\r\n  ElementToReactionKeys,\r\n  ReactionMatrix,\r\n  AttachLazyFormulas,\r\n}","import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = (props) => <span className={props.colored ? \"text-5star\" : \"\"}>\r\n  {props.stars ? [...Array(props.stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n"],"sourceRoot":""}