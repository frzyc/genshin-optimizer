{"version":3,"sources":["StatData.js","Weapon/Weapon.js","Components/StarDisplay.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Data/WeaponData.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-bootstrap/esm/Badge.js","StatConstants.js","StatDependency.js","Data/CharacterData.js","Components/StatIcon.js","dbV2KeyMap.js","DatabaseUtil.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ToggleButton.js","../node_modules/react-bootstrap/esm/ToggleButtonGroup.js","Character/CharacterCard.js","Character/CharacterDisplay.js","Util/Util.js","Stat.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Character/Character.js","Character/CharacterDatabase.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Util/ConditionalsUtil.js","Artifact/ArtifactDatabase.js","Data/ElementalData.js"],"names":["StatData","flat","name","default","characterHP","pretty","const","characterDEF","characterATK","characterEle","characterLevel","weaponATK","baseATK","hp","hp_","unit","atk","atk_","def","def_","dmg_","finalHP","finalATK","finalDEF","critHit_base_multi","eleMas","enerRech_","critRate_","critDMG_","weakspotDMG_","heal_","incHeal_","powShield_","cdRed_","skillCDRed_","burstCDRed_","moveSPD_","atkSPD_","stamina","staminaDec_","staminaGlidingDec_","staminaChargedDec_","heal_multi","transformative_level_multi","amplificative_dmg_","transformative_dmg_","crystalize_eleMas_","variant","crystalize_multi","crystalize_dmg_","crystalize_hit","burning_dmg_","enemyLevel","enemyLevel_multi","enemyDEFRed_","Formulas","s","c","transformativeReactionLevelMultipliers","crystalizeLevelMultipliers","ElementToReactionKeys","physical","anemo","geo","electro","hydro","pyro","cryo","dendro","PreprocessFormulas","dependencyKeys","stats","debug","modifiers","initialStats","constData","formulaList","map","key","tmp","modifier","constModifier","Object","entries","filter","k","dynamicModifier","constFunc","reduce","accu","m","dynamicFunc","funcIndicator","length","func","console","log","error","formula","forEach","assign","hitMoves","move","moveName","clamp","hitElements","ele","eleName","opt","res","hitTypes","type","typeName","transformativeReactions","reaction","multi","variants","amplifyingReactions","baseMulti","Weapon","this","Error","getWeaponDataImport","WeaponDataImport","getLevelName","levelKey","defVal","LevelNameData","getLevelIndex","WeaponLevelKeys","indexOf","getWeaponName","weaponKey","WeaponData","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","refineIndex","charFinalStats","character","passiveDescription","getWeaponDescription","description","getWeaponConditional","conditional","getWeaponImg","img","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","getWeaponSubStatKey","subStatKey","getWeaponBonusStat","getWeaponsOfType","weaponType","fromEntries","getWeaponTypeName","WeaponTypeData","getWeaponTypeKeys","keys","getWeaponMainStatValWithOverride","weaponObj","overrideMainVal","getWeaponSubStatValWithOverride","overrideSubVal","getWeaponConditionalStat","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","objMultiplication","StarIcon","icon","faStar","Stars","stars","colored","className","Array","_","i","Assets","elements","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","then","imp","_objectWithoutProperties","source","excluded","target","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","Badge","React","forwardRef","_ref","ref","bsPrefix","pill","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","hit","avgHit","critHit","normal","charged","plunging","elemental","skill","burst","ElementalData","overloaded","shattered","electrocharged","superconduct","swirl","vaporize","melt","GetFormulaDependency","dependency","Set","Proxy","get","prop","receiver","add","formulaKeyDependency","freeze","GetDependencies","dependencies","InsertDependencies","has","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","CharacterSpecializedStatKey","StatIcon","faTint","faFistRaised","faShieldAlt","faMagic","faDice","faDiceD20","faSync","faFirstAid","StatIconEle","statKey","changes","char_ele_key","char_level","hp_base","hp_final","atk_character_base","atk_base","atk_final","atk_weapon","def_base","def_final","phy_dmg_bonus","phy_res","anemo_ele_dmg_bonus","geo_ele_dmg_bonus","electro_ele_dmg_bonus","hydro_ele_dmg_bonus","pyro_ele_dmg_bonus","cryo_ele_dmg_bonus","anemo_ele_res","geo_ele_res","electro_ele_res","hydro_ele_res","pyro_ele_res","cryo_ele_res","ener_rech","crit_rate","crit_dmg","stam","heal_bonu","inc_heal","pow_shield","red_cd","skill_cd_red","burst_cd_red","all_dmg_bonus","move_spd","atk_spd","weakspot_dmg","stamina_dec","stamina_gliding_dec","stamina_charged_dec","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","norm_atk_dmg","char_atk_dmg","plunge_dmg","norm_atk_crit_dmg","char_atk_crit_dmg","plunge_crit_dmg","norm_atk_avg_dmg","char_atk_avg_dmg","plunge_avg_dmg","norm_atk_dmg_bonus","char_atk_dmg_bonus","plunge_atk_dmg_bonus","skill_dmg_bonus","burst_dmg_bonus","norm_atk_crit_rate","char_atk_crit_rate","skill_crit_rate","burst_crit_rate","anemo_skill_dmg","anemo_burst_dmg","anemo_skill_crit_dmg","anemo_burst_crit_dmg","anemo_skill_avg_dmg","anemo_burst_avg_dmg","geo_skill_dmg","geo_burst_dmg","geo_skill_crit_dmg","geo_burst_crit_dmg","geo_skill_avg_dmg","geo_burst_avg_dmg","electro_skill_dmg","electro_burst_dmg","electro_skill_crit_dmg","electro_burst_crit_dmg","electro_skill_avg_dmg","electro_burst_avg_dmg","hydro_skill_dmg","hydro_burst_dmg","hydro_skill_crit_dmg","hydro_burst_crit_dmg","hydro_skill_avg_dmg","hydro_burst_avg_dmg","pyro_skill_dmg","pyro_burst_dmg","pyro_skill_crit_dmg","pyro_burst_crit_dmg","pyro_skill_avg_dmg","pyro_burst_avg_dmg","cryo_skill_dmg","cryo_burst_dmg","cryo_skill_crit_dmg","cryo_burst_crit_dmg","cryo_skill_avg_dmg","cryo_burst_avg_dmg","phy_dmg","phy_crit_dmg","phy_avg_dmg","anemo_ele_dmg","anemo_ele_crit_dmg","anemo_ele_avg_dmg","geo_ele_dmg","geo_ele_crit_dmg","geo_ele_avg_dmg","electro_ele_dmg","electro_ele_crit_dmg","electro_ele_avg_dmg","hydro_ele_dmg","hydro_ele_crit_dmg","hydro_ele_avg_dmg","pyro_ele_dmg","pyro_ele_crit_dmg","pyro_ele_avg_dmg","cryo_ele_dmg","cryo_ele_crit_dmg","cryo_ele_avg_dmg","overload_dmg","overload_dmg_bonus","overload_multi","electrocharged_dmg","electrocharged_dmg_bonus","electrocharged_multi","superconduct_dmg","superconduct_dmg_bonus","superconduct_multi","burning_dmg","burning_dmg_bonus","swirl_dmg","swirl_dmg_bonus","swirl_multi","shatter_dmg","shatter_dmg_bonus","shatter_multi","crystalize_dmg","crystalize_dmg_bonus","melt_dmg_bonus","vaporize_dmg_bonus","pyro_vaporize_normal_dmg","pyro_vaporize_normal_crit_dmg","pyro_vaporize_normal_avg_dmg","pyro_vaporize_chraged_dmg","pyro_vaporize_chraged_crit_dmg","pyro_vaporize_chraged_avg_dmg","pyro_vaporize_plunge_dmg","pyro_vaporize_plunge_crit_dmg","pyro_vaporize_plunge_avg_dmg","pyro_vaporize_skill_dmg","pyro_vaporize_skill_crit_dmg","pyro_vaporize_skill_avg_dmg","pyro_vaporize_burst_dmg","pyro_vaporize_burst_crit_dmg","pyro_vaporize_burst_avg_dmg","pyro_vaporize_ele_dmg","pyro_vaporize_ele_crit_dmg","pyro_vaporize_ele_avg_dmg","hydro_vaporize_normal_dmg","hydro_vaporize_normal_crit_dmg","hydro_vaporize_normal_avg_dmg","hydro_vaporize_chraged_dmg","hydro_vaporize_chraged_crit_dmg","hydro_vaporize_chraged_avg_dmg","hydro_vaporize_plunge_dmg","hydro_vaporize_plunge_crit_dmg","hydro_vaporize_plunge_avg_dmg","hydro_vaporize_skill_dmg","hydro_vaporize_skill_crit_dmg","hydro_vaporize_skill_avg_dmg","hydro_vaporize_burst_dmg","hydro_vaporize_burst_crit_dmg","hydro_vaporize_burst_avg_dmg","hydro_vaporize_ele_dmg","hydro_vaporize_ele_crit_dmg","hydro_vaporize_ele_avg_dmg","pyro_melt_normal_dmg","pyro_melt_normal_crit_dmg","pyro_melt_normal_avg_dmg","pyro_melt_chraged_dmg","pyro_melt_chraged_crit_dmg","pyro_melt_chraged_avg_dmg","pyro_melt_plunge_dmg","pyro_melt_plunge_crit_dmg","pyro_melt_plunge_avg_dmg","pyro_melt_skill_dmg","pyro_melt_skill_crit_dmg","pyro_melt_skill_avg_dmg","pyro_melt_burst_dmg","pyro_melt_burst_crit_dmg","pyro_melt_burst_avg_dmg","pyro_melt_ele_dmg","pyro_melt_ele_crit_dmg","pyro_melt_ele_avg_dmg","cryo_melt_normal_dmg","cryo_melt_normal_crit_dmg","cryo_melt_normal_avg_dmg","cryo_melt_chraged_dmg","cryo_melt_chraged_crit_dmg","cryo_melt_chraged_avg_dmg","cryo_melt_plunge_dmg","cryo_melt_plunge_crit_dmg","cryo_melt_plunge_avg_dmg","cryo_melt_skill_dmg","cryo_melt_skill_crit_dmg","cryo_melt_skill_avg_dmg","cryo_melt_burst_dmg","cryo_melt_burst_crit_dmg","cryo_melt_burst_avg_dmg","cryo_melt_ele_dmg","cryo_melt_ele_crit_dmg","cryo_melt_ele_avg_dmg","enemy_phy_res","enemy_phy_res_multi","enemy_phy_immunity","anemo_enemy_ele_res","anemo_enemy_ele_res_multi","anemo_enemy_ele_immunity","geo_enemy_ele_res","geo_enemy_ele_res_multi","geo_enemy_ele_immunity","electro_enemy_ele_res","electro_enemy_ele_res_multi","electro_enemy_ele_immunity","hydro_enemy_ele_res","hydro_enemy_ele_res_multi","hydro_enemy_ele_immunity","pyro_enemy_ele_res","pyro_enemy_ele_res_multi","pyro_enemy_ele_immunity","cryo_enemy_ele_res","cryo_enemy_ele_res_multi","cryo_enemy_ele_immunity","ele_mas","amp_reaction_base_multi","enemy_level_multi","enemy_level","dmgModeToHitMode","avg_dmg","dmg","DatabaseInitAndVerify","dbVersion","getDatabaseVersion","localStorage","startsWith","loadFromLocalStorage","characterKey","equippedArtifacts","dbKey","getItem","id","dmgMode","rest","isArray","buildSetting","mainStat","stat","v2change","statFilters","value","hitMode","saveToLocalStorage","values","artid","art","location","removeItem","ArtifactDisplayState","filterMainStatKey","filterSubstats","charDBJustPopualted","CharacterDatabase","populateDatebaseFromLocalStorage","artDBJustPopualted","ArtifactDatabase","getArtifactDatabase","valid","artInSlotId","getArtifactIDFromSlot","slotKey","equipArtifact","Artifact","substatsValidation","numStars","parseInt","keyMapping","setKey","mainStatKey","endsWith","replace","substats","obj","updateArtifact","chars","getCharacterDatabase","equippedArt","moveToNewLocation","artifactConditionals","cond","srcKey","srcKey2","updateCharacter","setDatabaseVersion","version","children","index","Children","child","isValidElement","noop","ToggleButton","checked","onChange","disabled","inputRef","_useState","useState","focused","setFocused","handleFocus","useCallback","e","tagName","handleBlur","Button","undefined","active","autoComplete","onFocus","onBlur","ToggleButtonGroup","_useUncontrolled","useUncontrolled","controlledProps","getValues","concat","invariant","ButtonGroup","toggle","_child$props","childVal","childOnChange","cloneElement","chainFunction","inputVal","event","isActive","n","handleToggle","vertical","CharacterCard","onEdit","onDelete","cardClassName","bg","header","footer","useReducer","x","forceUpdate","useEffect","Promise","all","Character","getCharacterDataImport","getDataImport","build","calculateBuild","setToSlots","weapon","constellation","getName","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","weaponName","weaponMainVal","weaponSubKey","weaponSubVal","weaponLevelName","weaponPassiveName","text","Header","xs","size","onClick","faEdit","faTrashAlt","Body","src","getThumb","getStar","thumbnail","getStatValueWithOverride","Stat","getStatName","getStatUnit","getSetEffects","arr","artifactSetName","getSetName","highestNum","Math","max","statVal","finalStats","toFixed","fixedUnit","Footer","Link","to","pathname","CharacterDisplayCardPromise","CharacterDisplayCard","lazy","sortingFunc","ck","getLevel","CharacterDisplay","deleteCharacter","remove","editCharacter","setState","charIdToEdit","showEditor","scrollRef","current","scrollIntoView","behavior","cancelEditCharacter","state","sortBy","elementalFilter","getElementalKeysWithoutPhysical","weaponFilter","saved","ReactGA","pageview","createRef","charKeyList","getCharacterKeyList","cKey","includes","sort","a","b","diff","Suspense","fallback","editable","setCharacterKey","onClose","defaultValue","v","eleKey","lg","md","faPlus","charKey","getRandomElementFromArray","array","floor","random","getRandomIntInclusive","min","ceil","data","JSON","parse","setItem","stringify","deepClone","closeEnoughFloat","abs","closeEnoughInt","val","low","high","getArrLastElement","clampPercent","strPadLeft","string","pad","join","slice","hammingDistance","str1","str2","dist","toLowerCase","j","match","htmlStatsData","getStatNamePretty","getStatNameRaw","getStatNameWithPercent","getStatVariant","printStat","f","expand","getPrintableFormulaStatKeyList","statList","FormulaText","printFormula","modifierText","mkey","multiplier","options","statName","statUnit","o","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","talentKey","formulaDB","getCDataObj","formulaKey","tk","find","getBaseStatValue","getSpecializedStatKey","getSpeicalizedStatVal","characterObj","baseStat","getIndexFromlevelkey","getElementalName","elementalKey","getAllCharacterKeys","star","getElementalKeys","getConstellationName","constellationName","getTitles","titles","getlevelKeys","getlevelNames","getAscension","getSpecializedStat","specializeStat","thumbImg","getCard","cardImg","getTalentImg","getTalent","getConstellationImg","constIndex","talent","getTalentName","getTalentLevelBoost","talents","talentBoost","boostEntry","getTalentDocument","document","getTalentDocumentSections","ascension","section","getTalentField","sectionIndex","fieldIndex","field","fields","getTalentFieldValue","talentLevelKeys","getTalentStats","getTalentStatsAll","statsArr","push","getTalentConditional","conditionalKey","talentLvlKey","sections","tempCond","getTalentConditionalStats","getTalentConditionalFields","isAutoElemental","isAutoInfusable","auto","infusable","hasTalentPage","Boolean","getDisplayStatKeys","basicKeys","transReactions","charFormulas","genericAvgHit","reactions","hasOverride","baseStatOverrides","equipArtifacts","artifactIds","artIdsOnCharacter","artIdsNotOnCharacter","getSlotKeys","artNotOnChar","artOnChar","notCharLoc","artifacts","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","getMainStatValue","artifactsAssumeFull","substat","setNumKey","getConditionalStats","mergeStats","autoInfused","reactionMode","talentConditionals","statKeys","overrides","hasOwnProperty","specializedStatVal","specialStatKey","initiated","characterDatabase","isInvalid","char","getIdNameList","split","dchar","unequipArtifactOnSlot","equipArtifactBuild","unequipAllArtifacts","clearDatabase","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","physical_dmg_","ele_dmg_","2","ArtifactSubStatsData","ArtifactSubstatsMinMax","ArtifactSlotsData","ArtifactBase","rollArr","getSubstatRolls","rolls","efficiency","getSubstatEfficiency","getArtifactEfficiency","currentEfficiency","maximumEfficiency","errMsgs","some","currentNumOfRolls","sum","cur","leastNumRolls","getBaseSubRollNumLow","rollslen","moreRolls","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","maxPerRoll","getSubstatAllMax","artifactId","currentLocation","intendedLocation","artifactToSwapWithid","artifactToSwapWith","swapLocations","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","getPieceName","getPieceIcon","icons","getSetEffectsObj","setEffects","getArtifactSetNumStats","artifactSetEffect","artArr","setNumKeys","getSetEffectText","setEffectText","getSetEffectConditional","getSlotName","getSlotIcon","getSlotMainStatKeys","getSlotNameWithIcon","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","subStatCloseEnough","value1","value2","numberOfSubstatUnlocked","getSubstatRollData","subStatValue","rollData","isFloat","maxNumRoll","round","rollOption","reverse","roll","len","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","setEffectObj","condStats","_createForOfIteratorHelper","allowArrayLike","it","F","done","_e","err","normalCompletion","didErr","step","next","_e2","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName","selectedConditionalNum","selectedConditional","curConditional","maxStack","artifactDatabase","artIdIndex","getArtifactIdList","removeArtifactById","removeArtifact","dart","artId","artA","artB","locA","locB","swapLocationsById","artAid","artBid"],"mappings":"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","file":"static/js/10.94ec7c47.chunk.js","sourcesContent":["import { clamp } from \"./Util/Util\";\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions, transformativeReactionLevelMultipliers, crystalizeLevelMultipliers } from \"./StatConstants\"\n\nconst StatData = {\n  flat: { name: \"\", default: 1 },\n\n  // Character Stats\n  characterHP: { name: \"HP\", pretty: \"Character Base HP\", const: true },\n  characterDEF: { name: \"DEF\", pretty: \"Character Base DEF\", const: true },\n  characterATK: { name: \"ATK\", pretty: \"Character Base ATK\", const: true },\n  characterEle: { name: \"Character Element Key\", default: \"anemo\", const: true },\n  characterLevel: { name: \"Character Level\", default: 1, const: true },\n\n  // Weapon Stats\n  weaponATK: { name: \"Weapon ATK\", pretty: \"ATK Weapon\", const: true },\n\n  // Character & Weapon Stats\n  baseATK: { name: \"ATK\", pretty: \"ATK Base\", const: true }, // characterATK + weaponATK\n\n  // Weapon & Artifact Stats\n  hp: { name: \"HP\", pretty: \"Flat HP\" },//flat hp\n  hp_: { name: \"HP\", unit: \"%\", pretty: \"HP Bonus\" },\n  atk: { name: \"ATK\", pretty: \"Flat ATK\" },\n  atk_: { name: \"ATK\", unit: \"%\", pretty: \"ATK Bonus\" },\n  def: { name: \"DEF\", pretty: \"Flat DEF\" },\n  def_: { name: \"DEF\", unit: \"%\", pretty: \"DEF Bonus\" },\n  dmg_: { name: \"All DMG Bonus\", unit: \"%\" },\n\n  // Attack-related Character, Weapon & Artifact Stats\n  finalHP: { name: \"HP\", pretty: \"HP\" },\n  finalATK: { name: \"ATK\", pretty: \"ATK\" },\n  finalDEF: { name: \"DEF\", pretty: \"DEF\" },\n\n  critHit_base_multi: { name: `Crit Multiplier`, unit: \"multi\" },\n\n  eleMas: { name: \"Elemental Mastery\", },\n  enerRech_: { name: \"Energy Recharge\", unit: \"%\", default: 100 },\n  critRate_: { name: \"CRIT Rate\", unit: \"%\", default: 5 },\n\n  critDMG_: { name: \"CRIT DMG\", unit: \"%\", default: 50 },\n  weakspotDMG_: { name: \"Weakspot DMG\", unit: \"%\" },\n\n  // Misc. Stats\n  heal_: { name: \"Healing Bonus\", unit: \"%\" },\n  incHeal_: { name: \"Incoming Healing Bonus\", unit: \"%\" },\n  powShield_: { name: \"Shield Strength\", unit: \"%\" },\n  cdRed_: { name: \"CD Red.\", unit: \"%\" },\n  skillCDRed_: { name: \"Ele. Skill CD Red.\", unit: \"%\" },\n  burstCDRed_: { name: \"Ele. Burst CD Red.\", unit: \"%\" },\n  moveSPD_: { name: \"Movement SPD\", unit: \"%\" },\n  atkSPD_: { name: \"ATK SPD\", unit: \"%\" },\n  stamina: { name: \"Stamina\" },\n  staminaDec_: { name: \"Stamina Consumption Dec.\", unit: \"%\" },\n  staminaGlidingDec_: { name: \"Gliding Stamina Consumption Dec.\", unit: \"%\" },\n  staminaChargedDec_: { name: \"Charged Attack Stamina Consumption Dec.\", unit: \"%\" },\n\n  heal_multi: { name: \"Heal multiplier\", unit: \"multi\" },\n\n  // Reaction\n  transformative_level_multi: { name: \"Reaction Level Multiplier\", unit: \"multi\", const: true },\n  amplificative_dmg_: { name: \"Amplificative Reaction DMG Bonus\", unit: \"%\" },\n  transformative_dmg_: { name: \"Transformative Reaction DMG Bonus\", unit: \"%\" },\n  crystalize_eleMas_: { name: \"Crystalize Bonus (Elemental Mastery)\", unit: \"%\", variant: \"crystalize\" },\n  crystalize_multi: { name: \"Crystalize Multiplier\", unit: \"multi\", const: true, variant: \"crystalize\" },\n  crystalize_dmg_: { name: \"Crystalize Bonus\", unit: \"%\", variant: \"crystalize\" },\n  crystalize_hit: { name: \"Crystalize Shield HP\", variant: \"crystalize\" },\n  burning_dmg_: { name: \"Burning DMG Bonus\", variant: \"burning\" },\n\n  // Enemy\n  enemyLevel: { name: \"Enemy Level\", const: true },\n  enemyLevel_multi: { name: \"Enemy Level RES Multiplier\", unit: \"multi\", const: true },\n  enemyDEFRed_: { name: \"Enemy DEF Reduction\", unit: \"%\", const: true }\n}\nconst Formulas = {\n  // Basic Stats\n  baseATK: (s, c) => c.characterATK + c.weaponATK,\n  finalATK: (s, c) => c.baseATK * (1 + s.atk_ / 100) + s.atk,\n  finalHP: (s, c) => c.characterHP * (1 + s.hp_ / 100) + s.hp,\n  finalDEF: (s, c) => c.characterDEF * (1 + s.def_ / 100) + s.def,\n\n  critHit_base_multi: (s) => (1 + s.critDMG_ / 100),\n\n  enemyLevel_multi: (s, c) => (100 + c.characterLevel) / ((100 + c.characterLevel) + (100 + c.enemyLevel) * (1 - c.enemyDEFRed_ / 100)),\n\n  heal_multi: (s) => (1 + s.heal_ / 100 + s.incHeal_ / 100),\n\n  // Reactions\n  transformative_level_multi: (s, c) => transformativeReactionLevelMultipliers[c.characterLevel],\n  amplificative_dmg_: (s) => 2500 / 9 * s.eleMas / (1400 + s.eleMas),\n  transformative_dmg_: (s) => 6000 / 9 * s.eleMas / (1400 + s.eleMas),\n\n  crystalize_eleMas_: (s) => 4000 / 9 * s.eleMas / (1400 + s.eleMas),\n  crystalize_multi: (s, c) => crystalizeLevelMultipliers[c.characterLevel],\n  crystalize_hit: (s, c) => (100 + s.crystalize_dmg_ + s.crystalize_eleMas_) / 100 * c.crystalize_multi,\n}\n\nconst ElementToReactionKeys = {\n  physical: [],\n  anemo: [\"electro_swirl_hit\", \"pyro_swirl_hit\", \"cryo_swirl_hit\", \"hydro_swirl_hit\"],\n  geo: [\"crystalize_hit\", \"shattered_hit\"],\n  electro: [\"overloaded_hit\", \"electrocharged_hit\", \"superconduct_hit\"],\n  hydro: [\"electrocharged_hit\", \"shattered_hit\"],//\"hydro_vaporize_multi\",\n  pyro: [\"overloaded_hit\"],// \"burning_hit\",\"pyro_vaporize_multi\", \"pyro_melt_multi\", \n  cryo: [\"shattered_hit\", \"superconduct_hit\"],//\"cryo_melt_multi\", \n  dendro: []\n}\nfunction resMultiplier(res) {\n  res = res / 100\n  if (res < 0) return 1 - res / 2\n  else if (res >= 0.75) return 1 / (res * 4 + 1)\n  return 1 - res\n}\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  StatData[`${move}_dmg_`] = { name: `${moveName} DMG Bonus`, unit: \"%\" }\n  StatData[`${move}_critRate_`] = { name: `${moveName} CRIT Rate Bonus`, unit: \"%\" }\n  StatData[`final_${move}_critRate_`] = { name: `${moveName} CRIT Rate`, unit: \"%\" }\n\n  Formulas[`final_${move}_critRate_`] = (s) => clamp(s.critRate_ + s[`${move}_critRate_`], 0, 100)\n})\n\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n  const opt = { variant: ele }\n  // DONT CHANGE. needed for screenshot parsing\n  StatData[`${ele}_dmg_`] = { name: `${eleName} DMG Bonus`, unit: \"%\", ...opt }\n  StatData[`${ele}_res_`] = { name: `${eleName} DMG RES`, unit: \"%\", ...opt }\n\n  StatData[`${ele}_enemyRes_`] = { name: `Enemy ${eleName} DMG RES`, unit: \"%\", default: 10, const: true, ...opt }\n  StatData[`${ele}_enemyImmunity`] = { name: `Enemy ${eleName} Immunity`, default: false, const: true, ...opt }\n\n  StatData[`${ele}_enemyRes_multi`] = { name: `Enemy ${eleName} RES Multiplier`, unit: \"multi\", const: true, ...opt }\n  StatData[`${ele}_bonus_multi`] = { name: `${eleName} Attack Bonus DMG Multiplier`, unit: \"multi\", ...opt }\n\n  Formulas[`${ele}_enemyRes_multi`] = (s, c) => c[`${ele}_enemyImmunity`] ? 0 : resMultiplier(c[`${ele}_enemyRes_`])\n})\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  StatData[`${move}_avgHit_base_multi`] = { name: `${moveName} Avg. Multiplier`, unit: \"multi\" }\n  Formulas[`${move}_avgHit_base_multi`] = (s) => (1 + s.critDMG_ * s[`final_${move}_critRate_`] / 10000)\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n    const opt = { variant: ele }\n    StatData[`${ele}_${move}_hit_base_multi`] = { name: `${moveName} Base Multiplier`, unit: \"multi\", ...opt }\n    Formulas[`${ele}_${move}_hit_base_multi`] = (s, c) => (100 + s.dmg_ + s[`${ele}_dmg_`] + s[`${move}_dmg_`]) / 100\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      StatData[`${ele}_${move}_${type}`] = { name: `${moveName} ${typeName}`, ...opt }\n      Formulas[`${ele}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${move}_${type}_multi`]\n      StatData[`${ele}_${move}_${type}_multi`] = { name: `${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\n    })\n\n    Formulas[`${ele}_${move}_hit_multi`] = (s, c) => s[`${ele}_${move}_hit_base_multi`] * c.enemyLevel_multi * c[`${ele}_enemyRes_multi`]\n    Formulas[`${ele}_${move}_critHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`critHit_base_multi`]\n    Formulas[`${ele}_${move}_avgHit_multi`] = (s) => s[`${ele}_${move}_hit_multi`] * s[`${move}_avgHit_base_multi`]\n  })\n})\n\nObject.entries(transformativeReactions).forEach(([reaction, { name, multi, variants }]) => {\n  const opt = { variant: reaction }\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\n  StatData[`${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", const: true, ...opt }\n  Formulas[`${reaction}_multi`] = (s, c) => multi * c.transformative_level_multi\n  if (variants.length === 1) {\n    const [ele] = variants, opt = { variant: reaction }\n    StatData[`${reaction}_hit`] = { name: `${name} DMG`, ...opt }\n    Formulas[`${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\n  } else {\n    variants.forEach(ele => {\n      const opt = { variant: ele }\n\n      StatData[`${ele}_${reaction}_hit`] = { name: `${hitElements[ele].name} ${name} DMG`, ...opt }\n      Formulas[`${ele}_${reaction}_hit`] = (s, c) => (100 + s.transformative_dmg_ + s[`${reaction}_dmg_`]) / 100 * c[`${reaction}_multi`] * c[`${ele}_enemyRes_multi`]\n    })\n  }\n})\n\nObject.entries(amplifyingReactions).forEach(([reaction, { name, variants }]) => {\n  const opt = { variant: reaction }\n  StatData[`${reaction}_dmg_`] = { name: `${name} DMG Bonus`, unit: \"%\", ...opt }\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\n    StatData[`${ele}_${reaction}_multi`] = { name: `${name} Multiplier`, unit: \"multi\", ...opt }\n    Formulas[`${ele}_${reaction}_multi`] = (s) => baseMulti * (100 + s.amplificative_dmg_ + s[`${reaction}_dmg_`]) / 100\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\n        StatData[`${ele}_${reaction}_${move}_${type}_multi`] = { name: `${name} ${moveName} ${typeName} Multiplier`, unit: \"multi\", ...opt }\n        StatData[`${ele}_${reaction}_${move}_${type}`] = { name: `${name} ${moveName} ${typeName}`, ...opt }\n\n        Formulas[`${ele}_${reaction}_${move}_${type}_multi`] = (s) => s[`${ele}_${move}_${type}_multi`] * s[`${ele}_${reaction}_multi`]\n        Formulas[`${ele}_${reaction}_${move}_${type}`] = (s) => s.finalATK * s[`${ele}_${reaction}_${move}_${type}_multi`]\n      })\n    })\n  })\n})\nif (process.env.NODE_ENV === \"development\") console.log(StatData)\n\n//assume all the dependency for the modifiers are part of the dependencyKeys as well\nfunction PreprocessFormulas(dependencyKeys, stats, debug = false) {\n  const { modifiers = {} } = stats, initialStats = {}, constData = {}\n  const formulaList = dependencyKeys.map(key => {\n    const modifier = modifiers[key] ?? {}\n    const constModifier = Object.entries(modifier).filter(([k]) => StatData[k]?.const)\n    const dynamicModifier = Object.entries(modifier).filter(([k]) => !(StatData[k]?.const))\n    const constFunc = (s, c) => constModifier.reduce((accu, [k, m]) => accu + c[k] * m, 0)\n    const dynamicFunc = (s) => dynamicModifier.reduce((accu, [k, m]) => accu + s[k] * m, 0)\n\n    let funcIndicator = 0\n    if (constModifier.length) funcIndicator += 1\n    if (dynamicModifier.length) funcIndicator += 2\n    if (!Formulas[key]) funcIndicator += StatData[key]?.const ? 4 : 8\n\n    let tmp\n    switch (funcIndicator) {\n      case 0: tmp = Formulas[key]; break\n      case 1: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c); break\n      case 2: tmp = (s, c) => Formulas[key](s, c) + dynamicFunc(s, c); break\n      case 3: tmp = (s, c) => Formulas[key](s, c) + constFunc(s, c) + dynamicFunc(s, c); break\n      case 4: tmp = (s, c) => c[key]; break\n      case 5: tmp = (s, c) => c[key] + constFunc(s, c); break\n      case 6: tmp = (s, c) => c[key] + dynamicFunc(s, c); break\n      case 7: tmp = (s, c) => c[key] + constFunc(s, c) + dynamicFunc(s, c); break\n      case 8: tmp = (s, c) => s[key]; break\n      case 9: tmp = (s, c) => s[key] + constFunc(s, c); break\n      case 10: tmp = (s, c) => s[key] + dynamicFunc(s, c); break\n      default: tmp = (s, c) => s[key] + constFunc(s, c) + dynamicFunc(s, c); break\n    }\n    const func = tmp\n\n    if (debug) console.log(StatData[key]?.const ? \"Const\" : \"Dynamic\", key, constModifier, dynamicModifier, \"\" + Formulas[key])\n\n    if (!(key in Formulas))\n      stats[key] = stats[key] ?? StatData[key]?.default ?? 0\n\n    if (StatData[key]?.const) {\n      constData[key] = stats[key]\n      constData[key] = func(stats, constData)\n      stats[key] = constData[key]\n      if (dynamicModifier.length)\n        console.error(`Constant key ${key} depends on a dynamic modifer ${dynamicModifier}. The result will be incorrect.`)\n      return null\n    }\n\n    if (!(key in Formulas))\n      initialStats[key] = stats[key]\n\n    return [key, func]\n  }).filter((func) => func)\n\n  if (debug) console.log(initialStats, constData)\n\n  return {\n    initialStats,\n    formula: s => {\n      formulaList.forEach(([key, formula]) => s[key] = formula(s, constData))\n      // TODO: we shouldn't need to copy *all* constData, only ones that are targets.\n      Object.assign(s, constData)\n    }\n  }\n}\n\nexport {\n  Formulas,\n  StatData,\n  ElementToReactionKeys,\n  PreprocessFormulas,\n}\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\nimport { objMultiplication } from '../Util/Util.js';\nexport default class Weapon {\n  //do not instantiate.\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\n\n  static getWeaponDataImport = () => WeaponDataImport\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\n\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\n\n  //base Stat\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\n  static getWeaponBonusStat = (weaponKey, refineIndex, defVal = {}) => WeaponData[weaponKey]?.stats?.(refineIndex) ?? defVal\n\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\n  static getWeaponTypeKeys = () => Object.keys(WeaponTypeData)\n\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\n\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\n    let conditional = this.getWeaponConditional(weaponKey)\n    if (!conditional || !conditionalNum) return defVal\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\n    if (!stacks) return defVal\n    stats = stats(refineIndex)\n    if (stacks !== 1) objMultiplication(stats, stacks)\n    return stats\n  }\n}","import { faStar } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\nconst Stars = ({ stars, colored = false }) => <span className={colored ? \"text-5star\" : \"\"}>\n  {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\n</span>\n\nexport {\n  StarIcon,\n  Stars\n}\n","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\nimport cryo from './Element_Cryo.png'\nimport dendro from './Element_Dendro.png'\nimport electro from './Element_Electro.png'\nimport geo from './Element_Geo.png'\nimport hydro from './Element_Hydro.png'\nimport pyro from './Element_Pyro.png'\n\nimport bow from './Weapon-class-bow-icon.png'\nimport catalyst from './Weapon-class-catalyst-icon.png'\nimport claymore from './Weapon-class-claymore-icon.png'\nimport polearm from './Weapon-class-polearm-icon.png'\nimport sword from './Weapon-class-sword-icon.png'\n\nimport fragile from './Item_Fragile_Resin.png'\nimport condensed from './Item_Condensed_Resin.png'\n\n//EXP BOOKS\nimport advice from './Item_Wanderer\\'s_Advice.png'\nimport wit from './Item_Hero\\'s_Wit.png'\nimport experience from './Item_Adventurer\\'s_Experience.png'\n\nlet Assets = {\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\n  resin: {\n    fragile,\n    condensed\n  },\n  exp_books: {\n    advice,\n    wit,\n    experience,\n  }\n};\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","let WeaponData = {}\nlet WeaponDataImport = import('./Weapons')\nWeaponDataImport.then(imp => {\n  WeaponData = imp.default\n  WeaponDataImport = null\n})\n\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\nconst WeaponTypeData = {\n  sword: \"Sword\",\n  claymore: \"Claymore\",\n  catalyst: \"Catalyst\",\n  bow: \"Bow\",\n  polearm: \"Polearm\"\n}\n\nexport {\n  WeaponData,\n  WeaponDataImport,\n  WeaponLevelKeys,\n  LevelNameData,\n  WeaponTypeData\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import ElementalData from \"./Data/ElementalData\";\n\nexport const hitTypes = { hit: \"DMG\", avgHit: \"Avg. DMG\", critHit: \"CRIT Hit DMG\" }\nexport const hitMoves = { normal: \"Normal Att.\", charged: \"Charged Att.\", plunging: \"Plunging Att.\", elemental: \"Elemental Att.\", skill: \"Ele. Skill\", burst: \"Ele. Burst\" }\nexport const hitElements = ElementalData\nexport const transformativeReactions = {\n  overloaded: { name: \"Overloaded\", multi: 2, variants: [ \"pyro\" ] },\n  shattered: { name: \"Shattered\", multi: 1.5, variants: [ \"physical\" ] },\n  electrocharged: { name: \"Electro-Charged\", multi: 1.2, variants: [ \"electro\" ] },\n  superconduct: { name: \"Superconduct\", multi: 0.5, variants: [ \"cryo\" ] },\n  swirl: { name: \"Swirl\", multi: 0.6, variants: [ \"pyro\", \"hydro\", \"electro\", \"cryo\" ] },\n}\nexport const amplifyingReactions = {\n  vaporize: { name: \"Vaporize\", variants: { pyro: 1.5, hydro: 2 } },\n  melt: { name: \"Melt\", variants: { pyro: 2, cryo: 1.5 } },\n}\nexport const otherReactions = {\n  burning: \"Burning\",\n  crystalize: \"Crystalize\",\n}\nexport const transformativeReactionLevelMultipliers = [ 0,\n  17.2,  18.5,  19.9,  21.3,  22.6,  24.6,  26.6,  28.9,  31.4,  34.1,\n  37.2,  40.7,  44.4,  48.6,  53.7,  59.1,  64.4,  69.7,  75.1,  80.6,\n  86.1,  91.7,  97.2, 102.8, 108.4, 113.2, 118.1, 123.0, 129.7, 136.3,\n 142.7, 149.0, 155.4, 161.8, 169.1, 176.5, 184.1, 191.7, 199.6, 207.4,\n 215.4, 224.2, 233.5, 243.4, 256.1, 268.5, 281.5, 295.0, 309.1, 323.6,\n 336.8, 350.5, 364.5, 378.6, 398.6, 416.4, 434.4, 452.6, 471.4, 490.5,\n 509.5, 532.8, 556.4, 580.1, 607.9, 630.2, 652.9, 675.2, 697.8, 720.2,\n 742.5, 765.2, 784.4, 803.4, 830.9, 854.4, 877.8, 900.1, 923.8, 946.4,\n 968.6, 991.0,1013.5,1036.1,1066.6,1090.0,1115.0,1141.7,1171.9,1202.8,\n1202.8,1233.9,1264.7,1305.7,1346.1,1468.9,1524.0,1577.0,1627.6,1674.8,\n]\nexport const crystalizeLevelMultipliers = [ 0,\n  91,  99, 106, 114, 121, 129, 136, 144, 151, 159,\n 170, 181, 192, 204, 216, 228, 248, 268, 287, 304,\n 320, 337, 352, 368, 384, 394, 405, 416, 427, 438,\n 448, 459, 470, 481, 490, 499, 513, 529, 544, 557,\n 574, 591, 607, 622, 638, 649, 667, 684, 702, 715,\n 733, 750, 767, 784, 800, 814, 834, 855, 876, 896,\n 915, 936, 956, 982,1003,1017,1036,1057,1075,1096,\n1114,1135,1149,1170,1191,1205,1224,1243,1260,1277,\n1293,1308,1317,1327,1336,1349,1366,1384,1403,1424,\n1450,1478,1507,1543,1570,1580,1589,1673,1682,1691,\n]","import { Formulas, StatData } from \"./StatData\"\n\n//generate a statKey dependency, to reduce build generation calculation on a single stat.\nfunction GetFormulaDependency(formula) {\n  const dependency = new Set()\n  formula(\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }),\n    new Proxy({}, { get: (target, prop, receiver) => { dependency.add(prop) } }))\n  return [...dependency]\n}\nconst formulaKeyDependency = Object.freeze(Object.fromEntries(\n  Object.keys(Formulas).map(key => [key, GetFormulaDependency(Formulas[key])])\n))\n\nif (process.env.NODE_ENV === \"development\") {\n  let statKeys = Object.keys(StatData)\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\n    dependencies.forEach(key =>\n      !statKeys.includes(key) &&\n        console.error(`Formula ${formulaKey} depends key ${key} that does not Exist in StatData.`))\n  )\n  Object.entries(formulaKeyDependency).forEach(([formulaKey, dependencies]) =>\n    StatData[formulaKey]?.const && dependencies.forEach(key => \n      !StatData[key]?.const &&\n        console.error(`Constant formula ${formulaKey} depends on dynamic key ${key}.`)\n    )\n  )\n}\n\nfunction GetDependencies(modifiers = {}, keys = Object.keys(StatData)) {\n  let dependencies = new Set()\n  keys.forEach(key => InsertDependencies(key, modifiers, dependencies))\n  return [...dependencies]\n}\nfunction InsertDependencies(key, modifiers, dependencies) {\n  if (dependencies.has(key)) return\n  formulaKeyDependency[key]?.forEach(k => InsertDependencies(k, modifiers, dependencies))\n  Object.keys(modifiers[key] ?? {}).forEach(k => InsertDependencies(k, modifiers, dependencies))\n  dependencies.add(key)\n}\n\n//if the optimizationTarget is in the form of {dmg:0.6}, it can be reduced to \"dmg\" for the purpose to build generation.\nconst reduceOptimizationTarget = (optimizationTarget) =>\n  (typeof optimizationTarget === \"object\" && Object.keys(optimizationTarget).length === 1 && typeof optimizationTarget[Object.keys(optimizationTarget)[0]] === \"number\") ? Object.keys(optimizationTarget)[0] : optimizationTarget\n\n\nexport {\n  GetFormulaDependency,\n  GetDependencies,\n  reduceOptimizationTarget,\n}\n","let CharacterData = {}\nlet CharacterDataImport = import('./Characters')\nCharacterDataImport.then(imp => {\n  CharacterData = imp.default\n  CharacterDataImport = null\n})\n// import characters from \nconst LevelsData = {\n  \"L1\": {\n    name: \"Lv. 1\",\n    level: 1,\n    asend: 0\n  },\n  \"L20\": {\n    name: \"Lv. 20\",\n    level: 20,\n    asend: 0\n  },\n  \"L20A\": {\n    name: \"Lv. 20 As.1\",\n    level: 20,\n    asend: 1\n\n  },\n  \"L40\": {\n    name: \"Lv. 40\",\n    level: 40,\n    asend: 1\n  },\n  \"L40A\": {\n    name: \"Lv. 40 As.2\",\n    level: 40,\n    asend: 2\n  },\n\n  \"L50\": {\n    name: \"Lv. 50\",\n    level: 50,\n    asend: 2\n  },\n  \"L50A\": {\n    name: \"Lv. 50 As.3\",\n    level: 50,\n    asend: 3\n  },\n  \"L60\": {\n    name: \"Lv. 60\",\n    level: 60,\n    asend: 3\n  },\n  \"L60A\": {\n    name: \"Lv. 60 As.4\",\n    level: 60,\n    asend: 4\n  },\n  \"L70\": {\n    name: \"Lv. 70\",\n    level: 70,\n    asend: 4\n  },\n  \"L70A\": {\n    name: \"Lv. 70 As.5\",\n    level: 70,\n    asend: 5\n  },\n\n  \"L80\": {\n    name: \"Lv. 80\",\n    level: 80,\n    asend: 5\n  },\n  \"L80A\": {\n    name: \"Lv. 80 As.6\",\n    level: 80,\n    asend: 6\n  },\n  \"L90\": {\n    name: \"Lv. 90\",\n    level: 90,\n    asend: 6\n  }\n\n}\nconst characterStatBase = {\n  critRate_: 5,\n  critDMG_: 50,\n  enerRech_: 100,\n  stamina: 100\n}\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\"]\n\nexport {\n  LevelsData,\n  characterStatBase,\n  CharacterData,\n  CharacterDataImport,\n  CharacterSpecializedStatKey\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst StatIcon = {\n  characterHP: faTint,\n  finalHP: faTint,\n  hp_: faTint,\n  hp: faTint,\n\n  baseATK: faFistRaised,\n  characterATK: faFistRaised,\n  finalATK: faFistRaised,\n  atk_: faFistRaised,\n  atk: faFistRaised,\n\n  characterDEF: faShieldAlt,\n  finalDEF: faShieldAlt,\n  def_: faShieldAlt,\n  def: faShieldAlt,\n\n  eleMas: faMagic,\n  critRate_: faDice,\n  critDMG_: faDiceD20,\n  enerRech_: faSync,\n  heal_: faFirstAid,\n}\n\nconst StatIconEle = (statKey) =>\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\n\nexport default StatIcon\n\nexport {\n  StatIconEle\n}","//for DB v2, we changed a bunch of keys.\nconst changes = {\n  char_ele_key: \"characterEle\",\n  char_level: \"characterLevel\",\n\n  hp_base: \"characterHP\",\n  hp_final: \"finalHP\",\n  atk_character_base: \"characterATK\",\n  atk_base: \"baseATK\",\n  atk_final: \"finalATK\",\n  atk_weapon: \"weaponATK\",\n  def_base: \"characterDEF\",\n  def_final: \"finalDEF\",\n  phy_dmg_bonus: \"physical_dmg_\",\n  phy_res: \"physical_res_\",\n  anemo_ele_dmg_bonus: \"anemo_dmg_\",\n  geo_ele_dmg_bonus: \"geo_dmg_\",\n  electro_ele_dmg_bonus: \"electro_dmg_\",\n  hydro_ele_dmg_bonus: \"hydro_dmg_\",\n  pyro_ele_dmg_bonus: \"pyro_dmg_\",\n  cryo_ele_dmg_bonus: \"cryo_dmg_\",\n  anemo_ele_res: \"anemo_res_\",\n  geo_ele_res: \"geo_res_\",\n  electro_ele_res: \"electro_res_\",\n  hydro_ele_res: \"hydro_res_\",\n  pyro_ele_res: \"pyro_res_\",\n  cryo_ele_res: \"cryo_res_\",\n  ener_rech: \"enerRech_\",\n  crit_rate: \"critRate_\",\n  crit_dmg: \"critDMG_\",\n  stam: \"stamina\",\n  heal_bonu: \"heal_\",\n  inc_heal: \"incHeal_\",\n  pow_shield: \"powShield_\",\n  red_cd: \"cdRed_\",\n  skill_cd_red: \"skillCDRed_\",\n  burst_cd_red: \"burstCDRed_\",\n  all_dmg_bonus: \"dmg_\",\n  move_spd: \"moveSPD_\",\n  atk_spd: \"atkSPD_\",\n  weakspot_dmg: \"weakspotDMG_\",\n  stamina_dec: \"staminaDec_\",\n  stamina_gliding_dec: \"staminaGlidingDec_\",\n  stamina_charged_dec: \"staminaChargedDec_\",\n  ele_mas_multi_x: \"eleMasX\",\n  ele_mas_multi_y: \"eleMasY\",\n  ele_mas_multi_z: \"eleMasZ\",\n\n  norm_atk_dmg: \"physical_normal_hit\",\n  char_atk_dmg: \"physical_charged_hit\",\n  plunge_dmg: \"physical_plunging_hit\",\n  norm_atk_crit_dmg: \"physical_normal_critHit\",\n  char_atk_crit_dmg: \"physical_charged_critHit\",\n  plunge_crit_dmg: \"physical_plunging_critHit\",\n  norm_atk_avg_dmg: \"physical_normal_avgHit\",\n  char_atk_avg_dmg: \"physical_charged_avgHit\",\n  plunge_avg_dmg: \"physical_plunging_avgHit\",\n  norm_atk_dmg_bonus: \"normal_dmg_\",\n  char_atk_dmg_bonus: \"charged_dmg_\",\n  plunge_atk_dmg_bonus: \"plunging_dmg_\",\n  skill_dmg_bonus: \"skill_dmg_\",\n  burst_dmg_bonus: \"burst_dmg_\",\n  norm_atk_crit_rate: \"normal_critRate_\",\n  char_atk_crit_rate: \"charged_critRate_\",\n  skill_crit_rate: \"skill_critRate_\",\n  burst_crit_rate: \"burst_critRate_\",\n\n  anemo_skill_dmg: \"anemo_skill_hit\",\n  anemo_burst_dmg: \"anemo_burst_hit\",\n  anemo_skill_crit_dmg: \"anemo_skill_critHit\",\n  anemo_burst_crit_dmg: \"anemo_burst_critHit\",\n  anemo_skill_avg_dmg: \"anemo_skill_avgHit\",\n  anemo_burst_avg_dmg: \"anemo_burst_avgHit\",\n  geo_skill_dmg: \"geo_skill_hit\",\n  geo_burst_dmg: \"geo_burst_hit\",\n  geo_skill_crit_dmg: \"geo_skill_critHit\",\n  geo_burst_crit_dmg: \"geo_burst_critHit\",\n  geo_skill_avg_dmg: \"geo_skill_avgHit\",\n  geo_burst_avg_dmg: \"geo_burst_avgHit\",\n  electro_skill_dmg: \"electro_skill_hit\",\n  electro_burst_dmg: \"electro_burst_hit\",\n  electro_skill_crit_dmg: \"electro_skill_critHit\",\n  electro_burst_crit_dmg: \"electro_burst_critHit\",\n  electro_skill_avg_dmg: \"electro_skill_avgHit\",\n  electro_burst_avg_dmg: \"electro_burst_avgHit\",\n  hydro_skill_dmg: \"hydro_skill_hit\",\n  hydro_burst_dmg: \"hydro_burst_hit\",\n  hydro_skill_crit_dmg: \"hydro_skill_critHit\",\n  hydro_burst_crit_dmg: \"hydro_burst_critHit\",\n  hydro_skill_avg_dmg: \"hydro_skill_avgHit\",\n  hydro_burst_avg_dmg: \"hydro_burst_avgHit\",\n  pyro_skill_dmg: \"pyro_skill_hit\",\n  pyro_burst_dmg: \"pyro_burst_hit\",\n  pyro_skill_crit_dmg: \"pyro_skill_critHit\",\n  pyro_burst_crit_dmg: \"pyro_burst_critHit\",\n  pyro_skill_avg_dmg: \"pyro_skill_avgHit\",\n  pyro_burst_avg_dmg: \"pyro_burst_avgHit\",\n  cryo_skill_dmg: \"cryo_skill_hit\",\n  cryo_burst_dmg: \"cryo_burst_hit\",\n  cryo_skill_crit_dmg: \"cryo_skill_critHit\",\n  cryo_burst_crit_dmg: \"cryo_burst_critHit\",\n  cryo_skill_avg_dmg: \"cryo_skill_avgHit\",\n  cryo_burst_avg_dmg: \"cryo_burst_avgHit\",\n\n  phy_dmg: \"physical_hit\",\n  phy_crit_dmg: \"physical_critHit\",\n  phy_avg_dmg: \"physical_avgHit\",\n  anemo_ele_dmg: \"anemo_hit\",\n  anemo_ele_crit_dmg: \"anemo_critHit\",\n  anemo_ele_avg_dmg: \"anemo_avgHit\",\n  geo_ele_dmg: \"geo_hit\",\n  geo_ele_crit_dmg: \"geo_critHit\",\n  geo_ele_avg_dmg: \"geo_avgHit\",\n  electro_ele_dmg: \"electro_hit\",\n  electro_ele_crit_dmg: \"electro_critHit\",\n  electro_ele_avg_dmg: \"electro_avgHit\",\n  hydro_ele_dmg: \"hydro_hit\",\n  hydro_ele_crit_dmg: \"hydro_critHit\",\n  hydro_ele_avg_dmg: \"hydro_avgHit\",\n  pyro_ele_dmg: \"pyro_hit\",\n  pyro_ele_crit_dmg: \"pyro_critHit\",\n  pyro_ele_avg_dmg: \"pyro_avgHit\",\n  cryo_ele_dmg: \"cryo_hit\",\n  cryo_ele_crit_dmg: \"cryo_critHit\",\n  cryo_ele_avg_dmg: \"cryo_avgHit\",\n\n  overload_dmg: \"overload_hit\",\n  overload_dmg_bonus: \"overload_dmg_\",\n  overload_multi: \"overload_multi\",\n  electrocharged_dmg: \"electrocharged_hit\",\n  electrocharged_dmg_bonus: \"electrocharged_dmg_\",\n  electrocharged_multi: \"electrocharged_multi\",\n  superconduct_dmg: \"superconduct_hit\",\n  superconduct_dmg_bonus: \"superconduct_dmg_\",\n  superconduct_multi: \"superconduct_multi\",\n  burning_dmg: \"burning_hit\",\n  burning_dmg_bonus: \"burning_dmg_\",\n  swirl_dmg: \"swirl_hit\",\n  swirl_dmg_bonus: \"swirl_dmg_\",\n  swirl_multi: \"swirl_multi\",\n  shatter_dmg: \"shattered_hit\",\n  shatter_dmg_bonus: \"shattered_dmg_\",\n  shatter_multi: \"shattered_multi\",\n  crystalize_dmg: \"crystalize_hit\",\n  crystalize_dmg_bonus: \"crystalize_dmg_\",\n\n  melt_dmg_bonus: \"melt_dmg_\",\n  vaporize_dmg_bonus: \"vaporize_dmg_\",\n\n  pyro_vaporize_normal_dmg: \"pyro_vaporize_normal_hit\",\n  pyro_vaporize_normal_crit_dmg: \"pyro_vaporize_normal_critHit\",\n  pyro_vaporize_normal_avg_dmg: \"pyro_vaporize_normal_avgHit\",\n  pyro_vaporize_chraged_dmg: \"pyro_vaporize_chraged_hit\",\n  pyro_vaporize_chraged_crit_dmg: \"pyro_vaporize_chraged_critHit\",\n  pyro_vaporize_chraged_avg_dmg: \"pyro_vaporize_chraged_avgHit\",\n  pyro_vaporize_plunge_dmg: \"pyro_vaporize_plunging_hit\",\n  pyro_vaporize_plunge_crit_dmg: \"pyro_vaporize_plunging_critHit\",\n  pyro_vaporize_plunge_avg_dmg: \"pyro_vaporize_plunging_avgHit\",\n  pyro_vaporize_skill_dmg: \"pyro_vaporize_skill_hit\",\n  pyro_vaporize_skill_crit_dmg: \"pyro_vaporize_skill_critHit\",\n  pyro_vaporize_skill_avg_dmg: \"pyro_vaporize_skill_avgHit\",\n  pyro_vaporize_burst_dmg: \"pyro_vaporize_burst_hit\",\n  pyro_vaporize_burst_crit_dmg: \"pyro_vaporize_burst_critHit\",\n  pyro_vaporize_burst_avg_dmg: \"pyro_vaporize_burst_avgHit\",\n  pyro_vaporize_ele_dmg: \"pyro_vaporize_hit\",\n  pyro_vaporize_ele_crit_dmg: \"pyro_vaporize_critHit\",\n  pyro_vaporize_ele_avg_dmg: \"pyro_vaporize_avgHit\",\n  hydro_vaporize_normal_dmg: \"hydro_vaporize_normal_hit\",\n  hydro_vaporize_normal_crit_dmg: \"hydro_vaporize_normal_critHit\",\n  hydro_vaporize_normal_avg_dmg: \"hydro_vaporize_normal_avgHit\",\n  hydro_vaporize_chraged_dmg: \"hydro_vaporize_chraged_hit\",\n  hydro_vaporize_chraged_crit_dmg: \"hydro_vaporize_chraged_critHit\",\n  hydro_vaporize_chraged_avg_dmg: \"hydro_vaporize_chraged_avgHit\",\n  hydro_vaporize_plunge_dmg: \"hydro_vaporize_plunging_hit\",\n  hydro_vaporize_plunge_crit_dmg: \"hydro_vaporize_plunging_critHit\",\n  hydro_vaporize_plunge_avg_dmg: \"hydro_vaporize_plunging_avgHit\",\n  hydro_vaporize_skill_dmg: \"hydro_vaporize_skill_hit\",\n  hydro_vaporize_skill_crit_dmg: \"hydro_vaporize_skill_critHit\",\n  hydro_vaporize_skill_avg_dmg: \"hydro_vaporize_skill_avgHit\",\n  hydro_vaporize_burst_dmg: \"hydro_vaporize_burst_hit\",\n  hydro_vaporize_burst_crit_dmg: \"hydro_vaporize_burst_critHit\",\n  hydro_vaporize_burst_avg_dmg: \"hydro_vaporize_burst_avgHit\",\n  hydro_vaporize_ele_dmg: \"hydro_vaporize_hit\",\n  hydro_vaporize_ele_crit_dmg: \"hydro_vaporize_critHit\",\n  hydro_vaporize_ele_avg_dmg: \"hydro_vaporize_avgHit\",\n  pyro_melt_normal_dmg: \"pyro_melt_normal_hit\",\n  pyro_melt_normal_crit_dmg: \"pyro_melt_normal_critHit\",\n  pyro_melt_normal_avg_dmg: \"pyro_melt_normal_avgHit\",\n  pyro_melt_chraged_dmg: \"pyro_melt_chraged_hit\",\n  pyro_melt_chraged_crit_dmg: \"pyro_melt_chraged_critHit\",\n  pyro_melt_chraged_avg_dmg: \"pyro_melt_chraged_avgHit\",\n  pyro_melt_plunge_dmg: \"pyro_melt_plunging_hit\",\n  pyro_melt_plunge_crit_dmg: \"pyro_melt_plunging_critHit\",\n  pyro_melt_plunge_avg_dmg: \"pyro_melt_plunging_avgHit\",\n  pyro_melt_skill_dmg: \"pyro_melt_skill_hit\",\n  pyro_melt_skill_crit_dmg: \"pyro_melt_skill_critHit\",\n  pyro_melt_skill_avg_dmg: \"pyro_melt_skill_avgHit\",\n  pyro_melt_burst_dmg: \"pyro_melt_burst_hit\",\n  pyro_melt_burst_crit_dmg: \"pyro_melt_burst_critHit\",\n  pyro_melt_burst_avg_dmg: \"pyro_melt_burst_avgHit\",\n  pyro_melt_ele_dmg: \"pyro_melt_hit\",\n  pyro_melt_ele_crit_dmg: \"pyro_melt_critHit\",\n  pyro_melt_ele_avg_dmg: \"pyro_melt_avgHit\",\n  cryo_melt_normal_dmg: \"cryo_melt_normal_hit\",\n  cryo_melt_normal_crit_dmg: \"cryo_melt_normal_critHit\",\n  cryo_melt_normal_avg_dmg: \"cryo_melt_normal_avgHit\",\n  cryo_melt_chraged_dmg: \"cryo_melt_chraged_hit\",\n  cryo_melt_chraged_crit_dmg: \"cryo_melt_chraged_critHit\",\n  cryo_melt_chraged_avg_dmg: \"cryo_melt_chraged_avgHit\",\n  cryo_melt_plunge_dmg: \"cryo_melt_plunging_hit\",\n  cryo_melt_plunge_crit_dmg: \"cryo_melt_plunging_critHit\",\n  cryo_melt_plunge_avg_dmg: \"cryo_melt_plunging_avgHit\",\n  cryo_melt_skill_dmg: \"cryo_melt_skill_hit\",\n  cryo_melt_skill_crit_dmg: \"cryo_melt_skill_critHit\",\n  cryo_melt_skill_avg_dmg: \"cryo_melt_skill_avgHit\",\n  cryo_melt_burst_dmg: \"cryo_melt_burst_hit\",\n  cryo_melt_burst_crit_dmg: \"cryo_melt_burst_critHit\",\n  cryo_melt_burst_avg_dmg: \"cryo_melt_burst_avgHit\",\n  cryo_melt_ele_dmg: \"cryo_melt_hit\",\n  cryo_melt_ele_crit_dmg: \"cryo_melt_critHit\",\n  cryo_melt_ele_avg_dmg: \"cryo_melt_avgHit\",\n\n  enemy_phy_res: \"physical_enemyRes_\",\n  enemy_phy_res_multi: \"physical_enemyRes_multi\",\n  enemy_phy_immunity: \"physical_enemyImmunity\",\n  anemo_enemy_ele_res: \"anemo_enemyRes_\",\n  anemo_enemy_ele_res_multi: \"anemo_enemyRes_multi\",\n  anemo_enemy_ele_immunity: \"anemo_enemyImmunity\",\n  geo_enemy_ele_res: \"geo_enemyRes_\",\n  geo_enemy_ele_res_multi: \"geo_enemyRes_multi\",\n  geo_enemy_ele_immunity: \"geo_enemyImmunity\",\n  electro_enemy_ele_res: \"electro_enemyRes_\",\n  electro_enemy_ele_res_multi: \"electro_enemyRes_multi\",\n  electro_enemy_ele_immunity: \"electro_enemyImmunity\",\n  hydro_enemy_ele_res: \"hydro_enemyRes_\",\n  hydro_enemy_ele_res_multi: \"hydro_enemyRes_multi\",\n  hydro_enemy_ele_immunity: \"hydro_enemyImmunity\",\n  pyro_enemy_ele_res: \"pyro_enemyRes_\",\n  pyro_enemy_ele_res_multi: \"pyro_enemyRes_multi\",\n  pyro_enemy_ele_immunity: \"pyro_enemyImmunity\",\n  cryo_enemy_ele_res: \"cryo_enemyRes_\",\n  cryo_enemy_ele_res_multi: \"cryo_enemyRes_multi\",\n  cryo_enemy_ele_immunity: \"cryo_enemyImmunity\",\n\n  ele_mas: \"eleMas\",\n  amp_reaction_base_multi: \"ampReactionBase_multi\",\n\n  enemy_level_multi: \"enemyLevel_multi\",\n  enemy_level: \"enemyLevel\"\n}\n/*\nconst same = [\n  hp, hp_, atk, atk_, def, def_, pyro_vaporize_multi, hydro_vaporize_multi, pyro_melt_multi, cryo_melt_multi,\n]\n\nconst removed = [\n  norm_atk_crit_multi, char_atk_crit_multi, norm_atk_bonus_multi, char_atk_bonus_multi, plunge_bonus_multi, skill_crit_multi, burst_crit_multi, skill_bonus_multi, burst_bonus_multi, phy_bonus_multi, anemo_ele_bonus_multi, geo_ele_bonus_multi, electro_ele_bonus_multi, hydro_ele_bonus_multi, pyro_ele_bonus_multi, cryo_ele_bonus_multi, crit_dmg_multi, crit_multi,\n]\n\nconst aded = [\n  plunging_critRate_, final_normal_critRate_, final_charged_critRate_, final_plunging_critRate_, final_skill_critRate_, final_burst_critRate_,\n]\n*/\n\n//renamed dmgMode to hitMode\nconst dmgModeToHitMode = {\n  avg_dmg: \"avgHit\",\n  dmg: \"hit\",\n  crit_dmg: \"critHit\"\n}\nexport { changes, dmgModeToHitMode }","import Artifact from \"./Artifact/Artifact\";\nimport ArtifactDatabase from \"./Artifact/ArtifactDatabase\";\nimport CharacterDatabase from \"./Character/CharacterDatabase\";\nimport { changes as v2change, dmgModeToHitMode } from \"./dbV2KeyMap\";\nimport { loadFromLocalStorage, saveToLocalStorage } from \"./Util/Util\";\n\nfunction DatabaseInitAndVerify() {\n  const dbVersion = getDatabaseVersion()\n  //edit the data before the database is populated\n  if (dbVersion < 2) {\n    //made characters unique, so need to convert character_{NUMBER} to char_{characterKey}. Will only save the 1st instance of a character.\n    Object.keys(localStorage).filter(key => key.startsWith(\"character_\")).forEach(key => {\n      const character = loadFromLocalStorage(key);\n      const { characterKey, equippedArtifacts = {} } = character\n      const dbKey = `char_${characterKey}`\n      if (localStorage.getItem(dbKey) === null) {\n        //if there is no character saved, create a new character\n        const { id, name, dmgMode, ...rest } = character\n        if (Array.isArray(rest?.buildSetting?.mainStat))\n          rest.buildSetting.mainStat = rest.buildSetting.mainStat.map(stat => stat in v2change ? v2change[stat] : stat)\n        if (typeof rest?.buildSetting?.statFilters === \"object\")\n          rest.buildSetting.statFilters = Object.fromEntries(Object.entries(rest.buildSetting.statFilters).map(([stat, value]) => [stat in v2change ? v2change[stat] : stat, value]))\n        rest.hitMode = dmgModeToHitMode[dmgMode] ?? Object.keys(dmgModeToHitMode)[0]\n        saveToLocalStorage(dbKey, rest)\n        //equip to the new character\n        Object.values(equippedArtifacts).forEach(artid => {\n          const art = loadFromLocalStorage(artid);\n          if (!art) return\n          art.location = characterKey\n          saveToLocalStorage(artid, art)\n        });\n      } else {\n        //if the character does exist, \"move\" the artifacts equipped to inventory\n        Object.values(equippedArtifacts).forEach(artid => {\n          const art = loadFromLocalStorage(artid);\n          if (!art) return\n          art.location = \"\"\n          saveToLocalStorage(artid, art)\n        });\n      }\n      //delete the old database\n      localStorage.removeItem(key)\n    })\n    //reset the ArtifactDisplay keys\n    const ArtifactDisplayState = loadFromLocalStorage(\"ArtifactDisplay.state\")\n    if (ArtifactDisplayState) {\n      if (ArtifactDisplayState.filterMainStatKey in v2change)\n        ArtifactDisplayState.filterMainStatKey = v2change[ArtifactDisplayState.filterMainStatKey]\n      ArtifactDisplayState.filterSubstats = ArtifactDisplayState.filterSubstats.map(stat => stat in v2change ? v2change[stat] : stat)\n      saveToLocalStorage(\"ArtifactDisplay.state\", ArtifactDisplayState)\n    }\n  }\n\n  //this will only run if neither of the database has been initated.\n  const charDBJustPopualted = CharacterDatabase.populateDatebaseFromLocalStorage(),\n    artDBJustPopualted = ArtifactDatabase.populateDatebaseFromLocalStorage()\n  if (!charDBJustPopualted && !artDBJustPopualted) return\n\n  Object.values(ArtifactDatabase.getArtifactDatabase()).forEach(art => {\n    let valid = true\n\n    //verify the linking of artifacts and characters\n    if (art.location) {\n      const locationChar = CharacterDatabase.get(art.location)\n      if (locationChar) {\n        let artInSlotId = CharacterDatabase.getArtifactIDFromSlot(art.location, art.slotKey)\n        if (!artInSlotId) {//character doesnt seem to show this artifact equipped...\n          CharacterDatabase.equipArtifact(art.location, art)\n        } else if (artInSlotId !== art.id) {//character has a different artifact equipped, invalidate this location\n          art.location = \"\"\n          valid = false\n        }\n      } else {\n        art.location = \"\"\n        valid = false\n      }\n    }\n\n    if (dbVersion < 1) {\n      //generate artifact efficiency again for artifacts\n      Artifact.substatsValidation(art)\n      valid = false\n\n      //there was a bug that saved the numStars as strings. convert to number.\n      if (typeof art.numStars === \"string\") {\n        art.numStars = parseInt(art.numStars)\n        valid = false\n      }\n\n      //the set keys were changed to camelcase, need to convert for old databases.\n      let keyMapping = {\n        \"Wanderer's Troupe\": \"WanderersTroupe\",\n        \"Viridescent Venerer\": \"ViridescentVenerer\",\n        \"Thundering Fury\": \"ThunderingFury\",\n        \"Retracing Bolide\": \"RetracingBolide\",\n        \"Noblesse Oblige\": \"NoblesseOblige\",\n        \"Maiden Beloved\": \"MaidenBeloved\",\n        \"Gladiator's Finale\": \"GladiatorsFinale\",\n        \"Crimson Witch of Flames\": \"CrimsonWitchOfFlames\",\n        \"Bloodstained Chivalry\": \"BloodstainedChivalry\",\n        \"Archaic Petra\": \"ArchaicPetra\",\n        \"Brave Heart\": \"BraveHeart\",\n        \"Tiny Miracle\": \"TinyMiracle\",\n        \"Defender's Will\": \"DefendersWill\",\n        \"Martial Artist\": \"MartialArtist\",\n        \"Resolution of Sojourner\": \"ResolutionOfSojourner\",\n        \"The Exile\": \"TheExile\",\n        \"Traveling Doctor\": \"TravelingDoctor\",\n        \"Lucky Dog\": \"LuckyDog\",\n        \"Prayers of Wisdom\": \"PrayersForWisdom\",\n        \"Prayers of Springtime\": \"PrayersToSpringtime\",\n        \"Prayers of Illumination\": \"PrayersForIllumination\",\n        \"Prayers of Destiny\": \"PrayersForDestiny\",\n      }\n      if (keyMapping[art.setKey]) {\n        art.setKey = keyMapping[art.setKey]\n        valid = false\n      }\n      //key names were changed. convert old DB\n      if (art?.mainStatKey?.endsWith?.(\"ele_dmg\")) {\n        art.mainStatKey = art.mainStatKey.replace(\"ele_dmg\", \"ele_dmg_bonus\")\n        valid = false\n      }\n      //key names were changed. convert old DB\n      if (art?.mainStatKey === \"phy_dmg\") {\n        art.mainStatKey = \"phy_dmg_bonus\"\n        valid = false\n      }\n    }\n\n    if (dbVersion < 2) {\n      if (art.mainStatKey in v2change) {\n        art.mainStatKey = v2change[art.mainStatKey]\n        valid = false\n      }\n      art?.substats?.forEach((obj, i) => {\n        if (obj.key in v2change) {\n          art.substats[i].key = v2change[obj.key]\n          valid = false\n        }\n      })\n    }\n\n    //Update any invalid artifacts in DB\n    if (!valid) ArtifactDatabase.updateArtifact(art)\n  })\n\n  let chars = CharacterDatabase.getCharacterDatabase();\n  Object.values(chars).forEach(character => {\n    let valid = true;\n    const { characterKey } = character\n    //verify character database equipment validity\n    if (!character.equippedArtifacts) {\n      character.equippedArtifacts = {}\n      valid = false\n    }\n    Object.entries(character.equippedArtifacts).forEach(([slotKey, artid]) => {\n      const equippedArt = ArtifactDatabase.get(artid)\n      if (equippedArt && equippedArt.location !== characterKey) //the artifact doesnt have the right location...\n        ArtifactDatabase.moveToNewLocation(artid, characterKey)\n      if (!equippedArt) {\n        valid = false\n        character.equippedArtifacts[slotKey] = \"\"\n      }\n    })\n\n    if (dbVersion < 1) {\n      //conditional format was refactored. this makes sure there is no error when using old DB.\n      character.artifactConditionals = character.artifactConditionals?.filter?.(cond => {\n        if (!cond.srcKey || !cond.srcKey2) {\n          valid = false\n          return false\n        }\n        return true\n      }) ?? []\n\n      //check for dmgMode\n      if (!character.hitMode) {\n        character.hitMode = \"hit\"\n        valid = false\n      }\n    }\n\n    //update any invalid characters in DB\n    if (!valid) CharacterDatabase.updateCharacter(character)\n  })\n  setDatabaseVersion(2)\n}\nconst getDatabaseVersion = (defVal = 0) =>\n  parseInt(loadFromLocalStorage(\"db_ver\") ?? defVal)\n\nconst setDatabaseVersion = (version) =>\n  saveToLocalStorage(\"db_ver\", version)\n\nexport {\n  DatabaseInitAndVerify\n};\n","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {\n  return undefined;\n};\n\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: undefined,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"children\", \"type\", \"name\", \"value\", \"onChange\"]);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    if (!onChange) {\n      return;\n    }\n\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive && onChange) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/React.createElement(ButtonGroup, _extends({}, controlledProps, {\n    ref: ref,\n    toggle: true\n  }), map(children, function (child) {\n    var values = getValues();\n    var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n\n    var handler = function handler(e) {\n      return handleToggle(childVal, e);\n    };\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      type: type,\n      name: child.name || name,\n      checked: values.indexOf(childVal) !== -1,\n      onChange: chainFunction(childOnChange, handler)\n    });\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;","import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect, useReducer } from 'react';\nimport { Badge, Image } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { Link } from 'react-router-dom';\nimport Artifact from '../Artifact/Artifact';\nimport Assets from '../Assets/Assets';\nimport { Stars } from '../Components/StarDisplay';\nimport { StatIconEle } from '../Components/StatIcon';\nimport Stat from '../Stat';\nimport Weapon from '../Weapon/Weapon';\nimport Character from './Character';\nimport CharacterDatabase from './CharacterDatabase';\nexport default function CharacterCard({ characterKey, onEdit, onDelete, cardClassName = \"\", bg = \"\", header, footer }) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  useEffect(() => {\n    Promise.all([\n      Character.getCharacterDataImport(),\n      Weapon.getWeaponDataImport(),\n      Artifact.getDataImport(),\n    ]).then(() => forceUpdate())\n  }, [])\n  const character = CharacterDatabase.get(characterKey)\n  if (!character) return null;\n  const build = Character.calculateBuild(character)\n  const { setToSlots } = build\n\n  const { weapon = {}, constellation } = character\n  const name = Character.getName(characterKey)\n  const elementKey = Character.getElementalKey(characterKey)\n  const weaponTypeKey = Character.getWeaponTypeKey(characterKey)\n  const weaponName = Weapon.getWeaponName(weapon.key)\n  const weaponMainVal = Weapon.getWeaponMainStatValWithOverride(weapon)\n  const weaponSubKey = Weapon.getWeaponSubStatKey(weapon.key)\n  const weaponSubVal = Weapon.getWeaponSubStatValWithOverride(weapon)\n  const weaponLevelName = Weapon.getLevelName(weapon.levelKey)\n  const weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\n  const statkeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\",]\n  return (<Card className={cardClassName} bg={bg ? bg : \"darkcontent\"} text=\"lightfont\">\n    <Card.Header className=\"pr-2\">\n      <Row className=\"no-gutters\">\n        <Col >\n          {header ? header : <h5><b>{name}</b></h5>}\n        </Col>\n        <Col xs={\"auto\"}>\n          <span className=\"float-right align-top ml-1\">\n            {onEdit && <Button variant=\"primary\" size=\"sm\" className=\"mr-1\"\n              onClick={onEdit}>\n              <FontAwesomeIcon icon={faEdit} />\n            </Button>}\n            {onDelete && <Button variant=\"danger\" size=\"sm\"\n              onClick={onDelete}>\n              <FontAwesomeIcon icon={faTrashAlt} />\n            </Button>}\n          </span>\n        </Col>\n      </Row>\n    </Card.Header>\n    <Card.Body onClick={onEdit} className={onEdit ? \"cursor-pointer\" : \"\"} >\n      <Row>\n        <Col xs=\"auto\" className=\"pr-0\">\n          <Image src={Character.getThumb(characterKey)} className={`thumb-big grad-${Character.getStar(characterKey)}star p-0`} thumbnail />\n        </Col>\n        <Col>\n          <h3 className=\"mb-0\">{`Lvl. ${Character.getStatValueWithOverride(character, \"characterLevel\")} C${constellation}`}</h3>\n          <h5 className=\"mb-0\"><Stars stars={Character.getStar(characterKey)} colored /></h5>\n          <h2 className=\"mb-0\"><Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h2>\n        </Col>\n      </Row>\n      <Row className=\"mb-2\">\n        <Col>\n          <h6 className=\"mb-0\">{weaponName}{weaponPassiveName && `(${weapon.refineIndex + 1})`} {weaponLevelName}</h6>\n          <span>ATK: {weaponMainVal}  {weaponPassiveName && <span>{Stat.getStatName(weaponSubKey)}: {weaponSubVal}{Stat.getStatUnit(weaponSubKey)}</span>}</span>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          {Object.entries(Artifact.getSetEffects(setToSlots)).map(([key, arr]) => {\n            let artifactSetName = Artifact.getSetName(key)\n            let highestNum = Math.max(...arr)\n            return <h5 key={key}><Badge variant=\"secondary\">{artifactSetName} <Badge variant=\"success\">{highestNum}</Badge></Badge></h5>\n          })}\n        </Col>\n      </Row>\n      <Row>\n        {statkeys.map(statKey => {\n          let unit = Stat.getStatUnit(statKey)\n          let statVal = build.finalStats[statKey]\n          return <Col xs={12} key={statKey}>\n            <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\n            <span className={`float-right`}>\n              {statVal?.toFixed(Stat.fixedUnit(statKey)) + unit}\n            </span>\n          </Col>\n        })}\n      </Row>\n    </Card.Body>\n    {footer && <Card.Footer>\n      <Button as={Link} to={{\n        pathname: \"/build\",\n        characterKey\n      }}>\n        Generate Builds\n        </Button>\n    </Card.Footer>}\n  </Card>)\n}","import { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { lazy } from 'react';\nimport { Button, Card, Col, Container, Image, Row, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\nimport ReactGA from 'react-ga';\nimport Assets from '../Assets/Assets';\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\nimport { loadFromLocalStorage, saveToLocalStorage } from '../Util/Util';\nimport Weapon from '../Weapon/Weapon';\nimport Character from './Character';\nimport CharacterCard from './CharacterCard';\nimport CharacterDatabase from './CharacterDatabase';\n\n//lazy load the character display\nconst CharacterDisplayCardPromise = import('../Character/CharacterDisplayCard');\nconst CharacterDisplayCard = lazy(() => CharacterDisplayCardPromise)\nconst toggle = {\n  level: \"Level\",\n  rarity: \"Rarity\",\n  name: \"Name\"\n}\nconst sortingFunc = {\n  level: (ck) => Character.getLevel(CharacterDatabase.get(ck).levelKey),\n  rarity: (ck) => Character.getStar(ck)\n}\nexport default class CharacterDisplay extends React.Component {\n  constructor(props) {\n    super(props)\n    DatabaseInitAndVerify();\n    this.state = {\n      charIdToEdit: \"\",\n      showEditor: false,\n      sortBy: Object.keys(toggle)[0],\n      elementalFilter: Character.getElementalKeysWithoutPhysical(),\n      weaponFilter: Weapon.getWeaponTypeKeys(),\n    }\n    const saved = loadFromLocalStorage(\"CharacterDisplay.state\")\n    if (saved)\n      this.state = { ...this.state, ...saved }\n    ReactGA.pageview('/character')\n  }\n\n  deleteCharacter = (id) => {\n    Character.remove(id)\n    this.forceUpdate()\n  }\n\n  editCharacter = (id) =>\n    this.setState({ charIdToEdit: id, showEditor: true },\n      () => this.scrollRef.current.scrollIntoView({ behavior: \"smooth\" }))\n\n  cancelEditCharacter = () =>\n    this.setState({ charIdToEdit: null, showEditor: false })\n\n  componentDidMount() {\n    this.scrollRef = React.createRef()\n    Promise.all([\n      Character.getCharacterDataImport(),\n    ]).then(() => this.forceUpdate())\n  }\n  componentDidUpdate() {\n    saveToLocalStorage(\"CharacterDisplay.state\", this.state)\n  }\n  render() {\n    const { showEditor, elementalFilter, weaponFilter, sortBy } = this.state\n    const charKeyList = CharacterDatabase.getCharacterKeyList().filter(cKey => {\n      if (!elementalFilter.includes(Character.getElementalKey(cKey))) return false\n      if (!weaponFilter.includes(Character.getWeaponTypeKey(cKey))) return false\n      return true\n    }).sort((a, b) => {\n      if (sortBy === \"name\") {\n        if (a < b) return -1;\n        if (a > b) return 1;\n        // names must be equal\n        return 0;\n      }\n      if (sortBy === \"level\") {\n        const diff = sortingFunc[\"level\"](b) - sortingFunc[\"level\"](a)\n        if (diff) return diff\n        return sortingFunc[\"rarity\"](b) - sortingFunc[\"rarity\"](a)\n      } else {\n        const diff = sortingFunc[\"rarity\"](b) - sortingFunc[\"rarity\"](a)\n        if (diff) return diff\n        return sortingFunc[\"level\"](b) - sortingFunc[\"level\"](a)\n      }\n    })\n    return (<Container ref={this.scrollRef}>\n      {/* editor/character detail display */}\n      {showEditor ? <Row className=\"mt-2\"><Col>\n        <React.Suspense fallback={<span>Loading...</span>}>\n          <CharacterDisplayCard editable\n            setCharacterKey={cKey => this.editCharacter(cKey)}\n            characterKey={this.state.charIdToEdit}\n            onClose={this.cancelEditCharacter}\n            footer={<Button variant=\"danger\" onClick={this.cancelEditCharacter}>Close</Button>}\n          />\n        </React.Suspense>\n      </Col></Row> : null}\n      <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2\">\n        <Card.Body className=\"p-2\">\n          <Row>\n            <Col xs=\"auto\">\n              <ToggleButtonGroup type=\"checkbox\" defaultValue={elementalFilter} onChange={v => this.setState({ elementalFilter: v })}>\n                {Character.getElementalKeysWithoutPhysical().map(eleKey =>\n                  <ToggleButton key={eleKey} value={eleKey} variant={elementalFilter.includes(eleKey) ? \"success\" : \"primary\"} className=\"py-1 px-2\"><h4 className=\"mb-0\"><Image src={Assets.elements?.[eleKey]} className=\"inline-icon\" /></h4></ToggleButton>)}\n              </ToggleButtonGroup>\n            </Col>\n            <Col>\n              <ToggleButtonGroup type=\"checkbox\" defaultValue={weaponFilter} onChange={v => this.setState({ weaponFilter: v })}>\n                {Weapon.getWeaponTypeKeys().map(weaponType =>\n                  <ToggleButton key={weaponType} value={weaponType} variant={weaponFilter.includes(weaponType) ? \"success\" : \"primary\"} className=\"py-1 px-2\"><h4 className=\"mb-0\"><Image src={Assets.weaponTypes?.[weaponType]} className=\"inline-icon\" /></h4></ToggleButton>)}\n              </ToggleButtonGroup>\n            </Col>\n            <Col xs=\"auto\">\n              <span>Sort by: </span>\n              <ToggleButtonGroup type=\"radio\" name=\"level\" defaultValue={this.state.sortBy} onChange={v => this.setState({ sortBy: v })}>\n                {Object.entries(toggle).map(([key, text]) =>\n                  <ToggleButton key={key} value={key} variant={this.state.sortBy === key ? \"success\" : \"primary\"}>{text}</ToggleButton>)}\n              </ToggleButtonGroup>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n      <Row className=\"mt-2\">\n        {showEditor ? null : <Col lg={4} md={6} className=\"mb-2\">\n          <Card className=\"h-100\" bg=\"darkcontent\" text=\"lightfont\">\n            <Card.Header className=\"pr-2\">\n              <span>Add New Character</span>\n            </Card.Header>\n            <Card.Body className=\"d-flex flex-column justify-content-center\">\n              <Row className=\"d-flex flex-row justify-content-center\">\n                <Col xs=\"auto\">\n                  <Button onClick={() => this.editCharacter(\"\")}>\n                    <h1><FontAwesomeIcon icon={faPlus} className=\"fa-fw\" /></h1>\n                  </Button>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>}\n        {charKeyList.map(charKey =>\n          <Col key={charKey} lg={4} md={6} className=\"mb-2\">\n            <CharacterCard\n              cardClassName=\"h-100\"\n              characterKey={charKey}\n              onDelete={() => this.deleteCharacter(charKey)}\n              onEdit={() => this.editCharacter(charKey)}\n            />\n          </Col>\n        )}\n      </Row>\n    </Container>)\n  }\n}","const getRandomElementFromArray = (array) => array[Math.floor(Math.random() * array.length)];\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\nfunction getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive \n}\nfunction getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\nconst loadFromLocalStorage = (key) => {\n  let data = localStorage.getItem(key)\n  if (!data) return null\n  return JSON.parse(data)\n}\nconst saveToLocalStorage = (key, obj) =>\n  localStorage.setItem(key, JSON.stringify(obj));\nconst deepClone = (obj) =>\n  JSON.parse(JSON.stringify(obj))\n\nconst closeEnoughFloat = (a, b) =>\n  Math.abs(a - b) <= 0.101\n\nconst closeEnoughInt = (a, b) =>\n  Math.abs(a - b) <= 1\nconst clamp = (val, low, high) => {\n  if (val < low) return low;\n  if (val > high) return high;\n  return val\n}\nconst getArrLastElement = (arr) =>\n  arr.length ? arr[arr.length - 1] : null\n\nconst clamp01 = (val) => clamp(val, 0, 1)\nconst clampPercent = (val) => clamp(val, 0, 100)\n\n//use to pretty print timestamps, or anything really.\nfunction strPadLeft(string, pad, length) {\n  return (new Array(length + 1).join(pad) + string).slice(-length);\n}\n\n//fuzzy compare strings. longer the distance, the higher the mismatch.\nfunction hammingDistance(str1, str2) {\n  var dist = 0;\n  str1 = str1.toLowerCase();\n  str2 = str2.toLowerCase();\n  for (var i = 0, j = Math.max(str1.length, str2.length); i < j; i++) {\n    let match = true\n    if (!str1[i] || !str2[i] || str1[i] !== str2[i])\n      match = false\n    if (str1[i - 1] === str2[i] || str1[i + 1] === str2[i])\n      match = true\n    if (!match) dist++\n  }\n  return dist;\n}\n\n//multiplies every numberical value in the obj by a multiplier.\nfunction objMultiplication(obj, multi) {\n  Object.keys(obj).forEach(prop => {\n    if (typeof obj[prop] === \"object\") objMultiplication(obj[prop], multi)\n    if (typeof obj[prop] === \"number\") obj[prop] = obj[prop] * multi\n  })\n}\n// const getObjectKeysRecursive = (obj) => Object.values(obj).reduce((a, prop) => typeof prop === \"object\" ? [...a, ...getObjectKeysRecursive(prop)] : a, Object.keys(obj))\nconst getObjectKeysRecursive = (obj) => typeof obj === \"object\" ? Object.values(obj).flatMap(getObjectKeysRecursive).concat(Object.keys(obj)) : (typeof obj === \"string\" ? [obj] : [])\nexport {\n  getRandomInt,\n  getRandomIntInclusive,\n  getRandomArbitrary,\n  getRandomElementFromArray,\n  loadFromLocalStorage,\n  saveToLocalStorage,\n  deepClone,\n  closeEnoughFloat,\n  closeEnoughInt,\n  clamp,\n  clamp01,\n  clampPercent,\n  getArrLastElement,\n  strPadLeft,\n  hammingDistance,\n  objMultiplication,\n  getObjectKeysRecursive\n}","import { StatData } from \"./StatData\"\nimport { hitTypes, hitMoves, hitElements, transformativeReactions, amplifyingReactions } from \"./StatConstants\"\n\nexport default class Stat {\n  //do not instantiate.\n  constructor() {\n    if (this instanceof Stat)\n      throw Error('A static class cannot be instantiated.');\n  }\n  static getStatName = (key, defVal = \"\") =>\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\n  static getStatNamePretty = (key, defVal = \"\") =>\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\n  static getStatNameRaw = (key, defVal = \"\") =>\n    StatData[key]?.name || defVal\n  static getStatNameWithPercent = (key, defVal = \"\") => {\n    let name = this.getStatName(key, defVal)\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\n      name += \"%\"\n    return name;\n  }\n  static getStatVariant = (key, defVal = \"\") =>\n    StatData[key]?.variant || defVal\n  static getStatUnit = (key, defVal = \"\") =>\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\n\n  static fixedUnit = (key) => {\n    if (StatData[key]?.unit === \"multi\") return 3\n    let unit = Stat.getStatUnit(key)\n    return unit === \"%\" ? 1 : 0\n  }\n  static printStat = (statKey, stats) =>\n    f({ stats, expand: false }, statKey)\n\n  static getPrintableFormulaStatKeyList = (statList = [], modifiers = {}) => {\n    let keys = new Set([...Object.keys(FormulaText), ...Object.keys(modifiers)])\n    return statList.filter(key => keys.has(key))\n  }\n\n  static printFormula = (statKey, stats, modifiers = {}, expand = true) => {\n    const modifierText = Object.entries(modifiers?.[statKey] ?? []).map(([mkey, multiplier]) =>\n      <span key={statKey + mkey} className=\"text-nowrap\"> + {this.printStat(mkey, stats)} * {multiplier?.toFixed?.(3) ?? multiplier}</span>)\n    if (typeof FormulaText?.[statKey] === \"function\")\n      return <span>{FormulaText[statKey]({ stats, expand })}{modifierText}</span>\n    else\n      return <span>Basic Stats from artifacts/weapon{modifierText}</span>\n  }\n}\n//generate html tags based on tagged variants of the statData\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\n\nfunction f(options, statKey) {\n  let { stats, expand = true } = options\n  if (!stats) return\n  if (expand && FormulaText?.[statKey])\n    return <span>( {FormulaText[statKey](options)} )</span>\n  let statName = Stat.getStatNamePretty(statKey)\n  let statUnit = Stat.getStatUnit(statKey)\n  let fixedUnit = Stat.fixedUnit(statKey)\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\n}\n\nexport const FormulaText = {\n  baseATK: (o) => <span>{f(o, \"characterATK\")} + {f(o, \"weaponATK\")} </span>,\n  finalATK: (o) => <span>{f(o, \"baseATK\")} * ( 100% + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\n  finalHP: (o) => <span>{f(o, \"characterHP\")} * ( 100% + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\n  finalDEF: (o) => <span>{f(o, \"characterDEF\")} * ( 100% + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\n\n  enemyLevel_multi: (o) => <span>( 100 + {f(o, \"characterLevel\")} ) / ( ( 100 + {f(o, \"characterLevel\")} ) + ( 100 + {f(o, \"enemyLevel\")} ) * ( 100% - {f(o, \"enemyDEFRed_\")} ) )</span>,\n\n  heal_multi: (o) => <span>( 100% + {f(o, \"heal_\")} + {f(o, \"incHeal_\")} )</span>,\n\n  amplificative_dmg_: (o) => <span>25 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\n  transformative_dmg_: (o) => <span>60 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\n\n  crystalize_eleMas_: (o) => <span>40 / 9 * {f(o, \"eleMas\")} / ( 1400 + {f(o, \"eleMas\")} ) * 100%</span>,\n  crystalize_hit: (o) => <span>( 100% + {f(o, \"crystalize_dmg_\")} + {f(o, \"crystalize_eleMas_\")} ) * {f(o, \"crystalize_multi\")}</span>,\n}\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  FormulaText[`final_${move}_critRate_`] = (o) => <span>Min( {f(o, \"critRate_\")} + {f(o, `${move}_critRate_`)} , 100% )</span>\n})\n\nObject.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n  FormulaText[`${ele}_enemyRes_multi`] = (o) => {\n    if (o.stats[`${ele}_enemyImmunity`])\n      return <span>0 (immune)</span>\n    let res = (o.stats[`${ele}_enemyRes_`] || 0) / 100\n    if (res < 0) return <span> 100% - {f(o, `${ele}_enemyRes_`)} / 2</span>\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemyRes_`)} * 4 + 1)</span>\n    return <span> 100% - {f(o, `${ele}_enemyRes_`)} </span>\n  }\n})\n\nObject.entries(hitMoves).forEach(([move, moveName]) => {\n  Object.entries(hitElements).forEach(([ele, { name: eleName }]) => {\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      FormulaText[`${ele}_${move}_${type}`] = (o) => <span>{f(o, `finalATK`)} * {f(o, `${ele}_${move}_${type}_multi`)}</span>\n    })\n\n    FormulaText[`${ele}_${move}_hit_base_multi`] = (o) => <span>100% + {f(o, 'dmg_')} + {f(o, `${ele}_dmg_`)} + {f(o, `${move}_dmg_`)}</span>\n    FormulaText[`${move}_avgHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')} + {f(o, `final_${move}_critRate_`)} </span>\n    FormulaText[`critHit_base_multi`] = (o) => <span>100% + {f(o, 'critDMG_')}</span>\n\n    FormulaText[`${ele}_${move}_hit_multi`] = (o) => <span>{f(o, `${ele}_${move}_hit_base_multi`)} * {f(o, `enemyLevel_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>\n    FormulaText[`${ele}_${move}_critHit_multi`] = (o) => <span>{f(o, `critHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\n    FormulaText[`${ele}_${move}_avgHit_multi`] = (o) => <span>{f(o, `${move}_avgHit_base_multi`)} * {f(o, `${ele}_${move}_hit_multi`)}</span>\n  })\n})\n\nObject.entries(transformativeReactions).forEach(([reaction, { multi, variants }]) => {\n  FormulaText[`${reaction}_multi`] = (o) => <span>{multi} * {f(o, 'transformative_level_multi')}</span>\n  if (variants.length === 1) {\n    const [ ele ] = variants\n    FormulaText[`${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>  \n  } else {\n    variants.forEach(ele => {\n      FormulaText[`${ele}_${reaction}_hit`] = (o) => <span>( 100% + {f(o, `transformative_dmg_`)} + {f(o, `${reaction}_dmg_`)} ) * {f(o, `${reaction}_multi`)} * {f(o, `${ele}_enemyRes_multi`)}</span>  \n    })    \n  }\n})\n\nObject.entries(amplifyingReactions).forEach(([reaction, { variants }]) => {\n  Object.entries(variants).forEach(([ele, baseMulti]) => {\n    FormulaText[`${ele}_${reaction}_multi`] = (o) => <span>{baseMulti} * ( 100% + {f(o, \"amplificative_dmg_\")} + {f(o, `${reaction}_dmg_`)} )</span>\n    Object.entries(hitTypes).forEach(([type, typeName]) => {\n      Object.entries(hitMoves).forEach(([move, moveName]) => {\n        FormulaText[`${ele}_${reaction}_${move}_${type}_multi`] = (o) => <span>{f(o, `${ele}_${move}_${type}_multi`)} * {f(o, `${ele}_${reaction}_multi`)}</span>\n        FormulaText[`${ele}_${reaction}_${move}_${type}`] = (o) => <span>{f(o, \"finalATK\")} * {f(o, `${ele}_${reaction}_${move}_${type}_multi`)}</span>\n      })\n    })\n  })\n})\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import Artifact from \"../Artifact/Artifact\";\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\nimport ElementalData from \"../Data/ElementalData\";\nimport { ElementToReactionKeys, PreprocessFormulas } from \"../StatData\";\nimport { GetDependencies } from \"../StatDependency\";\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\nimport { deepClone } from \"../Util/Util\";\nimport Weapon from \"../Weapon/Weapon\";\nimport CharacterDatabase from \"./CharacterDatabase\";\n\nexport default class Character {\n  //do not instantiate.\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\n  static getCharacterDataImport = () => CharacterDataImport\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\n    let { characterKey, levelKey } = character\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\n    if (statKey === \"weaponATK\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\n    if (statKey === \"characterLevel\" || statKey === \"enemyLevel\") return this.getLevel(levelKey)\n    if (statKey.includes(\"enemyRes_\")) return 10\n    if (statKey in characterStatBase) return characterStatBase[statKey]\n    let characterObj = this.getCDataObj(characterKey)\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\n    return defVal\n  }\n\n  static getCDataObj = (charKey) => CharacterData[charKey];\n  static getElementalName = (elementalKey, defVal = \"\") => (ElementalData?.[elementalKey]?.name || defVal)\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\n\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\n  static getElementalKeys = () => Object.keys(ElementalData)\n  static getElementalKeysWithoutPhysical = () => this.getElementalKeys().filter(e => e !== \"physical\")\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\n\n  //LEVEL\n  static getlevelKeys = () => Object.keys(LevelsData)\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\n\n  //SPECIALIZED STAT\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\n  //ASSETS\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getTalent(charKey, talentKey)?.img || defVal\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\n\n  //talents\n  static getTalent = (charKey, talentKey, defVal = {}) => this.getCDataObj(charKey)?.talent?.[talentKey] || defVal\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getTalent(charKey, talentKey)?.name || defVal\n\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\n    //so far we only get level boost from constellations, so only burst and skills.\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\n    let talents = this.getCDataObj(characterKey)?.talent || {}\n    for (let i = 1; i <= constellation; i++) {\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\n      if (boostEntry) return boostEntry[1]\n    }\n    return defVal\n  }\n\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getTalent(charKey, talentKey)?.document || defVal\n  static getTalentDocumentSections = (charKey, talentKey, defVal = []) => {\n    const character = CharacterDatabase.get(charKey);\n    if (!character) return defVal\n    const { constellation = 0, levelKey = Object.keys(LevelsData)[0] } = character\n    const ascension = Character.getAscension(levelKey)\n    return this.getTalentDocument(charKey, talentKey).map(section => typeof section === \"function\" ? section(constellation, ascension) : section)\n  }\n  static getTalentField = (character, talentKey, sectionIndex, fieldIndex, defVal = {}) => {\n    if (!character) return defVal\n    const { constellation = 0, levelKey = Object.keys(LevelsData)[0] } = character\n    const ascension = Character.getAscension(levelKey)\n    const field = this.getTalentDocumentSections(character.characterKey, talentKey)?.[sectionIndex]?.fields?.[fieldIndex]\n    if (!field) return defVal\n    return typeof field === \"function\" ? field(constellation, ascension) : field\n  }\n  static getTalentFieldValue = (field, key, talentKey, stats = {}, defVal = \"\") => {\n    if (!field?.[key]) return defVal\n    return typeof field?.[key] === \"function\" ? field[key](stats.talentLevelKeys[talentKey], stats) : field[key]\n  }\n\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\n    let stats = this.getTalent(charKey, talentKey)?.stats\n    if (typeof stats === \"function\")\n      return stats(constellation, ascension)\n    return stats || defVal\n  }\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\n    let talents = this.getCDataObj(charKey)?.talent || {}\n    let statsArr = []\n    Object.keys(talents).forEach(talentKey => {\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\n      if (stats) statsArr.push(stats)\n    })\n    return statsArr\n  }\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\n    const sections = this.getTalentDocumentSections(charKey, talentKey)\n    let cond = null\n    for (const section of sections) {\n      let tempCond = section.conditional\n      if (typeof tempCond === \"function\")\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\n      if (tempCond?.conditionalKey === conditionalKey) {\n        cond = tempCond\n        break;\n      }\n    }\n    return cond || defVal\n  }\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\n    if (!conditionalNum || !conditional) return defVal\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\n    if (!stacks) return defVal\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"modifiers\" ? [key, val] : [key, val * stacks]))\n  }\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\n    if (!conditionalNum || !conditional) return defVal\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\n    return fields || defVal\n  }\n\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\n\n  //look up the formula, and generate the formulaPath to send to worker.\n  static getFormulaPath(characterKey, talentKey, formula) {\n    const formulaDB = this.getCDataObj(characterKey)?.formula\n    if (!formulaDB) return\n    let formulaKey\n    if (talentKey === \"auto\") {\n      for (const tk of [\"normal\", \"charged\", \"plunging\"]) {\n        ([formulaKey,] = Object.entries(formulaDB?.[tk] ?? {}).find(([, value]) => value === formula) ?? [])\n        if (formulaKey) {\n          talentKey = tk\n          break;\n        }\n      }\n    } else ([formulaKey,] = Object.entries(formulaDB?.[talentKey] ?? {}).find(([, value]) => value === formula) ?? [])\n    if (!formulaKey) return\n    return { characterKey, talentKey, formulaKey }\n  }\n\n\n  static hasTalentPage = (characterKey) => Boolean(Character.getCDataObj(characterKey)?.talent)\n\n  static getDisplayStatKeys = (character, defVal = { basicKeys: [] }) => {\n    if (!character) return defVal\n    const { characterKey } = character\n    let eleKey = Character.getElementalKey(characterKey)\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\n    const basicKeys = [\"finalHP\", \"finalATK\", \"finalDEF\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\", `${eleKey}_dmg_`]\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\n    const isAutoElemental = Character.isAutoElemental(characterKey)\n    const isAutoInfusable = Character.isAutoInfusable(characterKey)\n    if (!isAutoElemental)\n      basicKeys.push(\"physical_dmg_\")\n\n    //show elemental interactions\n    const transReactions = deepClone(ElementToReactionKeys[eleKey])\n    const weaponTypeKey = this.getWeaponTypeKey(characterKey)\n    if (!transReactions.includes(\"shattered_hit\") && weaponTypeKey === \"claymore\") transReactions.push(\"shattered_hit\")\n    if (this.hasTalentPage(characterKey)) {\n      const charFormulas = {}\n      Object.keys(Character.getCDataObj(characterKey)?.talent ?? {}).forEach(talentKey =>\n        Character.getTalentDocumentSections(characterKey, talentKey)?.forEach((section, sectionIndex) =>\n          section?.fields?.forEach((field, fieldIndex) =>\n            (field?.formula || this.getTalentField(character, talentKey, sectionIndex, fieldIndex)?.formula) && (charFormulas[talentKey] = [...(charFormulas[talentKey] ?? []), {\n              talentKey,\n              sectionIndex,\n              fieldIndex\n            }]))))\n      return { basicKeys, ...charFormulas, transReactions }\n    } else {\n      //generic average hit parameters.\n      const genericAvgHit = []\n      if (!isAutoElemental) //add phy auto + charged + physical \n        genericAvgHit.push(\"physical_normal_avgHit\", \"physical_charged_avgHit\")\n\n      if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\n        genericAvgHit.push(`${eleKey}_normal_avgHit`, `${eleKey}_charged_avgHit`)\n      else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\n        genericAvgHit.push(`${eleKey}_charged_avgHit`)\n      }\n      //show skill/burst \n      genericAvgHit.push(`${eleKey}_skill_avgHit`, `${eleKey}_burst_avgHit`)\n\n      //add reactions.\n      if (eleKey === \"pyro\") {\n        const reactions = []\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\n        reactions.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\n        genericAvgHit.push(...reactions)\n      } else if (eleKey === \"cryo\")\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\n      else if (eleKey === \"hydro\")\n        genericAvgHit.push(...genericAvgHit.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\n\n      return { basicKeys, genericAvgHit, transReactions }\n    }\n  }\n\n  static hasOverride = (character, statKey) => {\n    if (statKey === \"finalHP\")\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"characterHP\") || false\n    else if (statKey === \"finalDEF\")\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"characterDEF\") || false\n    else if (statKey === \"finalATK\")\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"characterATK\") || false\n    return character?.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\n  }\n\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey] ?? defVal\n    else return this.getBaseStatValue(character, statKey, defVal)\n  }\n\n  //equipment, with consideration on swapping equipped.\n  static equipArtifacts = (characterKey, artifactIds) => {\n    let character = CharacterDatabase.get(characterKey)\n    if (!character) return;\n    let artIdsOnCharacter = character.equippedArtifacts;\n    let artIdsNotOnCharacter = artifactIds\n\n    //swap, by slot\n    Artifact.getSlotKeys().forEach(slotKey => {\n      let artNotOnChar = ArtifactDatabase.get(artIdsNotOnCharacter?.[slotKey])\n      if (artNotOnChar.location === characterKey) return; //it is already equipped\n      let artOnChar = ArtifactDatabase.get(artIdsOnCharacter?.[slotKey])\n      let notCharLoc = (artNotOnChar?.location || \"\")\n      //move current art to other char\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\n      //move current art to other char\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\n      //move other art to current char\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterKey)\n    })\n    //move other art to current char \n    character.equippedArtifacts = {}\n    Object.entries(artifactIds).forEach(([key, artid]) =>\n      character.equippedArtifacts[key] = artid)\n    CharacterDatabase.updateCharacter(character);\n  }\n  static remove(characterKey) {\n    let character = CharacterDatabase.get(characterKey)\n    if (character.equippedArtifacts)\n      Object.values(character.equippedArtifacts).forEach(artid =>\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\n    CharacterDatabase.remove(characterKey)\n  }\n\n  static calculateBuild = (character) => {\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.get(artid)]))\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\n  }\n\n  static calculateBuildWithObjs = (artifactConditionals = [], initialStats, artifacts) => {\n    let setToSlots = Artifact.setToSlots(artifacts)\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\n\n    let stats = deepClone(initialStats)\n    //add artifact and artifactsets\n    Object.values(artifacts).forEach(art => {\n      if (!art) return\n      //main stats\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\n      //substats\n      art.substats.forEach((substat) =>\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\n    })\n    //setEffects\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\n    //setEffects conditionals\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\n      if (!setToSlots[setKey] || setToSlots[setKey].length < parseInt(setNumKey)) return\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum))\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\n    })\n\n    let dependencies = GetDependencies(stats?.modifiers)\n    PreprocessFormulas(dependencies, stats).formula(stats)\n    return {\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\n      setToSlots,\n      finalStats: stats,\n      artifactConditionals\n    }\n  }\n  static mergeStats = (initialStats, stats) => stats && Object.entries(stats).forEach(([key, val]) => {\n    if (key === \"modifiers\") {\n      initialStats.modifiers = initialStats.modifiers ?? {}\n      for (const [statKey, modifier] of Object.entries(val)) {\n        initialStats.modifiers[statKey] = initialStats.modifiers[statKey] ?? {}\n        for (const [mkey, multiplier] of Object.entries(modifier))\n          initialStats.modifiers[statKey][mkey] = (initialStats.modifiers[statKey][mkey] ?? 0) + multiplier\n      }\n    } else initialStats[key] = (initialStats[key] ?? 0) + val\n  })\n\n  static calculateCharacterWithWeaponStats = (character) => {\n    character = deepClone(character)\n    const { characterKey, levelKey, hitMode, autoInfused, reactionMode, talentLevelKeys, constellation, talentConditionals = [] } = character\n    const ascension = Character.getAscension(levelKey)\n\n    //generate the initalStats obj with data from Character & overrides\n    const statKeys = [\"characterHP\", \"characterATK\", \"characterDEF\", \"weaponATK\", \"characterLevel\", \"enemyLevel\", \"physical_enemyRes_\", \"physical_enemyImmunity\", ...Object.keys(characterStatBase)]\n    const initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\n    initialStats.characterEle = this.getElementalKey(characterKey);\n    initialStats.characterKey = characterKey\n    initialStats.hitMode = hitMode;\n    initialStats.autoInfused = autoInfused && Character.getCDataObj(characterKey)?.talent?.auto?.infusable\n    initialStats.reactionMode = reactionMode;\n    initialStats.talentConditionals = talentConditionals\n    initialStats.weaponType = this.getWeaponTypeKey(characterKey)\n    initialStats.talentLevelKeys = talentLevelKeys;\n    initialStats.constellation = constellation\n    initialStats.ascension = ascension\n    for (const key in initialStats.talentLevelKeys)\n      initialStats.talentLevelKeys[key] += this.getTalentLevelBoost(character.characterKey, key, constellation);\n\n    //enemy stuff\n    Character.getElementalKeys().forEach(eleKey => {\n      let statKey = `${eleKey}_enemyRes_`\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\n      statKey = `${eleKey}_enemyImmunity`\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\n    })\n\n    //all the rest of the overrides\n    let overrides = character?.baseStatOverrides || {}\n    Object.entries(overrides).forEach(([statKey, val]) => {\n      if (statKey === \"specializedStatKey\" || statKey === \"specializedStatVal\") return\n      if (!initialStats.hasOwnProperty(statKey)) initialStats[statKey] = val\n    })\n\n    //add specialized stat\n    let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\n    this.mergeStats(initialStats, { [specialStatKey]: specializedStatVal })\n\n\n    //add stats from talentconditionals\n    talentConditionals.forEach(cond => {\n      const { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\n      const conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, initialStats.talentLevelKeys[talentKey], constellation, ascension)\n      this.mergeStats(initialStats, Character.getTalentConditionalStats(conditional, conditionalNum, {}))\n    })\n\n    //add stats from all talents\n    Character.getTalentStatsAll(characterKey, constellation, ascension).forEach(s => this.mergeStats(initialStats, s))\n\n    //add stats from weapons\n    const weaponSubKey = Weapon.getWeaponSubStatKey(character?.weapon?.key)\n    if (weaponSubKey) this.mergeStats(initialStats, { [weaponSubKey]: Weapon.getWeaponSubStatValWithOverride(character?.weapon) })\n    this.mergeStats(initialStats, Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex))\n    this.mergeStats(initialStats, Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum, {}));\n\n    return initialStats\n  }\n\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\nvar initiated = false\nvar characterDatabase = {};\n\nexport default class CharacterDatabase {\n  //do not instantiate.\n  constructor() {\n    if (this instanceof CharacterDatabase) throw Error('A static class cannot be instantiated.');\n  }\n  static isInvalid = (char) => !char || !char.characterKey || !char.levelKey\n  static getCharacterDatabase = () => deepClone(characterDatabase);\n  static getCharacterKeyList = () => Object.keys(characterDatabase);\n  static getIdNameList = () => Object.entries(characterDatabase).map(([id, char]) => [id, char.name]);\n  static populateDatebaseFromLocalStorage = () => {\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\n    Object.keys(localStorage).filter(key => key.startsWith(\"char_\")).forEach(key => {\n      let [, characterKey] = key.split(\"char_\")\n      if (!characterDatabase[characterKey]) {\n        let character = loadFromLocalStorage(key);\n        if (!character) return;\n        characterDatabase[characterKey] = character;\n      }\n    })\n    initiated = true\n    return true\n  }\n  static updateCharacter = (char) => {\n    if (this.isInvalid(char)) return;\n    const dchar = deepClone(char)\n    saveToLocalStorage(`char_${char.characterKey}`, dchar);\n    characterDatabase[char.characterKey] = dchar;\n  }\n  static get = (characterKey) => characterDatabase?.[characterKey] ?? null\n\n  static remove = (characterKey) => {\n    delete characterDatabase[characterKey];\n    localStorage.removeItem(`char_${characterKey}`);\n  }\n  static getArtifactIDFromSlot = (characterKey, slotKey) =>\n    this.get(characterKey)?.equippedArtifacts?.[slotKey] ?? null\n\n  static equipArtifact = (characterKey, art) => {\n    const char = this.get(characterKey)\n    if (!char || !art || !art.slotKey) return\n    if (!char.equippedArtifacts) char.equippedArtifacts = {};\n    char.equippedArtifacts[art.slotKey] = art.id;\n    this.updateCharacter(char)\n  }\n  static unequipArtifactOnSlot = (characterKey, slotKey) => {\n    const char = this.get(characterKey)\n    if (!char || !slotKey) return\n    if (!char?.equippedArtifacts?.[slotKey]) return;\n    char.equippedArtifacts[slotKey] = \"\";\n    this.updateCharacter(char)\n  }\n  static equipArtifactBuild = (characterKey, artifactIds) => {\n    const character = this.get(characterKey)\n    if (!character) return;\n    character.equippedArtifacts = artifactIds\n    CharacterDatabase.updateCharacter(character);\n  }\n  static unequipAllArtifacts = () => {\n    Object.values(characterDatabase).forEach(char => {\n      char.equippedArtifacts = {}\n      this.updateCharacter(char)\n    })\n  }\n  //helper function for testing\n  static clearDatabase = () => {\n    characterDatabase = {}\n    initiated = false\n  }\n}\n","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\n\nconst SlotIcon = {\n  flower: faBahai,\n  plume: faFeatherAlt,\n  sands: faHourglass,\n  goblet: faWineGlass,\n  circlet: faCrown\n}\nexport default SlotIcon","import { getArrLastElement } from '../Util/Util';\nimport ElementalData from './ElementalData';\nlet ArtifactData = {}\nlet ArtifactDataImport = import('./Artifacts')\nArtifactDataImport.then(imp => {\n  ArtifactData = imp.default\n  ArtifactDataImport = null\n})\nconst ArtifactMainSlotKeys = [\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\",\n]\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_dmg_`))\n\nconst ArtifactStarsData = {\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\n};\n\nconst ArtifactMainStatsData = {\n  1: {\n    hp: [129, 178, 227, 275, 324],\n    atk: [8, 12, 15, 18, 21],\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\n    physical_dmg_: [3.9, 5.4, 6.9, 8.4, 9.9],\n    ele_dmg_: [3.1, 4.3, 5.5, 6.7, 7.9],\n    eleMas: [13, 17, 22, 27, 32],\n    enerRech_: [3.5, 4.8, 6.1, 7.5, 8.8],\n    critRate_: [2.1, 2.9, 3.7, 4.5, 5.3],\n    critDMG_: [4.2, 5.8, 7.4, 9.0, 10.5],\n    heal_: [2.4, 3.3, 4.3, 5.2, 6.1],\n  },\n  2: {\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\n    physical_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\n    ele_dmg_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\n    eleMas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\n    enerRech_: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\n    critRate_: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\n    critDMG_: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\n    heal_: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\n  },\n  3: {\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\n    physical_dmg_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\n    ele_dmg_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\n    eleMas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\n    enerRech_: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\n    critRate_: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\n    critDMG_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\n    heal_: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\n  },\n  4: {\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\n    physical_dmg_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\n    ele_dmg_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\n    eleMas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\n    enerRech_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\n    critRate_: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\n    critDMG_: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\n    heal_: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\n  },\n  5: {\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\n    physical_dmg_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\n    ele_dmg_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\n    eleMas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\n    enerRech_: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\n    critRate_: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\n    critDMG_: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\n    heal_: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\n  }\n}\n\nconst ArtifactSubStatsData = {\n  hp: { 1: [24, 30], 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\n  hp_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\n  atk: { 1: [2], 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\n  atk_: { 1: [1.2, 1.5], 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\n  def: { 1: [2], 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\n  def_: { 1: [1.5, 1.8], 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\n  eleMas: { 1: [5, 6], 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\n  enerRech_: { 1: [1.3, 1.6], 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\n  critRate_: { 1: [0.8, 1], 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\n  critDMG_: { 1: [1.6, 1.9], 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\n}\nconst ArtifactSubstatsMinMax = Object.fromEntries(Object.entries(ArtifactSubStatsData).map(([key, obj]) =>\n  [key, {\n    max: Object.fromEntries(Object.keys(obj).map(key => [key, getArrLastElement(obj[key])])),\n    min: Object.fromEntries(Object.keys(obj).map(key => [key, obj[key][0]])),\n  }]))\n\nconst ArtifactSlotsData = {\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"enerRech_\"] },\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\",] },\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\"] },\n};\n\nexport {\n  ArtifactMainSlotKeys,\n  ArtifactSlotsData,\n  ArtifactData,\n  ArtifactDataImport,\n  ArtifactSubStatsData,\n  ArtifactSubstatsMinMax,\n  ArtifactStarsData,\n  ArtifactMainStatsData\n};\n","export default class ArtifactBase {\n  //do not instantiate.\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\n\n  //returns {setKey:[slotKey...]}\n  static setToSlots = (artifacts) => {\n    let setToSlots = {};\n    Object.entries(artifacts).forEach(([key, art]) => {\n      if (!art) return\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\n      else setToSlots[art.setKey] = [key]\n    })\n    return setToSlots\n  }\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport CharacterDatabase from '../Character/CharacterDatabase';\nimport SlotIcon from '../Components/SlotIcon';\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport, ArtifactSubstatsMinMax } from '../Data/ArtifactData';\nimport Stat from '../Stat';\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\nimport ArtifactBase from './ArtifactBase';\nimport ArtifactDatabase from './ArtifactDatabase';\n\nconst maxStar = 5\n\nexport default class Artifact {\n  //do not instantiate.\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\n\n  //SETS\n  static getDataImport = () => ArtifactDataImport\n  static getSetKeys = () => Object.keys(ArtifactData || {})\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\n  static getSetsByMaxStarEntries = (star) =>\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\n\n  //SETEFFECT\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\n  static getArtifactSetEffectsStats = (setToSlots) => {\n    let artifactSetEffect = []\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\n        Object.entries(value.stats).forEach(([key, statVal]) =>\n          artifactSetEffect.push({ key, statVal }))))\n    return artifactSetEffect\n  }\n  static getSetEffects = (setToSlots) => {\n    let artifactSetEffect = {}\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\n      if (setNumKeys.length)\n        artifactSetEffect[setKey] = setNumKeys\n    })\n    return artifactSetEffect\n  }\n\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\n    if (!setEffectText) return defVal\n    if (typeof setEffectText === \"function\")\n      return setEffectText(charFinalStats)\n    else if (setEffectText)\n      return setEffectText\n    return defVal\n  }\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\n\n  //SLOT\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\n  static getSlotIcon = (slotKey, defVal = \"\") =>\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\n\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\n    if (!slotKey) return defVal;\n    let name = this.getSlotName(slotKey)\n    if (!name) return defVal;\n    let slotIcon = this.getSlotIcon(slotKey)\n    if (!slotIcon) return defVal;\n    return (<span>{slotIcon} {name}</span>)\n  }\n  static splitArtifactsBySlot = (databaseObj) =>\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\n\n  //STARS\n  static getStars = () => Object.keys(ArtifactStarsData || {}).map(s => parseInt(s))\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\n\n  //MAIN STATS\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\n\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\n    let main = this.getMainStatValues(numStars, key)[level]\n    if (main) return main\n    else if (key?.includes(\"_dmg_\")) // because in the database its still stored as ele_dmg_\n      return this.getMainStatValue(\"ele_dmg_\", numStars, level, defVal)\n    return defVal\n  }\n\n  //SUBSTATS\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\n  static getSubstatAllMax = (statKey, numStars = maxStar, defVal = 0) => ArtifactSubstatsMinMax?.[statKey]?.max[numStars] ?? defVal\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\n  static subStatCloseEnough = (key, value1, value2) => {\n    if (Stat.getStatUnit(key) === \"%\")\n      return closeEnoughFloat(value1, value2)\n    else\n      return closeEnoughInt(value1, value2)\n  }\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\n  static rollsRemaining = (level, numStars) =>\n    Math.ceil((numStars * 4 - level) / 4);\n  static numberOfSubstatUnlocked = (state) =>\n    state.substats.reduce((sum, cur) =>\n      sum + (cur && cur.value ? 1 : 0), 0);\n  static getSubstatRollData = (subStatKey, numStars) => ArtifactSubStatsData?.[subStatKey]?.[numStars] ?? []\n  static getSubstatRolls = (subStatKey, subStatValue, numStars, defVal = []) => {\n    if (!numStars || !subStatKey || typeof subStatValue !== \"number\" || !subStatValue) return defVal\n    let rollData = this.getSubstatRollData(subStatKey, numStars)\n    if (!rollData.length) return defVal\n    if (rollData.includes(subStatValue)) return [[subStatValue]]\n    if (subStatValue > (rollData[rollData.length - 1] * (this.getNumUpgradesOrUnlocks(numStars) + 2)))//+2 instead of +1 to go over rounding\n      return defVal\n    let isFloat = Stat.getStatUnit(subStatKey) === \"%\"\n    //calculation is more expensive now, since its calculating all the combinations to test to get to the value.\n    let rolls = [];\n    let maxNumRoll = Math.round(subStatValue / rollData[0])\n    if (!maxNumRoll) return defVal;\n    const rollOption = (val, arr) => {\n      if (arr.length) {\n        if (arr.length > maxNumRoll) return;\n        let sum = arr.reduce((accu, v) => accu + v, 0)\n        if (isFloat) {\n          if (sum - val >= 0.101) return\n          if (closeEnoughFloat(sum, val))\n            return rolls.push(arr);\n        } else {\n          if (sum - val > 1) return\n          if (closeEnoughInt(sum, val))\n            return rolls.push(arr);\n        }\n      }\n      rollData.slice().reverse().forEach(roll => {\n        if (!arr.length || arr[arr.length - 1] >= roll)\n          rollOption(subStatValue, [...arr, roll])\n      })\n    }\n    rollOption(subStatValue, [])\n    return rolls;\n  }\n  static getSubstatEfficiency = (subStatKey, rolls = []) => {\n    let len = rolls.length\n    let sum = rolls.reduce((a, c) => a + c, 0)\n    let max = this.getSubstatAllMax(subStatKey) * len\n    return max ? clampPercent((sum / max) * 100) : 0\n  }\n\n  //ARTIFACT IN GENERAL\n  static substatsValidation(state) {\n    let { numStars = 0, level = 0, substats = [] } = state\n    //calculate rolls for substats\n    for (const substat of substats) {\n      let { key, value } = substat\n      let rollArr = Artifact.getSubstatRolls(key, value, numStars) || []\n      substat.rolls = rollArr[0] || []\n      if (rollArr.length > 1) substat.rollArr = rollArr\n      substat.efficiency = Artifact.getSubstatEfficiency(key, substat.rolls)\n    }\n    let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\n    state.currentEfficiency = currentEfficiency\n    state.maximumEfficiency = maximumEfficiency\n    //artifact validation logic\n    let errMsgs = []\n    for (const substat of substats)\n      if (!substat.rolls?.length && substat.key && substat.value)\n        errMsgs.push(\"One of the substat is invalid.\")\n\n    //only show this error when all substats are \"valid\"\n    if (!errMsgs.length && substats.some(substat => substat.rolls?.length > 1) && substats.some((substat) => !substat.rolls?.length))\n      errMsgs.push(\"One of the substat have >1 rolls, but not all substats are unlocked.\")\n\n    if (numStars) {\n      let currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\n      let leastNumRolls = Artifact.getBaseSubRollNumLow(numStars) + Math.floor(level / 4)\n      if (currentNumOfRolls < leastNumRolls) {//there might be substats with more rolls\n        for (const substat of substats) {\n          let rollslen = substat.rolls?.length\n          if (!rollslen || !substat.rollArr) continue\n          let moreRolls = substat.rollArr.filter(rolls => rolls.length > rollslen)\n          if (moreRolls.length) {\n            substat.rolls = moreRolls[0]\n            moreRolls.length > 1 ? (substat.rollArr = moreRolls) : (delete substat.rollArr)\n            substat.efficiency = Artifact.getSubstatEfficiency(substat.key, substat.rolls)\n            let { currentEfficiency, maximumEfficiency } = Artifact.getArtifactEfficiency(substats, numStars, level)\n            state.currentEfficiency = currentEfficiency\n            state.maximumEfficiency = maximumEfficiency\n          }\n          currentNumOfRolls = substats.reduce((sum, cur) => sum + (cur.rolls?.length || 0), 0);\n          if (currentNumOfRolls >= leastNumRolls) break;\n        }\n      }\n      if (currentNumOfRolls < leastNumRolls)\n        errMsgs.push(`Artifact should have at least ${leastNumRolls} Rolls, it currently only have ${currentNumOfRolls} Rolls.`)\n      else {\n        let rollsRemaining = Artifact.rollsRemaining(level, numStars);\n        let totalPossbleRolls = Artifact.totalPossibleRolls(numStars);\n        if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\n          errMsgs.push(`Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `)\n      }\n    }\n    return errMsgs\n  }\n  static getArtifactEfficiency(substats, numStars, level) {\n    if (!numStars) return { currentEfficiency: 0, maximumEfficiency: 0 }\n    // Relative to max star, so comparison between different * makes sense.\n    let totalPossbleRolls = Artifact.totalPossibleRolls(maxStar);\n    let rollsRemaining = Artifact.rollsRemaining(level, numStars);\n    let totalCurrentEfficiency = substats.reduce((sum, cur) => sum + (cur?.efficiency * cur?.rolls?.length || 0), 0);\n    let statKeys = substats.filter(({ key }) => key).map(({ key }) => key)\n    let maxPerRoll = 100 * Math.max(...(statKeys.length === 4 ? statKeys : Object.keys(ArtifactSubstatsMinMax)).map(\n      key => Artifact.getSubstatAllMax(key, numStars) / Artifact.getSubstatAllMax(key)\n    ))\n    let currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\n    let maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * maxPerRoll) / totalPossbleRolls);\n    return { currentEfficiency, maximumEfficiency }\n  }\n\n  static setToSlots = ArtifactBase.setToSlots;\n\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\n    if (!conditionalNum) return defVal\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\n    if (!conditional) return defVal\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\n    if (!stacks) return defVal\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\n  }\n\n  static getAllArtifactSetEffectsObj = (artifactConditionals = []) => {\n    let ArtifactSetEffectsObj = {};\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\n      let setEffect = {}\n      if (setObj.setEffects)\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\n          if (Object.keys(setEffectObj.stats || {}).length > 0)\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\n        })\n      if (Object.keys(setEffect).length > 0)\n        ArtifactSetEffectsObj[setKey] = setEffect;\n    })\n    artifactConditionals.forEach(({ srcKey: setKey, srcKey2: setNumKey, conditionalNum }) => {\n      let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\n      if (Object.keys(condStats).length > 0) {\n        ArtifactSetEffectsObj[setKey] ?? (ArtifactSetEffectsObj[setKey] = {})\n        ArtifactSetEffectsObj[setKey][setNumKey] ?? (ArtifactSetEffectsObj[setKey][setNumKey] = {})\n        Object.entries(condStats).forEach(([statKey, value]) =>\n          ArtifactSetEffectsObj[setKey][setNumKey][statKey] = (ArtifactSetEffectsObj[setKey][setNumKey][statKey] || 0) + value)\n      }\n    })\n    return ArtifactSetEffectsObj\n  }\n\n  //database manipulation\n  static equipArtifactOnChar(artifactId, characterKey) {\n    let art = ArtifactDatabase.get(artifactId);\n    if (!art) return;\n    let currentLocation = art.location;\n    let intendedLocation = (characterKey || \"\")\n    if (currentLocation === intendedLocation) return;\n    let slotKey = art.slotKey\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\n    let artifactToSwapWith = ArtifactDatabase.get(artifactToSwapWithid)\n\n    //update artifact\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\n\n    //update Character\n    if (intendedLocation)\n      CharacterDatabase.equipArtifact(intendedLocation, art)\n\n    if (currentLocation) {\n      if (artifactToSwapWith)\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\n      else\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\n    }\n  }\n}\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { clamp } from \"./Util\";\n\nexport default class ConditionalsUtil {\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\n  static getConditionalNum(conditionals, srcKeyObj) {\n    let { srcKey, srcKey2 } = srcKeyObj\n    if (conditionals)\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\n  }\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\n    let { srcKey, srcKey2 } = srcKeyObj\n    if (!conditionals) conditionals = []\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\n    if (!conditionalNum && index >= 0) {\n      //setting conditionalNum to 0 deletes the element\n      conditionals.splice(index, 1);\n    } else if (!conditionalNum && index < 0) { //nothing to change\n      return conditionals\n    } else {\n      let newCond = { srcKey, conditionalNum }\n      if (srcKey2) newCond.srcKey2 = srcKey2\n      if (index >= 0)\n        conditionals[index] = newCond\n      else\n        conditionals.push(newCond)\n    }\n    return conditionals\n  }\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\n    if (Array.isArray(conditional)) {\n      //multiconditional\n      let selectedConditionalNum = conditionalNum\n      let selectedConditional = null\n      for (const curConditional of conditional) {\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\n        else {\n          selectedConditional = curConditional;\n          break;\n        }\n      }\n      if (!selectedConditional) return defVal\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\n      return [selectedConditional[fieldName], stacks]\n    } else {\n      //condtional with stacks\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\n      return [conditional[fieldName], stacks]\n    }\n  }\n}","import { deepClone, loadFromLocalStorage, saveToLocalStorage } from \"../Util/Util\";\nvar initiated = false\nvar artifactDatabase = {};\nvar artIdIndex = 1;\nexport default class ArtifactDatabase {\n  //do not instantiate.\n  constructor() {\n    if (this instanceof ArtifactDatabase) {\n      throw Error('A static class cannot be instantiated.');\n    }\n  }\n  static isInvalid = (art) =>\n    !art || !art.setKey || !art.numStars || !art.slotKey || !art.mainStatKey\n  static getArtifactDatabase = () => deepClone(artifactDatabase);\n  static getArtifactIdList = () => Object.keys(artifactDatabase);\n  static populateDatebaseFromLocalStorage = () => {\n    if (initiated && process.env.NODE_ENV !== \"development\") return false;\n    Object.keys(localStorage).filter(key => key.includes(\"artifact_\")).forEach(id => {\n      if (!artifactDatabase[id]) {\n        let art = loadFromLocalStorage(id)\n        if (!art) return;\n        if (this.isInvalid(art)) {\n          this.removeArtifactById(id);\n          return;\n        }\n        artifactDatabase[id] = art;\n      }\n    })\n    initiated = true\n    return true\n  }\n  static get = (id) => artifactDatabase[id] ?? null\n  static removeArtifact = (art) => {\n    this.removeArtifactById(art.id);\n  }\n  static updateArtifact = (art) => {\n    if (this.isInvalid(art)) return;\n    let id = art.id;\n    if (!id) {//if does not have id, generate ID\n      do {\n        id = `artifact_${artIdIndex++}`\n      } while (localStorage.getItem(id) !== null)\n      art.id = id\n    }\n    let dart = deepClone(art)\n    saveToLocalStorage(id, dart);\n    artifactDatabase[id] = dart;\n  }\n  static removeArtifactById = (artId) => {\n    delete artifactDatabase[artId];\n    localStorage.removeItem(artId);\n  }\n\n  static moveToNewLocation = (artid, location) => {\n    if (!artid) return;\n    let art = this.get(artid)\n    if (!art || art.location === location) return;\n    art.location = location;\n    this.updateArtifact(art);\n  }\n  static swapLocations = (artA, artB) => {\n    let locA = artA.location\n    let locB = artB.location\n    this.moveToNewLocation(artA.id, locB)\n    this.moveToNewLocation(artB.id, locA)\n  }\n  static swapLocationsById = (artAid, artBid) =>\n    this.swapLocations(this.get(artAid), this.get(artBid))\n  static unequipAllArtifacts = () => {\n    Object.values(artifactDatabase).forEach(art => {\n      art.location = \"\"\n      this.updateArtifact(art)\n    })\n  }\n  //helper function for testing\n  static clearDatabase = () => {\n    artifactDatabase = {}\n    initiated = false\n    artIdIndex = 1\n  }\n}","const ElementalData = {\n  physical: { name: \"Physical\" },\n  anemo: { name: \"Anemo\" },\n  geo: { name: \"Geo\" },\n  electro: { name: \"Electro\" },\n  hydro: { name: \"Hydro\" },\n  pyro: { name: \"Pyro\" },\n  cryo: { name: \"Cryo\" },\n  // dendro: { name: \"Dendro\" }\n}\nexport default ElementalData"],"sourceRoot":""}