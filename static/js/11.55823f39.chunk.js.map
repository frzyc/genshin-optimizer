{"version":3,"sources":["Components/StarDisplay.js","Weapon/Weapon.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","Components/CustomFormControl.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js","Components/ConditionalSelector.js","Assets/Element_Anemo.png","Assets/Assets.js","Assets/Element_Cryo.png","Assets/Element_Dendro.png","Assets/Element_Electro.png","Assets/Element_Geo.png","Assets/Element_Hydro.png","Assets/Element_Pyro.png","Assets/Weapon-class-bow-icon.png","Assets/Weapon-class-catalyst-icon.png","Assets/Weapon-class-claymore-icon.png","Assets/Weapon-class-polearm-icon.png","Assets/Weapon-class-sword-icon.png","Assets/Item_Fragile_Resin.png","Assets/Item_Condensed_Resin.png","Assets/Item_Wanderer's_Advice.png","Assets/Item_Hero's_Wit.png","Assets/Item_Adventurer's_Experience.png","Data/WeaponData.js","Components/StatIcon.js","Artifact/PercentBadge.js","Data/CharacterData.js","../node_modules/react-bootstrap/esm/Badge.js","Artifact/ArtifactCard.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/StatDisplay.js","Character/CharacterDisplay/CharacterArtifactPane.js","Character/StatInput.js","Character/CharacterDisplay/CharacterOverviewPane.js","Character/CharacterDisplay/CharacterTalentPane.js","Character/CharacterDisplayCard.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","Character/Character.js","Stat.js","Components/SlotIcon.js","Data/ArtifactData.js","Artifact/ArtifactBase.js","Artifact/Artifact.js","Util/ConditionalsUtil.js"],"names":["StarIcon","icon","faStar","Stars","props","className","colored","stars","Array","keys","map","_","i","Weapon","this","Error","getWeaponDataImport","WeaponDataImport","getLevelName","levelKey","defVal","LevelNameData","getLevelIndex","WeaponLevelKeys","indexOf","getWeaponName","weaponKey","WeaponData","name","getWeaponRarity","rarity","getWeaponPassiveName","passiveName","getWeaponPassiveDescription","refineIndex","charFinalStats","character","passiveDescription","getWeaponDescription","description","getWeaponConditional","conditional","getWeaponImg","img","getWeaponMainStatVal","baseStats","main","getWeaponSubStatVal","sub","getWeaponSubStatKey","subStatKey","getWeaponBonusStat","stats","getWeaponsOfType","weaponType","Object","fromEntries","entries","filter","getWeaponTypeName","WeaponTypeData","getWeaponMainStatValWithOverride","weaponObj","overrideMainVal","key","getWeaponSubStatValWithOverride","overrideSubVal","getWeaponConditionalStat","conditionalNum","ConditionalsUtil","getConditionalProp","stacks","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","FloatFormControl","placeholder","onValueChange","disabled","useState","focus","setFocus","type","toString","onChange","e","target","parseFloat","onFocus","onBlur","IntFormControl","parseInt","resolveContainerRef","ref","_ref","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","resolvedRef","setRef","earlyRef","nextRef","ConditionalSelector","setConditional","defEle","isArray","selectedConditionalNum","selectedConditional","curConditional","maxStack","text","condition","badge","variant","count","Toggle","size","Menu","Item","onClick","condial","Fragment","v","stack","tempcount","faCheckSquare","faSquare","Assets","elements","anemo","cryo","dendro","electro","geo","hydro","pyro","weaponTypes","bow","catalyst","claymore","polearm","sword","resin","fragile","condensed","exp_books","advice","wit","experience","then","imp","default","StatIcon","hp_base","faTint","hp_final","hp_","hp","atk_base","faFistRaised","atk_final","atk_","atk","def_base","faShieldAlt","def_final","def_","def","ele_mas","faMagic","crit_rate","faDice","crit_dmg","faDiceD20","ener_rech","faSync","heal_bonu","faFirstAid","StatIconEle","statKey","PercentBadge","percent","valid","children","badgeColor","isNaN","Math","floor","CharacterData","CharacterDataImport","LevelsData","level","asend","characterStatBase","stam","CharacterSpecializedStatKey","Badge","React","forwardRef","bsPrefix","pill","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","ArtifactCard","artifactId","forceUpdate","onEdit","onDelete","assumeFull","equipOnChar","charId","Artifact","equipArtifactOnChar","art","ArtifactDatabase","getArtifact","artifactValidation","locationChar","CharacterDatabase","getCharacter","location","mainStatLevel","numStars","assFullColor","mainStatVal","getMainStatValue","mainStatKey","Stat","getStatUnit","border","bg","Header","xs","md","src","getPieceIcon","setKey","slotKey","thumbnail","getPieceName","getSlotNameWithIcon","Body","Title","getSetName","getStatName","substats","stat","subStatValidation","subStatValidations","numRolls","rolls","length","efficiency","effOpacity","statName","toFixed","style","opacity","tooltip","msg","currentEfficiency","maximumEfficiency","Footer","getCharacterDatabase","id","char","placement","overlay","pointerEvents","lock","updateArtifact","faLock","faLockOpen","Boolean","faEdit","faTrashAlt","TabContainer","_useUncontrolled","useUncontrolled","activeKey","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","useMemo","tabContext","getControlledId","getControllerId","TabContext","Provider","SelectableContext","TabContent","decoratedBsPrefix","TabPane","_useTabContext","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","Tab","_React$Component","apply","arguments","_inheritsLoose","prototype","render","Container","Content","Pane","createContext","useAccordionToggle","contextEventKey","AccordionContext","AccordionToggle","accordionOnClick","AccordionCollapse","Collapse","Children","only","Accordion","_useUncontrolled$as","controlledProps","finalClassName","_objectWithoutProperties","source","excluded","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","DisplayStats","statVal","build","editable","otherProps","buildVal","finalStats","buildDiff","originalVal","Character","getStatValueWithOverride","diff","diffText","fixedUnit","hasOverride","Col","DisplayNewBuildDiff","equippedBuild","newBuild","unit","CharacterArtifactPane","characterKey","compareAgainstEquipped","artifactConditionals","setState","showOther","setShowOther","artifactsAssumeFull","statKeys","getDisplayStatKeys","displayStatProps","displayNewBuildProps","formulaDependencyKeys","Set","GetDependencyStats","formulaOverrides","flat","formulaKeys","FormulaText","includes","Row","Card","Button","xl","printStat","printFormula","equipArtifacts","artifactIds","Alert","sm","lg","getSetEffects","setToSlots","setNumKeyArr","setNumKey","setStats","getArtifactSetNumStats","getSetEffectConditional","getConditionalNum","srcKey","srcKey2","getConditionalStats","forEach","val","conditionalElement","cnum","state","setStateArtifactConditional","getSetEffectText","values","artid","StatInput","prependEle","defaultValue","restProps","InputGroup","Prepend","Text","Append","undefined","OverlayTrigger","Tooltip","faUndo","CharacterOverviewPane","constellation","setOverride","setConstellation","editLevel","setEditLevel","elementKey","getElementalKey","weaponTypeKey","getWeaponTypeKey","Img","getCard","getName","Image","getStar","clamp","getLevel","faSave","getConstellationName","getConstellationImg","cursor","roundedCircle","WeaponStatsEditorCard","MainStatsCards","editing","SetEditing","showDescription","setShowDescription","weapon","setStateWeapon","weaponDisplayMainVal","weaponDisplaySubVal","weaponPassiveName","weaponBonusStats","conditionalStats","conditionalEle","faQuoteLeft","DropdownButton","title","reverse","star","arr","Dropdown","ItemText","Divider","faGavel","editingOther","SetEditingOther","additionalKeys","displayStatKeys","push","editStatKeys","otherStatKeys","getElementalKeys","ele","miscStatkeys","specializedStatKey","specializedStatVal","specializedStatUnit","percentSpecialStatSlect","specialStatProps","specialStatInput","getStatNamePretty","getBaseStatValue","getStatNameWithPercent","getStatNameRaw","CharacterTalentPane","dmgMode","ascension","getAscension","skillDisplayProps","ContextAwareToggle","callback","currentEventKey","decoratedOnClick","expanded","faWindowMinimize","faWindowMaximize","ToggleButtonGroup","ToggleButton","href","rel","eleKey","immunityStatKey","elementImmunity","isAutoElemental","isAutoInfusable","autoKeys","getTalentStatKey","autoInfused","statsDisplayKeys","ReactionDisplay","tKey","tText","SkillDisplayCard","talentKey","subtitle","asc","enabled","onClickTitle","ReactionComponents","superconduct_dmg","electrocharged_dmg","overloaded_dmg","swirl_dmg","shatter_dmg","information","faQuestionCircle","crystalize_dmg","reactionMode","charEleKey","eleInterArr","ElementToReactionKeys","Ele","talentLimits","header","getTalentLevelKey","talentLvlKey","levelBoost","infuseBtn","getElementalName","tLvl","talentLevelKeys","statsEle","talentStats","getTalentStats","ListGroup","index","getTalentImg","getTalentName","Subtitle","getTalentDocument","section","talentText","fields","talentConditionals","conditionalKey","conditionalFields","getTalentConditionalStats","getTalentConditionalFields","condField","FieldDisplay","field","fieldText","fieldVariant","fieldBasic","basicVal","fieldVal","finalVal","round","fieldEquippedVal","CustomMenu","labeledBy","minWidth","aria-labelledby","toArray","child","CharacterDisplayCard","forceUpdateComponent","setSetState","setCharacterKey","getRandomElementFromArray","getTitles","getIntialWeapon","setLevelKey","baseStatOverrides","DatabaseInitAndVerify","characterId","getInitialState","Promise","all","getCharacterDataImport","getDataImport","deepClone","updateCharacter","addCharacter","footer","onClose","calculateBuild","HeaderIconDisplay","getThumb","ButtonGroup","DropdownToggle","getAllCharacterKeys","charKey","getlevelNames","getlevelKeys","lvlKey","faSignature","FormControl","faTimes","defaultActiveKey","Nav","Link","getCDataObj","talent","skill","initialState","equippedArtifacts","auto","burst","ListGroupItem","action","handleClick","useCallback","event","preventDefault","stopPropagation","tabIndex","AbstractNavItem","horizontal","horizontalVariant","initialBsPrefix","AbstractNav","moveToNewLocation","removeCharacterById","getSpecializedStatKey","getSpeicalizedStatVal","characterObj","baseStat","getIndexFromlevelkey","elementalKey","ElementalData","constellationName","titles","getSpecializedStat","specializeStat","thumbImg","cardImg","constIndex","getTalentLevelBoost","talents","talentBoost","boostEntry","find","withBoost","getTalentFields","getTalentStatsAll","statsArr","getTalentConditional","doc","cond","tempCond","skillKey","elemental","infusable","getTalentStatKeyVariant","atkKeys","startsWith","replace","artIdsOnCharacter","artIdsNotOnCharacter","getSlotKeys","artNotOnChar","artOnChar","notCharLoc","equipArtifact","artifacts","initialStats","calculateCharacterWithWeaponStats","calculateBuildWithObjs","artifactSetEffectsStats","getArtifactSetEffectsStats","substat","AttachLazyFormulas","char_ele_key","overrides","hasOwnProperty","specialStatKey","addStatsObj","weaponStats","subKey","subVal","bonusStats","htmlStatsData","StatData","pretty","getStatVariant","f","expand","formulaOverride","OverrideFormulas","printOverrideFormula","options","overrideKey","OverrideFormulasText","formulaText","obj","statUnit","o","norm_atk_dmg","norm_atk_crit_dmg","norm_atk_avg_dmg","norm_atk_crit_multi","norm_atk_bonus_multi","char_atk_dmg","char_atk_crit_dmg","char_atk_avg_dmg","char_atk_crit_multi","char_atk_bonus_multi","plunge_dmg","plunge_crit_dmg","plunge_avg_dmg","plunge_bonus_multi","phy_dmg","phy_crit_dmg","phy_avg_dmg","phy_bonus_multi","crit_dmg_multi","crit_multi","skill_crit_multi","burst_crit_multi","enemy_level_multi","enemy_phy_res_multi","enemy_phy_immunity","res","enemy_phy_res","overloaded_multi","ReactionMatrix","overloaded","reactionMatrixElementRenderer","electrocharged_multi","electrocharged","superconduct_multi","superconduct","swirl_multi","swirl","shatter_multi","shattered","crystalize_multi","crystalize","pyro_vaporize_multi","hydro_vaporize_multi","pyro_melt_multi","cryo_melt_multi","trans_reaction_base_multi","ele_mas_multi_x","ele_mas_multi_y","ele_mas_multi_z","sign","disVal","abs","powerText","reactionKey","baseEle","atkType","reactionDMGKey","baseDmg","eleFormulaText","ele_dmg","ele_crit_dmg","ele_avg_dmg","ele_bonus_multi","skill_dmg","skill_crit_dmg","skill_avg_dmg","skill_bonus_multi","burst_dmg","burst_crit_dmg","burst_avg_dmg","burst_bonus_multi","enemy_ele_res_multi","func","defineProperty","configurable","enumerable","writable","noelle_burst_atk","SlotIcon","flower","faBahai","plume","faFeatherAlt","sands","faHourglass","goblet","faWineGlass","circlet","faCrown","ArtifactData","ArtifactDataImport","ArtifactMainSlotKeys","ArtifactStarsData","3","subsBaselow","subBaseHigh","numUpgradesOrUnlocks","4","5","ArtifactMainStatsData","1","phy_dmg_bonus","ele_dmg_bonus","2","ArtifactSubStatsData","ArtifactSlotsData","ArtifactBase","rollData","float","roll","maxNumRoll","rollOption","sum","reduce","accu","closeEnoughFloat","closeEnoughInt","slice","isFloat","getSubstatRollData","getRolls","totalAllowableRolls","min","max","clampPercent","join","validateSubStat","some","currentNumOfRolls","cur","rollsRemaining","totalPossbleRolls","totalPossibleRolls","totalCurrentEfficiency","totalPossbleUpgrade","currentLocation","intendedLocation","artifactToSwapWithid","getArtifactIDFromSlot","artifactToSwapWith","swapLocations","unequipArtifactOnSlot","getSetKeys","getSetsByMaxStarEntries","setobj","getPieces","pieces","icons","getSetEffectsObj","setEffects","artifactSetEffect","artArr","setNumKeys","setEffectText","getSlotName","getSlotIcon","getSlotMainStatKeys","slotIcon","splitArtifactsBySlot","databaseObj","getStars","getRarityArr","getMainStatKeys","getMainStatValues","numStar","getBaseSubRollNumLow","getBaseSubRollNumHigh","getNumUpgradesOrUnlocks","getSubStatKeys","ceil","numberOfSubstatUnlocked","getAllArtifactSetEffectsObj","ArtifactSetEffectsObj","setObj","setEffect","hasSetEffect","setEffectObj","condStats","conditionals","srcKeyObj","findIndex","splice","newCond","fieldName"],"mappings":"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","file":"static/js/11.55823f39.chunk.js","sourcesContent":["import { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StarIcon = () => <FontAwesomeIcon icon={faStar} />\r\nconst Stars = (props) => <span className={props.colored ? \"text-5star\" : \"\"}>\r\n  {props.stars ? [...Array(props.stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\r\n</span>\r\n\r\nexport {\r\n  StarIcon,\r\n  Stars\r\n}\r\n","import { LevelNameData, WeaponData, WeaponDataImport, WeaponLevelKeys, WeaponTypeData } from '../Data/WeaponData.js';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil.js';\r\nexport default class Weapon {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Weapon) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  static getWeaponDataImport = () => WeaponDataImport\r\n  static getLevelName = (levelKey, defVal = \"\") => (LevelNameData[levelKey] || defVal)\r\n  static getLevelIndex = (levelKey) => WeaponLevelKeys.indexOf(levelKey)\r\n\r\n  static getWeaponName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.name || defVal)\r\n  static getWeaponRarity = (weaponKey, defVal = 0) => (WeaponData[weaponKey]?.rarity || defVal)\r\n  static getWeaponPassiveName = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.passiveName || defVal)\r\n  static getWeaponPassiveDescription = (weaponKey, refineIndex, charFinalStats, character, defVal = \"\") => (WeaponData[weaponKey]?.passiveDescription?.(refineIndex, charFinalStats, character) || defVal)\r\n  static getWeaponDescription = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.description || defVal)\r\n  static getWeaponConditional = (weaponKey, defVal = null) => (WeaponData[weaponKey]?.conditional || defVal)\r\n  static getWeaponImg = (weaponKey, defVal = null) => WeaponData[weaponKey]?.img || defVal\r\n\r\n  //base Stat\r\n  static getWeaponMainStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.main?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatVal = (weaponKey, levelKey, defVal = 0) => (WeaponData[weaponKey]?.baseStats?.sub?.[this.getLevelIndex(levelKey)] || defVal)\r\n  static getWeaponSubStatKey = (weaponKey, defVal = \"\") => (WeaponData[weaponKey]?.baseStats?.subStatKey || defVal)\r\n  static getWeaponBonusStat = (weaponKey, refineIndex) => WeaponData[weaponKey]?.stats?.(refineIndex)\r\n\r\n  static getWeaponsOfType = (weaponType) => Object.fromEntries(Object.entries(WeaponData).filter(([key, weaponObj]) => weaponObj.weaponType === weaponType))\r\n  static getWeaponTypeName = (weaponType, defVal = \"\") => (WeaponTypeData[weaponType] || defVal)\r\n\r\n  static getWeaponMainStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideMainVal || this.getWeaponMainStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n  static getWeaponSubStatValWithOverride = (weaponObj, defVal = 0) =>\r\n    weaponObj?.overrideSubVal || this.getWeaponSubStatVal(weaponObj?.key, weaponObj?.levelKey, defVal);\r\n\r\n  static getWeaponConditionalStat = (weaponKey, refineIndex, conditionalNum, defVal = null) => {\r\n    let conditional = this.getWeaponConditional(weaponKey)\r\n    if (!conditional || !conditionalNum) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats(refineIndex)).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import React, { useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst FloatFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseFloat(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\n\r\nconst IntFormControl = ({ placeholder, value, onValueChange, disabled }) => {\r\n  let [focus, setFocus] = useState(false)\r\n  return <FormControl type=\"number\" className=\"hide-appearance\"\r\n    placeholder={placeholder}\r\n    value={!value && focus ? \"\" : value?.toString?.() || value}\r\n    disabled={disabled}\r\n    onChange={(e) => {\r\n      let value = e.target.value;\r\n      value = parseInt(value) || 0\r\n      onValueChange?.(value);\r\n    }}\r\n    onFocus={() => setFocus(true)}\r\n    onBlur={() => setFocus(false)}\r\n  />\r\n}\r\n\r\nexport {\r\n  FloatFormControl,\r\n  IntFormControl\r\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function ConditionalSelector(props) {\r\n  let { conditional, conditionalNum, setConditional, defEle, disabled } = props\r\n  if (!conditional) return defEle\r\n  if (Array.isArray(conditional)) {\r\n    let selectedConditionalNum = conditionalNum\r\n    let selectedConditional = null\r\n    for (const curConditional of conditional) {\r\n      if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n      else {\r\n        selectedConditional = curConditional;\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedConditional) {\r\n      selectedConditionalNum = 0\r\n      selectedConditional = conditional[0]\r\n    }\r\n\r\n    //multi conditional\r\n    let text = selectedConditionalNum === 0 ? \"Not Active\" :\r\n      (<span>{selectedConditional.condition} {(selectedConditional.maxStack > 1 ? (`: ${selectedConditionalNum} stack${selectedConditionalNum > 1 ? \"s\" : \"\"}`) : \"\")}</span>)\r\n    let badge = <Badge variant={selectedConditionalNum === 0 ? \"secondary\" : \"success\"}>{text}</Badge>\r\n    let count = 0;\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {conditional.map((condial, i) =>\r\n          <React.Fragment key={i}>{[...Array(condial.maxStack).keys()].map(v => v + 1).map(stack => {\r\n            let tempcount = ++count\r\n            return <Dropdown.Item key={tempcount} onClick={() => setConditional(tempcount)}>\r\n              {condial.condition}{selectedConditional.maxStack > 1 ? `: ${stack} stack${stack > 1 ? \"s\" : \"\"}` : \"\"}\r\n            </Dropdown.Item>\r\n          })}</React.Fragment>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack > 1) {\r\n    //stacking conditional\r\n    let badge = <Badge variant={conditionalNum === 0 ? \"secondary\" : \"success\"}>{conditionalNum > 0 ? `${conditionalNum} stack${conditionalNum > 1 ? \"s\" : \"\"}` : \"Not Active\"}</Badge>\r\n    return <Dropdown>\r\n      <Dropdown.Toggle size=\"sm\" disabled={disabled}>\r\n        <h6 className=\"mb-0 d-inline\">{defEle} {badge}</h6>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={() => setConditional(0)}>\r\n          <span>Not Active</span>\r\n        </Dropdown.Item>\r\n        {[...Array(conditional.maxStack).keys()].map(v => v + 1).map(stack =>\r\n          <Dropdown.Item key={stack} onClick={() => setConditional(stack)}>\r\n            {`${stack} stack${stack > 1 ? \"s\" : \"\"}`}\r\n          </Dropdown.Item>)}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  } else if (conditional.maxStack === 1) {\r\n    //single boolean conditional\r\n    return <Button size=\"sm\" onClick={() => setConditional(conditionalNum ? 0 : 1)} disabled={disabled}>\r\n      <h6 className=\"mb-0\"><FontAwesomeIcon icon={conditionalNum ? faCheckSquare : faSquare} /> {defEle}</h6>\r\n    </Button>\r\n  }\r\n\r\n}","export default __webpack_public_path__ + \"static/media/Element_Anemo.f809fde3.png\";","import anemo from './Element_Anemo.png'\r\nimport cryo from './Element_Cryo.png'\r\nimport dendro from './Element_Dendro.png'\r\nimport electro from './Element_Electro.png'\r\nimport geo from './Element_Geo.png'\r\nimport hydro from './Element_Hydro.png'\r\nimport pyro from './Element_Pyro.png'\r\n\r\nimport bow from './Weapon-class-bow-icon.png'\r\nimport catalyst from './Weapon-class-catalyst-icon.png'\r\nimport claymore from './Weapon-class-claymore-icon.png'\r\nimport polearm from './Weapon-class-polearm-icon.png'\r\nimport sword from './Weapon-class-sword-icon.png'\r\n\r\nimport fragile from './Item_Fragile_Resin.png'\r\nimport condensed from './Item_Condensed_Resin.png'\r\n\r\n//EXP BOOKS\r\nimport advice from './Item_Wanderer\\'s_Advice.png'\r\nimport wit from './Item_Hero\\'s_Wit.png'\r\nimport experience from './Item_Adventurer\\'s_Experience.png'\r\n\r\nlet Assets = {\r\n  elements: { anemo, cryo, dendro, electro, geo, hydro, pyro },\r\n  weaponTypes: { bow, catalyst, claymore, polearm, sword },\r\n  resin: {\r\n    fragile,\r\n    condensed\r\n  },\r\n  exp_books: {\r\n    advice,\r\n    wit,\r\n    experience,\r\n  }\r\n};\r\nexport default Assets;","export default __webpack_public_path__ + \"static/media/Element_Cryo.019d72f9.png\";","export default __webpack_public_path__ + \"static/media/Element_Dendro.8ee0f26d.png\";","export default __webpack_public_path__ + \"static/media/Element_Electro.342332ac.png\";","export default __webpack_public_path__ + \"static/media/Element_Geo.b7e865c6.png\";","export default __webpack_public_path__ + \"static/media/Element_Hydro.f2f8bd8a.png\";","export default __webpack_public_path__ + \"static/media/Element_Pyro.f65c2e38.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-bow-icon.b8e7b5ca.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-catalyst-icon.2cbef800.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-claymore-icon.17418b20.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-polearm-icon.a4e7fffc.png\";","export default __webpack_public_path__ + \"static/media/Weapon-class-sword-icon.4470b487.png\";","export default __webpack_public_path__ + \"static/media/Item_Fragile_Resin.f9ec8223.png\";","export default __webpack_public_path__ + \"static/media/Item_Condensed_Resin.1cecf64a.png\";","export default __webpack_public_path__ + \"static/media/Item_Wanderer's_Advice.58c62cf7.png\";","export default __webpack_public_path__ + \"static/media/Item_Hero's_Wit.a79e36d0.png\";","export default __webpack_public_path__ + \"static/media/Item_Adventurer's_Experience.92b5d195.png\";","let WeaponData = {}\r\nlet WeaponDataImport = import('./Weapons')\r\nWeaponDataImport.then(imp => {\r\n  WeaponData = imp.default\r\n  WeaponDataImport = null\r\n})\r\n\r\nconst WeaponLevelKeys = [\"L1\", \"L5\", \"L10\", \"L15\", \"L20\", \"L20A\", \"L25\", \"L30\", \"L35\", \"L40\", \"L40A\", \"L45\", \"L50\", \"L50A\", \"L55\", \"L60\", \"L60A\", \"L65\", \"L70\", \"L70A\", \"L75\", \"L80\", \"L80A\", \"L85\", \"L90\",]\r\nconst LevelNameData = { \"L1\": \"Lvl. 1\", \"L5\": \"Lvl. 5\", \"L10\": \"Lvl. 10\", \"L15\": \"Lvl. 15\", \"L20\": \"Lvl. 20\", \"L20A\": \"Lvl. 20A\", \"L25\": \"Lvl. 25\", \"L30\": \"Lvl. 30\", \"L35\": \"Lvl. 35\", \"L40\": \"Lvl. 40\", \"L40A\": \"Lvl. 40A\", \"L45\": \"Lvl. 45\", \"L50\": \"Lvl. 50\", \"L50A\": \"Lvl. 50A\", \"L55\": \"Lvl. 55\", \"L60\": \"Lvl. 60\", \"L60A\": \"Lvl. 60A\", \"L65\": \"Lvl. 65\", \"L70\": \"Lvl. 70\", \"L70A\": \"Lvl. 70A\", \"L75\": \"Lvl. 75\", \"L80\": \"Lvl. 80\", \"L80A\": \"Lvl. 80A\", \"L85\": \"Lvl. 85\", \"L90\": \"Lvl. 90\", }\r\nconst WeaponTypeData = {\r\n  sword: \"Sword\",\r\n  claymore: \"Claymore\",\r\n  catalyst: \"Catalyst\",\r\n  bow: \"Bow\",\r\n  polearm: \"Polearm\"\r\n}\r\n\r\nexport {\r\n  WeaponData,\r\n  WeaponDataImport,\r\n  WeaponLevelKeys,\r\n  LevelNameData,\r\n  WeaponTypeData\r\n}","import { faDice, faDiceD20, faFirstAid, faFistRaised, faMagic, faShieldAlt, faSync, faTint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst StatIcon = {\r\n  hp_base: faTint,\r\n  hp_final: faTint,\r\n  hp_: faTint,\r\n  hp: faTint,\r\n\r\n  atk_base: faFistRaised,\r\n  atk_final: faFistRaised,\r\n  atk_: faFistRaised,\r\n  atk: faFistRaised,\r\n\r\n  def_base: faShieldAlt,\r\n  def_final: faShieldAlt,\r\n  def_: faShieldAlt,\r\n  def: faShieldAlt,\r\n\r\n  ele_mas: faMagic,\r\n  crit_rate: faDice,\r\n  crit_dmg: faDiceD20,\r\n  ener_rech: faSync,\r\n  heal_bonu: faFirstAid,\r\n}\r\n\r\nconst StatIconEle = (statKey) =>\r\n  StatIcon[statKey] ? <FontAwesomeIcon icon={StatIcon[statKey]} className=\"fa-fw\" /> : null\r\n\r\nexport default StatIcon\r\n\r\nexport {\r\n  StatIconEle\r\n}","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function PercentBadge(props) {\r\n  let { percent, valid, children } = props\r\n  let badgeColor = !valid ? \"danger\" : (isNaN(percent) ? \"secondary\" : `${Math.floor(percent * 0.05) + 1}roll`)\r\n  return <Badge variant={badgeColor} className={badgeColor === \"secondary\" ? \"\" : \"text-darkcontent\"}>{children}</Badge>\r\n}\r\n","let CharacterData = {}\r\nlet CharacterDataImport = import('./Characters')\r\nCharacterDataImport.then(imp => {\r\n  CharacterData = imp.default\r\n  CharacterDataImport = null\r\n})\r\n// import characters from \r\nconst LevelsData = {\r\n  \"L1\": {\r\n    name: \"Lv. 1\",\r\n    level: 1,\r\n    asend: 0\r\n  },\r\n  \"L20\": {\r\n    name: \"Lv. 20\",\r\n    level: 20,\r\n    asend: 0\r\n  },\r\n  \"L20A\": {\r\n    name: \"Lv. 20 As.1\",\r\n    level: 20,\r\n    asend: 1\r\n\r\n  },\r\n  \"L40\": {\r\n    name: \"Lv. 40\",\r\n    level: 40,\r\n    asend: 1\r\n  },\r\n  \"L40A\": {\r\n    name: \"Lv. 40 As.2\",\r\n    level: 40,\r\n    asend: 2\r\n  },\r\n\r\n  \"L50\": {\r\n    name: \"Lv. 50\",\r\n    level: 50,\r\n    asend: 2\r\n  },\r\n  \"L50A\": {\r\n    name: \"Lv. 50 As.3\",\r\n    level: 50,\r\n    asend: 3\r\n  },\r\n  \"L60\": {\r\n    name: \"Lv. 60\",\r\n    level: 60,\r\n    asend: 3\r\n  },\r\n  \"L60A\": {\r\n    name: \"Lv. 60 As.4\",\r\n    level: 60,\r\n    asend: 4\r\n  },\r\n  \"L70\": {\r\n    name: \"Lv. 70\",\r\n    level: 70,\r\n    asend: 4\r\n  },\r\n  \"L70A\": {\r\n    name: \"Lv. 70 As.5\",\r\n    level: 70,\r\n    asend: 5\r\n  },\r\n\r\n  \"L80\": {\r\n    name: \"Lv. 80\",\r\n    level: 80,\r\n    asend: 5\r\n  },\r\n  \"L80A\": {\r\n    name: \"Lv. 80 As.6\",\r\n    level: 80,\r\n    asend: 6\r\n  },\r\n  \"L90\": {\r\n    name: \"Lv. 90\",\r\n    level: 90,\r\n    asend: 6\r\n  }\r\n\r\n}\r\nconst characterStatBase = {\r\n  crit_rate: 5,\r\n  crit_dmg: 50,\r\n  ener_rech: 100,\r\n  stam: 100\r\n}\r\nconst CharacterSpecializedStatKey = [\"hp_\", \"atk_\", \"def_\", \"ele_mas\", \"ener_rech\", \"heal_bonu\", \"crit_rate\", \"crit_dmg\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\"]\r\n\r\nexport {\r\n  LevelsData,\r\n  characterStatBase,\r\n  CharacterData,\r\n  CharacterDataImport,\r\n  CharacterSpecializedStatKey\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import { faEdit, faLock, faLockOpen, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, Image, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport { Stars } from '../Components/StarDisplay';\r\nimport Stat from '../Stat';\r\nimport Artifact from './Artifact';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\nimport PercentBadge from './PercentBadge';\r\nexport default function ArtifactCard({ artifactId, forceUpdate, onEdit, onDelete, assumeFull = false }) {\r\n  if (!artifactId) return null;\r\n  const equipOnChar = (charId) => {\r\n    Artifact.equipArtifactOnChar(artifactId, charId)\r\n    forceUpdate?.()\r\n  }\r\n\r\n  let art = ArtifactDatabase.getArtifact(artifactId);\r\n  let artifactValidation = Artifact.artifactValidation(art)\r\n  let locationChar = CharacterDatabase.getCharacter(art.location)\r\n  let location = locationChar ? locationChar.name : \"Inventory\"\r\n  let mainStatLevel = assumeFull ? art.numStars * 4 : art.level\r\n  let assFullColor = assumeFull && art.level !== art.numStars * 4\r\n  let mainStatVal = <span className={assFullColor ? \"text-orange\" : \"\"}>{Artifact.getMainStatValue(art.mainStatKey, art.numStars, mainStatLevel, \"\")}{Stat.getStatUnit(art.mainStatKey)}</span>\r\n  return (<Card className=\"h-100\" border={`${art.numStars}star`} bg=\"lightcontent\" text=\"lightfont\">\r\n    <Card.Header className=\"p-0\">\r\n      <Row>\r\n        <Col xs={2} md={3}>\r\n          <Image src={Artifact.getPieceIcon(art.setKey, art.slotKey)} className={`w-100 h-auto grad-${art.numStars}star m-1`} thumbnail />\r\n        </Col>\r\n        <Col className=\"pt-3\">\r\n          <h6><b>{Artifact.getPieceName(art.setKey, art.slotKey, \"Unknown Piece Name\")}</b></h6>\r\n          <div>{Artifact.getSlotNameWithIcon(art.slotKey)}{` +${art.level}`}</div>\r\n        </Col>\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body className=\"d-flex flex-column py-2\">\r\n      <Card.Title>\r\n        <div>{Artifact.getSetName(art.setKey, \"Artifact Set\")}</div>\r\n        <small className=\"text-halfsize\"><Stars stars={art.numStars} /></small>\r\n      </Card.Title>\r\n      <h5 className=\"mb-1\">\r\n        <b>{Stat.getStatName(art.mainStatKey)} {mainStatVal}</b>\r\n      </h5>\r\n      <Row className=\"mb-0\">\r\n        {art.substats ? art.substats.map((stat, i) => {\r\n          if (!stat || !stat.value) return null\r\n          let subStatValidation = artifactValidation.subStatValidations[i]\r\n          let numRolls = subStatValidation?.rolls?.length || 0\r\n          let efficiency = subStatValidation?.efficiency || 0\r\n          let effOpacity = 0.3 + efficiency * 0.7\r\n          let statName = Stat.getStatName(stat.key)\r\n          return (<Col key={i} xs={12}>\r\n            <Badge variant={artifactValidation.valid ? `${numRolls}roll` : \"danger\"} className=\"text-darkcontent\"><b>{artifactValidation.valid ? numRolls : \"?\"}</b></Badge>{\" \"}\r\n            <span className={`text-${numRolls}roll`}>{statName}{`+${Stat.getStatUnit(stat.key) ? stat.value.toFixed(1) : stat.value}${Stat.getStatUnit(stat.key)}`}</span>\r\n            <span className=\"float-right\" style={{ opacity: effOpacity }}>{efficiency.toFixed(1)}%</span>\r\n          </Col>)\r\n        }\r\n        ) : null}\r\n      </Row>\r\n      <div className=\"mt-auto\">\r\n        <span className=\"mb-0 mr-1\">Substat Eff.:</span>\r\n        <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.currentEfficiency}>\r\n          {(artifactValidation.currentEfficiency ? artifactValidation.currentEfficiency : 0).toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n        <b>{\" < \"}</b>\r\n        <PercentBadge tooltip={artifactValidation.msg} valid={artifactValidation.valid} percent={artifactValidation.maximumEfficiency}>\r\n          {(artifactValidation.maximumEfficiency ? artifactValidation.maximumEfficiency : 0).toFixed(2) + \"%\"}\r\n        </PercentBadge>\r\n      </div>\r\n    </Card.Body>\r\n\r\n    <Card.Footer className=\"pr-3\">\r\n      <Row className=\"d-flex justify-content-between no-gutters\">\r\n        {forceUpdate ? <Col xs=\"auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle size=\"sm\">{location}</Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => equipOnChar()}>Inventory</Dropdown.Item>\r\n              {Object.entries(CharacterDatabase.getCharacterDatabase()).map(([id, char]) =>\r\n                <Dropdown.Item key={id} onClick={() => equipOnChar(id)}>\r\n                  {char.name}\r\n                </Dropdown.Item>)}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col> : <Col xs=\"auto\"><span>Location: {location}</span></Col>}\r\n        <Col xs=\"auto\">\r\n          <ButtonGroup>\r\n            {forceUpdate ? <OverlayTrigger placement=\"top\"\r\n              overlay={<Tooltip>Locking a artifact will prevent the build generator from picking it for builds. Artifacts on characters are locked by default.</Tooltip>}>\r\n              <span className=\"d-inline-block\">\r\n                <Button size=\"sm\"\r\n                  disabled={art.location}\r\n                  style={art.location ? { pointerEvents: 'none' } : {}}\r\n                  onClick={() => {\r\n                    art.lock = !art.lock\r\n                    ArtifactDatabase.updateArtifact(art);\r\n                    forceUpdate?.();\r\n                  }}>\r\n                  <FontAwesomeIcon icon={(art.lock || art.location) ? faLock : faLockOpen} className=\"fa-fw\" />\r\n                </Button>\r\n              </span>\r\n            </OverlayTrigger> : null}\r\n            {Boolean(onEdit) && <Button variant=\"info\" size=\"sm\"\r\n              onClick={() => onEdit()}>\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>}\r\n            {Boolean(onDelete) && <Button variant=\"danger\" size=\"sm\"\r\n              onClick={() => onDelete()}>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n            </Button>}\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>)\r\n}\r\n","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Col } from \"react-bootstrap\"\r\nimport Character from \"../Character/Character\"\r\nimport Stat from \"../Stat\"\r\nimport { StatIconEle } from \"./StatIcon\"\r\nfunction DisplayStats({ statKey, character, build, editable, ...otherProps }) {\r\n  let buildVal = build?.finalStats?.[statKey] || 0\r\n  let statVal, buildDiff = null\r\n  if (typeof buildVal === \"string\") {\r\n    statVal = <span>{buildVal}</span>\r\n  } else {\r\n    let originalVal = Character.getStatValueWithOverride(character, statKey)\r\n    if (statKey === \"hp_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"hp_base\")\r\n    else if (statKey === \"def_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"def_base\")\r\n    else if (statKey === \"atk_final\")\r\n      originalVal = Character.getStatValueWithOverride(character, \"atk_base\") + Character.getStatValueWithOverride(character, \"atk_weapon\")\r\n\r\n    let diff = buildVal - originalVal\r\n    let diffText = (diff?.toFixed?.(Stat.fixedUnit(statKey)) || diff) + Stat.getStatUnit(statKey)\r\n    if (diff < 0) buildDiff = <span className=\"text-success\">{diffText}</span>\r\n    else if (diff > 0) buildDiff = <span className=\"text-success\"> +{diffText}</span>\r\n\r\n    if (originalVal || !diff) statVal = <span className={editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}>{(originalVal?.toFixed?.(Stat.fixedUnit(statKey)) || originalVal) + Stat.getStatUnit(statKey)}</span>\r\n  }\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className=\"float-right text-right\">{statVal}{buildDiff}</span>\r\n  </Col>\r\n}\r\nconst DisplayNewBuildDiff = ({ statKey, character, equippedBuild, newBuild, editable, ...otherProps }) => {\r\n  let statVal = (equippedBuild?.finalStats?.[statKey] || Character.getStatValueWithOverride(character, statKey))\r\n  let unit = Stat.getStatUnit(statKey)\r\n  let buildDiff = (newBuild?.finalStats?.[statKey] || 0) - (equippedBuild?.finalStats?.[statKey] || 0)\r\n\r\n  return <Col {...otherProps}>\r\n    <h6 className=\"d-inline\">{StatIconEle(statKey)} {Stat.getStatName(statKey)}</h6>\r\n    <span className={`float-right ${editable && Character.hasOverride(character, statKey) ? \"text-warning\" : \"\"}`}>\r\n      {statVal || !buildDiff ? statVal?.toFixed?.(Stat.fixedUnit(statKey)) + unit : null}\r\n      {buildDiff ? <span className={buildDiff > 0 ? \"text-success\" : \"text-danger\"}> ({buildDiff > 0 && \"+\"}{buildDiff?.toFixed?.(Stat.fixedUnit(statKey)) + unit})</span> : null}\r\n    </span>\r\n  </Col>\r\n}\r\nexport {\r\n  DisplayStats,\r\n  DisplayNewBuildDiff,\r\n}","import React, { useState } from 'react';\r\nimport { Accordion, Alert, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Artifact from '../../Artifact/Artifact';\r\nimport ArtifactCard from '../../Artifact/ArtifactCard';\r\nimport ConditionalSelector from '../../Components/ConditionalSelector';\r\nimport { DisplayNewBuildDiff, DisplayStats } from '../../Components/StatDisplay';\r\nimport Stat, { FormulaText } from \"../../Stat\";\r\nimport { GetDependencyStats } from '../../StatDependency';\r\nimport ConditionalsUtil from '../../Util/ConditionalsUtil';\r\nimport Character from \"../Character\";\r\n\r\nfunction CharacterArtifactPane({ character, character: { characterKey, compareAgainstEquipped, artifactConditionals }, equippedBuild, newBuild, editable, forceUpdate, setState }) {\r\n  let [showOther, setShowOther] = useState(false)\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let artifactsAssumeFull = newBuild ? newBuild.finalStats?.artifactsAssumeFull : character.artifactsAssumeFull\r\n  if (newBuild) artifactConditionals = newBuild.artifactConditionals\r\n  const statKeys = Character.getDisplayStatKeys(characterKey)\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n\r\n  const setStateArtifactConditional = (setKey, setNumKey, conditionalNum) => setState?.(state =>\r\n    ({ artifactConditionals: ConditionalsUtil.setConditional(state.artifactConditionals, { srcKey: setKey, srcKey2: setNumKey }, conditionalNum) }))\r\n  const formulaDependencyKeys = [...new Set(statKeys.map(key => GetDependencyStats(key, build.finalStats?.formulaOverrides)).flat())]\r\n  const formulaKeys = Object.keys(FormulaText).filter(key => formulaDependencyKeys.includes(key))\r\n  return <>\r\n    <Row>\r\n      <Col className=\"mb-2\">\r\n        <Accordion>\r\n          <Card className=\"h-100\" bg=\"lightcontent\" text=\"lightfont\">\r\n            <Card.Header>\r\n              <Row>\r\n                <Col>\r\n                  <span>Character Stats</span>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"showOtherStats\" onClick={() => setShowOther(!showOther)} size=\"sm\">\r\n                    {`${showOther ? \"Hide\" : \"Show\"} Calculations`}\r\n                  </Accordion.Toggle>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                {(newBuild && compareAgainstEquipped) ?\r\n                  statKeys.map(statKey => <DisplayNewBuildDiff xs={12} md={6} xl={4} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n                  statKeys.map(statKey => <DisplayStats xs={12} md={6} xl={4} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n              </Row>\r\n              <Accordion.Collapse eventKey=\"showOtherStats\">\r\n                <Row>\r\n                  {formulaKeys.map(key => <Col key={key} xs={12} className=\"mt-2\">\r\n                    <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                      <Card.Header className=\"p-2\">\r\n                        {Stat.printStat(key, build.finalStats)}\r\n                      </Card.Header>\r\n                      <Card.Body className=\"p-2\">\r\n                        <small>{Stat.printFormula(key, build.finalStats, build.finalStats.formulaOverrides, false)}</small>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                  )}\r\n                </Row>\r\n              </Accordion.Collapse>\r\n            </Card.Body>\r\n            {newBuild ? <Card.Footer>\r\n              <Button onClick={() => {\r\n                Character.equipArtifacts(character.id, newBuild.artifactIds)\r\n                forceUpdate?.()\r\n              }}>Equip All artifacts to current character</Button>\r\n              {artifactsAssumeFull && <Alert className=\"float-right text-right mb-0 py-2\" variant=\"orange\" ><b>Assume Main Stats are Fully Leveled</b></Alert>}\r\n            </Card.Footer> : null}\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <Row>\r\n          <Col sm={6} lg={4} className=\"mb-2\">\r\n            <Card className=\"h-100 d-flex flex-column\" bg=\"lightcontent\" text=\"lightfont\">\r\n              <Card.Header>Artifact Set Effects</Card.Header>\r\n              <Card.Body className=\"flex-grow-1\">\r\n                <Row>\r\n                  {Object.entries(Artifact.getSetEffects(build.setToSlots)).map(([setKey, setNumKeyArr]) =>\r\n                    <Col key={setKey} xs={12} className=\"mb-2\">\r\n                      <h5>{Artifact.getSetName(setKey)}</h5>\r\n                      <Row>\r\n                        {setNumKeyArr.map(setNumKey => {\r\n                          let setStats = Artifact.getArtifactSetNumStats(setKey, setNumKey)\r\n                          let conditionalNum = 0;\r\n                          let conditional = Artifact.getSetEffectConditional(setKey, setNumKey)\r\n                          if (conditional) {\r\n                            conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n                            Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditionalNum)).forEach(([statKey, val]) =>\r\n                              setStats[statKey] = (setStats[statKey] || 0) + val)\r\n                          }\r\n                          let conditionalElement = <ConditionalSelector\r\n                            disabled={newBuild ? true : false}\r\n                            conditional={conditional}\r\n                            conditionalNum={conditionalNum}\r\n                            setConditional={(cnum) => setStateArtifactConditional(setKey, setNumKey, cnum)}\r\n                            defEle={<Badge variant=\"success\">{setNumKey}-Set</Badge>}\r\n                          />\r\n                          return <Col key={setNumKey} xs={12} className=\"mb-2\">\r\n                            <h6>{conditionalElement} {Artifact.getSetEffectText(setKey, setNumKey, build.finalStats)}</h6>\r\n                            {setStats ? <Row>\r\n                              {Object.entries(setStats).map(([statKey, val]) =>\r\n                                <Col xs={12} key={statKey}>{Stat.getStatName(statKey)}: {val}{Stat.getStatUnit(statKey)}</Col>)}\r\n                            </Row> : null}\r\n                          </Col>\r\n                        })}\r\n                      </Row>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          {Object.values(build.artifactIds).map(artid =>\r\n            artid ? <Col sm={6} lg={4} key={artid} className=\"mb-2\">\r\n              <ArtifactCard artifactId={artid} forceUpdate={forceUpdate} assumeFull={artifactsAssumeFull} />\r\n            </Col> : null\r\n          )}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default CharacterArtifactPane","import { faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport InputGroup from \"react-bootstrap/InputGroup\"\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport Tooltip from \"react-bootstrap/Tooltip\"\r\nimport { FloatFormControl, IntFormControl } from \"../Components/CustomFormControl\"\r\n\r\nconst StatInput = ({ name, prependEle, value, placeholder, defaultValue, onValueChange, percent, disabled, ...restProps }) =>\r\n  <InputGroup {...restProps}>\r\n    {prependEle ? <InputGroup.Prepend>{prependEle}</InputGroup.Prepend> : null}\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text>{name}</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {percent ?\r\n      <FloatFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      /> : <IntFormControl\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onValueChange={onValueChange}\r\n        disabled={disabled}\r\n      />}\r\n    {percent ? (<InputGroup.Append>\r\n      <InputGroup.Text>%</InputGroup.Text>\r\n    </InputGroup.Append>) : null}\r\n    {defaultValue !== undefined ? <InputGroup.Append>\r\n      <OverlayTrigger placement=\"top\"\r\n        overlay={<Tooltip>Reset this override to the default value.</Tooltip>}>\r\n        <span className=\"d-inline-block\">\r\n          <Button onClick={() => onValueChange(defaultValue)} disabled={disabled || value === defaultValue} style={value === defaultValue ? { pointerEvents: 'none' } : {}}>\r\n            <FontAwesomeIcon icon={faUndo} />\r\n          </Button>\r\n        </span>\r\n      </OverlayTrigger>\r\n    </InputGroup.Append> : null}\r\n  </InputGroup>\r\nexport default StatInput","import { faEdit, faGavel, faQuoteLeft, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useState } from \"react\"\r\nimport { Button, Card, Col, Dropdown, DropdownButton, Image, InputGroup, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\"\r\nimport { FloatFormControl, IntFormControl } from \"../../Components/CustomFormControl\"\r\nimport { Stars } from \"../../Components/StarDisplay\"\r\nimport { DisplayNewBuildDiff, DisplayStats } from \"../../Components/StatDisplay\"\r\nimport { StatIconEle } from \"../../Components/StatIcon\"\r\nimport { CharacterSpecializedStatKey } from \"../../Data/CharacterData\"\r\nimport { LevelNameData } from \"../../Data/WeaponData\"\r\nimport Stat from \"../../Stat\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport Weapon from \"../../Weapon/Weapon\"\r\nimport Character from \"../Character\"\r\nimport StatInput from \"../StatInput\"\r\nexport default function CharacterOverviewPane(props) {\r\n  let { character, character: { characterKey, constellation }, editable, setOverride, setConstellation } = props\r\n  let [editLevel, setEditLevel] = useState(false)\r\n  let elementKey = Character.getElementalKey(characterKey)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let level = Character.getStatValueWithOverride(character, \"char_level\")\r\n  return <Row>\r\n    <Col xs={12} md={3} >\r\n      {/* Image card with star and name and level */}\r\n      <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n        <Card.Img src={Character.getCard(characterKey)} className=\"w-100 h-auto\" />\r\n        <Card.Body>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <h3>{Character.getName(characterKey)} <Image src={Assets.elements[elementKey]} className=\"inline-icon\" /> <Image src={Assets.weaponTypes?.[weaponTypeKey]} className=\"inline-icon\" /></h3>\r\n              <h6><Stars stars={Character.getStar(characterKey)} colored /></h6>\r\n            </Col>\r\n            <Col>\r\n              {editLevel ? <Row><Col>\r\n                <InputGroup >\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>Lvl.</InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <IntFormControl onValueChange={(val) => setOverride(\"char_level\", clamp(val, 1, 90))} value={level} />\r\n                  <InputGroup.Append>\r\n                    <Button>\r\n                      <FontAwesomeIcon icon={faUndo} size=\"sm\" onClick={() => setOverride(\"char_level\", Character.getLevel(character.levelKey))} />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                  <InputGroup.Append>\r\n                    <OverlayTrigger\r\n                      placement=\"bottom\"\r\n                      overlay={<Tooltip>Override the level value for calculations. Does not change Stats.</Tooltip>}\r\n                    >\r\n                      <Button variant=\"danger\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                        <span><FontAwesomeIcon icon={faSave} /></span>\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col></Row> :\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Level: {level}</h5>\r\n                  </Col>\r\n                  {editable ? <Col xs=\"auto\" className=\"pr-1 pl-1\">\r\n                    <Button variant=\"info\" onClick={() => setEditLevel(!editLevel)} size=\"sm\">\r\n                      <span><FontAwesomeIcon icon={faEdit} /></span>\r\n                    </Button>\r\n                  </Col> : null}\r\n                </Row>}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Row>\r\n                <Col xs={12}><h5>{Character.getConstellationName(characterKey)}</h5></Col>\r\n                <Col>\r\n                  <Row className=\"px-2\">\r\n                    {[...Array(6).keys()].map(i =>\r\n                      <Col xs={4} className=\"p-1\" key={i}>\r\n                        <Image src={Character.getConstellationImg(characterKey, i)} className={`w-100 h-auto ${constellation > i ? \"\" : \"overlay-dark\"}`}\r\n                          style={{ cursor: \"pointer\" }} roundedCircle onClick={editable ? (() =>\r\n                            setConstellation((i + 1) === constellation ? i : i + 1)) : null} />\r\n                      </Col>)}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col xs={12} md={9} >\r\n      <WeaponStatsEditorCard {...props} />\r\n      <MainStatsCards {...props} />\r\n    </Col>\r\n  </Row >\r\n}\r\nfunction WeaponStatsEditorCard(props) {\r\n  let [editing, SetEditing] = useState(false)\r\n  let [showDescription, setShowDescription] = useState(false)\r\n  let { character, character: { characterKey, weapon }, editable, setState, equippedBuild, newBuild } = props\r\n\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  const setStateWeapon = (key, value) => setState(state => {\r\n    //reset the conditionalNum when we switch weapons\r\n    if (key === \"key\") state.weapon.conditionalNum = 0\r\n    state.weapon[key] = value\r\n    return { weapon: state.weapon }\r\n  })\r\n  let subStatKey = Weapon.getWeaponSubStatKey(weapon.key)\r\n  let weaponTypeKey = Character.getWeaponTypeKey(characterKey)\r\n  let weaponDisplayMainVal = weapon.overrideMainVal || Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)\r\n  let weaponDisplaySubVal = weapon.overrideSubVal || Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)\r\n  let weaponPassiveName = Weapon.getWeaponPassiveName(weapon.key)\r\n  let weaponBonusStats = Weapon.getWeaponBonusStat(weapon.key, weapon.refineIndex)\r\n  let conditionalStats = Weapon.getWeaponConditionalStat(weapon.key, weapon.refineIndex, weapon.conditionalNum)\r\n  let conditional = Weapon.getWeaponConditional(weapon.key)\r\n  let conditionalNum = weapon.conditionalNum;\r\n  let conditionalEle = <ConditionalSelector\r\n    conditional={conditional}\r\n    conditionalNum={conditionalNum}\r\n    setConditional={(cnum) => setStateWeapon(\"conditionalNum\", cnum)}\r\n    defEle={<span>{weaponPassiveName}</span>}\r\n  />\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Header>\r\n      <Row>\r\n        <Col>\r\n          <span>Weapon</span>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button variant=\"info\" size=\"sm\" onClick={() => setShowDescription(!showDescription)}>\r\n            <span><FontAwesomeIcon icon={faQuoteLeft} /> {showDescription ? \"Hide Desc.\" : \"Show Desc.\"}</span>\r\n          </Button>\r\n        </Col>\r\n        {editable ? <Col xs=\"auto\" >\r\n          <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n            <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n          </Button>\r\n        </Col> : null}\r\n      </Row>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"mb-2\">\r\n        <Col xs={12} md={3}>\r\n          <Image src={Weapon.getWeaponImg(weapon.key)} className={`w-100 h-auto grad-${Weapon.getWeaponRarity(weapon.key)}star`} thumbnail />\r\n        </Col>\r\n        {editing ? <Col>\r\n          <Row>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getWeaponName(weapon.key)}>\r\n                {[...Array(5).keys()].reverse().map(key => key + 1).map((star, i, arr) => <React.Fragment key={star}>\r\n                  <Dropdown.ItemText key={\"star\" + star}><Stars stars={star} /></Dropdown.ItemText>\r\n                  {Object.entries(Weapon.getWeaponsOfType(weaponTypeKey)).filter(([key, weaponObj]) => weaponObj.rarity === star).map(([key, weaponObj]) =>\r\n                    <Dropdown.Item key={key} onClick={() => setStateWeapon(\"key\", key)}>\r\n                      {weaponObj.name}\r\n                    </Dropdown.Item>\r\n                  )}\r\n                  {(i !== arr.length - 1) && < Dropdown.Divider />}\r\n                </React.Fragment>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            <Col lg=\"auto\" xs={6} className=\"mb-2 pr-0\">\r\n              <DropdownButton title={Weapon.getLevelName(weapon.levelKey)}>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Level</span>\r\n                </Dropdown.ItemText>\r\n                {Object.entries(LevelNameData).map(([key, name]) =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"levelKey\", key)}>\r\n                    {name}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>\r\n            {weaponPassiveName && <Col lg=\"auto\" xs={6} className=\"mb-2\">\r\n              <DropdownButton title={`Refinement ${weapon.refineIndex + 1}`} className=\"w-100\">\r\n                <Dropdown.ItemText>\r\n                  <span>Select Weapon Refinment</span>\r\n                </Dropdown.ItemText>\r\n                {[...Array(5).keys()].map(key =>\r\n                  <Dropdown.Item key={key} onClick={() => setStateWeapon(\"refineIndex\", key)}>\r\n                    {`Refinement ${key + 1}`}\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </Col>}\r\n            <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><FontAwesomeIcon icon={faGavel} className=\"mr-2\" />ATK</span>}\r\n                placeholder=\"Weapon Attack\"\r\n                value={weaponDisplayMainVal}\r\n                percent={false}\r\n                onValueChange={(value) => setStateWeapon(\"overrideMainVal\", value)}\r\n                defaultValue={Weapon.getWeaponMainStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>\r\n            {subStatKey && <Col xs={12} className=\"mb-2\">\r\n              <StatInput\r\n                name={<span><span className=\"mr-2\">{StatIconEle(subStatKey)}</span>{Stat.getStatName(subStatKey)}</span>}\r\n                placeholder=\"Weapon Substat\"\r\n                value={weaponDisplaySubVal}\r\n                percent={Stat.getStatUnit(subStatKey) === \"%\"}\r\n                onValueChange={(value) => setStateWeapon(\"overrideSubVal\", value)}\r\n                defaultValue={Weapon.getWeaponSubStatVal(weapon.key, weapon.levelKey)}\r\n              />\r\n            </Col>}\r\n          </Row>\r\n        </Col> :\r\n          <Col>\r\n            <Row className=\"mb-2\"><Col>\r\n              <h5 className=\"mb-0\">{Weapon.getWeaponName(weapon.key)} {Weapon.getLevelName(weapon.levelKey)} {weaponPassiveName && `(Refinement ${weapon.refineIndex + 1})`}</h5>\r\n              <small ><Stars stars={Weapon.getWeaponRarity(weapon.key)} /></small>\r\n            </Col></Row>\r\n            <Row>\r\n              <Col>{conditionalEle}</Col>\r\n            </Row>\r\n\r\n            <p>{weaponPassiveName && Weapon.getWeaponPassiveDescription(weapon.key, weapon.refineIndex, build.finalStats, character)}</p>\r\n            <Row>\r\n              <Col xs={12} md={6}>\r\n                <h5>ATK: {weaponDisplayMainVal}</h5>\r\n              </Col>\r\n              {subStatKey && <Col xs={12} md={6}>\r\n                <h5>{Stat.getStatName(subStatKey)}: {weaponDisplaySubVal}{Stat.getStatUnit(subStatKey)}</h5>\r\n              </Col>}\r\n            </Row>\r\n            {<Row>\r\n              {(conditionalStats || weaponBonusStats) && <Col xs={12}><h6 className=\"mb-0\">Bonus Stats:</h6></Col>}\r\n              {weaponBonusStats && Object.entries(weaponBonusStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"bonu\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n              {conditionalStats && Object.entries(conditionalStats).map(([key, val]) =>\r\n                <Col xs={12} md={6} key={\"cond\" + key}>{Stat.getStatName(key)}: {val}{Stat.getStatUnit(key)}</Col>\r\n              )}\r\n            </Row>}\r\n          </Col>}\r\n      </Row>\r\n      {showDescription && <Row><Col><small>{Weapon.getWeaponDescription(weapon.key)}</small></Col></Row>}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\n\r\nfunction MainStatsCards(props) {\r\n  let { editable, character, character: { compareAgainstEquipped }, setOverride, equippedBuild, newBuild } = props\r\n  //choose which one to display stats for\r\n  let build = newBuild ? newBuild : equippedBuild\r\n\r\n  let [editing, SetEditing] = useState(false)\r\n  let [editingOther, SetEditingOther] = useState(false)\r\n\r\n  let additionalKeys = [\"ele_mas\", \"crit_rate\", \"crit_dmg\", \"ener_rech\", \"heal_bonu\"]\r\n  const displayStatKeys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n  displayStatKeys.push(...additionalKeys)\r\n  const editStatKeys = [\"hp_base\", \"hp\", \"hp_\", \"atk_base\", \"atk\", \"atk_\", \"def_base\", \"def\", \"def_\"]\r\n  editStatKeys.push(...additionalKeys)\r\n  const otherStatKeys = [\"stam\", \"inc_heal\", \"pow_shield\", \"red_cd\", \"phy_dmg_bonus\", \"phy_res\"]\r\n\r\n  Character.getElementalKeys().forEach(ele => {\r\n    otherStatKeys.push(`${ele}_ele_dmg_bonus`)\r\n    otherStatKeys.push(`${ele}_ele_res`)\r\n  })\r\n  const miscStatkeys = [\"norm_atk_dmg_bonus\", \"char_atk_dmg_bonus\", \"skill_dmg_bonus\", \"burst_dmg_bonus\", \"skill_crit_rate\", \"burst_crit_rate\", \"all_dmg_bonus\", \"move_spd\", \"atk_spd\", \"weakspot_dmg\"]\r\n\r\n  let specializedStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n  let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\");\r\n  let specializedStatUnit = Stat.getStatUnit(specializedStatKey)\r\n\r\n  let percentSpecialStatSlect = Stat.getStatUnit(specializedStatKey) === \"%\"\r\n  let specialStatProps = {\r\n    placeholder: \"Character Special Stat\",\r\n    value: Character.getStatValueWithOverride(character, \"specializedStatVal\"),\r\n    onValueChange: (value) => setOverride(\"specializedStatVal\", value),\r\n  }\r\n  let specialStatInput = percentSpecialStatSlect ?\r\n    <FloatFormControl {...specialStatProps} />\r\n    : <IntFormControl {...specialStatProps} />\r\n\r\n  let displayStatProps = { character, build, editable }\r\n  let displayNewBuildProps = { character, equippedBuild, newBuild, editable }\r\n  return <>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Main Base Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editing ? \"danger\" : \"info\"} onClick={() => SetEditing(!editing)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editing ? faSave : faEdit} /> {editing ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editing ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {editStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatNamePretty(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatName(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n\r\n            <Col lg={6} xs={12}>\r\n              <InputGroup>\r\n                <DropdownButton\r\n                  title={Stat.getStatNameWithPercent(specializedStatKey, \"Specialized Stat\")}\r\n                  as={InputGroup.Prepend}\r\n                >\r\n                  <Dropdown.ItemText>Select Specialized Stat </Dropdown.ItemText>\r\n                  {CharacterSpecializedStatKey.map(key =>\r\n                    <Dropdown.Item key={key} onClick={() => setOverride(\"specializedStatKey\", key)} >\r\n                      {Stat.getStatNameWithPercent(key)}\r\n                    </Dropdown.Item>)}\r\n                </DropdownButton>\r\n                {specialStatInput}\r\n                {percentSpecialStatSlect && (<InputGroup.Append>\r\n                  <InputGroup.Text>%</InputGroup.Text>\r\n                </InputGroup.Append>)}\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              displayStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              displayStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n            {specializedStatVal ? <Col lg={6} xs={12}>\r\n              <span><b>Specialized:</b> <span className={Character.hasOverride(character, \"specializedStatKey\") ? \"text-warning\" : \"\"}>{Stat.getStatName(specializedStatKey)}</span></span>\r\n              <span className={`float-right ${Character.hasOverride(character, \"specializedStatVal\") ? \"text-warning\" : \"\"}`}>{`${specializedStatVal}${specializedStatUnit}`}</span>\r\n            </Col> : null}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card >\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Other Stats</span>\r\n          </Col>\r\n          {editable ? <Col xs=\"auto\" >\r\n            <Button variant={editingOther ? \"danger\" : \"info\"} onClick={() => SetEditingOther(!editingOther)} size=\"sm\">\r\n              <span><FontAwesomeIcon icon={editingOther ? faSave : faEdit} /> {editingOther ? \"EXIT\" : \"EDIT\"}</span>\r\n            </Button>\r\n          </Col> : null}\r\n        </Row>\r\n      </Card.Header>\r\n      {editingOther ?\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {otherStatKeys.map(statKey =>\r\n              <Col lg={6} xs={12} key={statKey}>\r\n                <StatInput\r\n                  className=\"mb-2\"\r\n                  name={<span>{StatIconEle(statKey)} {Stat.getStatName(statKey)}</span>}\r\n                  placeholder={`Base ${Stat.getStatNameRaw(statKey)}`}\r\n                  value={Character.getStatValueWithOverride(character, statKey)}\r\n                  percent={Stat.getStatUnit(statKey) === \"%\"}\r\n                  onValueChange={(value) => setOverride(statKey, value)}\r\n                  defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                />\r\n              </Col>)}\r\n          </Row>\r\n        </Card.Body> :\r\n        <Card.Body>\r\n          <Row className=\"mb-2\">\r\n            {(newBuild && compareAgainstEquipped) ?\r\n              otherStatKeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n              otherStatKeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n          </Row>\r\n        </Card.Body>\r\n      }\r\n    </Card>\r\n    <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <span>Misc Stats</span>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mb-2\">\r\n          {(newBuild && compareAgainstEquipped) ?\r\n            miscStatkeys.map(statKey => <DisplayNewBuildDiff xs={12} lg={6} key={statKey} {...{ ...displayNewBuildProps, statKey }} />) :\r\n            miscStatkeys.map(statKey => <DisplayStats xs={12} lg={6} key={statKey} {...{ ...displayStatProps, statKey }} />)}\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  </>\r\n}\r\n","import { faCheckSquare, faQuestionCircle, faSquare, faWindowMaximize, faWindowMinimize } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from 'react';\r\nimport { Accordion, AccordionContext, Button, Card, Col, Dropdown, DropdownButton, Image, ListGroup, OverlayTrigger, Row, ToggleButton, ToggleButtonGroup, Tooltip } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\r\nimport Assets from \"../../Assets/Assets\";\r\nimport ConditionalSelector from \"../../Components/ConditionalSelector\";\r\nimport Stat, { FormulaText } from \"../../Stat\";\r\nimport { ElementToReactionKeys } from \"../../StatData\";\r\nimport { GetDependencyStats } from \"../../StatDependency\";\r\nimport ConditionalsUtil from \"../../Util/ConditionalsUtil\";\r\nimport Character from \"../Character\";\r\nimport StatInput from \"../StatInput\";\r\n\r\nexport default function CharacterTalentPane(props) {\r\n  let { character, character: { characterKey, levelKey, constellation, dmgMode }, editable, setState, setOverride, newBuild, equippedBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  //choose which one to display stats for\r\n  let ascension = Character.getAscension(levelKey)\r\n\r\n  let skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]]\r\n\r\n  let passivesList = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n\r\n  let skillDisplayProps = { ...props, ascension }\r\n  const ContextAwareToggle = ({ eventKey, callback }) => {\r\n    const currentEventKey = useContext(AccordionContext);\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n    const expanded = currentEventKey === eventKey;\r\n    return (\r\n      <Button\r\n        // style={{ backgroundColor: isCurrentEventKey ? 'pink' : 'lavender' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        <FontAwesomeIcon icon={expanded ? faWindowMinimize : faWindowMaximize} className={`fa-fw ${expanded ? \"fa-rotate-180\" : \"\"}`} />\r\n        <span> </span>{expanded ? \"Retract\" : \"Expand\"}\r\n      </Button>\r\n    );\r\n  }\r\n  const statsDisplayKeys = () => {\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\"]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let autoKeys = [\"norm_atk\", \"char_atk\", \"plunge\"];\r\n    let talKeys = [\"ele\", \"skill\", \"burst\"];\r\n    if (!isAutoElemental)  //add physical variants of the formulas\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    if (isAutoElemental || (isAutoInfusable && character.autoInfused))\r\n      autoKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character, true)))\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\")//bow charged atk does elemental dmg on charge\r\n      keys.push(Character.getTalentStatKey(\"char_atk\", character, true))\r\n    //add talents/skills\r\n    talKeys.forEach(key => keys.push(Character.getTalentStatKey(key, character)))\r\n    //search for dependency, and flatten, isolate unique keys\r\n    keys = [...new Set(keys.map(key => GetDependencyStats(key, build.finalStats?.formulaOverrides)).flat())]\r\n    //return keys that are part of the formula text, in the order in which they appear.\r\n    return Object.keys(FormulaText).filter(key => keys.includes(key))\r\n  }\r\n  return <>\r\n    <Row><Col xs={12} className=\"mb-2\">\r\n      <Accordion>\r\n        <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Options</span>\r\n                <small>Expand below to edit enemy details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ToggleButtonGroup type=\"radio\" value={dmgMode} name=\"dmgOptions\" onChange={(dmgMode) => setState({ dmgMode })}>\r\n                  <ToggleButton value=\"avg_dmg\">Avg. DMG</ToggleButton>\r\n                  <ToggleButton value=\"dmg\">Normal Hit, No Crit</ToggleButton>\r\n                  <ToggleButton value=\"crit_dmg\">Crit Hit DMG</ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"1\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              <Row className=\"mb-2\"><Col>\r\n                <Button variant=\"warning\" >\r\n                  <a href=\"https://genshin-impact.fandom.com/wiki/Damage#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n                    To get the specific resistance values of enemies, please visit the wiki.\r\n                  </a>\r\n                </Button >\r\n              </Col></Row>\r\n              <Row>\r\n                <Col xs={12} xl={6} className=\"mb-2\">\r\n                  <StatInput\r\n                    name={<b>Enemy Level</b>}\r\n                    value={Character.getStatValueWithOverride(character, \"enemy_level\")}\r\n                    placeholder={Stat.getStatNameRaw(\"enemy_level\")}\r\n                    defaultValue={Character.getBaseStatValue(character, \"enemy_level\")}\r\n                    onValueChange={(val) => setOverride(\"enemy_level\", val)}\r\n                  />\r\n                </Col>\r\n                {[\"physical\", ...Character.getElementalKeys()].map(eleKey => {\r\n                  let statKey = eleKey === \"physical\" ? \"enemy_phy_res\" : `${eleKey}_enemy_ele_res`\r\n                  let immunityStatKey = eleKey === \"physical\" ? \"enemy_phy_immunity\" : `${eleKey}_enemy_ele_immunity`\r\n                  let elementImmunity = Character.getStatValueWithOverride(character, immunityStatKey)\r\n                  return <Col xs={12} xl={6} key={eleKey} className=\"mb-2\">\r\n                    <StatInput\r\n                      prependEle={<Button variant={eleKey} onClick={() => setOverride(immunityStatKey, !elementImmunity)} className=\"text-darkcontent\">\r\n                        <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\r\n                        </Button>}\r\n                      name={<b>{Stat.getStatNameRaw(statKey)}</b>}\r\n                      value={Character.getStatValueWithOverride(character, statKey)}\r\n                      placeholder={Stat.getStatNameRaw(statKey)}\r\n                      defaultValue={Character.getBaseStatValue(character, statKey)}\r\n                      onValueChange={(val) => setOverride(statKey, val)}\r\n                      disabled={elementImmunity}\r\n                    />\r\n                  </Col>\r\n                })}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        <Card bg=\"lightcontent\" text=\"lightfont\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"d-block\">Damage Calculation Formulas</span>\r\n                <small>Expand below to see calculation details.</small>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <ContextAwareToggle as={Button} eventKey=\"2\" />\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n              <Row>\r\n                {statsDisplayKeys().map(key => <Col key={key} xs={12} className=\"mb-2\">\r\n                  <Card bg=\"darkcontent\" text=\"lightfont\">\r\n                    <Card.Header className=\"p-2\">\r\n                      {Stat.printStat(key, build.finalStats)}\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-2\">\r\n                      <small>{Stat.printFormula(key, build.finalStats, build.finalStats.formulaOverrides, false)}</small>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                )}\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Col></Row>\r\n    <Row><Col><ReactionDisplay {...props} /></Col></Row>\r\n    <Row>\r\n      {/* auto, skill, burst */}\r\n      {skillBurstList.map(([tKey, tText]) =>\r\n        <Col key={tKey} xs={12} md={6} lg={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>)}\r\n    </Row>\r\n    <Row>\r\n      {/* passives */}\r\n      {passivesList.map(([tKey, tText, asc]) => {\r\n        let enabled = ascension >= asc\r\n        return <Col key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} xs={12} md={4} className=\"mb-2\">\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={tText}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <h5 className=\"text-center\">Constellation Lv. {constellation}</h5>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      {/* constellations */}\r\n      {[...Array(6).keys()].map(i => {\r\n        let tKey = `constellation${i + 1}`\r\n        return <Col key={i} xs={12} md={4} className=\"mb-2\"\r\n          style={{ opacity: constellation > i ? 1 : 0.5 }}>\r\n          <SkillDisplayCard\r\n            {...skillDisplayProps}\r\n            talentKey={tKey}\r\n            subtitle={`Contellation Lv. ${i + 1}`}\r\n            onClickTitle={editable ? (() => setState({ constellation: (i + 1) === constellation ? i : i + 1 })) : undefined}\r\n          />\r\n        </Col>\r\n      })}\r\n    </Row>\r\n  </>\r\n}\r\nconst ReactionComponents = {\r\n  superconduct_dmg: SuperConductCard,\r\n  electrocharged_dmg: ElectroChargedCard,\r\n  overloaded_dmg: OverloadedCard,\r\n  swirl_dmg: SwirlCard,\r\n  shatter_dmg: ShatteredCard,\r\n  crystalize_dmg: CrystalizeCard,\r\n}\r\nfunction ReactionDisplay({ character: { characterKey, reactionMode = \"none\" }, newBuild, equippedBuild, setState }) {\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let charEleKey = Character.getElementalKey(characterKey)\r\n  let eleInterArr = [...(ElementToReactionKeys[charEleKey] || [])]\r\n  if (!eleInterArr.includes(\"shatter_dmg\") && Character.getWeaponTypeKey(characterKey) === \"claymore\") eleInterArr.push(\"shatter_dmg\")\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"mb-2\">\r\n    <Card.Body>\r\n      <Row>\r\n        <Col ><Row className=\"mb-n2\">\r\n          {eleInterArr.map(key => {\r\n            let Ele = ReactionComponents[key]\r\n            if (!Ele) return null\r\n            let val = build?.finalStats?.[key]\r\n            val = val?.toFixed?.(Stat.fixedUnit(key)) || val\r\n            return <Col xs=\"auto\" className=\"mb-2\" key={key}><Ele value={val} /></Col>\r\n          })}\r\n        </Row></Col>\r\n        <Col xs=\"auto\">\r\n          {[\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && <ToggleButtonGroup\r\n            type=\"radio\" name=\"reactionMode\" defaultValue={reactionMode} onChange={(val) => setState({ reactionMode: val === \"none\" ? null : val })}>\r\n            <ToggleButton className=\"p-3\" value={\"none\"}> <h6>No Elemental</h6> <h6>Interactions</h6></ToggleButton >\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-3\" value={\"pyro_vaporize\"}>\r\n              <h6 className=\"text-vaporize\">Vaporize(Pyro)</h6>\r\n              <h2 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h2>\r\n            </ToggleButton >}\r\n            {charEleKey === \"pyro\" && <ToggleButton className=\"p-3\" value={\"pyro_melt\"}>\r\n              <h6 className=\"text-melt\">Melt(Pyro)</h6>\r\n              <h2 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" />\r\n              </h2>\r\n            </ToggleButton >}\r\n            {charEleKey === \"hydro\" && <ToggleButton className=\"p-3\" value={\"hydro_vaporize\"}>\r\n              <h6 className=\"text-vaporize\">Melt(Pyro)</h6>\r\n              <h2 className=\"text-vaporize mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" />\r\n              </h2>\r\n            </ToggleButton >}\r\n            {charEleKey === \"cryo\" && <ToggleButton className=\"p-3\" value={\"cryo_melt\"}>\r\n              <h6 className=\"text-melt\">Melt(Pyro)</h6>\r\n              <h2 className=\"text-melt mb-0\">\r\n                <Image src={Assets.elements.pyro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />\r\n              </h2>\r\n            </ToggleButton >}\r\n          </ToggleButtonGroup>}\r\n        </Col>\r\n      </Row>\r\n\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction SuperConductCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"superconduct_dmg\")}</h6>\r\n    <h2 className=\"text-superconduct mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" /> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\nfunction ElectroChargedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"electrocharged_dmg\")}</h6>\r\n    <h2 className=\"text-electrocharged mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.hydro} className=\"inline-icon\" /> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\nfunction OverloadedCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"overloaded_dmg\")}</h6>\r\n    <h2 className=\"text-overloaded mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />+<Image src={Assets.elements.pyro} className=\"inline-icon\" /> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\nfunction SwirlCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"swirl_dmg\")}</h6>\r\n    <h2 className=\"text-swirl mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.anemo} className=\"inline-icon\" /> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\nfunction ShatteredCard({ value }) {\r\n  let information = <OverlayTrigger\r\n    placement=\"top\"\r\n    overlay={<Tooltip>Claymores, Plunging Attacks and <span className=\"text-geo\">Geo DMG</span></Tooltip>}\r\n  >\r\n    <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n  </OverlayTrigger>\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"shatter_dmg\")}</h6>\r\n    <h2 className=\"text-shatter mb-0\">\r\n      <Image src={Assets.elements.hydro} className=\"inline-icon\" />+<Image src={Assets.elements.cryo} className=\"inline-icon\" />+ <small className=\"text-physical\">Heavy Attack{information} </small> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\nfunction CrystalizeCard({ value }) {\r\n  return <Card bg=\"darkcontent\" text=\"lightfont\"><Card.Body className=\"p-3\">\r\n    <h6>{Stat.getStatName(\"crystalize_dmg\")}</h6>\r\n    <h2 className=\"text-crystalize mb-0\">\r\n      <Image src={Assets.elements.electro} className=\"inline-icon\" />/<Image src={Assets.elements.hydro} className=\"inline-icon\" />/<Image src={Assets.elements.pyro} className=\"inline-icon\" />/<Image src={Assets.elements.cryo} className=\"inline-icon\" />+<Image src={Assets.elements.geo} className=\"inline-icon\" /> {value}\r\n    </h2>\r\n  </Card.Body></Card>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\nfunction SkillDisplayCard(props) {\r\n  let { character, character: { characterKey, constellation, autoInfused = false }, talentKey, subtitle, ascension, equippedBuild, newBuild, editable, setState } = props\r\n  let { onClickTitle = null, ...otherProps } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  let header = null\r\n  let { talentLvlKey = undefined, levelBoost = 0 } = Character.getTalentLevelKey(character, talentKey, constellation, true)\r\n  let infuseBtn = null\r\n  if (talentKey === \"auto\" && Character.isAutoInfusable(characterKey)) {\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    infuseBtn = <Col xs=\"auto\">\r\n      <Button variant={autoInfused ? eleKey : \"secondary\"} className=\"text-white\" disabled={!editable} onClick={editable ? (() => setState(state => ({ autoInfused: !state.autoInfused }))) : undefined} size={editable ? null : \"sm\"}>\r\n        {autoInfused ?\r\n          <span>Infused with <b>{Character.getElementalName(eleKey)}</b></span>\r\n          : \"Not Infused\"}\r\n      </Button>\r\n    </Col>\r\n  }\r\n  if (typeof talentLvlKey === \"number\") {\r\n    if (editable) {\r\n      let setTalentLevel = (tKey, tLvl) => setState(state => {\r\n        let talentLevelKeys = state.talentLevelKeys || {}\r\n        talentLevelKeys[tKey] = tLvl\r\n        return { talentLevelKeys }\r\n      })\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <DropdownButton title={`Talent Lv. ${talentLvlKey + 1}`}>\r\n              {[...Array(talentLimits[ascension]).keys()].map(i =>\r\n                <Dropdown.Item key={i} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost + 1}</Dropdown.Item>)}\r\n            </DropdownButton>\r\n          </Col>\r\n          {infuseBtn}\r\n        </Row>\r\n      </Card.Header>\r\n    } else {\r\n      header = <Card.Header>\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            {`Talent Level: ${talentLvlKey + 1}`}\r\n          </Col>\r\n          <Col xs=\"auto\">\r\n            {infuseBtn}\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    }\r\n  }\r\n  let statsEle = null\r\n  let talentStats = Character.getTalentStats(characterKey, talentKey, constellation, ascension)\r\n  if (talentStats) {\r\n    statsEle = <Row><Col>\r\n      <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mt-2 ml-n2 mr-n2\">\r\n        <ListGroup className=\"text-white\" variant=\"flush\">\r\n          {Object.entries(talentStats).map(([statKey, statVal], index) =>\r\n            <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n              <div>\r\n                <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n              </div>\r\n            </ListGroup.Item>\r\n          )}\r\n        </ListGroup>\r\n      </Card>\r\n    </Col></Row>\r\n  }\r\n\r\n  return <Card bg=\"lightcontent\" text=\"lightfont\" className=\"h-100\">\r\n    {header}\r\n    <Card.Body>\r\n      <Row className=\"d-flex flex-row mb-245\" onClick={onClickTitle} style={{ cursor: (editable && onClickTitle) ? \"pointer\" : \"default\" }}>\r\n        <Col xs=\"auto\" className=\"flex-shrink-1 d-flex flex-column\">\r\n          <Image src={Character.getTalentImg(characterKey, talentKey)} className=\"thumb-mid\" />\r\n        </Col>\r\n        <Col className=\"flex-grow-1\">\r\n          <Card.Title>{Character.getTalentName(characterKey, talentKey)}</Card.Title>\r\n          <Card.Subtitle>{subtitle}</Card.Subtitle>\r\n        </Col>\r\n      </Row>\r\n      {Character.getTalentDocument(characterKey, talentKey).map((section, i) => {\r\n        if (typeof section === \"function\")\r\n          section = section(constellation, ascension)\r\n        if (!section) return null\r\n\r\n        let talentText = section.text\r\n        if (typeof talentText === \"function\")\r\n          talentText = talentText(talentLvlKey, build.finalStats, character)\r\n        let fields = section.fields || []\r\n\r\n        let conditional = section.conditional;\r\n        if (typeof conditional === \"function\")\r\n          conditional = conditional(talentLvlKey, constellation, ascension)\r\n        let conditionalEle = null\r\n        if (conditional) {\r\n          let conditionalNum = ConditionalsUtil.getConditionalNum(character.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey })\r\n          let conditionalStats = {}\r\n          let conditionalFields = []\r\n          if (conditionalNum) {\r\n            conditionalStats = Character.getTalentConditionalStats(conditional, conditionalNum, {})\r\n            //filter out formulaOverrides from rendering\r\n            conditionalStats = Object.fromEntries(Object.entries(conditionalStats).filter(([key, _]) => key !== \"formulaOverrides\"))\r\n            conditionalFields = Character.getTalentConditionalFields(conditional, conditionalNum, [])\r\n          }\r\n          let setConditional = (conditionalNum) => setState(state =>\r\n            ({ talentConditionals: ConditionalsUtil.setConditional(state.talentConditionals, { srcKey: talentKey, srcKey2: conditional.conditionalKey }, conditionalNum) }))\r\n          conditionalEle = <Col xs={12}>\r\n            <Card bg=\"darkcontent\" text=\"lightfont\" className=\"mb-2\">\r\n              <Card.Header>\r\n                <ConditionalSelector disabled={!editable}\r\n                  conditional={conditional}\r\n                  conditionalNum={conditionalNum}\r\n                  setConditional={setConditional}\r\n                  defEle={<span>{conditional.condition}</span>} />\r\n              </Card.Header>\r\n              <ListGroup className=\"text-white\" variant=\"flush\">\r\n                {Object.entries(conditionalStats).map(([statKey, statVal], index) =>\r\n                  <ListGroup.Item key={statKey} variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n                    <div>\r\n                      <span><b>{Stat.getStatName(statKey)}</b></span>\r\n                      <span className=\"float-right text-right\">{statVal}{Stat.getStatUnit(statKey)}</span>\r\n                    </div>\r\n                  </ListGroup.Item>\r\n                )}\r\n                {conditionalFields.map((condField, i) => <FieldDisplay key={i + (conditionalStats?.length || 0)} index={i + (conditionalStats?.length || 0)} {...{ field: condField, talentLvlKey, ascension, ...otherProps }} />)}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        }\r\n        return <Row className=\"mt-2 mb-n2\" key={\"section\" + i}><Col xs={12}>\r\n          <div className=\"mb-2\">{talentText}</div>\r\n          {fields.length > 0 && <ListGroup className=\"text-white mb-2\">\r\n            {fields?.map?.((field, i) => <FieldDisplay key={i} index={i} {...{ field, talentLvlKey, ascension, ...otherProps }} />)}\r\n          </ListGroup>}\r\n        </Col>{conditionalEle}</Row>\r\n      })}\r\n      {statsEle}\r\n    </Card.Body>\r\n  </Card>\r\n}\r\nfunction FieldDisplay(props) {\r\n  let { character, character: { compareAgainstEquipped, constellation }, field, index, talentLvlKey = 0, ascension, equippedBuild, newBuild } = props\r\n  let build = newBuild ? newBuild : equippedBuild\r\n  if (typeof field === \"function\")\r\n    field = field(constellation, ascension)\r\n  if (!field) return null\r\n\r\n  let fieldText = field.text\r\n  if (typeof fieldText === \"function\")\r\n    fieldText = fieldText?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldVariant = field.variant || \"\"\r\n  if (typeof fieldVariant === \"function\")\r\n    fieldVariant = fieldVariant?.(talentLvlKey, build.finalStats, character)\r\n\r\n  let fieldBasic = field.basicVal\r\n  if (typeof fieldBasic === \"function\")\r\n    fieldBasic = fieldBasic?.(talentLvlKey, build.finalStats, character)\r\n  if (fieldBasic)\r\n    fieldBasic = <OverlayTrigger\r\n      placement=\"top\"\r\n      overlay={<Tooltip>{fieldBasic}</Tooltip>}\r\n    >\r\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"ml-2\" style={{ cursor: \"help\" }} />\r\n    </OverlayTrigger>\r\n\r\n  let fieldVal = field.value ? field.value : field.finalVal\r\n  if (typeof fieldVal === \"function\") {\r\n    fieldVal = fieldVal?.(talentLvlKey, build.finalStats, character)\r\n  }\r\n  if (typeof fieldVal === \"number\")\r\n    fieldVal = Math.round(fieldVal)\r\n\r\n  //compareAgainstEquipped\r\n  if (compareAgainstEquipped && equippedBuild && typeof fieldVal === \"number\") {\r\n    let fieldEquippedVal = field.value ? field.value : field.finalVal\r\n    if (typeof fieldEquippedVal === \"function\")\r\n      fieldEquippedVal = parseInt(fieldEquippedVal?.(talentLvlKey, equippedBuild.finalStats, character)?.toFixed?.(0))\r\n    let diff = fieldVal - fieldEquippedVal\r\n    fieldVal = <span>{fieldEquippedVal}{diff ? <span className={diff > 0 ? \"text-success\" : \"text-danger\"}> ({diff > 0 ? \"+\" : \"\"}{diff})</span> : \"\"}</span>\r\n  }\r\n\r\n  return <ListGroup.Item variant={index % 2 ? \"customdark\" : \"customdarker\"} className=\"p-2\">\r\n    <div>\r\n      <span><b>{fieldText}</b>{fieldBasic}</span>\r\n      <span className={`float-right text-right text-${fieldVariant}`} >{fieldVal}</span>\r\n    </div>\r\n  </ListGroup.Item>\r\n}","import { faSignature, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Badge, ButtonGroup, Dropdown, DropdownButton, FormControl, Image, InputGroup, Nav, Tab } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DropdownToggle from 'react-bootstrap/esm/DropdownToggle';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Artifact from '../Artifact/Artifact';\r\nimport { WeaponLevelKeys } from '../Data/WeaponData';\r\nimport { DatabaseInitAndVerify } from '../DatabaseUtil';\r\nimport { deepClone, getRandomElementFromArray } from '../Util/Util';\r\nimport Weapon from '../Weapon/Weapon';\r\nimport Character from './Character';\r\nimport CharacterDatabase from './CharacterDatabase';\r\nimport CharacterArtifactPane from './CharacterDisplay/CharacterArtifactPane';\r\nimport CharacterOverviewPane from './CharacterDisplay/CharacterOverviewPane';\r\nimport CharacterTalentPane from './CharacterDisplay/CharacterTalentPane';\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={{ style, minWidth: \"25rem\" }}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Row>\r\n          {React.Children.toArray(children).map((child, i) => <Col key={i} xs={6}>{child}</Col>)}\r\n        </Row>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nexport default class CharacterDisplayCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    DatabaseInitAndVerify();\r\n    if (props.characterId)\r\n      this.state = CharacterDatabase.getCharacter(props.characterId)\r\n    else\r\n      this.state = CharacterDisplayCard.getInitialState()\r\n  }\r\n\r\n  static initialState = {\r\n    name: \"\",\r\n    characterKey: \"\",//the game character this is based off\r\n    levelKey: \"L1\",//combination of level and ascension\r\n    dmgMode: \"dmg\",\r\n    reactionMode: null,\r\n    equippedArtifacts: {},\r\n    artifactConditionals: [],\r\n    baseStatOverrides: {},//overriding the baseStat\r\n    weapon: {\r\n      key: \"\",\r\n      levelKey: WeaponLevelKeys[0],\r\n      refineIndex: 0,\r\n      overrideMainVal: 0,\r\n      overrideSubVal: 0,\r\n      conditionalNum: 0,\r\n    },\r\n    talentLevelKeys: {\r\n      auto: 0,\r\n      skill: 0,\r\n      burst: 0,\r\n    },\r\n    autoInfused: false,\r\n    talentConditionals: [],\r\n    constellation: 0,\r\n    compareAgainstEquipped: false//note: needs to be deleted when saving\r\n  }\r\n  static getIntialWeapon = (characterKey) => {\r\n    let weapon = deepClone(this.initialState.weapon)\r\n    weapon.key = Object.keys(Weapon.getWeaponsOfType(Character.getWeaponTypeKey(characterKey)))[0]\r\n    return weapon\r\n  }\r\n\r\n  static getInitialState = () => {\r\n    let state = deepClone(CharacterDisplayCard.initialState)\r\n    //set a random character key\r\n    state.characterKey = getRandomElementFromArray(Character.getAllCharacterKeys())\r\n    state.name = getRandomElementFromArray(Character.getTitles(state.characterKey))\r\n    //pick the first weaponType. Should be the 1* weapon, if I organize the db correctly.\r\n    state.weapon = this.getIntialWeapon(state.characterKey);\r\n    return state\r\n  }\r\n  forceUpdateComponent = () => {\r\n    if (this.state.id) {\r\n      this.setState(CharacterDatabase.getCharacter(this.state.id))\r\n    }\r\n    this.props.forceUpdate ? this.props.forceUpdate() : this.forceUpdate();\r\n  }\r\n  setSetState = (val) => this.setState(val)\r\n  setCharacterKey = (characterKey) =>\r\n    this.setState({ characterKey, name: getRandomElementFromArray(Character.getTitles(characterKey)), weapon: CharacterDisplayCard.getIntialWeapon(characterKey), reactionMode: null, autoInfused: false })\r\n  setLevelKey = (levelKey) =>\r\n    this.setState({ levelKey })\r\n\r\n  setOverride = (statKey, value) => this.setState(state => {\r\n    let baseStatOverrides = state.baseStatOverrides\r\n    let baseStatVal = Character.getBaseStatValue(this.state, statKey)\r\n    if (baseStatVal === value) {\r\n      delete baseStatOverrides[statKey]\r\n      return { baseStatOverrides }\r\n    } else {\r\n      baseStatOverrides[statKey] = value\r\n      return { baseStatOverrides }\r\n    }\r\n  })\r\n\r\n  setConstellation = (constellation) => this.setState({ constellation })\r\n  componentDidMount() {\r\n    Promise.all([\r\n      Character.getCharacterDataImport(),\r\n      Weapon.getWeaponDataImport(),\r\n      Artifact.getDataImport(),\r\n    ]).then(() => this.forceUpdate())\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.characterId && this.state.id !== this.props.characterId)\r\n      this.setState(CharacterDatabase.getCharacter(this.props.characterId))\r\n    if (this.props.editable) {\r\n      //save this.state as character to character db.\r\n      let state = deepClone(this.state)\r\n      delete state.compareAgainstEquipped\r\n      if (this.state.id) {\r\n        CharacterDatabase.updateCharacter(state)\r\n      } else {\r\n        let id = CharacterDatabase.addCharacter(state)\r\n        this.setState({ id })\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let { footer, newBuild, editable, onClose } = this.props\r\n    let character = this.state\r\n    let { characterKey, levelKey, compareAgainstEquipped } = this.state\r\n    let equippedBuild = Character.calculateBuild(this.state)\r\n    let HeaderIconDisplay = <span >\r\n      <Image src={Character.getThumb(characterKey)} className=\"thumb-small my-n1 ml-n2\" roundedCircle />\r\n      <h6 className=\"d-inline\"> {Character.getName(characterKey)} </h6>\r\n    </span>\r\n    // main CharacterDisplayCard\r\n    return (<Card bg=\"darkcontent\" text=\"lightfont\" >\r\n      <Card.Header>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            {/* character selecter/display */}\r\n            {editable ? <ButtonGroup>\r\n              <Dropdown>\r\n                <DropdownToggle as={Button}>\r\n                  {HeaderIconDisplay}\r\n                </DropdownToggle>\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                  {Character.getAllCharacterKeys().map(charKey =>\r\n                    <Dropdown.Item key={charKey} onClick={() => this.setCharacterKey(charKey)}>\r\n                      <span >\r\n                        <Image src={Character.getThumb(charKey)} className={`thumb-small p-0 m-n1 grad-${Character.getStar(charKey)}star`} thumbnail />\r\n                        <h6 className=\"d-inline ml-2\">{Character.getName(charKey)} </h6>\r\n                      </span>\r\n                    </Dropdown.Item>)}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              <DropdownButton as={ButtonGroup} title={\r\n                <h6 className=\"d-inline\">{Character.getlevelNames(levelKey)} </h6>\r\n              }>\r\n                <Dropdown.ItemText>\r\n                  <span>Select Base Stat Template</span>\r\n                </Dropdown.ItemText>\r\n                {Character.getlevelKeys().map(lvlKey =>\r\n                  <Dropdown.Item key={lvlKey} onClick={() => this.setLevelKey(lvlKey)}>\r\n                    <h6 >{Character.getlevelNames(lvlKey)} </h6>\r\n                  </Dropdown.Item>)}\r\n              </DropdownButton>\r\n            </ButtonGroup> : <span>{HeaderIconDisplay} Lvl. {Character.getStatValueWithOverride(this.state, \"char_level\")}</span>}\r\n          </Col>\r\n          {/* Name editor/display */}\r\n          <Col className=\"pl-0 pr-0\">\r\n            {editable ? <InputGroup >\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faSignature} /> Name</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl placeholder=\"Name\"\r\n                value={this.state.name}\r\n                onChange={(e) => this.setState({ name: e.target.value })}\r\n              />\r\n            </InputGroup> :\r\n              <Card.Title className=\"mb-0 align-self-center\"><span>{this.state.name}</span></Card.Title>}\r\n          </Col>\r\n          {/* Compare against new build toggle */}\r\n          {newBuild ? <Col xs=\"auto\">\r\n            <ButtonGroup>\r\n              <Button variant={compareAgainstEquipped ? \"primary\" : \"success\"} disabled={!compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: false })}>\r\n                <small>Show New artifact Stats</small>\r\n              </Button>\r\n              <Button variant={!compareAgainstEquipped ? \"primary\" : \"success\"} disabled={compareAgainstEquipped} onClick={() => this.setState({ compareAgainstEquipped: true })}>\r\n                <small>Compare against equipped artifact</small>\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Col> : null}\r\n          <Col xs=\"auto\" >\r\n            <Button variant=\"danger\" onClick={onClose}>\r\n              <FontAwesomeIcon icon={faTimes} /></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Tab.Container defaultActiveKey={newBuild ? \"newartifacts\" : \"character\"} mountOnEnter={true} unmountOnExit={true}>\r\n          <Nav variant=\"pills\" className=\"mb-2 ml-2\">\r\n            <Nav.Item >\r\n              <Nav.Link eventKey=\"character\">Character</Nav.Link>\r\n            </Nav.Item>\r\n            {newBuild ? <Nav.Item>\r\n              <Nav.Link eventKey=\"newartifacts\">New Artifacts</Nav.Link>\r\n            </Nav.Item> : null}\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"artifacts\">{newBuild ? \"Current Artifacts\" : \"Artifacts\"}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"talent\" disabled={process.env.NODE_ENV !== \"development\" && (Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\"}>Talents {(Character.getCDataObj(characterKey)?.talent?.skill?.name || \"TEMPLATE\") === \"TEMPLATE\" && <Badge variant=\"warning\">WIP</Badge>}</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"team\" disabled>Team <Badge variant=\"warning\">WIP</Badge></Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"character\">\r\n              <CharacterOverviewPane\r\n                setState={this.setSetState}\r\n                setOverride={this.setOverride}\r\n                setConstellation={this.setConstellation}\r\n                {...{ character, editable, equippedBuild, newBuild }}\r\n              />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"artifacts\" >\r\n              <CharacterArtifactPane {...{ character, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} setState={this.setSetState} />\r\n            </Tab.Pane>\r\n            {newBuild ? <Tab.Pane eventKey=\"newartifacts\" >\r\n              <CharacterArtifactPane {...{ character, newBuild, equippedBuild, editable, forceUpdate: this.forceUpdateComponent }} />\r\n            </Tab.Pane> : null}\r\n            <Tab.Pane eventKey=\"talent\">\r\n              <CharacterTalentPane {...{ character, newBuild, equippedBuild, editable }} setState={this.setSetState} setOverride={this.setOverride} />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      </Card.Body>\r\n      {footer && <Card.Footer>\r\n        {footer}\r\n      </Card.Footer>}\r\n    </Card>)\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import Artifact from \"../Artifact/Artifact\";\r\nimport ArtifactDatabase from \"../Artifact/ArtifactDatabase\";\r\nimport { CharacterData, CharacterDataImport, characterStatBase, LevelsData } from \"../Data/CharacterData\";\r\nimport ElementalData from \"../Data/ElementalData\";\r\nimport { AttachLazyFormulas, ElementToReactionKeys } from \"../StatData\";\r\nimport ConditionalsUtil from \"../Util/ConditionalsUtil\";\r\nimport { clamp, deepClone } from \"../Util/Util\";\r\nimport Weapon from \"../Weapon/Weapon\";\r\nimport CharacterDatabase from \"./CharacterDatabase\";\r\n\r\nexport default class Character {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Character) throw Error('A static class cannot be instantiated.'); }\r\n  static getCharacterDataImport = () => CharacterDataImport\r\n  static getBaseStatValue = (character, statKey, defVal = 0) => {\r\n    let { characterKey, levelKey } = character\r\n    if (statKey === \"specializedStatKey\") return this.getSpecializedStatKey(characterKey);\r\n    if (statKey === \"specializedStatVal\") return this.getSpeicalizedStatVal(characterKey, levelKey)\r\n    if (statKey === \"atk_weapon\") return Weapon.getWeaponMainStatValWithOverride(character?.weapon)\r\n    if (statKey === \"char_level\" || statKey === \"enemy_level\") return this.getLevel(levelKey)\r\n    if (statKey === \"enemy_phy_res\" || statKey.includes(\"enemy_ele_res\")) return 10\r\n    if (statKey in characterStatBase) return characterStatBase[statKey]\r\n    let characterObj = this.getCDataObj(characterKey)\r\n    if (characterObj && statKey in characterObj.baseStat) return characterObj.baseStat[statKey][this.getIndexFromlevelkey(levelKey)]\r\n    return defVal\r\n  }\r\n\r\n  static getCDataObj = (charKey) => CharacterData[charKey];\r\n  static getElementalName = (elementalKey, defVal = \"\") => elementalKey === \"physical\" ? \"Physical\" : (ElementalData?.[elementalKey]?.name || defVal)\r\n  static getAllCharacterKeys = () => Object.keys(CharacterData)\r\n\r\n  static getName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.name || defVal)\r\n  static getStar = (charKey, defVal = 0) => (this.getCDataObj(charKey)?.star || defVal)\r\n  static getElementalKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.elementKey || defVal)\r\n  static getElementalKeys = () => Object.keys(ElementalData)\r\n  static getWeaponTypeKey = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.weaponTypeKey || defVal)\r\n  static getConstellationName = (charKey, defVal = \"\") => (this.getCDataObj(charKey)?.constellationName || defVal)\r\n  static getTitles = (charKey, defVal = []) => (this.getCDataObj(charKey)?.titles || defVal)\r\n\r\n  //LEVEL\r\n  static getlevelKeys = () => Object.keys(LevelsData)\r\n  static getlevelNames = (levelKey, defVal = \"\") => (LevelsData?.[levelKey]?.name || defVal)\r\n  static getIndexFromlevelkey = (levelKey) => this.getlevelKeys().indexOf(levelKey);\r\n  static getLevel = (levelKey, defVal = 1) => (LevelsData?.[levelKey]?.level || defVal)\r\n  static getAscension = (levelKey, defVal = 0) => (LevelsData?.[levelKey]?.asend || defVal)\r\n\r\n  //SPECIALIZED STAT\r\n  static getSpecializedStat = (charKey) => this.getCDataObj(charKey)?.specializeStat;\r\n  static getSpecializedStatKey = (charKey) => this.getSpecializedStat(charKey)?.key;\r\n  static getSpeicalizedStatVal = (charKey, levelKey) => this.getSpecializedStat(charKey)?.value?.[this.getIndexFromlevelkey(levelKey)]\r\n  //ASSETS\r\n  static getThumb = (charKey, defVal = null) => this.getCDataObj(charKey)?.thumbImg || defVal\r\n  static getCard = (charKey, defVal = null) => this.getCDataObj(charKey)?.cardImg || defVal\r\n  static getTalentImg = (charKey, talentKey, defVal = null) => this.getCDataObj(charKey)?.talent?.[talentKey]?.img || defVal\r\n  static getConstellationImg = (charKey, constIndex, defVal = null) => this.getCDataObj(charKey)?.talent?.[`constellation${constIndex + 1}`]?.img || defVal\r\n\r\n  //talents\r\n  static getTalentName = (charKey, talentKey, defVal = \"\") => this.getCDataObj(charKey)?.talent?.[talentKey]?.name || defVal\r\n\r\n  static getTalentLevelBoost = (characterKey, talentKey, constellation, defVal = 0) => {\r\n    //so far we only get level boost from constellations, so only burst and skills.\r\n    if (talentKey !== \"burst\" && talentKey !== \"skill\") return defVal\r\n    let talents = this.getCDataObj(characterKey)?.talent || {}\r\n    for (let i = 1; i <= constellation; i++) {\r\n      let talentBoost = talents[`constellation${i}`]?.talentBoost || {};\r\n      let boostEntry = Object.entries(talentBoost).find(([key, val]) => key === talentKey)\r\n      if (boostEntry) return boostEntry[1]\r\n    }\r\n    return defVal\r\n  }\r\n  static getTalentLevelKey = (character, talentKey, constellation, withBoost = false) => {\r\n    if (talentKey === \"auto\" || talentKey === \"skill\" || talentKey === \"burst\") {\r\n      let talentLvlKey = character?.talentLevelKeys?.[talentKey] || 0;\r\n      let levelBoost = this.getTalentLevelBoost(character?.characterKey, talentKey, constellation)\r\n      talentLvlKey = clamp(talentLvlKey + levelBoost, 0, 14)\r\n      return withBoost ? { talentLvlKey, levelBoost } : talentLvlKey\r\n    } else return withBoost ? {} : null\r\n  }\r\n  static getTalentDocument = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.document || defVal\r\n  static getTalentFields = (charKey, talentKey, defVal = []) => this.getCDataObj(charKey)?.talent?.[talentKey]?.fields || defVal\r\n  static getTalentStats = (charKey, talentKey, constellation, ascension, defVal = null) => {\r\n    let stats = this.getCDataObj(charKey)?.talent?.[talentKey]?.stats\r\n    if (typeof stats === \"function\")\r\n      return stats(constellation, ascension)\r\n    return stats || defVal\r\n  }\r\n  static getTalentStatsAll = (charKey, constellation, ascension) => {\r\n    let talents = this.getCDataObj(charKey)?.talent || {}\r\n    let statsArr = []\r\n    Object.keys(talents).forEach(talentKey => {\r\n      let stats = this.getTalentStats(charKey, talentKey, constellation, ascension)\r\n      if (stats) statsArr.push(stats)\r\n    })\r\n    return statsArr\r\n  }\r\n  static getTalentConditional = (charKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension, defVal = null) => {\r\n    let doc = this.getTalentDocument(charKey, talentKey)\r\n    let cond = null\r\n    for (const section of doc) {\r\n      let tempCond = section.conditional\r\n      if (typeof tempCond === \"function\")\r\n        tempCond = tempCond(talentLvlKey, constellation, ascension)\r\n      if (tempCond?.conditionalKey === conditionalKey) {\r\n        cond = tempCond\r\n        break;\r\n      }\r\n    }\r\n    return cond || defVal\r\n  }\r\n  static getTalentConditionalStats = (conditional, conditionalNum, defVal = null) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let [stats = {}, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => key === \"formulaOverrides\" ? [key, val] : [key, val * stacks]))\r\n  }\r\n  static getTalentConditionalFields = (conditional, conditionalNum, defVal = []) => {\r\n    if (!conditionalNum || !conditional) return defVal\r\n    let fields = ConditionalsUtil.getConditionalProp(conditional, \"fields\", conditionalNum)[0]\r\n    return fields || defVal\r\n  }\r\n  static getTalentStatKey = (skillKey, character, elemental = false) => {\r\n    let { dmgMode = \"\", autoInfused = false, characterKey, reactionMode = null } = character\r\n    if (skillKey === \"phy\") return `phy_${dmgMode}`\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey) + \"_\"\r\n    //{pyro_}{burst}_{avg_dmg}\r\n    return `${eleKey}${skillKey}_${dmgMode}`\r\n  }\r\n  static getTalentStatKeyVariant = (skillKey, character, elemental = false) => {\r\n    if (skillKey === \"phy\") return \"physical\"\r\n    let { autoInfused = false, characterKey, reactionMode = null } = character\r\n    let charEleKey = this.getElementalKey(characterKey)\r\n    //reactionMode can be one of pyro_vaporize, pyro_melt, hydro_vaporize,cryo_melt\r\n    if ([\"pyro_vaporize\", \"hydro_vaporize\"].includes(reactionMode))\r\n      reactionMode = \"vaporize\"\r\n    else if ([\"pyro_melt\", \"cryo_melt\"].includes(reactionMode))\r\n      reactionMode = \"melt\"\r\n    if (!elemental) elemental = this.isAutoElemental(characterKey) || (autoInfused && (Character.getCDataObj(characterKey)?.talent?.auto?.infusable || false))\r\n    let eleKey = \"physical\"\r\n    if (skillKey === \"ele\" || skillKey === \"burst\" || skillKey === \"skill\" || elemental)\r\n      eleKey = (reactionMode ? reactionMode : charEleKey)\r\n    return eleKey\r\n  }\r\n\r\n  static isAutoElemental = (charKey, defVal = false) => this.getWeaponTypeKey(charKey) === \"catalyst\" || defVal\r\n  static isAutoInfusable = (charKey, defVal = false) => this.getCDataObj(charKey)?.talent?.auto?.infusable || defVal\r\n\r\n  static getDisplayStatKeys = (characterKey, defVal = []) => {\r\n    if (!characterKey) return defVal\r\n    let eleKey = Character.getElementalKey(characterKey)\r\n    if (!eleKey) return defVal //usually means the character has not been lazy loaded yet\r\n    let keys = [\"hp_final\", \"atk_final\", \"def_final\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"ener_rech\", `${eleKey}_ele_dmg_bonus`]\r\n    //we need to figure out if the character has: normal phy auto, elemental auto, infusable auto(both normal and phy)\r\n    let isAutoElemental = Character.isAutoElemental(characterKey)\r\n    let isAutoInfusable = Character.isAutoInfusable(characterKey)\r\n    let atkKeys = []\r\n    if (!isAutoElemental)\r\n      atkKeys.push(\"phy_dmg_bonus\")\r\n\r\n    if (!isAutoElemental) //add phy auto + charged + physical \r\n      atkKeys.push(\"norm_atk_avg_dmg\", \"char_atk_avg_dmg\")\r\n\r\n    if (isAutoElemental || isAutoInfusable) //add elemental auto + charged\r\n      atkKeys.push(`${eleKey}_norm_atk_avg_dmg`, `${eleKey}_char_atk_avg_dmg`)\r\n    else if (Character.getWeaponTypeKey(characterKey) === \"bow\") {//bow charged atk does elemental dmg on charge\r\n      atkKeys.push(`${eleKey}_char_atk_avg_dmg`)\r\n    }\r\n    //show skill/burst \r\n    atkKeys.push(`${eleKey}_skill_avg_dmg`, `${eleKey}_burst_avg_dmg`)\r\n    keys.push(...atkKeys)\r\n    if (eleKey === \"pyro\") {\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    } else if (eleKey === \"cryo\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_melt_`)))\r\n    else if (eleKey === \"hydro\")\r\n      keys.push(...atkKeys.filter(key => key.startsWith(`${eleKey}_`)).map(key => key.replace(`${eleKey}_`, `${eleKey}_vaporize_`)))\r\n\r\n    //show elemental interactions\r\n    keys.push(...ElementToReactionKeys[eleKey])\r\n    let weaponTypeKey = this.getWeaponTypeKey(characterKey)\r\n    if (!keys.includes(\"shatter_dmg\") && weaponTypeKey === \"claymore\") keys.push(\"shatter_dmg\")\r\n    return keys\r\n  }\r\n\r\n  static hasOverride = (character, statKey) => {\r\n    if (statKey === \"hp_final\")\r\n      return Character.hasOverride(character, \"hp\") || Character.hasOverride(character, \"hp_\") || Character.hasOverride(character, \"hp_base\") || false\r\n    else if (statKey === \"def_final\")\r\n      return Character.hasOverride(character, \"def\") || Character.hasOverride(character, \"def_\") || Character.hasOverride(character, \"def_base\") || false\r\n    else if (statKey === \"atk_final\")\r\n      return Character.hasOverride(character, \"atk\") || Character.hasOverride(character, \"atk_\") || Character.hasOverride(character, \"atk_base\") || false\r\n    return character && character.baseStatOverrides ? (statKey in character.baseStatOverrides) : false;\r\n  }\r\n\r\n  static getStatValueWithOverride = (character, statKey, defVal = 0) => {\r\n    if (this.hasOverride(character, statKey)) return character?.baseStatOverrides?.[statKey]\r\n    else return this.getBaseStatValue(character, statKey, defVal)\r\n  }\r\n\r\n  //equipment, with consideration on swapping equipped.\r\n  static equipArtifacts = (characterId, artifactIds) => {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (!character) return;\r\n    let artIdsOnCharacter = character.equippedArtifacts;\r\n    let artIdsNotOnCharacter = artifactIds\r\n\r\n    //swap, by slot\r\n    Artifact.getSlotKeys().forEach(slotKey => {\r\n      let artNotOnChar = ArtifactDatabase.getArtifact(artIdsNotOnCharacter?.[slotKey])\r\n      if (artNotOnChar.location === characterId) return; //it is already equipped\r\n      let artOnChar = ArtifactDatabase.getArtifact(artIdsOnCharacter?.[slotKey])\r\n      let notCharLoc = (artNotOnChar?.location || \"\")\r\n      //move current art to other char\r\n      if (artOnChar) ArtifactDatabase.moveToNewLocation(artOnChar.id, notCharLoc)\r\n      //move current art to other char\r\n      if (notCharLoc) CharacterDatabase.equipArtifact(notCharLoc, artOnChar)\r\n      //move other art to current char\r\n      if (artNotOnChar) ArtifactDatabase.moveToNewLocation(artNotOnChar.id, characterId)\r\n    })\r\n    //move other art to current char \r\n    character.equippedArtifacts = {}\r\n    Object.entries(artifactIds).forEach(([key, artid]) =>\r\n      character.equippedArtifacts[key] = artid)\r\n    CharacterDatabase.updateCharacter(character);\r\n  }\r\n  static removeCharacter(characterId) {\r\n    let character = CharacterDatabase.getCharacter(characterId)\r\n    if (character.equippedArtifacts)\r\n      Object.values(character.equippedArtifacts).forEach(artid =>\r\n        ArtifactDatabase.moveToNewLocation(artid, \"\"))\r\n    CharacterDatabase.removeCharacterById(characterId)\r\n  }\r\n\r\n  static calculateBuild = (character) => {\r\n    let artifacts = Object.fromEntries(Object.entries(character.equippedArtifacts).map(([key, artid]) => [key, ArtifactDatabase.getArtifact(artid)]))\r\n    let initialStats = Character.calculateCharacterWithWeaponStats(character)\r\n    return this.calculateBuildWithObjs(character.artifactConditionals, initialStats, artifacts)\r\n  }\r\n\r\n  static calculateBuildWithObjs = (artifactConditionals, initialStats, artifacts) => {\r\n    let setToSlots = Artifact.setToSlots(artifacts)\r\n    let artifactSetEffectsStats = Artifact.getArtifactSetEffectsStats(setToSlots)\r\n\r\n    let stats = deepClone(initialStats)\r\n    //add artifact and artifactsets\r\n    Object.values(artifacts).forEach(art => {\r\n      if (!art) return\r\n      //main stats\r\n      stats[art.mainStatKey] = (stats[art.mainStatKey] || 0) + Artifact.getMainStatValue(art.mainStatKey, art.numStars, stats.artifactsAssumeFull ? art.numStars * 4 : art.level)\r\n      //substats\r\n      art.substats.forEach((substat) =>\r\n        substat && substat.key && (stats[substat.key] = (stats[substat.key] || 0) + substat.value))\r\n    })\r\n    //setEffects\r\n    artifactSetEffectsStats.forEach(stat => stats[stat.key] = (stats[stat.key] || 0) + stat.statVal)\r\n    //setEffects conditionals\r\n    artifactConditionals && artifactConditionals.forEach(conditional => {\r\n      let { srcKey: setKey, srcKey2: setNumKey } = conditional\r\n      Object.entries(Artifact.getConditionalStats(setKey, setNumKey, conditional.conditionalNum))\r\n        .forEach(([statKey, val]) => stats[statKey] = (stats[statKey] || 0) + val)\r\n    })\r\n    AttachLazyFormulas(stats)\r\n    return {\r\n      artifactIds: Object.fromEntries(Object.entries(artifacts).map(([key, val]) => [key, val?.id])),\r\n      setToSlots,\r\n      finalStats: stats,\r\n      artifactConditionals\r\n    }\r\n  }\r\n  static calculateCharacterWithWeaponStats = (character) => {\r\n    let statKeys = [\"hp_base\", \"atk_base\", \"def_base\", \"atk_weapon\", \"char_level\", \"enemy_level\", \"enemy_phy_res\", \"enemy_phy_immunity\", ...Object.keys(characterStatBase)]\r\n    let initialStats = Object.fromEntries(statKeys.map(key => [key, this.getStatValueWithOverride(character, key)]))\r\n    //add element\r\n    initialStats.char_ele_key = this.getElementalKey(character.characterKey);\r\n\r\n    //enemy stuff\r\n    Character.getElementalKeys().forEach(eleKey => {\r\n      let statKey = `${eleKey}_enemy_ele_res`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n      statKey = `${eleKey}_enemy_ele_immunity`\r\n      initialStats[statKey] = this.getStatValueWithOverride(character, statKey);\r\n    })\r\n\r\n    //all the rest of the overrides\r\n    let overrides = character?.baseStatOverrides || {}\r\n    Object.entries(overrides).forEach(([statKey, val]) => !initialStats.hasOwnProperty(statKey) && (initialStats[statKey] = val))\r\n\r\n    //add specialized stat\r\n    let specialStatKey = Character.getStatValueWithOverride(character, \"specializedStatKey\")\r\n    if (specialStatKey) {\r\n      let specializedStatVal = Character.getStatValueWithOverride(character, \"specializedStatVal\")\r\n      initialStats[specialStatKey] = (initialStats[specialStatKey] || 0) + specializedStatVal\r\n    }\r\n\r\n    let addStatsObj = stats => stats && Object.entries(stats).forEach(([key, val]) => {\r\n      if (key === \"formulaOverrides\") {\r\n        initialStats.formulaOverrides = [...(initialStats.formulaOverrides || []), ...val]\r\n        return\r\n      }\r\n      initialStats[key] = (initialStats[key] || 0) + val\r\n    })\r\n\r\n    let { characterKey, levelKey, constellation, talentConditionals = [] } = character\r\n    let ascension = Character.getAscension(levelKey)\r\n    //add stats from talentconditionals\r\n    talentConditionals.forEach(cond => {\r\n      let { srcKey: talentKey, srcKey2: conditionalKey, conditionalNum } = cond\r\n      let talentLvlKey = Character.getTalentLevelKey(character, talentKey)\r\n      let conditional = Character.getTalentConditional(characterKey, talentKey, conditionalKey, talentLvlKey, constellation, ascension)\r\n      addStatsObj(Character.getTalentConditionalStats(conditional, conditionalNum, {}))\r\n    })\r\n\r\n    //add stats from all talents\r\n    let allTalentStats = Character.getTalentStatsAll(characterKey, constellation, ascension)\r\n    allTalentStats.forEach(addStatsObj)\r\n\r\n    //add weapon stats\r\n    let weaponStats = {\r\n      subKey: Weapon.getWeaponSubStatKey(character?.weapon?.key),\r\n      subVal: Weapon.getWeaponSubStatValWithOverride(character?.weapon),\r\n      bonusStats: Weapon.getWeaponBonusStat(character?.weapon?.key, character?.weapon?.refineIndex),\r\n      conditionalStats: Weapon.getWeaponConditionalStat(character?.weapon?.key, character?.weapon?.refineIndex, character?.weapon?.conditionalNum)\r\n    }\r\n    if (weaponStats.subKey)\r\n      initialStats[weaponStats.subKey] = (initialStats[weaponStats.subKey] || 0) + weaponStats.subVal\r\n    if (weaponStats.bonusStats) addStatsObj(weaponStats.bonusStats)\r\n    if (weaponStats.conditionalStats) addStatsObj(weaponStats.conditionalStats);\r\n\r\n    return initialStats\r\n  }\r\n\r\n}","import ElementalData from \"./Data/ElementalData\";\r\nimport { ReactionMatrix, Formulas, OverrideFormulas, StatData } from \"./StatData\";\r\n\r\nexport default class Stat {\r\n  //do not instantiate.\r\n  constructor() {\r\n    if (this instanceof Stat)\r\n      throw Error('A static class cannot be instantiated.');\r\n  }\r\n  static getStatName = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.name) || defVal\r\n  static getStatNamePretty = (key, defVal = \"\") =>\r\n    (htmlStatsData[key] || StatData[key]?.pretty || StatData[key]?.name) || defVal\r\n  static getStatNameRaw = (key, defVal = \"\") =>\r\n    StatData[key]?.name || defVal\r\n  static getStatNameWithPercent = (key, defVal = \"\") => {\r\n    let name = this.getStatName(key, defVal)\r\n    if (name !== defVal && (key === \"hp_\" || key === \"atk_\" || key === \"def_\"))\r\n      name += \"%\"\r\n    return name;\r\n  }\r\n  static getStatVariant = (key, defVal = \"\") =>\r\n    StatData[key]?.variant || defVal\r\n  static getStatUnit = (key, defVal = \"\") =>\r\n    StatData[key]?.unit === \"multi\" ? defVal : (StatData[key]?.unit || defVal)\r\n\r\n  static fixedUnit = (key) => {\r\n    if (StatData[key]?.unit === \"multi\") return 3\r\n    let unit = Stat.getStatUnit(key)\r\n    return unit === \"%\" ? 1 : 0\r\n  }\r\n  static printStat = (statKey, stats) =>\r\n    f({ stats, expand: false }, statKey)\r\n\r\n  static printFormula = (statKey, stats, formulaOverrides = [], expand = true) => {\r\n    for (const formulaOverride of formulaOverrides)\r\n      if (OverrideFormulas[formulaOverride?.key]?.key === statKey)\r\n        return Stat.printOverrideFormula(stats, formulaOverride.key, formulaOverride.options, false)\r\n    return FormulaText?.[statKey] && typeof FormulaText?.[statKey] === \"function\" &&\r\n      (<span>{FormulaText[statKey]({ stats, expand })}</span>)\r\n  }\r\n\r\n  static printOverrideFormula = (stats, overrideKey, options, expand = true) =>\r\n    OverrideFormulasText?.[overrideKey] && typeof OverrideFormulasText?.[overrideKey].formulaText === \"function\" &&\r\n    (<span>{OverrideFormulasText[overrideKey].formulaText(options)({ stats, expand })}</span>)\r\n}\r\n//generate html tags based on tagged variants of the statData\r\nconst htmlStatsData = Object.fromEntries(Object.entries(StatData).filter(([key, obj]) => obj.variant).map(([key, obj]) => [key, (<span className={`text-${obj.variant} text-nowrap`}>{obj.name}</span>)]))\r\n\r\nfunction f(options, statKey) {\r\n  let { stats, expand = true } = options\r\n  if (!stats) return\r\n  if (expand && FormulaText?.[statKey])\r\n    return <span>( {FormulaText[statKey](options)} )</span>\r\n  let statName = Stat.getStatNamePretty(statKey)\r\n  let statUnit = Stat.getStatUnit(statKey)\r\n  let fixedUnit = Stat.fixedUnit(statKey)\r\n  let value = stats?.[statKey]?.toFixed?.(fixedUnit) || stats?.[statKey]\r\n  return <span className=\"text-nowrap\"><b>{statName}</b> <span className=\"text-info\">{value}{statUnit}</span></span>\r\n}\r\n\r\nconst FormulaText = {\r\n  //HP\r\n  hp_final: (o) => <span>{f(o, \"hp_base\")} * ( 1 + {f(o, \"hp_\")} ) + {f(o, \"hp\")}</span>,\r\n  //ATK\r\n  atk_final: (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")}</span>,\r\n  //DEF\r\n  def_final: (o) => <span>{f(o, \"def_base\")} * ( 1 + {f(o, \"def_\")} ) + {f(o, \"def\")}</span>,\r\n\r\n  //NORMAL\r\n  norm_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"norm_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  norm_atk_crit_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  norm_atk_avg_dmg: (o) => <span>{f(o, \"norm_atk_dmg\")} * {f(o, \"norm_atk_crit_multi\")}</span>,\r\n  norm_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"norm_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  norm_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"norm_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //CHARGED\r\n  char_atk_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"char_atk_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  char_atk_crit_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  char_atk_avg_dmg: (o) => <span>{f(o, \"char_atk_dmg\")} * {f(o, \"char_atk_crit_multi\")}</span>,\r\n  char_atk_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"char_atk_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  char_atk_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"char_atk_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  //PLUNGE\r\n  plunge_dmg: (o) => <span>{f(o, \"phy_dmg\")}</span>,\r\n  plunge_crit_dmg: (o) => <span>{f(o, \"phy_crit_dmg\")}</span>,\r\n  plunge_avg_dmg: (o) => <span>{f(o, \"phy_avg_dmg\")}</span>,\r\n  plunge_bonus_multi: (o) => <span>{f(o, \"phy_bonus_multi\")}</span>,\r\n\r\n  phy_dmg: (o) => <span>{f(o, \"atk_final\")} * {f(o, \"phy_bonus_multi\")} * {f(o, \"enemy_level_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  phy_crit_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_dmg_multi\")}</span>,\r\n  phy_avg_dmg: (o) => <span>{f(o, \"phy_dmg\")} * {f(o, \"crit_multi\")}</span>,\r\n  phy_bonus_multi: (o) => <span>( 1 + {f(o, \"phy_dmg_bonus\")} + {f(o, \"all_dmg_bonus\")} )</span>,\r\n\r\n  crit_dmg_multi: (o) => <span>( 1 + {f(o, \"crit_dmg\")} )</span>,\r\n  crit_multi: (o) => <span>( 1 + Min[ {f(o, \"crit_rate\")} , 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  skill_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"skill_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n  burst_crit_multi: (o) => <span>( 1 + Min[( {f(o, \"crit_rate\")} + {f(o, \"burst_crit_rate\")} ), 100%] * {f(o, \"crit_dmg\")} )</span>,\r\n\r\n  enemy_level_multi: (o) => <span>( 100 + {f(o, \"char_level\")}) / ( 100 + {f(o, \"enemy_level\")} + 100 + {f(o, \"char_level\")})</span>,\r\n  // enemy_phy_res_multi: (s) => s.enemy_phy_immunity ? 0 : resMultiplier(s.enemy_phy_res)\r\n  enemy_phy_res_multi: (o) => {\r\n    let im = o.stats.enemy_phy_immunity\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats.enemy_phy_res || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, \"enemy_phy_res\")} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, \"enemy_phy_res\")} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, \"enemy_phy_res\")} </span>\r\n  },\r\n\r\n  //Elemental Reactions\r\n  overloaded_dmg: (o) => <span>( 1 + {f(o, \"overloaded_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"overloaded_multi\")} * {f(o, \"pyro_enemy_ele_res_multi\")}</span>,\r\n  overloaded_multi: (o) => ReactionMatrix.overloaded.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  electrocharged_dmg: (o) => <span>( 1 + {f(o, \"electrocharged_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"electrocharged_multi\")} * {f(o, \"electro_enemy_ele_res_multi\")}</span>,\r\n  electrocharged_multi: (o) => ReactionMatrix.electrocharged.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  superconduct_dmg: (o) => <span>( 1 + {f(o, \"superconduct_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"superconduct_multi\")} * {f(o, \"cryo_enemy_ele_res_multi\")}</span>,\r\n  superconduct_multi: (o) => ReactionMatrix.superconduct.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  // burning_dmg:\r\n  swirl_dmg: (o) => <span>( 1 + {f(o, \"swirl_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"swirl_multi\")} * {f(o, \"anemo_enemy_ele_res_multi\")}</span>,\r\n  swirl_multi: (o) => ReactionMatrix.swirl.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  shatter_dmg: (o) => <span>( 1 + {f(o, \"shatter_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_y\")} * {f(o, \"shatter_multi\")} * {f(o, \"enemy_phy_res_multi\")}</span>,\r\n  shatter_multi: (o) => ReactionMatrix.shattered.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n  crystalize_dmg: (o) => <span>( 1 + {f(o, \"crystalize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_z\")} * {f(o, \"crystalize_multi\")}</span>,\r\n  crystalize_multi: (o) => ReactionMatrix.crystalize.map((val, i) => reactionMatrixElementRenderer(o, val, i)),\r\n\r\n  pyro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  hydro_vaporize_multi: (o) => <span>( 1 + {f(o, \"vaporize_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n\r\n  pyro_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 2 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  cryo_melt_multi: (o) => <span>( 1 + {f(o, \"melt_dmg_bonus\")} ) * {f(o, \"ele_mas_multi_x\")} * 1.5 * {f(o, \"trans_reaction_base_multi\")}</span>,\r\n  trans_reaction_base_multi: (o) => <span>1 + 0.189266831 * {f(0, \"ele_mas\")} * exp^(-0.000505 * {f(0, \"ele_mas\")}) / 100 </span>,\r\n\r\n  ele_mas_multi_x: (o) => <span> 1 + (25 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_y: (o) => <span> 1 + (60 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n  ele_mas_multi_z: (o) => <span> 1 + (40 / 9 * {f(o, \"ele_mas\")} / (1401 + {f(o, \"ele_mas\")} ))</span>,\r\n}\r\nfunction reactionMatrixElementRenderer(o, val, i) {\r\n  let sign = val < 0 ? \" - \" : \" + \";\r\n  let disVal = Math.abs(val)\r\n  let powerText = \"\"\r\n  if (i > 1) powerText = <span> * ( {f(o, \"char_level\")} )^{i}</span>\r\n  if (i === 1) powerText = <span> * {f(o, \"char_level\")}</span>\r\n  return <span key={i}>{sign}{disVal}{powerText}</span>\r\n}\r\n\r\n//Add Vaporize and Melt stats\r\n[[\"pyro_vaporize\", \"pyro\"], [\"hydro_vaporize\", \"hydro\"], [\"pyro_melt\", \"pyro\"], [\"cryo_melt\", \"cryo\"]].forEach(([reactionKey, baseEle]) => {\r\n  [[\"norm_atk\", \"Nomal Attack\"], [\"char_atk\", \"Charged Attack\"], [\"plunge\", \"Plunging Attack\"], [\"skill\", \"Ele. Skill\"], [\"burst\", \"Ele. Burst\"], [\"ele\", \"Elemental\"]].forEach(([atkType, atkTypeName]) =>\r\n    [\"dmg\", \"avg_dmg\", \"crit_dmg\"].forEach(dmgMode => {\r\n      let reactionDMGKey = `${reactionKey}_${atkType}_${dmgMode}`\r\n      let baseDmg = `${baseEle}_${atkType}_${dmgMode}`\r\n      FormulaText[reactionDMGKey] = (o) => <span>{f(o, `${reactionKey}_multi`)} * {f(o, baseDmg)}</span>\r\n    }));\r\n});\r\nconst eleFormulaText = {\r\n  norm_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_norm_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  norm_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  norm_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_norm_atk_dmg`)} * {f(o, `norm_atk_crit_multi`)}</span>,\r\n  norm_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `norm_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  char_atk_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_char_atk_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  char_atk_crit_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  char_atk_avg_dmg: (o, ele) => <span>{f(o, `${ele}_char_atk_dmg`)} * {f(o, `char_atk_crit_multi`)}</span>,\r\n  char_atk_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `char_atk_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  plunge_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)}</span>,\r\n  plunge_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_crit_dmg`)}</span>,\r\n  plunge_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_avg_dmg`)}</span>,\r\n  plunge_bonus_multi: (o, ele) => <span>{f(o, `${ele}_ele_bonus_multi`)}</span>,\r\n\r\n  ele_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_ele_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_phy_res_multi`)}</span>,\r\n  ele_crit_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  ele_avg_dmg: (o, ele) => <span>{f(o, `${ele}_ele_dmg`)} * {f(o, `crit_multi`)}</span>,\r\n  ele_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  skill_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_skill_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  skill_crit_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  skill_avg_dmg: (o, ele) => <span>{f(o, `${ele}_skill_dmg`)} * {f(o, `skill_crit_multi`)}</span>,\r\n  skill_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `skill_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  burst_dmg: (o, ele) => <span>{f(o, `atk_final`)} * {f(o, `${ele}_burst_bonus_multi`)} * {f(o, `enemy_level_multi`)} * {f(o, `${ele}_enemy_ele_res_multi`)}</span>,\r\n  burst_crit_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `crit_dmg_multi`)}</span>,\r\n  burst_avg_dmg: (o, ele) => <span>{f(o, `${ele}_burst_dmg`)} * {f(o, `burst_crit_multi`)}</span>,\r\n  burst_bonus_multi: (o, ele) => <span>( 1 + {f(o, `${ele}_ele_dmg_bonus`)} + {f(o, `burst_dmg_bonus`)} + {f(o, `all_dmg_bonus`)} )</span>,\r\n\r\n  enemy_ele_res_multi: (o, ele) => {\r\n    let im = o.stats[`${ele}_enemy_ele_immunity`]\r\n    if (im)\r\n      return <span>0 due to immunity</span>\r\n    let res = (o.stats[`${ele}_enemy_ele_res`] || 0) / 100\r\n    if (res < 0) return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} / 2</span>\r\n    else if (res >= 0.75) return <span> 1 / ( {f(o, `${ele}_enemy_ele_res`)} * 4 + 1)</span>\r\n    return <span> 1 - {f(o, `${ele}_enemy_ele_res`)} </span>\r\n  },\r\n}\r\n//expand the eleFormulaText to elementals\r\nObject.keys(ElementalData).forEach(eleKey =>\r\n  Object.entries(eleFormulaText).forEach(([key, func]) =>\r\n    Object.defineProperty(FormulaText, `${eleKey}_${key}`, {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: (obj) => (func)(obj, eleKey),\r\n    })))\r\n\r\nconst OverrideFormulasText = {\r\n  noelle_burst_atk: {\r\n    formulaText: (options) => (o) => <span>( {f(o, \"atk_base\")} + {f(o, \"atk_weapon\")} ) * ( 1 + {f(o, \"atk_\")} ) + {f(o, \"atk\")} + {f(o, \"def_final\")} * {options.value}%</span>,\r\n  }\r\n}\r\n\r\n//checks for development\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!FormulaText[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in FormulaText`)\r\n})\r\nprocess.env.NODE_ENV === \"development\" && Object.keys(Formulas).forEach(key => {\r\n  if (!StatData[key]) console.error(`Formula \"${key}\" does not have a corresponding entry in StatData`)\r\n})\r\n\r\nexport {\r\n  FormulaText,\r\n};","import { faBahai, faFeatherAlt, faHourglass, faWineGlass, faCrown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SlotIcon = {\r\n  flower: faBahai,\r\n  plume: faFeatherAlt,\r\n  sands: faHourglass,\r\n  goblet: faWineGlass,\r\n  circlet: faCrown\r\n}\r\nexport default SlotIcon","import ElementalData from './ElementalData';\r\nlet ArtifactData = {}\r\nlet ArtifactDataImport = import('./Artifacts')\r\nArtifactDataImport.then(imp => {\r\n  ArtifactData = imp.default\r\n  ArtifactDataImport = null\r\n})\r\nconst ArtifactMainSlotKeys = [\r\n  \"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"ele_mas\", \"ener_rech\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\", \"phy_dmg_bonus\",\r\n]\r\nObject.keys(ElementalData).forEach(key => ArtifactMainSlotKeys.push(`${key}_ele_dmg_bonus`))\r\n\r\nconst ArtifactStarsData = {\r\n  // 1: { subsBaselow: 0, subBaseHigh: 0, numUpgradesOrUnlocks: 1 },\r\n  // 2: { subsBaselow: 0, subBaseHigh: 1, numUpgradesOrUnlocks: 2 },\r\n  3: { subsBaselow: 1, subBaseHigh: 2, numUpgradesOrUnlocks: 3 },\r\n  4: { subsBaselow: 2, subBaseHigh: 3, numUpgradesOrUnlocks: 4 },\r\n  5: { subsBaselow: 3, subBaseHigh: 4, numUpgradesOrUnlocks: 5 }\r\n};\r\n\r\nconst ArtifactMainStatsData = {\r\n  1: {\r\n    hp: [129, 178, 227, 275, 324],\r\n    atk: [8, 12, 15, 18, 21],\r\n    hp_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    atk_: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    def_: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    phy_dmg_bonus: [3.9, 5.4, 6.9, 8.4, 9.9],\r\n    ele_dmg_bonus: [3.1, 4.3, 5.5, 6.7, 7.9],\r\n    ele_mas: [13, 17, 22, 27, 32],\r\n    ener_rech: [3.5, 4.8, 6.1, 7.5, 8.8],\r\n    crit_rate: [2.1, 2.9, 3.7, 4.5, 5.3],\r\n    crit_dmg: [4.2, 5.8, 7.4, 9.0, 10.5],\r\n    heal_bonu: [2.4, 3.3, 4.3, 5.2, 6.1],\r\n  },\r\n  2: {\r\n    hp: [258, 331, 404, 478, 551, 624, 697, 770, 843],\r\n    atk: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    hp_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    atk_: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    def_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    phy_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1],\r\n    ele_dmg_bonus: [4.2, 5.4, 6.6, 7.8, 9, 10.1, 11.3, 12.5, 13.7],\r\n    ele_mas: [17, 22, 26, 31, 36, 41, 45, 50, 55],\r\n    ener_rech: [4.7, 6, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2],\r\n    crit_rate: [2.8, 3.6, 4.4, 5.2, 6, 6.8, 7.6, 8.3, 9.1],\r\n    crit_dmg: [5.6, 7.2, 8.8, 10.4, 11.9, 13.5, 15.1, 16.7, 18.3],\r\n    heal_bonu: [3.2, 4.1, 5.1, 6, 6.9, 7.8, 8.7, 9.6, 10.5],\r\n  },\r\n  3: {\r\n    hp: [430, 552, 674, 796, 918, 1040, 1162, 1283, 1405, 1527, 1649, 1771, 1893],\r\n    atk: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123],\r\n    hp_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    atk_: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    def_: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    phy_dmg_bonus: [6.6, 8.4, 10.3, 12.1, 14.0, 15.8, 17.7, 19.6, 21.4, 23.3, 25.1, 27.0, 28.8],\r\n    ele_dmg_bonus: [5.2, 6.7, 8.2, 9.7, 11.2, 12.7, 14.2, 15.6, 17.1, 18.6, 20.1, 21.6, 23.1],\r\n    ele_mas: [21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 80, 86, 92],\r\n    ener_rech: [5.8, 7.5, 9.1, 10.8, 12.4, 14.1, 15.7, 17.4, 19.0, 20.7, 22.3, 24.0, 25.6],\r\n    crit_rate: [3.5, 4.5, 5.5, 6.5, 7.5, 8.4, 9.4, 10.4, 11.4, 12.4, 13.4, 14.4, 15.4],\r\n    crit_dmg: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8],\r\n    heal_bonu: [4.0, 5.2, 6.3, 7.5, 8.6, 9.8, 10.9, 12.0, 13.2, 14.3, 15.5, 16.6, 17.8],\r\n  },\r\n  4: {\r\n    hp: [645, 828, 1011, 1194, 1377, 1559, 1742, 1925, 2108, 2291, 2474, 2657, 2839, 3022, 3205, 3388, 3571],\r\n    atk: [42, 54, 66, 78, 90, 102, 113, 125, 137, 149, 161, 173, 185, 197, 209, 221, 232],\r\n    hp_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    atk_: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    def_: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    phy_dmg_bonus: [7.9, 10.1, 12.3, 14.6, 16.8, 19.0, 21.2, 23.5, 25.7, 27.9, 30.2, 32.4, 34.6, 36.8, 39.1, 41.3, 43.5],\r\n    ele_dmg_bonus: [6.3, 8.1, 9.9, 11.6, 13.4, 15.2, 17.0, 18.8, 20.6, 22.3, 24.1, 25.9, 27.7, 29.5, 31.3, 33.0, 34.8],\r\n    ele_mas: [25, 32, 39, 47, 54, 61, 68, 75, 82, 89, 97, 104, 111, 118, 125, 132, 139],\r\n    ener_rech: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7],\r\n    crit_rate: [4.2, 5.4, 6.6, 7.8, 9.0, 10.1, 11.3, 12.5, 13.7, 14.9, 16.1, 17.3, 18.5, 19.7, 20.8, 22.0, 23.2],\r\n    crit_dmg: [8.4, 10.8, 13.1, 15.5, 17.9, 20.3, 22.7, 25.0, 27.4, 29.8, 32.2, 34.5, 36.9, 39.3, 41.7, 44.1, 46.4],\r\n    heal_bonu: [4.8, 6.2, 7.6, 9.0, 10.3, 11.7, 13.1, 14.4, 15.8, 17.2, 18.6, 19.9, 21.3, 22.7, 24.0, 25.4, 26.8],\r\n  },\r\n  5: {\r\n    hp: [717, 920, 1123, 1326, 1530, 1733, 1936, 2139, 2342, 2545, 2749, 2952, 3155, 3358, 3561, 3764, 3967, 4171, 4374, 4577, 4780],\r\n    atk: [47, 60, 73, 86, 100, 113, 126, 139, 152, 166, 179, 192, 205, 219, 232, 245, 258, 272, 285, 298, 311],\r\n    hp_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    atk_: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    def_: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    phy_dmg_bonus: [8.7, 11.2, 13.7, 16.2, 18.6, 21.1, 23.6, 26.1, 28.6, 31, 33.5, 36, 38.5, 40.9, 43.4, 45.9, 48.4, 50.8, 53.3, 55.8, 58.3],\r\n    ele_dmg_bonus: [7.0, 9.0, 11.0, 12.9, 14.9, 16.9, 18.9, 20.9, 22.8, 24.8, 26.8, 28.8, 30.8, 32.8, 34.7, 36.7, 38.7, 40.7, 42.7, 44.6, 46.6],\r\n    ele_mas: [28, 36, 44, 52, 60, 68, 76, 84, 91, 99, 107, 115, 123, 131, 139, 147, 155, 163, 171, 179, 187],\r\n    ener_rech: [7.8, 10.0, 12.2, 14.4, 16.6, 18.8, 21.0, 23.2, 25.4, 27.6, 29.8, 32.0, 34.2, 36.4, 38.6, 40.8, 43.0, 45.2, 47.4, 49.6, 51.8],\r\n    crit_rate: [4.7, 6.0, 7.3, 8.6, 9.9, 11.3, 12.6, 13.9, 15.2, 16.6, 17.9, 19.2, 20.5, 21.8, 23.2, 24.5, 25.8, 27.1, 28.4, 29.8, 31.1],\r\n    crit_dmg: [9.3, 11.9, 14.6, 17.2, 19.9, 22.5, 25.5, 27.8, 30.5, 33.1, 35.8, 38.4, 41.1, 43.7, 46.3, 49.0, 51.6, 54.3, 56.9, 59.6, 62.2],\r\n    heal_bonu: [5.4, 6.9, 8.4, 10.0, 11.5, 13.0, 14.5, 16.1, 17.6, 19.1, 20.6, 22.2, 23.7, 25.2, 26.7, 28.3, 29.8, 31.3, 32.8, 34.4, 35.9],\r\n  }\r\n}\r\n\r\nconst ArtifactSubStatsData = {\r\n  hp: { 2: [50, 61, 72], 3: [100, 115, 129, 143], 4: [167, 191, 215, 239], 5: [209, 239, 269, 299] },\r\n  hp_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  atk: { 2: [3, 4, 5], 3: [7, 8, 9], 4: [11, 12, 14, 16], 5: [14, 16, 18, 19] },\r\n  atk_: { 2: [1.6, 2, 2.3], 3: [2.5, 2.8, 3.2, 3.5], 4: [3.3, 3.7, 4.2, 4.7], 5: [4.1, 4.7, 5.3, 5.8] },\r\n  def: { 2: [4, 5, 6], 3: [8, 9, 10, 11], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  def_: { 2: [2, 2.5, 2.9], 3: [3.1, 3.5, 3.9, 4.4], 4: [4.1, 4.7, 5.3, 5.8], 5: [5.1, 5.8, 6.6, 7.3] },\r\n  ele_mas: { 2: [7, 8, 9], 3: [10, 11, 13, 14], 4: [13, 15, 17, 19], 5: [16, 19, 21, 23] },\r\n  ener_rech: { 2: [1.8, 2.2, 2.6], 3: [2.7, 3.1, 3.5, 3.9], 4: [3.6, 4.1, 4.7, 5.2], 5: [4.5, 5.2, 5.8, 6.5] },\r\n  crit_rate: { 2: [1.1, 1.3, 1.6], 3: [1.6, 1.9, 2.1, 2.3], 4: [2.2, 2.5, 2.8, 3.1], 5: [2.7, 3.1, 3.5, 3.9] },\r\n  crit_dmg: { 2: [2.2, 2.6, 3.1], 3: [3.3, 3.7, 4.2, 4.7], 4: [4.4, 5, 5.6, 6.2], 5: [5.4, 6.2, 7, 7.8] },\r\n}\r\n\r\nconst ArtifactSlotsData = {\r\n  flower: { name: \"Flower of Life\", stats: [\"hp\"] },\r\n  plume: { name: \"Plume of Death\", stats: [\"atk\"] },\r\n  sands: { name: \"Sands of Eon\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"ener_rech\"] },\r\n  goblet: { name: \"Goblet of Eonothem\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"phy_dmg_bonus\", \"anemo_ele_dmg_bonus\", \"geo_ele_dmg_bonus\", \"electro_ele_dmg_bonus\", \"hydro_ele_dmg_bonus\", \"pyro_ele_dmg_bonus\", \"cryo_ele_dmg_bonus\",] },\r\n  circlet: { name: \"Circlet of Logos\", stats: [\"hp_\", \"def_\", \"atk_\", \"ele_mas\", \"crit_rate\", \"crit_dmg\", \"heal_bonu\"] },\r\n};\r\n\r\nexport {\r\n  ArtifactMainSlotKeys,\r\n  ArtifactSlotsData,\r\n  ArtifactData,\r\n  ArtifactDataImport,\r\n  ArtifactSubStatsData,\r\n  ArtifactStarsData,\r\n  ArtifactMainStatsData\r\n};\r\n","export default class ArtifactBase {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof ArtifactBase) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //returns {setKey:[slotKey...]}\r\n  static setToSlots = (artifacts) => {\r\n    let setToSlots = {};\r\n    Object.entries(artifacts).forEach(([key, art]) => {\r\n      if (!art) return\r\n      if (setToSlots[art.setKey]) setToSlots[art.setKey].push(key)\r\n      else setToSlots[art.setKey] = [key]\r\n    })\r\n    return setToSlots\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CharacterDatabase from '../Character/CharacterDatabase';\r\nimport SlotIcon from '../Components/SlotIcon';\r\nimport { ArtifactMainSlotKeys, ArtifactMainStatsData, ArtifactData, ArtifactSlotsData, ArtifactStarsData, ArtifactSubStatsData, ArtifactDataImport } from '../Data/ArtifactData';\r\nimport Stat from '../Stat';\r\nimport ConditionalsUtil from '../Util/ConditionalsUtil';\r\nimport { clampPercent, closeEnoughFloat, closeEnoughInt, deepClone } from '../Util/Util';\r\nimport ArtifactBase from './ArtifactBase';\r\nimport ArtifactDatabase from './ArtifactDatabase';\r\n\r\nexport default class Artifact {\r\n  //do not instantiate.\r\n  constructor() { if (this instanceof Artifact) throw Error('A static class cannot be instantiated.'); }\r\n\r\n  //SETS\r\n  static getDataImport = () => ArtifactDataImport\r\n  static getSetKeys = () => Object.keys(ArtifactData || {})\r\n  static getSetName = (key, defVal = \"\") => ArtifactData?.[key]?.name || defVal;\r\n  static getSetsByMaxStarEntries = (star) =>\r\n    Object.entries(ArtifactData || {}).filter(([, setobj]) => setobj.rarity[(setobj.rarity.length) - 1] === star)\r\n  static getPieces = (setKey, defVal = {}) => ArtifactData?.[setKey]?.pieces || defVal\r\n  static getPieceName = (setKey, slotKey, defVal = \"\") => this.getPieces(setKey)[slotKey] || defVal;\r\n  static getPieceIcon = (setKey, slotKey, defVal = null) => ArtifactData?.[setKey]?.icons?.[slotKey] || defVal;\r\n\r\n  //SETEFFECT\r\n  static getSetEffectsObj = (setKey, defVal = {}) => ArtifactData?.[setKey]?.setEffects || defVal\r\n  static getArtifactSetNumStats = (setKey, setNumKey, defVal = {}) =>\r\n    deepClone(this.getSetEffectsObj(setKey)?.[setNumKey]?.stats || defVal)\r\n  static getArtifactSetEffectsStats = (setToSlots) => {\r\n    let artifactSetEffect = []\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) =>\r\n      Object.entries(Artifact.getSetEffectsObj(setKey)).forEach(([setNumKey, value]) =>\r\n        parseInt(setNumKey) <= artArr.length && value.stats && Object.keys(value.stats).length &&\r\n        Object.entries(value.stats).forEach(([key, statVal]) =>\r\n          artifactSetEffect.push({ key, statVal }))))\r\n    return artifactSetEffect\r\n  }\r\n  static getSetEffects = (setToSlots) => {\r\n    let artifactSetEffect = {}\r\n    Object.entries(setToSlots).forEach(([setKey, artArr]) => {\r\n      let setNumKeys = Object.keys(this.getSetEffectsObj(setKey)).filter(setNumKey => parseInt(setNumKey) <= artArr.length)\r\n      if (setNumKeys.length)\r\n        artifactSetEffect[setKey] = setNumKeys\r\n    })\r\n    return artifactSetEffect\r\n  }\r\n\r\n  static getSetEffectText = (setKey, setNumKey, charFinalStats, defVal = \"\") => {\r\n    let setEffectText = this.getSetEffectsObj(setKey)?.[setNumKey]?.text\r\n    if (!setEffectText) return defVal\r\n    if (typeof setEffectText === \"function\")\r\n      return setEffectText(charFinalStats)\r\n    else if (setEffectText)\r\n      return setEffectText\r\n    return defVal\r\n  }\r\n  static getSetEffectConditional = (setKey, setNumKey, defVal = null) =>\r\n    this.getSetEffectsObj(setKey)?.[setNumKey]?.conditional || defVal\r\n\r\n  //SLOT\r\n  static getSlotKeys = () => Object.keys(ArtifactSlotsData || {})\r\n  static getSlotName = (slotKey, defVal = \"\") => ArtifactSlotsData?.[slotKey]?.name || defVal\r\n  static getSlotIcon = (slotKey, defVal = \"\") =>\r\n    (slotKey && SlotIcon[slotKey]) ? <FontAwesomeIcon icon={SlotIcon[slotKey]} key={slotKey} className=\"fa-fw\" /> : defVal\r\n  static getSlotMainStatKeys = (slotKey, defVal = []) => ArtifactSlotsData?.[slotKey]?.stats || defVal\r\n\r\n  static getSlotNameWithIcon = (slotKey, defVal = \"\") => {\r\n    if (!slotKey) return defVal;\r\n    let name = this.getSlotName(slotKey)\r\n    if (!name) return defVal;\r\n    let slotIcon = this.getSlotIcon(slotKey)\r\n    if (!slotIcon) return defVal;\r\n    return (<span>{slotIcon} {name}</span>)\r\n  }\r\n  static splitArtifactsBySlot = (databaseObj) =>\r\n    Object.fromEntries(this.getSlotKeys().map(slotKey =>\r\n      [slotKey, Object.values(databaseObj).filter(art => art.slotKey === slotKey)]))\r\n\r\n  //STARS\r\n  static getStars = () => Object.keys(ArtifactStarsData || {})\r\n  static getRarityArr = (setKey, defVal = []) => ArtifactData?.[setKey]?.rarity || defVal\r\n\r\n  //MAIN STATS\r\n  static getMainStatKeys = () => deepClone(ArtifactMainSlotKeys)\r\n  static getMainStatValues = (numStar, statKey, defVal = []) =>\r\n    ArtifactMainStatsData?.[numStar]?.[statKey] || defVal\r\n\r\n  static getMainStatValue = (key, numStars, level, defVal = 0) => {\r\n    let main = this.getMainStatValues(numStars, key)[level]\r\n    if (main) return main\r\n    else if (key?.includes(\"_ele_dmg_bonus\")) //because in the database its still stored as ele_dmg_bonus\r\n      return this.getMainStatValue(\"ele_dmg_bonus\", numStars, level, defVal)\r\n    return defVal\r\n  }\r\n\r\n  //SUBSTATS\r\n  static getBaseSubRollNumLow = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subsBaselow || defVal\r\n  static getBaseSubRollNumHigh = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.subBaseHigh || defVal\r\n  static getNumUpgradesOrUnlocks = (numStars, defVal = 0) => ArtifactStarsData?.[numStars]?.numUpgradesOrUnlocks || defVal\r\n  static getSubStatKeys = () => Object.keys(ArtifactSubStatsData || {})\r\n  static totalPossibleRolls = (numStars) => ArtifactStarsData[numStars] ?\r\n    (ArtifactStarsData[numStars].subBaseHigh + ArtifactStarsData[numStars].numUpgradesOrUnlocks) : 0;\r\n  static rollsRemaining = (level, numStars) =>\r\n    Math.ceil((numStars * 4 - level) / 4);\r\n  static numberOfSubstatUnlocked = (state) =>\r\n    state.substats.reduce((sum, cur) =>\r\n      sum + (cur && cur.value ? 1 : 0), 0);\r\n  static getSubstatRollData = (subStatKey, numStars) => (subStatKey && numStars) ?\r\n    ArtifactSubStatsData[subStatKey][numStars] : []\r\n  static getRolls(value, rollData, float = false) {\r\n    let roll = null;\r\n    let maxNumRoll = Math.round(value / rollData[0])\r\n    if (!maxNumRoll) return null;\r\n    let rollOption = (val, arr) => {\r\n      if (roll) return;\r\n      if (arr.length) {\r\n        if (arr.length > maxNumRoll) return;\r\n        let sum = arr.reduce((accu, v) => accu + v, 0)\r\n        if (float) {\r\n          if (sum - val >= 0.101) return\r\n          if (closeEnoughFloat(sum, val)) {\r\n            roll = arr;\r\n            return;\r\n          }\r\n        } else {\r\n          if (sum - val > 1) return\r\n          if (closeEnoughInt(sum, val)) {\r\n            roll = arr;\r\n            return\r\n          }\r\n        }\r\n      }\r\n      rollData.slice().reverse().forEach(roll => {\r\n        rollOption(value, [...arr, roll])\r\n      })\r\n    }\r\n    rollOption(value, [])\r\n    return roll;\r\n  }\r\n  static validateSubStat(state, substat) {\r\n    if (!substat || !substat.value) return { valid: true }\r\n    let value = parseFloat(substat.value);\r\n    if (isNaN(value)) return { valid: false, msg: `Invalid Input` }\r\n    let numStars = state.numStars\r\n    if (!numStars) return { valid: false, msg: `Artifact Stars not set.` }\r\n    let isFloat = Stat.getStatUnit(substat.key) === \"%\"\r\n    let rollData = this.getSubstatRollData(substat.key, numStars);\r\n    let rolls = this.getRolls(value, rollData, isFloat)\r\n\r\n    if (!rolls || rolls.length === 0) return { valid: false, msg: `Substat cannot be rolled 0 times.` };\r\n    let totalAllowableRolls = ArtifactStarsData[numStars]?.numUpgradesOrUnlocks - (4 - ArtifactStarsData[numStars]?.subBaseHigh) + 1;//+1 for its base roll\r\n    if (rolls.length > totalAllowableRolls) return { valid: false, msg: `Substat cannot be rolled more than ${totalAllowableRolls} times.` };\r\n\r\n    let min = rollData[0] * rolls.length;\r\n    let max = rollData[rollData.length - 1] * rolls.length;\r\n    return { valid: true, efficiency: clampPercent(((value - min) / (max - min)) * 100), msg: `This substat was rolled ${rolls.length} time(s). Values: [${rolls.join(\", \")}]`, rolls }\r\n  }\r\n\r\n  //ARTIFACT IN GENERAL\r\n  static artifactValidation(state) {\r\n    let currentEfficiency = 0, maximumEfficiency = 0;\r\n    let subStatValidations = state.substats.map(substat => Artifact.validateSubStat(state, substat));\r\n    for (const substat of subStatValidations)\r\n      if (!substat.valid)\r\n        return { subStatValidations, valid: false, msg: \"One of the substat is invalid.\", currentEfficiency, maximumEfficiency }\r\n\r\n    //if a substat has >=2 rolls, when not all of them have been unlocked//if a substat has >=2 rolls, when not all of them have been unlocked\r\n    if (subStatValidations.some(substat => substat?.rolls?.length > 1) && subStatValidations.some((substat) => !substat.rolls))\r\n      return { subStatValidations, valid: false, msg: \"One of the substat have >1 rolls, but not all substats are unlocked.\", currentEfficiency, maximumEfficiency }\r\n    let currentNumOfRolls = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls ? cur.rolls.length : 0), 0);\r\n    let rollsRemaining = Artifact.rollsRemaining(state.level, state.numStars);\r\n    let totalPossbleRolls = Artifact.totalPossibleRolls(state.numStars);\r\n\r\n    if ((currentNumOfRolls + rollsRemaining) > totalPossbleRolls)\r\n      return { subStatValidations, valid: false, msg: `Current number of substat rolles(${currentNumOfRolls}) + Rolls remaining from level up (${rollsRemaining}) is greater than the total possible roll of this artifact (${totalPossbleRolls}) `, currentEfficiency, maximumEfficiency }\r\n\r\n    let totalCurrentEfficiency = subStatValidations.reduce((sum, cur) => sum + (cur.valid && cur.rolls && cur.efficiency ? (cur.efficiency * cur.rolls.length) : 0), 0);\r\n    currentEfficiency = clampPercent(totalCurrentEfficiency / totalPossbleRolls);\r\n    maximumEfficiency = clampPercent((totalCurrentEfficiency + rollsRemaining * 100) / totalPossbleRolls);\r\n    return { valid: true, subStatValidations, currentNumOfRolls, rollsRemaining, totalPossbleUpgrade: totalPossbleRolls, currentEfficiency, maximumEfficiency }\r\n  }\r\n\r\n  static setToSlots = ArtifactBase.setToSlots;\r\n\r\n  static getConditionalStats = (setKey, setNumKey, conditionalNum, defVal = {}) => {\r\n    if (!conditionalNum) return defVal\r\n    let conditional = this.getSetEffectConditional(setKey, setNumKey)\r\n    if (!conditional) return defVal\r\n    let [stats, stacks] = ConditionalsUtil.getConditionalProp(conditional, \"stats\", conditionalNum)\r\n    if (!stacks) return defVal\r\n    return Object.fromEntries(Object.entries(stats).map(([key, val]) => [key, val * stacks]))\r\n  }\r\n\r\n  static getAllArtifactSetEffectsObj = (artifactConditionals) => {\r\n    let ArtifactSetEffectsObj = {};\r\n    Object.entries(ArtifactData).forEach(([setKey, setObj]) => {\r\n      let setEffect = {}\r\n      let hasSetEffect = false\r\n      if (setObj.setEffects)\r\n        Object.entries(setObj.setEffects).forEach(([setNumKey, setEffectObj]) => {\r\n          if (setEffectObj.stats && Object.keys(setEffectObj.stats).length > 0) {\r\n            setEffect[setNumKey] = deepClone(setEffectObj.stats)\r\n            hasSetEffect = true\r\n          }\r\n          if (setEffectObj.conditional) {\r\n            let conditionalNum = ConditionalsUtil.getConditionalNum(artifactConditionals, { srcKey: setKey, srcKey2: setNumKey })\r\n            if (conditionalNum) {\r\n              let condStats = this.getConditionalStats(setKey, setNumKey, conditionalNum)\r\n              if (Object.keys(condStats) > 0) {\r\n                setEffect[setNumKey] = deepClone(condStats)\r\n                hasSetEffect = true\r\n              }\r\n            }\r\n          }\r\n        })\r\n      if (hasSetEffect)\r\n        ArtifactSetEffectsObj[setKey] = setEffect;\r\n    })\r\n    return ArtifactSetEffectsObj\r\n  }\r\n\r\n  //database manipulation\r\n  static equipArtifactOnChar(artifactId, characterId) {\r\n    let art = ArtifactDatabase.getArtifact(artifactId);\r\n    if (!art) return;\r\n    let currentLocation = art.location;\r\n    let intendedLocation = (characterId || \"\")\r\n    if (currentLocation === intendedLocation) return;\r\n    let slotKey = art.slotKey\r\n    let artifactToSwapWithid = CharacterDatabase.getArtifactIDFromSlot(intendedLocation, slotKey)\r\n    let artifactToSwapWith = ArtifactDatabase.getArtifact(artifactToSwapWithid)\r\n\r\n    //update artifact\r\n    if (artifactToSwapWith) ArtifactDatabase.swapLocations(art, artifactToSwapWith)\r\n    else ArtifactDatabase.moveToNewLocation(art.id, intendedLocation)\r\n\r\n    //update Character\r\n    if (intendedLocation)\r\n      CharacterDatabase.equipArtifact(intendedLocation, art)\r\n\r\n    if (currentLocation) {\r\n      if (artifactToSwapWith)\r\n        CharacterDatabase.equipArtifact(currentLocation, artifactToSwapWith)\r\n      else\r\n        CharacterDatabase.unequipArtifactOnSlot(currentLocation, slotKey)\r\n    }\r\n  }\r\n}","import { clamp } from \"./Util\";\r\n\r\nexport default class ConditionalsUtil {\r\n  constructor() { if (this instanceof ConditionalsUtil) throw Error('A static class cannot be instantiated.'); }\r\n  static getConditionalNum(conditionals, srcKeyObj) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (conditionals)\r\n      return conditionals.find(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))?.conditionalNum || 0\r\n  }\r\n  static setConditional(conditionals, srcKeyObj, conditionalNum) {\r\n    let { srcKey, srcKey2 } = srcKeyObj\r\n    if (!conditionals) conditionals = []\r\n    let index = conditionals.findIndex(cond => cond.srcKey === srcKey && (!srcKey2 || (srcKey2 && cond.srcKey2 === srcKey2)))\r\n    if (!conditionalNum && index >= 0) {\r\n      //setting conditionalNum to 0 deletes the element\r\n      conditionals.splice(index, 1);\r\n    } else {\r\n      let newCond = { srcKey, conditionalNum }\r\n      if (srcKey2) newCond.srcKey2 = srcKey2\r\n      if (index >= 0)\r\n        conditionals[index] = newCond\r\n      else\r\n        conditionals.push(newCond)\r\n    }\r\n    return conditionals\r\n  }\r\n  static getConditionalProp(conditional, fieldName, conditionalNum, defVal = [{}, 0]) {\r\n    if (Array.isArray(conditional)) {\r\n      //multiconditional\r\n      let selectedConditionalNum = conditionalNum\r\n      let selectedConditional = null\r\n      for (const curConditional of conditional) {\r\n        if (selectedConditionalNum > curConditional.maxStack) selectedConditionalNum -= curConditional.maxStack\r\n        else {\r\n          selectedConditional = curConditional;\r\n          break;\r\n        }\r\n      }\r\n      if (!selectedConditional) return defVal\r\n      let stacks = clamp(selectedConditionalNum, 1, selectedConditional.maxStack)\r\n      return [selectedConditional[fieldName], stacks]\r\n    } else {\r\n      //condtional with stacks\r\n      let stacks = clamp(conditionalNum, 1, conditional.maxStack)\r\n      return [conditional[fieldName], stacks]\r\n    }\r\n  }\r\n}"],"sourceRoot":""}